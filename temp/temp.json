[
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/Auth.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"common-height\">\n    <Layout v-if=\"/^\\/app/.test($route.path)\" />\n    <LayoutUser v-if=\"/^\\/user/.test($route.path)\" />\n    <checkUpdate v-if=\"checkUpdateShow&&$route.name!='tray'\"\n                 @updateCenterDialogVisible=\"updateCenterDialogVisibleValue\"\n                 ref=\"centerDialogVisibleValue\" />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapState } from 'vuex';\nimport Layout from '@/layouts';\nimport LayoutUser from '@/layouts/user';\nimport Ws from '@/utils/ws';\nimport checkUpdate from '@/layouts/user/components/checkUpdate';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Layout,\n    LayoutUser,\n    checkUpdate\n  },\n  data() {\n    //这里存放数据\n    return {\n      checkUpdateShow: false,\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      loginInfo: obj => {\n        return obj.state.loginInfo;\n      },\n      versionUpdateInfo: obj => {\n        return obj.state.versionUpdateInfo\n      }\n    }),\n    isMacOS(){\n      return process.platform==='darwin'\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    versionUpdateInfo:{\n      immediate: true,\n      deep: true,\n      handler: function (v) {\n        if (v.versionSign && v.versionSign < 1) {\n          // 有更新且为强制更新，需要弹出提示框\n          this.updateInfo = v.updateInfo.data;\n          this.$set(this, 'checkUpdateShow', true);\n          this.$forceUpdate();\n          this.$nextTick(() => {\n            this.$refs.centerDialogVisibleValue.init({\n              ...v.updateInfo,\n              centerDialogVisible: true\n            });\n          });\n        } else {\n          this.checkUpdateShow = false;\n        }\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    updateCenterDialogVisibleValue(val) {\n      this.checkUpdateShow = val;\n    },\n    getNetStatus() {\n      let that=this;\n      console.log('navigator.onLine', navigator.onLine);\n      window.addEventListener('online',that._online);\n      window.addEventListener('offline',that._offline);\n    },\n    _online(){\n      this.clearoffLineTimer();\n      this.$store.dispatch(\"NET_STATUS\",{ netStatus: 'online' })\n      // if (Ws.socket.readyState != 1) {\n      Ws.reConnect();\n      // }\n      console.log('在线');\n      console.log('audio-window-online');\n      const { ipcRenderer } = require('electron');\n      ipcRenderer.send('audio-window-online');\n    },\n    _offline(){\n      let that=this;\n      that.$store.dispatch(\"NET_STATUS\",{ netStatus: 'offline' })\n      console.log('离线');\n      console.log('audio-window-offline');\n      const { ipcRenderer } = require('electron');\n      ipcRenderer.send('audio-window-offline');\n      that.offLineTimer = setTimeout(() => {\n        if (!navigator.onLine && that.$store.state.common.isAudioWindowDisplay) {\n          console.log('audio-window-socket-close');\n          ipcRenderer.send('audio-window-socket-close');\n        }\n        that.clearoffLineTimer();\n      }, 30000);\n      Ws.close(true);\n    },\n    clearoffLineTimer(){\n      if(this.offLineTimer){\n        clearTimeout(this.offLineTimer);\n        this.offLineTimer=null;\n      }\n    },\n    handleKeydown(ev) {\n      // console.log(ev.metaKey, \":\", ev.keyCode);\n      let contents = this.$remote.getCurrentWebContents();\n      if (ev.metaKey && ev.keyCode == 67) {\n        contents.copy();\n      }\n      if (ev.metaKey && ev.keyCode == 86) {\n        contents.paste();\n      }\n      if (ev.metaKey && ev.keyCode == 88) {\n        contents.cut();\n      }\n      if (ev.metaKey && ev.keyCode == 65) {\n        contents.selectAll();\n      }\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.getNetStatus();\n    this.isMacOS&&document.addEventListener('keydown', this.handleKeydown);\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    this.isMacOS&&document.removeEventListener('keydown', this.handleKeydown);\n    this.clearoffLineTimer();\n    window.removeEventListener('online',this._online);\n    window.removeEventListener('offline',this._offline);\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"common-height\">\n    <Layout v-if=\"/^\\/app/.test($route.path)\" />\n    <LayoutUser v-if=\"/^\\/user/.test($route.path)\" />\n    <checkUpdate v-if=\"checkUpdateShow&&$route.name!='tray'\"\n                 @updateCenterDialogVisible=\"updateCenterDialogVisibleValue\"\n                 ref=\"centerDialogVisibleValue\" />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapState } from 'vuex';\nimport Layout from '@/layouts';\nimport LayoutUser from '@/layouts/user';\nimport Ws from '@/utils/ws';\nimport checkUpdate from '@/layouts/user/components/checkUpdate';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Layout,\n    LayoutUser,\n    checkUpdate\n  },\n  data() {\n    //这里存放数据\n    return {\n      checkUpdateShow: false,\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      loginInfo: obj => {\n        return obj.state.loginInfo;\n      },\n      versionUpdateInfo: obj => {\n        return obj.state.versionUpdateInfo\n      }\n    }),\n    isMacOS(){\n      return process.platform==='darwin'\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    versionUpdateInfo:{\n      immediate: true,\n      deep: true,\n      handler: function (v) {\n        if (v.versionSign && v.versionSign < 1) {\n          // 有更新且为强制更新，需要弹出提示框\n          this.updateInfo = v.updateInfo.data;\n          this.$set(this, 'checkUpdateShow', true);\n          this.$forceUpdate();\n          this.$nextTick(() => {\n            this.$refs.centerDialogVisibleValue.init({\n              ...v.updateInfo,\n              centerDialogVisible: true\n            });\n          });\n        } else {\n          this.checkUpdateShow = false;\n        }\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    updateCenterDialogVisibleValue(val) {\n      this.checkUpdateShow = val;\n    },\n    getNetStatus() {\n      let that=this;\n      console.log('navigator.onLine', navigator.onLine);\n      window.addEventListener('online',that._online);\n      window.addEventListener('offline',that._offline);\n    },\n    _online(){\n      this.clearoffLineTimer();\n      this.$store.dispatch(\"NET_STATUS\",{ netStatus: 'online' })\n      // if (Ws.socket.readyState != 1) {\n      Ws.reConnect();\n      // }\n      console.log('在线');\n      console.log('audio-window-online');\n      const { ipcRenderer } = require('electron');\n      ipcRenderer.send('audio-window-online');\n    },\n    _offline(){\n      let that=this;\n      that.$store.dispatch(\"NET_STATUS\",{ netStatus: 'offline' })\n      console.log('离线');\n      console.log('audio-window-offline');\n      const { ipcRenderer } = require('electron');\n      ipcRenderer.send('audio-window-offline');\n      that.offLineTimer = setTimeout(() => {\n        if (!navigator.onLine && that.$store.state.common.isAudioWindowDisplay) {\n          console.log('audio-window-socket-close');\n          ipcRenderer.send('audio-window-socket-close');\n        }\n        that.clearoffLineTimer();\n      }, 30000);\n      Ws.close(true);\n    },\n    clearoffLineTimer(){\n      if(this.offLineTimer){\n        clearTimeout(this.offLineTimer);\n        this.offLineTimer=null;\n      }\n    },\n    handleKeydown(ev) {\n      // console.log(ev.metaKey, \":\", ev.keyCode);\n      let contents = this.$remote.getCurrentWebContents();\n      if (ev.metaKey && ev.keyCode == 67) {\n        contents.copy();\n      }\n      if (ev.metaKey && ev.keyCode == 86) {\n        contents.paste();\n      }\n      if (ev.metaKey && ev.keyCode == 88) {\n        contents.cut();\n      }\n      if (ev.metaKey && ev.keyCode == 65) {\n        contents.selectAll();\n      }\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.getNetStatus();\n    this.isMacOS&&document.addEventListener('keydown', this.handleKeydown);\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    this.isMacOS&&document.removeEventListener('keydown', this.handleKeydown);\n    this.clearoffLineTimer();\n    window.removeEventListener('online',this._online);\n    window.removeEventListener('offline',this._offline);\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n</style>\n",
    "cssJson": [
      {}
    ]
  },
  {
    "type": "less",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/sytles/common.less",
    "importInfo": "@import './colorUi.less';\n@import './reset.less';\n@import './elementUi.less';",
    "originData": "@import './colorUi.less';\n@import './reset.less';\n@import './elementUi.less';\n\nbody {\n  height: 100vh;\n  // border: #ddd solid 1px;\n  // border-left: rgb(48, 56, 66) solid 1px;\n  box-sizing: border-box;\n  overflow: hidden;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n\n  //  width: calc(100% - 5px);\n  // height: calc(100% - 5px);\n  //  background-color: rgba(0,255,255,1);\n  // overflow: hidden;\n  // box-shadow:2px 2px 2px rgb(128, 128, 128) , -2px -2px 2px rgb(128, 128, 128),-2px 2px 2px rgb(128, 128, 128), 2px -2px 2px rgb(128, 128, 128);\n}\nhtml {\n  background-color: rgba(0, 0, 0, 0);\n  padding: 0;\n  box-sizing: border-box;\n  overflow: hidden;\n}\n:focus{\n  outline: none;\n}\n.common-height {\n  height: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n}\na {\n  text-decoration: none;\n}\n.layout {\n  min-height: 100vh;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 1);\n  overflow: auto;\n}\n.user {\n  overflow: auto;\n}\n.container {\n  // min-height: 98vh;\n  min-height: 100vh;\n}\n.commont-tab-wrap {\n  display: inline-block;\n  text-align: center;\n  font-size: 16px;\n  color: #151f34;\n  border: 1px solid #2f54eb;\n  border-radius: 3px;\n  li {\n    float: left;\n    line-height: 22px;\n    padding: 10px 22px;\n    position: relative;\n    border-right: 2px;\n    user-select: none;\n    &:not(:last-child) {\n      &::after {\n        content: '';\n        display: inline-block;\n        position: absolute;\n        width: 2px;\n        height: 10px;\n        background: rgba(45, 83, 235, 1);\n        border-radius: 1px;\n        right: -1px;\n        top: 50%;\n        transform: translateY(-50%);\n      }\n    }\n    &.router-link-active {\n      background-color: #2f54eb;\n      border-radius: 3px;\n      color: #fff;\n      &::after {\n        display: none;\n      }\n    }\n  }\n}\n.el-form--label-top .el-form-item__label {\n  padding-bottom: 0;\n}\n\n.el-form-item__label {\n  color: #151f34;\n}\n.el-input__inner,\n.el-textarea__inner {\n  background: rgba(247, 247, 250, 1);\n  box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  border-radius: 4px;\n  border: none;\n  color: #151f34;\n}\n.el-textarea {\n  .el-input__count {\n    background: rgba(247, 247, 250, 1);\n  }\n}\n.el-radio__inner {\n  border: 1px solid rgba(21, 31, 52, 1);\n}\n\n.el-main {\n  padding: 0;\n}\n\n// ws.js  window.vm.$alert样式-你已退出DiDi(居中显示)\n.el-message-box--center {\n  width: 270px !important;\n  padding-top: 0 !important;\n\n  .el-message-box__header {\n    padding-top: 10px !important;\n  }\n  /deep/ .el-message-box__title {\n    font-size: 14px;\n    color: #333;\n    font-weight: 500;\n  }\n  /deep/ .el-message-box__headerbtn {\n    top: 10px;\n  }\n  /deep/ .el-message-box__message {\n    margin: 15px auto 22px;\n  }\n  /deep/ .el-button--small {\n    padding: 7px 15px;\n  }\n  /deep/ .el-button--primary {\n    width: 84px;\n    height: 28px;\n    font-weight: 400;\n    color: #ffffff;\n  }\n}\n",
    "cssJson": {
      "body": {
        "height": "100vh",
        "box-sizing": "border-box",
        "overflow": "hidden",
        "-webkit-user-select": "none",
        "-moz-user-select": "none",
        "-ms-user-select": "none",
        "user-select": "none"
      },
      "html": {
        "background-color": "rgba(0, 0, 0, 0)",
        "padding": "0",
        "box-sizing": "border-box",
        "overflow": "hidden"
      },
      ":focus": {
        "outline": "none"
      },
      ".common-height": {
        "height": "100%",
        "box-sizing": "border-box",
        "overflow": "hidden"
      },
      "a": {
        "text-decoration": "none"
      },
      ".layout": {
        "min-height": "100vh",
        "height": "100%",
        "background-color": "rgba(255, 255, 255, 1)",
        "overflow": "auto"
      },
      ".user": {
        "overflow": "auto"
      },
      ".container": {
        "min-height": "100vh"
      },
      ".commont-tab-wrap": {
        "display": "inline-block",
        "text-align": "center",
        "font-size": "16px",
        "color": "#151f34",
        "border": "1px solid #2f54eb",
        "border-radius": "3px",
        "li": {
          "float": "left",
          "line-height": "22px",
          "padding": "10px 22px",
          "position": "relative",
          "border-right": "2px",
          "user-select": "none",
          "&:not(:last-child)": {
            "&::after": {
              "content": "''",
              "display": "inline-block",
              "position": "absolute",
              "width": "2px",
              "height": "10px",
              "background": "rgba(45, 83, 235, 1)",
              "border-radius": "1px",
              "right": "-1px",
              "top": "50%",
              "transform": "translateY(-50%)"
            }
          },
          "&.router-link-active": {
            "background-color": "#2f54eb",
            "border-radius": "3px",
            "color": "#fff",
            "&::after": {
              "display": "none"
            }
          }
        }
      },
      ".el-form--label-top .el-form-item__label": {
        "padding-bottom": "0"
      },
      ".el-form-item__label": {
        "color": "#151f34"
      },
      ".el-input__inner,.el-textarea__inner": {
        "background": "rgba(247, 247, 250, 1)",
        "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
        "border-radius": "4px",
        "border": "none",
        "color": "#151f34"
      },
      ".el-textarea": {
        ".el-input__count": {
          "background": "rgba(247, 247, 250, 1)"
        }
      },
      ".el-radio__inner": {
        "border": "1px solid rgba(21, 31, 52, 1)"
      },
      ".el-main": {
        "padding": "0"
      },
      ".el-message-box--center": {
        "width": "270px !important",
        "padding-top": "0 !important",
        ".el-message-box__header": {
          "padding-top": "10px !important"
        },
        "/deep/ .el-message-box__title": {
          "font-size": "14px",
          "color": "#333",
          "font-weight": "500"
        },
        "/deep/ .el-message-box__headerbtn": {
          "top": "10px"
        },
        "/deep/ .el-message-box__message": {
          "margin": "15px auto 22px"
        },
        "/deep/ .el-button--small": {
          "padding": "7px 15px"
        },
        "/deep/ .el-button--primary": {
          "width": "84px",
          "height": "28px",
          "font-weight": "400",
          "color": "#ffffff"
        }
      }
    }
  },
  {
    "type": "less",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/sytles/reset.less",
    "importInfo": null,
    "originData": "\n/*\nYUI 3.18.1 (build f7e7bcb)\nCopyright 2014 Yahoo! Inc. All rights reserved.\nLicensed under the BSD License.\nhttp://yuilibrary.com/license/\n*/\nhtml {\n  color: #000;\n  background: #fff;\n  font-size: 14px;\n  // font-family: 'Source Han Sans';\n}\n\nbody,\ndiv,\ndl,\ndt,\ndd,\nul,\nol,\nli,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\npre,\ncode,\nform,\nfieldset,\nlegend,\ninput,\ntextarea,\np,\nblockquote,\nth,\ntd {\n  margin: 0;\n  padding: 0;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\nfieldset,\nimg {\n  border: 0;\n}\n\naddress,\ncaption,\ncite,\ncode,\ndfn,\n// em,\n// strong,\nth,\nvar {\n  font-style: normal;\n  font-weight: normal;\n}\n\nol,\nul {\n  list-style: none;\n}\n\ncaption,\nth {\n  text-align: left;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: 100%;\n  font-weight: normal;\n}\n\nq:before,\nq:after {\n  content: '';\n}\n\nabbr,\nacronym {\n  border: 0;\n  font-variant: normal;\n}\n\nsup {\n  vertical-align: text-top;\n}\n\nsub {\n  vertical-align: text-bottom;\n}\n\ninput,\ntextarea,\nselect {\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  *font-size: 100%;\n}\n\nlegend {\n  color: #000;\n}\n\n#yui3-css-stamp.cssreset {\n  display: none;\n}\n#talkbubblee {\n  // line-height: 22px !important;\n  word-break: break-word;\n  white-space: pre-wrap;\n  width: fit-content !important;\n  box-sizing: border-box;\n}\n#talkbubble {\n  // line-height: 22px !important;\n  word-break: break-word;\n  white-space: pre-wrap;\n  width: fit-content !important;\n  box-sizing: border-box;\n}\n.others-msg,\n.other-msg {\n  .quoteBubble {\n    // margin-left: 20px !important;\n    float: left !important;\n  }\n}\n.quoteBubble {\n  margin-right: 10px;\n  margin-left: 10px;\n  float: right;\n  word-break: break-word;\n  white-space: pre-wrap;\n  width: fit-content;\n  span,\n  label {\n    vertical-align: top;\n  }\n  img {\n    max-width: 50px;\n  }\n}\n#talk,\n.member-icon img,\n.infotime {\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  -khtml-user-select: none;\n  user-select: none;\n  -webkit-user-select: none;\n}\n// 禁止跨消息复制 @mousedown\n// #text {\n//   -webkit-user-select: text;\n//   user-select: text;\n// }\n#talk .member-icon {\n  pointer-events: none;\n}\n\n.mess-head {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.vlogo {\n  padding-right: 5px;\n}\n.audio-wrap {\n  cursor: pointer;\n  img {\n    height: 20px;\n  }\n  img,\n  span {\n    vertical-align: middle;\n  }\n}\n.user-sign {\n  width: 175px;\n  #text {\n    img {\n      width: 16px;\n    }\n  }\n  p {\n    max-width: 50px;\n    display: inline;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    -webkit-line-clamp: 1;\n    -webkit-box-orient: vertical;\n    -webkit-box-flex: 1;\n  }\n  .notify {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 1;\n    -webkit-box-orient: vertical;\n    -webkit-box-flex: 1;\n  }\n}\n.serach-input {\n  .el-input__inner {\n    background: #fff;\n    height: 25px;\n    line-height: 26px;\n    border-radius: 13px;\n  }\n  .el-input__prefix,\n  .el-input__suffix {\n    top: 0px;\n  }\n}\n#talkbubble {\n  width: auto;\n  //   border-radius: 5px !important;\n  .fileBox {\n    line-height: 20px;\n  }\n\n  .imgMsg {\n    cursor: pointer;\n    line-height: 10px;\n    border: 1px solid #E4E4E4;\n    border-radius: 0 6px 6px 6px;\n    img {\n      max-width: 120px;\n      //    max-height: 120px;\n      border-radius: 0 6px 6px 6px;\n    }\n  }\n}\n#talkbubblee {\n  width: auto;\n  // border-radius: 5px !important;\n  .fileBox {\n    line-height: 20px;\n  }\n  .imgMsg {\n    cursor: pointer;\n    line-height: 10px;\n    border: 1px solid #E4E4E4;\n    border-radius: 6px 0 6px 6px;\n\n    img {\n      max-width: 120px;\n      //    max-height: 120px;\n      border-radius: 6px 0 6px 6px;\n    }\n  }\n}\n\n.noDrag {\n  -webkit-app-region: no-drag;\n}\n.drag {\n  -webkit-app-region: drag;\n}\n.message .mess-header span:nth-child(2) {\n  margin: 0 !important;\n}\n.secretKeyArea {\n  textarea {\n    border: #e5e5e5 solid 1px;\n    box-shadow: none;\n  }\n}\n.load-border span {\n  cursor: pointer;\n}\n\n.el-checkbox__inner {\n  border-radius: 20px;\n}\n.hidden {\n  display: none !important;\n  height: 0;\n  .el-checkbox__inner {\n    display: none;\n  }\n}\n.visibilityHid {\n  visibility: hidden !important;\n  height: 0;\n  .el-checkbox__inner {\n    display: none;\n  }\n}\n\n.videoMsg {\n  line-height: 10px;\n  cursor: pointer;\n}\n.mess-detail-self .mess-words {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap-reverse;\n}\n.quitip {\n  width: 90%;\n}\n.quitips {\n  width: 200px;\n}\n.quoteEmoji {\n  width: 15px !important;\n}\n.imgBubble {\n  padding: 3px !important;\n}\n\n.pop-video {\n  padding: 0px !important;\n}\n\n.red {\n  color: red;\n}\n.blue {\n  color: #5882f4 !important;\n}\n.pointer {\n  cursor: pointer;\n}\n.mess-header {\n  background: #f6f6f6 !important;\n}\n.groupavatar .user-uploader-icon {\n  // font-size: 30px;\n  font-size: 44px;\n  color: #ddd;\n}\n.demo-block {\n  .el-button--primary,\n  .el-button--default {\n    height: 40px !important;\n  }\n  .head-image {\n    // width: 30px;\n    // height: 30px;\n    width: 44px;height: 44px;\n  }\n}\n.cropper-dialog .el-dialog__body {\n  height: 280px !important;\n}\n.contact-new-friends .el-loading-mask {\n  position: fixed;\n  left: 331px;\n  top: 50px;\n}\n\n\n.levelAll {\n  background-size: contain;\n  display: inline-block;\n}\n.maskVisible {\n  top: 5px;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  z-index: 1000;\n  position: absolute;\n  width: 98%;\n  background: #fff;\n  opacity: 0.8;\n  border: #ddd dashed 1px;\n  height: calc(100vh - 78px);\n  left: 1%;\n}\n.level-icon {\n  .goldenBg {\n    padding: 0 3px !important;\n  }\n  .levelbox {\n    padding: 0;\n  }\n}\n.group-member-name-class {\n  justify-content: flex-end;\n  height: 18px;\n}\n.others-msg {\n  .group-member-name-class {\n    justify-content: flex-start !important;\n  }\n}\n.other-msg {\n  .group-member-name-class {\n    justify-content: flex-start !important;\n  }\n}\n.mess-talk-self {\n  margin-bottom: 20px;\n}\n.reEdit {\n  color: #5882f4;\n  padding-left: 10px;\n  cursor: pointer;\n}\n.chatInfo{\n  text-align: center;\n  img.avater{\n    border-radius: 30px;\n    width: 60px;\n    height: 60px;\n  }\n  p{\n    margin:8px 0;\n    font-size: 16px;\n    color: #333;\n  }\n  span{\n    color: rgba(0, 0, 0, 0.3);\n    font-size:12px;\n  }\n  margin:10px 0 20px;\n}\n.invitebtn {\n  background: rgba(47, 84, 235, 0.1);\n  width: 100px;\n  height: 36px;\n  line-height: 36px;\n  text-align: center;\n  margin: 10px auto;\n  border-radius: 5px;\n  color: #506FF5;\n  cursor: pointer;\n  font-size: 13px;\n}\n.ql-editor.ql-blank::before{\n  font-style: normal !important;\n  color: rgba(0, 0, 0, 0.3) !important;\n}\n\n.el-drawer.rtl {\n  animation: rtl-drawer-out 0s\n}\n\n.el-drawer__open .el-drawer.rtl {\n  animation: rtl-drawer-in 0s 1ms\n}\n\n.img_12{\n  width: 12px;height: 12px;\n}\n.img_13{\n  width: 13px;height: 13px;\n}\n.img_14{\n  width: 14px;height: 14px;\n}\n.img_15{\n  width: 15px;height: 15px;\n}\n.img_16{\n  width: 16px;height: 16px;\n}\n.img_17{\n  width: 17px;height: 17px;\n}\n.img_18{\n  width: 18px;height: 18px;\n}\n.img_42{\n  width: 42px;height: 42px;\n}\n.img_search{\n  margin-top: 30px;\n  width:80px;height:80px;\n}\n.select_box{\n  /deep/ .el-input--mini .el-input__icon{\n    line-height: inherit;\n  }\n}",
    "cssJson": {
      "html": {
        "color": "#000",
        "background": "#fff",
        "font-size": "14px"
      },
      "body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td": {
        "margin": "0",
        "padding": "0"
      },
      "table": {
        "border-collapse": "collapse",
        "border-spacing": "0"
      },
      "fieldset,img": {
        "border": "0"
      },
      "address,caption,cite,code,dfn,th,var": {
        "font-style": "normal",
        "font-weight": "normal"
      },
      "ol,ul": {
        "list-style": "none"
      },
      "caption,th": {
        "text-align": "left"
      },
      "h1,h2,h3,h4,h5,h6": {
        "font-size": "100%",
        "font-weight": "normal"
      },
      "q:before,q:after": {
        "content": "''"
      },
      "abbr,acronym": {
        "border": "0",
        "font-variant": "normal"
      },
      "sup": {
        "vertical-align": "text-top"
      },
      "sub": {
        "vertical-align": "text-bottom"
      },
      "input,textarea,select": {
        "font-family": "inherit",
        "font-size": "inherit",
        "font-weight": "inherit",
        "*font-size": "100%"
      },
      "legend": {
        "color": "#000"
      },
      "#yui3-css-stamp.cssreset": {
        "display": "none"
      },
      "#talkbubblee": {
        "word-break": "break-word",
        "white-space": "pre-wrap",
        "width": "fit-content !important",
        "box-sizing": "border-box",
        ".fileBox": {
          "line-height": "20px"
        },
        ".imgMsg": {
          "cursor": "pointer",
          "line-height": "10px",
          "border": "1px solid #E4E4E4",
          "border-radius": "6px 0 6px 6px",
          "img": {
            "max-width": "120px",
            "border-radius": "6px 0 6px 6px"
          }
        }
      },
      "#talkbubble": {
        "word-break": "break-word",
        "white-space": "pre-wrap",
        "width": "fit-content !important",
        "box-sizing": "border-box",
        ".fileBox": {
          "line-height": "20px"
        },
        ".imgMsg": {
          "cursor": "pointer",
          "line-height": "10px",
          "border": "1px solid #E4E4E4",
          "border-radius": "0 6px 6px 6px",
          "img": {
            "max-width": "120px",
            "border-radius": "0 6px 6px 6px"
          }
        }
      },
      ".others-msg,.other-msg": {
        ".quoteBubble": {
          "float": "left !important"
        }
      },
      ".quoteBubble": {
        "margin-right": "10px",
        "margin-left": "10px",
        "float": "right",
        "word-break": "break-word",
        "white-space": "pre-wrap",
        "width": "fit-content",
        "span,  label": {
          "vertical-align": "top"
        },
        "img": {
          "max-width": "50px"
        }
      },
      "#talk,.member-icon img,.infotime": {
        "-moz-user-select": "none",
        "-webkit-user-select": "none",
        "-ms-user-select": "none",
        "-khtml-user-select": "none",
        "user-select": "none"
      },
      "#talk .member-icon": {
        "pointer-events": "none"
      },
      ".mess-head": {
        "-webkit-user-select": "none",
        "-moz-user-select": "none",
        "-ms-user-select": "none",
        "user-select": "none"
      },
      ".vlogo": {
        "padding-right": "5px"
      },
      ".audio-wrap": {
        "cursor": "pointer",
        "img": {
          "height": "20px"
        },
        "img,  span": {
          "vertical-align": "middle"
        }
      },
      ".user-sign": {
        "width": "175px",
        "#text": {
          "img": {
            "width": "16px"
          }
        },
        "p": {
          "max-width": "50px",
          "display": "inline",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "-webkit-line-clamp": "1",
          "-webkit-box-orient": "vertical",
          "-webkit-box-flex": "1"
        },
        ".notify": {
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "display": "-webkit-box",
          "-webkit-line-clamp": "1",
          "-webkit-box-orient": "vertical",
          "-webkit-box-flex": "1"
        }
      },
      ".serach-input": {
        ".el-input__inner": {
          "background": "#fff",
          "height": "25px",
          "line-height": "26px",
          "border-radius": "13px"
        },
        ".el-input__prefix,  .el-input__suffix": {
          "top": "0px"
        }
      },
      ".noDrag": {
        "-webkit-app-region": "no-drag"
      },
      ".drag": {
        "-webkit-app-region": "drag"
      },
      ".message .mess-header span:nth-child(2)": {
        "margin": "0 !important"
      },
      ".secretKeyArea": {
        "textarea": {
          "border": "#e5e5e5 solid 1px",
          "box-shadow": "none"
        }
      },
      ".load-border span": {
        "cursor": "pointer"
      },
      ".el-checkbox__inner": {
        "border-radius": "20px"
      },
      ".hidden": {
        "display": "none !important",
        "height": "0",
        ".el-checkbox__inner": {
          "display": "none"
        }
      },
      ".visibilityHid": {
        "visibility": "hidden !important",
        "height": "0",
        ".el-checkbox__inner": {
          "display": "none"
        }
      },
      ".videoMsg": {
        "line-height": "10px",
        "cursor": "pointer"
      },
      ".mess-detail-self .mess-words": {
        "display": "flex",
        "flex-direction": "column",
        "flex-wrap": "wrap-reverse"
      },
      ".quitip": {
        "width": "90%"
      },
      ".quitips": {
        "width": "200px"
      },
      ".quoteEmoji": {
        "width": "15px !important"
      },
      ".imgBubble": {
        "padding": "3px !important"
      },
      ".pop-video": {
        "padding": "0px !important"
      },
      ".red": {
        "color": "red"
      },
      ".blue": {
        "color": "#5882f4 !important"
      },
      ".pointer": {
        "cursor": "pointer"
      },
      ".mess-header": {
        "background": "#f6f6f6 !important"
      },
      ".groupavatar .user-uploader-icon": {
        "font-size": "44px",
        "color": "#ddd"
      },
      ".demo-block": {
        ".el-button--primary,  .el-button--default": {
          "height": "40px !important"
        },
        ".head-image": {
          "width": "44px",
          "height": "44px"
        }
      },
      ".cropper-dialog .el-dialog__body": {
        "height": "280px !important"
      },
      ".contact-new-friends .el-loading-mask": {
        "position": "fixed",
        "left": "331px",
        "top": "50px"
      },
      ".levelAll": {
        "background-size": "contain",
        "display": "inline-block"
      },
      ".maskVisible": {
        "top": "5px",
        "-webkit-box-sizing": "border-box",
        "box-sizing": "border-box",
        "z-index": "1000",
        "position": "absolute",
        "width": "98%",
        "background": "#fff",
        "opacity": "0.8",
        "border": "#ddd dashed 1px",
        "height": "calc(100vh - 78px)",
        "left": "1%"
      },
      ".level-icon": {
        ".goldenBg": {
          "padding": "0 3px !important"
        },
        ".levelbox": {
          "padding": "0"
        }
      },
      ".group-member-name-class": {
        "justify-content": "flex-end",
        "height": "18px"
      },
      ".others-msg": {
        ".group-member-name-class": {
          "justify-content": "flex-start !important"
        }
      },
      ".other-msg": {
        ".group-member-name-class": {
          "justify-content": "flex-start !important"
        }
      },
      ".mess-talk-self": {
        "margin-bottom": "20px"
      },
      ".reEdit": {
        "color": "#5882f4",
        "padding-left": "10px",
        "cursor": "pointer"
      },
      ".chatInfo": {
        "text-align": "center",
        "img.avater": {
          "border-radius": "30px",
          "width": "60px",
          "height": "60px"
        },
        "p": {
          "margin": "8px 0",
          "font-size": "16px",
          "color": "#333"
        },
        "span": {
          "color": "rgba(0, 0, 0, 0.3)",
          "font-size": "12px"
        },
        "margin": "10px 0 20px"
      },
      ".invitebtn": {
        "background": "rgba(47, 84, 235, 0.1)",
        "width": "100px",
        "height": "36px",
        "line-height": "36px",
        "text-align": "center",
        "margin": "10px auto",
        "border-radius": "5px",
        "color": "#506FF5",
        "cursor": "pointer",
        "font-size": "13px"
      },
      ".ql-editor.ql-blank::before": {
        "font-style": "normal !important",
        "color": "rgba(0, 0, 0, 0.3) !important"
      },
      ".el-drawer.rtl": {
        "animation": "rtl-drawer-out 0s"
      },
      ".el-drawer__open .el-drawer.rtl": {
        "animation": "rtl-drawer-in 0s 1ms"
      },
      ".img_12": {
        "width": "12px",
        "height": "12px"
      },
      ".img_13": {
        "width": "13px",
        "height": "13px"
      },
      ".img_14": {
        "width": "14px",
        "height": "14px"
      },
      ".img_15": {
        "width": "15px",
        "height": "15px"
      },
      ".img_16": {
        "width": "16px",
        "height": "16px"
      },
      ".img_17": {
        "width": "17px",
        "height": "17px"
      },
      ".img_18": {
        "width": "18px",
        "height": "18px"
      },
      ".img_42": {
        "width": "42px",
        "height": "42px"
      },
      ".img_search": {
        "margin-top": "30px",
        "width": "80px",
        "height": "80px"
      },
      ".select_box": {
        "/deep/ .el-input--mini .el-input__icon": {
          "line-height": "inherit"
        }
      }
    }
  },
  {
    "type": "less",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/sytles/elementUi.less",
    "importInfo": null,
    "originData": "// yyn start\n\n.el-message--error {\n  z-index: 3000 !important;\n}\n\n.guide-ser .el-card__body,\n.fund-detail .el-card__body {\n  padding: 0;\n}\n.guide-ser .avatar > img {\n  width: 60px;\n  height: 60px;\n}\n.guide-ser .el-button--primary {\n  width: 158px;\n}\n.comment .card-avatar .avatar > img {\n  width: 40px;\n  height: 40px;\n}\n.comment .text-img .avatar > img {\n  width: 58px;\n  height: 58px;\n}\n.comment .com-content .every-con .info .card-avatar .avatar {\n  margin: 0px !important;\n}\n.fund-wallet,\n.fund-advert,\n.fund-ore,\n.wallet-detail .input,\n.advert-detail .input,\n.ore-detail .input {\n  .el-input__inner {\n    border-radius: 20px;\n    border: 1px solid rgba(45, 83, 235, 1);\n  }\n}\n.el-checkbox__input.is-checked .el-checkbox__inner {\n  background-color: #2f54eb;\n  border-color: #2f54eb;\n}\n.el-checkbox__input.is-focus .el-checkbox__inner {\n  border-color: #2f54eb;\n}\n.el-checkbox__input.is-checked + .el-checkbox__label {\n  color: #2f54eb;\n  line-height: unset;\n}\n.el-checkbox__inner:hover {\n  border-color: #2f54eb;\n}\n.wallet-detail .el-date-editor.el-input,\n.advert-detail .el-date-editor.el-input,\n.fund-detail .el-date-editor.el-input {\n  width: 180px;\n}\n.transfer,\n.withdraw {\n  .el-button,\n  .el-select,\n  .el-input {\n    width: 300px;\n  }\n}\n.charging,\n.withdraw {\n  .el-radio-button {\n    margin-right: 10px;\n  }\n  .el-radio-button__inner,\n  .el-radio-button:first-child .el-radio-button__inner,\n  .el-radio-button:last-child .el-radio-button__inner {\n    border-radius: 6px;\n  }\n}\n.tipoffs {\n  .el-form-item {\n    margin-bottom: 0;\n  }\n  .el-button {\n    width: 300px;\n  }\n}\n//yyn end\n//wq\n.chatset {\n  .el-step__title.is-process {\n    color: #c0c4cc;\n    border-color: #c0c4cc;\n  }\n  .el-step__title.is-process {\n    font-weight: 400;\n  }\n  .el-step__head.is-process {\n    color: #c0c4cc;\n    border-color: #c0c4cc;\n  }\n}\n.demo-block .avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.demo-block .avatar-uploader .avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.VIEW-wrap .el-image__inner {\n  width: 150px;\n  height: 150px;\n  cursor: pointer;\n}\n.limtinput {\n  input {\n    padding-right: 42px;\n  }\n  textarea {\n    padding-right: 0;\n  }\n}\n.el-button--text {\n  color: #2f54eb;\n}\n.el-button--primary {\n  border-color: #2f54eb;\n  background-color: #2f54eb;\n}\n.loadmore .el-loading-mask {\n  background-color: #f3f3f3 !important;\n}\n.loadmore .el-loading-spinner {\n  margin-top: 0px;\n}\n.talkcheck .el-checkbox__label {\n  width: 100%;\n  line-height: unset;\n}\n.talkcheck .el-checkbox__input {\n  margin-left: 10px;\n}\n.talkcheck .is-checked {\n  //background:#ddd;\n}\n.talkcheck {\n  .el-checkbox__inner {\n    top: 34px;\n  }\n  .higher {\n    .el-checkbox__inner {\n      top: 64px;\n    }\n  }\n  .disabled {\n    .el-checkbox__inner {\n      top: 12px;\n    }\n  }\n  .disabledWithTime {\n    .el-checkbox__inner {\n      top: 40px;\n    }\n  }\n}\n.talkcheck {\n  .el-checkbox__input.is-disabled .el-checkbox__inner {\n    cursor: pointer;\n  }\n  .el-checkbox__input.is-disabled + span.el-checkbox__label {\n    color: #333333;\n    cursor: pointer;\n    line-height: unset;\n  }\n  .el-checkbox {\n    color: #333;\n  }\n}\n.el-drawer__wrapper {\n  //解决点击el-drawer出现的黄色边框\n  /deep/ :focus {\n    outline: 0;\n  }\n}\n.mutiPanel {\n  // height: 168px !important;\n  left: 332px !important;\n  top: auto !important;\n  .el-drawer {\n    background: #f3f3f3;\n    height: 250px;\n    // line-height: 250px;\n    text-align: center;\n    span {\n      display: inline-block;\n    }\n    img {\n      margin-top: 20px;\n      padding: 0 20px;\n      cursor: pointer;\n    }\n  }\n  .el-drawer__header {\n    line-height: 10px;\n    margin: 0;\n  }\n}\n.quote-popover {\n  height: 200px;\n  overflow: scroll;\n}\n.my_class {\n  .el-input__prefix,\n  .el-input__suffix {\n    //top:2px;\n    .el-input__icon {\n      line-height: 30px;\n    }\n  }\n}\n.searchBox .el-button--mini {\n  position: relative;\n  top: 3px;\n  padding: 2px 10px;\n  font-size: 20px;\n}\n.quote .el-tag__close {\n  top: 8px;\n  position: absolute;\n  right: -18px;\n}\n.el-menu-item [class^='el-icon-'] {\n  font-size: 22px;\n}\n.el-divider--horizontal {\n  margin: 10px 0;\n}\n.el-icon-close {\n  cursor: pointer;\n}\n.el-dialog__wrapper {\n  // 不让dialog在wrapper内滚动\n  overflow: visible;\n}\n.tipoffInput input:focus,\n.tipoffInput input:hover,\n.tipoffInput input {\n  text-overflow: ellipsis;\n}\n.timeOutBox {\n  width: 360px !important;\n}\n//--wq--\n\n.info-popover {\n  max-height: 200px;\n  overflow: scroll;\n}\n",
    "cssJson": {
      ".el-message--error": {
        "z-index": "3000 !important"
      },
      ".guide-ser .el-card__body,.fund-detail .el-card__body": {
        "padding": "0"
      },
      ".guide-ser .avatar > img": {
        "width": "60px",
        "height": "60px"
      },
      ".guide-ser .el-button--primary": {
        "width": "158px"
      },
      ".comment .card-avatar .avatar > img": {
        "width": "40px",
        "height": "40px"
      },
      ".comment .text-img .avatar > img": {
        "width": "58px",
        "height": "58px"
      },
      ".comment .com-content .every-con .info .card-avatar .avatar": {
        "margin": "0px !important"
      },
      ".fund-wallet,.fund-advert,.fund-ore,.wallet-detail .input,.advert-detail .input,.ore-detail .input": {
        ".el-input__inner": {
          "border-radius": "20px",
          "border": "1px solid rgba(45, 83, 235, 1)"
        }
      },
      ".el-checkbox__input.is-checked .el-checkbox__inner": {
        "background-color": "#2f54eb",
        "border-color": "#2f54eb"
      },
      ".el-checkbox__input.is-focus .el-checkbox__inner": {
        "border-color": "#2f54eb"
      },
      ".el-checkbox__input.is-checked + .el-checkbox__label": {
        "color": "#2f54eb",
        "line-height": "unset"
      },
      ".el-checkbox__inner:hover": {
        "border-color": "#2f54eb"
      },
      ".wallet-detail .el-date-editor.el-input,.advert-detail .el-date-editor.el-input,.fund-detail .el-date-editor.el-input": {
        "width": "180px"
      },
      ".transfer,.withdraw": {
        ".el-button,  .el-select,  .el-input": {
          "width": "300px"
        }
      },
      ".charging,.withdraw": {
        ".el-radio-button": {
          "margin-right": "10px"
        },
        ".el-radio-button__inner,  .el-radio-button:first-child .el-radio-button__inner,  .el-radio-button:last-child .el-radio-button__inner": {
          "border-radius": "6px"
        }
      },
      ".tipoffs": {
        ".el-form-item": {
          "margin-bottom": "0"
        },
        ".el-button": {
          "width": "300px"
        }
      },
      ".chatset": {
        ".el-step__title.is-process": {
          "color": "#c0c4cc",
          "border-color": "#c0c4cc",
          "font-weight": "400"
        },
        ".el-step__head.is-process": {
          "color": "#c0c4cc",
          "border-color": "#c0c4cc"
        }
      },
      ".demo-block .avatar-uploader .el-upload": {
        "border": "1px dashed #d9d9d9",
        "border-radius": "6px",
        "cursor": "pointer",
        "position": "relative",
        "overflow": "hidden"
      },
      ".demo-block .avatar-uploader .avatar-uploader-icon": {
        "font-size": "28px",
        "color": "#8c939d",
        "width": "178px",
        "height": "178px",
        "line-height": "178px",
        "text-align": "center"
      },
      ".VIEW-wrap .el-image__inner": {
        "width": "150px",
        "height": "150px",
        "cursor": "pointer"
      },
      ".limtinput": {
        "input": {
          "padding-right": "42px"
        },
        "textarea": {
          "padding-right": "0"
        }
      },
      ".el-button--text": {
        "color": "#2f54eb"
      },
      ".el-button--primary": {
        "border-color": "#2f54eb",
        "background-color": "#2f54eb"
      },
      ".loadmore .el-loading-mask": {
        "background-color": "#f3f3f3 !important"
      },
      ".loadmore .el-loading-spinner": {
        "margin-top": "0px"
      },
      ".talkcheck .el-checkbox__label": {
        "width": "100%",
        "line-height": "unset"
      },
      ".talkcheck .el-checkbox__input": {
        "margin-left": "10px"
      },
      ".talkcheck .is-checked": {},
      ".talkcheck": {
        ".el-checkbox__inner": {
          "top": "34px"
        },
        ".higher": {
          ".el-checkbox__inner": {
            "top": "64px"
          }
        },
        ".disabled": {
          ".el-checkbox__inner": {
            "top": "12px"
          }
        },
        ".disabledWithTime": {
          ".el-checkbox__inner": {
            "top": "40px"
          }
        },
        ".el-checkbox__input.is-disabled .el-checkbox__inner": {
          "cursor": "pointer"
        },
        ".el-checkbox__input.is-disabled + span.el-checkbox__label": {
          "color": "#333333",
          "cursor": "pointer",
          "line-height": "unset"
        },
        ".el-checkbox": {
          "color": "#333"
        }
      },
      ".el-drawer__wrapper": {
        "/deep/ :focus": {
          "outline": "0"
        }
      },
      ".mutiPanel": {
        "left": "332px !important",
        "top": "auto !important",
        ".el-drawer": {
          "background": "#f3f3f3",
          "height": "250px",
          "text-align": "center",
          "span": {
            "display": "inline-block"
          },
          "img": {
            "margin-top": "20px",
            "padding": "0 20px",
            "cursor": "pointer"
          }
        },
        ".el-drawer__header": {
          "line-height": "10px",
          "margin": "0"
        }
      },
      ".quote-popover": {
        "height": "200px",
        "overflow": "scroll"
      },
      ".my_class": {
        ".el-input__prefix,  .el-input__suffix": {
          ".el-input__icon": {
            "line-height": "30px"
          }
        }
      },
      ".searchBox .el-button--mini": {
        "position": "relative",
        "top": "3px",
        "padding": "2px 10px",
        "font-size": "20px"
      },
      ".quote .el-tag__close": {
        "top": "8px",
        "position": "absolute",
        "right": "-18px"
      },
      ".el-menu-item [class^='el-icon-']": {
        "font-size": "22px"
      },
      ".el-divider--horizontal": {
        "margin": "10px 0"
      },
      ".el-icon-close": {
        "cursor": "pointer"
      },
      ".el-dialog__wrapper": {
        "overflow": "visible"
      },
      ".tipoffInput input:focus,.tipoffInput input:hover,.tipoffInput input": {
        "text-overflow": "ellipsis"
      },
      ".timeOutBox": {
        "width": "360px !important"
      },
      ".info-popover": {
        "max-height": "200px",
        "overflow": "scroll"
      }
    }
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/App.vue",
    "tagInfo": {
      "0": "<style>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div id=\"app\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  computed: {},\n  methods: {},\n  created() {},\n  mounted() {}\n};\n</script>",
    "originData": "<template>\n  <div id=\"app\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  computed: {},\n  methods: {},\n  created() {},\n  mounted() {}\n};\n</script>\n\n<style>\nbody {\n  overflow-y: hidden;\n}\n#app {\n  /* font-family: 'Source Han Sans'; */\n  width: 100%;\n}\nbody .el-container {\n  height: 100vh !important;\n}\n</style>\n",
    "cssJson": [
      {
        "body": {
          "overflow-y": "hidden"
        },
        "#app": {
          "width": "100%"
        },
        "body .el-container": {
          "height": "100vh !important"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\">"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"user\">\n    <router-view style=\"-webkit-app-region: no-drag\" />\n    <checkUpdate v-if=\"checkUpdateShow\" @updateCenterDialogVisible=\"updateCenterDialogVisibleValue\" ref=\"centerDialogVisibleValue\" />\n  </div>\n</template>\n\n<script>\nimport checkUpdate from '@/layouts/user/components/checkUpdate';\nimport { check_for_update } from '@/utils/checkForUpdate';\nconst appVersionCode = require('../../../package.json').version_code;\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    checkUpdate\n  },\n  data() {\n    return {\n      centerDialogVisible: false,\n      checkUpdateShow: false,\n      updateInfo: {\n        forceUpgrade: 0,\n        upgradeDesc: '',\n        versionCode: 0\n      }\n    };\n  },\n  mounted() {},\n  beforeDestroy() {},\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      versionUpdateInfo: obj => {\n        return obj.state.versionUpdateInfo\n      }\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    updateCenterDialogVisibleValue(val) {\n      this.centerDialogVisible = val;\n    },\n    async checkForUpdate() {\n      await check_for_update(appVersionCode, (updateInfo) => {\n        if (updateInfo.data) {\n          this.updateInfo = updateInfo.data;\n          this.$set(this, 'checkUpdateShow', true)\n          this.$nextTick(() => {\n            this.$refs.centerDialogVisibleValue.init({\n              ...this.updateInfo,\n              centerDialogVisible: true\n            });\n          });\n        }\n      });\n    },\n    // getVersion() {\n    //   ipcRenderer.on('app_version', (event, arg) => {\n    //     ipcRenderer.removeAllListeners('app_version');\n    //     this.currVersion = arg.version;\n    //   });\n    //   ipcRenderer.send('app_version');\n    // }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.checkForUpdate();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<template>\n  <div class=\"user\">\n    <router-view style=\"-webkit-app-region: no-drag\" />\n    <checkUpdate v-if=\"checkUpdateShow\" @updateCenterDialogVisible=\"updateCenterDialogVisibleValue\" ref=\"centerDialogVisibleValue\" />\n  </div>\n</template>\n\n<script>\nimport checkUpdate from '@/layouts/user/components/checkUpdate';\nimport { check_for_update } from '@/utils/checkForUpdate';\nconst appVersionCode = require('../../../package.json').version_code;\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    checkUpdate\n  },\n  data() {\n    return {\n      centerDialogVisible: false,\n      checkUpdateShow: false,\n      updateInfo: {\n        forceUpgrade: 0,\n        upgradeDesc: '',\n        versionCode: 0\n      }\n    };\n  },\n  mounted() {},\n  beforeDestroy() {},\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      versionUpdateInfo: obj => {\n        return obj.state.versionUpdateInfo\n      }\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    updateCenterDialogVisibleValue(val) {\n      this.centerDialogVisible = val;\n    },\n    async checkForUpdate() {\n      await check_for_update(appVersionCode, (updateInfo) => {\n        if (updateInfo.data) {\n          this.updateInfo = updateInfo.data;\n          this.$set(this, 'checkUpdateShow', true)\n          this.$nextTick(() => {\n            this.$refs.centerDialogVisibleValue.init({\n              ...this.updateInfo,\n              centerDialogVisible: true\n            });\n          });\n        }\n      });\n    },\n    // getVersion() {\n    //   ipcRenderer.on('app_version', (event, arg) => {\n    //     ipcRenderer.removeAllListeners('app_version');\n    //     this.currVersion = arg.version;\n    //   });\n    //   ipcRenderer.send('app_version');\n    // }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.checkForUpdate();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\">\n//@import url(); 引入公共css类\n.user {\n  // 退出更新\n  .cancel-update-dialog {\n    width: 346px;\n    height: 202px;\n    left: 4.5%;\n    top: 12%;\n    // left: 50%;\n    // transform: translate(-50%);\n\n    /deep/ .el-dialog__title {\n      font-size: 16px;\n      font-weight: 500;\n      color: #151f34;\n    }\n    /deep/ .el-dialog__body {\n      padding: 30px 20px;\n    }\n    .cancel-update-dialog-p {\n      padding-left: 20px;\n      font-size: 14px;\n      color: #151f34;\n      line-height: 20px;\n    }\n    /deep/ .el-button {\n      //width: 120px;\n      height: 35px;\n    }\n    /deep/ .el-button--default {\n      box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n      border-radius: 4px;\n      border: 1px solid #2f54eb;\n      background: transparent;\n      span {\n        font-size: 14px;\n        font-weight: 400;\n        color: #2f54eb;\n      }\n    }\n    /deep/ .el-button--primary {\n      background: #2f54eb;\n      box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n      border-radius: 4px;\n      span {\n        font-size: 14px;\n        font-weight: 400;\n        color: #fff;\n      }\n    }\n    .exitUpdateT {\n      margin: 20px auto 13px;\n    }\n    .downloadLink {\n      text-align: center;\n      font-size: 12px;\n      color: #2f54eb;\n      text-decoration: underline;\n    }\n  }\n  // 版本更新\n  .update-dialog {\n    .el-dialog {\n      background: url('../../assets/images/upload-pic.png') no-repeat 50% 20px #fff;\n      background-size: 100%;\n      width: 346px;\n      border-radius: 10px;\n      .el-dialog__body {\n        box-sizing: border-box;\n        text-align: center;\n        padding-top: 100px;\n        color: rgba(21, 31, 52, 1);\n      }\n      .el-icon-close {\n        font-size: 26px;\n      }\n      .dialog-footer {\n        /deep/ .el-button {\n          width: 148px;\n          height: 40px;\n        }\n        /deep/ .el-button--default {\n          box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n          border-radius: 4px;\n          border: 1px solid #2f54eb;\n          background: transparent;\n          span {\n            font-size: 14px;\n            font-weight: 400;\n            color: #2f54eb;\n          }\n        }\n        /deep/ .el-button--primary {\n          background: #2f54eb;\n          box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n          border-radius: 4px;\n          span {\n            font-size: 14px;\n            font-weight: 400;\n            color: #fff;\n          }\n        }\n      }\n      h1 {\n        font-size: 16px;\n        color: rgba(21, 31, 52, 1);\n      }\n    }\n    .progress-wrapper {\n      height: 60px;\n      .progress-text {\n        padding-top: 10px;\n        text-align: left;\n        font-size: 13px;\n      }\n    }\n    .el-input {\n      .el-textarea__inner {\n        background: none;\n        min-height: 40px;\n        padding-top: -30px;\n      }\n    }\n  }\n  .el-input {\n    .el-textarea__inner {\n      background: none;\n      min-height: 40px;\n      padding-top: -30px;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".user": {
          ".cancel-update-dialog": {
            "width": "346px",
            "height": "202px",
            "left": "4.5%",
            "top": "12%",
            "/deep/ .el-dialog__title": {
              "font-size": "16px",
              "font-weight": "500",
              "color": "#151f34"
            },
            "/deep/ .el-dialog__body": {
              "padding": "30px 20px"
            },
            ".cancel-update-dialog-p": {
              "padding-left": "20px",
              "font-size": "14px",
              "color": "#151f34",
              "line-height": "20px"
            },
            "/deep/ .el-button": {
              "height": "35px"
            },
            "/deep/ .el-button--default": {
              "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
              "border-radius": "4px",
              "border": "1px solid #2f54eb",
              "background": "transparent",
              "span": {
                "font-size": "14px",
                "font-weight": "400",
                "color": "#2f54eb"
              }
            },
            "/deep/ .el-button--primary": {
              "background": "#2f54eb",
              "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
              "border-radius": "4px",
              "span": {
                "font-size": "14px",
                "font-weight": "400",
                "color": "#fff"
              }
            },
            ".exitUpdateT": {
              "margin": "20px auto 13px"
            },
            ".downloadLink": {
              "text-align": "center",
              "font-size": "12px",
              "color": "#2f54eb",
              "text-decoration": "underline"
            }
          },
          ".update-dialog": {
            ".el-dialog": {
              "background": "url('../../assets/images/upload-pic.png') no-repeat 50% 20px #fff",
              "background-size": "100%",
              "width": "346px",
              "border-radius": "10px",
              ".el-dialog__body": {
                "box-sizing": "border-box",
                "text-align": "center",
                "padding-top": "100px",
                "color": "rgba(21, 31, 52, 1)"
              },
              ".el-icon-close": {
                "font-size": "26px"
              },
              ".dialog-footer": {
                "/deep/ .el-button": {
                  "width": "148px",
                  "height": "40px"
                },
                "/deep/ .el-button--default": {
                  "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
                  "border-radius": "4px",
                  "border": "1px solid #2f54eb",
                  "background": "transparent",
                  "span": {
                    "font-size": "14px",
                    "font-weight": "400",
                    "color": "#2f54eb"
                  }
                },
                "/deep/ .el-button--primary": {
                  "background": "#2f54eb",
                  "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
                  "border-radius": "4px",
                  "span": {
                    "font-size": "14px",
                    "font-weight": "400",
                    "color": "#fff"
                  }
                }
              },
              "h1": {
                "font-size": "16px",
                "color": "rgba(21, 31, 52, 1)"
              }
            },
            ".progress-wrapper": {
              "height": "60px",
              ".progress-text": {
                "padding-top": "10px",
                "text-align": "left",
                "font-size": "13px"
              }
            },
            ".el-input": {
              ".el-textarea__inner": {
                "background": "none",
                "min-height": "40px",
                "padding-top": "-30px"
              }
            }
          },
          ".el-input": {
            ".el-textarea__inner": {
              "background": "none",
              "min-height": "40px",
              "padding-top": "-30px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/components/checkUpdate.vue",
    "tagInfo": {
      "0": "<style lang=\"less\">"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <el-dialog\n      class=\"update-dialog\"\n      :visible.sync=\"centerDialogVisible\"\n      width=\"346px\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :show-close=\"false\"\n      center\n    >\n      <i\n        class=\"el-icon-close\"\n        v-if=\"isUpdate\"\n        size=\"mini\"\n        @click=\"closeUpdateApp\"\n        style=\"font-size: 14px; position: absolute; right: 10px; top: 010px\"\n      ></i>\n\n      <div v-if=\"isUpdate\">\n        <h1>{{ $t('personal_0012') }}</h1>\n        <span class=\"version-tip\">{{ $t('personal_0062', {version}) }}，{{ tips }} </span>\n      </div>\n\n      <div class=\"version-title\" v-if=\"!isUpdate\">{{ $t('personal_0062', {version}) }}</div>\n<!--      <el-input\n        v-if=\"!downloadDialogVisible\"\n        class=\"el-input\"\n        type=\"textarea\"\n        rows=\"4\"\n        :readonly=\"true\"\n        resize=\"none\"\n        v-model=\"upgradeDesc\"\n        placeholder=\"\"\n      >\n        upgradeDesc</el-input\n      >-->\n      <el-input\n        class=\"el-input\"\n        type=\"textarea\"\n        rows=\"4\"\n        :readonly=\"true\"\n        resize=\"none\"\n        v-model=\"upgradeDesc\"\n        placeholder=\"\"\n      >\n        upgradeDesc</el-input\n      >\n      <!-- <br /> -->\n      <div class=\"update-tips\" v-if=\"!isUpdate\">{{ $t('personal_0063') }}</div>\n      <span slot=\"footer\" class=\"dialog-footer\" v-if=\"!downloadDialogVisible\">\n        <el-button size=\"small\" @click=\"onCancelUpdateApp\" class=\"cancel-btn\">{{\n          cancelBtn\n        }}</el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          @click=\"updateApp\"\n          class=\"update-btn\"\n          >{{ $t('personal_0021') }}</el-button\n        >\n      </span>\n      <div slot=\"footer\" v-else class=\"progress-wrapper\">\n        <el-progress\n          :percentage=\"downloadPercent\"\n          :show-text=\"false\"\n        ></el-progress>\n        <div class=\"progress-text\">\n          <span>{{ $t('personal_0026') }} {{ downloadPercent }}%</span>\n          <a href=\"javascript:void(0)\" @click=\"reDownload\">{{ $t('personal_0071') }}</a>\n        </div>\n        <div class=\"fault-text\">{{ $t('personal_0068') }}\n          <a href=\"javascript:void(0)\" @click=\"downloadAPP\">{{ $t('personal_0069') }}</a>\n        </div>\n      </div>\n    </el-dialog>\n    <el-dialog\n      :title=\"$t('personal_0076')\"\n      class=\"cancel-update-dialog\"\n      width=\"320px\"\n      append-to-body\n      :modal=\"true\"\n      :modal-append-to-body=\"true\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :visible.sync=\"cancelUpdateDialog\"\n      :show-close=\"false\"\n      center\n    >\n      <p class=\"cancel-update-dialog-p\">\n        {{ $t('personal_0067') }}\n      </p>\n      <p class=\"cancel-update-dialog-p\">{{ cancelUpdateTitle }}</p>\n      <div class=\"dialog-footer exitUpdateT\">\n        <el-button size=\"mini\" @click=\"cancelUpdateApp\" class=\"cancel-btn\">{{\n          cancelBtn\n        }}</el-button>\n        <el-button\n          size=\"mini\"\n          type=\"primary\"\n          @click=\"reUpdateApp\"\n          class=\"update-btn\"\n          >{{ $t('personal_0065') }}</el-button\n        >\n      </div>\n      <p class=\"downloadLink\">\n        <span @click=\"downloadAPP\">{{ $t('personal_0064') }}</span>\n      </p>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ipcRenderer, shell } from \"electron\";\nconst appVersion = require(\"../../../../package.json\").version;\nconst appVersionCode = require(\"../../../../package.json\").version_code;\nimport { writeFile, deleteFile } from \"@/utils/checkForUpdate\";\nimport { LOGIN_OUT } from '@/store/types';\nimport {mapMutations} from \"vuex\";\nimport bus from '@/utils/eventbus';\n\nexport default {\n  name: \"check-update\",\n  components: {},\n  data() {\n    return {\n      isUpdate: false,\n      isLogin: false,\n      centerDialogVisible: false,\n      currVersion: \"\",\n      version: \"\",\n      downloadPercent: 0,\n      downloadDialogVisible: false,\n      tips: this.$t('personal_0077'),\n      title: \"\",\n      upgradeDesc: \"\",\n      cancelUpdateDialog: false,\n      forceUpgrade: 0,\n      cancelBtn: \"\",\n      cancelUpdateTitle: \"\"\n    };\n  },\n  mounted() {\n    this.getVersion();\n  },\n  beforeDestroy() {\n    // 移除事件监听\n    ipcRenderer.removeAllListeners(\"updateMessage\");\n    this.ipcRenderer.removeListener(\"downloadProgress\",this.updateProgress);\n    this.ipcRenderer.removeListener(\"downloadError\",this.downloadErrTip);\n    ipcRenderer.removeAllListeners(\"isUpdateNow\");\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  filters: {\n    textBr(val) {\n      console.log('ssss',val);\n      return val.replace(/↵/g,\"\\n\");\n    },\n  },\n  //方法集合\n  methods: {\n    ...mapMutations([LOGIN_OUT]),\n    init(val) {\n      console.log(val);\n      this.centerDialogVisible = val.centerDialogVisible;\n      this.forceUpgrade = val.forceUpgrade;\n      this.upgradeDesc = val.upgradeDesc;\n      this.version = val.versionCode;\n      this.cancelBtn = this.forceUpgrade == 0 ? this.$t('personal_0020') : this.$t('personal_0022');\n      this.cancelUpdateTitle =\n        this.forceUpgrade == 0\n          ? this.$t('personal_0072')\n          : this.$t('personal_0073');\n    },\n    downloadAPP() {\n      // window.open(`http://172.16.10.18:8081/didi-pc?suffix=${process.platform == 'darwin' ? 'dmg':'exe'}`)\n      shell.openExternal(`https://www.didimessage.com/`);\n    },\n    // 暂不更新/退出应用\n    async cancelUpdateApp() {\n      console.log(this.forceUpgrade, this.cancelBtn, this.cancelUpdateDialog);\n      ipcRenderer.send(\"cancelledUpdate\");\n      if (!this.forceUpgrade) {\n        // console.log(\"关闭退出更新页面到登录页面\");\n        this.cancelUpdateDialog = false;\n        this.centerDialogVisible = false;\n        await writeFile(this.version);\n        this.$emit(\"updateCenterDialogVisible\");\n        bus.$emit('closeDownload', true);\n      } else if (this.forceUpgrade) {\n        ipcRenderer.send(\"quit-win\");\n      }\n    },\n    closeUpdateApp() {\n      this.cancelUpdateDialog = true;\n    },\n    // 暂不更新/退出应用\n    async onCancelUpdateApp() {\n      ipcRenderer.send(\"cancelledUpdate\");\n      if (this.forceUpgrade) {\n        ipcRenderer.send(\"quit-win\");\n      }\n      this.centerDialogVisible = false;\n      await writeFile(this.version);\n      this.$emit(\"updateCenterDialogVisible\", false);\n      bus.$emit('closeDownload', true);\n    },\n    async reUpdateApp() {\n      await deleteFile();\n      this.cancelUpdateDialog = false;\n    },\n    async updateApp() {\n      console.log('route0- ',this.$route.name)\n      if (this.forceUpgrade == 0 || this.$route.name === 'login-qrcode') {\n        this.isUpdate = true;\n        await deleteFile();\n        if (this.cancelUpdateDialog) {\n          this.centerDialogVisible = true;\n          this.cancelUpdateDialog = false;\n        }\n        this.downloadDialogVisible = true;\n        this.tips = this.$t('personal_0074');\n        this.downloadUpdate();\n      } else {\n        // 强制更新，直接退出登录\n        this.LOGIN_OUT();\n      }\n    },\n    downloadUpdate() {\n      ipcRenderer.send(\"downloadUpdate\");\n    },\n    getVersion() {\n      //获取当前版本\n      ipcRenderer.on(\"app_version\", (event, arg) => {\n        ipcRenderer.removeAllListeners(\"app_version\");\n        this.currVersion = arg.version;\n      });\n      ipcRenderer.send(\"app_version\");\n    },\n    ondialogclose() {\n      if (this.forceUpgrade && !this.cancelUpdateDialog) {\n        this.cancelUpdateDialog = true;\n      } else if (!this.forceUpgrade && this.cancelUpdateDialog) {\n        this.cancelUpdateDialog = false;\n      } else if (!this.forceUpgrade && !this.cancelUpdateDialog) {\n        console.log(\"点 × 呼出退出更新页面\");\n        this.cancelUpdateDialog = true;\n      }\n    },\n    // 取消更新\n    reDownload() {\n      ipcRenderer.send(\"cancelUpdate\");\n      if(this.downloadPercent<100){\n        this.downloadPercent = 0;\n      }\n      // this.downloadUpdate();\n    },\n    updateProgress(event, progressObj){\n      console.log('checkcomp----', progressObj.percent)\n      let value = Math.trunc(progressObj.percent);\n      if(this.downloadPercent==100){\n        this.downloadPercent = value;\n      } else {\n        this.downloadPercent = this.downloadPercent > value ? this.downloadPercent : value;\n      }      \n    },\n    downloadErrTip() {\n      ipcRenderer.send(\"cancelledUpdate\");\n      // this.$emit(\"updateCenterDialogVisible\", false);\n      bus.$emit('closeDownload', true);\n      let _this = this;\n      this.$confirm(this.$t('personal_0080'), this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('personal_0081'),\n        cancelButtonText: this.forceUpgrade ? this.$t('personal_0022') : this.$t('Universal_0063'),\n        center: true,\n        showClose: true,\n        distinguishCancelAndClose: true,\n        customClass: 'download-err-dialog',\n        closeOnClickModal: false,\n        closeOnPressEscape: false,\n        beforeClose:function (action,instance,done) {\n          \n          if (action == 'confirm') {\n            _this.downloadAPP();\n            return false;\n          } else if (action == 'cancel') {\n            if (_this.forceUpgrade) {\n              _this.cancelUpdateApp();\n            }\n            done();\n          } else if (action == 'close') {\n            done();\n          }\n        },\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    console.log(appVersion, appVersionCode, this.forceUpgrade);\n    this.ipcRenderer = ipcRenderer;\n    this.ipcRenderer.on(\"downloadProgress\", this.updateProgress);\n    this.ipcRenderer.on('downloadError', this.downloadErrTip)\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<template>\n  <div>\n    <el-dialog\n      class=\"update-dialog\"\n      :visible.sync=\"centerDialogVisible\"\n      width=\"346px\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :show-close=\"false\"\n      center\n    >\n      <i\n        class=\"el-icon-close\"\n        v-if=\"isUpdate\"\n        size=\"mini\"\n        @click=\"closeUpdateApp\"\n        style=\"font-size: 14px; position: absolute; right: 10px; top: 010px\"\n      ></i>\n\n      <div v-if=\"isUpdate\">\n        <h1>{{ $t('personal_0012') }}</h1>\n        <span class=\"version-tip\">{{ $t('personal_0062', {version}) }}，{{ tips }} </span>\n      </div>\n\n      <div class=\"version-title\" v-if=\"!isUpdate\">{{ $t('personal_0062', {version}) }}</div>\n<!--      <el-input\n        v-if=\"!downloadDialogVisible\"\n        class=\"el-input\"\n        type=\"textarea\"\n        rows=\"4\"\n        :readonly=\"true\"\n        resize=\"none\"\n        v-model=\"upgradeDesc\"\n        placeholder=\"\"\n      >\n        upgradeDesc</el-input\n      >-->\n      <el-input\n        class=\"el-input\"\n        type=\"textarea\"\n        rows=\"4\"\n        :readonly=\"true\"\n        resize=\"none\"\n        v-model=\"upgradeDesc\"\n        placeholder=\"\"\n      >\n        upgradeDesc</el-input\n      >\n      <!-- <br /> -->\n      <div class=\"update-tips\" v-if=\"!isUpdate\">{{ $t('personal_0063') }}</div>\n      <span slot=\"footer\" class=\"dialog-footer\" v-if=\"!downloadDialogVisible\">\n        <el-button size=\"small\" @click=\"onCancelUpdateApp\" class=\"cancel-btn\">{{\n          cancelBtn\n        }}</el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          @click=\"updateApp\"\n          class=\"update-btn\"\n          >{{ $t('personal_0021') }}</el-button\n        >\n      </span>\n      <div slot=\"footer\" v-else class=\"progress-wrapper\">\n        <el-progress\n          :percentage=\"downloadPercent\"\n          :show-text=\"false\"\n        ></el-progress>\n        <div class=\"progress-text\">\n          <span>{{ $t('personal_0026') }} {{ downloadPercent }}%</span>\n          <a href=\"javascript:void(0)\" @click=\"reDownload\">{{ $t('personal_0071') }}</a>\n        </div>\n        <div class=\"fault-text\">{{ $t('personal_0068') }}\n          <a href=\"javascript:void(0)\" @click=\"downloadAPP\">{{ $t('personal_0069') }}</a>\n        </div>\n      </div>\n    </el-dialog>\n    <el-dialog\n      :title=\"$t('personal_0076')\"\n      class=\"cancel-update-dialog\"\n      width=\"320px\"\n      append-to-body\n      :modal=\"true\"\n      :modal-append-to-body=\"true\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :visible.sync=\"cancelUpdateDialog\"\n      :show-close=\"false\"\n      center\n    >\n      <p class=\"cancel-update-dialog-p\">\n        {{ $t('personal_0067') }}\n      </p>\n      <p class=\"cancel-update-dialog-p\">{{ cancelUpdateTitle }}</p>\n      <div class=\"dialog-footer exitUpdateT\">\n        <el-button size=\"mini\" @click=\"cancelUpdateApp\" class=\"cancel-btn\">{{\n          cancelBtn\n        }}</el-button>\n        <el-button\n          size=\"mini\"\n          type=\"primary\"\n          @click=\"reUpdateApp\"\n          class=\"update-btn\"\n          >{{ $t('personal_0065') }}</el-button\n        >\n      </div>\n      <p class=\"downloadLink\">\n        <span @click=\"downloadAPP\">{{ $t('personal_0064') }}</span>\n      </p>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ipcRenderer, shell } from \"electron\";\nconst appVersion = require(\"../../../../package.json\").version;\nconst appVersionCode = require(\"../../../../package.json\").version_code;\nimport { writeFile, deleteFile } from \"@/utils/checkForUpdate\";\nimport { LOGIN_OUT } from '@/store/types';\nimport {mapMutations} from \"vuex\";\nimport bus from '@/utils/eventbus';\n\nexport default {\n  name: \"check-update\",\n  components: {},\n  data() {\n    return {\n      isUpdate: false,\n      isLogin: false,\n      centerDialogVisible: false,\n      currVersion: \"\",\n      version: \"\",\n      downloadPercent: 0,\n      downloadDialogVisible: false,\n      tips: this.$t('personal_0077'),\n      title: \"\",\n      upgradeDesc: \"\",\n      cancelUpdateDialog: false,\n      forceUpgrade: 0,\n      cancelBtn: \"\",\n      cancelUpdateTitle: \"\"\n    };\n  },\n  mounted() {\n    this.getVersion();\n  },\n  beforeDestroy() {\n    // 移除事件监听\n    ipcRenderer.removeAllListeners(\"updateMessage\");\n    this.ipcRenderer.removeListener(\"downloadProgress\",this.updateProgress);\n    this.ipcRenderer.removeListener(\"downloadError\",this.downloadErrTip);\n    ipcRenderer.removeAllListeners(\"isUpdateNow\");\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  filters: {\n    textBr(val) {\n      console.log('ssss',val);\n      return val.replace(/↵/g,\"\\n\");\n    },\n  },\n  //方法集合\n  methods: {\n    ...mapMutations([LOGIN_OUT]),\n    init(val) {\n      console.log(val);\n      this.centerDialogVisible = val.centerDialogVisible;\n      this.forceUpgrade = val.forceUpgrade;\n      this.upgradeDesc = val.upgradeDesc;\n      this.version = val.versionCode;\n      this.cancelBtn = this.forceUpgrade == 0 ? this.$t('personal_0020') : this.$t('personal_0022');\n      this.cancelUpdateTitle =\n        this.forceUpgrade == 0\n          ? this.$t('personal_0072')\n          : this.$t('personal_0073');\n    },\n    downloadAPP() {\n      // window.open(`http://172.16.10.18:8081/didi-pc?suffix=${process.platform == 'darwin' ? 'dmg':'exe'}`)\n      shell.openExternal(`https://www.didimessage.com/`);\n    },\n    // 暂不更新/退出应用\n    async cancelUpdateApp() {\n      console.log(this.forceUpgrade, this.cancelBtn, this.cancelUpdateDialog);\n      ipcRenderer.send(\"cancelledUpdate\");\n      if (!this.forceUpgrade) {\n        // console.log(\"关闭退出更新页面到登录页面\");\n        this.cancelUpdateDialog = false;\n        this.centerDialogVisible = false;\n        await writeFile(this.version);\n        this.$emit(\"updateCenterDialogVisible\");\n        bus.$emit('closeDownload', true);\n      } else if (this.forceUpgrade) {\n        ipcRenderer.send(\"quit-win\");\n      }\n    },\n    closeUpdateApp() {\n      this.cancelUpdateDialog = true;\n    },\n    // 暂不更新/退出应用\n    async onCancelUpdateApp() {\n      ipcRenderer.send(\"cancelledUpdate\");\n      if (this.forceUpgrade) {\n        ipcRenderer.send(\"quit-win\");\n      }\n      this.centerDialogVisible = false;\n      await writeFile(this.version);\n      this.$emit(\"updateCenterDialogVisible\", false);\n      bus.$emit('closeDownload', true);\n    },\n    async reUpdateApp() {\n      await deleteFile();\n      this.cancelUpdateDialog = false;\n    },\n    async updateApp() {\n      console.log('route0- ',this.$route.name)\n      if (this.forceUpgrade == 0 || this.$route.name === 'login-qrcode') {\n        this.isUpdate = true;\n        await deleteFile();\n        if (this.cancelUpdateDialog) {\n          this.centerDialogVisible = true;\n          this.cancelUpdateDialog = false;\n        }\n        this.downloadDialogVisible = true;\n        this.tips = this.$t('personal_0074');\n        this.downloadUpdate();\n      } else {\n        // 强制更新，直接退出登录\n        this.LOGIN_OUT();\n      }\n    },\n    downloadUpdate() {\n      ipcRenderer.send(\"downloadUpdate\");\n    },\n    getVersion() {\n      //获取当前版本\n      ipcRenderer.on(\"app_version\", (event, arg) => {\n        ipcRenderer.removeAllListeners(\"app_version\");\n        this.currVersion = arg.version;\n      });\n      ipcRenderer.send(\"app_version\");\n    },\n    ondialogclose() {\n      if (this.forceUpgrade && !this.cancelUpdateDialog) {\n        this.cancelUpdateDialog = true;\n      } else if (!this.forceUpgrade && this.cancelUpdateDialog) {\n        this.cancelUpdateDialog = false;\n      } else if (!this.forceUpgrade && !this.cancelUpdateDialog) {\n        console.log(\"点 × 呼出退出更新页面\");\n        this.cancelUpdateDialog = true;\n      }\n    },\n    // 取消更新\n    reDownload() {\n      ipcRenderer.send(\"cancelUpdate\");\n      if(this.downloadPercent<100){\n        this.downloadPercent = 0;\n      }\n      // this.downloadUpdate();\n    },\n    updateProgress(event, progressObj){\n      console.log('checkcomp----', progressObj.percent)\n      let value = Math.trunc(progressObj.percent);\n      if(this.downloadPercent==100){\n        this.downloadPercent = value;\n      } else {\n        this.downloadPercent = this.downloadPercent > value ? this.downloadPercent : value;\n      }      \n    },\n    downloadErrTip() {\n      ipcRenderer.send(\"cancelledUpdate\");\n      // this.$emit(\"updateCenterDialogVisible\", false);\n      bus.$emit('closeDownload', true);\n      let _this = this;\n      this.$confirm(this.$t('personal_0080'), this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('personal_0081'),\n        cancelButtonText: this.forceUpgrade ? this.$t('personal_0022') : this.$t('Universal_0063'),\n        center: true,\n        showClose: true,\n        distinguishCancelAndClose: true,\n        customClass: 'download-err-dialog',\n        closeOnClickModal: false,\n        closeOnPressEscape: false,\n        beforeClose:function (action,instance,done) {\n          \n          if (action == 'confirm') {\n            _this.downloadAPP();\n            return false;\n          } else if (action == 'cancel') {\n            if (_this.forceUpgrade) {\n              _this.cancelUpdateApp();\n            }\n            done();\n          } else if (action == 'close') {\n            done();\n          }\n        },\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    console.log(appVersion, appVersionCode, this.forceUpgrade);\n    this.ipcRenderer = ipcRenderer;\n    this.ipcRenderer.on(\"downloadProgress\", this.updateProgress);\n    this.ipcRenderer.on('downloadError', this.downloadErrTip)\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\">\n// 退出更新\n.cancel-update-dialog {\n  //width: 346px;\n  height: 202px;\n  //left: 4.5%;\n  top: 12%;\n  // left: 50%;\n  // transform: translate(-50%);\n  .el-dialog {\n    border-radius: 5px;\n  }\n  /deep/ .el-dialog__title {\n    font-size: 16px;\n    font-weight: 500;\n    color: #151f34;\n  }\n  /deep/ .el-dialog__body {\n    padding: 30px 20px;\n  }\n  .cancel-update-dialog-p {\n    padding-left: 20px;\n    font-size: 14px;\n    color: #151f34;\n    line-height: 20px;\n  }\n  /deep/ .el-button {\n    //width: 120px;\n    height: 35px;\n  }\n  /deep/ .el-button--default {\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    border-radius: 4px;\n    border: 1px solid #2f54eb;\n    background: transparent;\n    span {\n      font-size: 14px;\n      font-weight: 400;\n      color: #2f54eb;\n    }\n  }\n  /deep/ .el-button--primary {\n    background: #2f54eb;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    border-radius: 4px;\n    span {\n      font-size: 14px;\n      font-weight: 400;\n      color: #fff;\n    }\n  }\n  .exitUpdateT {\n    margin: 20px auto 13px;\n    text-align: center;\n  }\n  .downloadLink {\n    text-align: center;\n    font-size: 12px;\n    color: #2f54eb;\n    text-decoration: underline;\n  }\n}\n// 版本更新\n.update-dialog {\n  h1 {\n    font-size: 16px;\n    font-weight: 600;\n    margin-bottom: 15px;\n  }\n  .version-tip {\n    font-size: 16px;\n  }\n  .el-dialog {\n    background: url(\"../../../assets/images/upload-pic.png\") no-repeat 50% 20px\n      #fff;\n    background-size: 100%;\n    width: 346px;\n    border-radius: 5px;\n    .el-dialog__body {\n      box-sizing: border-box;\n      height: 280px;\n      text-align: center;\n      padding-top: 100px;\n      color: rgba(21, 31, 52, 1);\n    }\n    .el-icon-close {\n      font-size: 26px;\n    }\n    .dialog-footer {\n      .el-button {\n        // width: 120px;\n        // height: 36px;\n        width: 148px;height: 40px;\n      }\n      .cancel-btn {\n        box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n        border-radius: 4px;\n        border: 1px solid rgba(47, 84, 235, 1);\n        color: rgba(47, 84, 235, 1);\n      }\n      .update-btn {\n        background: rgba(47, 84, 235, 1);\n        box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n      }\n    }\n    .version-title {\n      font-size: 16px;\n      color: rgba(21, 31, 52, 1);\n      padding-bottom: 15px;\n      font-weight: 550 !important;\n    }\n  }\n  .progress-wrapper {\n    height: 60px;\n    .progress-text {\n      display: flex;\n      justify-content: space-between;\n      padding-top: 10px;\n      font-size: 13px;\n      a:link {\n        color: -webkit-link;\n      }\n    }\n    .fault-text {\n      margin-top: 10px;\n      text-align: center;\n    }\n  }\n  .el-input {\n\n    .el-textarea__inner {\n      overflow: auto !important;\n      background: none;\n      // min-height: 40px;\n      padding-top: -30px;\n      padding-left: 0;\n      padding-right: 0;\n      // padding-left: 40px;\n      line-height: 1.8;\n      border: none;\n      height: auto;\n    }\n    .el-textarea__inner {\n      overflow-y: scroll !important;\n      overflow-x: hidden !important;\n\n      // 整体部分\n      &::-webkit-scrollbar {\n        display: block !important;\n        width: 4px;\n        background-color: rgba(0, 0, 0, 0);\n      }\n\n      // 滑动轨道\n      &::-webkit-scrollbar-track {\n        border-radius: 10px;\n        background-color: rgba(0, 0, 0, 0);\n      }\n\n      // 滑块\n      &::-webkit-scrollbar-thumb {\n        border-radius: 10px;\n        background-color: #b8b8b8;\n      }\n    }\n  }\n  .update-tips{\n    font-size: 12px;\n    color: #999;\n    margin-top: 8px;\n    word-break: break-word;\n  }\n}\n.download-err-dialog {\n  /deep/ .el-button--primary {\n    width: 120px !important;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".cancel-update-dialog": {
          "height": "202px",
          "top": "12%",
          ".el-dialog": {
            "border-radius": "5px"
          },
          "/deep/ .el-dialog__title": {
            "font-size": "16px",
            "font-weight": "500",
            "color": "#151f34"
          },
          "/deep/ .el-dialog__body": {
            "padding": "30px 20px"
          },
          ".cancel-update-dialog-p": {
            "padding-left": "20px",
            "font-size": "14px",
            "color": "#151f34",
            "line-height": "20px"
          },
          "/deep/ .el-button": {
            "height": "35px"
          },
          "/deep/ .el-button--default": {
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "border-radius": "4px",
            "border": "1px solid #2f54eb",
            "background": "transparent",
            "span": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "#2f54eb"
            }
          },
          "/deep/ .el-button--primary": {
            "background": "#2f54eb",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "border-radius": "4px",
            "span": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "#fff"
            }
          },
          ".exitUpdateT": {
            "margin": "20px auto 13px",
            "text-align": "center"
          },
          ".downloadLink": {
            "text-align": "center",
            "font-size": "12px",
            "color": "#2f54eb",
            "text-decoration": "underline"
          }
        },
        ".update-dialog": {
          "h1": {
            "font-size": "16px",
            "font-weight": "600",
            "margin-bottom": "15px"
          },
          ".version-tip": {
            "font-size": "16px"
          },
          ".el-dialog": {
            "background": "url(\"../../../assets/images/upload-pic.png\") no-repeat 50% 20px      #fff",
            "background-size": "100%",
            "width": "346px",
            "border-radius": "5px",
            ".el-dialog__body": {
              "box-sizing": "border-box",
              "height": "280px",
              "text-align": "center",
              "padding-top": "100px",
              "color": "rgba(21, 31, 52, 1)"
            },
            ".el-icon-close": {
              "font-size": "26px"
            },
            ".dialog-footer": {
              ".el-button": {
                "width": "148px",
                "height": "40px"
              },
              ".cancel-btn": {
                "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
                "border-radius": "4px",
                "border": "1px solid rgba(47, 84, 235, 1)",
                "color": "rgba(47, 84, 235, 1)"
              },
              ".update-btn": {
                "background": "rgba(47, 84, 235, 1)",
                "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)"
              }
            },
            ".version-title": {
              "font-size": "16px",
              "color": "rgba(21, 31, 52, 1)",
              "padding-bottom": "15px",
              "font-weight": "550 !important"
            }
          },
          ".progress-wrapper": {
            "height": "60px",
            ".progress-text": {
              "display": "flex",
              "justify-content": "space-between",
              "padding-top": "10px",
              "font-size": "13px",
              "a:link": {
                "color": "-webkit-link"
              }
            },
            ".fault-text": {
              "margin-top": "10px",
              "text-align": "center"
            }
          },
          ".el-input": {
            ".el-textarea__inner": {
              "overflow": "auto !important",
              "background": "none",
              "padding-top": "-30px",
              "padding-left": "0",
              "padding-right": "0",
              "line-height": "1.8",
              "border": "none",
              "height": "auto",
              "overflow-y": "scroll !important",
              "overflow-x": "hidden !important",
              "&::-webkit-scrollbar": {
                "display": "block !important",
                "width": "4px",
                "background-color": "rgba(0, 0, 0, 0)"
              },
              "&::-webkit-scrollbar-track": {
                "border-radius": "10px",
                "background-color": "rgba(0, 0, 0, 0)"
              },
              "&::-webkit-scrollbar-thumb": {
                "border-radius": "10px",
                "background-color": "#b8b8b8"
              }
            }
          },
          ".update-tips": {
            "font-size": "12px",
            "color": "#999",
            "margin-top": "8px",
            "word-break": "break-word"
          }
        },
        ".download-err-dialog": {
          "/deep/ .el-button--primary": {
            "width": "120px !important"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\">",
      "1": "<style lang=\"less\" scoped>",
      "2": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- layout -->\n<template>\n  <div class=\"layout\" ondragstart=\"return false\">\n    <el-container>\n      <el-aside class=\"flex flex-direction align-center leftElside\" :style=\"{ width: leftWidth }\">\n        <el-menu\n          router\n          class=\"el-menu-vertical-demo noDrag\"\n          :background-color=\"bgcolor\"\n          :default-active=\"onRoutes()\"\n          :show-timeout=\"1000\"\n          @dblclick.native=\"selectMenu\"\n        >\n          <div class=\"user-info flex flex-direction align-center drag\" :style=\"{ width: leftWidth }\">\n            <div class=\"user-head userAvater noDrag\">\n              <member-card :image=\"userInfo.headImg\" :user-id=\"userInfo.id\" :is-group-member=\"false\"></member-card>\n            </div>\n            <!-- <div class=\"user-name\" v-show=\"!isCollapse\">{{userInfo.nickName}}</div> -->\n          </div>\n          <el-menu-item :index=\"item.path\" v-for=\"item in menuList\" :key=\"item.path\" style=\"padding: 0 \" class=\"leftSide\">\n            <i :class=\"item.icon\" :title=\"item.name\"></i>\n            <el-badge is-dot v-if=\"item.path == '/app/contact' && totalNumber > 0\" class=\"apply_number\"></el-badge>\n            <el-badge is-dot v-else-if=\"item.path == '/app/chat' && orShowDot\" class=\"newchatmsg\"></el-badge>\n          </el-menu-item>\n        </el-menu>\n        <div v-popover:popover style=\"height:50px;color:#909399;\" class=\"noDrag set-icon\">\n          <img class=\"user-bottom\" src=\"../assets/images/menu_set.png\"  @click=\"Topass(2)\">\n          <el-badge is-dot v-if=\"idDotShow\"></el-badge>\n        </div>\n      </el-aside>\n      <el-container>\n        <!-- 设置新增3个弹框 密钥管理 账号安全 设置 -->\n        <el-dialog\n          title=\"密钥管理\"\n          @close=\"handCloseGroupSecretKey\"\n          :close-on-click-modal=\"false\"\n          width=\"550px\"\n          :visible=\"secretKeyVisible\"\n          class=\"key-manage\"\n        >\n          <SetsecretKey ref=\"chatSet\" :visible=\"secretKeyVisible\" />\n        </el-dialog>\n        <el-dialog\n          title=\"账号安全\"\n          @close=\"handCloseGroupSetSafe\"\n          :close-on-click-modal=\"false\"\n          width=\"550px\"\n          :visible=\"SafetyVisible\"\n          class=\"account-safe\"\n        >\n          <SetSafe ref=\"chatSet\" />\n        </el-dialog>\n\n        <!-- <el-dialog\n          :title=\"$t('Universal_0065')\"\n          @close=\"handCloseGroupSetgeneral\"\n          :close-on-click-modal=\"false\"\n          width=\"550px\"\n          :visible=\"SetgeneralVisible\"\n          class=\"setdialog\"\n        >\n          <Setgeneral ref=\"chatSet\" />\n        </el-dialog> -->\n        <el-dialog\n          @close=\"handCloseGroupSetgeneral\"\n          :close-on-click-modal=\"false\"\n          width=\"550px\"\n          :visible=\"SetgeneralVisible\"\n          class=\"setdialog\"\n        >\n          <div slot=\"title\" id=\"setTitleClick\" class=\"setTitle\" @click=\"multiClick\">\n            <span>{{$t('Universal_0065')}}</span>\n            <img src=\"../assets/images/lock.png\" alt=\"\" v-if=\"showLock\">\n          </div>\n          <Setgeneral ref=\"chatSet\" />\n\n          <el-dialog\n            width=\"30%\"\n            :title=\"$t('Universal_0059')\"\n            :visible.sync=\"innerVisible\"\n            center\n            append-to-body\n            :close-on-click-modal=\"false\"\n            :show-close=\"false\"\n            class=\"setTip\"\n          >\n          <div class=\"tipInfo\">确定加入DiDimessage内测？</div>\n          <div class=\"tipBtn\">\n            <el-button type=\"info\"  size=\"medium\" class=\"cancel\" @click=\"innerVisible=false\">\n              {{ $t('Universal_0063') }}\n            </el-button>\n            <el-button type=\"primary\"  size=\"medium\" class=\"submit\" @click=\"sureJoinInside\">\n              {{ $t('Universal_0062') }}\n            </el-button>\n          </div>\n          </el-dialog>\n        </el-dialog>\n        <!-- <DialogSetSafe :dialogGroupVisible='SafeyVisible' @handCloseGroup='handCloseGroupSafe' /> -->\n\n        <!-- <AddFriGrop v-if=\"addOrderVisible\" :visible.sync=\"addOrderVisible\"  @handCloseFri='handCloseFri'/>\n        <DialogGroupVisible :dialogGroupVisible='groupVisible' @handCloseGroup='handCloseGroup' />-->\n        <!-- <router-view v-if=\"/^\\/app\\/chat/.test($route.path)\" /> -->\n        <el-main :style=\"{ border: mainBorder, borderLeft: 'none' }\">\n          <div class=\"flex align-baseline justify-end topwork2\">\n            <i @click=\"hideWin()\" class=\"i1\" v-if=\"platform != 'darwin'\">\n              <img class=\"img_13\" src=\"../assets/images/di_closewin.png\"\n                   :title=\"$t('Universal_0375')\" />\n            </i>\n            <i @click=\"sizeWindow()\" v-if=\"!isMaxed && platform != 'darwin'\" class=\"i1\">\n              <img class=\"img_13\" src=\"../assets/images/di_maxmize.png\"\n                   :title=\"$t('Universal_0376')\" />\n            </i>\n            <i @click=\"sizeWindow()\" v-if=\"isMaxed && platform != 'darwin'\" class=\"i1\">\n              <img class=\"img_13\" src=\"../assets/images/di_minmize.png\"\n                   :title=\"$t('Universal_0377')\" />\n            </i>\n            <i class=\"i2\" @click=\"outToTray($event)\" v-if=\"platform != 'darwin'\">\n              <img class=\"img_12\" src=\"../assets/images/di_min_close.png\"\n                   :title=\"$t('Universal_0378')\" />\n            </i>\n          </div>\n          <router-view  />\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import DialogGroupVisible from \"../view/add-friends-group/dialog/sceate-groups\";\n// import AddFriGrop from \"../view/add-friends-group/add\";\nimport _ from 'lodash'\nimport Setgeneral from '../view/setting/Set'; //设置\nimport SetSafe from '../view/setting/SafeSetting'; //安全设置\nimport SetsecretKey from '../view/setting/form/secretKey'; //密钥管理\nimport MemberCard from '@/components/memberCard/MemberCard';\nimport { mapState, mapMutations, mapActions,mapGetters } from 'vuex';\nimport { LOGIN_OUT, GET_USER_INFO, SET_LAST_MSG_LIST, WIN_ACTIVE,LOGOUT } from '@/store/types';\n// import Ws from '@/utils/ws';\nimport { ipcRenderer } from 'electron';\nimport bus from '@/utils/eventbus';\nconst appVersionCode = require('../../package.json').version_code;\nconst appVersion = require('../../package.json').version;\nimport {check_update_by_server} from \"@/server\";\nimport { screenWindow } from \"@/utils/screenWindow\";\n// import downloadSDK from '../services/supplementaryDownload';\n// downloadSDK();\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { SetSafe, SetsecretKey, Setgeneral, MemberCard },\n  data() {\n    //这里存放数据\n    return {\n      closeDrawer:false,\n      platform: process.platform,\n      leftWidth: 0,\n      mainBorder: 'none',\n      direction: 'ttb',\n      defaultActive: '0',\n      searchListBox: false,\n      groupVisible: false,\n      Imgvisible: false,\n      secretKeyVisible: false,\n      SafetyVisible: false,\n      SetgeneralVisible: false,\n      addOrderVisible: false,\n      bgcolor: '#272A2D',\n      isCollapse: true,\n      keywrod: '',\n      setvis: false,\n      isMaxed: false,\n      latestVersion: '',\n      showLock:false,\n      innerVisible:false,\n\n      timer:null,\n      waitTime:500, // 该时间间隔内点击才算连续点击（单位：ms）\n      lastTime: new Date().getTime(), // 上次点击时间,\n      count:0, // 连续点击次数\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters(['lastMsgList']),\n    ...mapState({\n      userInfo: obj => {\n        return obj.state.userInfo;\n      },\n      totalNumber: state => {\n        return state.chat.totalSystemNumber;\n      },\n      // applyFriendNumber: (state) => {\n      //   return state.chat.applyFriendNumber;\n      // },\n      // rejectFriendNumber: (state) => {\n      //   return state.chat.rejectFriendNumber;\n      // },\n      // requestFriendNumber: (state) => {\n      //   return state.chat.requestFriendNumber;\n      // },\n      // 小红点\n      orShowDot: state => {\n        return state.chat.lastMsgList.some(item => {\n          return item.unread > 0;\n        });\n      },\n      versionUpdateInfo: obj => {\n        return obj.state.versionUpdateInfo\n      }\n    }),\n    socketStatus() {\n      return this.$store.state.common.socketStatus;\n    },\n    // 小红点\n    hasUnread(){\n      return this.lastMsgList.map(o=>o.unread)\n    },\n    idDotShow() {\n      // eslint-disable-next-line max-len\n      return this.versionUpdateInfo.versionSign !== undefined && this.versionUpdateInfo.versionSign !== false || (this.latestVersion && this.latestVersion !== appVersion);\n    },\n    menuList() {\n      return [\n        // {\n        //   name: \"导览\",\n        //   path: \"/app/guide\",\n        //   icon: \"el-icon-setting\"\n        // },\n        {\n          name: this.$t('opinions_0027'),\n          path: '/app/chat',\n          icon: 'el-icon-chat-dot-square'\n        },\n        {\n          name: this.$t('chat_search_0003'),\n          path: '/app/contact',\n          icon: 'el-icon-user'\n        }\n        // {\n        //   name: \"资产\",\n        //   path: \"/app/funds/general/wallet\",\n        //   icon: \"el-icon-wallet\"\n        // },\n        // {\n        //   name: \"看点\",\n        //   path: \"/app/viewpoint\",\n        //   icon: \"el-icon-view\"\n        // },\n        // {\n        //   name: \"设置\",\n        //   path: \"/app/chatsetting\",\n        //   icon: \"el-icon-setting\",\n        //   className:'lastli'\n        // }\n      ];\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    orShowDot(val) {\n      if (val == false) {\n        const ipc = require('electron').ipcRenderer;\n        ipc.send('no-message');\n      }\n    },\n    versionUpdateInfo: {\n      immediate: true,\n      deep: true,\n      handler: function (v) {\n        if (!v) {\n          // 版本一样\n          this.latestVersion = appVersion;\n        } else {\n          this.getUpdateVersion();\n        }\n        if (!v.updateInfo || v.updateInfo === undefined) {\n          // 没有数据\n          this.getUpdateVersion();\n        }\n      }\n    },\n    $route:{\n      immediate:true,\n      deep:true,\n      handler:function({name=''}){\n        // window非聊天窗口快捷键截图\n        if(process.platform !== \"darwin\"){\n          ipcRenderer.removeListener('windows-captureShortcut', this._handleWinClipboardWriteImage);\n          if(['contact','chat'].includes(name)){\n            ipcRenderer.on('windows-captureShortcut', this._handleWinClipboardWriteImage);\n          }\n        }\n      }\n    }, \n  },\n  //方法集合\n  methods: {\n    ...mapMutations([LOGIN_OUT, SET_LAST_MSG_LIST, WIN_ACTIVE,LOGOUT]),\n    ...mapActions([GET_USER_INFO, 'GET_SEARCH_SEEING', 'GET_SEARCH_GROUP', 'GET_SEARCH_FRIENDS']),\n\n    joinInside(){\n      console.log('process.env.VUE_APP_IS_SIGNAL',process.env.VUE_APP_IS_SIGNAL);\n\n      // 统计点击次数\n      let currentTime = new Date().getTime();\n      // 计算两次相连的点击时间间隔\n      this.count = (currentTime-this.lastTime) < this.waitTime ? this.count + 1 : 1;\n\n      // console.log('currentTime',currentTime);\n      // console.log('lastTime',this.lastTime);\n      // console.log('currentTime-this.lastTime',currentTime-this.lastTime);\n      console.log('this.count',this.count);\n      this.lastTime = new Date().getTime();\n      // console.log('this.lastTime-2',this.lastTime);\n      if (this.count > 4) {\n        // 连续点击超过4次的响应事件\n        console.log('点击超过4次了');\n        this.innerVisible=true; \n      }\n\n    },\n    multiClick: function(){\n      // 判断当前PC为加密版本且未开启加密模式\n      if (this.showLock) {\n        console.log('已开启加密模式');\n        this.innerVisible=false;\n        return;\n      }\n      // _.debounce(this.joinInside)()\n      _.debounce(this.joinInside,10)()\n    },\n    async sureJoinInside(){\n      await window.vm.$knex('t_userInfo').where({\n        id: localStorage.getItem('userId')\n      }).update({\n        isSign: 1\n      })\n      this.innerVisible=false;\n      this.showLock=true;\n      this.$store.commit('LOGIN_OUT');\n    },\n    onRoutes() {\n      let newVal = this.$route.path;\n      // this.navselected=1;\n      for (let menu of this.menuList) {\n        if (newVal.indexOf(menu.path) > -1) {\n          return menu.path;\n        }\n      }\n    },\n    selectMenu() {\n      if (this.$route.path === '/app/chat') {\n        this.$nextTick(() => {\n          bus.$emit('checkUnReadMessage');\n        });\n      }\n    },\n    outToTray() {\n      this.$remote.getCurrentWindow().hide();\n    },\n    sizeWindow() {\n      const browserWindow = this.$remote.getCurrentWindow();\n      if (!this.isMaxed) {\n        browserWindow.maximize();\n        this.isMaxed = true;\n      } else {\n        browserWindow.unmaximize();\n        this.isMaxed = false;\n      }\n    },\n    hideWin() {\n      // const browserWindow = window.vm.$remote.getCurrentWindow();\n      this.$remote.getCurrentWindow().minimize();\n    },\n    // show(a){\n    //   if(a=='left'){\n    //     this.isCollapse = false\n    //   } else if(a=='right'){\n    //     this.isCollapse = true\n    //   }\n    // },\n    // menuChange(e) {\n    //   this.$router.push({\n    //     path: e\n    //   });\n    // },\n    addHand() {\n      this.addOrderVisible = true;\n    },\n\n    handOpenGroup() {\n      // 打开发起群聊弹框\n      this.groupVisible = true;\n      // this.dialogAddFriendsVisible = true;\n    },\n    handCloseGroup() {\n      // 关闭发起群聊弹框\n      this.groupVisible = false;\n    },\n    handCloseGroupSecretKey() {\n      this.secretKeyVisible = false;\n    },\n    handCloseGroupSetSafe() {\n      this.SafetyVisible = false;\n    },\n    handCloseGroupSetgeneral() {\n      this.SetgeneralVisible = false;\n      this.$refs.chatSet.toUser(); //每次打开弹框，自动切换到账号设置\n    },\n    setGruop() {\n      this.setvis = true;\n    },\n    setCloseGruop() {\n      this.setvis = false;\n    },\n    handCloseFri() {\n      this.addOrderVisible = false;\n    },\n    search() {\n      if (!this.keywrod) {\n        this.$message.error(this.$t('Universal_0240'));\n        return;\n      }\n      // this.GET_SEARCH_SEEING({\n      //   pageSize: 10,\n      //   pageNumber: 1,\n      //   keyword: this.keywrod\n      // });\n      this.GET_SEARCH_GROUP({\n        param: this.keywrod\n      });\n      this.GET_SEARCH_FRIENDS({\n        code: this.keywrod\n      });\n      this.$store.state.search.keyword = this.keywrod;\n      if (this.$route.path == '/app/search') {\n        //\n      } else {\n        this.$router.push({\n          path: '/app/search'\n        });\n      }\n    },\n    Topass(i) {\n      switch (i) {\n      case 0:\n        this.secretKeyVisible = true;\n        if (this.$refs.secretkey) {\n          this.$refs.secretkey.checkRsaPrivate();\n        }\n        break;\n      case 1:\n        this.SafetyVisible = true;\n        break;\n      case 2:\n        this.SetgeneralVisible = true;\n        break;\n      }\n    },\n    goPersonSettingHand() {\n      if (this.$route.path == '/app/setting') return;\n      this.$router.push({\n        path: '/app/setting'\n      });\n    },\n    async resetAllsessionsUnread(event,isWinShow){\n      await this.$knex('t_sessions').update({ unread: 0,isAt: 0 });\n      if(!isWinShow){\n        // this.$router.push({name:\"chat\"});\n        this.getLastMsgList();\n      }\n      ipcRenderer.send('update-badge', [])//处理window托盘、mac通知\n    },\n    getLastMsgList(){\n      sessionStorage.removeItem('curChatUnvisibleTray');// 最小化 不可见时 当前对话窗口的消息计数\n      this.$store.dispatch('GET_LAST_MSG_LIST');\n    },\n    async toChat(e,sessionId){\n      if(!/^\\/app\\/chat/.test(this.$route.path)){\n        this.$router.push({name:\"chat\"});\n      }\n      // await this.$knex('t_sessions').update({ unread: 0 }).where({id});\n      // await this.$nextTick();\n      // this.$remote.getCurrentWindow().show();\n      sessionId && bus.$emit('jumpToChatById',sessionId);\n    },\n    _maximize(){\n      this.isMaxed = true;\n      console.log('maximize', this.isMaxed);\n    },\n    _unmaximize(){\n      this.isMaxed = false;\n      console.log('unmaximize', this.isMaxed);\n    },\n    // 请求版本接口\n    async getUpdateVersion() {\n      const updateInfo = await check_update_by_server({\n        currentVersion: appVersionCode\n      });\n      if (updateInfo.data) {\n        this.latestVersion = updateInfo.data.versionCode;\n      }\n    },\n    // window非聊天窗口快捷键截图\n    // eslint-disable-next-line no-unused-vars\n    _handleWinClipboardWriteImage(e,globalShortcutBol){\n      console.log('~~~~~window非聊天窗口快捷键截图~~~~~~~~~~')\n      // true 快捷键截图\n      screenWindow(globalShortcutBol);\n    },\n    //快捷键Ctrl+f操作\n    onsearch(){\n      let groupSearch = document.getElementById('groupSearch');//群成员搜索\n      let dissSearch = document.getElementById('dissSearch'); //组成员搜索\n      let forwardMsg = document.getElementById('forwardMsg'); //转发搜索input\n      let addFriSearch = document.getElementById('addFriSearch'); //添加好友搜索\n      let addGroupSearch = document.getElementById('addGroupSearch'); //添加社区搜索\n      let groupSystemAbleMem ='';\n      let dissSystemAbleMem ='';\n      let GroupInviteVisible ='';\n      let addFriVisible = null;\n      let addGroupVisible = null;\n      if(groupSearch){\n        groupSystemAbleMem = groupSearch.getAttribute('code')\n      }\n      if(dissSearch){\n        dissSystemAbleMem = dissSearch.getAttribute('code')\n      }\n      if(forwardMsg){\n        GroupInviteVisible = forwardMsg.getAttribute('code')\n      }\n      if(addFriSearch){\n        addFriVisible = addFriSearch.getAttribute('code')\n      }\n      if(addGroupSearch){\n        addGroupVisible = addGroupSearch.getAttribute('code')\n      }\n      console.log('search on blur', \n        document.getElementById('searchAll'),\n        document.getElementById('groupSearch'),groupSystemAbleMem,document.getElementById('dissSearch'))\n      if(forwardMsg && GroupInviteVisible){\n        forwardMsg.focus()\n      }else if(groupSearch && groupSystemAbleMem === 'true'){\n        groupSearch.focus()\n      }else if(dissSearch && dissSystemAbleMem){\n        dissSearch.focus()\n      }else if(addFriSearch && addFriVisible){\n        addFriSearch.focus()\n      }else if(addGroupSearch && addGroupVisible){\n        addGroupSearch.focus()\n      }else{\n        document.getElementById('searchAll').focus() //全局搜索\n      }\n    },\n    toggleActive(e, flag){\n      this[WIN_ACTIVE](flag);\n    },\n    _closeSocket(){\n      this.LOGOUT();\n    },\n    jumpToChat() {\n      if (!this.$route.path.includes('/app/chat')) {\n        this.$router.push('/app/chat')\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  async created() {\n    this.GET_USER_INFO();\n    // Ws.init(this);\n    if (process.platform !== 'darwin') {\n      this.leftWidth = '60px';\n      this.mainBorder = '#ddd solid 1px';\n    } else {\n      this.leftWidth = '70px';\n      this.mainBorder = 'none';\n    }\n    const userIsSigns = await window.vm.$knex('t_userInfo').where({ id: localStorage.getItem('userId') });\n    console.log('settings-->',userIsSigns);\n    this.showLock = userIsSigns[0].isSign;\n    this.$remote.getCurrentWindow().addListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().addListener('unmaximize',this._unmaximize)\n    // socket.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    ipcRenderer.on('reset-all-session-unread', this.resetAllsessionsUnread);\n    ipcRenderer.on('jump-to-chat-by-id', this.toChat);\n    ipcRenderer.on('get-last-msg-list', this.getLastMsgList);\n    ipcRenderer.on('onsearch', this.onsearch); //全局搜索快捷键\n    ipcRenderer.on('activate', this.toggleActive)\n    ipcRenderer.on('closeSocket', this._closeSocket);\n    ipcRenderer.on('jump-to-chat', this.jumpToChat);\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    ipcRenderer.removeListener('closeSocket', this._closeSocket);\n    this.$remote.getCurrentWindow().removeListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().removeListener('unmaximize',this._unmaximize)\n    ipcRenderer.removeListener('reset-all-session-unread', this.resetAllsessionsUnread);\n    ipcRenderer.removeListener('jump-to-chat-by-id', this.toChat);\n    ipcRenderer.removeListener('get-last-msg-list', this.getLastMsgList);\n    ipcRenderer.removeListener('onsearch', this.onsearch);\n    ipcRenderer.removeListener('activate', this.toggleActive)\n    // window非聊天窗口快捷键截图\n    if(process.platform !== \"darwin\"){\n      ipcRenderer.removeListener('windows-captureShortcut', this._handleWinClipboardWriteImage);\n    }\n    ipcRenderer.removeListener('jump-to-chat', this.jumpToChat);\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- layout -->\n<template>\n  <div class=\"layout\" ondragstart=\"return false\">\n    <el-container>\n      <el-aside class=\"flex flex-direction align-center leftElside\" :style=\"{ width: leftWidth }\">\n        <el-menu\n          router\n          class=\"el-menu-vertical-demo noDrag\"\n          :background-color=\"bgcolor\"\n          :default-active=\"onRoutes()\"\n          :show-timeout=\"1000\"\n          @dblclick.native=\"selectMenu\"\n        >\n          <div class=\"user-info flex flex-direction align-center drag\" :style=\"{ width: leftWidth }\">\n            <div class=\"user-head userAvater noDrag\">\n              <member-card :image=\"userInfo.headImg\" :user-id=\"userInfo.id\" :is-group-member=\"false\"></member-card>\n            </div>\n            <!-- <div class=\"user-name\" v-show=\"!isCollapse\">{{userInfo.nickName}}</div> -->\n          </div>\n          <el-menu-item :index=\"item.path\" v-for=\"item in menuList\" :key=\"item.path\" style=\"padding: 0 \" class=\"leftSide\">\n            <i :class=\"item.icon\" :title=\"item.name\"></i>\n            <el-badge is-dot v-if=\"item.path == '/app/contact' && totalNumber > 0\" class=\"apply_number\"></el-badge>\n            <el-badge is-dot v-else-if=\"item.path == '/app/chat' && orShowDot\" class=\"newchatmsg\"></el-badge>\n          </el-menu-item>\n        </el-menu>\n        <div v-popover:popover style=\"height:50px;color:#909399;\" class=\"noDrag set-icon\">\n          <img class=\"user-bottom\" src=\"../assets/images/menu_set.png\"  @click=\"Topass(2)\">\n          <el-badge is-dot v-if=\"idDotShow\"></el-badge>\n        </div>\n      </el-aside>\n      <el-container>\n        <!-- 设置新增3个弹框 密钥管理 账号安全 设置 -->\n        <el-dialog\n          title=\"密钥管理\"\n          @close=\"handCloseGroupSecretKey\"\n          :close-on-click-modal=\"false\"\n          width=\"550px\"\n          :visible=\"secretKeyVisible\"\n          class=\"key-manage\"\n        >\n          <SetsecretKey ref=\"chatSet\" :visible=\"secretKeyVisible\" />\n        </el-dialog>\n        <el-dialog\n          title=\"账号安全\"\n          @close=\"handCloseGroupSetSafe\"\n          :close-on-click-modal=\"false\"\n          width=\"550px\"\n          :visible=\"SafetyVisible\"\n          class=\"account-safe\"\n        >\n          <SetSafe ref=\"chatSet\" />\n        </el-dialog>\n\n        <!-- <el-dialog\n          :title=\"$t('Universal_0065')\"\n          @close=\"handCloseGroupSetgeneral\"\n          :close-on-click-modal=\"false\"\n          width=\"550px\"\n          :visible=\"SetgeneralVisible\"\n          class=\"setdialog\"\n        >\n          <Setgeneral ref=\"chatSet\" />\n        </el-dialog> -->\n        <el-dialog\n          @close=\"handCloseGroupSetgeneral\"\n          :close-on-click-modal=\"false\"\n          width=\"550px\"\n          :visible=\"SetgeneralVisible\"\n          class=\"setdialog\"\n        >\n          <div slot=\"title\" id=\"setTitleClick\" class=\"setTitle\" @click=\"multiClick\">\n            <span>{{$t('Universal_0065')}}</span>\n            <img src=\"../assets/images/lock.png\" alt=\"\" v-if=\"showLock\">\n          </div>\n          <Setgeneral ref=\"chatSet\" />\n\n          <el-dialog\n            width=\"30%\"\n            :title=\"$t('Universal_0059')\"\n            :visible.sync=\"innerVisible\"\n            center\n            append-to-body\n            :close-on-click-modal=\"false\"\n            :show-close=\"false\"\n            class=\"setTip\"\n          >\n          <div class=\"tipInfo\">确定加入DiDimessage内测？</div>\n          <div class=\"tipBtn\">\n            <el-button type=\"info\"  size=\"medium\" class=\"cancel\" @click=\"innerVisible=false\">\n              {{ $t('Universal_0063') }}\n            </el-button>\n            <el-button type=\"primary\"  size=\"medium\" class=\"submit\" @click=\"sureJoinInside\">\n              {{ $t('Universal_0062') }}\n            </el-button>\n          </div>\n          </el-dialog>\n        </el-dialog>\n        <!-- <DialogSetSafe :dialogGroupVisible='SafeyVisible' @handCloseGroup='handCloseGroupSafe' /> -->\n\n        <!-- <AddFriGrop v-if=\"addOrderVisible\" :visible.sync=\"addOrderVisible\"  @handCloseFri='handCloseFri'/>\n        <DialogGroupVisible :dialogGroupVisible='groupVisible' @handCloseGroup='handCloseGroup' />-->\n        <!-- <router-view v-if=\"/^\\/app\\/chat/.test($route.path)\" /> -->\n        <el-main :style=\"{ border: mainBorder, borderLeft: 'none' }\">\n          <div class=\"flex align-baseline justify-end topwork2\">\n            <i @click=\"hideWin()\" class=\"i1\" v-if=\"platform != 'darwin'\">\n              <img class=\"img_13\" src=\"../assets/images/di_closewin.png\"\n                   :title=\"$t('Universal_0375')\" />\n            </i>\n            <i @click=\"sizeWindow()\" v-if=\"!isMaxed && platform != 'darwin'\" class=\"i1\">\n              <img class=\"img_13\" src=\"../assets/images/di_maxmize.png\"\n                   :title=\"$t('Universal_0376')\" />\n            </i>\n            <i @click=\"sizeWindow()\" v-if=\"isMaxed && platform != 'darwin'\" class=\"i1\">\n              <img class=\"img_13\" src=\"../assets/images/di_minmize.png\"\n                   :title=\"$t('Universal_0377')\" />\n            </i>\n            <i class=\"i2\" @click=\"outToTray($event)\" v-if=\"platform != 'darwin'\">\n              <img class=\"img_12\" src=\"../assets/images/di_min_close.png\"\n                   :title=\"$t('Universal_0378')\" />\n            </i>\n          </div>\n          <router-view  />\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import DialogGroupVisible from \"../view/add-friends-group/dialog/sceate-groups\";\n// import AddFriGrop from \"../view/add-friends-group/add\";\nimport _ from 'lodash'\nimport Setgeneral from '../view/setting/Set'; //设置\nimport SetSafe from '../view/setting/SafeSetting'; //安全设置\nimport SetsecretKey from '../view/setting/form/secretKey'; //密钥管理\nimport MemberCard from '@/components/memberCard/MemberCard';\nimport { mapState, mapMutations, mapActions,mapGetters } from 'vuex';\nimport { LOGIN_OUT, GET_USER_INFO, SET_LAST_MSG_LIST, WIN_ACTIVE,LOGOUT } from '@/store/types';\n// import Ws from '@/utils/ws';\nimport { ipcRenderer } from 'electron';\nimport bus from '@/utils/eventbus';\nconst appVersionCode = require('../../package.json').version_code;\nconst appVersion = require('../../package.json').version;\nimport {check_update_by_server} from \"@/server\";\nimport { screenWindow } from \"@/utils/screenWindow\";\n// import downloadSDK from '../services/supplementaryDownload';\n// downloadSDK();\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { SetSafe, SetsecretKey, Setgeneral, MemberCard },\n  data() {\n    //这里存放数据\n    return {\n      closeDrawer:false,\n      platform: process.platform,\n      leftWidth: 0,\n      mainBorder: 'none',\n      direction: 'ttb',\n      defaultActive: '0',\n      searchListBox: false,\n      groupVisible: false,\n      Imgvisible: false,\n      secretKeyVisible: false,\n      SafetyVisible: false,\n      SetgeneralVisible: false,\n      addOrderVisible: false,\n      bgcolor: '#272A2D',\n      isCollapse: true,\n      keywrod: '',\n      setvis: false,\n      isMaxed: false,\n      latestVersion: '',\n      showLock:false,\n      innerVisible:false,\n\n      timer:null,\n      waitTime:500, // 该时间间隔内点击才算连续点击（单位：ms）\n      lastTime: new Date().getTime(), // 上次点击时间,\n      count:0, // 连续点击次数\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters(['lastMsgList']),\n    ...mapState({\n      userInfo: obj => {\n        return obj.state.userInfo;\n      },\n      totalNumber: state => {\n        return state.chat.totalSystemNumber;\n      },\n      // applyFriendNumber: (state) => {\n      //   return state.chat.applyFriendNumber;\n      // },\n      // rejectFriendNumber: (state) => {\n      //   return state.chat.rejectFriendNumber;\n      // },\n      // requestFriendNumber: (state) => {\n      //   return state.chat.requestFriendNumber;\n      // },\n      // 小红点\n      orShowDot: state => {\n        return state.chat.lastMsgList.some(item => {\n          return item.unread > 0;\n        });\n      },\n      versionUpdateInfo: obj => {\n        return obj.state.versionUpdateInfo\n      }\n    }),\n    socketStatus() {\n      return this.$store.state.common.socketStatus;\n    },\n    // 小红点\n    hasUnread(){\n      return this.lastMsgList.map(o=>o.unread)\n    },\n    idDotShow() {\n      // eslint-disable-next-line max-len\n      return this.versionUpdateInfo.versionSign !== undefined && this.versionUpdateInfo.versionSign !== false || (this.latestVersion && this.latestVersion !== appVersion);\n    },\n    menuList() {\n      return [\n        // {\n        //   name: \"导览\",\n        //   path: \"/app/guide\",\n        //   icon: \"el-icon-setting\"\n        // },\n        {\n          name: this.$t('opinions_0027'),\n          path: '/app/chat',\n          icon: 'el-icon-chat-dot-square'\n        },\n        {\n          name: this.$t('chat_search_0003'),\n          path: '/app/contact',\n          icon: 'el-icon-user'\n        }\n        // {\n        //   name: \"资产\",\n        //   path: \"/app/funds/general/wallet\",\n        //   icon: \"el-icon-wallet\"\n        // },\n        // {\n        //   name: \"看点\",\n        //   path: \"/app/viewpoint\",\n        //   icon: \"el-icon-view\"\n        // },\n        // {\n        //   name: \"设置\",\n        //   path: \"/app/chatsetting\",\n        //   icon: \"el-icon-setting\",\n        //   className:'lastli'\n        // }\n      ];\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    orShowDot(val) {\n      if (val == false) {\n        const ipc = require('electron').ipcRenderer;\n        ipc.send('no-message');\n      }\n    },\n    versionUpdateInfo: {\n      immediate: true,\n      deep: true,\n      handler: function (v) {\n        if (!v) {\n          // 版本一样\n          this.latestVersion = appVersion;\n        } else {\n          this.getUpdateVersion();\n        }\n        if (!v.updateInfo || v.updateInfo === undefined) {\n          // 没有数据\n          this.getUpdateVersion();\n        }\n      }\n    },\n    $route:{\n      immediate:true,\n      deep:true,\n      handler:function({name=''}){\n        // window非聊天窗口快捷键截图\n        if(process.platform !== \"darwin\"){\n          ipcRenderer.removeListener('windows-captureShortcut', this._handleWinClipboardWriteImage);\n          if(['contact','chat'].includes(name)){\n            ipcRenderer.on('windows-captureShortcut', this._handleWinClipboardWriteImage);\n          }\n        }\n      }\n    }, \n  },\n  //方法集合\n  methods: {\n    ...mapMutations([LOGIN_OUT, SET_LAST_MSG_LIST, WIN_ACTIVE,LOGOUT]),\n    ...mapActions([GET_USER_INFO, 'GET_SEARCH_SEEING', 'GET_SEARCH_GROUP', 'GET_SEARCH_FRIENDS']),\n\n    joinInside(){\n      console.log('process.env.VUE_APP_IS_SIGNAL',process.env.VUE_APP_IS_SIGNAL);\n\n      // 统计点击次数\n      let currentTime = new Date().getTime();\n      // 计算两次相连的点击时间间隔\n      this.count = (currentTime-this.lastTime) < this.waitTime ? this.count + 1 : 1;\n\n      // console.log('currentTime',currentTime);\n      // console.log('lastTime',this.lastTime);\n      // console.log('currentTime-this.lastTime',currentTime-this.lastTime);\n      console.log('this.count',this.count);\n      this.lastTime = new Date().getTime();\n      // console.log('this.lastTime-2',this.lastTime);\n      if (this.count > 4) {\n        // 连续点击超过4次的响应事件\n        console.log('点击超过4次了');\n        this.innerVisible=true; \n      }\n\n    },\n    multiClick: function(){\n      // 判断当前PC为加密版本且未开启加密模式\n      if (this.showLock) {\n        console.log('已开启加密模式');\n        this.innerVisible=false;\n        return;\n      }\n      // _.debounce(this.joinInside)()\n      _.debounce(this.joinInside,10)()\n    },\n    async sureJoinInside(){\n      await window.vm.$knex('t_userInfo').where({\n        id: localStorage.getItem('userId')\n      }).update({\n        isSign: 1\n      })\n      this.innerVisible=false;\n      this.showLock=true;\n      this.$store.commit('LOGIN_OUT');\n    },\n    onRoutes() {\n      let newVal = this.$route.path;\n      // this.navselected=1;\n      for (let menu of this.menuList) {\n        if (newVal.indexOf(menu.path) > -1) {\n          return menu.path;\n        }\n      }\n    },\n    selectMenu() {\n      if (this.$route.path === '/app/chat') {\n        this.$nextTick(() => {\n          bus.$emit('checkUnReadMessage');\n        });\n      }\n    },\n    outToTray() {\n      this.$remote.getCurrentWindow().hide();\n    },\n    sizeWindow() {\n      const browserWindow = this.$remote.getCurrentWindow();\n      if (!this.isMaxed) {\n        browserWindow.maximize();\n        this.isMaxed = true;\n      } else {\n        browserWindow.unmaximize();\n        this.isMaxed = false;\n      }\n    },\n    hideWin() {\n      // const browserWindow = window.vm.$remote.getCurrentWindow();\n      this.$remote.getCurrentWindow().minimize();\n    },\n    // show(a){\n    //   if(a=='left'){\n    //     this.isCollapse = false\n    //   } else if(a=='right'){\n    //     this.isCollapse = true\n    //   }\n    // },\n    // menuChange(e) {\n    //   this.$router.push({\n    //     path: e\n    //   });\n    // },\n    addHand() {\n      this.addOrderVisible = true;\n    },\n\n    handOpenGroup() {\n      // 打开发起群聊弹框\n      this.groupVisible = true;\n      // this.dialogAddFriendsVisible = true;\n    },\n    handCloseGroup() {\n      // 关闭发起群聊弹框\n      this.groupVisible = false;\n    },\n    handCloseGroupSecretKey() {\n      this.secretKeyVisible = false;\n    },\n    handCloseGroupSetSafe() {\n      this.SafetyVisible = false;\n    },\n    handCloseGroupSetgeneral() {\n      this.SetgeneralVisible = false;\n      this.$refs.chatSet.toUser(); //每次打开弹框，自动切换到账号设置\n    },\n    setGruop() {\n      this.setvis = true;\n    },\n    setCloseGruop() {\n      this.setvis = false;\n    },\n    handCloseFri() {\n      this.addOrderVisible = false;\n    },\n    search() {\n      if (!this.keywrod) {\n        this.$message.error(this.$t('Universal_0240'));\n        return;\n      }\n      // this.GET_SEARCH_SEEING({\n      //   pageSize: 10,\n      //   pageNumber: 1,\n      //   keyword: this.keywrod\n      // });\n      this.GET_SEARCH_GROUP({\n        param: this.keywrod\n      });\n      this.GET_SEARCH_FRIENDS({\n        code: this.keywrod\n      });\n      this.$store.state.search.keyword = this.keywrod;\n      if (this.$route.path == '/app/search') {\n        //\n      } else {\n        this.$router.push({\n          path: '/app/search'\n        });\n      }\n    },\n    Topass(i) {\n      switch (i) {\n      case 0:\n        this.secretKeyVisible = true;\n        if (this.$refs.secretkey) {\n          this.$refs.secretkey.checkRsaPrivate();\n        }\n        break;\n      case 1:\n        this.SafetyVisible = true;\n        break;\n      case 2:\n        this.SetgeneralVisible = true;\n        break;\n      }\n    },\n    goPersonSettingHand() {\n      if (this.$route.path == '/app/setting') return;\n      this.$router.push({\n        path: '/app/setting'\n      });\n    },\n    async resetAllsessionsUnread(event,isWinShow){\n      await this.$knex('t_sessions').update({ unread: 0,isAt: 0 });\n      if(!isWinShow){\n        // this.$router.push({name:\"chat\"});\n        this.getLastMsgList();\n      }\n      ipcRenderer.send('update-badge', [])//处理window托盘、mac通知\n    },\n    getLastMsgList(){\n      sessionStorage.removeItem('curChatUnvisibleTray');// 最小化 不可见时 当前对话窗口的消息计数\n      this.$store.dispatch('GET_LAST_MSG_LIST');\n    },\n    async toChat(e,sessionId){\n      if(!/^\\/app\\/chat/.test(this.$route.path)){\n        this.$router.push({name:\"chat\"});\n      }\n      // await this.$knex('t_sessions').update({ unread: 0 }).where({id});\n      // await this.$nextTick();\n      // this.$remote.getCurrentWindow().show();\n      sessionId && bus.$emit('jumpToChatById',sessionId);\n    },\n    _maximize(){\n      this.isMaxed = true;\n      console.log('maximize', this.isMaxed);\n    },\n    _unmaximize(){\n      this.isMaxed = false;\n      console.log('unmaximize', this.isMaxed);\n    },\n    // 请求版本接口\n    async getUpdateVersion() {\n      const updateInfo = await check_update_by_server({\n        currentVersion: appVersionCode\n      });\n      if (updateInfo.data) {\n        this.latestVersion = updateInfo.data.versionCode;\n      }\n    },\n    // window非聊天窗口快捷键截图\n    // eslint-disable-next-line no-unused-vars\n    _handleWinClipboardWriteImage(e,globalShortcutBol){\n      console.log('~~~~~window非聊天窗口快捷键截图~~~~~~~~~~')\n      // true 快捷键截图\n      screenWindow(globalShortcutBol);\n    },\n    //快捷键Ctrl+f操作\n    onsearch(){\n      let groupSearch = document.getElementById('groupSearch');//群成员搜索\n      let dissSearch = document.getElementById('dissSearch'); //组成员搜索\n      let forwardMsg = document.getElementById('forwardMsg'); //转发搜索input\n      let addFriSearch = document.getElementById('addFriSearch'); //添加好友搜索\n      let addGroupSearch = document.getElementById('addGroupSearch'); //添加社区搜索\n      let groupSystemAbleMem ='';\n      let dissSystemAbleMem ='';\n      let GroupInviteVisible ='';\n      let addFriVisible = null;\n      let addGroupVisible = null;\n      if(groupSearch){\n        groupSystemAbleMem = groupSearch.getAttribute('code')\n      }\n      if(dissSearch){\n        dissSystemAbleMem = dissSearch.getAttribute('code')\n      }\n      if(forwardMsg){\n        GroupInviteVisible = forwardMsg.getAttribute('code')\n      }\n      if(addFriSearch){\n        addFriVisible = addFriSearch.getAttribute('code')\n      }\n      if(addGroupSearch){\n        addGroupVisible = addGroupSearch.getAttribute('code')\n      }\n      console.log('search on blur', \n        document.getElementById('searchAll'),\n        document.getElementById('groupSearch'),groupSystemAbleMem,document.getElementById('dissSearch'))\n      if(forwardMsg && GroupInviteVisible){\n        forwardMsg.focus()\n      }else if(groupSearch && groupSystemAbleMem === 'true'){\n        groupSearch.focus()\n      }else if(dissSearch && dissSystemAbleMem){\n        dissSearch.focus()\n      }else if(addFriSearch && addFriVisible){\n        addFriSearch.focus()\n      }else if(addGroupSearch && addGroupVisible){\n        addGroupSearch.focus()\n      }else{\n        document.getElementById('searchAll').focus() //全局搜索\n      }\n    },\n    toggleActive(e, flag){\n      this[WIN_ACTIVE](flag);\n    },\n    _closeSocket(){\n      this.LOGOUT();\n    },\n    jumpToChat() {\n      if (!this.$route.path.includes('/app/chat')) {\n        this.$router.push('/app/chat')\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  async created() {\n    this.GET_USER_INFO();\n    // Ws.init(this);\n    if (process.platform !== 'darwin') {\n      this.leftWidth = '60px';\n      this.mainBorder = '#ddd solid 1px';\n    } else {\n      this.leftWidth = '70px';\n      this.mainBorder = 'none';\n    }\n    const userIsSigns = await window.vm.$knex('t_userInfo').where({ id: localStorage.getItem('userId') });\n    console.log('settings-->',userIsSigns);\n    this.showLock = userIsSigns[0].isSign;\n    this.$remote.getCurrentWindow().addListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().addListener('unmaximize',this._unmaximize)\n    // socket.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    ipcRenderer.on('reset-all-session-unread', this.resetAllsessionsUnread);\n    ipcRenderer.on('jump-to-chat-by-id', this.toChat);\n    ipcRenderer.on('get-last-msg-list', this.getLastMsgList);\n    ipcRenderer.on('onsearch', this.onsearch); //全局搜索快捷键\n    ipcRenderer.on('activate', this.toggleActive)\n    ipcRenderer.on('closeSocket', this._closeSocket);\n    ipcRenderer.on('jump-to-chat', this.jumpToChat);\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    ipcRenderer.removeListener('closeSocket', this._closeSocket);\n    this.$remote.getCurrentWindow().removeListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().removeListener('unmaximize',this._unmaximize)\n    ipcRenderer.removeListener('reset-all-session-unread', this.resetAllsessionsUnread);\n    ipcRenderer.removeListener('jump-to-chat-by-id', this.toChat);\n    ipcRenderer.removeListener('get-last-msg-list', this.getLastMsgList);\n    ipcRenderer.removeListener('onsearch', this.onsearch);\n    ipcRenderer.removeListener('activate', this.toggleActive)\n    // window非聊天窗口快捷键截图\n    if(process.platform !== \"darwin\"){\n      ipcRenderer.removeListener('windows-captureShortcut', this._handleWinClipboardWriteImage);\n    }\n    ipcRenderer.removeListener('jump-to-chat', this.jumpToChat);\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\">\n.setdialog {\n  .el-dialog__header{\n    padding:15px 20px 15px;\n    \n    .setTitle{\n      width: 100px;height: 26px;line-height: 26px;\n      font-size: 18px;color: #303133;\n\n      img{\n        width: 20px;height: 20px;\n        vertical-align: middle;\n        margin-left: 5px;\n        margin-top: -5px;\n      }\n    }\n  }\n  .el-dialog__body {\n    padding: 0 0 30px;\n    border-top: #e7e7e7 solid 1px;\n  }\n}\n.setTip{\n  .el-dialog--center .el-dialog__body{\n    padding: 0 25px 25px;\n  }\n  .tipInfo{\n    width: 100%;text-align: center;\n    font-size: 17px;\n    color: #333;\n    margin: 20px 0 35px;\n  }\n\n  .tipBtn{\n    text-align: center;\n    button{\n      width: 100px;\n      font-size: 15px;letter-spacing: 1px;\n    }\n\n    .el-button--info{\n      background-color: #fff;\n      border-color: #2F54EB;\n      color: #2F54EB;\n    }\n  }\n}\n\n\n.topwork2 {\n  -webkit-app-region: drag;\n  // background: #fff;\n  height: 21px;\n  padding: 0;\n  position: fixed;\n  top: 2px;\n  right: 0;\n  width: calc(100% - 340px);\n  z-index: 1000;\n  .i1 {\n    &:hover {\n      background: #e7e7e7;\n    }\n  }\n  .i2 {\n    padding-right: 8px;\n    &:hover {\n      background: #fa5151;\n    }\n  }\n  // img,\n  i {\n    padding: 3px 8px 0;\n    display: inline-block;\n    -webkit-app-region: no-drag;\n  }\n}\n.el-menu-vertical-demo:not(.el-menu--collapse) {\n  width: 100%;\n  min-height: 400px;\n}\n.el-menu--collapse {\n  width: 60px;\n}\n.el-menu {\n  border-right: none;\n  .el-menu-item:nth-child(6) {\n    margin-top: 160px;\n  }\n}\n.my_class {\n  text-align: left;\n  display: inline-block;\n  width: 200px;\n}\n.my_class input.el-input__inner {\n  font-size: 12px;\n  border-radius: 5px;\n  border: none;\n  background: #f6f6f6;\n  border: 1px solid #e4e4e4;\n  height: 30px;\n  line-height: 30px;\n  color: #555;\n}\n.newchatmsg {\n  position: absolute;\n\n  /deep/ .el-badge__content.is-dot {\n    margin-top: -15px;\n  }\n}\n.apply_number {\n  position: absolute;\n}\n.apply_number .el-badge__content.is-fixed {\n  top: 10px;\n  right: 13px;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.visible {\n  visibility: hidden;\n}\n.el-header {\n  padding: 0 8px;\n  background: #fff;\n  box-shadow: 0px 1px 1px 0px rgba(153, 153, 153, 0.3);\n  color: #333;\n  text-align: center;\n  line-height: 60px;\n}\n.el-menu {\n  min-height: 300px;\n  height: 95%;\n}\n\n.el-aside {\n  // background-color: #d3dce6;\n  color: #333;\n  text-align: center;\n  .user-info {\n    // width: auto;\n    height: 100px;\n    margin-bottom: 50px;\n    // height: 150px;\n    padding: 20px 0 0 0;\n    font-size: 18px;\n    font-weight: 400;\n    color: rgba(51, 51, 51, 1);\n    // border-right: solid 1px #e6e6e6;\n    box-sizing: border-box;\n  }\n  .info-btn {\n    position: relative;\n    // border-right: solid 1px #e6e6e6;\n    width: 100%;\n    height: 20px;\n    .btn {\n      position: absolute;\n      right: 0;\n      top: 10px;\n      z-index: 10;\n    }\n  }\n}\n\n.el-main {\n  background-color: #ffffff;\n  color: #000;\n  padding: 0;\n  height: 100vh;\n  overflow: hidden;\n  // text-align: center;\n  // line-height: 160px;\n}\n.el-icon-bell {\n  margin: 0 20px;\n  cursor: pointer;\n}\n.el-icon-switch-button {\n  cursor: pointer;\n  margin-right: 20px;\n}\n\nbody .el-container {\n  // min-height: 100vh;\n  height: 100%;\n}\n.anquan {\n  font-size: 12px;\n\n  font-weight: 400;\n  color: rgba(47, 84, 235, 1);\n  line-height: 17px;\n  margin-top: 10px;\n}\n.width-min {\n  width: 60px;\n}\n.width-max {\n  width: 126px;\n}\n\n.leftSide {\n  /deep/ i {\n    margin-right: -1px;\n  }\n  /deep/ .el-badge {\n    margin-left: -5px;\n  }\n\n  /deep/ .el-badge__content {\n    background-color: #ff0000;\n    border: none;\n  }\n\n  /deep/ .el-menu-item * {\n    vertical-align: text-top;\n  }\n  font-weight: 400;\n  color: rgba(47, 84, 235, 1);\n  margin-top: 10px;\n}\n.set-icon {\n  position: relative;\n  width: 100%;\n  .user-bottom {\n    margin: 0 auto 60px;\n    cursor: pointer;\n    height: 20px;\n    width: 20px;\n    box-sizing: border-box;\n  }\n  .el-badge {\n    position: absolute;\n    top: -1px;\n    right: 16px;\n    /deep/ .el-badge__content {\n      border: none;\n      background-color: #ff0000;\n    }\n  }\n}\n.width-min {\n  width: 60px;\n}\n.width-max {\n  width: 126px;\n}\n.leftElside {\n  border-right: solid 1px #e6e6e6;\n  background: #26292c;\n  width: 60px;\n  overflow: hidden;\n}\n</style>\n\n<style lang=\"less\" scoped>\n// 密钥管理-dialog\n.key-manage {\n  /deep/ .el-dialog__header {\n    border-bottom: 1px solid #efeeee;\n    padding-top: 15px;\n  }\n\n  /deep/ .el-dialog__title {\n    font-size: 14px;\n\n    font-weight: 600;\n    color: #333333;\n  }\n  /deep/ .el-dialog__headerbtn {\n    // top: 20px;\n\n    .el-dialog__close {\n      color: #000;\n    }\n  }\n\n  /deep/ .el-dialog__body {\n    padding: 15px;\n    height: 300px;\n  }\n}\n\n// 账号安全dialog\n.account-safe {\n  /deep/ .el-dialog__header {\n    border-bottom: 1px solid #efeeee;\n    padding-top: 15px;\n  }\n\n  /deep/ .el-dialog__title {\n    font-size: 14px;\n\n    font-weight: 600;\n    color: #333333;\n  }\n  /deep/ .el-dialog__headerbtn {\n    // top: 20px;\n\n    .el-dialog__close {\n      color: #000;\n    }\n  }\n\n  /deep/ .el-dialog__body {\n    padding: 15px;\n    height: 300px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".setdialog": {
          ".el-dialog__header": {
            "padding": "15px 20px 15px",
            ".setTitle": {
              "width": "100px",
              "height": "26px",
              "line-height": "26px",
              "font-size": "18px",
              "color": "#303133",
              "img": {
                "width": "20px",
                "height": "20px",
                "vertical-align": "middle",
                "margin-left": "5px",
                "margin-top": "-5px"
              }
            }
          },
          ".el-dialog__body": {
            "padding": "0 0 30px",
            "border-top": "#e7e7e7 solid 1px"
          }
        },
        ".setTip": {
          ".el-dialog--center .el-dialog__body": {
            "padding": "0 25px 25px"
          },
          ".tipInfo": {
            "width": "100%",
            "text-align": "center",
            "font-size": "17px",
            "color": "#333",
            "margin": "20px 0 35px"
          },
          ".tipBtn": {
            "text-align": "center",
            "button": {
              "width": "100px",
              "font-size": "15px",
              "letter-spacing": "1px"
            },
            ".el-button--info": {
              "background-color": "#fff",
              "border-color": "#2F54EB",
              "color": "#2F54EB"
            }
          }
        },
        ".topwork2": {
          "-webkit-app-region": "drag",
          "height": "21px",
          "padding": "0",
          "position": "fixed",
          "top": "2px",
          "right": "0",
          "width": "calc(100% - 340px)",
          "z-index": "1000",
          ".i1": {
            "&:hover": {
              "background": "#e7e7e7"
            }
          },
          ".i2": {
            "padding-right": "8px",
            "&:hover": {
              "background": "#fa5151"
            }
          },
          "i": {
            "padding": "3px 8px 0",
            "display": "inline-block",
            "-webkit-app-region": "no-drag"
          }
        },
        ".el-menu-vertical-demo:not(.el-menu--collapse)": {
          "width": "100%",
          "min-height": "400px"
        },
        ".el-menu--collapse": {
          "width": "60px"
        },
        ".el-menu": {
          "border-right": "none",
          ".el-menu-item:nth-child(6)": {
            "margin-top": "160px"
          }
        },
        ".my_class": {
          "text-align": "left",
          "display": "inline-block",
          "width": "200px"
        },
        ".my_class input.el-input__inner": {
          "font-size": "12px",
          "border-radius": "5px",
          "border": "1px solid #e4e4e4",
          "background": "#f6f6f6",
          "height": "30px",
          "line-height": "30px",
          "color": "#555"
        },
        ".newchatmsg": {
          "position": "absolute",
          "/deep/ .el-badge__content.is-dot": {
            "margin-top": "-15px"
          }
        },
        ".apply_number": {
          "position": "absolute"
        },
        ".apply_number .el-badge__content.is-fixed": {
          "top": "10px",
          "right": "13px"
        }
      },
      {
        ".visible": {
          "visibility": "hidden"
        },
        ".el-header": {
          "padding": "0 8px",
          "background": "#fff",
          "box-shadow": "0px 1px 1px 0px rgba(153, 153, 153, 0.3)",
          "color": "#333",
          "text-align": "center",
          "line-height": "60px"
        },
        ".el-menu": {
          "min-height": "300px",
          "height": "95%"
        },
        ".el-aside": {
          "color": "#333",
          "text-align": "center",
          ".user-info": {
            "height": "100px",
            "margin-bottom": "50px",
            "padding": "20px 0 0 0",
            "font-size": "18px",
            "font-weight": "400",
            "color": "rgba(51, 51, 51, 1)",
            "box-sizing": "border-box"
          },
          ".info-btn": {
            "position": "relative",
            "width": "100%",
            "height": "20px",
            ".btn": {
              "position": "absolute",
              "right": "0",
              "top": "10px",
              "z-index": "10"
            }
          }
        },
        ".el-main": {
          "background-color": "#ffffff",
          "color": "#000",
          "padding": "0",
          "height": "100vh",
          "overflow": "hidden"
        },
        ".el-icon-bell": {
          "margin": "0 20px",
          "cursor": "pointer"
        },
        ".el-icon-switch-button": {
          "cursor": "pointer",
          "margin-right": "20px"
        },
        "body .el-container": {
          "height": "100%"
        },
        ".anquan": {
          "font-size": "12px",
          "font-weight": "400",
          "color": "rgba(47, 84, 235, 1)",
          "line-height": "17px",
          "margin-top": "10px"
        },
        ".width-min": {
          "width": "60px"
        },
        ".width-max": {
          "width": "126px"
        },
        ".leftSide": {
          "/deep/ i": {
            "margin-right": "-1px"
          },
          "/deep/ .el-badge": {
            "margin-left": "-5px"
          },
          "/deep/ .el-badge__content": {
            "background-color": "#ff0000",
            "border": "none"
          },
          "/deep/ .el-menu-item *": {
            "vertical-align": "text-top"
          },
          "font-weight": "400",
          "color": "rgba(47, 84, 235, 1)",
          "margin-top": "10px"
        },
        ".set-icon": {
          "position": "relative",
          "width": "100%",
          ".user-bottom": {
            "margin": "0 auto 60px",
            "cursor": "pointer",
            "height": "20px",
            "width": "20px",
            "box-sizing": "border-box"
          },
          ".el-badge": {
            "position": "absolute",
            "top": "-1px",
            "right": "16px",
            "/deep/ .el-badge__content": {
              "border": "none",
              "background-color": "#ff0000"
            }
          }
        },
        ".leftElside": {
          "border-right": "solid 1px #e6e6e6",
          "background": "#26292c",
          "width": "60px",
          "overflow": "hidden"
        }
      },
      {
        ".key-manage": {
          "/deep/ .el-dialog__header": {
            "border-bottom": "1px solid #efeeee",
            "padding-top": "15px"
          },
          "/deep/ .el-dialog__title": {
            "font-size": "14px",
            "font-weight": "600",
            "color": "#333333"
          },
          "/deep/ .el-dialog__headerbtn": {
            ".el-dialog__close": {
              "color": "#000"
            }
          },
          "/deep/ .el-dialog__body": {
            "padding": "15px",
            "height": "300px"
          }
        },
        ".account-safe": {
          "/deep/ .el-dialog__header": {
            "border-bottom": "1px solid #efeeee",
            "padding-top": "15px"
          },
          "/deep/ .el-dialog__title": {
            "font-size": "14px",
            "font-weight": "600",
            "color": "#333333"
          },
          "/deep/ .el-dialog__headerbtn": {
            ".el-dialog__close": {
              "color": "#000"
            }
          },
          "/deep/ .el-dialog__body": {
            "padding": "15px",
            "height": "300px"
          }
        }
      }
    ]
  },
  {
    "type": "less",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/sytles/colorUi.less",
    "importInfo": null,
    "originData": "/*\n  ColorUi for uniApp  v2.1.6 | by 文晓港 2019-05-31 10:44:24\n  仅供学习交流，如作它用所承受的法律责任一概与作者无关\n\n  *使用ColorUi开发扩展与插件时，请注明基于ColorUi开发\n\n  （QQ交流群：240787041）\n*/\n\n/* ==================\n        初始化\n ==================== */\n\nview,\nscroll-view,\nswiper,\nbutton,\ninput,\ntextarea,\nlabel,\nnavigator,\nimage {\n  box-sizing: border-box;\n}\n\n.round {\n  border-radius: 5000px;\n}\n\n.radius {\n  border-radius: 6px;\n}\n\n/* ==================\n           图片\n  ==================== */\n\nimage {\n  max-width: 100%;\n  display: inline-block;\n  position: relative;\n  z-index: 0;\n}\n\nimage.loading::before {\n  content: '';\n  background-color: #f5f5f5;\n  display: block;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: -2;\n}\n\nimage.loading::after {\n  content: '\\e7f1';\n  font-family: 'cuIcon';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 32px;\n  height: 32px;\n  line-height: 32px;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n  font-size: 32px;\n  margin: auto;\n  color: #ccc;\n  -webkit-animation: cuIcon-spin 2s infinite linear;\n  animation: cuIcon-spin 2s infinite linear;\n  display: block;\n}\n\n.response {\n  width: 100%;\n}\n\n/* ==================\n          开关\n  ==================== */\n\nswitch,\ncheckbox,\nradio {\n  position: relative;\n}\n\nswitch::after,\nswitch::before {\n  font-family: 'cuIcon';\n  content: '\\e645';\n  position: absolute;\n  color: #ffffff !important;\n  top: 0%;\n  left: 0px;\n  font-size: 26px;\n  line-height: 26px;\n  width: 50%;\n  text-align: center;\n  pointer-events: none;\n  transform: scale(0, 0);\n  transition: all 0.3s ease-in-out 0s;\n  z-index: 9;\n  bottom: 0;\n  height: 26px;\n  margin: auto;\n}\n\nswitch::before {\n  content: '\\e646';\n  right: 0;\n  transform: scale(1, 1);\n  left: auto;\n}\n\nswitch[checked]::after,\nswitch.checked::after {\n  transform: scale(1, 1);\n}\n\nswitch[checked]::before,\nswitch.checked::before {\n  transform: scale(0, 0);\n}\n\n/* #ifndef MP-ALIPAY */\nradio::before,\ncheckbox::before {\n  font-family: 'cuIcon';\n  content: '\\e645';\n  position: absolute;\n  color: #ffffff !important;\n  top: 50%;\n  margin-top: -8px;\n  right: 5px;\n  font-size: 32px;\n  line-height: 16px;\n  pointer-events: none;\n  transform: scale(1, 1);\n  transition: all 0.3s ease-in-out 0s;\n  z-index: 9;\n}\n\nradio .wx-radio-input,\ncheckbox .wx-checkbox-input,\nradio .uni-radio-input,\ncheckbox .uni-checkbox-input {\n  margin: 0;\n  width: 24px;\n  height: 24px;\n}\n\ncheckbox.round .wx-checkbox-input,\ncheckbox.round .uni-checkbox-input {\n  border-radius: 100px;\n}\n\n/* #endif */\n\nswitch[checked]::before {\n  transform: scale(0, 0);\n}\n\nswitch .wx-switch-input,\nswitch .uni-switch-input {\n  border: none;\n  padding: 0 24px;\n  width: 48px;\n  height: 26px;\n  margin: 0;\n  border-radius: 100px;\n}\n\nswitch .wx-switch-input:not([class*='bg-']),\nswitch .uni-switch-input:not([class*='bg-']) {\n  background: #8799a3 !important;\n}\n\nswitch .wx-switch-input::after,\nswitch .uni-switch-input::after {\n  margin: auto;\n  width: 26px;\n  height: 26px;\n  border-radius: 100px;\n  left: 0px;\n  top: 0px;\n  bottom: 0px;\n  position: absolute;\n  transform: scale(0.9, 0.9);\n  transition: all 0.1s ease-in-out 0s;\n}\n\nswitch .wx-switch-input.wx-switch-input-checked::after,\nswitch .uni-switch-input.uni-switch-input-checked::after {\n  margin: auto;\n  left: 22px;\n  box-shadow: none;\n  transform: scale(0.9, 0.9);\n}\n\nradio-group {\n  display: inline-block;\n}\n\nswitch.radius .wx-switch-input::after,\nswitch.radius .wx-switch-input,\nswitch.radius .wx-switch-input::before,\nswitch.radius .uni-switch-input::after,\nswitch.radius .uni-switch-input,\nswitch.radius .uni-switch-input::before {\n  border-radius: 10px;\n}\n\nswitch .wx-switch-input::before,\nradio.radio::before,\ncheckbox .wx-checkbox-input::before,\nradio .wx-radio-input::before,\nswitch .uni-switch-input::before,\nradio.radio::before,\ncheckbox .uni-checkbox-input::before,\nradio .uni-radio-input::before {\n  display: none;\n}\n\nradio.radio[checked]::after,\nradio.radio .uni-radio-input-checked::after {\n  content: '';\n  background-color: transparent;\n  display: block;\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  z-index: 999;\n  top: 0px;\n  left: 0px;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  border-radius: 200px;\n  /* #ifndef MP */\n  border: 7px solid #ffffff !important;\n  /* #endif */\n\n  /* #ifdef MP */\n  border: 8px solid #ffffff !important;\n  /* #endif */\n}\n\n.switch-sex::after {\n  content: '\\e71c';\n}\n\n.switch-sex::before {\n  content: '\\e71a';\n}\n\n.switch-sex .wx-switch-input,\n.switch-sex .uni-switch-input {\n  background: #e54d42 !important;\n  border-color: #e54d42 !important;\n}\n\n.switch-sex[checked] .wx-switch-input,\n.switch-sex.checked .uni-switch-input {\n  background: #0081ff !important;\n  border-color: #0081ff !important;\n}\n\nswitch.red[checked] .wx-switch-input.wx-switch-input-checked,\ncheckbox.red[checked] .wx-checkbox-input,\nradio.red[checked] .wx-radio-input,\nswitch.red.checked .uni-switch-input.uni-switch-input-checked,\ncheckbox.red.checked .uni-checkbox-input,\nradio.red.checked .uni-radio-input {\n  background-color: #e54d42 !important;\n  border-color: #e54d42 !important;\n  color: #ffffff !important;\n}\n\nswitch.orange[checked] .wx-switch-input,\ncheckbox.orange[checked] .wx-checkbox-input,\nradio.orange[checked] .wx-radio-input,\nswitch.orange.checked .uni-switch-input,\ncheckbox.orange.checked .uni-checkbox-input,\nradio.orange.checked .uni-radio-input {\n  background-color: #f37b1d !important;\n  border-color: #f37b1d !important;\n  color: #ffffff !important;\n}\n\nswitch.yellow[checked] .wx-switch-input,\ncheckbox.yellow[checked] .wx-checkbox-input,\nradio.yellow[checked] .wx-radio-input,\nswitch.yellow.checked .uni-switch-input,\ncheckbox.yellow.checked .uni-checkbox-input,\nradio.yellow.checked .uni-radio-input {\n  background-color: #fbbd08 !important;\n  border-color: #fbbd08 !important;\n  color: #333333 !important;\n}\n\nswitch.olive[checked] .wx-switch-input,\ncheckbox.olive[checked] .wx-checkbox-input,\nradio.olive[checked] .wx-radio-input,\nswitch.olive.checked .uni-switch-input,\ncheckbox.olive.checked .uni-checkbox-input,\nradio.olive.checked .uni-radio-input {\n  background-color: #8dc63f !important;\n  border-color: #8dc63f !important;\n  color: #ffffff !important;\n}\n\nswitch.green[checked] .wx-switch-input,\nswitch[checked] .wx-switch-input,\ncheckbox.green[checked] .wx-checkbox-input,\ncheckbox[checked] .wx-checkbox-input,\nradio.green[checked] .wx-radio-input,\nradio[checked] .wx-radio-input,\nswitch.green.checked .uni-switch-input,\nswitch.checked .uni-switch-input,\ncheckbox.green.checked .uni-checkbox-input,\ncheckbox.checked .uni-checkbox-input,\nradio.green.checked .uni-radio-input,\nradio.checked .uni-radio-input {\n  background-color: #39b54a !important;\n  border-color: #39b54a !important;\n  color: #ffffff !important;\n  border-color: #39b54a !important;\n}\n\nswitch.cyan[checked] .wx-switch-input,\ncheckbox.cyan[checked] .wx-checkbox-input,\nradio.cyan[checked] .wx-radio-input,\nswitch.cyan.checked .uni-switch-input,\ncheckbox.cyan.checked .uni-checkbox-input,\nradio.cyan.checked .uni-radio-input {\n  background-color: #1cbbb4 !important;\n  border-color: #1cbbb4 !important;\n  color: #ffffff !important;\n}\n\nswitch.blue[checked] .wx-switch-input,\ncheckbox.blue[checked] .wx-checkbox-input,\nradio.blue[checked] .wx-radio-input,\nswitch.blue.checked .uni-switch-input,\ncheckbox.blue.checked .uni-checkbox-input,\nradio.blue.checked .uni-radio-input {\n  background-color: #0081ff !important;\n  border-color: #0081ff !important;\n  color: #ffffff !important;\n}\n\nswitch.purple[checked] .wx-switch-input,\ncheckbox.purple[checked] .wx-checkbox-input,\nradio.purple[checked] .wx-radio-input,\nswitch.purple.checked .uni-switch-input,\ncheckbox.purple.checked .uni-checkbox-input,\nradio.purple.checked .uni-radio-input {\n  background-color: #6739b6 !important;\n  border-color: #6739b6 !important;\n  color: #ffffff !important;\n}\n\nswitch.mauve[checked] .wx-switch-input,\ncheckbox.mauve[checked] .wx-checkbox-input,\nradio.mauve[checked] .wx-radio-input,\nswitch.mauve.checked .uni-switch-input,\ncheckbox.mauve.checked .uni-checkbox-input,\nradio.mauve.checked .uni-radio-input {\n  background-color: #9c26b0 !important;\n  border-color: #9c26b0 !important;\n  color: #ffffff !important;\n}\n\nswitch.pink[checked] .wx-switch-input,\ncheckbox.pink[checked] .wx-checkbox-input,\nradio.pink[checked] .wx-radio-input,\nswitch.pink.checked .uni-switch-input,\ncheckbox.pink.checked .uni-checkbox-input,\nradio.pink.checked .uni-radio-input {\n  background-color: #e03997 !important;\n  border-color: #e03997 !important;\n  color: #ffffff !important;\n}\n\nswitch.brown[checked] .wx-switch-input,\ncheckbox.brown[checked] .wx-checkbox-input,\nradio.brown[checked] .wx-radio-input,\nswitch.brown.checked .uni-switch-input,\ncheckbox.brown.checked .uni-checkbox-input,\nradio.brown.checked .uni-radio-input {\n  background-color: #a5673f !important;\n  border-color: #a5673f !important;\n  color: #ffffff !important;\n}\n\nswitch.grey[checked] .wx-switch-input,\ncheckbox.grey[checked] .wx-checkbox-input,\nradio.grey[checked] .wx-radio-input,\nswitch.grey.checked .uni-switch-input,\ncheckbox.grey.checked .uni-checkbox-input,\nradio.grey.checked .uni-radio-input {\n  background-color: #8799a3 !important;\n  border-color: #8799a3 !important;\n  color: #ffffff !important;\n}\n\nswitch.gray[checked] .wx-switch-input,\ncheckbox.gray[checked] .wx-checkbox-input,\nradio.gray[checked] .wx-radio-input,\nswitch.gray.checked .uni-switch-input,\ncheckbox.gray.checked .uni-checkbox-input,\nradio.gray.checked .uni-radio-input {\n  background-color: #f0f0f0 !important;\n  border-color: #f0f0f0 !important;\n  color: #333333 !important;\n}\n\nswitch.black[checked] .wx-switch-input,\ncheckbox.black[checked] .wx-checkbox-input,\nradio.black[checked] .wx-radio-input,\nswitch.black.checked .uni-switch-input,\ncheckbox.black.checked .uni-checkbox-input,\nradio.black.checked .uni-radio-input {\n  background-color: #333333 !important;\n  border-color: #333333 !important;\n  color: #ffffff !important;\n}\n\nswitch.white[checked] .wx-switch-input,\ncheckbox.white[checked] .wx-checkbox-input,\nradio.white[checked] .wx-radio-input,\nswitch.white.checked .uni-switch-input,\ncheckbox.white.checked .uni-checkbox-input,\nradio.white.checked .uni-radio-input {\n  background-color: #ffffff !important;\n  border-color: #ffffff !important;\n  color: #333333 !important;\n}\n\n/* ==================\n           边框\n  ==================== */\n\n/* -- 实线 -- */\n\n.solid,\n.solid-top,\n.solid-right,\n.solid-bottom,\n.solid-left,\n.solids,\n.solids-top,\n.solids-right,\n.solids-bottom,\n.solids-left,\n.dashed,\n.dashed-top,\n.dashed-right,\n.dashed-bottom,\n.dashed-left {\n  position: relative;\n}\n\n.solid::after,\n.solid-top::after,\n.solid-right::after,\n.solid-bottom::after,\n.solid-left::after,\n.solids::after,\n.solids-top::after,\n.solids-right::after,\n.solids-bottom::after,\n.solids-left::after,\n.dashed::after,\n.dashed-top::after,\n.dashed-right::after,\n.dashed-bottom::after,\n.dashed-left::after {\n  content: ' ';\n  width: 200%;\n  height: 200%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: inherit;\n  transform: scale(0.5);\n  transform-origin: 0 0;\n  pointer-events: none;\n  box-sizing: border-box;\n}\n\n.solid::after {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.solid-top::after {\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.solid-right::after {\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.solid-bottom::after {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.solid-left::after {\n  border-left: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.solids::after {\n  border: 8px solid #eee;\n}\n\n.solids-top::after {\n  border-top: 8px solid #eee;\n}\n\n.solids-right::after {\n  border-right: 8px solid #eee;\n}\n\n.solids-bottom::after {\n  border-bottom: 8px solid #eee;\n}\n\n.solids-left::after {\n  border-left: 8px solid #eee;\n}\n\n/* -- 虚线 -- */\n\n.dashed::after {\n  border: 1px dashed #ddd;\n}\n\n.dashed-top::after {\n  border-top: 1px dashed #ddd;\n}\n\n.dashed-right::after {\n  border-right: 1px dashed #ddd;\n}\n\n.dashed-bottom::after {\n  border-bottom: 1px dashed #ddd;\n}\n\n.dashed-left::after {\n  border-left: 1px dashed #ddd;\n}\n\n/* -- 阴影 -- */\n\n.shadow[class*='white'] {\n  --ShadowSize: 0 1px 6px;\n}\n\n.shadow-lg {\n  --ShadowSize: 0px 40px 100px 0px;\n}\n\n.shadow-warp {\n  position: relative;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.shadow-warp:before,\n.shadow-warp:after {\n  position: absolute;\n  content: '';\n  top: 20px;\n  bottom: 30px;\n  left: 20px;\n  width: 50%;\n  box-shadow: 0 30px 20px rgba(0, 0, 0, 0.2);\n  transform: rotate(-3deg);\n  z-index: -1;\n}\n\n.shadow-warp:after {\n  right: 20px;\n  left: auto;\n  transform: rotate(3deg);\n}\n\n.shadow-blur {\n  position: relative;\n}\n\n.shadow-blur::before {\n  content: '';\n  display: block;\n  background: inherit;\n  filter: blur(10px);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 10px;\n  left: 10px;\n  z-index: -1;\n  opacity: 0.4;\n  transform-origin: 0 0;\n  border-radius: inherit;\n  transform: scale(1, 1);\n}\n\n/* ==================\n           按钮\n  ==================== */\n\n.cu-btn {\n  position: relative;\n  border: 0px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  padding: 0 30px;\n  font-size: 28px;\n  height: 64px;\n  line-height: 1;\n  text-align: center;\n  text-decoration: none;\n  overflow: visible;\n  margin-left: initial;\n  transform: translate(0px, 0px);\n  margin-right: initial;\n}\n\n.cu-btn::after {\n  display: none;\n}\n\n.cu-btn:not([class*='bg-']) {\n  background-color: #f0f0f0;\n}\n\n.cu-btn[class*='line'] {\n  background-color: transparent;\n}\n\n.cu-btn[class*='line']::after {\n  content: ' ';\n  display: block;\n  width: 200%;\n  height: 200%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: 1px solid currentColor;\n  transform: scale(0.5);\n  transform-origin: 0 0;\n  box-sizing: border-box;\n  border-radius: 12px;\n  z-index: 1;\n  pointer-events: none;\n}\n\n.cu-btn.round[class*='line']::after {\n  border-radius: 1000px;\n}\n\n.cu-btn[class*='lines']::after {\n  border: 6px solid currentColor;\n}\n\n.cu-btn[class*='bg-']::after {\n  display: none;\n}\n\n.cu-btn.sm {\n  padding: 0 20px;\n  font-size: 20px;\n  height: 48px;\n}\n\n.cu-btn.lg {\n  padding: 0 40px;\n  font-size: 32px;\n  height: 80px;\n}\n\n.cu-btn.cuIcon.sm {\n  width: 48px;\n  height: 48px;\n}\n\n.cu-btn.cuIcon {\n  width: 64px;\n  height: 64px;\n  border-radius: 500px;\n  padding: 0;\n}\n\nbutton.cuIcon.lg {\n  width: 80px;\n  height: 80px;\n}\n\n.cu-btn.shadow-blur::before {\n  top: 4px;\n  left: 4px;\n  filter: blur(6px);\n  opacity: 0.6;\n}\n\n.cu-btn.button-hover {\n  transform: translate(1px, 1px);\n}\n\n.block {\n  display: block;\n}\n\n.cu-btn.block {\n  display: flex;\n}\n\n.cu-btn[disabled] {\n  opacity: 0.6;\n  color: #ffffff;\n}\n\n/* ==================\n           徽章\n  ==================== */\n\n.cu-tag {\n  font-size: 24px;\n  vertical-align: middle;\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  padding: 0px 16px;\n  height: 48px;\n  white-space: nowrap;\n}\n\n.cu-tag:not([class*='bg']):not([class*='line']) {\n  background-color: #f1f1f1;\n}\n\n.cu-tag[class*='line-']::after {\n  content: ' ';\n  width: 200%;\n  height: 200%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: 1px solid currentColor;\n  transform: scale(0.5);\n  transform-origin: 0 0;\n  box-sizing: border-box;\n  border-radius: inherit;\n  z-index: 1;\n  pointer-events: none;\n}\n\n.cu-tag.radius[class*='line']::after {\n  border-radius: 12px;\n}\n\n.cu-tag.round[class*='line']::after {\n  border-radius: 1000px;\n}\n\n.cu-tag[class*='line-']::after {\n  border-radius: 0;\n}\n\n.cu-tag + .cu-tag {\n  margin-left: 10px;\n}\n\n.cu-tag.sm {\n  font-size: 20px;\n  padding: 0px 12px;\n  height: 32px;\n}\n\n.cu-capsule {\n  display: inline-flex;\n  vertical-align: middle;\n}\n\n.cu-capsule + .cu-capsule {\n  margin-left: 10px;\n}\n\n.cu-capsule .cu-tag {\n  margin: 0;\n}\n\n.cu-capsule .cu-tag[class*='line-']:last-child::after {\n  border-left: 0px solid transparent;\n}\n\n.cu-capsule .cu-tag[class*='line-']:first-child::after {\n  border-right: 0px solid transparent;\n}\n\n.cu-capsule.radius .cu-tag:first-child {\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n\n.cu-capsule.radius .cu-tag:last-child::after,\n.cu-capsule.radius .cu-tag[class*='line-'] {\n  border-top-right-radius: 12px;\n  border-bottom-right-radius: 12px;\n}\n\n.cu-capsule.round .cu-tag:first-child {\n  border-top-left-radius: 200px;\n  border-bottom-left-radius: 200px;\n  text-indent: 4px;\n}\n\n.cu-capsule.round .cu-tag:last-child::after,\n.cu-capsule.round .cu-tag:last-child {\n  border-top-right-radius: 200px;\n  border-bottom-right-radius: 200px;\n  text-indent: -4px;\n}\n\n.cu-tag.badge {\n  border-radius: 200px;\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  font-size: 20px;\n  padding: 0px 10px;\n  height: 28px;\n  color: #ffffff;\n}\n\n.cu-tag.badge:not([class*='bg-']) {\n  background-color: #dd514c;\n}\n\n.cu-tag:empty:not([class*='cuIcon-']) {\n  padding: 0px;\n  width: 16px;\n  height: 16px;\n  top: -4px;\n  right: -4px;\n}\n\n.cu-tag[class*='cuIcon-'] {\n  width: 32px;\n  height: 32px;\n  top: -4px;\n  right: -4px;\n}\n\n/* ==================\n           头像\n  ==================== */\n\n.cu-avatar {\n  font-variant: small-caps;\n  margin: 0;\n  padding: 0;\n  display: inline-flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  background-color: #ccc;\n  color: #ffffff;\n  white-space: nowrap;\n  position: relative;\n  width: 64px;\n  height: 64px;\n  background-size: cover;\n  background-position: center;\n  vertical-align: middle;\n  font-size: 1.5em;\n}\n\n.cu-avatar.sm {\n  width: 48px;\n  height: 48px;\n  font-size: 1em;\n}\n\n.cu-avatar.lg {\n  width: 96px;\n  height: 96px;\n  font-size: 2em;\n}\n\n.cu-avatar.xl {\n  width: 128px;\n  height: 128px;\n  font-size: 2.5em;\n}\n\n.cu-avatar .avatar-text {\n  font-size: 0.4em;\n}\n\n.cu-avatar-group {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n  padding: 0 10px 0 40px;\n  display: inline-block;\n}\n\n.cu-avatar-group .cu-avatar {\n  margin-left: -30px;\n  border: 4px solid #f1f1f1;\n  vertical-align: middle;\n}\n\n.cu-avatar-group .cu-avatar.sm {\n  margin-left: -20px;\n  border: 1px solid #f1f1f1;\n}\n\n/* ==================\n          进度条\n  ==================== */\n\n.cu-progress {\n  overflow: hidden;\n  height: 28px;\n  background-color: #ebeef5;\n  display: inline-flex;\n  align-items: center;\n  width: 100%;\n}\n\n.cu-progress + view,\n.cu-progress + text {\n  line-height: 1;\n}\n\n.cu-progress.xs {\n  height: 10px;\n}\n\n.cu-progress.sm {\n  height: 20px;\n}\n\n.cu-progress view {\n  width: 0;\n  height: 100%;\n  align-items: center;\n  display: flex;\n  justify-items: flex-end;\n  justify-content: space-around;\n  font-size: 20px;\n  color: #ffffff;\n  transition: width 0.6s ease;\n}\n\n.cu-progress text {\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  color: #333333;\n  text-indent: 10px;\n}\n\n.cu-progress.text-progress {\n  padding-right: 60px;\n}\n\n.cu-progress.striped view {\n  background-image: linear-gradient(\n    45deg,\n    rgba(255, 255, 255, 0.15) 25%,\n    transparent 25%,\n    transparent 50%,\n    rgba(255, 255, 255, 0.15) 50%,\n    rgba(255, 255, 255, 0.15) 75%,\n    transparent 75%,\n    transparent\n  );\n  background-size: 72px 72px;\n}\n\n.cu-progress.active view {\n  animation: progress-stripes 2s linear infinite;\n}\n\n@keyframes progress-stripes {\n  from {\n    background-position: 72px 0;\n  }\n\n  to {\n    background-position: 0 0;\n  }\n}\n\n/* ==================\n           加载\n  ==================== */\n\n.cu-load {\n  display: block;\n  line-height: 3em;\n  text-align: center;\n}\n\n.cu-load::before {\n  font-family: 'cuIcon';\n  display: inline-block;\n  margin-right: 6px;\n}\n\n.cu-load.loading::before {\n  content: '\\e67a';\n  animation: cuIcon-spin 2s infinite linear;\n}\n\n.cu-load.loading::after {\n  content: '加载中...';\n}\n\n.cu-load.over::before {\n  content: '\\e64a';\n}\n\n.cu-load.over::after {\n  content: '没有更多了';\n}\n\n.cu-load.erro::before {\n  content: '\\e658';\n}\n\n.cu-load.erro::after {\n  content: '加载失败';\n}\n\n.cu-load.load-cuIcon::before {\n  font-size: 32px;\n}\n\n.cu-load.load-cuIcon::after {\n  display: none;\n}\n\n.cu-load.load-cuIcon.over {\n  display: none;\n}\n\n.cu-load.load-modal {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 140px;\n  left: 0;\n  margin: auto;\n  width: 260px;\n  height: 260px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  box-shadow: 0 0 0px 2000px rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 28px;\n  z-index: 9999;\n  line-height: 2.4em;\n}\n\n.cu-load.load-modal [class*='cuIcon-'] {\n  font-size: 60px;\n}\n\n.cu-load.load-modal image {\n  width: 70px;\n  height: 70px;\n}\n\n.cu-load.load-modal::after {\n  content: '';\n  position: absolute;\n  background-color: #ffffff;\n  border-radius: 50%;\n  width: 200px;\n  height: 200px;\n  font-size: 10px;\n  border-top: 6px solid rgba(0, 0, 0, 0.05);\n  border-right: 6px solid rgba(0, 0, 0, 0.05);\n  border-bottom: 6px solid rgba(0, 0, 0, 0.05);\n  border-left: 6px solid #f37b1d;\n  animation: cuIcon-spin 1s infinite linear;\n  z-index: -1;\n}\n\n.load-progress {\n  pointer-events: none;\n  top: 0;\n  position: fixed;\n  width: 100%;\n  left: 0;\n  z-index: 2000;\n}\n\n.load-progress.hide {\n  display: none;\n}\n\n.load-progress .load-progress-bar {\n  position: relative;\n  width: 100%;\n  height: 4px;\n  overflow: hidden;\n  transition: all 200ms ease 0s;\n}\n\n.load-progress .load-progress-spinner {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  z-index: 2000;\n  display: block;\n}\n\n.load-progress .load-progress-spinner::after {\n  content: '';\n  display: block;\n  width: 24px;\n  height: 24px;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  border: solid 4px transparent;\n  border-top-color: inherit;\n  border-left-color: inherit;\n  border-radius: 50%;\n  -webkit-animation: load-progress-spinner 0.4s linear infinite;\n  animation: load-progress-spinner 0.4s linear infinite;\n}\n\n@-webkit-keyframes load-progress-spinner {\n  0% {\n    -webkit-transform: rotate(0);\n    transform: rotate(0);\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes load-progress-spinner {\n  0% {\n    -webkit-transform: rotate(0);\n    transform: rotate(0);\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n/* ==================\n           列表\n  ==================== */\n.grayscale {\n  filter: grayscale(1);\n}\n\n.cu-list + .cu-list {\n  margin-top: 30px;\n}\n\n.cu-list > .cu-item {\n  transition: all 0.6s ease-in-out 0s;\n  transform: translateX(0px);\n}\n\n.cu-list > .cu-item.move-cur {\n  transform: translateX(-260px);\n}\n\n.cu-list > .cu-item .move {\n  position: absolute;\n  right: 0;\n  display: flex;\n  width: 260px;\n  height: 100%;\n  transform: translateX(100%);\n}\n\n.cu-list > .cu-item .move view {\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n}\n\n.cu-list.menu-avatar {\n  overflow: hidden;\n}\n\n.cu-list.menu-avatar > .cu-item {\n  position: relative;\n  display: flex;\n  padding-right: 10px;\n  height: 140px;\n  background-color: #ffffff;\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.cu-list.menu-avatar > .cu-item > .cu-avatar {\n  position: absolute;\n  left: 30px;\n}\n\n.cu-list.menu-avatar > .cu-item .flex .text-cut {\n  max-width: 510px;\n}\n\n.cu-list.menu-avatar > .cu-item .content {\n  position: absolute;\n  left: 146px;\n  width: calc(100% - 96px - 60px - 120px - 20px);\n  line-height: 1.6em;\n}\n\n.cu-list.menu-avatar > .cu-item .content.flex-sub {\n  width: calc(100% - 96px - 60px - 20px);\n}\n\n.cu-list.menu-avatar > .cu-item .content > view:first-child {\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n}\n\n.cu-list.menu-avatar > .cu-item .content .cu-tag.sm {\n  display: inline-block;\n  margin-left: 10px;\n  height: 28px;\n  font-size: 16px;\n  line-height: 32px;\n}\n\n.cu-list.menu-avatar > .cu-item .action {\n  width: 100px;\n  text-align: center;\n}\n\n.cu-list.menu-avatar > .cu-item .action view + view {\n  margin-top: 10px;\n}\n\n.cu-list.menu-avatar.comment > .cu-item .content {\n  position: relative;\n  left: 0;\n  width: auto;\n  flex: 1;\n}\n\n.cu-list.menu-avatar.comment > .cu-item {\n  padding: 30px 30px 30px 120px;\n  height: auto;\n}\n\n.cu-list.menu-avatar.comment .cu-avatar {\n  align-self: flex-start;\n}\n\n.cu-list.menu > .cu-item {\n  position: relative;\n  display: flex;\n  padding: 0 30px;\n  min-height: 100px;\n  background-color: #ffffff;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.cu-list.menu > .cu-item:last-child:after {\n  border: none;\n}\n\n.cu-list.menu-avatar > .cu-item:after,\n.cu-list.menu > .cu-item:after {\n  position: absolute;\n  top: 0;\n  left: 0;\n  box-sizing: border-box;\n  width: 200%;\n  height: 200%;\n  border-bottom: 1px solid #ddd;\n  border-radius: inherit;\n  content: ' ';\n  transform: scale(0.5);\n  transform-origin: 0 0;\n  pointer-events: none;\n}\n\n.cu-list.menu > .cu-item.grayscale {\n  background-color: #f5f5f5;\n}\n\n.cu-list.menu > .cu-item.cur {\n  background-color: #fcf7e9;\n}\n\n.cu-list.menu > .cu-item.arrow {\n  padding-right: 90px;\n}\n\n.cu-list.menu > .cu-item.arrow:before {\n  position: absolute;\n  top: 0;\n  right: 30px;\n  bottom: 0;\n  display: block;\n  margin: auto;\n  width: 30px;\n  height: 30px;\n  color: #8799a3;\n  content: '\\e6a3';\n  text-align: center;\n  font-size: 34px;\n  font-family: cuIcon;\n  line-height: 30px;\n}\n\n.cu-list.menu > .cu-item button.content {\n  padding: 0;\n  background-color: transparent;\n  justify-content: flex-start;\n}\n\n.cu-list.menu > .cu-item button.content:after {\n  display: none;\n}\n\n.cu-list.menu > .cu-item .cu-avatar-group .cu-avatar {\n  border-color: #ffffff;\n}\n\n.cu-list.menu > .cu-item .content > view:first-child {\n  display: flex;\n  align-items: center;\n}\n\n.cu-list.menu > .cu-item .content > text[class*='cuIcon'] {\n  display: inline-block;\n  margin-right: 10px;\n  width: 1.6em;\n  text-align: center;\n}\n\n.cu-list.menu > .cu-item .content > image {\n  display: inline-block;\n  margin-right: 10px;\n  width: 1.6em;\n  height: 1.6em;\n  vertical-align: middle;\n}\n\n.cu-list.menu > .cu-item .content {\n  font-size: 30px;\n  line-height: 1.6em;\n  flex: 1;\n}\n\n.cu-list.menu > .cu-item .content .cu-tag.sm {\n  display: inline-block;\n  margin-left: 10px;\n  height: 28px;\n  font-size: 16px;\n  line-height: 32px;\n}\n\n.cu-list.menu > .cu-item .action .cu-tag:empty {\n  right: 10px;\n}\n\n.cu-list.menu {\n  display: block;\n  overflow: hidden;\n}\n\n.cu-list.menu.sm-border > .cu-item:after {\n  left: 30px;\n  width: calc(200% - 120px);\n}\n\n.cu-list.grid > .cu-item {\n  position: relative;\n  display: flex;\n  padding: 20px 0 30px;\n  transition-duration: 0s;\n  flex-direction: column;\n}\n\n.cu-list.grid > .cu-item:after {\n  position: absolute;\n  top: 0;\n  left: 0;\n  box-sizing: border-box;\n  width: 200%;\n  height: 200%;\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: inherit;\n  content: ' ';\n  transform: scale(0.5);\n  transform-origin: 0 0;\n  pointer-events: none;\n}\n\n.cu-list.grid > .cu-item text {\n  display: block;\n  margin-top: 10px;\n  color: #888;\n  font-size: 26px;\n  line-height: 40px;\n}\n\n.cu-list.grid > .cu-item [class*='cuIcon'] {\n  position: relative;\n  display: block;\n  margin-top: 20px;\n  width: 100%;\n  font-size: 48px;\n}\n\n.cu-list.grid > .cu-item .cu-tag {\n  right: auto;\n  left: 50%;\n  margin-left: 20px;\n}\n\n.cu-list.grid {\n  background-color: #ffffff;\n  text-align: center;\n}\n\n.cu-list.grid.no-border > .cu-item {\n  padding-top: 10px;\n  padding-bottom: 20px;\n}\n\n.cu-list.grid.no-border > .cu-item:after {\n  border: none;\n}\n\n.cu-list.grid.no-border {\n  padding: 20px 10px;\n}\n\n.cu-list.grid.col-3 > .cu-item:nth-child(3n):after,\n.cu-list.grid.col-4 > .cu-item:nth-child(4n):after,\n.cu-list.grid.col-5 > .cu-item:nth-child(5n):after {\n  border-right-width: 0;\n}\n\n.cu-list.card-menu {\n  overflow: hidden;\n  margin-right: 30px;\n  margin-left: 30px;\n  border-radius: 20px;\n}\n\n/* ==================\n           操作条\n  ==================== */\n\n.cu-bar {\n  display: flex;\n  position: relative;\n  align-items: center;\n  min-height: 100px;\n  justify-content: space-between;\n}\n\n.cu-bar .action {\n  display: flex;\n  align-items: center;\n  height: 100%;\n  justify-content: center;\n  max-width: 100%;\n}\n\n.cu-bar .action.border-title {\n  position: relative;\n  top: -10px;\n}\n\n.cu-bar .action.border-title text[class*='bg-']:last-child {\n  position: absolute;\n  bottom: -0.5rem;\n  min-width: 2rem;\n  height: 6px;\n  left: 0;\n}\n\n.cu-bar .action.sub-title {\n  position: relative;\n  top: -0.2rem;\n}\n\n.cu-bar .action.sub-title text {\n  position: relative;\n  z-index: 1;\n}\n\n.cu-bar .action.sub-title text[class*='bg-']:last-child {\n  position: absolute;\n  display: inline-block;\n  bottom: -0.2rem;\n  border-radius: 6px;\n  width: 100%;\n  height: 0.6rem;\n  left: 0.6rem;\n  opacity: 0.3;\n  z-index: 0;\n}\n\n.cu-bar .action.sub-title text[class*='text-']:last-child {\n  position: absolute;\n  display: inline-block;\n  bottom: -0.7rem;\n  left: 0.5rem;\n  opacity: 0.2;\n  z-index: 0;\n  text-align: right;\n  font-weight: 900;\n  font-size: 36px;\n}\n\n.cu-bar.justify-center .action.border-title text:last-child,\n.cu-bar.justify-center .action.sub-title text:last-child {\n  left: 0;\n  right: 0;\n  margin: auto;\n  text-align: center;\n}\n\n.cu-bar .action:first-child {\n  margin-left: 30px;\n  font-size: 30px;\n}\n\n.cu-bar .action text.text-cut {\n  text-align: left;\n  width: 100%;\n}\n\n.cu-bar .cu-avatar:first-child {\n  margin-left: 20px;\n}\n\n.cu-bar .action:first-child > text[class*='cuIcon-'] {\n  margin-left: -0.3em;\n  margin-right: 0.3em;\n}\n\n.cu-bar .action:last-child {\n  margin-right: 30px;\n}\n\n.cu-bar .action > text[class*='cuIcon-'],\n.cu-bar .action > view[class*='cuIcon-'] {\n  font-size: 36px;\n}\n\n.cu-bar .action > text[class*='cuIcon-'] + text[class*='cuIcon-'] {\n  margin-left: 0.5em;\n}\n\n.cu-bar .content {\n  position: absolute;\n  text-align: center;\n  width: calc(100% - 340px);\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  margin: auto;\n  height: 60px;\n  font-size: 32px;\n  line-height: 60px;\n  cursor: none;\n  pointer-events: none;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.cu-bar.ios .content {\n  bottom: 7px;\n  height: 30px;\n  font-size: 32px;\n  line-height: 30px;\n}\n\n.cu-bar.btn-group {\n  justify-content: space-around;\n}\n\n.cu-bar.btn-group button {\n  padding: 20px 32px;\n}\n\n.cu-bar.btn-group button {\n  flex: 1;\n  margin: 0 20px;\n  max-width: 50%;\n}\n\n.cu-bar .search-form {\n  background-color: #f5f5f5;\n  line-height: 64px;\n  height: 64px;\n  font-size: 24px;\n  color: #333333;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  margin: 0 30px;\n}\n\n.cu-bar .search-form + .action {\n  margin-right: 30px;\n}\n\n.cu-bar .search-form input {\n  flex: 1;\n  padding-right: 30px;\n  height: 64px;\n  line-height: 64px;\n  font-size: 26px;\n  background-color: transparent;\n}\n\n.cu-bar .search-form [class*='cuIcon-'] {\n  margin: 0 0.5em 0 0.8em;\n}\n\n.cu-bar .search-form [class*='cuIcon-']::before {\n  top: 0px;\n}\n\n.cu-bar.fixed,\n.nav.fixed {\n  position: fixed;\n  width: 100%;\n  top: 0;\n  z-index: 1024;\n  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.1);\n}\n\n.cu-bar.foot {\n  position: fixed;\n  width: 100%;\n  bottom: 0;\n  z-index: 1024;\n  box-shadow: 0 -1px 6px rgba(0, 0, 0, 0.1);\n}\n\n.cu-bar.tabbar.shadow {\n  box-shadow: 0 -1px 6px rgba(0, 0, 0, 0.1);\n}\n\n.cu-bar.tabbar .action {\n  font-size: 22px;\n  position: relative;\n  flex: 1;\n  text-align: center;\n  padding: 0;\n  display: block;\n  height: auto;\n  line-height: 1;\n  margin: 0;\n  background-color: inherit;\n  overflow: initial;\n}\n\n.cu-bar.tabbar.shop .action {\n  width: 140px;\n  flex: initial;\n}\n\n.cu-bar.tabbar .action.add-action {\n  position: relative;\n  z-index: 2;\n  padding-top: 50px;\n}\n\n.cu-bar.tabbar .action.add-action [class*='cuIcon-'] {\n  position: absolute;\n  width: 70px;\n  z-index: 2;\n  height: 70px;\n  border-radius: 50%;\n  line-height: 70px;\n  font-size: 50px;\n  top: -35px;\n  left: 0;\n  right: 0;\n  margin: auto;\n  padding: 0;\n}\n\n.cu-bar.tabbar .action.add-action::after {\n  content: '';\n  position: absolute;\n  width: 100px;\n  height: 100px;\n  top: -50px;\n  left: 0;\n  right: 0;\n  margin: auto;\n  box-shadow: 0 -3px 8px rgba(0, 0, 0, 0.08);\n  border-radius: 50px;\n  background-color: inherit;\n  z-index: 0;\n}\n\n.cu-bar.tabbar .action.add-action::before {\n  content: '';\n  position: absolute;\n  width: 100px;\n  height: 30px;\n  bottom: 30px;\n  left: 0;\n  right: 0;\n  margin: auto;\n  background-color: inherit;\n  z-index: 1;\n}\n\n.cu-bar.tabbar .btn-group {\n  flex: 1;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 0 10px;\n}\n\n.cu-bar.tabbar button.action::after {\n  border: 0;\n}\n\n.cu-bar.tabbar .action [class*='cuIcon-'] {\n  width: 100px;\n  position: relative;\n  display: block;\n  height: auto;\n  margin: 0 auto 10px;\n  text-align: center;\n  font-size: 40px;\n}\n\n.cu-bar.tabbar .action .cuIcon-cu-image {\n  margin: 0 auto;\n}\n\n.cu-bar.tabbar .action .cuIcon-cu-image image {\n  width: 50px;\n  height: 50px;\n  display: inline-block;\n}\n\n.cu-bar.tabbar .submit {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  position: relative;\n  flex: 2;\n  align-self: stretch;\n}\n\n.cu-bar.tabbar .submit:last-child {\n  flex: 2.6;\n}\n\n.cu-bar.tabbar .submit + .submit {\n  flex: 2;\n}\n\n.cu-bar.tabbar.border .action::before {\n  content: ' ';\n  width: 200%;\n  height: 200%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: scale(0.5);\n  transform-origin: 0 0;\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  z-index: 3;\n}\n\n.cu-bar.tabbar.border .action:last-child:before {\n  display: none;\n}\n\n.cu-bar.input {\n  padding-right: 20px;\n  background-color: #ffffff;\n}\n\n.cu-bar.input input {\n  overflow: initial;\n  line-height: 64px;\n  height: 64px;\n  min-height: 64px;\n  flex: 1;\n  font-size: 30px;\n  margin: 0 20px;\n}\n\n.cu-bar.input .action {\n  margin-left: 20px;\n}\n\n.cu-bar.input .action [class*='cuIcon-'] {\n  font-size: 48px;\n}\n\n.cu-bar.input input + .action {\n  margin-right: 20px;\n  margin-left: 0px;\n}\n\n.cu-bar.input .action:first-child [class*='cuIcon-'] {\n  margin-left: 0px;\n}\n\n.cu-custom {\n  display: block;\n  position: relative;\n}\n\n.cu-custom .cu-bar .content {\n  width: calc(100% - 440px);\n}\n\n/* #ifdef MP-ALIPAY */\n.cu-custom .cu-bar .action .cuIcon-back {\n  opacity: 0;\n}\n\n/* #endif */\n\n.cu-custom .cu-bar .content image {\n  height: 60px;\n  width: 240px;\n}\n\n.cu-custom .cu-bar {\n  min-height: 0px;\n  /* #ifdef MP-WEIXIN */\n  padding-right: 220px;\n  /* #endif */\n  /* #ifdef MP-ALIPAY */\n  padding-right: 150px;\n  /* #endif */\n  box-shadow: 0px 0px 0px;\n  z-index: 9999;\n}\n\n.cu-custom .cu-bar .border-custom {\n  position: relative;\n  background: rgba(0, 0, 0, 0.15);\n  border-radius: 1000px;\n  height: 30px;\n}\n\n.cu-custom .cu-bar .border-custom::after {\n  content: ' ';\n  width: 200%;\n  height: 200%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: inherit;\n  transform: scale(0.5);\n  transform-origin: 0 0;\n  pointer-events: none;\n  box-sizing: border-box;\n  border: 1px solid #ffffff;\n  opacity: 0.5;\n}\n\n.cu-custom .cu-bar .border-custom::before {\n  content: ' ';\n  width: 1px;\n  height: 110%;\n  position: absolute;\n  top: 22.5%;\n  left: 0;\n  right: 0;\n  margin: auto;\n  transform: scale(0.5);\n  transform-origin: 0 0;\n  pointer-events: none;\n  box-sizing: border-box;\n  opacity: 0.6;\n  background-color: #ffffff;\n}\n\n.cu-custom .cu-bar .border-custom text {\n  display: block;\n  flex: 1;\n  margin: auto !important;\n  text-align: center;\n  font-size: 34px;\n}\n\n/* ==================\n          导航栏\n  ==================== */\n\n.nav {\n  white-space: nowrap;\n}\n\n/* ==================\n          自定义滚动条\n  ==================== */\n::-webkit-scrollbar {\n  display: none;\n}\n\n.custom-scrollbar {\n  overflow-y: scroll !important;\n  overflow-x: hidden !important;\n  margin-right: 2px;\n\n  // 整体部分\n  &::-webkit-scrollbar {\n    display: block !important;\n    width: 7px;\n    background-color: rgba(0, 0, 0, 0);\n  }\n\n  // 滑动轨道\n  &::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background-color: rgba(0, 0, 0, 0);\n  }\n\n  // 滑块\n  &::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background-color: rgba(0, 0, 0, 0);\n  }\n}\n.custom-scrollbar:hover {\n  // 滑动轨道\n  &::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background-color: transparent;\n  }\n\n  // 滑块\n  &::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background-color: #d2d2d2;\n  }\n}\n\n.scroll-color {\n  height: 100%;\n  /deep/ .el-scrollbar__thumb {\n    background-color: #d2d2d2;\n  }\n}\n\n.nav .cu-item {\n  height: 90px;\n  display: inline-block;\n  line-height: 90px;\n  margin: 0 10px;\n  padding: 0 20px;\n}\n\n.nav .cu-item.cur {\n  border-bottom: 4px solid;\n}\n\n/* ==================\n          时间轴\n  ==================== */\n\n.cu-timeline {\n  display: block;\n  background-color: #ffffff;\n}\n\n.cu-timeline .cu-time {\n  width: 120px;\n  text-align: center;\n  padding: 20px 0;\n  font-size: 26px;\n  color: #888;\n  display: block;\n}\n\n.cu-timeline > .cu-item {\n  padding: 30px 30px 30px 120px;\n  position: relative;\n  display: block;\n  z-index: 0;\n}\n\n.cu-timeline > .cu-item:not([class*='text-']) {\n  color: #ccc;\n}\n\n.cu-timeline > .cu-item::after {\n  content: '';\n  display: block;\n  position: absolute;\n  width: 1px;\n  background-color: #ddd;\n  left: 60px;\n  height: 100%;\n  top: 0;\n  z-index: 8;\n}\n\n.cu-timeline > .cu-item::before {\n  font-family: 'cuIcon';\n  display: block;\n  position: absolute;\n  top: 36px;\n  z-index: 9;\n  background-color: #ffffff;\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border: none;\n  line-height: 50px;\n  left: 36px;\n}\n\n.cu-timeline > .cu-item:not([class*='cuIcon-'])::before {\n  content: '\\e763';\n}\n\n.cu-timeline > .cu-item[class*='cuIcon-']::before {\n  background-color: #ffffff;\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border: none;\n  line-height: 50px;\n  left: 36px;\n}\n\n.cu-timeline > .cu-item > .content {\n  padding: 30px;\n  border-radius: 6px;\n  display: block;\n  line-height: 1.6;\n}\n\n.cu-timeline > .cu-item > .content:not([class*='bg-']) {\n  background-color: #f1f1f1;\n  color: #333333;\n}\n\n.cu-timeline > .cu-item > .content + .content {\n  margin-top: 20px;\n}\n\n/* ==================\n          聊天\n  ==================== */\n\n.cu-chat {\n  display: flex;\n  flex-direction: column;\n}\n\n.cu-chat .cu-item {\n  display: flex;\n  padding: 30px 30px 70px;\n  position: relative;\n}\n\n.cu-chat .cu-item > .cu-avatar {\n  width: 80px;\n  height: 80px;\n}\n\n.cu-chat .cu-item > .main {\n  max-width: calc(100% - 260px);\n  margin: 0 40px;\n  display: flex;\n  align-items: center;\n}\n\n.cu-chat .cu-item > image {\n  height: 320px;\n}\n\n.cu-chat .cu-item > .main .content {\n  padding: 20px;\n  border-radius: 6px;\n  display: inline-flex;\n  max-width: 100%;\n  align-items: center;\n  font-size: 30px;\n  position: relative;\n  min-height: 80px;\n  line-height: 40px;\n  text-align: left;\n}\n\n.cu-chat .cu-item > .main .content:not([class*='bg-']) {\n  background-color: #ffffff;\n  color: #333333;\n}\n\n.cu-chat .cu-item .date {\n  position: absolute;\n  font-size: 24px;\n  color: #8799a3;\n  width: calc(100% - 320px);\n  bottom: 20px;\n  left: 160px;\n}\n\n.cu-chat .cu-item .action {\n  padding: 0 30px;\n  display: flex;\n  align-items: center;\n}\n\n.cu-chat .cu-item > .main .content::after {\n  content: '';\n  top: 27px;\n  transform: rotate(45deg);\n  position: absolute;\n  z-index: 100;\n  display: inline-block;\n  overflow: hidden;\n  width: 24px;\n  height: 24px;\n  left: -12px;\n  right: initial;\n  background-color: inherit;\n}\n\n.cu-chat .cu-item.self > .main .content::after {\n  left: auto;\n  right: -12px;\n}\n\n.cu-chat .cu-item > .main .content::before {\n  content: '';\n  top: 30px;\n  transform: rotate(45deg);\n  position: absolute;\n  z-index: -1;\n  display: inline-block;\n  overflow: hidden;\n  width: 24px;\n  height: 24px;\n  left: -12px;\n  right: initial;\n  background-color: inherit;\n  filter: blur(5px);\n  opacity: 0.3;\n}\n\n.cu-chat .cu-item > .main .content:not([class*='bg-'])::before {\n  background-color: #333333;\n  opacity: 0.1;\n}\n\n.cu-chat .cu-item.self > .main .content::before {\n  left: auto;\n  right: -12px;\n}\n\n.cu-chat .cu-item.self {\n  justify-content: flex-end;\n  text-align: right;\n}\n\n.cu-chat .cu-info {\n  display: inline-block;\n  margin: 20px auto;\n  font-size: 24px;\n  padding: 8px 12px;\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  color: #ffffff;\n  max-width: 400px;\n  line-height: 1.4;\n}\n\n/* ==================\n          卡片\n  ==================== */\n\n.cu-card {\n  display: block;\n  overflow: hidden;\n}\n\n.cu-card > .cu-item {\n  display: block;\n  background-color: #ffffff;\n  overflow: hidden;\n  border-radius: 10px;\n  margin: 30px;\n}\n\n.cu-card > .cu-item.shadow-blur {\n  overflow: initial;\n}\n\n.cu-card.no-card > .cu-item {\n  margin: 0px;\n  border-radius: 0px;\n}\n\n.cu-card .grid.grid-square {\n  margin-bottom: -20px;\n}\n\n.cu-card.case .image {\n  position: relative;\n}\n\n.cu-card.case .image image {\n  width: 100%;\n}\n\n.cu-card.case .image .cu-tag {\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.cu-card.case .image .cu-bar {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  background-color: transparent;\n  padding: 0px 30px;\n}\n\n.cu-card.case.no-card .image {\n  margin: 30px 30px 0;\n  overflow: hidden;\n  border-radius: 10px;\n}\n\n.cu-card.dynamic {\n  display: block;\n}\n\n.cu-card.dynamic > .cu-item {\n  display: block;\n  background-color: #ffffff;\n  overflow: hidden;\n}\n\n.cu-card.dynamic > .cu-item > .text-content {\n  padding: 0 30px 0;\n  max-height: 6.4em;\n  overflow: hidden;\n  font-size: 30px;\n  margin-bottom: 20px;\n}\n\n.cu-card.dynamic > .cu-item .square-img {\n  width: 100%;\n  height: 200px;\n  border-radius: 6px;\n}\n\n.cu-card.dynamic > .cu-item .only-img {\n  width: 100%;\n  height: 320px;\n  border-radius: 6px;\n}\n\n/* card.dynamic>.cu-item .comment {\n   padding: 20px;\n   background-color: #f1f1f1;\n   margin: 0 30px 30px;\n   border-radius: 6px;\n } */\n\n.cu-card.article {\n  display: block;\n}\n\n.cu-card.article > .cu-item {\n  padding-bottom: 30px;\n}\n\n.cu-card.article > .cu-item .title {\n  font-size: 30px;\n  font-weight: 900;\n  color: #333333;\n  line-height: 100px;\n  padding: 0 30px;\n}\n\n.cu-card.article > .cu-item .content {\n  display: flex;\n  padding: 0 30px;\n}\n\n.cu-card.article > .cu-item .content > image {\n  width: 240px;\n  height: 6.4em;\n  margin-right: 20px;\n  border-radius: 6px;\n}\n\n.cu-card.article > .cu-item .content .desc {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.cu-card.article > .cu-item .content .text-content {\n  font-size: 28px;\n  color: #888;\n  height: 4.8em;\n  overflow: hidden;\n}\n\n/* ==================\n          表单\n  ==================== */\n\n.cu-form-group {\n  background-color: #ffffff;\n  padding: 1px 30px;\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  justify-content: space-between;\n}\n\n.cu-form-group + .cu-form-group {\n  border-top: 1px solid #eee;\n}\n\n.cu-form-group .title {\n  text-align: justify;\n  padding-right: 30px;\n  font-size: 30px;\n  position: relative;\n  height: 60px;\n  line-height: 60px;\n}\n\n.cu-form-group input {\n  flex: 1;\n  font-size: 30px;\n  color: #555;\n  padding-right: 20px;\n}\n\n.cu-form-group > text[class*='cuIcon-'] {\n  font-size: 36px;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.cu-form-group textarea {\n  margin: 32px 0 30px;\n  height: 4.6em;\n  width: 100%;\n  line-height: 1.2em;\n  flex: 1;\n  font-size: 28px;\n  padding: 0;\n}\n\n.cu-form-group.align-start .title {\n  height: 1em;\n  margin-top: 32px;\n  line-height: 1em;\n}\n\n.cu-form-group picker {\n  flex: 1;\n  padding-right: 40px;\n  overflow: hidden;\n  position: relative;\n}\n\n.cu-form-group picker .picker {\n  line-height: 100px;\n  font-size: 28px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  width: 100%;\n  text-align: right;\n}\n\n.cu-form-group picker::after {\n  font-family: cuIcon;\n  display: block;\n  content: '\\e6a3';\n  position: absolute;\n  font-size: 34px;\n  color: #8799a3;\n  line-height: 100px;\n  width: 60px;\n  text-align: center;\n  top: 0;\n  bottom: 0;\n  right: -20px;\n  margin: auto;\n}\n\n.cu-form-group textarea[disabled],\n.cu-form-group textarea[disabled] .placeholder {\n  color: transparent;\n}\n\n/* ==================\n          模态窗口\n  ==================== */\n\n.cu-modal {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1110;\n  opacity: 0;\n  outline: 0;\n  text-align: center;\n  -ms-transform: scale(1.185);\n  transform: scale(1.185);\n  backface-visibility: hidden;\n  perspective: 2000px;\n  background: rgba(0, 0, 0, 0.6);\n  transition: all 0.3s ease-in-out 0s;\n  pointer-events: none;\n}\n\n.cu-modal::before {\n  content: '\\200B';\n  display: inline-block;\n  height: 100%;\n  vertical-align: middle;\n}\n\n.cu-modal.show {\n  opacity: 1;\n  transition-duration: 0.3s;\n  -ms-transform: scale(1);\n  transform: scale(1);\n  overflow-x: hidden;\n  overflow-y: auto;\n  pointer-events: auto;\n}\n\n.cu-dialog {\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n  margin-left: auto;\n  margin-right: auto;\n  width: 680px;\n  max-width: 100%;\n  background-color: #f8f8f8;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.cu-modal.bottom-modal::before {\n  vertical-align: bottom;\n}\n\n.cu-modal.bottom-modal .cu-dialog {\n  width: 100%;\n  border-radius: 0;\n}\n\n.cu-modal.bottom-modal {\n  margin-bottom: -1000px;\n}\n\n.cu-modal.bottom-modal.show {\n  margin-bottom: 0;\n}\n\n.cu-modal.drawer-modal {\n  transform: scale(1);\n  display: flex;\n}\n\n.cu-modal.drawer-modal .cu-dialog {\n  height: 100%;\n  min-width: 200px;\n  border-radius: 0;\n  margin: initial;\n  transition-duration: 0.3s;\n}\n\n.cu-modal.drawer-modal.justify-start .cu-dialog {\n  transform: translateX(-100%);\n}\n\n.cu-modal.drawer-modal.justify-end .cu-dialog {\n  transform: translateX(100%);\n}\n\n.cu-modal.drawer-modal.show .cu-dialog {\n  transform: translateX(0%);\n}\n\n.cu-modal .cu-dialog > .cu-bar:first-child .action {\n  min-width: 100px;\n  margin-right: 0;\n  min-height: 100px;\n}\n\n/* ==================\n          轮播\n  ==================== */\nswiper .a-swiper-dot {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 50%;\n  vertical-align: middle;\n}\n\nswiper[class*='-dot'] .wx-swiper-dots,\nswiper[class*='-dot'] .a-swiper-dots,\nswiper[class*='-dot'] .uni-swiper-dots {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: center;\n}\n\nswiper.square-dot .wx-swiper-dot,\nswiper.square-dot .a-swiper-dot,\nswiper.square-dot .uni-swiper-dot {\n  background-color: #ffffff;\n  opacity: 0.4;\n  width: 10px;\n  height: 10px;\n  border-radius: 20px;\n  margin: 0 8px !important;\n}\n\nswiper.square-dot .wx-swiper-dot.wx-swiper-dot-active,\nswiper.square-dot .a-swiper-dot.a-swiper-dot-active,\nswiper.square-dot .uni-swiper-dot.uni-swiper-dot-active {\n  opacity: 1;\n  width: 30px;\n}\n\nswiper.round-dot .wx-swiper-dot,\nswiper.round-dot .a-swiper-dot,\nswiper.round-dot .uni-swiper-dot {\n  width: 10px;\n  height: 10px;\n  position: relative;\n  margin: 4px 8px !important;\n}\n\nswiper.round-dot .wx-swiper-dot.wx-swiper-dot-active::after,\nswiper.round-dot .a-swiper-dot.a-swiper-dot-active::after,\nswiper.round-dot .uni-swiper-dot.uni-swiper-dot-active::after {\n  content: '';\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  top: 0px;\n  left: 0px;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  background-color: #ffffff;\n  border-radius: 20px;\n}\n\nswiper.round-dot .wx-swiper-dot.wx-swiper-dot-active,\nswiper.round-dot .a-swiper-dot.a-swiper-dot-active,\nswiper.round-dot .uni-swiper-dot.uni-swiper-dot-active {\n  width: 18px;\n  height: 18px;\n}\n\n.screen-swiper {\n  min-height: 375px;\n}\n\n.screen-swiper image,\n.screen-swiper video,\n.swiper-item image,\n.swiper-item video {\n  width: 100%;\n  display: block;\n  height: 100%;\n  margin: 0;\n  pointer-events: none;\n}\n\n.card-swiper {\n  height: 420px !important;\n}\n\n.card-swiper swiper-item {\n  width: 610px !important;\n  left: 70px;\n  box-sizing: border-box;\n  padding: 40px 0px 70px;\n  overflow: initial;\n}\n\n.card-swiper swiper-item .swiper-item {\n  width: 100%;\n  display: block;\n  height: 100%;\n  border-radius: 10px;\n  transform: scale(0.9);\n  transition: all 0.2s ease-in 0s;\n  overflow: hidden;\n}\n\n.card-swiper swiper-item.cur .swiper-item {\n  transform: none;\n  transition: all 0.2s ease-in 0s;\n}\n\n.tower-swiper {\n  height: 420px;\n  position: relative;\n  max-width: 750px;\n  overflow: hidden;\n}\n\n.tower-swiper .tower-item {\n  position: absolute;\n  width: 300px;\n  height: 380px;\n  top: 0;\n  bottom: 0;\n  left: 50%;\n  margin: auto;\n  transition: all 0.2s ease-in 0s;\n  opacity: 1;\n}\n\n.tower-swiper .tower-item.none {\n  opacity: 0;\n}\n\n.tower-swiper .tower-item .swiper-item {\n  width: 100%;\n  height: 100%;\n  border-radius: 6px;\n  overflow: hidden;\n}\n\n/* ==================\n           步骤条\n  ==================== */\n\n.cu-steps {\n  display: flex;\n}\n\nscroll-view.cu-steps {\n  display: block;\n  white-space: nowrap;\n}\n\nscroll-view.cu-steps .cu-item {\n  display: inline-block;\n}\n\n.cu-steps .cu-item {\n  flex: 1;\n  text-align: center;\n  position: relative;\n  min-width: 100px;\n}\n\n.cu-steps .cu-item:not([class*='text-']) {\n  color: #8799a3;\n}\n\n.cu-steps .cu-item [class*='cuIcon-'],\n.cu-steps .cu-item .num {\n  display: block;\n  font-size: 40px;\n  line-height: 80px;\n}\n\n.cu-steps .cu-item::before,\n.cu-steps .cu-item::after,\n.cu-steps.steps-arrow .cu-item::before,\n.cu-steps.steps-arrow .cu-item::after {\n  content: '';\n  display: block;\n  position: absolute;\n  height: 0px;\n  width: calc(100% - 80px);\n  border-bottom: 1px solid #ccc;\n  left: calc(0px - (100% - 80px) / 2);\n  top: 40px;\n  z-index: 0;\n}\n\n.cu-steps.steps-arrow .cu-item::before,\n.cu-steps.steps-arrow .cu-item::after {\n  content: '\\e6a3';\n  font-family: 'cuIcon';\n  height: 30px;\n  border-bottom-width: 0px;\n  line-height: 30px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  color: #ccc;\n}\n\n.cu-steps.steps-bottom .cu-item::before,\n.cu-steps.steps-bottom .cu-item::after {\n  bottom: 40px;\n  top: initial;\n}\n\n.cu-steps .cu-item::after {\n  border-bottom: 1px solid currentColor;\n  width: 0px;\n  transition: all 0.3s ease-in-out 0s;\n}\n\n.cu-steps .cu-item[class*='text-']::after {\n  width: calc(100% - 80px);\n  color: currentColor;\n}\n\n.cu-steps .cu-item:first-child::before,\n.cu-steps .cu-item:first-child::after {\n  display: none;\n}\n\n.cu-steps .cu-item .num {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  line-height: 40px;\n  margin: 20px auto;\n  font-size: 24px;\n  border: 1px solid currentColor;\n  position: relative;\n  overflow: hidden;\n}\n\n.cu-steps .cu-item[class*='text-'] .num {\n  background-color: currentColor;\n}\n\n.cu-steps .cu-item .num::before,\n.cu-steps .cu-item .num::after {\n  content: attr(data-index);\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  transition: all 0.3s ease-in-out 0s;\n  transform: translateY(0px);\n}\n\n.cu-steps .cu-item[class*='text-'] .num::before {\n  transform: translateY(-40px);\n  color: #ffffff;\n}\n\n.cu-steps .cu-item .num::after {\n  transform: translateY(40px);\n  color: #ffffff;\n  transition: all 0.3s ease-in-out 0s;\n}\n\n.cu-steps .cu-item[class*='text-'] .num::after {\n  content: '\\e645';\n  font-family: 'cuIcon';\n  color: #ffffff;\n  transform: translateY(0px);\n}\n\n.cu-steps .cu-item[class*='text-'] .num.err::after {\n  content: '\\e646';\n}\n\n/* ==================\n           布局\n  ==================== */\n\n/*  -- flex弹性布局 -- */\n\n.flex {\n  display: flex;\n}\n\n.basis-xs {\n  flex-basis: 20%;\n}\n\n.basis-sm {\n  flex-basis: 40%;\n}\n\n.basis-df {\n  flex-basis: 50%;\n}\n\n.basis-lg {\n  flex-basis: 60%;\n}\n\n.basis-xl {\n  flex-basis: 80%;\n}\n\n.flex-sub {\n  flex: 1;\n}\n\n.flex-twice {\n  flex: 2;\n}\n\n.flex-treble {\n  flex: 3;\n}\n\n.flex-direction {\n  flex-direction: column;\n}\n\n.flex-wrap {\n  flex-wrap: wrap;\n}\n\n.align-start {\n  align-items: flex-start;\n}\n\n.align-end {\n  align-items: flex-end;\n}\n\n.align-baseline {\n  align-items: baseline;\n}\n\n.align-center {\n  align-items: center;\n}\n\n.align-stretch {\n  align-items: stretch;\n}\n\n.self-start {\n  align-self: flex-start;\n}\n\n.self-center {\n  align-self: center;\n}\n\n.self-end {\n  align-self: flex-end;\n}\n\n.self-stretch {\n  align-self: stretch;\n}\n\n.align-stretch {\n  align-items: stretch;\n}\n\n.justify-start {\n  justify-content: flex-start;\n}\n\n.justify-end {\n  justify-content: flex-end;\n}\n\n.justify-center {\n  justify-content: center;\n}\n\n.justify-between {\n  justify-content: space-between;\n}\n\n.justify-around {\n  justify-content: space-around;\n}\n\n/* grid布局 */\n\n.grid {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.grid.grid-square {\n  overflow: hidden;\n}\n\n.grid.grid-square .cu-tag {\n  position: absolute;\n  right: 0;\n  top: 0;\n  border-bottom-left-radius: 6px;\n  padding: 6px 12px;\n  height: auto;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.grid.grid-square > view > text[class*='cuIcon-'] {\n  font-size: 52px;\n  position: absolute;\n  color: #8799a3;\n  margin: auto;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n\n.grid.grid-square > view {\n  margin-right: 20px;\n  margin-bottom: 20px;\n  border-radius: 6px;\n  position: relative;\n  overflow: hidden;\n}\n\n.grid.grid-square > view.bg-img image {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n}\n\n.grid.col-1.grid-square > view {\n  padding-bottom: 100%;\n  height: 0;\n  margin-right: 0;\n}\n\n.grid.col-2.grid-square > view {\n  padding-bottom: calc((100% - 20px) / 2);\n  height: 0;\n  width: calc((100% - 20px) / 2);\n}\n\n.grid.col-3.grid-square > view {\n  padding-bottom: calc((100% - 40px) / 3);\n  height: 0;\n  width: calc((100% - 40px) / 3);\n}\n\n.grid.col-4.grid-square > view {\n  padding-bottom: calc((100% - 60px) / 4);\n  height: 0;\n  width: calc((100% - 60px) / 4);\n}\n\n.grid.col-5.grid-square > view {\n  padding-bottom: calc((100% - 80px) / 5);\n  height: 0;\n  width: calc((100% - 80px) / 5);\n}\n\n.grid.col-2.grid-square > view:nth-child(2n),\n.grid.col-3.grid-square > view:nth-child(3n),\n.grid.col-4.grid-square > view:nth-child(4n),\n.grid.col-5.grid-square > view:nth-child(5n) {\n  margin-right: 0;\n}\n\n.grid.col-1 > view {\n  width: 100%;\n}\n\n.grid.col-2 > view {\n  width: 50%;\n}\n\n.grid.col-3 > view {\n  width: 33.33%;\n}\n\n.grid.col-4 > view {\n  width: 25%;\n}\n\n.grid.col-5 > view {\n  width: 20%;\n}\n\n/*  -- 内外边距 -- */\n\n.margin-0 {\n  margin: 0;\n}\n\n.margin-xs {\n  margin: 10px;\n}\n\n.margin-sm {\n  margin: 20px;\n}\n\n.margin {\n  margin: 30px;\n}\n\n.margin-lg {\n  margin: 40px;\n}\n\n.margin-xl {\n  margin: 50px;\n}\n\n.margin-top-xs {\n  margin-top: 10px;\n}\n\n.margin-top-sm {\n  margin-top: 20px;\n}\n\n.margin-top {\n  margin-top: 30px;\n}\n\n.margin-top-lg {\n  margin-top: 40px;\n}\n\n.margin-top-xl {\n  margin-top: 50px;\n}\n\n.margin-right-xs {\n  margin-right: 10px;\n}\n\n.margin-right-sm {\n  margin-right: 20px;\n}\n\n.margin-right {\n  margin-right: 30px;\n}\n\n.margin-right-lg {\n  margin-right: 40px;\n}\n\n.margin-right-xl {\n  margin-right: 50px;\n}\n\n.margin-bottom-xs {\n  margin-bottom: 10px;\n}\n\n.margin-bottom-sm {\n  margin-bottom: 20px;\n}\n\n.margin-bottom {\n  margin-bottom: 30px;\n}\n\n.margin-bottom-lg {\n  margin-bottom: 40px;\n}\n\n.margin-bottom-xl {\n  margin-bottom: 50px;\n}\n\n.margin-left-xs {\n  margin-left: 10px;\n}\n\n.margin-left-sm {\n  margin-left: 20px;\n}\n\n.margin-left {\n  margin-left: 30px;\n}\n\n.margin-left-lg {\n  margin-left: 40px;\n}\n\n.margin-left-xl {\n  margin-left: 50px;\n}\n\n.margin-lr-xs {\n  margin-left: 10px;\n  margin-right: 10px;\n}\n\n.margin-lr-sm {\n  margin-left: 20px;\n  margin-right: 20px;\n}\n\n.margin-lr {\n  margin-left: 30px;\n  margin-right: 30px;\n}\n\n.margin-lr-lg {\n  margin-left: 40px;\n  margin-right: 40px;\n}\n\n.margin-lr-xl {\n  margin-left: 50px;\n  margin-right: 50px;\n}\n\n.margin-tb-xs {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.margin-tb-sm {\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\n\n.margin-tb {\n  margin-top: 30px;\n  margin-bottom: 30px;\n}\n\n.margin-tb-lg {\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.margin-tb-xl {\n  margin-top: 50px;\n  margin-bottom: 50px;\n}\n\n.padding-0 {\n  padding: 0;\n}\n\n.padding-xs {\n  padding: 10px;\n}\n\n.padding-sm {\n  padding: 20px;\n}\n\n.padding {\n  padding: 30px;\n}\n\n.padding-lg {\n  padding: 40px;\n}\n\n.padding-xl {\n  padding: 50px;\n}\n\n.padding-top-xs {\n  padding-top: 10px;\n}\n\n.padding-top-sm {\n  padding-top: 20px;\n}\n\n.padding-top {\n  padding-top: 30px;\n}\n\n.padding-top-lg {\n  padding-top: 40px;\n}\n\n.padding-top-xl {\n  padding-top: 50px;\n}\n\n.padding-right-xs {\n  padding-right: 10px;\n}\n\n.padding-right-sm {\n  padding-right: 20px;\n}\n\n.padding-right {\n  padding-right: 30px;\n}\n\n.padding-right-lg {\n  padding-right: 40px;\n}\n\n.padding-right-xl {\n  padding-right: 50px;\n}\n\n.padding-bottom-xs {\n  padding-bottom: 10px;\n}\n\n.padding-bottom-sm {\n  padding-bottom: 20px;\n}\n\n.padding-bottom {\n  padding-bottom: 30px;\n}\n\n.padding-bottom-lg {\n  padding-bottom: 40px;\n}\n\n.padding-bottom-xl {\n  padding-bottom: 50px;\n}\n\n.padding-left-xs {\n  padding-left: 10px;\n}\n\n.padding-left-sm {\n  padding-left: 20px;\n}\n\n.padding-left {\n  padding-left: 30px;\n}\n\n.padding-left-lg {\n  padding-left: 40px;\n}\n\n.padding-left-xl {\n  padding-left: 50px;\n}\n\n.padding-lr-xs {\n  padding-left: 10px;\n  padding-right: 10px;\n}\n\n.padding-lr-sm {\n  padding-left: 20px;\n  padding-right: 20px;\n}\n\n.padding-lr {\n  padding-left: 30px;\n  padding-right: 30px;\n}\n\n.padding-lr-lg {\n  padding-left: 40px;\n  padding-right: 40px;\n}\n\n.padding-lr-xl {\n  padding-left: 50px;\n  padding-right: 50px;\n}\n\n.padding-tb-xs {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n.padding-tb-sm {\n  padding-top: 20px;\n  padding-bottom: 20px;\n}\n\n.padding-tb {\n  padding-top: 30px;\n  padding-bottom: 30px;\n}\n\n.padding-tb-lg {\n  padding-top: 40px;\n  padding-bottom: 40px;\n}\n\n.padding-tb-xl {\n  padding-top: 50px;\n  padding-bottom: 50px;\n}\n\n/* -- 浮动 --  */\n\n.cf::after,\n.cf::before {\n  content: ' ';\n  display: table;\n}\n\n.cf::after {\n  clear: both;\n}\n\n.fl {\n  float: left;\n}\n\n.fr {\n  float: right;\n}\n\n/* ==================\n           背景\n  ==================== */\n\n.line-red::after,\n.lines-red::after {\n  border-color: #e54d42;\n}\n\n.line-orange::after,\n.lines-orange::after {\n  border-color: #f37b1d;\n}\n\n.line-yellow::after,\n.lines-yellow::after {\n  border-color: #fbbd08;\n}\n\n.line-olive::after,\n.lines-olive::after {\n  border-color: #8dc63f;\n}\n\n.line-green::after,\n.lines-green::after {\n  border-color: #39b54a;\n}\n\n.line-cyan::after,\n.lines-cyan::after {\n  border-color: #1cbbb4;\n}\n\n.line-blue::after,\n.lines-blue::after {\n  border-color: #0081ff;\n}\n\n.line-purple::after,\n.lines-purple::after {\n  border-color: #6739b6;\n}\n\n.line-mauve::after,\n.lines-mauve::after {\n  border-color: #9c26b0;\n}\n\n.line-pink::after,\n.lines-pink::after {\n  border-color: #e03997;\n}\n\n.line-brown::after,\n.lines-brown::after {\n  border-color: #a5673f;\n}\n\n.line-grey::after,\n.lines-grey::after {\n  border-color: #8799a3;\n}\n\n.line-gray::after,\n.lines-gray::after {\n  border-color: #aaaaaa;\n}\n\n.line-black::after,\n.lines-black::after {\n  border-color: #333333;\n}\n\n.line-white::after,\n.lines-white::after {\n  border-color: #ffffff;\n}\n\n.bg-red {\n  background-color: #e54d42;\n  color: #ffffff;\n}\n\n.bg-orange {\n  background-color: #f37b1d;\n  color: #ffffff;\n}\n\n.bg-yellow {\n  background-color: #fbbd08;\n  color: #333333;\n}\n\n.bg-olive {\n  background-color: #8dc63f;\n  color: #ffffff;\n}\n\n.bg-green {\n  background-color: #39b54a;\n  color: #ffffff;\n}\n\n.bg-cyan {\n  background-color: #1cbbb4;\n  color: #ffffff;\n}\n\n.bg-blue {\n  background-color: #0081ff;\n  color: #ffffff;\n}\n\n.bg-purple {\n  background-color: #6739b6;\n  color: #ffffff;\n}\n\n.bg-mauve {\n  background-color: #9c26b0;\n  color: #ffffff;\n}\n\n.bg-pink {\n  background-color: #e03997;\n  color: #ffffff;\n}\n\n.bg-brown {\n  background-color: #a5673f;\n  color: #ffffff;\n}\n\n.bg-grey {\n  background-color: #8799a3;\n  color: #ffffff;\n}\n\n.bg-gray {\n  background-color: #f0f0f0;\n  color: #333333;\n}\n\n.bg-black {\n  background-color: #333333;\n  color: #ffffff;\n}\n\n.bg-white {\n  background-color: #ffffff;\n  color: #666666;\n}\n\n.bg-shadeTop {\n  background-image: linear-gradient(rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.01));\n  color: #ffffff;\n}\n\n.bg-shadeBottom {\n  background-image: linear-gradient(rgba(0, 0, 0, 0.01), rgba(0, 0, 0, 1));\n  color: #ffffff;\n}\n\n.bg-red.light {\n  color: #e54d42;\n  background-color: #fadbd9;\n}\n\n.bg-orange.light {\n  color: #f37b1d;\n  background-color: #fde6d2;\n}\n\n.bg-yellow.light {\n  color: #fbbd08;\n  background-color: #fef2ced2;\n}\n\n.bg-olive.light {\n  color: #8dc63f;\n  background-color: #e8f4d9;\n}\n\n.bg-green.light {\n  color: #39b54a;\n  background-color: #d7f0dbff;\n}\n\n.bg-cyan.light {\n  color: #1cbbb4;\n  background-color: #d2f1f0;\n}\n\n.bg-blue.light {\n  color: #0081ff;\n  background-color: #cce6ff;\n}\n\n.bg-purple.light {\n  color: #6739b6;\n  background-color: #e1d7f0;\n}\n\n.bg-mauve.light {\n  color: #9c26b0;\n  background-color: #ebd4ef;\n}\n\n.bg-pink.light {\n  color: #e03997;\n  background-color: #f9d7ea;\n}\n\n.bg-brown.light {\n  color: #a5673f;\n  background-color: #ede1d9;\n}\n\n.bg-grey.light {\n  color: #8799a3;\n  background-color: #e7ebed;\n}\n\n.bg-gradual-red {\n  background-image: linear-gradient(45deg, #f43f3b, #ec008c);\n  color: #ffffff;\n}\n\n.bg-gradual-orange {\n  background-image: linear-gradient(45deg, #ff9700, #ed1c24);\n  color: #ffffff;\n}\n\n.bg-gradual-green {\n  background-image: linear-gradient(45deg, #39b54a, #8dc63f);\n  color: #ffffff;\n}\n\n.bg-gradual-purple {\n  background-image: linear-gradient(45deg, #9000ff, #5e00ff);\n  color: #ffffff;\n}\n\n.bg-gradual-pink {\n  background-image: linear-gradient(45deg, #ec008c, #6739b6);\n  color: #ffffff;\n}\n\n.bg-gradual-blue {\n  background-image: linear-gradient(45deg, #0081ff, #1cbbb4);\n  color: #ffffff;\n}\n\n.shadow[class*='-red'] {\n  box-shadow: 6px 6px 8px rgba(204, 69, 59, 0.2);\n}\n\n.shadow[class*='-orange'] {\n  box-shadow: 6px 6px 8px rgba(217, 109, 26, 0.2);\n}\n\n.shadow[class*='-yellow'] {\n  box-shadow: 6px 6px 8px rgba(224, 170, 7, 0.2);\n}\n\n.shadow[class*='-olive'] {\n  box-shadow: 6px 6px 8px rgba(124, 173, 55, 0.2);\n}\n\n.shadow[class*='-green'] {\n  box-shadow: 6px 6px 8px rgba(48, 156, 63, 0.2);\n}\n\n.shadow[class*='-cyan'] {\n  box-shadow: 6px 6px 8px rgba(28, 187, 180, 0.2);\n}\n\n.shadow[class*='-blue'] {\n  box-shadow: 6px 6px 8px rgba(0, 102, 204, 0.2);\n}\n\n.shadow[class*='-purple'] {\n  box-shadow: 6px 6px 8px rgba(88, 48, 156, 0.2);\n}\n\n.shadow[class*='-mauve'] {\n  box-shadow: 6px 6px 8px rgba(133, 33, 150, 0.2);\n}\n\n.shadow[class*='-pink'] {\n  box-shadow: 6px 6px 8px rgba(199, 50, 134, 0.2);\n}\n\n.shadow[class*='-brown'] {\n  box-shadow: 6px 6px 8px rgba(140, 88, 53, 0.2);\n}\n\n.shadow[class*='-grey'] {\n  box-shadow: 6px 6px 8px rgba(114, 130, 138, 0.2);\n}\n\n.shadow[class*='-gray'] {\n  box-shadow: 6px 6px 8px rgba(114, 130, 138, 0.2);\n}\n\n.shadow[class*='-black'] {\n  box-shadow: 6px 6px 8px rgba(26, 26, 26, 0.2);\n}\n\n.shadow[class*='-white'] {\n  box-shadow: 6px 6px 8px rgba(26, 26, 26, 0.2);\n}\n\n.text-shadow[class*='-red'] {\n  text-shadow: 6px 6px 8px rgba(204, 69, 59, 0.2);\n}\n\n.text-shadow[class*='-orange'] {\n  text-shadow: 6px 6px 8px rgba(217, 109, 26, 0.2);\n}\n\n.text-shadow[class*='-yellow'] {\n  text-shadow: 6px 6px 8px rgba(224, 170, 7, 0.2);\n}\n\n.text-shadow[class*='-olive'] {\n  text-shadow: 6px 6px 8px rgba(124, 173, 55, 0.2);\n}\n\n.text-shadow[class*='-green'] {\n  text-shadow: 6px 6px 8px rgba(48, 156, 63, 0.2);\n}\n\n.text-shadow[class*='-cyan'] {\n  text-shadow: 6px 6px 8px rgba(28, 187, 180, 0.2);\n}\n\n.text-shadow[class*='-blue'] {\n  text-shadow: 6px 6px 8px rgba(0, 102, 204, 0.2);\n}\n\n.text-shadow[class*='-purple'] {\n  text-shadow: 6px 6px 8px rgba(88, 48, 156, 0.2);\n}\n\n.text-shadow[class*='-mauve'] {\n  text-shadow: 6px 6px 8px rgba(133, 33, 150, 0.2);\n}\n\n.text-shadow[class*='-pink'] {\n  text-shadow: 6px 6px 8px rgba(199, 50, 134, 0.2);\n}\n\n.text-shadow[class*='-brown'] {\n  text-shadow: 6px 6px 8px rgba(140, 88, 53, 0.2);\n}\n\n.text-shadow[class*='-grey'] {\n  text-shadow: 6px 6px 8px rgba(114, 130, 138, 0.2);\n}\n\n.text-shadow[class*='-gray'] {\n  text-shadow: 6px 6px 8px rgba(114, 130, 138, 0.2);\n}\n\n.text-shadow[class*='-black'] {\n  text-shadow: 6px 6px 8px rgba(26, 26, 26, 0.2);\n}\n\n.bg-img {\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n\n.bg-mask {\n  background-color: #333333;\n  position: relative;\n}\n\n.bg-mask::after {\n  content: '';\n  border-radius: inherit;\n  width: 100%;\n  height: 100%;\n  display: block;\n  background-color: rgba(0, 0, 0, 0.4);\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n}\n\n.bg-mask view,\n.bg-mask cover-view {\n  z-index: 5;\n  position: relative;\n}\n\n.bg-video {\n  position: relative;\n}\n\n.bg-video video {\n  display: block;\n  height: 100%;\n  width: 100%;\n  -o-object-fit: cover;\n  object-fit: cover;\n  position: absolute;\n  top: 0;\n  z-index: 0;\n  pointer-events: none;\n}\n\n/* ==================\n           文本\n  ==================== */\n\n.text-xs {\n  font-size: 20px;\n}\n\n.text-sm {\n  font-size: 24px;\n}\n\n.text-df {\n  font-size: 28px;\n}\n\n.text-lg {\n  font-size: 32px;\n}\n\n.text-xl {\n  font-size: 36px;\n}\n\n.text-xxl {\n  font-size: 44px;\n}\n\n.text-sl {\n  font-size: 80px;\n}\n\n.text-xsl {\n  font-size: 120px;\n}\n\n.text-Abc {\n  text-transform: Capitalize;\n}\n\n.text-ABC {\n  text-transform: Uppercase;\n}\n\n.text-abc {\n  text-transform: Lowercase;\n}\n\n.text-price::before {\n  content: '¥';\n  font-size: 80%;\n  margin-right: 4px;\n}\n\n.text-cut {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.text-bold {\n  font-weight: bold;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-content {\n  line-height: 1.6;\n}\n\n.text-left {\n  text-align: left;\n}\n\n.text-right {\n  text-align: right;\n}\n\n.text-red,\n.line-red,\n.lines-red {\n  color: #e54d42;\n}\n\n.text-orange,\n.line-orange,\n.lines-orange {\n  color: #f37b1d;\n}\n\n.text-yellow,\n.line-yellow,\n.lines-yellow {\n  color: #fbbd08;\n}\n\n.text-olive,\n.line-olive,\n.lines-olive {\n  color: #8dc63f;\n}\n\n.text-green,\n.line-green,\n.lines-green {\n  color: #39b54a;\n}\n\n.text-cyan,\n.line-cyan,\n.lines-cyan {\n  color: #1cbbb4;\n}\n\n.text-blue,\n.line-blue,\n.lines-blue {\n  color: #0081ff;\n}\n\n.text-purple,\n.line-purple,\n.lines-purple {\n  color: #6739b6;\n}\n\n.text-mauve,\n.line-mauve,\n.lines-mauve {\n  color: #9c26b0;\n}\n\n.text-pink,\n.line-pink,\n.lines-pink {\n  color: #e03997;\n}\n\n.text-brown,\n.line-brown,\n.lines-brown {\n  color: #a5673f;\n}\n\n.text-grey,\n.line-grey,\n.lines-grey {\n  color: #8799a3;\n}\n\n.text-gray,\n.line-gray,\n.lines-gray {\n  color: #aaaaaa;\n}\n\n.text-black,\n.line-black,\n.lines-black {\n  color: #333333;\n}\n\n.text-white,\n.line-white,\n.lines-white {\n  color: #ffffff;\n}\n",
    "cssJson": {
      "view,scroll-view,swiper,button,input,textarea,label,navigator,image": {
        "box-sizing": "border-box"
      },
      ".round": {
        "border-radius": "5000px"
      },
      ".radius": {
        "border-radius": "6px"
      },
      "image": {
        "max-width": "100%",
        "display": "inline-block",
        "position": "relative",
        "z-index": "0"
      },
      "image.loading::before": {
        "content": "''",
        "background-color": "#f5f5f5",
        "display": "block",
        "position": "absolute",
        "width": "100%",
        "height": "100%",
        "z-index": "-2"
      },
      "image.loading::after": {
        "content": "'\\e7f1'",
        "font-family": "'cuIcon'",
        "position": "absolute",
        "top": "0",
        "left": "0",
        "width": "32px",
        "height": "32px",
        "line-height": "32px",
        "right": "0",
        "bottom": "0",
        "z-index": "-1",
        "font-size": "32px",
        "margin": "auto",
        "color": "#ccc",
        "-webkit-animation": "cuIcon-spin 2s infinite linear",
        "animation": "cuIcon-spin 2s infinite linear",
        "display": "block"
      },
      ".response": {
        "width": "100%"
      },
      "switch,checkbox,radio": {
        "position": "relative"
      },
      "switch::after,switch::before": {
        "font-family": "'cuIcon'",
        "content": "'\\e645'",
        "position": "absolute",
        "color": "#ffffff !important",
        "top": "0%",
        "left": "0px",
        "font-size": "26px",
        "line-height": "26px",
        "width": "50%",
        "text-align": "center",
        "pointer-events": "none",
        "transform": "scale(0, 0)",
        "transition": "all 0.3s ease-in-out 0s",
        "z-index": "9",
        "bottom": "0",
        "height": "26px",
        "margin": "auto"
      },
      "switch::before": {
        "content": "'\\e646'",
        "right": "0",
        "transform": "scale(1, 1)",
        "left": "auto"
      },
      "switch[checked]::after,switch.checked::after": {
        "transform": "scale(1, 1)"
      },
      "switch[checked]::before,switch.checked::before": {
        "transform": "scale(0, 0)"
      },
      "radio::before,checkbox::before": {
        "font-family": "'cuIcon'",
        "content": "'\\e645'",
        "position": "absolute",
        "color": "#ffffff !important",
        "top": "50%",
        "margin-top": "-8px",
        "right": "5px",
        "font-size": "32px",
        "line-height": "16px",
        "pointer-events": "none",
        "transform": "scale(1, 1)",
        "transition": "all 0.3s ease-in-out 0s",
        "z-index": "9"
      },
      "radio .wx-radio-input,checkbox .wx-checkbox-input,radio .uni-radio-input,checkbox .uni-checkbox-input": {
        "margin": "0",
        "width": "24px",
        "height": "24px"
      },
      "checkbox.round .wx-checkbox-input,checkbox.round .uni-checkbox-input": {
        "border-radius": "100px"
      },
      "switch[checked]::before": {
        "transform": "scale(0, 0)"
      },
      "switch .wx-switch-input,switch .uni-switch-input": {
        "border": "none",
        "padding": "0 24px",
        "width": "48px",
        "height": "26px",
        "margin": "0",
        "border-radius": "100px"
      },
      "switch .wx-switch-input:not([class*='bg-']),switch .uni-switch-input:not([class*='bg-'])": {
        "background": "#8799a3 !important"
      },
      "switch .wx-switch-input::after,switch .uni-switch-input::after": {
        "margin": "auto",
        "width": "26px",
        "height": "26px",
        "border-radius": "100px",
        "left": "0px",
        "top": "0px",
        "bottom": "0px",
        "position": "absolute",
        "transform": "scale(0.9, 0.9)",
        "transition": "all 0.1s ease-in-out 0s"
      },
      "switch .wx-switch-input.wx-switch-input-checked::after,switch .uni-switch-input.uni-switch-input-checked::after": {
        "margin": "auto",
        "left": "22px",
        "box-shadow": "none",
        "transform": "scale(0.9, 0.9)"
      },
      "radio-group": {
        "display": "inline-block"
      },
      "switch.radius .wx-switch-input::after,switch.radius .wx-switch-input,switch.radius .wx-switch-input::before,switch.radius .uni-switch-input::after,switch.radius .uni-switch-input,switch.radius .uni-switch-input::before": {
        "border-radius": "10px"
      },
      "switch .wx-switch-input::before,radio.radio::before,checkbox .wx-checkbox-input::before,radio .wx-radio-input::before,switch .uni-switch-input::before,radio.radio::before,checkbox .uni-checkbox-input::before,radio .uni-radio-input::before": {
        "display": "none"
      },
      "radio.radio[checked]::after,radio.radio .uni-radio-input-checked::after": {
        "content": "''",
        "background-color": "transparent",
        "display": "block",
        "position": "absolute",
        "width": "8px",
        "height": "8px",
        "z-index": "999",
        "top": "0px",
        "left": "0px",
        "right": "0",
        "bottom": "0",
        "margin": "auto",
        "border-radius": "200px",
        "border": "7px solid #ffffff !important"
      },
      ".switch-sex::after": {
        "content": "'\\e71c'"
      },
      ".switch-sex::before": {
        "content": "'\\e71a'"
      },
      ".switch-sex .wx-switch-input,.switch-sex .uni-switch-input": {
        "background": "#e54d42 !important",
        "border-color": "#e54d42 !important"
      },
      ".switch-sex[checked] .wx-switch-input,.switch-sex.checked .uni-switch-input": {
        "background": "#0081ff !important",
        "border-color": "#0081ff !important"
      },
      "switch.red[checked] .wx-switch-input.wx-switch-input-checked,checkbox.red[checked] .wx-checkbox-input,radio.red[checked] .wx-radio-input,switch.red.checked .uni-switch-input.uni-switch-input-checked,checkbox.red.checked .uni-checkbox-input,radio.red.checked .uni-radio-input": {
        "background-color": "#e54d42 !important",
        "border-color": "#e54d42 !important",
        "color": "#ffffff !important"
      },
      "switch.orange[checked] .wx-switch-input,checkbox.orange[checked] .wx-checkbox-input,radio.orange[checked] .wx-radio-input,switch.orange.checked .uni-switch-input,checkbox.orange.checked .uni-checkbox-input,radio.orange.checked .uni-radio-input": {
        "background-color": "#f37b1d !important",
        "border-color": "#f37b1d !important",
        "color": "#ffffff !important"
      },
      "switch.yellow[checked] .wx-switch-input,checkbox.yellow[checked] .wx-checkbox-input,radio.yellow[checked] .wx-radio-input,switch.yellow.checked .uni-switch-input,checkbox.yellow.checked .uni-checkbox-input,radio.yellow.checked .uni-radio-input": {
        "background-color": "#fbbd08 !important",
        "border-color": "#fbbd08 !important",
        "color": "#333333 !important"
      },
      "switch.olive[checked] .wx-switch-input,checkbox.olive[checked] .wx-checkbox-input,radio.olive[checked] .wx-radio-input,switch.olive.checked .uni-switch-input,checkbox.olive.checked .uni-checkbox-input,radio.olive.checked .uni-radio-input": {
        "background-color": "#8dc63f !important",
        "border-color": "#8dc63f !important",
        "color": "#ffffff !important"
      },
      "switch.green[checked] .wx-switch-input,switch[checked] .wx-switch-input,checkbox.green[checked] .wx-checkbox-input,checkbox[checked] .wx-checkbox-input,radio.green[checked] .wx-radio-input,radio[checked] .wx-radio-input,switch.green.checked .uni-switch-input,switch.checked .uni-switch-input,checkbox.green.checked .uni-checkbox-input,checkbox.checked .uni-checkbox-input,radio.green.checked .uni-radio-input,radio.checked .uni-radio-input": {
        "background-color": "#39b54a !important",
        "border-color": "#39b54a !important",
        "color": "#ffffff !important"
      },
      "switch.cyan[checked] .wx-switch-input,checkbox.cyan[checked] .wx-checkbox-input,radio.cyan[checked] .wx-radio-input,switch.cyan.checked .uni-switch-input,checkbox.cyan.checked .uni-checkbox-input,radio.cyan.checked .uni-radio-input": {
        "background-color": "#1cbbb4 !important",
        "border-color": "#1cbbb4 !important",
        "color": "#ffffff !important"
      },
      "switch.blue[checked] .wx-switch-input,checkbox.blue[checked] .wx-checkbox-input,radio.blue[checked] .wx-radio-input,switch.blue.checked .uni-switch-input,checkbox.blue.checked .uni-checkbox-input,radio.blue.checked .uni-radio-input": {
        "background-color": "#0081ff !important",
        "border-color": "#0081ff !important",
        "color": "#ffffff !important"
      },
      "switch.purple[checked] .wx-switch-input,checkbox.purple[checked] .wx-checkbox-input,radio.purple[checked] .wx-radio-input,switch.purple.checked .uni-switch-input,checkbox.purple.checked .uni-checkbox-input,radio.purple.checked .uni-radio-input": {
        "background-color": "#6739b6 !important",
        "border-color": "#6739b6 !important",
        "color": "#ffffff !important"
      },
      "switch.mauve[checked] .wx-switch-input,checkbox.mauve[checked] .wx-checkbox-input,radio.mauve[checked] .wx-radio-input,switch.mauve.checked .uni-switch-input,checkbox.mauve.checked .uni-checkbox-input,radio.mauve.checked .uni-radio-input": {
        "background-color": "#9c26b0 !important",
        "border-color": "#9c26b0 !important",
        "color": "#ffffff !important"
      },
      "switch.pink[checked] .wx-switch-input,checkbox.pink[checked] .wx-checkbox-input,radio.pink[checked] .wx-radio-input,switch.pink.checked .uni-switch-input,checkbox.pink.checked .uni-checkbox-input,radio.pink.checked .uni-radio-input": {
        "background-color": "#e03997 !important",
        "border-color": "#e03997 !important",
        "color": "#ffffff !important"
      },
      "switch.brown[checked] .wx-switch-input,checkbox.brown[checked] .wx-checkbox-input,radio.brown[checked] .wx-radio-input,switch.brown.checked .uni-switch-input,checkbox.brown.checked .uni-checkbox-input,radio.brown.checked .uni-radio-input": {
        "background-color": "#a5673f !important",
        "border-color": "#a5673f !important",
        "color": "#ffffff !important"
      },
      "switch.grey[checked] .wx-switch-input,checkbox.grey[checked] .wx-checkbox-input,radio.grey[checked] .wx-radio-input,switch.grey.checked .uni-switch-input,checkbox.grey.checked .uni-checkbox-input,radio.grey.checked .uni-radio-input": {
        "background-color": "#8799a3 !important",
        "border-color": "#8799a3 !important",
        "color": "#ffffff !important"
      },
      "switch.gray[checked] .wx-switch-input,checkbox.gray[checked] .wx-checkbox-input,radio.gray[checked] .wx-radio-input,switch.gray.checked .uni-switch-input,checkbox.gray.checked .uni-checkbox-input,radio.gray.checked .uni-radio-input": {
        "background-color": "#f0f0f0 !important",
        "border-color": "#f0f0f0 !important",
        "color": "#333333 !important"
      },
      "switch.black[checked] .wx-switch-input,checkbox.black[checked] .wx-checkbox-input,radio.black[checked] .wx-radio-input,switch.black.checked .uni-switch-input,checkbox.black.checked .uni-checkbox-input,radio.black.checked .uni-radio-input": {
        "background-color": "#333333 !important",
        "border-color": "#333333 !important",
        "color": "#ffffff !important"
      },
      "switch.white[checked] .wx-switch-input,checkbox.white[checked] .wx-checkbox-input,radio.white[checked] .wx-radio-input,switch.white.checked .uni-switch-input,checkbox.white.checked .uni-checkbox-input,radio.white.checked .uni-radio-input": {
        "background-color": "#ffffff !important",
        "border-color": "#ffffff !important",
        "color": "#333333 !important"
      },
      ".solid,.solid-top,.solid-right,.solid-bottom,.solid-left,.solids,.solids-top,.solids-right,.solids-bottom,.solids-left,.dashed,.dashed-top,.dashed-right,.dashed-bottom,.dashed-left": {
        "position": "relative"
      },
      ".solid::after,.solid-top::after,.solid-right::after,.solid-bottom::after,.solid-left::after,.solids::after,.solids-top::after,.solids-right::after,.solids-bottom::after,.solids-left::after,.dashed::after,.dashed-top::after,.dashed-right::after,.dashed-bottom::after,.dashed-left::after": {
        "content": "' '",
        "width": "200%",
        "height": "200%",
        "position": "absolute",
        "top": "0",
        "left": "0",
        "border-radius": "inherit",
        "transform": "scale(0.5)",
        "transform-origin": "0 0",
        "pointer-events": "none",
        "box-sizing": "border-box"
      },
      ".solid::after": {
        "border": "1px solid rgba(0, 0, 0, 0.1)"
      },
      ".solid-top::after": {
        "border-top": "1px solid rgba(0, 0, 0, 0.1)"
      },
      ".solid-right::after": {
        "border-right": "1px solid rgba(0, 0, 0, 0.1)"
      },
      ".solid-bottom::after": {
        "border-bottom": "1px solid rgba(0, 0, 0, 0.1)"
      },
      ".solid-left::after": {
        "border-left": "1px solid rgba(0, 0, 0, 0.1)"
      },
      ".solids::after": {
        "border": "8px solid #eee"
      },
      ".solids-top::after": {
        "border-top": "8px solid #eee"
      },
      ".solids-right::after": {
        "border-right": "8px solid #eee"
      },
      ".solids-bottom::after": {
        "border-bottom": "8px solid #eee"
      },
      ".solids-left::after": {
        "border-left": "8px solid #eee"
      },
      ".dashed::after": {
        "border": "1px dashed #ddd"
      },
      ".dashed-top::after": {
        "border-top": "1px dashed #ddd"
      },
      ".dashed-right::after": {
        "border-right": "1px dashed #ddd"
      },
      ".dashed-bottom::after": {
        "border-bottom": "1px dashed #ddd"
      },
      ".dashed-left::after": {
        "border-left": "1px dashed #ddd"
      },
      ".shadow[class*='white']": {
        "--ShadowSize": "0 1px 6px"
      },
      ".shadow-lg": {
        "--ShadowSize": "0px 40px 100px 0px"
      },
      ".shadow-warp": {
        "position": "relative",
        "box-shadow": "0 0 10px rgba(0, 0, 0, 0.1)"
      },
      ".shadow-warp:before,.shadow-warp:after": {
        "position": "absolute",
        "content": "''",
        "top": "20px",
        "bottom": "30px",
        "left": "20px",
        "width": "50%",
        "box-shadow": "0 30px 20px rgba(0, 0, 0, 0.2)",
        "transform": "rotate(-3deg)",
        "z-index": "-1"
      },
      ".shadow-warp:after": {
        "right": "20px",
        "left": "auto",
        "transform": "rotate(3deg)"
      },
      ".shadow-blur": {
        "position": "relative"
      },
      ".shadow-blur::before": {
        "content": "''",
        "display": "block",
        "background": "inherit",
        "filter": "blur(10px)",
        "position": "absolute",
        "width": "100%",
        "height": "100%",
        "top": "10px",
        "left": "10px",
        "z-index": "-1",
        "opacity": "0.4",
        "transform-origin": "0 0",
        "border-radius": "inherit",
        "transform": "scale(1, 1)"
      },
      ".cu-btn": {
        "position": "relative",
        "border": "0px",
        "display": "inline-flex",
        "align-items": "center",
        "justify-content": "center",
        "box-sizing": "border-box",
        "padding": "0 30px",
        "font-size": "28px",
        "height": "64px",
        "line-height": "1",
        "text-align": "center",
        "text-decoration": "none",
        "overflow": "visible",
        "margin-left": "initial",
        "transform": "translate(0px, 0px)",
        "margin-right": "initial"
      },
      ".cu-btn::after": {
        "display": "none"
      },
      ".cu-btn:not([class*='bg-'])": {
        "background-color": "#f0f0f0"
      },
      ".cu-btn[class*='line']": {
        "background-color": "transparent"
      },
      ".cu-btn[class*='line']::after": {
        "content": "' '",
        "display": "block",
        "width": "200%",
        "height": "200%",
        "position": "absolute",
        "top": "0",
        "left": "0",
        "border": "1px solid currentColor",
        "transform": "scale(0.5)",
        "transform-origin": "0 0",
        "box-sizing": "border-box",
        "border-radius": "12px",
        "z-index": "1",
        "pointer-events": "none"
      },
      ".cu-btn.round[class*='line']::after": {
        "border-radius": "1000px"
      },
      ".cu-btn[class*='lines']::after": {
        "border": "6px solid currentColor"
      },
      ".cu-btn[class*='bg-']::after": {
        "display": "none"
      },
      ".cu-btn.sm": {
        "padding": "0 20px",
        "font-size": "20px",
        "height": "48px"
      },
      ".cu-btn.lg": {
        "padding": "0 40px",
        "font-size": "32px",
        "height": "80px"
      },
      ".cu-btn.cuIcon.sm": {
        "width": "48px",
        "height": "48px"
      },
      ".cu-btn.cuIcon": {
        "width": "64px",
        "height": "64px",
        "border-radius": "500px",
        "padding": "0"
      },
      "button.cuIcon.lg": {
        "width": "80px",
        "height": "80px"
      },
      ".cu-btn.shadow-blur::before": {
        "top": "4px",
        "left": "4px",
        "filter": "blur(6px)",
        "opacity": "0.6"
      },
      ".cu-btn.button-hover": {
        "transform": "translate(1px, 1px)"
      },
      ".block": {
        "display": "block"
      },
      ".cu-btn.block": {
        "display": "flex"
      },
      ".cu-btn[disabled]": {
        "opacity": "0.6",
        "color": "#ffffff"
      },
      ".cu-tag": {
        "font-size": "24px",
        "vertical-align": "middle",
        "position": "relative",
        "display": "inline-flex",
        "align-items": "center",
        "justify-content": "center",
        "box-sizing": "border-box",
        "padding": "0px 16px",
        "height": "48px",
        "white-space": "nowrap"
      },
      ".cu-tag:not([class*='bg']):not([class*='line'])": {
        "background-color": "#f1f1f1"
      },
      ".cu-tag[class*='line-']::after": {
        "content": "' '",
        "width": "200%",
        "height": "200%",
        "position": "absolute",
        "top": "0",
        "left": "0",
        "border": "1px solid currentColor",
        "transform": "scale(0.5)",
        "transform-origin": "0 0",
        "box-sizing": "border-box",
        "border-radius": "0",
        "z-index": "1",
        "pointer-events": "none"
      },
      ".cu-tag.radius[class*='line']::after": {
        "border-radius": "12px"
      },
      ".cu-tag.round[class*='line']::after": {
        "border-radius": "1000px"
      },
      ".cu-tag + .cu-tag": {
        "margin-left": "10px"
      },
      ".cu-tag.sm": {
        "font-size": "20px",
        "padding": "0px 12px",
        "height": "32px"
      },
      ".cu-capsule": {
        "display": "inline-flex",
        "vertical-align": "middle"
      },
      ".cu-capsule + .cu-capsule": {
        "margin-left": "10px"
      },
      ".cu-capsule .cu-tag": {
        "margin": "0"
      },
      ".cu-capsule .cu-tag[class*='line-']:last-child::after": {
        "border-left": "0px solid transparent"
      },
      ".cu-capsule .cu-tag[class*='line-']:first-child::after": {
        "border-right": "0px solid transparent"
      },
      ".cu-capsule.radius .cu-tag:first-child": {
        "border-top-left-radius": "6px",
        "border-bottom-left-radius": "6px"
      },
      ".cu-capsule.radius .cu-tag:last-child::after,.cu-capsule.radius .cu-tag[class*='line-']": {
        "border-top-right-radius": "12px",
        "border-bottom-right-radius": "12px"
      },
      ".cu-capsule.round .cu-tag:first-child": {
        "border-top-left-radius": "200px",
        "border-bottom-left-radius": "200px",
        "text-indent": "4px"
      },
      ".cu-capsule.round .cu-tag:last-child::after,.cu-capsule.round .cu-tag:last-child": {
        "border-top-right-radius": "200px",
        "border-bottom-right-radius": "200px",
        "text-indent": "-4px"
      },
      ".cu-tag.badge": {
        "border-radius": "200px",
        "position": "absolute",
        "top": "-10px",
        "right": "-10px",
        "font-size": "20px",
        "padding": "0px 10px",
        "height": "28px",
        "color": "#ffffff"
      },
      ".cu-tag.badge:not([class*='bg-'])": {
        "background-color": "#dd514c"
      },
      ".cu-tag:empty:not([class*='cuIcon-'])": {
        "padding": "0px",
        "width": "16px",
        "height": "16px",
        "top": "-4px",
        "right": "-4px"
      },
      ".cu-tag[class*='cuIcon-']": {
        "width": "32px",
        "height": "32px",
        "top": "-4px",
        "right": "-4px"
      },
      ".cu-avatar": {
        "font-variant": "small-caps",
        "margin": "0",
        "padding": "0",
        "display": "inline-flex",
        "text-align": "center",
        "justify-content": "center",
        "align-items": "center",
        "background-color": "#ccc",
        "color": "#ffffff",
        "white-space": "nowrap",
        "position": "relative",
        "width": "64px",
        "height": "64px",
        "background-size": "cover",
        "background-position": "center",
        "vertical-align": "middle",
        "font-size": "1.5em"
      },
      ".cu-avatar.sm": {
        "width": "48px",
        "height": "48px",
        "font-size": "1em"
      },
      ".cu-avatar.lg": {
        "width": "96px",
        "height": "96px",
        "font-size": "2em"
      },
      ".cu-avatar.xl": {
        "width": "128px",
        "height": "128px",
        "font-size": "2.5em"
      },
      ".cu-avatar .avatar-text": {
        "font-size": "0.4em"
      },
      ".cu-avatar-group": {
        "direction": "rtl",
        "unicode-bidi": "bidi-override",
        "padding": "0 10px 0 40px",
        "display": "inline-block"
      },
      ".cu-avatar-group .cu-avatar": {
        "margin-left": "-30px",
        "border": "4px solid #f1f1f1",
        "vertical-align": "middle"
      },
      ".cu-avatar-group .cu-avatar.sm": {
        "margin-left": "-20px",
        "border": "1px solid #f1f1f1"
      },
      ".cu-progress": {
        "overflow": "hidden",
        "height": "28px",
        "background-color": "#ebeef5",
        "display": "inline-flex",
        "align-items": "center",
        "width": "100%"
      },
      ".cu-progress + view,.cu-progress + text": {
        "line-height": "1"
      },
      ".cu-progress.xs": {
        "height": "10px"
      },
      ".cu-progress.sm": {
        "height": "20px"
      },
      ".cu-progress view": {
        "width": "0",
        "height": "100%",
        "align-items": "center",
        "display": "flex",
        "justify-items": "flex-end",
        "justify-content": "space-around",
        "font-size": "20px",
        "color": "#ffffff",
        "transition": "width 0.6s ease"
      },
      ".cu-progress text": {
        "align-items": "center",
        "display": "flex",
        "font-size": "20px",
        "color": "#333333",
        "text-indent": "10px"
      },
      ".cu-progress.text-progress": {
        "padding-right": "60px"
      },
      ".cu-progress.striped view": {
        "background-image": "linear-gradient(    45deg,    rgba(255, 255, 255, 0.15) 25%,    transparent 25%,    transparent 50%,    rgba(255, 255, 255, 0.15) 50%,    rgba(255, 255, 255, 0.15) 75%,    transparent 75%,    transparent  )",
        "background-size": "72px 72px"
      },
      ".cu-progress.active view": {
        "animation": "progress-stripes 2s linear infinite"
      },
      "@keyframes progress-stripes": {
        "from": {
          "background-position": "72px 0"
        },
        "to": {
          "background-position": "0 0"
        }
      },
      ".cu-load": {
        "display": "block",
        "line-height": "3em",
        "text-align": "center"
      },
      ".cu-load::before": {
        "font-family": "'cuIcon'",
        "display": "inline-block",
        "margin-right": "6px"
      },
      ".cu-load.loading::before": {
        "content": "'\\e67a'",
        "animation": "cuIcon-spin 2s infinite linear"
      },
      ".cu-load.loading::after": {
        "content": "'加载中...'"
      },
      ".cu-load.over::before": {
        "content": "'\\e64a'"
      },
      ".cu-load.over::after": {
        "content": "'没有更多了'"
      },
      ".cu-load.erro::before": {
        "content": "'\\e658'"
      },
      ".cu-load.erro::after": {
        "content": "'加载失败'"
      },
      ".cu-load.load-cuIcon::before": {
        "font-size": "32px"
      },
      ".cu-load.load-cuIcon::after": {
        "display": "none"
      },
      ".cu-load.load-cuIcon.over": {
        "display": "none"
      },
      ".cu-load.load-modal": {
        "position": "fixed",
        "top": "0",
        "right": "0",
        "bottom": "140px",
        "left": "0",
        "margin": "auto",
        "width": "260px",
        "height": "260px",
        "background-color": "#ffffff",
        "border-radius": "10px",
        "box-shadow": "0 0 0px 2000px rgba(0, 0, 0, 0.5)",
        "display": "flex",
        "align-items": "center",
        "flex-direction": "column",
        "justify-content": "center",
        "font-size": "28px",
        "z-index": "9999",
        "line-height": "2.4em"
      },
      ".cu-load.load-modal [class*='cuIcon-']": {
        "font-size": "60px"
      },
      ".cu-load.load-modal image": {
        "width": "70px",
        "height": "70px"
      },
      ".cu-load.load-modal::after": {
        "content": "''",
        "position": "absolute",
        "background-color": "#ffffff",
        "border-radius": "50%",
        "width": "200px",
        "height": "200px",
        "font-size": "10px",
        "border-top": "6px solid rgba(0, 0, 0, 0.05)",
        "border-right": "6px solid rgba(0, 0, 0, 0.05)",
        "border-bottom": "6px solid rgba(0, 0, 0, 0.05)",
        "border-left": "6px solid #f37b1d",
        "animation": "cuIcon-spin 1s infinite linear",
        "z-index": "-1"
      },
      ".load-progress": {
        "pointer-events": "none",
        "top": "0",
        "position": "fixed",
        "width": "100%",
        "left": "0",
        "z-index": "2000"
      },
      ".load-progress.hide": {
        "display": "none"
      },
      ".load-progress .load-progress-bar": {
        "position": "relative",
        "width": "100%",
        "height": "4px",
        "overflow": "hidden",
        "transition": "all 200ms ease 0s"
      },
      ".load-progress .load-progress-spinner": {
        "position": "absolute",
        "top": "10px",
        "right": "10px",
        "z-index": "2000",
        "display": "block"
      },
      ".load-progress .load-progress-spinner::after": {
        "content": "''",
        "display": "block",
        "width": "24px",
        "height": "24px",
        "-webkit-box-sizing": "border-box",
        "box-sizing": "border-box",
        "border": "solid 4px transparent",
        "border-top-color": "inherit",
        "border-left-color": "inherit",
        "border-radius": "50%",
        "-webkit-animation": "load-progress-spinner 0.4s linear infinite",
        "animation": "load-progress-spinner 0.4s linear infinite"
      },
      "@-webkit-keyframes load-progress-spinner": {
        "0%": {
          "-webkit-transform": "rotate(0)",
          "transform": "rotate(0)"
        },
        "100%": {
          "-webkit-transform": "rotate(360deg)",
          "transform": "rotate(360deg)"
        }
      },
      "@keyframes load-progress-spinner": {
        "0%": {
          "-webkit-transform": "rotate(0)",
          "transform": "rotate(0)"
        },
        "100%": {
          "-webkit-transform": "rotate(360deg)",
          "transform": "rotate(360deg)"
        }
      },
      ".grayscale": {
        "filter": "grayscale(1)"
      },
      ".cu-list + .cu-list": {
        "margin-top": "30px"
      },
      ".cu-list > .cu-item": {
        "transition": "all 0.6s ease-in-out 0s",
        "transform": "translateX(0px)"
      },
      ".cu-list > .cu-item.move-cur": {
        "transform": "translateX(-260px)"
      },
      ".cu-list > .cu-item .move": {
        "position": "absolute",
        "right": "0",
        "display": "flex",
        "width": "260px",
        "height": "100%",
        "transform": "translateX(100%)"
      },
      ".cu-list > .cu-item .move view": {
        "display": "flex",
        "flex": "1",
        "justify-content": "center",
        "align-items": "center"
      },
      ".cu-list.menu-avatar": {
        "overflow": "hidden"
      },
      ".cu-list.menu-avatar > .cu-item": {
        "position": "relative",
        "display": "flex",
        "padding-right": "10px",
        "height": "140px",
        "background-color": "#ffffff",
        "justify-content": "flex-end",
        "align-items": "center"
      },
      ".cu-list.menu-avatar > .cu-item > .cu-avatar": {
        "position": "absolute",
        "left": "30px"
      },
      ".cu-list.menu-avatar > .cu-item .flex .text-cut": {
        "max-width": "510px"
      },
      ".cu-list.menu-avatar > .cu-item .content": {
        "position": "absolute",
        "left": "146px",
        "width": "calc(100% - 96px - 60px - 120px - 20px)",
        "line-height": "1.6em"
      },
      ".cu-list.menu-avatar > .cu-item .content.flex-sub": {
        "width": "calc(100% - 96px - 60px - 20px)"
      },
      ".cu-list.menu-avatar > .cu-item .content > view:first-child": {
        "font-size": "30px",
        "display": "flex",
        "align-items": "center"
      },
      ".cu-list.menu-avatar > .cu-item .content .cu-tag.sm": {
        "display": "inline-block",
        "margin-left": "10px",
        "height": "28px",
        "font-size": "16px",
        "line-height": "32px"
      },
      ".cu-list.menu-avatar > .cu-item .action": {
        "width": "100px",
        "text-align": "center"
      },
      ".cu-list.menu-avatar > .cu-item .action view + view": {
        "margin-top": "10px"
      },
      ".cu-list.menu-avatar.comment > .cu-item .content": {
        "position": "relative",
        "left": "0",
        "width": "auto",
        "flex": "1"
      },
      ".cu-list.menu-avatar.comment > .cu-item": {
        "padding": "30px 30px 30px 120px",
        "height": "auto"
      },
      ".cu-list.menu-avatar.comment .cu-avatar": {
        "align-self": "flex-start"
      },
      ".cu-list.menu > .cu-item": {
        "position": "relative",
        "display": "flex",
        "padding": "0 30px",
        "min-height": "100px",
        "background-color": "#ffffff",
        "justify-content": "space-between",
        "align-items": "center"
      },
      ".cu-list.menu > .cu-item:last-child:after": {
        "border": "none"
      },
      ".cu-list.menu-avatar > .cu-item:after,.cu-list.menu > .cu-item:after": {
        "position": "absolute",
        "top": "0",
        "left": "0",
        "box-sizing": "border-box",
        "width": "200%",
        "height": "200%",
        "border-bottom": "1px solid #ddd",
        "border-radius": "inherit",
        "content": "' '",
        "transform": "scale(0.5)",
        "transform-origin": "0 0",
        "pointer-events": "none"
      },
      ".cu-list.menu > .cu-item.grayscale": {
        "background-color": "#f5f5f5"
      },
      ".cu-list.menu > .cu-item.cur": {
        "background-color": "#fcf7e9"
      },
      ".cu-list.menu > .cu-item.arrow": {
        "padding-right": "90px"
      },
      ".cu-list.menu > .cu-item.arrow:before": {
        "position": "absolute",
        "top": "0",
        "right": "30px",
        "bottom": "0",
        "display": "block",
        "margin": "auto",
        "width": "30px",
        "height": "30px",
        "color": "#8799a3",
        "content": "'\\e6a3'",
        "text-align": "center",
        "font-size": "34px",
        "font-family": "cuIcon",
        "line-height": "30px"
      },
      ".cu-list.menu > .cu-item button.content": {
        "padding": "0",
        "background-color": "transparent",
        "justify-content": "flex-start"
      },
      ".cu-list.menu > .cu-item button.content:after": {
        "display": "none"
      },
      ".cu-list.menu > .cu-item .cu-avatar-group .cu-avatar": {
        "border-color": "#ffffff"
      },
      ".cu-list.menu > .cu-item .content > view:first-child": {
        "display": "flex",
        "align-items": "center"
      },
      ".cu-list.menu > .cu-item .content > text[class*='cuIcon']": {
        "display": "inline-block",
        "margin-right": "10px",
        "width": "1.6em",
        "text-align": "center"
      },
      ".cu-list.menu > .cu-item .content > image": {
        "display": "inline-block",
        "margin-right": "10px",
        "width": "1.6em",
        "height": "1.6em",
        "vertical-align": "middle"
      },
      ".cu-list.menu > .cu-item .content": {
        "font-size": "30px",
        "line-height": "1.6em",
        "flex": "1"
      },
      ".cu-list.menu > .cu-item .content .cu-tag.sm": {
        "display": "inline-block",
        "margin-left": "10px",
        "height": "28px",
        "font-size": "16px",
        "line-height": "32px"
      },
      ".cu-list.menu > .cu-item .action .cu-tag:empty": {
        "right": "10px"
      },
      ".cu-list.menu": {
        "display": "block",
        "overflow": "hidden"
      },
      ".cu-list.menu.sm-border > .cu-item:after": {
        "left": "30px",
        "width": "calc(200% - 120px)"
      },
      ".cu-list.grid > .cu-item": {
        "position": "relative",
        "display": "flex",
        "padding": "20px 0 30px",
        "transition-duration": "0s",
        "flex-direction": "column"
      },
      ".cu-list.grid > .cu-item:after": {
        "position": "absolute",
        "top": "0",
        "left": "0",
        "box-sizing": "border-box",
        "width": "200%",
        "height": "200%",
        "border-right": "1px solid rgba(0, 0, 0, 0.1)",
        "border-bottom": "1px solid rgba(0, 0, 0, 0.1)",
        "border-radius": "inherit",
        "content": "' '",
        "transform": "scale(0.5)",
        "transform-origin": "0 0",
        "pointer-events": "none"
      },
      ".cu-list.grid > .cu-item text": {
        "display": "block",
        "margin-top": "10px",
        "color": "#888",
        "font-size": "26px",
        "line-height": "40px"
      },
      ".cu-list.grid > .cu-item [class*='cuIcon']": {
        "position": "relative",
        "display": "block",
        "margin-top": "20px",
        "width": "100%",
        "font-size": "48px"
      },
      ".cu-list.grid > .cu-item .cu-tag": {
        "right": "auto",
        "left": "50%",
        "margin-left": "20px"
      },
      ".cu-list.grid": {
        "background-color": "#ffffff",
        "text-align": "center"
      },
      ".cu-list.grid.no-border > .cu-item": {
        "padding-top": "10px",
        "padding-bottom": "20px"
      },
      ".cu-list.grid.no-border > .cu-item:after": {
        "border": "none"
      },
      ".cu-list.grid.no-border": {
        "padding": "20px 10px"
      },
      ".cu-list.grid.col-3 > .cu-item:nth-child(3n):after,.cu-list.grid.col-4 > .cu-item:nth-child(4n):after,.cu-list.grid.col-5 > .cu-item:nth-child(5n):after": {
        "border-right-width": "0"
      },
      ".cu-list.card-menu": {
        "overflow": "hidden",
        "margin-right": "30px",
        "margin-left": "30px",
        "border-radius": "20px"
      },
      ".cu-bar": {
        "display": "flex",
        "position": "relative",
        "align-items": "center",
        "min-height": "100px",
        "justify-content": "space-between"
      },
      ".cu-bar .action": {
        "display": "flex",
        "align-items": "center",
        "height": "100%",
        "justify-content": "center",
        "max-width": "100%"
      },
      ".cu-bar .action.border-title": {
        "position": "relative",
        "top": "-10px"
      },
      ".cu-bar .action.border-title text[class*='bg-']:last-child": {
        "position": "absolute",
        "bottom": "-0.5rem",
        "min-width": "2rem",
        "height": "6px",
        "left": "0"
      },
      ".cu-bar .action.sub-title": {
        "position": "relative",
        "top": "-0.2rem"
      },
      ".cu-bar .action.sub-title text": {
        "position": "relative",
        "z-index": "1"
      },
      ".cu-bar .action.sub-title text[class*='bg-']:last-child": {
        "position": "absolute",
        "display": "inline-block",
        "bottom": "-0.2rem",
        "border-radius": "6px",
        "width": "100%",
        "height": "0.6rem",
        "left": "0.6rem",
        "opacity": "0.3",
        "z-index": "0"
      },
      ".cu-bar .action.sub-title text[class*='text-']:last-child": {
        "position": "absolute",
        "display": "inline-block",
        "bottom": "-0.7rem",
        "left": "0.5rem",
        "opacity": "0.2",
        "z-index": "0",
        "text-align": "right",
        "font-weight": "900",
        "font-size": "36px"
      },
      ".cu-bar.justify-center .action.border-title text:last-child,.cu-bar.justify-center .action.sub-title text:last-child": {
        "left": "0",
        "right": "0",
        "margin": "auto",
        "text-align": "center"
      },
      ".cu-bar .action:first-child": {
        "margin-left": "30px",
        "font-size": "30px"
      },
      ".cu-bar .action text.text-cut": {
        "text-align": "left",
        "width": "100%"
      },
      ".cu-bar .cu-avatar:first-child": {
        "margin-left": "20px"
      },
      ".cu-bar .action:first-child > text[class*='cuIcon-']": {
        "margin-left": "-0.3em",
        "margin-right": "0.3em"
      },
      ".cu-bar .action:last-child": {
        "margin-right": "30px"
      },
      ".cu-bar .action > text[class*='cuIcon-'],.cu-bar .action > view[class*='cuIcon-']": {
        "font-size": "36px"
      },
      ".cu-bar .action > text[class*='cuIcon-'] + text[class*='cuIcon-']": {
        "margin-left": "0.5em"
      },
      ".cu-bar .content": {
        "position": "absolute",
        "text-align": "center",
        "width": "calc(100% - 340px)",
        "left": "0",
        "right": "0",
        "bottom": "0",
        "top": "0",
        "margin": "auto",
        "height": "60px",
        "font-size": "32px",
        "line-height": "60px",
        "cursor": "none",
        "pointer-events": "none",
        "text-overflow": "ellipsis",
        "white-space": "nowrap",
        "overflow": "hidden"
      },
      ".cu-bar.ios .content": {
        "bottom": "7px",
        "height": "30px",
        "font-size": "32px",
        "line-height": "30px"
      },
      ".cu-bar.btn-group": {
        "justify-content": "space-around"
      },
      ".cu-bar.btn-group button": {
        "padding": "20px 32px",
        "flex": "1",
        "margin": "0 20px",
        "max-width": "50%"
      },
      ".cu-bar .search-form": {
        "background-color": "#f5f5f5",
        "line-height": "64px",
        "height": "64px",
        "font-size": "24px",
        "color": "#333333",
        "flex": "1",
        "display": "flex",
        "align-items": "center",
        "margin": "0 30px"
      },
      ".cu-bar .search-form + .action": {
        "margin-right": "30px"
      },
      ".cu-bar .search-form input": {
        "flex": "1",
        "padding-right": "30px",
        "height": "64px",
        "line-height": "64px",
        "font-size": "26px",
        "background-color": "transparent"
      },
      ".cu-bar .search-form [class*='cuIcon-']": {
        "margin": "0 0.5em 0 0.8em"
      },
      ".cu-bar .search-form [class*='cuIcon-']::before": {
        "top": "0px"
      },
      ".cu-bar.fixed,.nav.fixed": {
        "position": "fixed",
        "width": "100%",
        "top": "0",
        "z-index": "1024",
        "box-shadow": "0 1px 6px rgba(0, 0, 0, 0.1)"
      },
      ".cu-bar.foot": {
        "position": "fixed",
        "width": "100%",
        "bottom": "0",
        "z-index": "1024",
        "box-shadow": "0 -1px 6px rgba(0, 0, 0, 0.1)"
      },
      ".cu-bar.tabbar.shadow": {
        "box-shadow": "0 -1px 6px rgba(0, 0, 0, 0.1)"
      },
      ".cu-bar.tabbar .action": {
        "font-size": "22px",
        "position": "relative",
        "flex": "1",
        "text-align": "center",
        "padding": "0",
        "display": "block",
        "height": "auto",
        "line-height": "1",
        "margin": "0",
        "background-color": "inherit",
        "overflow": "initial"
      },
      ".cu-bar.tabbar.shop .action": {
        "width": "140px",
        "flex": "initial"
      },
      ".cu-bar.tabbar .action.add-action": {
        "position": "relative",
        "z-index": "2",
        "padding-top": "50px"
      },
      ".cu-bar.tabbar .action.add-action [class*='cuIcon-']": {
        "position": "absolute",
        "width": "70px",
        "z-index": "2",
        "height": "70px",
        "border-radius": "50%",
        "line-height": "70px",
        "font-size": "50px",
        "top": "-35px",
        "left": "0",
        "right": "0",
        "margin": "auto",
        "padding": "0"
      },
      ".cu-bar.tabbar .action.add-action::after": {
        "content": "''",
        "position": "absolute",
        "width": "100px",
        "height": "100px",
        "top": "-50px",
        "left": "0",
        "right": "0",
        "margin": "auto",
        "box-shadow": "0 -3px 8px rgba(0, 0, 0, 0.08)",
        "border-radius": "50px",
        "background-color": "inherit",
        "z-index": "0"
      },
      ".cu-bar.tabbar .action.add-action::before": {
        "content": "''",
        "position": "absolute",
        "width": "100px",
        "height": "30px",
        "bottom": "30px",
        "left": "0",
        "right": "0",
        "margin": "auto",
        "background-color": "inherit",
        "z-index": "1"
      },
      ".cu-bar.tabbar .btn-group": {
        "flex": "1",
        "display": "flex",
        "justify-content": "space-around",
        "align-items": "center",
        "padding": "0 10px"
      },
      ".cu-bar.tabbar button.action::after": {
        "border": "0"
      },
      ".cu-bar.tabbar .action [class*='cuIcon-']": {
        "width": "100px",
        "position": "relative",
        "display": "block",
        "height": "auto",
        "margin": "0 auto 10px",
        "text-align": "center",
        "font-size": "40px"
      },
      ".cu-bar.tabbar .action .cuIcon-cu-image": {
        "margin": "0 auto"
      },
      ".cu-bar.tabbar .action .cuIcon-cu-image image": {
        "width": "50px",
        "height": "50px",
        "display": "inline-block"
      },
      ".cu-bar.tabbar .submit": {
        "align-items": "center",
        "display": "flex",
        "justify-content": "center",
        "text-align": "center",
        "position": "relative",
        "flex": "2",
        "align-self": "stretch"
      },
      ".cu-bar.tabbar .submit:last-child": {
        "flex": "2.6"
      },
      ".cu-bar.tabbar .submit + .submit": {
        "flex": "2"
      },
      ".cu-bar.tabbar.border .action::before": {
        "content": "' '",
        "width": "200%",
        "height": "200%",
        "position": "absolute",
        "top": "0",
        "left": "0",
        "transform": "scale(0.5)",
        "transform-origin": "0 0",
        "border-right": "1px solid rgba(0, 0, 0, 0.1)",
        "z-index": "3"
      },
      ".cu-bar.tabbar.border .action:last-child:before": {
        "display": "none"
      },
      ".cu-bar.input": {
        "padding-right": "20px",
        "background-color": "#ffffff"
      },
      ".cu-bar.input input": {
        "overflow": "initial",
        "line-height": "64px",
        "height": "64px",
        "min-height": "64px",
        "flex": "1",
        "font-size": "30px",
        "margin": "0 20px"
      },
      ".cu-bar.input .action": {
        "margin-left": "20px"
      },
      ".cu-bar.input .action [class*='cuIcon-']": {
        "font-size": "48px"
      },
      ".cu-bar.input input + .action": {
        "margin-right": "20px",
        "margin-left": "0px"
      },
      ".cu-bar.input .action:first-child [class*='cuIcon-']": {
        "margin-left": "0px"
      },
      ".cu-custom": {
        "display": "block",
        "position": "relative"
      },
      ".cu-custom .cu-bar .content": {
        "width": "calc(100% - 440px)"
      },
      ".cu-custom .cu-bar .action .cuIcon-back": {
        "opacity": "0"
      },
      ".cu-custom .cu-bar .content image": {
        "height": "60px",
        "width": "240px"
      },
      ".cu-custom .cu-bar": {
        "min-height": "0px",
        "padding-right": "150px",
        "box-shadow": "0px 0px 0px",
        "z-index": "9999"
      },
      ".cu-custom .cu-bar .border-custom": {
        "position": "relative",
        "background": "rgba(0, 0, 0, 0.15)",
        "border-radius": "1000px",
        "height": "30px"
      },
      ".cu-custom .cu-bar .border-custom::after": {
        "content": "' '",
        "width": "200%",
        "height": "200%",
        "position": "absolute",
        "top": "0",
        "left": "0",
        "border-radius": "inherit",
        "transform": "scale(0.5)",
        "transform-origin": "0 0",
        "pointer-events": "none",
        "box-sizing": "border-box",
        "border": "1px solid #ffffff",
        "opacity": "0.5"
      },
      ".cu-custom .cu-bar .border-custom::before": {
        "content": "' '",
        "width": "1px",
        "height": "110%",
        "position": "absolute",
        "top": "22.5%",
        "left": "0",
        "right": "0",
        "margin": "auto",
        "transform": "scale(0.5)",
        "transform-origin": "0 0",
        "pointer-events": "none",
        "box-sizing": "border-box",
        "opacity": "0.6",
        "background-color": "#ffffff"
      },
      ".cu-custom .cu-bar .border-custom text": {
        "display": "block",
        "flex": "1",
        "margin": "auto !important",
        "text-align": "center",
        "font-size": "34px"
      },
      ".nav": {
        "white-space": "nowrap"
      },
      "::-webkit-scrollbar": {
        "display": "none"
      },
      ".custom-scrollbar": {
        "overflow-y": "scroll !important",
        "overflow-x": "hidden !important",
        "margin-right": "2px",
        "&::-webkit-scrollbar": {
          "display": "block !important",
          "width": "7px",
          "background-color": "rgba(0, 0, 0, 0)"
        },
        "&::-webkit-scrollbar-track": {
          "border-radius": "10px",
          "background-color": "rgba(0, 0, 0, 0)"
        },
        "&::-webkit-scrollbar-thumb": {
          "border-radius": "10px",
          "background-color": "rgba(0, 0, 0, 0)"
        }
      },
      ".custom-scrollbar:hover": {
        "&::-webkit-scrollbar-track": {
          "border-radius": "10px",
          "background-color": "transparent"
        },
        "&::-webkit-scrollbar-thumb": {
          "border-radius": "10px",
          "background-color": "#d2d2d2"
        }
      },
      ".scroll-color": {
        "height": "100%",
        "/deep/ .el-scrollbar__thumb": {
          "background-color": "#d2d2d2"
        }
      },
      ".nav .cu-item": {
        "height": "90px",
        "display": "inline-block",
        "line-height": "90px",
        "margin": "0 10px",
        "padding": "0 20px"
      },
      ".nav .cu-item.cur": {
        "border-bottom": "4px solid"
      },
      ".cu-timeline": {
        "display": "block",
        "background-color": "#ffffff"
      },
      ".cu-timeline .cu-time": {
        "width": "120px",
        "text-align": "center",
        "padding": "20px 0",
        "font-size": "26px",
        "color": "#888",
        "display": "block"
      },
      ".cu-timeline > .cu-item": {
        "padding": "30px 30px 30px 120px",
        "position": "relative",
        "display": "block",
        "z-index": "0"
      },
      ".cu-timeline > .cu-item:not([class*='text-'])": {
        "color": "#ccc"
      },
      ".cu-timeline > .cu-item::after": {
        "content": "''",
        "display": "block",
        "position": "absolute",
        "width": "1px",
        "background-color": "#ddd",
        "left": "60px",
        "height": "100%",
        "top": "0",
        "z-index": "8"
      },
      ".cu-timeline > .cu-item::before": {
        "font-family": "'cuIcon'",
        "display": "block",
        "position": "absolute",
        "top": "36px",
        "z-index": "9",
        "background-color": "#ffffff",
        "width": "50px",
        "height": "50px",
        "text-align": "center",
        "border": "none",
        "line-height": "50px",
        "left": "36px"
      },
      ".cu-timeline > .cu-item:not([class*='cuIcon-'])::before": {
        "content": "'\\e763'"
      },
      ".cu-timeline > .cu-item[class*='cuIcon-']::before": {
        "background-color": "#ffffff",
        "width": "50px",
        "height": "50px",
        "text-align": "center",
        "border": "none",
        "line-height": "50px",
        "left": "36px"
      },
      ".cu-timeline > .cu-item > .content": {
        "padding": "30px",
        "border-radius": "6px",
        "display": "block",
        "line-height": "1.6"
      },
      ".cu-timeline > .cu-item > .content:not([class*='bg-'])": {
        "background-color": "#f1f1f1",
        "color": "#333333"
      },
      ".cu-timeline > .cu-item > .content + .content": {
        "margin-top": "20px"
      },
      ".cu-chat": {
        "display": "flex",
        "flex-direction": "column"
      },
      ".cu-chat .cu-item": {
        "display": "flex",
        "padding": "30px 30px 70px",
        "position": "relative"
      },
      ".cu-chat .cu-item > .cu-avatar": {
        "width": "80px",
        "height": "80px"
      },
      ".cu-chat .cu-item > .main": {
        "max-width": "calc(100% - 260px)",
        "margin": "0 40px",
        "display": "flex",
        "align-items": "center"
      },
      ".cu-chat .cu-item > image": {
        "height": "320px"
      },
      ".cu-chat .cu-item > .main .content": {
        "padding": "20px",
        "border-radius": "6px",
        "display": "inline-flex",
        "max-width": "100%",
        "align-items": "center",
        "font-size": "30px",
        "position": "relative",
        "min-height": "80px",
        "line-height": "40px",
        "text-align": "left"
      },
      ".cu-chat .cu-item > .main .content:not([class*='bg-'])": {
        "background-color": "#ffffff",
        "color": "#333333"
      },
      ".cu-chat .cu-item .date": {
        "position": "absolute",
        "font-size": "24px",
        "color": "#8799a3",
        "width": "calc(100% - 320px)",
        "bottom": "20px",
        "left": "160px"
      },
      ".cu-chat .cu-item .action": {
        "padding": "0 30px",
        "display": "flex",
        "align-items": "center"
      },
      ".cu-chat .cu-item > .main .content::after": {
        "content": "''",
        "top": "27px",
        "transform": "rotate(45deg)",
        "position": "absolute",
        "z-index": "100",
        "display": "inline-block",
        "overflow": "hidden",
        "width": "24px",
        "height": "24px",
        "left": "-12px",
        "right": "initial",
        "background-color": "inherit"
      },
      ".cu-chat .cu-item.self > .main .content::after": {
        "left": "auto",
        "right": "-12px"
      },
      ".cu-chat .cu-item > .main .content::before": {
        "content": "''",
        "top": "30px",
        "transform": "rotate(45deg)",
        "position": "absolute",
        "z-index": "-1",
        "display": "inline-block",
        "overflow": "hidden",
        "width": "24px",
        "height": "24px",
        "left": "-12px",
        "right": "initial",
        "background-color": "inherit",
        "filter": "blur(5px)",
        "opacity": "0.3"
      },
      ".cu-chat .cu-item > .main .content:not([class*='bg-'])::before": {
        "background-color": "#333333",
        "opacity": "0.1"
      },
      ".cu-chat .cu-item.self > .main .content::before": {
        "left": "auto",
        "right": "-12px"
      },
      ".cu-chat .cu-item.self": {
        "justify-content": "flex-end",
        "text-align": "right"
      },
      ".cu-chat .cu-info": {
        "display": "inline-block",
        "margin": "20px auto",
        "font-size": "24px",
        "padding": "8px 12px",
        "background-color": "rgba(0, 0, 0, 0.2)",
        "border-radius": "6px",
        "color": "#ffffff",
        "max-width": "400px",
        "line-height": "1.4"
      },
      ".cu-card": {
        "display": "block",
        "overflow": "hidden"
      },
      ".cu-card > .cu-item": {
        "display": "block",
        "background-color": "#ffffff",
        "overflow": "hidden",
        "border-radius": "10px",
        "margin": "30px"
      },
      ".cu-card > .cu-item.shadow-blur": {
        "overflow": "initial"
      },
      ".cu-card.no-card > .cu-item": {
        "margin": "0px",
        "border-radius": "0px"
      },
      ".cu-card .grid.grid-square": {
        "margin-bottom": "-20px"
      },
      ".cu-card.case .image": {
        "position": "relative"
      },
      ".cu-card.case .image image": {
        "width": "100%"
      },
      ".cu-card.case .image .cu-tag": {
        "position": "absolute",
        "right": "0",
        "top": "0"
      },
      ".cu-card.case .image .cu-bar": {
        "position": "absolute",
        "bottom": "0",
        "width": "100%",
        "background-color": "transparent",
        "padding": "0px 30px"
      },
      ".cu-card.case.no-card .image": {
        "margin": "30px 30px 0",
        "overflow": "hidden",
        "border-radius": "10px"
      },
      ".cu-card.dynamic": {
        "display": "block"
      },
      ".cu-card.dynamic > .cu-item": {
        "display": "block",
        "background-color": "#ffffff",
        "overflow": "hidden"
      },
      ".cu-card.dynamic > .cu-item > .text-content": {
        "padding": "0 30px 0",
        "max-height": "6.4em",
        "overflow": "hidden",
        "font-size": "30px",
        "margin-bottom": "20px"
      },
      ".cu-card.dynamic > .cu-item .square-img": {
        "width": "100%",
        "height": "200px",
        "border-radius": "6px"
      },
      ".cu-card.dynamic > .cu-item .only-img": {
        "width": "100%",
        "height": "320px",
        "border-radius": "6px"
      },
      ".cu-card.article": {
        "display": "block"
      },
      ".cu-card.article > .cu-item": {
        "padding-bottom": "30px"
      },
      ".cu-card.article > .cu-item .title": {
        "font-size": "30px",
        "font-weight": "900",
        "color": "#333333",
        "line-height": "100px",
        "padding": "0 30px"
      },
      ".cu-card.article > .cu-item .content": {
        "display": "flex",
        "padding": "0 30px"
      },
      ".cu-card.article > .cu-item .content > image": {
        "width": "240px",
        "height": "6.4em",
        "margin-right": "20px",
        "border-radius": "6px"
      },
      ".cu-card.article > .cu-item .content .desc": {
        "flex": "1",
        "display": "flex",
        "flex-direction": "column",
        "justify-content": "space-between"
      },
      ".cu-card.article > .cu-item .content .text-content": {
        "font-size": "28px",
        "color": "#888",
        "height": "4.8em",
        "overflow": "hidden"
      },
      ".cu-form-group": {
        "background-color": "#ffffff",
        "padding": "1px 30px",
        "display": "flex",
        "align-items": "center",
        "min-height": "100px",
        "justify-content": "space-between"
      },
      ".cu-form-group + .cu-form-group": {
        "border-top": "1px solid #eee"
      },
      ".cu-form-group .title": {
        "text-align": "justify",
        "padding-right": "30px",
        "font-size": "30px",
        "position": "relative",
        "height": "60px",
        "line-height": "60px"
      },
      ".cu-form-group input": {
        "flex": "1",
        "font-size": "30px",
        "color": "#555",
        "padding-right": "20px"
      },
      ".cu-form-group > text[class*='cuIcon-']": {
        "font-size": "36px",
        "padding": "0",
        "box-sizing": "border-box"
      },
      ".cu-form-group textarea": {
        "margin": "32px 0 30px",
        "height": "4.6em",
        "width": "100%",
        "line-height": "1.2em",
        "flex": "1",
        "font-size": "28px",
        "padding": "0"
      },
      ".cu-form-group.align-start .title": {
        "height": "1em",
        "margin-top": "32px",
        "line-height": "1em"
      },
      ".cu-form-group picker": {
        "flex": "1",
        "padding-right": "40px",
        "overflow": "hidden",
        "position": "relative"
      },
      ".cu-form-group picker .picker": {
        "line-height": "100px",
        "font-size": "28px",
        "text-overflow": "ellipsis",
        "white-space": "nowrap",
        "overflow": "hidden",
        "width": "100%",
        "text-align": "right"
      },
      ".cu-form-group picker::after": {
        "font-family": "cuIcon",
        "display": "block",
        "content": "'\\e6a3'",
        "position": "absolute",
        "font-size": "34px",
        "color": "#8799a3",
        "line-height": "100px",
        "width": "60px",
        "text-align": "center",
        "top": "0",
        "bottom": "0",
        "right": "-20px",
        "margin": "auto"
      },
      ".cu-form-group textarea[disabled],.cu-form-group textarea[disabled] .placeholder": {
        "color": "transparent"
      },
      ".cu-modal": {
        "position": "fixed",
        "top": "0",
        "right": "0",
        "bottom": "0",
        "left": "0",
        "z-index": "1110",
        "opacity": "0",
        "outline": "0",
        "text-align": "center",
        "-ms-transform": "scale(1.185)",
        "transform": "scale(1.185)",
        "backface-visibility": "hidden",
        "perspective": "2000px",
        "background": "rgba(0, 0, 0, 0.6)",
        "transition": "all 0.3s ease-in-out 0s",
        "pointer-events": "none"
      },
      ".cu-modal::before": {
        "content": "'\\200B'",
        "display": "inline-block",
        "height": "100%",
        "vertical-align": "middle"
      },
      ".cu-modal.show": {
        "opacity": "1",
        "transition-duration": "0.3s",
        "-ms-transform": "scale(1)",
        "transform": "scale(1)",
        "overflow-x": "hidden",
        "overflow-y": "auto",
        "pointer-events": "auto"
      },
      ".cu-dialog": {
        "position": "relative",
        "display": "inline-block",
        "vertical-align": "middle",
        "margin-left": "auto",
        "margin-right": "auto",
        "width": "680px",
        "max-width": "100%",
        "background-color": "#f8f8f8",
        "border-radius": "10px",
        "overflow": "hidden"
      },
      ".cu-modal.bottom-modal::before": {
        "vertical-align": "bottom"
      },
      ".cu-modal.bottom-modal .cu-dialog": {
        "width": "100%",
        "border-radius": "0"
      },
      ".cu-modal.bottom-modal": {
        "margin-bottom": "-1000px"
      },
      ".cu-modal.bottom-modal.show": {
        "margin-bottom": "0"
      },
      ".cu-modal.drawer-modal": {
        "transform": "scale(1)",
        "display": "flex"
      },
      ".cu-modal.drawer-modal .cu-dialog": {
        "height": "100%",
        "min-width": "200px",
        "border-radius": "0",
        "margin": "initial",
        "transition-duration": "0.3s"
      },
      ".cu-modal.drawer-modal.justify-start .cu-dialog": {
        "transform": "translateX(-100%)"
      },
      ".cu-modal.drawer-modal.justify-end .cu-dialog": {
        "transform": "translateX(100%)"
      },
      ".cu-modal.drawer-modal.show .cu-dialog": {
        "transform": "translateX(0%)"
      },
      ".cu-modal .cu-dialog > .cu-bar:first-child .action": {
        "min-width": "100px",
        "margin-right": "0",
        "min-height": "100px"
      },
      "swiper .a-swiper-dot": {
        "display": "inline-block",
        "width": "16px",
        "height": "16px",
        "background": "rgba(0, 0, 0, 0.3)",
        "border-radius": "50%",
        "vertical-align": "middle"
      },
      "swiper[class*='-dot'] .wx-swiper-dots,swiper[class*='-dot'] .a-swiper-dots,swiper[class*='-dot'] .uni-swiper-dots": {
        "display": "flex",
        "align-items": "center",
        "width": "100%",
        "justify-content": "center"
      },
      "swiper.square-dot .wx-swiper-dot,swiper.square-dot .a-swiper-dot,swiper.square-dot .uni-swiper-dot": {
        "background-color": "#ffffff",
        "opacity": "0.4",
        "width": "10px",
        "height": "10px",
        "border-radius": "20px",
        "margin": "0 8px !important"
      },
      "swiper.square-dot .wx-swiper-dot.wx-swiper-dot-active,swiper.square-dot .a-swiper-dot.a-swiper-dot-active,swiper.square-dot .uni-swiper-dot.uni-swiper-dot-active": {
        "opacity": "1",
        "width": "30px"
      },
      "swiper.round-dot .wx-swiper-dot,swiper.round-dot .a-swiper-dot,swiper.round-dot .uni-swiper-dot": {
        "width": "10px",
        "height": "10px",
        "position": "relative",
        "margin": "4px 8px !important"
      },
      "swiper.round-dot .wx-swiper-dot.wx-swiper-dot-active::after,swiper.round-dot .a-swiper-dot.a-swiper-dot-active::after,swiper.round-dot .uni-swiper-dot.uni-swiper-dot-active::after": {
        "content": "''",
        "position": "absolute",
        "width": "10px",
        "height": "10px",
        "top": "0px",
        "left": "0px",
        "right": "0",
        "bottom": "0",
        "margin": "auto",
        "background-color": "#ffffff",
        "border-radius": "20px"
      },
      "swiper.round-dot .wx-swiper-dot.wx-swiper-dot-active,swiper.round-dot .a-swiper-dot.a-swiper-dot-active,swiper.round-dot .uni-swiper-dot.uni-swiper-dot-active": {
        "width": "18px",
        "height": "18px"
      },
      ".screen-swiper": {
        "min-height": "375px"
      },
      ".screen-swiper image,.screen-swiper video,.swiper-item image,.swiper-item video": {
        "width": "100%",
        "display": "block",
        "height": "100%",
        "margin": "0",
        "pointer-events": "none"
      },
      ".card-swiper": {
        "height": "420px !important"
      },
      ".card-swiper swiper-item": {
        "width": "610px !important",
        "left": "70px",
        "box-sizing": "border-box",
        "padding": "40px 0px 70px",
        "overflow": "initial"
      },
      ".card-swiper swiper-item .swiper-item": {
        "width": "100%",
        "display": "block",
        "height": "100%",
        "border-radius": "10px",
        "transform": "scale(0.9)",
        "transition": "all 0.2s ease-in 0s",
        "overflow": "hidden"
      },
      ".card-swiper swiper-item.cur .swiper-item": {
        "transform": "none",
        "transition": "all 0.2s ease-in 0s"
      },
      ".tower-swiper": {
        "height": "420px",
        "position": "relative",
        "max-width": "750px",
        "overflow": "hidden"
      },
      ".tower-swiper .tower-item": {
        "position": "absolute",
        "width": "300px",
        "height": "380px",
        "top": "0",
        "bottom": "0",
        "left": "50%",
        "margin": "auto",
        "transition": "all 0.2s ease-in 0s",
        "opacity": "1"
      },
      ".tower-swiper .tower-item.none": {
        "opacity": "0"
      },
      ".tower-swiper .tower-item .swiper-item": {
        "width": "100%",
        "height": "100%",
        "border-radius": "6px",
        "overflow": "hidden"
      },
      ".cu-steps": {
        "display": "flex"
      },
      "scroll-view.cu-steps": {
        "display": "block",
        "white-space": "nowrap"
      },
      "scroll-view.cu-steps .cu-item": {
        "display": "inline-block"
      },
      ".cu-steps .cu-item": {
        "flex": "1",
        "text-align": "center",
        "position": "relative",
        "min-width": "100px"
      },
      ".cu-steps .cu-item:not([class*='text-'])": {
        "color": "#8799a3"
      },
      ".cu-steps .cu-item [class*='cuIcon-'],.cu-steps .cu-item .num": {
        "display": "block",
        "font-size": "40px",
        "line-height": "80px"
      },
      ".cu-steps .cu-item::before,.cu-steps .cu-item::after,.cu-steps.steps-arrow .cu-item::before,.cu-steps.steps-arrow .cu-item::after": {
        "content": "''",
        "display": "block",
        "position": "absolute",
        "height": "0px",
        "width": "calc(100% - 80px)",
        "border-bottom": "1px solid #ccc",
        "left": "calc(0px - (100% - 80px) / 2)",
        "top": "40px",
        "z-index": "0"
      },
      ".cu-steps.steps-arrow .cu-item::before,.cu-steps.steps-arrow .cu-item::after": {
        "content": "'\\e6a3'",
        "font-family": "'cuIcon'",
        "height": "30px",
        "border-bottom-width": "0px",
        "line-height": "30px",
        "top": "0",
        "bottom": "0",
        "margin": "auto",
        "color": "#ccc"
      },
      ".cu-steps.steps-bottom .cu-item::before,.cu-steps.steps-bottom .cu-item::after": {
        "bottom": "40px",
        "top": "initial"
      },
      ".cu-steps .cu-item::after": {
        "border-bottom": "1px solid currentColor",
        "width": "0px",
        "transition": "all 0.3s ease-in-out 0s"
      },
      ".cu-steps .cu-item[class*='text-']::after": {
        "width": "calc(100% - 80px)",
        "color": "currentColor"
      },
      ".cu-steps .cu-item:first-child::before,.cu-steps .cu-item:first-child::after": {
        "display": "none"
      },
      ".cu-steps .cu-item .num": {
        "width": "40px",
        "height": "40px",
        "border-radius": "50%",
        "line-height": "40px",
        "margin": "20px auto",
        "font-size": "24px",
        "border": "1px solid currentColor",
        "position": "relative",
        "overflow": "hidden"
      },
      ".cu-steps .cu-item[class*='text-'] .num": {
        "background-color": "currentColor"
      },
      ".cu-steps .cu-item .num::before,.cu-steps .cu-item .num::after": {
        "content": "attr(data-index)",
        "position": "absolute",
        "left": "0",
        "right": "0",
        "top": "0",
        "bottom": "0",
        "margin": "auto",
        "transition": "all 0.3s ease-in-out 0s",
        "transform": "translateY(0px)"
      },
      ".cu-steps .cu-item[class*='text-'] .num::before": {
        "transform": "translateY(-40px)",
        "color": "#ffffff"
      },
      ".cu-steps .cu-item .num::after": {
        "transform": "translateY(40px)",
        "color": "#ffffff",
        "transition": "all 0.3s ease-in-out 0s"
      },
      ".cu-steps .cu-item[class*='text-'] .num::after": {
        "content": "'\\e645'",
        "font-family": "'cuIcon'",
        "color": "#ffffff",
        "transform": "translateY(0px)"
      },
      ".cu-steps .cu-item[class*='text-'] .num.err::after": {
        "content": "'\\e646'"
      },
      ".flex": {
        "display": "flex"
      },
      ".basis-xs": {
        "flex-basis": "20%"
      },
      ".basis-sm": {
        "flex-basis": "40%"
      },
      ".basis-df": {
        "flex-basis": "50%"
      },
      ".basis-lg": {
        "flex-basis": "60%"
      },
      ".basis-xl": {
        "flex-basis": "80%"
      },
      ".flex-sub": {
        "flex": "1"
      },
      ".flex-twice": {
        "flex": "2"
      },
      ".flex-treble": {
        "flex": "3"
      },
      ".flex-direction": {
        "flex-direction": "column"
      },
      ".flex-wrap": {
        "flex-wrap": "wrap"
      },
      ".align-start": {
        "align-items": "flex-start"
      },
      ".align-end": {
        "align-items": "flex-end"
      },
      ".align-baseline": {
        "align-items": "baseline"
      },
      ".align-center": {
        "align-items": "center"
      },
      ".align-stretch": {
        "align-items": "stretch"
      },
      ".self-start": {
        "align-self": "flex-start"
      },
      ".self-center": {
        "align-self": "center"
      },
      ".self-end": {
        "align-self": "flex-end"
      },
      ".self-stretch": {
        "align-self": "stretch"
      },
      ".justify-start": {
        "justify-content": "flex-start"
      },
      ".justify-end": {
        "justify-content": "flex-end"
      },
      ".justify-center": {
        "justify-content": "center"
      },
      ".justify-between": {
        "justify-content": "space-between"
      },
      ".justify-around": {
        "justify-content": "space-around"
      },
      ".grid": {
        "display": "flex",
        "flex-wrap": "wrap"
      },
      ".grid.grid-square": {
        "overflow": "hidden"
      },
      ".grid.grid-square .cu-tag": {
        "position": "absolute",
        "right": "0",
        "top": "0",
        "border-bottom-left-radius": "6px",
        "padding": "6px 12px",
        "height": "auto",
        "background-color": "rgba(0, 0, 0, 0.5)"
      },
      ".grid.grid-square > view > text[class*='cuIcon-']": {
        "font-size": "52px",
        "position": "absolute",
        "color": "#8799a3",
        "margin": "auto",
        "top": "0",
        "bottom": "0",
        "left": "0",
        "right": "0",
        "display": "flex",
        "justify-content": "center",
        "align-items": "center",
        "flex-direction": "column"
      },
      ".grid.grid-square > view": {
        "margin-right": "20px",
        "margin-bottom": "20px",
        "border-radius": "6px",
        "position": "relative",
        "overflow": "hidden"
      },
      ".grid.grid-square > view.bg-img image": {
        "width": "100%",
        "height": "100%",
        "position": "absolute"
      },
      ".grid.col-1.grid-square > view": {
        "padding-bottom": "100%",
        "height": "0",
        "margin-right": "0"
      },
      ".grid.col-2.grid-square > view": {
        "padding-bottom": "calc((100% - 20px) / 2)",
        "height": "0",
        "width": "calc((100% - 20px) / 2)"
      },
      ".grid.col-3.grid-square > view": {
        "padding-bottom": "calc((100% - 40px) / 3)",
        "height": "0",
        "width": "calc((100% - 40px) / 3)"
      },
      ".grid.col-4.grid-square > view": {
        "padding-bottom": "calc((100% - 60px) / 4)",
        "height": "0",
        "width": "calc((100% - 60px) / 4)"
      },
      ".grid.col-5.grid-square > view": {
        "padding-bottom": "calc((100% - 80px) / 5)",
        "height": "0",
        "width": "calc((100% - 80px) / 5)"
      },
      ".grid.col-2.grid-square > view:nth-child(2n),.grid.col-3.grid-square > view:nth-child(3n),.grid.col-4.grid-square > view:nth-child(4n),.grid.col-5.grid-square > view:nth-child(5n)": {
        "margin-right": "0"
      },
      ".grid.col-1 > view": {
        "width": "100%"
      },
      ".grid.col-2 > view": {
        "width": "50%"
      },
      ".grid.col-3 > view": {
        "width": "33.33%"
      },
      ".grid.col-4 > view": {
        "width": "25%"
      },
      ".grid.col-5 > view": {
        "width": "20%"
      },
      ".margin-0": {
        "margin": "0"
      },
      ".margin-xs": {
        "margin": "10px"
      },
      ".margin-sm": {
        "margin": "20px"
      },
      ".margin": {
        "margin": "30px"
      },
      ".margin-lg": {
        "margin": "40px"
      },
      ".margin-xl": {
        "margin": "50px"
      },
      ".margin-top-xs": {
        "margin-top": "10px"
      },
      ".margin-top-sm": {
        "margin-top": "20px"
      },
      ".margin-top": {
        "margin-top": "30px"
      },
      ".margin-top-lg": {
        "margin-top": "40px"
      },
      ".margin-top-xl": {
        "margin-top": "50px"
      },
      ".margin-right-xs": {
        "margin-right": "10px"
      },
      ".margin-right-sm": {
        "margin-right": "20px"
      },
      ".margin-right": {
        "margin-right": "30px"
      },
      ".margin-right-lg": {
        "margin-right": "40px"
      },
      ".margin-right-xl": {
        "margin-right": "50px"
      },
      ".margin-bottom-xs": {
        "margin-bottom": "10px"
      },
      ".margin-bottom-sm": {
        "margin-bottom": "20px"
      },
      ".margin-bottom": {
        "margin-bottom": "30px"
      },
      ".margin-bottom-lg": {
        "margin-bottom": "40px"
      },
      ".margin-bottom-xl": {
        "margin-bottom": "50px"
      },
      ".margin-left-xs": {
        "margin-left": "10px"
      },
      ".margin-left-sm": {
        "margin-left": "20px"
      },
      ".margin-left": {
        "margin-left": "30px"
      },
      ".margin-left-lg": {
        "margin-left": "40px"
      },
      ".margin-left-xl": {
        "margin-left": "50px"
      },
      ".margin-lr-xs": {
        "margin-left": "10px",
        "margin-right": "10px"
      },
      ".margin-lr-sm": {
        "margin-left": "20px",
        "margin-right": "20px"
      },
      ".margin-lr": {
        "margin-left": "30px",
        "margin-right": "30px"
      },
      ".margin-lr-lg": {
        "margin-left": "40px",
        "margin-right": "40px"
      },
      ".margin-lr-xl": {
        "margin-left": "50px",
        "margin-right": "50px"
      },
      ".margin-tb-xs": {
        "margin-top": "10px",
        "margin-bottom": "10px"
      },
      ".margin-tb-sm": {
        "margin-top": "20px",
        "margin-bottom": "20px"
      },
      ".margin-tb": {
        "margin-top": "30px",
        "margin-bottom": "30px"
      },
      ".margin-tb-lg": {
        "margin-top": "40px",
        "margin-bottom": "40px"
      },
      ".margin-tb-xl": {
        "margin-top": "50px",
        "margin-bottom": "50px"
      },
      ".padding-0": {
        "padding": "0"
      },
      ".padding-xs": {
        "padding": "10px"
      },
      ".padding-sm": {
        "padding": "20px"
      },
      ".padding": {
        "padding": "30px"
      },
      ".padding-lg": {
        "padding": "40px"
      },
      ".padding-xl": {
        "padding": "50px"
      },
      ".padding-top-xs": {
        "padding-top": "10px"
      },
      ".padding-top-sm": {
        "padding-top": "20px"
      },
      ".padding-top": {
        "padding-top": "30px"
      },
      ".padding-top-lg": {
        "padding-top": "40px"
      },
      ".padding-top-xl": {
        "padding-top": "50px"
      },
      ".padding-right-xs": {
        "padding-right": "10px"
      },
      ".padding-right-sm": {
        "padding-right": "20px"
      },
      ".padding-right": {
        "padding-right": "30px"
      },
      ".padding-right-lg": {
        "padding-right": "40px"
      },
      ".padding-right-xl": {
        "padding-right": "50px"
      },
      ".padding-bottom-xs": {
        "padding-bottom": "10px"
      },
      ".padding-bottom-sm": {
        "padding-bottom": "20px"
      },
      ".padding-bottom": {
        "padding-bottom": "30px"
      },
      ".padding-bottom-lg": {
        "padding-bottom": "40px"
      },
      ".padding-bottom-xl": {
        "padding-bottom": "50px"
      },
      ".padding-left-xs": {
        "padding-left": "10px"
      },
      ".padding-left-sm": {
        "padding-left": "20px"
      },
      ".padding-left": {
        "padding-left": "30px"
      },
      ".padding-left-lg": {
        "padding-left": "40px"
      },
      ".padding-left-xl": {
        "padding-left": "50px"
      },
      ".padding-lr-xs": {
        "padding-left": "10px",
        "padding-right": "10px"
      },
      ".padding-lr-sm": {
        "padding-left": "20px",
        "padding-right": "20px"
      },
      ".padding-lr": {
        "padding-left": "30px",
        "padding-right": "30px"
      },
      ".padding-lr-lg": {
        "padding-left": "40px",
        "padding-right": "40px"
      },
      ".padding-lr-xl": {
        "padding-left": "50px",
        "padding-right": "50px"
      },
      ".padding-tb-xs": {
        "padding-top": "10px",
        "padding-bottom": "10px"
      },
      ".padding-tb-sm": {
        "padding-top": "20px",
        "padding-bottom": "20px"
      },
      ".padding-tb": {
        "padding-top": "30px",
        "padding-bottom": "30px"
      },
      ".padding-tb-lg": {
        "padding-top": "40px",
        "padding-bottom": "40px"
      },
      ".padding-tb-xl": {
        "padding-top": "50px",
        "padding-bottom": "50px"
      },
      ".cf::after,.cf::before": {
        "content": "' '",
        "display": "table"
      },
      ".cf::after": {
        "clear": "both"
      },
      ".fl": {
        "float": "left"
      },
      ".fr": {
        "float": "right"
      },
      ".line-red::after,.lines-red::after": {
        "border-color": "#e54d42"
      },
      ".line-orange::after,.lines-orange::after": {
        "border-color": "#f37b1d"
      },
      ".line-yellow::after,.lines-yellow::after": {
        "border-color": "#fbbd08"
      },
      ".line-olive::after,.lines-olive::after": {
        "border-color": "#8dc63f"
      },
      ".line-green::after,.lines-green::after": {
        "border-color": "#39b54a"
      },
      ".line-cyan::after,.lines-cyan::after": {
        "border-color": "#1cbbb4"
      },
      ".line-blue::after,.lines-blue::after": {
        "border-color": "#0081ff"
      },
      ".line-purple::after,.lines-purple::after": {
        "border-color": "#6739b6"
      },
      ".line-mauve::after,.lines-mauve::after": {
        "border-color": "#9c26b0"
      },
      ".line-pink::after,.lines-pink::after": {
        "border-color": "#e03997"
      },
      ".line-brown::after,.lines-brown::after": {
        "border-color": "#a5673f"
      },
      ".line-grey::after,.lines-grey::after": {
        "border-color": "#8799a3"
      },
      ".line-gray::after,.lines-gray::after": {
        "border-color": "#aaaaaa"
      },
      ".line-black::after,.lines-black::after": {
        "border-color": "#333333"
      },
      ".line-white::after,.lines-white::after": {
        "border-color": "#ffffff"
      },
      ".bg-red": {
        "background-color": "#e54d42",
        "color": "#ffffff"
      },
      ".bg-orange": {
        "background-color": "#f37b1d",
        "color": "#ffffff"
      },
      ".bg-yellow": {
        "background-color": "#fbbd08",
        "color": "#333333"
      },
      ".bg-olive": {
        "background-color": "#8dc63f",
        "color": "#ffffff"
      },
      ".bg-green": {
        "background-color": "#39b54a",
        "color": "#ffffff"
      },
      ".bg-cyan": {
        "background-color": "#1cbbb4",
        "color": "#ffffff"
      },
      ".bg-blue": {
        "background-color": "#0081ff",
        "color": "#ffffff"
      },
      ".bg-purple": {
        "background-color": "#6739b6",
        "color": "#ffffff"
      },
      ".bg-mauve": {
        "background-color": "#9c26b0",
        "color": "#ffffff"
      },
      ".bg-pink": {
        "background-color": "#e03997",
        "color": "#ffffff"
      },
      ".bg-brown": {
        "background-color": "#a5673f",
        "color": "#ffffff"
      },
      ".bg-grey": {
        "background-color": "#8799a3",
        "color": "#ffffff"
      },
      ".bg-gray": {
        "background-color": "#f0f0f0",
        "color": "#333333"
      },
      ".bg-black": {
        "background-color": "#333333",
        "color": "#ffffff"
      },
      ".bg-white": {
        "background-color": "#ffffff",
        "color": "#666666"
      },
      ".bg-shadeTop": {
        "background-image": "linear-gradient(rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.01))",
        "color": "#ffffff"
      },
      ".bg-shadeBottom": {
        "background-image": "linear-gradient(rgba(0, 0, 0, 0.01), rgba(0, 0, 0, 1))",
        "color": "#ffffff"
      },
      ".bg-red.light": {
        "color": "#e54d42",
        "background-color": "#fadbd9"
      },
      ".bg-orange.light": {
        "color": "#f37b1d",
        "background-color": "#fde6d2"
      },
      ".bg-yellow.light": {
        "color": "#fbbd08",
        "background-color": "#fef2ced2"
      },
      ".bg-olive.light": {
        "color": "#8dc63f",
        "background-color": "#e8f4d9"
      },
      ".bg-green.light": {
        "color": "#39b54a",
        "background-color": "#d7f0dbff"
      },
      ".bg-cyan.light": {
        "color": "#1cbbb4",
        "background-color": "#d2f1f0"
      },
      ".bg-blue.light": {
        "color": "#0081ff",
        "background-color": "#cce6ff"
      },
      ".bg-purple.light": {
        "color": "#6739b6",
        "background-color": "#e1d7f0"
      },
      ".bg-mauve.light": {
        "color": "#9c26b0",
        "background-color": "#ebd4ef"
      },
      ".bg-pink.light": {
        "color": "#e03997",
        "background-color": "#f9d7ea"
      },
      ".bg-brown.light": {
        "color": "#a5673f",
        "background-color": "#ede1d9"
      },
      ".bg-grey.light": {
        "color": "#8799a3",
        "background-color": "#e7ebed"
      },
      ".bg-gradual-red": {
        "background-image": "linear-gradient(45deg, #f43f3b, #ec008c)",
        "color": "#ffffff"
      },
      ".bg-gradual-orange": {
        "background-image": "linear-gradient(45deg, #ff9700, #ed1c24)",
        "color": "#ffffff"
      },
      ".bg-gradual-green": {
        "background-image": "linear-gradient(45deg, #39b54a, #8dc63f)",
        "color": "#ffffff"
      },
      ".bg-gradual-purple": {
        "background-image": "linear-gradient(45deg, #9000ff, #5e00ff)",
        "color": "#ffffff"
      },
      ".bg-gradual-pink": {
        "background-image": "linear-gradient(45deg, #ec008c, #6739b6)",
        "color": "#ffffff"
      },
      ".bg-gradual-blue": {
        "background-image": "linear-gradient(45deg, #0081ff, #1cbbb4)",
        "color": "#ffffff"
      },
      ".shadow[class*='-red']": {
        "box-shadow": "6px 6px 8px rgba(204, 69, 59, 0.2)"
      },
      ".shadow[class*='-orange']": {
        "box-shadow": "6px 6px 8px rgba(217, 109, 26, 0.2)"
      },
      ".shadow[class*='-yellow']": {
        "box-shadow": "6px 6px 8px rgba(224, 170, 7, 0.2)"
      },
      ".shadow[class*='-olive']": {
        "box-shadow": "6px 6px 8px rgba(124, 173, 55, 0.2)"
      },
      ".shadow[class*='-green']": {
        "box-shadow": "6px 6px 8px rgba(48, 156, 63, 0.2)"
      },
      ".shadow[class*='-cyan']": {
        "box-shadow": "6px 6px 8px rgba(28, 187, 180, 0.2)"
      },
      ".shadow[class*='-blue']": {
        "box-shadow": "6px 6px 8px rgba(0, 102, 204, 0.2)"
      },
      ".shadow[class*='-purple']": {
        "box-shadow": "6px 6px 8px rgba(88, 48, 156, 0.2)"
      },
      ".shadow[class*='-mauve']": {
        "box-shadow": "6px 6px 8px rgba(133, 33, 150, 0.2)"
      },
      ".shadow[class*='-pink']": {
        "box-shadow": "6px 6px 8px rgba(199, 50, 134, 0.2)"
      },
      ".shadow[class*='-brown']": {
        "box-shadow": "6px 6px 8px rgba(140, 88, 53, 0.2)"
      },
      ".shadow[class*='-grey']": {
        "box-shadow": "6px 6px 8px rgba(114, 130, 138, 0.2)"
      },
      ".shadow[class*='-gray']": {
        "box-shadow": "6px 6px 8px rgba(114, 130, 138, 0.2)"
      },
      ".shadow[class*='-black']": {
        "box-shadow": "6px 6px 8px rgba(26, 26, 26, 0.2)"
      },
      ".shadow[class*='-white']": {
        "box-shadow": "6px 6px 8px rgba(26, 26, 26, 0.2)"
      },
      ".text-shadow[class*='-red']": {
        "text-shadow": "6px 6px 8px rgba(204, 69, 59, 0.2)"
      },
      ".text-shadow[class*='-orange']": {
        "text-shadow": "6px 6px 8px rgba(217, 109, 26, 0.2)"
      },
      ".text-shadow[class*='-yellow']": {
        "text-shadow": "6px 6px 8px rgba(224, 170, 7, 0.2)"
      },
      ".text-shadow[class*='-olive']": {
        "text-shadow": "6px 6px 8px rgba(124, 173, 55, 0.2)"
      },
      ".text-shadow[class*='-green']": {
        "text-shadow": "6px 6px 8px rgba(48, 156, 63, 0.2)"
      },
      ".text-shadow[class*='-cyan']": {
        "text-shadow": "6px 6px 8px rgba(28, 187, 180, 0.2)"
      },
      ".text-shadow[class*='-blue']": {
        "text-shadow": "6px 6px 8px rgba(0, 102, 204, 0.2)"
      },
      ".text-shadow[class*='-purple']": {
        "text-shadow": "6px 6px 8px rgba(88, 48, 156, 0.2)"
      },
      ".text-shadow[class*='-mauve']": {
        "text-shadow": "6px 6px 8px rgba(133, 33, 150, 0.2)"
      },
      ".text-shadow[class*='-pink']": {
        "text-shadow": "6px 6px 8px rgba(199, 50, 134, 0.2)"
      },
      ".text-shadow[class*='-brown']": {
        "text-shadow": "6px 6px 8px rgba(140, 88, 53, 0.2)"
      },
      ".text-shadow[class*='-grey']": {
        "text-shadow": "6px 6px 8px rgba(114, 130, 138, 0.2)"
      },
      ".text-shadow[class*='-gray']": {
        "text-shadow": "6px 6px 8px rgba(114, 130, 138, 0.2)"
      },
      ".text-shadow[class*='-black']": {
        "text-shadow": "6px 6px 8px rgba(26, 26, 26, 0.2)"
      },
      ".bg-img": {
        "background-size": "cover",
        "background-position": "center",
        "background-repeat": "no-repeat"
      },
      ".bg-mask": {
        "background-color": "#333333",
        "position": "relative"
      },
      ".bg-mask::after": {
        "content": "''",
        "border-radius": "inherit",
        "width": "100%",
        "height": "100%",
        "display": "block",
        "background-color": "rgba(0, 0, 0, 0.4)",
        "position": "absolute",
        "left": "0",
        "right": "0",
        "bottom": "0",
        "top": "0"
      },
      ".bg-mask view,.bg-mask cover-view": {
        "z-index": "5",
        "position": "relative"
      },
      ".bg-video": {
        "position": "relative"
      },
      ".bg-video video": {
        "display": "block",
        "height": "100%",
        "width": "100%",
        "-o-object-fit": "cover",
        "object-fit": "cover",
        "position": "absolute",
        "top": "0",
        "z-index": "0",
        "pointer-events": "none"
      },
      ".text-xs": {
        "font-size": "20px"
      },
      ".text-sm": {
        "font-size": "24px"
      },
      ".text-df": {
        "font-size": "28px"
      },
      ".text-lg": {
        "font-size": "32px"
      },
      ".text-xl": {
        "font-size": "36px"
      },
      ".text-xxl": {
        "font-size": "44px"
      },
      ".text-sl": {
        "font-size": "80px"
      },
      ".text-xsl": {
        "font-size": "120px"
      },
      ".text-Abc": {
        "text-transform": "Capitalize"
      },
      ".text-ABC": {
        "text-transform": "Uppercase"
      },
      ".text-abc": {
        "text-transform": "Lowercase"
      },
      ".text-price::before": {
        "content": "'¥'",
        "font-size": "80%",
        "margin-right": "4px"
      },
      ".text-cut": {
        "text-overflow": "ellipsis",
        "white-space": "nowrap",
        "overflow": "hidden"
      },
      ".text-bold": {
        "font-weight": "bold"
      },
      ".text-center": {
        "text-align": "center"
      },
      ".text-content": {
        "line-height": "1.6"
      },
      ".text-left": {
        "text-align": "left"
      },
      ".text-right": {
        "text-align": "right"
      },
      ".text-red,.line-red,.lines-red": {
        "color": "#e54d42"
      },
      ".text-orange,.line-orange,.lines-orange": {
        "color": "#f37b1d"
      },
      ".text-yellow,.line-yellow,.lines-yellow": {
        "color": "#fbbd08"
      },
      ".text-olive,.line-olive,.lines-olive": {
        "color": "#8dc63f"
      },
      ".text-green,.line-green,.lines-green": {
        "color": "#39b54a"
      },
      ".text-cyan,.line-cyan,.lines-cyan": {
        "color": "#1cbbb4"
      },
      ".text-blue,.line-blue,.lines-blue": {
        "color": "#0081ff"
      },
      ".text-purple,.line-purple,.lines-purple": {
        "color": "#6739b6"
      },
      ".text-mauve,.line-mauve,.lines-mauve": {
        "color": "#9c26b0"
      },
      ".text-pink,.line-pink,.lines-pink": {
        "color": "#e03997"
      },
      ".text-brown,.line-brown,.lines-brown": {
        "color": "#a5673f"
      },
      ".text-grey,.line-grey,.lines-grey": {
        "color": "#8799a3"
      },
      ".text-gray,.line-gray,.lines-gray": {
        "color": "#aaaaaa"
      },
      ".text-black,.line-black,.lines-black": {
        "color": "#333333"
      },
      ".text-white,.line-white,.lines-white": {
        "color": "#ffffff"
      }
    }
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/login/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- layout_user -->\n<template>\n  <div class=\"layout layout_user\">\n    <el-container>\n      <Header />\n      <el-main>\n        <div class=\"flex flex-direction align-center justify-center\">\n          <router-view />\n        </div>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Header from '../components/header';\nconst ipc = require('electron').ipcRenderer;\nimport { mapActions } from 'vuex';\nimport { LOGIN_FINISHED } from '@/store/types';\nimport Ws, { handleRecievedQueueMsgs } from '@/utils/ws';\nimport { startSync } from '@/services/syncInfos'\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  name:\"Login\",\n  components: {\n    Header\n  },\n  data() {\n    //这里存放数据\n    return {\n      langMap: {\n        'en-us': 'English',\n        'zh-cn': '简体中文'\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([LOGIN_FINISHED]),\n    _syncData(event, infos){\n      console.log('syncData====', infos);\n      if(infos.isFirstLogin){\n        this.$router.push('/user/login/syncdata');\n      } else {\n        // 每次登录都同步下，后端离线数据有些推有些不推，有时推有时不推\n        console.log('离线数据')\n        Ws.init(this.startSync);\n      }\n      // else if (infos.longtermOffline){\n      //   // 这里处理离线120小时的处理\n      //   console.log('离线同步')\n      //   Ws.init(this.startSync);\n      // }\n      // 第一次登录跳转展示同步数据页面\n      \n    },\n    handleCommand(command) {\n      this.$i18n.locale = command;\n      localStorage.lang = command;\n      this.$message({\n        type: 'success',\n        message: '切换语言成功：' + this.langMap[command]\n      });\n    },\n    syncFinished(){\n      handleRecievedQueueMsgs();\n      console.log('ok');\n    },\n    startSync(){\n      startSync(this.syncFinished, null, true);\n      // setTimeout(()=>this.LOGIN_FINISHED(), 500);\n      this.LOGIN_FINISHED()\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    localStorage.setItem('loginInfo',null)\n    window.vm.$remote.getCurrentWindow().setSize(380, 500); //登陆页面初始化大小\n    window.vm.$remote.getCurrentWindow().center(); //窗口居中\n    ipc.send('changeMax', false); // 没有登陆 禁止最大化\n    console.log(123123123,this) \n    \n    ipc.on('syncData', this._syncData)\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    ipc.removeListener('syncData', this._syncData);\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- layout_user -->\n<template>\n  <div class=\"layout layout_user\">\n    <el-container>\n      <Header />\n      <el-main>\n        <div class=\"flex flex-direction align-center justify-center\">\n          <router-view />\n        </div>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Header from '../components/header';\nconst ipc = require('electron').ipcRenderer;\nimport { mapActions } from 'vuex';\nimport { LOGIN_FINISHED } from '@/store/types';\nimport Ws, { handleRecievedQueueMsgs } from '@/utils/ws';\nimport { startSync } from '@/services/syncInfos'\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  name:\"Login\",\n  components: {\n    Header\n  },\n  data() {\n    //这里存放数据\n    return {\n      langMap: {\n        'en-us': 'English',\n        'zh-cn': '简体中文'\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([LOGIN_FINISHED]),\n    _syncData(event, infos){\n      console.log('syncData====', infos);\n      if(infos.isFirstLogin){\n        this.$router.push('/user/login/syncdata');\n      } else {\n        // 每次登录都同步下，后端离线数据有些推有些不推，有时推有时不推\n        console.log('离线数据')\n        Ws.init(this.startSync);\n      }\n      // else if (infos.longtermOffline){\n      //   // 这里处理离线120小时的处理\n      //   console.log('离线同步')\n      //   Ws.init(this.startSync);\n      // }\n      // 第一次登录跳转展示同步数据页面\n      \n    },\n    handleCommand(command) {\n      this.$i18n.locale = command;\n      localStorage.lang = command;\n      this.$message({\n        type: 'success',\n        message: '切换语言成功：' + this.langMap[command]\n      });\n    },\n    syncFinished(){\n      handleRecievedQueueMsgs();\n      console.log('ok');\n    },\n    startSync(){\n      startSync(this.syncFinished, null, true);\n      // setTimeout(()=>this.LOGIN_FINISHED(), 500);\n      this.LOGIN_FINISHED()\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    localStorage.setItem('loginInfo',null)\n    window.vm.$remote.getCurrentWindow().setSize(380, 500); //登陆页面初始化大小\n    window.vm.$remote.getCurrentWindow().center(); //窗口居中\n    ipc.send('changeMax', false); // 没有登陆 禁止最大化\n    console.log(123123123,this) \n    \n    ipc.on('syncData', this._syncData)\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    ipc.removeListener('syncData', this._syncData);\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.el-main {\n  // background-color: #e9eef3;\n  color: #000;\n  // text-align: center;\n  font-size: 15px;\n  .main-left {\n    width: 60%;\n    img {\n      margin-bottom: 20px;\n      width: 100%;\n    }\n    span {\n      font-size: 18px;\n\n      font-weight: 500;\n      line-height: 28px;\n      color: rgba(47, 84, 235, 1);\n    }\n    :nth-child(3) {\n      margin-bottom: 150px;\n    }\n  }\n  .main-right {\n    width: 40%;\n  }\n}\n\nbody .el-container {\n  background: url(../../../assets/images/login_bg.png) no-repeat;\n  flex-direction: column;\n  background-size: 100% auto;\n  width: 100%;\n  height: 100vh;\n}\n</style>\n",
    "cssJson": [
      {
        ".el-main": {
          "color": "#000",
          "font-size": "15px",
          ".main-left": {
            "width": "60%",
            "img": {
              "margin-bottom": "20px",
              "width": "100%"
            },
            "span": {
              "font-size": "18px",
              "font-weight": "500",
              "line-height": "28px",
              "color": "rgba(47, 84, 235, 1)"
            },
            ":nth-child(3)": {
              "margin-bottom": "150px"
            }
          },
          ".main-right": {
            "width": "40%"
          }
        },
        "body .el-container": {
          "background": "url(../../../assets/images/login_bg.png) no-repeat",
          "flex-direction": "column",
          "background-size": "100% auto",
          "width": "100%",
          "height": "100vh"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/login/pass.vue",
    "tagInfo": {
      "0": "<style lang=\"less\">",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- pass -->\n<template>\n  <div class=\"pass\">\n    <img src=\"../../../assets/images/di.png\" alt style=\"width: 100px; display: block; margin: 0 auto; margin-top: -20px\" /><br />\n    <div class=\"main-login\">\n      <h5>Digital Economy · Lifestyle</h5>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"formValues\">\n        <el-form-item label=\"\" prop=\"loginName\">\n          <el-input placeholder=\"请输入用户名/邮箱\" v-model.trim=\"formValues.loginName\" clearable></el-input>\n          <!-- <el-input placeholder=\"请输入邮箱地址\" v-model.trim=\"formValues.loginName\"></el-input> -->\n        </el-form-item>\n        <el-form-item label=\"\" prop=\"password\">\n          <el-input\n            placeholder=\"请输入登录密码\"\n            :type=\"showPassword ? 'text' : 'password'\"\n            v-model=\"formValues.password\"\n            @keyup.enter.native=\"submitForm('ruleForm')\"\n          >\n            <img\n              src=\"../../../assets/images/open.png\"\n              slot=\"suffix\"\n              v-if=\"showPassword\"\n              class=\"password-image\"\n              @click=\"showPassword = !showPassword\"\n              alt\n            />\n            <img src=\"../../../assets/images/close.png\" slot=\"suffix\" v-else class=\"password-image\"\n                 @click=\"showPassword = !showPassword\" alt/>\n          </el-input>\n          <el-input v-show=\"false\" v-model=\"formValues.uuid\" />\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-between\">\n          <!-- <span @click=\"quick\">快捷登录</span> -->\n          <span @click=\"qrcode\">扫码登录</span>\n          <span @click=\"forget\">忘记密码</span>\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%\" type=\"primary\" :loading=\"loading\" @click=\"submitForm('ruleForm')\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div>\n      <el-dialog title=\"弹出表单\" :visible.sync=\"dialogFormVisible\">\n        <el-form :model=\"form\">\n          <el-form-item label=\"表单内容一\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"表单内容二\" :label-width=\"formLabelWidth\">\n            <el-select v-model=\"form.region\" placeholder=\"请选择\">\n              <el-option label=\"区域一\" value=\"shanghai\"></el-option>\n              <el-option label=\"区域二\" value=\"beijing\"></el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"dialogFormVisible = false\">确 定</el-button>\n        </div>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapState, mapActions } from 'vuex';\nimport { getMachineId } from '@/utils'\nimport { WEB_LOGIN } from '@/store/types';\nimport { md5 } from '@/utils';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    let checkData = (rule, value, callback) => {\n      if (value) {\n        if (value.indexOf(' ') > -1) {\n          callback(new Error('只能输入数字、字母及符号!'));\n        } else {\n          callback();\n        }\n      }\n      callback();\n    };\n    //这里存放数据\n    return {\n      loading: false,\n      formValues: {\n        // loginName: \"zw004@qq.com\",\n        // password: \"1qaz2wsx\",\n        loginName: '',\n        password: 'abc123',\n\n        UDID: ''\n      },\n      rules: {\n        loginName: [\n          { required: true, message: '请输入邮箱地址或用户名' },\n          {\n            validator: checkData,\n            message: '只能输入数字、字母及符号',\n            trigger: 'blur'\n          },\n          { min: 5, max: 50, message: '请输入5-50位' }\n        ],\n        password: [\n          { required: true, message: '请输入密码' },\n          {\n            validator: checkData,\n            message: '只能输入数字、字母及符号',\n            trigger: 'blur'\n          },\n          { min: 6, max: 16, message: '请输入6-16位' }\n        ]\n      },\n      // 测试右键相关代码\n      testRightClick: [\n        { name: 'aaaa', age: '20' },\n        { name: 'bbbb', age: '30' }\n      ],\n      changeValueV: {\n        name: '',\n        age: ''\n      },\n      dialogFormVisible: false,\n      form: {\n        name: '',\n        region: '',\n        date1: '',\n        date2: '',\n        delivery: false,\n        type: [],\n        resource: '',\n        desc: ''\n      },\n      formLabelWidth: '120px',\n      showPassword: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      loginInfo: obj => {\n        return obj.state.loginInfo;\n      }\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([WEB_LOGIN]),\n    rightClick(e, item) {\n      this.changeValueV = item;\n      e.preventDefault();\n      this.addClick();\n    },\n    async login(field) {\n      try {\n        this.loading = true;\n        let res = await this.WEB_LOGIN({\n          isScan: false,\n          type: 'pass',\n          deviceName: process.platform == 'darwin' ? 'MAC' : 'Windows',\n          ...field\n        });\n        console.log(res, 'pass');\n        if (res.data.code == '010606' || res.data.code == '010604') {\n          this.loading = false;\n        } else if (res.code == '200') {\n          this.loading = false;\n        } else {\n          this.loading = false;\n          //this.$message.error(res.data.msg);\n        }\n      } catch (err) {\n        this.loading = false;\n        //用户被限制登录提示信息重复\n        // this.$message.error(\"登录失败，请重试！\");\n        throw new Error(err);\n      }\n    },\n    quick() {\n      this.$router.push('/user/login/email');\n    },\n    forget() {\n      this.$router.push('/user/forget/email');\n    },\n    qrcode() {\n      this.$router.push('/user/login/qrcode');\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        const machineId = getMachineId();\n        if (valid) {\n          this.formValues.UDID = 'didi.pc-' + machineId;\n          this.login({\n            ...this.formValues,\n            password: md5(this.formValues.password)\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    S4() {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    },\n    guid() {\n      return this.S4() + '-' + this.S4() + '-' + this.S4() + '-' + this.S4() + '-' + this.S4();\n    },\n    // 以下为单页面添加鼠标右键事件\n    addClick() {\n      return this.$RightClick([\n        {\n          name: '复制',\n          fun: () => {\n            console.log(this.changeValueV);\n            this.$message.success(`已复制${this.changeValueV.name}`);\n          }\n        },\n        {\n          name: '粘贴',\n          fun: () => {\n            console.log(this.changeValueV);\n            this.$message.success(`已粘贴${this.changeValueV.name}`);\n          }\n        },\n        {\n          name: '设置社区成员备注',\n          fun: () => {\n            console.log(this.changeValueV);\n            this.dialogFormVisible = true;\n          }\n        }\n      ]).popup({ window: window.vm.$remote.getCurrentWindow() });\n    },\n    showPass() {\n      this.showPassword = !this.showPassword;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    document.body.style.border = '#ddd solid 1px';\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  // beforeRouteLeave(to, from, next) {\n  //   next();\n  // },\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- pass -->\n<template>\n  <div class=\"pass\">\n    <img src=\"../../../assets/images/di.png\" alt style=\"width: 100px; display: block; margin: 0 auto; margin-top: -20px\" /><br />\n    <div class=\"main-login\">\n      <h5>Digital Economy · Lifestyle</h5>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"formValues\">\n        <el-form-item label=\"\" prop=\"loginName\">\n          <el-input placeholder=\"请输入用户名/邮箱\" v-model.trim=\"formValues.loginName\" clearable></el-input>\n          <!-- <el-input placeholder=\"请输入邮箱地址\" v-model.trim=\"formValues.loginName\"></el-input> -->\n        </el-form-item>\n        <el-form-item label=\"\" prop=\"password\">\n          <el-input\n            placeholder=\"请输入登录密码\"\n            :type=\"showPassword ? 'text' : 'password'\"\n            v-model=\"formValues.password\"\n            @keyup.enter.native=\"submitForm('ruleForm')\"\n          >\n            <img\n              src=\"../../../assets/images/open.png\"\n              slot=\"suffix\"\n              v-if=\"showPassword\"\n              class=\"password-image\"\n              @click=\"showPassword = !showPassword\"\n              alt\n            />\n            <img src=\"../../../assets/images/close.png\" slot=\"suffix\" v-else class=\"password-image\"\n                 @click=\"showPassword = !showPassword\" alt/>\n          </el-input>\n          <el-input v-show=\"false\" v-model=\"formValues.uuid\" />\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-between\">\n          <!-- <span @click=\"quick\">快捷登录</span> -->\n          <span @click=\"qrcode\">扫码登录</span>\n          <span @click=\"forget\">忘记密码</span>\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%\" type=\"primary\" :loading=\"loading\" @click=\"submitForm('ruleForm')\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div>\n      <el-dialog title=\"弹出表单\" :visible.sync=\"dialogFormVisible\">\n        <el-form :model=\"form\">\n          <el-form-item label=\"表单内容一\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"表单内容二\" :label-width=\"formLabelWidth\">\n            <el-select v-model=\"form.region\" placeholder=\"请选择\">\n              <el-option label=\"区域一\" value=\"shanghai\"></el-option>\n              <el-option label=\"区域二\" value=\"beijing\"></el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"dialogFormVisible = false\">确 定</el-button>\n        </div>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapState, mapActions } from 'vuex';\nimport { getMachineId } from '@/utils'\nimport { WEB_LOGIN } from '@/store/types';\nimport { md5 } from '@/utils';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    let checkData = (rule, value, callback) => {\n      if (value) {\n        if (value.indexOf(' ') > -1) {\n          callback(new Error('只能输入数字、字母及符号!'));\n        } else {\n          callback();\n        }\n      }\n      callback();\n    };\n    //这里存放数据\n    return {\n      loading: false,\n      formValues: {\n        // loginName: \"zw004@qq.com\",\n        // password: \"1qaz2wsx\",\n        loginName: '',\n        password: 'abc123',\n\n        UDID: ''\n      },\n      rules: {\n        loginName: [\n          { required: true, message: '请输入邮箱地址或用户名' },\n          {\n            validator: checkData,\n            message: '只能输入数字、字母及符号',\n            trigger: 'blur'\n          },\n          { min: 5, max: 50, message: '请输入5-50位' }\n        ],\n        password: [\n          { required: true, message: '请输入密码' },\n          {\n            validator: checkData,\n            message: '只能输入数字、字母及符号',\n            trigger: 'blur'\n          },\n          { min: 6, max: 16, message: '请输入6-16位' }\n        ]\n      },\n      // 测试右键相关代码\n      testRightClick: [\n        { name: 'aaaa', age: '20' },\n        { name: 'bbbb', age: '30' }\n      ],\n      changeValueV: {\n        name: '',\n        age: ''\n      },\n      dialogFormVisible: false,\n      form: {\n        name: '',\n        region: '',\n        date1: '',\n        date2: '',\n        delivery: false,\n        type: [],\n        resource: '',\n        desc: ''\n      },\n      formLabelWidth: '120px',\n      showPassword: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      loginInfo: obj => {\n        return obj.state.loginInfo;\n      }\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([WEB_LOGIN]),\n    rightClick(e, item) {\n      this.changeValueV = item;\n      e.preventDefault();\n      this.addClick();\n    },\n    async login(field) {\n      try {\n        this.loading = true;\n        let res = await this.WEB_LOGIN({\n          isScan: false,\n          type: 'pass',\n          deviceName: process.platform == 'darwin' ? 'MAC' : 'Windows',\n          ...field\n        });\n        console.log(res, 'pass');\n        if (res.data.code == '010606' || res.data.code == '010604') {\n          this.loading = false;\n        } else if (res.code == '200') {\n          this.loading = false;\n        } else {\n          this.loading = false;\n          //this.$message.error(res.data.msg);\n        }\n      } catch (err) {\n        this.loading = false;\n        //用户被限制登录提示信息重复\n        // this.$message.error(\"登录失败，请重试！\");\n        throw new Error(err);\n      }\n    },\n    quick() {\n      this.$router.push('/user/login/email');\n    },\n    forget() {\n      this.$router.push('/user/forget/email');\n    },\n    qrcode() {\n      this.$router.push('/user/login/qrcode');\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        const machineId = getMachineId();\n        if (valid) {\n          this.formValues.UDID = 'didi.pc-' + machineId;\n          this.login({\n            ...this.formValues,\n            password: md5(this.formValues.password)\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    S4() {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    },\n    guid() {\n      return this.S4() + '-' + this.S4() + '-' + this.S4() + '-' + this.S4() + '-' + this.S4();\n    },\n    // 以下为单页面添加鼠标右键事件\n    addClick() {\n      return this.$RightClick([\n        {\n          name: '复制',\n          fun: () => {\n            console.log(this.changeValueV);\n            this.$message.success(`已复制${this.changeValueV.name}`);\n          }\n        },\n        {\n          name: '粘贴',\n          fun: () => {\n            console.log(this.changeValueV);\n            this.$message.success(`已粘贴${this.changeValueV.name}`);\n          }\n        },\n        {\n          name: '设置社区成员备注',\n          fun: () => {\n            console.log(this.changeValueV);\n            this.dialogFormVisible = true;\n          }\n        }\n      ]).popup({ window: window.vm.$remote.getCurrentWindow() });\n    },\n    showPass() {\n      this.showPassword = !this.showPassword;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    document.body.style.border = '#ddd solid 1px';\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  // beforeRouteLeave(to, from, next) {\n  //   next();\n  // },\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\">\n.main-login {\n  .el-input__inner,\n  .el-textarea__inner {\n    background: #fff;\n    border-bottom: 1px solid #e5e5e5;\n    border-radius: 0;\n  }\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.pass {\n  position: absolute;\n  top: 80px;\n}\n.main-login {\n  width: 400px;\n  height: 530px;\n  padding: 0 60px 60px 60px;\n  box-sizing: border-box;\n  // background: rgba(255, 255, 255, 1);\n  box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n  & > h5 {\n    text-align: center;\n\n    color: #1f52f4;\n    margin: 0 0 40px 0;\n  }\n  /* h3 {\n    text-align: center;\n    margin: 0 0 30px 0;\n    font-size: 18px;\n    \n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  } */\n\n  .login-code {\n    font-size: 14px;\n    padding: 0 0 20px;\n    span {\n      cursor: pointer;\n      font-size: 14px;\n\n      color: #2f54eb;\n    }\n  }\n  .password-image {\n    margin-top: 10px;\n    margin-right: 3px;\n    opacity: 0.5;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".main-login": {
          ".el-input__inner,  .el-textarea__inner": {
            "background": "#fff",
            "border-bottom": "1px solid #e5e5e5",
            "border-radius": "0"
          }
        }
      },
      {
        ".pass": {
          "position": "absolute",
          "top": "80px"
        },
        ".main-login": {
          "width": "400px",
          "height": "530px",
          "padding": "0 60px 60px 60px",
          "box-sizing": "border-box",
          "box-shadow": "0px 4px 8px 0px rgba(5, 36, 163, 0.1)",
          "border-radius": "4px",
          "& > h5": {
            "text-align": "center",
            "color": "#1f52f4",
            "margin": "0 0 40px 0"
          },
          ".login-code": {
            "font-size": "14px",
            "padding": "0 0 20px",
            "span": {
              "cursor": "pointer",
              "font-size": "14px",
              "color": "#2f54eb"
            }
          },
          ".password-image": {
            "margin-top": "10px",
            "margin-right": "3px",
            "opacity": "0.5"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/login/email.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- pass -->\n<template>\n  <div class=\"email\">\n    <div class=\"main-login\">\n      <h3>团队登录</h3>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input placeholder=\"请输入邮箱地址\" v-model=\"form.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"validCode\" class=\"relative\">\n          <el-input placeholder=\"请输入邮箱验证码\" v-model=\"form.validCode\"></el-input>\n          <span class=\"clickGet\" @click=\"post_user_send_email\" v-if=\"countDown == 0\">点击获取</span>\n          <span class=\"clickGet\" v-else>{{ countDown }}</span>\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-between\">\n          <span @click=\"goForget\">密码登录</span>\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%\" :loading=\"loading\" type=\"primary\" @click=\"submitForm('ruleForm')\">立即登录</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapActions } from 'vuex';\nimport { WEB_CODE_LOGIN } from '@/store/types';\nimport { user_send_email } from '@/server';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      loading: false,\n      countDown: 0,\n      form: {\n        email: '',\n        validCode: ''\n      },\n      rules: {\n        email: [{ type: 'email', required: true, message: '请输入邮箱' }],\n        validCode: [{ required: true, message: '请输入邮箱验证码' }]\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([WEB_CODE_LOGIN]),\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.post_user_web_code_login();\n        }\n      });\n    },\n    async post_user_send_email() {\n      this.countDown = 120;\n      let countDown = setInterval(() => {\n        this.countDown--;\n        if (this.countDown == 0) {\n          clearInterval(countDown);\n        }\n      }, 1000);\n      const res = await user_send_email({\n        email: this.form.email,\n        templateCode: 'user_7'\n      });\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: '发送成功'\n        });\n      }\n    },\n    async post_user_web_code_login() {\n      try {\n        this.loading = true;\n        let now = Date.now();\n        let sign = md5(\n          `timestamp=${now}&userName=${this.form.email}\n          &validCode=${this.form.validCode}&validCodeType=email&key=4yUbWtGLevMv9GVH`\n        );\n        await this.WEB_CODE_LOGIN({\n          timestamp: now,\n          userName: this.form.email,\n          email: this.form.email,\n          validCode: this.form.validCode,\n          validCodeType: 'email',\n          templateCode: 'user_7',\n          sign\n        });\n        this.loading = false;\n      } catch (err) {\n        this.loading = false;\n        this.$message.error('登录失败，请重试！');\n        throw new Error(err);\n      }\n    },\n    goForget() {\n      this.$router.push('/user/login/pass');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- pass -->\n<template>\n  <div class=\"email\">\n    <div class=\"main-login\">\n      <h3>团队登录</h3>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input placeholder=\"请输入邮箱地址\" v-model=\"form.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"validCode\" class=\"relative\">\n          <el-input placeholder=\"请输入邮箱验证码\" v-model=\"form.validCode\"></el-input>\n          <span class=\"clickGet\" @click=\"post_user_send_email\" v-if=\"countDown == 0\">点击获取</span>\n          <span class=\"clickGet\" v-else>{{ countDown }}</span>\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-between\">\n          <span @click=\"goForget\">密码登录</span>\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%\" :loading=\"loading\" type=\"primary\" @click=\"submitForm('ruleForm')\">立即登录</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapActions } from 'vuex';\nimport { WEB_CODE_LOGIN } from '@/store/types';\nimport { user_send_email } from '@/server';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      loading: false,\n      countDown: 0,\n      form: {\n        email: '',\n        validCode: ''\n      },\n      rules: {\n        email: [{ type: 'email', required: true, message: '请输入邮箱' }],\n        validCode: [{ required: true, message: '请输入邮箱验证码' }]\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([WEB_CODE_LOGIN]),\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.post_user_web_code_login();\n        }\n      });\n    },\n    async post_user_send_email() {\n      this.countDown = 120;\n      let countDown = setInterval(() => {\n        this.countDown--;\n        if (this.countDown == 0) {\n          clearInterval(countDown);\n        }\n      }, 1000);\n      const res = await user_send_email({\n        email: this.form.email,\n        templateCode: 'user_7'\n      });\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: '发送成功'\n        });\n      }\n    },\n    async post_user_web_code_login() {\n      try {\n        this.loading = true;\n        let now = Date.now();\n        let sign = md5(\n          `timestamp=${now}&userName=${this.form.email}\n          &validCode=${this.form.validCode}&validCodeType=email&key=4yUbWtGLevMv9GVH`\n        );\n        await this.WEB_CODE_LOGIN({\n          timestamp: now,\n          userName: this.form.email,\n          email: this.form.email,\n          validCode: this.form.validCode,\n          validCodeType: 'email',\n          templateCode: 'user_7',\n          sign\n        });\n        this.loading = false;\n      } catch (err) {\n        this.loading = false;\n        this.$message.error('登录失败，请重试！');\n        throw new Error(err);\n      }\n    },\n    goForget() {\n      this.$router.push('/user/login/pass');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.main-login {\n  width: 400px;\n  height: 530px;\n  padding: 60px;\n  box-sizing: border-box;\n  // background: rgba(255, 255, 255, 1);\n  box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n  h3 {\n    text-align: center;\n    margin: 0 0 30px 0;\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n  .login-code {\n    font-size: 14px;\n    padding: 0 0 40px;\n    span {\n      cursor: pointer;\n      font-size: 14px;\n\n      color: rgba(47, 84, 235, 1);\n    }\n  }\n  .relative {\n    position: relative;\n    .clickGet {\n      position: absolute;\n      right: 8px;\n      font-size: 14px;\n      cursor: pointer;\n\n      font-weight: 500;\n      color: rgba(47, 84, 235, 1);\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".main-login": {
          "width": "400px",
          "height": "530px",
          "padding": "60px",
          "box-sizing": "border-box",
          "box-shadow": "0px 4px 8px 0px rgba(5, 36, 163, 0.1)",
          "border-radius": "4px",
          "h3": {
            "text-align": "center",
            "margin": "0 0 30px 0",
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".login-code": {
            "font-size": "14px",
            "padding": "0 0 40px",
            "span": {
              "cursor": "pointer",
              "font-size": "14px",
              "color": "rgba(47, 84, 235, 1)"
            }
          },
          ".relative": {
            "position": "relative",
            ".clickGet": {
              "position": "absolute",
              "right": "8px",
              "font-size": "14px",
              "cursor": "pointer",
              "font-weight": "500",
              "color": "rgba(47, 84, 235, 1)"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/login/qrcode.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- pass -->\n<template>\n  <div class=\"flex flex-direction align-center\" ondragstart=\"return false\">\n    <div class=\"main-login\">\n      <!-- <h3>扫码登录</h3> -->\n      <div v-if=\"netError\">\n        <i class=\"el-icon-loading\" style=\"color: #409eff; font-size: 35px\"></i>\n        <p style=\"margin-top: 120px\">{{ $t('login_pc_0020') }}</p>\n      </div>\n      <!-- {{errorTip }}isNetOff -->\n      <div v-if=\"!netError && !imageAsBase64\">\n        <span>{{ $t('login_pc_0021') }}</span>\n        <p>\n          <i class=\"el-icon-warning-outline\" style=\"color: red; margin-top: 120px\"></i>{{ $t('login_pc_0022') }}<span\n            @click=\"qrcode()\"\n            style=\"color: #409eff; cursor: pointer\"\n            >{{ $t('Universal_0344') }}</span\n          >\n        </p>\n      </div>\n      <div id=\"qrcode\" class=\"qrbox\">\n        <div v-if=\"showQr && !inEffective && !hasSweep && imageAsBase64\" class=\"normalCode\" \n          @mouseover=\"showFreshIcon()\" \n          @mouseleave=\"hideFreshIcon()\">\n          <el-image \n          v-bind:src=\"imageAsBase64\"\n          >\n            <div slot=\"error\" class=\"image-slot\" />\n          </el-image>\n          <i v-if=\"freshShow\" class=\"el-icon-refresh-left\"  @click=\"showQrcode()\"></i>\n        </div>\n        <div class=\"confirmlogin\" v-if=\"hasSweep && !inEffective\">\n          <img :src=\"userImg\" />\n          <p class=\"userName\">{{ userName }}</p>\n          <p class=\"tip\">{{ $t('login_pc_0018') }}</p>\n          <p class=\"returnpass\" @click=\"returnQrcode()\">{{ text }}</p>\n        </div>\n        <div v-if=\"inEffective\">\n          <el-image :src=\"imageAsBase64\"> </el-image>\n          <div class=\"mask\">{{ $t('login_pc_0028') }}</div>\n          <p class=\"returnpass\" @click=\"qrcode()\">{{ $t('Universal_0344') }}</p>\n        </div>\n        <div style=\"margin-top: 20px\" v-if=\"showQr && !inEffective && !hasSweep && !errorTip\">\n          <span>{{ $t('login_pc_0029') }}</span>\n          <p class=\"returnpass\" v-if=\"this.env == 'development'\" @click=\"goForget\">\n            密码登录\n          </p>\n          <p class=\"returnpass\">\n            <span @click=\"downloadAPP\">{{ $t('login_pc_0019') }}</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport os from 'os';\nimport { mapActions } from 'vuex';\nimport { getMachineId } from '@/utils'\nimport { WEB_CODE_LOGIN, WEB_LOGIN } from '@/store/types';\nimport { user_login_qrcode, user_login_get_scan_status } from './server';\nconst QRCode = require('qrcode');\nimport { shell } from 'electron';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      // isNetOff: false,\n      // isReconn:false,\n      errorTip: true,\n      netError: true,\n      loading: true,\n      UDID: '',\n      uuid: '',\n      setIntervalTime: 2000,\n      showQr: true,\n      imageAsBase64: '',\n      userImg: '',\n      userName: '',\n      step: -1,\n      getStatus: '',\n      inEffective: false,\n      hasSweep: false,\n      text: this.$t('login_pc_0023'),\n      env: process.env.NODE_ENV,\n      identityData: '',\n      privKey: '',\n      freshShow:false,\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    step() {\n      if (this.step == 0) {\n        this.getStatusStepChange0();\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    ...mapActions([WEB_CODE_LOGIN, WEB_LOGIN]),\n    showFreshIcon(){\n      this.freshShow = true;\n    },\n    hideFreshIcon(){\n      this.freshShow = false;\n    },\n    S4() {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    },\n    guid() {\n      return this.S4() + '-' + this.S4() + '-' + this.S4() + '-' + this.S4() + '-' + this.S4();\n    },\n    showQrcode(){\n      this.qrcode();\n    },\n    returnQrcode() {\n      this.qrcode();\n      this.hasSweep = false;\n      \n    },\n    getStatusStepChange1() {\n      console.log('getStatusStepChange1', this.step);\n      if (this.uuid) {\n        this.getStatus = setInterval(async () => {\n          const stepValue = await user_login_get_scan_status({\n            uuid: this.uuid\n          });\n          console.log('stepValue', stepValue);\n          if (stepValue.data.step == 0) {\n            this.getStatusStepChange0();\n          }\n          if (stepValue.data.step == 2) {\n            this.step = 2;\n            this.hasSweep = true;\n            this.userImg = stepValue.data.userImg;\n            this.userName = stepValue.data.userName;\n            console.log(this.userImg, this.userName);\n            clearInterval(this.getStatus);\n            this.getStatusStepChange2();\n          }\n          if (stepValue.data.step == 3) {\n            console.log('扫码确认登陆', stepValue.data);\n            this.step = 3;\n            this.userImg = stepValue.data.userImg;\n            this.userName = stepValue.data.userName;\n            this.identityData = stepValue.data.data;\n            clearInterval(this.getStatus);\n            this.getStatusStepChange3();\n          }\n        }, this.setIntervalTime);\n      }\n    },\n    getStatusStepChange2() {\n      console.log('getStatusStepChange2', this.step);\n      if (this.uuid) {\n        this.getStatus = setInterval(async () => {\n          const stepValue = await user_login_get_scan_status({\n            uuid: this.uuid\n          });\n          if (stepValue.data.step == 0) {\n            this.getStatusStepChange0();\n          }\n          if (stepValue.data.step == 3) {\n            this.step = 3;\n            this.userImg = stepValue.data.userImg;\n            this.userName = stepValue.data.userName;\n            this.identityData = stepValue.data.data;\n            clearInterval(this.getStatus);\n            this.getStatusStepChange3();\n          }\n        }, this.setIntervalTime);\n      }\n    },\n    getStatusStepChange0() {\n      this.step = 0;\n      this.inEffective = true;\n      // this.$message.info('二维码已过期');\n      console.log('getStatusStepChange0', this.step);\n      clearInterval(this.getStatus);\n    },\n    async getStatusStepChange3() {\n      console.log('getStatusStepChange3', this.step);\n      this.text = this.$t('login_pc_0015');\n      await this.WEB_LOGIN({ uuid: this.uuid, isScan: true, UDID: this.UDID, identityData: this.identityData, privKey: this.privKey});\n      //判断用户如果被限制登录则刷新二维码\n      if(this.$store.state.common.personalLoginLimitInfo.createTime){\n        this.qrcode();\n        this.hasSweep = false;\n      }\n    },\n    goForget() {\n      this.$router.push('/user/login/pass');\n    },\n    fromBase64(value) {\n      return Buffer.from(value, 'base64');\n    },\n    tobase64(data) {\n      return Buffer.from(data).toString('base64');\n    },\n    async qrcode() {\n      // this.freshShow = false;\n      this.netError = true;\n      console.log(process.env, 'process.env', getMachineId());\n      this.hasSweep = false;\n      this.inEffective = false;\n      clearInterval(this.getStatus);\n      const machineId = getMachineId();\n      console.log(machineId)\n      this.UDID = 'didi.pc-' + machineId;\n      try {\n        const provisioningCipher = new window.libsignal.ProvisioningCipher();\n        const key = await provisioningCipher.getPublicKey();\n        const pubKey = key.pubKey;\n        this.privKey = key.privKey;\n        // 预 解密 后续删除\n        // console.log('原始 privKey',Key.privKey);\n        // const pub_key = this.tobase64(Key.pubKey)\n        // const privKey = this.tobase64(Key.privKey)\n        // // 验证 私钥\n        // console.log('privKey for base64', privKey);\n\n        // let cccprivKey = this.fromBase64(privKey);\n        // console.log('privKey for arraybuffer', privKey);\n        // console.log(Key.privKey == cccprivKey);\n\n        // const dd_key = toArrayBuffer(this.fromBase64('BU2tqrpV/0OtEFdnE3SCqsoULccn7Hlo6y90GqDhV6Fj'));\n        //eslint-disable-next-line\n        // const dd = toArrayBuffer(this.fromBase64('ATBnJlSddqAypEuA2nZptnNPNBc1VPMV6+AMKjbdEOuBFPFSD4n/rhPLoffnD+MlzYBOZWzeQUwsms/utx+wG4nU7CvAhmF2kv7p74BNVn1GDJttHbyCfjANpn7Eu1OdnYS7DMgU3xHhyhvxwHe1DmFbrtZC0aEqI1fFZgfbJ9hdt8kJ5p6PCsIQGmG5/NZSLN9VLGhTMsBU50BLUln+aYu5FossaL7GZ0ptM7bnoE5/'));\n        // console.log(dd, dd_key) \n        // const a = await provisioningCipher.decrypt({\n        //   publicKey: dd_key,\n        //   body: dd\n        // });\n        // console.log(this.tobase64(a));\n        // let result = this.tobase64(a);\n        // result = Buffer.from(a).toString();\n        // result = JSON.parse(result);\n        // console.log(this.fromBase64(result.myPublicKey));\n        let deviceVersion = '';\n        let hostName= '';\n        if (os.type() == 'Darwin') {\n          deviceVersion = `OSX ${process.getSystemVersion()}`;\n          hostName = os.hostname().substring(0, os.hostname().length - 6)\n        } else {\n          hostName = os.hostname();\n          deviceVersion = `${(os.version()).split(':')[0]} ${os.arch()}`;\n        }\n        const code = await user_login_qrcode({\n          UDID: this.UDID,\n          expirationTime: process.env.NODE_ENV == 'development' ? 30000 : 0,\n          deviceId: 'didi.pc-' + machineId,\n          softwareVersion: (os.version()).split(':')[0],\n          deviceName: os.type(),\n          hostName: hostName,\n          deviceVersion: deviceVersion,\n          resolution: window.screen.availWidth + '*' + window.screen.availHeight\n        });\n        if (code.code == 200) {\n          this.errorTip = false;\n          this.uuid = code.data.uuid;\n          //eslint-disable-next-line\n          const url = await QRCode.toDataURL(`${process.env.VUE_APP_HOST}api/user/login/scanCode?uuid=${code.data.uuid}&deviceName=${process.platform == 'darwin' ? 'darwin' : 'win'}&pub_key=${this.tobase64(pubKey)}`);\n          this.imageAsBase64 = url;\n          this.loading = false;\n          this.step = 1;\n          this.getStatusStepChange1();\n          this.showQr = true;\n          this.netError = false;\n        } else {\n          this.errorTip = true;\n          // this.$message.error('服务器error');\n        }\n      } catch (e) {\n        this.netError = false;\n        this.errorTip = true;\n      }\n    },\n    downloadAPP() {\n      shell.openExternal(`https://www.didimessage.com/`);\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    const machineIds = getMachineId();\n    console.log(machineIds);\n    if (this.getStatus) {\n      clearInterval(this.getStatus);\n    }\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.qrcode();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    this.uuid = '';\n    for (let i = 0; i < 10; i++) {\n      clearInterval(i);\n    }\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- pass -->\n<template>\n  <div class=\"flex flex-direction align-center\" ondragstart=\"return false\">\n    <div class=\"main-login\">\n      <!-- <h3>扫码登录</h3> -->\n      <div v-if=\"netError\">\n        <i class=\"el-icon-loading\" style=\"color: #409eff; font-size: 35px\"></i>\n        <p style=\"margin-top: 120px\">{{ $t('login_pc_0020') }}</p>\n      </div>\n      <!-- {{errorTip }}isNetOff -->\n      <div v-if=\"!netError && !imageAsBase64\">\n        <span>{{ $t('login_pc_0021') }}</span>\n        <p>\n          <i class=\"el-icon-warning-outline\" style=\"color: red; margin-top: 120px\"></i>{{ $t('login_pc_0022') }}<span\n            @click=\"qrcode()\"\n            style=\"color: #409eff; cursor: pointer\"\n            >{{ $t('Universal_0344') }}</span\n          >\n        </p>\n      </div>\n      <div id=\"qrcode\" class=\"qrbox\">\n        <div v-if=\"showQr && !inEffective && !hasSweep && imageAsBase64\" class=\"normalCode\" \n          @mouseover=\"showFreshIcon()\" \n          @mouseleave=\"hideFreshIcon()\">\n          <el-image \n          v-bind:src=\"imageAsBase64\"\n          >\n            <div slot=\"error\" class=\"image-slot\" />\n          </el-image>\n          <i v-if=\"freshShow\" class=\"el-icon-refresh-left\"  @click=\"showQrcode()\"></i>\n        </div>\n        <div class=\"confirmlogin\" v-if=\"hasSweep && !inEffective\">\n          <img :src=\"userImg\" />\n          <p class=\"userName\">{{ userName }}</p>\n          <p class=\"tip\">{{ $t('login_pc_0018') }}</p>\n          <p class=\"returnpass\" @click=\"returnQrcode()\">{{ text }}</p>\n        </div>\n        <div v-if=\"inEffective\">\n          <el-image :src=\"imageAsBase64\"> </el-image>\n          <div class=\"mask\">{{ $t('login_pc_0028') }}</div>\n          <p class=\"returnpass\" @click=\"qrcode()\">{{ $t('Universal_0344') }}</p>\n        </div>\n        <div style=\"margin-top: 20px\" v-if=\"showQr && !inEffective && !hasSweep && !errorTip\">\n          <span>{{ $t('login_pc_0029') }}</span>\n          <p class=\"returnpass\" v-if=\"this.env == 'development'\" @click=\"goForget\">\n            密码登录\n          </p>\n          <p class=\"returnpass\">\n            <span @click=\"downloadAPP\">{{ $t('login_pc_0019') }}</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport os from 'os';\nimport { mapActions } from 'vuex';\nimport { getMachineId } from '@/utils'\nimport { WEB_CODE_LOGIN, WEB_LOGIN } from '@/store/types';\nimport { user_login_qrcode, user_login_get_scan_status } from './server';\nconst QRCode = require('qrcode');\nimport { shell } from 'electron';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      // isNetOff: false,\n      // isReconn:false,\n      errorTip: true,\n      netError: true,\n      loading: true,\n      UDID: '',\n      uuid: '',\n      setIntervalTime: 2000,\n      showQr: true,\n      imageAsBase64: '',\n      userImg: '',\n      userName: '',\n      step: -1,\n      getStatus: '',\n      inEffective: false,\n      hasSweep: false,\n      text: this.$t('login_pc_0023'),\n      env: process.env.NODE_ENV,\n      identityData: '',\n      privKey: '',\n      freshShow:false,\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    step() {\n      if (this.step == 0) {\n        this.getStatusStepChange0();\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    ...mapActions([WEB_CODE_LOGIN, WEB_LOGIN]),\n    showFreshIcon(){\n      this.freshShow = true;\n    },\n    hideFreshIcon(){\n      this.freshShow = false;\n    },\n    S4() {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    },\n    guid() {\n      return this.S4() + '-' + this.S4() + '-' + this.S4() + '-' + this.S4() + '-' + this.S4();\n    },\n    showQrcode(){\n      this.qrcode();\n    },\n    returnQrcode() {\n      this.qrcode();\n      this.hasSweep = false;\n      \n    },\n    getStatusStepChange1() {\n      console.log('getStatusStepChange1', this.step);\n      if (this.uuid) {\n        this.getStatus = setInterval(async () => {\n          const stepValue = await user_login_get_scan_status({\n            uuid: this.uuid\n          });\n          console.log('stepValue', stepValue);\n          if (stepValue.data.step == 0) {\n            this.getStatusStepChange0();\n          }\n          if (stepValue.data.step == 2) {\n            this.step = 2;\n            this.hasSweep = true;\n            this.userImg = stepValue.data.userImg;\n            this.userName = stepValue.data.userName;\n            console.log(this.userImg, this.userName);\n            clearInterval(this.getStatus);\n            this.getStatusStepChange2();\n          }\n          if (stepValue.data.step == 3) {\n            console.log('扫码确认登陆', stepValue.data);\n            this.step = 3;\n            this.userImg = stepValue.data.userImg;\n            this.userName = stepValue.data.userName;\n            this.identityData = stepValue.data.data;\n            clearInterval(this.getStatus);\n            this.getStatusStepChange3();\n          }\n        }, this.setIntervalTime);\n      }\n    },\n    getStatusStepChange2() {\n      console.log('getStatusStepChange2', this.step);\n      if (this.uuid) {\n        this.getStatus = setInterval(async () => {\n          const stepValue = await user_login_get_scan_status({\n            uuid: this.uuid\n          });\n          if (stepValue.data.step == 0) {\n            this.getStatusStepChange0();\n          }\n          if (stepValue.data.step == 3) {\n            this.step = 3;\n            this.userImg = stepValue.data.userImg;\n            this.userName = stepValue.data.userName;\n            this.identityData = stepValue.data.data;\n            clearInterval(this.getStatus);\n            this.getStatusStepChange3();\n          }\n        }, this.setIntervalTime);\n      }\n    },\n    getStatusStepChange0() {\n      this.step = 0;\n      this.inEffective = true;\n      // this.$message.info('二维码已过期');\n      console.log('getStatusStepChange0', this.step);\n      clearInterval(this.getStatus);\n    },\n    async getStatusStepChange3() {\n      console.log('getStatusStepChange3', this.step);\n      this.text = this.$t('login_pc_0015');\n      await this.WEB_LOGIN({ uuid: this.uuid, isScan: true, UDID: this.UDID, identityData: this.identityData, privKey: this.privKey});\n      //判断用户如果被限制登录则刷新二维码\n      if(this.$store.state.common.personalLoginLimitInfo.createTime){\n        this.qrcode();\n        this.hasSweep = false;\n      }\n    },\n    goForget() {\n      this.$router.push('/user/login/pass');\n    },\n    fromBase64(value) {\n      return Buffer.from(value, 'base64');\n    },\n    tobase64(data) {\n      return Buffer.from(data).toString('base64');\n    },\n    async qrcode() {\n      // this.freshShow = false;\n      this.netError = true;\n      console.log(process.env, 'process.env', getMachineId());\n      this.hasSweep = false;\n      this.inEffective = false;\n      clearInterval(this.getStatus);\n      const machineId = getMachineId();\n      console.log(machineId)\n      this.UDID = 'didi.pc-' + machineId;\n      try {\n        const provisioningCipher = new window.libsignal.ProvisioningCipher();\n        const key = await provisioningCipher.getPublicKey();\n        const pubKey = key.pubKey;\n        this.privKey = key.privKey;\n        // 预 解密 后续删除\n        // console.log('原始 privKey',Key.privKey);\n        // const pub_key = this.tobase64(Key.pubKey)\n        // const privKey = this.tobase64(Key.privKey)\n        // // 验证 私钥\n        // console.log('privKey for base64', privKey);\n\n        // let cccprivKey = this.fromBase64(privKey);\n        // console.log('privKey for arraybuffer', privKey);\n        // console.log(Key.privKey == cccprivKey);\n\n        // const dd_key = toArrayBuffer(this.fromBase64('BU2tqrpV/0OtEFdnE3SCqsoULccn7Hlo6y90GqDhV6Fj'));\n        //eslint-disable-next-line\n        // const dd = toArrayBuffer(this.fromBase64('ATBnJlSddqAypEuA2nZptnNPNBc1VPMV6+AMKjbdEOuBFPFSD4n/rhPLoffnD+MlzYBOZWzeQUwsms/utx+wG4nU7CvAhmF2kv7p74BNVn1GDJttHbyCfjANpn7Eu1OdnYS7DMgU3xHhyhvxwHe1DmFbrtZC0aEqI1fFZgfbJ9hdt8kJ5p6PCsIQGmG5/NZSLN9VLGhTMsBU50BLUln+aYu5FossaL7GZ0ptM7bnoE5/'));\n        // console.log(dd, dd_key) \n        // const a = await provisioningCipher.decrypt({\n        //   publicKey: dd_key,\n        //   body: dd\n        // });\n        // console.log(this.tobase64(a));\n        // let result = this.tobase64(a);\n        // result = Buffer.from(a).toString();\n        // result = JSON.parse(result);\n        // console.log(this.fromBase64(result.myPublicKey));\n        let deviceVersion = '';\n        let hostName= '';\n        if (os.type() == 'Darwin') {\n          deviceVersion = `OSX ${process.getSystemVersion()}`;\n          hostName = os.hostname().substring(0, os.hostname().length - 6)\n        } else {\n          hostName = os.hostname();\n          deviceVersion = `${(os.version()).split(':')[0]} ${os.arch()}`;\n        }\n        const code = await user_login_qrcode({\n          UDID: this.UDID,\n          expirationTime: process.env.NODE_ENV == 'development' ? 30000 : 0,\n          deviceId: 'didi.pc-' + machineId,\n          softwareVersion: (os.version()).split(':')[0],\n          deviceName: os.type(),\n          hostName: hostName,\n          deviceVersion: deviceVersion,\n          resolution: window.screen.availWidth + '*' + window.screen.availHeight\n        });\n        if (code.code == 200) {\n          this.errorTip = false;\n          this.uuid = code.data.uuid;\n          //eslint-disable-next-line\n          const url = await QRCode.toDataURL(`${process.env.VUE_APP_HOST}api/user/login/scanCode?uuid=${code.data.uuid}&deviceName=${process.platform == 'darwin' ? 'darwin' : 'win'}&pub_key=${this.tobase64(pubKey)}`);\n          this.imageAsBase64 = url;\n          this.loading = false;\n          this.step = 1;\n          this.getStatusStepChange1();\n          this.showQr = true;\n          this.netError = false;\n        } else {\n          this.errorTip = true;\n          // this.$message.error('服务器error');\n        }\n      } catch (e) {\n        this.netError = false;\n        this.errorTip = true;\n      }\n    },\n    downloadAPP() {\n      shell.openExternal(`https://www.didimessage.com/`);\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    const machineIds = getMachineId();\n    console.log(machineIds);\n    if (this.getStatus) {\n      clearInterval(this.getStatus);\n    }\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.qrcode();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    this.uuid = '';\n    for (let i = 0; i < 10; i++) {\n      clearInterval(i);\n    }\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.main-login {\n  width: 400px;\n  // height: 530px;\n  height: 440px;\n  padding: 60px;\n  box-sizing: border-box;\n  // background: rgba(255, 255, 255, 1);\n  box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n  text-align: center;\n  h3 {\n    text-align: center;\n    margin: 0 0 30px 0;\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n  .confirmlogin {\n    margin-top: -30px;\n    p {\n      font-size: 14px;\n    }\n    p.tip {\n      margin: 50px 0 30px;\n    }\n  }\n  .qrbox {\n    width: 180px;\n    height: 180px;\n    position: relative;\n    .normalCode{\n      \n    }\n    .el-icon-refresh-left{\n      position: absolute;\n      top: 70px;\n      left: 70px;\n      color: #fff;\n      font-size: 34px;\n      background: rgba(0, 0, 0, 0.5);\n      cursor: pointer;\n    }\n    .mask {\n      width: 180px;\n      height: 180px;\n      background: rgba(0, 0, 0, 0.5);\n      position: absolute;\n      top: 0;\n      left: 0;\n      color: #fff;\n      line-height: 180px;\n    }\n  }\n\n  .returnpass {\n    margin-top: 20px;\n    cursor: pointer;\n    font-size: 14px;\n\n    color: rgba(47, 84, 235, 1);\n  }\n  .login-code {\n    font-size: 14px;\n    padding: 0 0 40px;\n  }\n  .relative {\n    position: relative;\n    .clickGet {\n      position: absolute;\n      right: 8px;\n      font-size: 14px;\n      cursor: pointer;\n\n      font-weight: 500;\n      color: rgba(47, 84, 235, 1);\n    }\n  }\n  #qrcode {\n    display: inline-block;\n    img {\n      width: 150px;\n      background-color: #fff; //设置白色背景色\n      padding: 6px; // 利用padding的特性，挤出白边\n      height: 150px;\n      border-radius: 100px;\n    }\n  }\n  .userName {\n    font-weight: 700;\n  }\n  .appStyle {\n    text-decoration: none;\n    color: #2f54eb;\n    font-size: 14px;\n\n    &:link {\n      text-decoration: none;\n      color: #2f54eb;\n    }\n    &:hover {\n      text-decoration: none;\n      color: #2f54eb;\n    }\n    &:active {\n      text-decoration: none;\n      color: #2f54eb;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".main-login": {
          "width": "400px",
          "height": "440px",
          "padding": "60px",
          "box-sizing": "border-box",
          "box-shadow": "0px 4px 8px 0px rgba(5, 36, 163, 0.1)",
          "border-radius": "4px",
          "text-align": "center",
          "h3": {
            "text-align": "center",
            "margin": "0 0 30px 0",
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".confirmlogin": {
            "margin-top": "-30px",
            "p": {
              "font-size": "14px"
            },
            "p.tip": {
              "margin": "50px 0 30px"
            }
          },
          ".qrbox": {
            "width": "180px",
            "height": "180px",
            "position": "relative",
            ".normalCode": {},
            ".el-icon-refresh-left": {
              "position": "absolute",
              "top": "70px",
              "left": "70px",
              "color": "#fff",
              "font-size": "34px",
              "background": "rgba(0, 0, 0, 0.5)",
              "cursor": "pointer"
            },
            ".mask": {
              "width": "180px",
              "height": "180px",
              "background": "rgba(0, 0, 0, 0.5)",
              "position": "absolute",
              "top": "0",
              "left": "0",
              "color": "#fff",
              "line-height": "180px"
            }
          },
          ".returnpass": {
            "margin-top": "20px",
            "cursor": "pointer",
            "font-size": "14px",
            "color": "rgba(47, 84, 235, 1)"
          },
          ".login-code": {
            "font-size": "14px",
            "padding": "0 0 40px"
          },
          ".relative": {
            "position": "relative",
            ".clickGet": {
              "position": "absolute",
              "right": "8px",
              "font-size": "14px",
              "cursor": "pointer",
              "font-weight": "500",
              "color": "rgba(47, 84, 235, 1)"
            }
          },
          "#qrcode": {
            "display": "inline-block",
            "img": {
              "width": "150px",
              "background-color": "#fff",
              "padding": "6px",
              "height": "150px",
              "border-radius": "100px"
            }
          },
          ".userName": {
            "font-weight": "700"
          },
          ".appStyle": {
            "text-decoration": "none",
            "color": "#2f54eb",
            "font-size": "14px",
            "&:link": {
              "text-decoration": "none",
              "color": "#2f54eb"
            },
            "&:hover": {
              "text-decoration": "none",
              "color": "#2f54eb"
            },
            "&:active": {
              "text-decoration": "none",
              "color": "#2f54eb"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/login/checking.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- pass -->\n<template>\n  <div class=\"checking\">\n    <div class=\"main-login flex flex-direction align-center\">\n      <h3>登录</h3>\n      <h4>请先进行谷歌验证</h4>\n      <div class=\"box\">\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input1\" @input=\"next(2, $event)\" v-model=\"input1\" />\n        </span>\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input2\" @input=\"next(3, $event)\" v-on:keyup.delete=\"deleted(1, $event)\" v-model=\"input2\" />\n        </span>\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input3\" @input=\"next(4, $event)\" v-on:keyup.delete=\"deleted(2, $event)\" v-model=\"input3\" />\n        </span>\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input4\" @input=\"next(5, $event)\" v-on:keyup.delete=\"deleted(3, $event)\" v-model=\"input4\" />\n        </span>\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input5\" @input=\"next(6, $event)\" v-on:keyup.delete=\"deleted(4, $event)\" v-model=\"input5\" />\n        </span>\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input6\" v-model=\"input6\" v-on:keyup.delete=\"deleted(5, $event)\" />\n        </span>\n      </div>\n      <el-button style=\"width: 60%; height: 50px; margin-top: 60px\" type=\"primary\" @click=\"submitForm\">提交验证</el-button>\n      <div class=\"words\">\n        <span>如您无法验证，请联系客服</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { WEB_LOGIN, WEB_CODE_LOGIN } from '@/store/types';\nimport { mapActions } from 'vuex';\n// import { md5 } from \"@/utils\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      autofocus: 1,\n      input1: '',\n      input2: '',\n      input3: '',\n      input4: '',\n      input5: '',\n      input6: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([WEB_LOGIN, WEB_CODE_LOGIN]),\n    next(num, e) {\n      console.log(e);\n      if (isNaN(Number(e.target.value)) || e.data == null) {\n        return;\n      } else {\n        this.$refs[`input${num}`].focus();\n      }\n    },\n    deleted(num, e) {\n      this.$refs[`input${num}`].focus();\n      e.stopPropagation();\n    },\n    submitForm() {\n      if (this.input1 && this.input2 && this.input3 && this.input4 && this.input5 && this.input6) {\n        this.WEB_LOGIN({\n          ...this.$route.query,\n          googleCode: `${this.input1}${this.input2}${this.input3}${this.input4}${this.input5}${this.input6}`\n        });\n      } else {\n        this.$message.warning('请输入谷歌验证码');\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- pass -->\n<template>\n  <div class=\"checking\">\n    <div class=\"main-login flex flex-direction align-center\">\n      <h3>登录</h3>\n      <h4>请先进行谷歌验证</h4>\n      <div class=\"box\">\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input1\" @input=\"next(2, $event)\" v-model=\"input1\" />\n        </span>\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input2\" @input=\"next(3, $event)\" v-on:keyup.delete=\"deleted(1, $event)\" v-model=\"input2\" />\n        </span>\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input3\" @input=\"next(4, $event)\" v-on:keyup.delete=\"deleted(2, $event)\" v-model=\"input3\" />\n        </span>\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input4\" @input=\"next(5, $event)\" v-on:keyup.delete=\"deleted(3, $event)\" v-model=\"input4\" />\n        </span>\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input5\" @input=\"next(6, $event)\" v-on:keyup.delete=\"deleted(4, $event)\" v-model=\"input5\" />\n        </span>\n        <span class=\"square\">\n          <input maxlength=\"1\" ref=\"input6\" v-model=\"input6\" v-on:keyup.delete=\"deleted(5, $event)\" />\n        </span>\n      </div>\n      <el-button style=\"width: 60%; height: 50px; margin-top: 60px\" type=\"primary\" @click=\"submitForm\">提交验证</el-button>\n      <div class=\"words\">\n        <span>如您无法验证，请联系客服</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { WEB_LOGIN, WEB_CODE_LOGIN } from '@/store/types';\nimport { mapActions } from 'vuex';\n// import { md5 } from \"@/utils\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      autofocus: 1,\n      input1: '',\n      input2: '',\n      input3: '',\n      input4: '',\n      input5: '',\n      input6: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([WEB_LOGIN, WEB_CODE_LOGIN]),\n    next(num, e) {\n      console.log(e);\n      if (isNaN(Number(e.target.value)) || e.data == null) {\n        return;\n      } else {\n        this.$refs[`input${num}`].focus();\n      }\n    },\n    deleted(num, e) {\n      this.$refs[`input${num}`].focus();\n      e.stopPropagation();\n    },\n    submitForm() {\n      if (this.input1 && this.input2 && this.input3 && this.input4 && this.input5 && this.input6) {\n        this.WEB_LOGIN({\n          ...this.$route.query,\n          googleCode: `${this.input1}${this.input2}${this.input3}${this.input4}${this.input5}${this.input6}`\n        });\n      } else {\n        this.$message.warning('请输入谷歌验证码');\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.main-login {\n  width: 400px;\n  height: 530px;\n  padding: 60px;\n  box-sizing: border-box;\n  // background: rgba(255, 255, 255, 1);\n  box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n  h3 {\n    text-align: center;\n    margin: 0 0 30px 0;\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n  h4 {\n    font-size: 16px;\n\n    font-weight: 400;\n    color: rgba(51, 51, 51, 1);\n    text-align: center;\n    line-height: 40px;\n  }\n  .box {\n    width: 100%;\n    margin-top: 20px;\n  }\n  .square {\n    width: 40px;\n    height: 50px;\n    background: rgba(247, 247, 250, 1);\n    border-radius: 4px;\n    display: inline-block;\n    text-align: center;\n    line-height: 50px;\n    font-size: 24px;\n\n    font-weight: 500;\n    margin: 0 5px 0 0;\n    input {\n      text-align: center;\n      color: rgba(47, 84, 235, 1);\n      width: 100%;\n      background: none;\n      outline: none;\n      border: none;\n    }\n  }\n  .words {\n    font-size: 14px;\n\n    font-weight: 400;\n    color: rgba(47, 84, 235, 1);\n    line-height: 56px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".main-login": {
          "width": "400px",
          "height": "530px",
          "padding": "60px",
          "box-sizing": "border-box",
          "box-shadow": "0px 4px 8px 0px rgba(5, 36, 163, 0.1)",
          "border-radius": "4px",
          "h3": {
            "text-align": "center",
            "margin": "0 0 30px 0",
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          "h4": {
            "font-size": "16px",
            "font-weight": "400",
            "color": "rgba(51, 51, 51, 1)",
            "text-align": "center",
            "line-height": "40px"
          },
          ".box": {
            "width": "100%",
            "margin-top": "20px"
          },
          ".square": {
            "width": "40px",
            "height": "50px",
            "background": "rgba(247, 247, 250, 1)",
            "border-radius": "4px",
            "display": "inline-block",
            "text-align": "center",
            "line-height": "50px",
            "font-size": "24px",
            "font-weight": "500",
            "margin": "0 5px 0 0",
            "input": {
              "text-align": "center",
              "color": "rgba(47, 84, 235, 1)",
              "width": "100%",
              "background": "none",
              "outline": "none",
              "border": "none"
            }
          },
          ".words": {
            "font-size": "14px",
            "font-weight": "400",
            "color": "rgba(47, 84, 235, 1)",
            "line-height": "56px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/login/leadinkey.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- pass -->\n<template>\n  <div class=\"email\">\n    <div class=\"main-login\">\n      <!-- <div class=\"flex\" style=\"justify-content:center;\">\n        <img src=\"../../../assets/images/dun.png\" alt=\"\">\n      </div>-->\n      <div class=\"key-text\">使用密钥解锁您的已加密历史消息</div>\n\n      <div class=\"input-box\">\n        <p class=\"keydes\">\n          请粘贴密钥至此处:\n          <span @click=\"downloadWind()\">从云端导入</span>\n        </p>\n        <el-input type=\"textarea\" :rows=\"2\" placeholder=\"请输入密钥\" v-model=\"myCode\" class=\"secretKeyArea\"></el-input>\n      </div>\n      <div class=\"tip\">\n        <p>密钥是您阅读消息的钥匙</p>\n        <p>如果您没有导入密钥，将无法解密信息</p>\n      </div>\n      <div class=\"btn\">\n        <el-button style=\"width: 100%\" type=\"primary\" @click=\"restore\">确认恢复</el-button>\n      </div>\n      <div class=\"bottom\">\n        如果您的密钥丢失，请您重新\n        <span style=\"color: #2F54EB; cursor: pointer\" @click=\"create\">创建密钥</span>\n      </div>\n    </div>\n    <ImportKey ref=\"ImportKey\" @importback=\"importback\" :creatFlag=\"creatFlag\" :first=\"true\"></ImportKey>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { WEB_LOGIN, WEB_CODE_LOGIN } from '@/store/types';\nimport { GET_PUB_KEY_AND_SAVE } from '@/store/types';\nimport { mapActions } from 'vuex';\n// import { remote } from \"electron\";\n// const ipc = require('electron').ipcRenderer;\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      myCode: '',\n      secretKey: '',\n      short_secretKey: '',\n      creatFlag: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([WEB_LOGIN, WEB_CODE_LOGIN]),\n    importback(rsaPrivate) {\n      this.secretKey = rsaPrivate;\n      this.short_secretKey = rsaPrivate.slice(0, 50) + '...';\n    },\n    downloadWind() {\n      this.$refs.ImportKey.opendialog();\n    },\n    async restore() {\n      if (this.myCode == '') {\n        this.$message.error('不能为空');\n        return;\n      }\n      await this.$store.dispatch(GET_PUB_KEY_AND_SAVE, {\n        privateKey: this.myCode\n      });\n      this.WEB_LOGIN(this.$store.state.common.loginInfo);\n    },\n\n    create() {\n      this.$confirm('重新创建密钥后，将无法解密您的历史消息确定重新创建吗？', '系统提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        center: true,\n        customClass: 'messageKey'\n      })\n        .then(() => {\n          this.$router.push('/user/login/creatkey');\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消操作'\n          });\n        });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    //效果会被覆盖，暂时没有解决方案\n    // remote.getCurrentWindow().setSize(380, 500);//登陆页面初始化大小\n    // remote.getCurrentWindow().center();//窗口居中\n    // ipc.send('changeMax',false); // 没有登陆 禁止最大化\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- pass -->\n<template>\n  <div class=\"email\">\n    <div class=\"main-login\">\n      <!-- <div class=\"flex\" style=\"justify-content:center;\">\n        <img src=\"../../../assets/images/dun.png\" alt=\"\">\n      </div>-->\n      <div class=\"key-text\">使用密钥解锁您的已加密历史消息</div>\n\n      <div class=\"input-box\">\n        <p class=\"keydes\">\n          请粘贴密钥至此处:\n          <span @click=\"downloadWind()\">从云端导入</span>\n        </p>\n        <el-input type=\"textarea\" :rows=\"2\" placeholder=\"请输入密钥\" v-model=\"myCode\" class=\"secretKeyArea\"></el-input>\n      </div>\n      <div class=\"tip\">\n        <p>密钥是您阅读消息的钥匙</p>\n        <p>如果您没有导入密钥，将无法解密信息</p>\n      </div>\n      <div class=\"btn\">\n        <el-button style=\"width: 100%\" type=\"primary\" @click=\"restore\">确认恢复</el-button>\n      </div>\n      <div class=\"bottom\">\n        如果您的密钥丢失，请您重新\n        <span style=\"color: #2F54EB; cursor: pointer\" @click=\"create\">创建密钥</span>\n      </div>\n    </div>\n    <ImportKey ref=\"ImportKey\" @importback=\"importback\" :creatFlag=\"creatFlag\" :first=\"true\"></ImportKey>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { WEB_LOGIN, WEB_CODE_LOGIN } from '@/store/types';\nimport { GET_PUB_KEY_AND_SAVE } from '@/store/types';\nimport { mapActions } from 'vuex';\n// import { remote } from \"electron\";\n// const ipc = require('electron').ipcRenderer;\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      myCode: '',\n      secretKey: '',\n      short_secretKey: '',\n      creatFlag: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([WEB_LOGIN, WEB_CODE_LOGIN]),\n    importback(rsaPrivate) {\n      this.secretKey = rsaPrivate;\n      this.short_secretKey = rsaPrivate.slice(0, 50) + '...';\n    },\n    downloadWind() {\n      this.$refs.ImportKey.opendialog();\n    },\n    async restore() {\n      if (this.myCode == '') {\n        this.$message.error('不能为空');\n        return;\n      }\n      await this.$store.dispatch(GET_PUB_KEY_AND_SAVE, {\n        privateKey: this.myCode\n      });\n      this.WEB_LOGIN(this.$store.state.common.loginInfo);\n    },\n\n    create() {\n      this.$confirm('重新创建密钥后，将无法解密您的历史消息确定重新创建吗？', '系统提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        center: true,\n        customClass: 'messageKey'\n      })\n        .then(() => {\n          this.$router.push('/user/login/creatkey');\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消操作'\n          });\n        });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    //效果会被覆盖，暂时没有解决方案\n    // remote.getCurrentWindow().setSize(380, 500);//登陆页面初始化大小\n    // remote.getCurrentWindow().center();//窗口居中\n    // ipc.send('changeMax',false); // 没有登陆 禁止最大化\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.messageKey {\n  width: 60%;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.email {\n  position: absolute;\n  top: 80px;\n}\n.main-login {\n  width: 400px;\n  height: 530px;\n  padding: 20px 60px 60px 60px;\n  margin-top: -20px;\n  box-sizing: border-box;\n  // background: rgba(255, 255, 255, 1);\n  box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n  .keydes {\n    margin-bottom: 10px;\n    font-size: 14px;\n    span {\n      float: right;\n      color: rgb(47, 84, 235);\n      cursor: pointer;\n    }\n  }\n  h3 {\n    text-align: center;\n    margin: 0 0 30px 0;\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n  .key-text {\n    margin-top: 18px;\n    height: 16px;\n    font-size: 16px;\n\n    font-weight: 500;\n    color: rgba(51, 51, 51, 1);\n    text-align: center;\n  }\n  .input-box {\n    width: 300px;\n    margin-top: 30px;\n  }\n  .tip {\n    margin-top: 17px;\n    width: 240px;\n    height: 66px;\n    font-size: 12px;\n\n    font-weight: 400;\n    color: rgba(51, 51, 51, 1);\n    line-height: 33px;\n  }\n  .btn {\n    margin-top: 38px;\n  }\n  .key-input {\n    border: none;\n    border-bottom: 1px solid rgba(151, 151, 151, 1);\n    font-size: 16px;\n\n    font-weight: 400;\n    color: rgba(153, 153, 153, 1);\n  }\n  .bottom {\n    margin-top: 18px;\n    width: 300px;\n    height: 14px;\n    line-height: 24px;\n    font-size: 14px;\n\n    font-weight: 400;\n    color: rgba(51, 51, 51, 1);\n    text-align: center;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".messageKey": {
          "width": "60%"
        }
      },
      {
        ".email": {
          "position": "absolute",
          "top": "80px"
        },
        ".main-login": {
          "width": "400px",
          "height": "530px",
          "padding": "20px 60px 60px 60px",
          "margin-top": "-20px",
          "box-sizing": "border-box",
          "box-shadow": "0px 4px 8px 0px rgba(5, 36, 163, 0.1)",
          "border-radius": "4px",
          ".keydes": {
            "margin-bottom": "10px",
            "font-size": "14px",
            "span": {
              "float": "right",
              "color": "rgb(47, 84, 235)",
              "cursor": "pointer"
            }
          },
          "h3": {
            "text-align": "center",
            "margin": "0 0 30px 0",
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".key-text": {
            "margin-top": "18px",
            "height": "16px",
            "font-size": "16px",
            "font-weight": "500",
            "color": "rgba(51, 51, 51, 1)",
            "text-align": "center"
          },
          ".input-box": {
            "width": "300px",
            "margin-top": "30px"
          },
          ".tip": {
            "margin-top": "17px",
            "width": "240px",
            "height": "66px",
            "font-size": "12px",
            "font-weight": "400",
            "color": "rgba(51, 51, 51, 1)",
            "line-height": "33px"
          },
          ".btn": {
            "margin-top": "38px"
          },
          ".key-input": {
            "border": "none",
            "border-bottom": "1px solid rgba(151, 151, 151, 1)",
            "font-size": "16px",
            "font-weight": "400",
            "color": "rgba(153, 153, 153, 1)"
          },
          ".bottom": {
            "margin-top": "18px",
            "width": "300px",
            "height": "14px",
            "line-height": "24px",
            "font-size": "14px",
            "font-weight": "400",
            "color": "rgba(51, 51, 51, 1)",
            "text-align": "center"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/login/creatkey.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- pass -->\n<template>\n  <div class=\"email\">\n    <div class=\"main-login\">\n      <div class=\"flex outbox\" style=\"justify-content: center\">\n        <img src=\"../../../assets/images/dun.png\" alt />\n        <div class=\"key-text\">\n          <p>我们已为您创建密钥</p>\n          <p>您的消息只有您自己可以看见</p>\n        </div>\n      </div>\n      <div class=\"key-box\">\n        <p>密钥</p>\n        <p class=\"overtip\" id=\"copyMy\">{{ this.privateKey }}</p>\n        <p style=\"color: #2F54EB\" @click=\"copyFn()\">复制密钥</p>\n      </div>\n      <div class=\"btn\">\n        <el-button style=\"width: 100%\" type=\"primary\" @click=\"restore\">确定</el-button>\n      </div>\n      <div class=\"bottom\">\n        如果密钥丢失，您将无法恢复您的聊天记录 请您妥善保管您的密钥\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { getRsaKeys } from '@/utils/rsa';\nimport { send_my_rsa } from '@/server';\nimport { mapActions } from 'vuex';\nimport { SET_LOGIN_FINISHED, SET_USER_PRIVATE_KEY } from '@/store/types';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      publicKey: '',\n      privateKey: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([SET_LOGIN_FINISHED]),\n    getKey() {\n      let that = this;\n      function getRsa(a, b) {\n        that.privateKey = a;\n        that.publicKey = b;\n        that.sendCode(a, b);\n      }\n      getRsaKeys(getRsa);\n    },\n    async sendCode(priKey, pubKey) {\n      let res = await send_my_rsa({\n        rsaPub: pubKey\n      });\n      if (res.code == 200) {\n        let item = {\n          rsa_pub: res.data.rsaPub,\n          rsa_pub_version: res.data.rsaPubVersion,\n          rsa_pri: priKey\n        };\n        this.$store.dispatch(SET_USER_PRIVATE_KEY, item);\n      }\n    },\n    // 复制\n    copyFn() {\n      const { clipboard } = require('electron');\n      clipboard.writeText(this.privateKey);\n      this.$message.success('复制成功');\n    },\n    restore() {\n      this.SET_LOGIN_FINISHED('true');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getKey();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- pass -->\n<template>\n  <div class=\"email\">\n    <div class=\"main-login\">\n      <div class=\"flex outbox\" style=\"justify-content: center\">\n        <img src=\"../../../assets/images/dun.png\" alt />\n        <div class=\"key-text\">\n          <p>我们已为您创建密钥</p>\n          <p>您的消息只有您自己可以看见</p>\n        </div>\n      </div>\n      <div class=\"key-box\">\n        <p>密钥</p>\n        <p class=\"overtip\" id=\"copyMy\">{{ this.privateKey }}</p>\n        <p style=\"color: #2F54EB\" @click=\"copyFn()\">复制密钥</p>\n      </div>\n      <div class=\"btn\">\n        <el-button style=\"width: 100%\" type=\"primary\" @click=\"restore\">确定</el-button>\n      </div>\n      <div class=\"bottom\">\n        如果密钥丢失，您将无法恢复您的聊天记录 请您妥善保管您的密钥\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { getRsaKeys } from '@/utils/rsa';\nimport { send_my_rsa } from '@/server';\nimport { mapActions } from 'vuex';\nimport { SET_LOGIN_FINISHED, SET_USER_PRIVATE_KEY } from '@/store/types';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      publicKey: '',\n      privateKey: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([SET_LOGIN_FINISHED]),\n    getKey() {\n      let that = this;\n      function getRsa(a, b) {\n        that.privateKey = a;\n        that.publicKey = b;\n        that.sendCode(a, b);\n      }\n      getRsaKeys(getRsa);\n    },\n    async sendCode(priKey, pubKey) {\n      let res = await send_my_rsa({\n        rsaPub: pubKey\n      });\n      if (res.code == 200) {\n        let item = {\n          rsa_pub: res.data.rsaPub,\n          rsa_pub_version: res.data.rsaPubVersion,\n          rsa_pri: priKey\n        };\n        this.$store.dispatch(SET_USER_PRIVATE_KEY, item);\n      }\n    },\n    // 复制\n    copyFn() {\n      const { clipboard } = require('electron');\n      clipboard.writeText(this.privateKey);\n      this.$message.success('复制成功');\n    },\n    restore() {\n      this.SET_LOGIN_FINISHED('true');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getKey();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.main-login {\n  width: 400px;\n  // height: 530px;\n  padding: 0 60px;\n  box-sizing: border-box;\n  // background: rgba(255, 255, 255, 1);\n  // box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n  .key-box {\n    margin: 20px 0;\n    p {\n      font-size: 16px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n      line-height: 20px;\n      text-align: center;\n      margin: 20px 0;\n    }\n    .overtip {\n      text-align: left;\n      width: 290px;\n      height: 61px;\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n      line-height: 20px;\n      word-break: break-all;\n      word-wrap: break-word;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      display: -webkit-box;\n      -webkit-line-clamp: 3;\n      -webkit-box-orient: vertical;\n    }\n  }\n  .key-text {\n    margin-top: 10px;\n    margin-left: 12px;\n    line-height: 24px;\n    flex: 1;\n    height: 44px;\n    font-size: 15px;\n\n    font-weight: 500;\n    color: rgba(51, 51, 51, 1);\n  }\n  .btn {\n    margin-top: 38px;\n  }\n  .key-input {\n    border: none;\n    border-bottom: 1px solid rgba(151, 151, 151, 1);\n    font-size: 16px;\n\n    font-weight: 400;\n    color: rgba(153, 153, 153, 1);\n  }\n  .bottom {\n    margin-top: 18px;\n    width: 265px;\n    height: 38px;\n    font-size: 14px;\n    font-weight: 400;\n    color: rgba(233, 129, 18, 1);\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".main-login": {
          "width": "400px",
          "padding": "0 60px",
          "box-sizing": "border-box",
          "border-radius": "4px",
          ".key-box": {
            "margin": "20px 0",
            "p": {
              "font-size": "16px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)",
              "line-height": "20px",
              "text-align": "center",
              "margin": "20px 0"
            },
            ".overtip": {
              "text-align": "left",
              "width": "290px",
              "height": "61px",
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)",
              "line-height": "20px",
              "word-break": "break-all",
              "word-wrap": "break-word",
              "overflow": "hidden",
              "text-overflow": "ellipsis",
              "display": "-webkit-box",
              "-webkit-line-clamp": "3",
              "-webkit-box-orient": "vertical"
            }
          },
          ".key-text": {
            "margin-top": "10px",
            "margin-left": "12px",
            "line-height": "24px",
            "flex": "1",
            "height": "44px",
            "font-size": "15px",
            "font-weight": "500",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".btn": {
            "margin-top": "38px"
          },
          ".key-input": {
            "border": "none",
            "border-bottom": "1px solid rgba(151, 151, 151, 1)",
            "font-size": "16px",
            "font-weight": "400",
            "color": "rgba(153, 153, 153, 1)"
          },
          ".bottom": {
            "margin-top": "18px",
            "width": "265px",
            "height": "38px",
            "font-size": "14px",
            "font-weight": "400",
            "color": "rgba(233, 129, 18, 1)"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/login/invitecode.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"invite-code-select\">\n    <div class=\"main-login\">\n      <div class=\"title\"><span>选择您的ID</span></div>\n      <div class=\"content\">\n        <span>ID是你在DiDi中的重要标识，你可以使用你的ID来邀请好友加入DiDi，别人也可以通过你的ID找到你</span>\n      </div>\n      <div class=\"change\">\n        <el-link type=\"primary\" :underline=\"false\" @click=\"getInviteCodes\">换一换</el-link>\n      </div>\n      <div class=\"codes\">\n        <el-radio-group v-for=\"item in codes\" :key=\"item.ltCode\" v-model=\"inviteCode\">\n          <el-radio-button :label=\"item.ltCode\"></el-radio-button>\n        </el-radio-group>\n      </div>\n      <div class=\"submit\">\n        <el-button type=\"primary\" @click=\"onSubmit\">确认</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { query_tl_code, set_tl_code } from '@/server';\nimport { mapActions } from 'vuex';\nimport { SET_LOGIN_FINISHED } from '@/store/types';\nexport default {\n  components: {},\n  data() {\n    return {\n      codes: [],\n      inviteCode: ''\n    };\n  },\n  methods: {\n    ...mapActions([SET_LOGIN_FINISHED]),\n    async getInviteCodes() {\n      let res = await query_tl_code();\n      if (res.code == '200') {\n        this.codes = res.data;\n        this.inviteCode = this.codes[0].ltCode;\n      }\n    },\n    async onSubmit() {\n      let ltCode = this.inviteCode;\n      await set_tl_code({ ltCode });\n      this.SET_LOGIN_FINISHED('true');\n    }\n  },\n  mounted() {\n    this.getInviteCodes();\n  }\n};\n</script>",
    "originData": "<template>\n  <div class=\"invite-code-select\">\n    <div class=\"main-login\">\n      <div class=\"title\"><span>选择您的ID</span></div>\n      <div class=\"content\">\n        <span>ID是你在DiDi中的重要标识，你可以使用你的ID来邀请好友加入DiDi，别人也可以通过你的ID找到你</span>\n      </div>\n      <div class=\"change\">\n        <el-link type=\"primary\" :underline=\"false\" @click=\"getInviteCodes\">换一换</el-link>\n      </div>\n      <div class=\"codes\">\n        <el-radio-group v-for=\"item in codes\" :key=\"item.ltCode\" v-model=\"inviteCode\">\n          <el-radio-button :label=\"item.ltCode\"></el-radio-button>\n        </el-radio-group>\n      </div>\n      <div class=\"submit\">\n        <el-button type=\"primary\" @click=\"onSubmit\">确认</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { query_tl_code, set_tl_code } from '@/server';\nimport { mapActions } from 'vuex';\nimport { SET_LOGIN_FINISHED } from '@/store/types';\nexport default {\n  components: {},\n  data() {\n    return {\n      codes: [],\n      inviteCode: ''\n    };\n  },\n  methods: {\n    ...mapActions([SET_LOGIN_FINISHED]),\n    async getInviteCodes() {\n      let res = await query_tl_code();\n      if (res.code == '200') {\n        this.codes = res.data;\n        this.inviteCode = this.codes[0].ltCode;\n      }\n    },\n    async onSubmit() {\n      let ltCode = this.inviteCode;\n      await set_tl_code({ ltCode });\n      this.SET_LOGIN_FINISHED('true');\n    }\n  },\n  mounted() {\n    this.getInviteCodes();\n  }\n};\n</script>\n\n<style scoped>\n.invite-code-select {\n  position: absolute;\n  top: 80px;\n}\n.main-login {\n  width: 400px;\n  height: 530px;\n  padding: 50px;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n}\n.title {\n  text-align: center;\n  margin-bottom: 15px;\n}\n.title span {\n  font-size: 16px;\n}\n.content span {\n  font-size: 14px;\n}\n.change {\n  float: right;\n  padding: 8px 0;\n}\n.codes {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  width: 100%;\n  height: 160px;\n  margin-bottom: 25px;\n}\n.submit {\n  text-align: center;\n}\n.submit button {\n  width: 100%;\n  height: 50px;\n}\n.el-radio-button__orig-radio:checked + .el-radio-button__inner {\n  color: #409eff;\n  background-color: #fff;\n  border-color: #409eff;\n}\n</style>\n",
    "cssJson": [
      {
        ".invite-code-select": {
          "position": "absolute",
          "top": "80px"
        },
        ".main-login": {
          "width": "400px",
          "height": "530px",
          "padding": "50px",
          "box-sizing": "border-box",
          "box-shadow": "0px 4px 8px 0px rgba(5, 36, 163, 0.1)",
          "border-radius": "4px"
        },
        ".title": {
          "text-align": "center",
          "margin-bottom": "15px"
        },
        ".title span": {
          "font-size": "16px"
        },
        ".content span": {
          "font-size": "14px"
        },
        ".change": {
          "float": "right",
          "padding": "8px 0"
        },
        ".codes": {
          "display": "flex",
          "flex-direction": "row",
          "justify-content": "space-between",
          "flex-wrap": "wrap",
          "width": "100%",
          "height": "160px",
          "margin-bottom": "25px"
        },
        ".submit": {
          "text-align": "center"
        },
        ".submit button": {
          "width": "100%",
          "height": "50px"
        },
        ".el-radio-button__orig-radio:checked + .el-radio-button__inner": {
          "color": "#409eff",
          "background-color": "#fff",
          "border-color": "#409eff"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/register/ordinaryRegister.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"pass\">\n    <div class=\"main-login\">\n      <h3>注册</h3>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input placeholder=\"请输入邮箱地址\" v-model=\"form.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"validCode\" class=\"relative\">\n          <el-input placeholder=\"请输入邮箱验证码\" v-model=\"form.validCode\"></el-input>\n          <span class=\"clickGet\" @click=\"post_user_send_email\" v-if=\"countDown == 0\">点击获取</span>\n          <span class=\"clickGet\" v-else>{{ countDown }}</span>\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-between\">\n          <span @click=\"quick\">快捷登录</span>\n          <span @click=\"forget\">忘记密码</span>\n        </div>\n        <el-form-item>\n          <div class=\"step1-privacy\">\n            <span>注册即代表同意</span>\n            <a href=\"http://m.didimessage.com/#/staticpage/privacy\" target=\"_blank\">《隐私政策与注册协议》</a>\n          </div>\n          <el-button style=\"width: 100%\" type=\"primary\" :loading=\"loading\" @click=\"submitForm('ruleForm')\">立即注册</el-button>\n          <div class=\"regsiter-btn\">\n            <router-link to=\"/user/register\">注册专业版</router-link>\n          </div>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapState } from 'vuex';\nimport { user_web_register } from './server';\nimport { user_send_email } from '@/server';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      countDown: 0,\n      loading: false,\n      form: {\n        email: '',\n        validCode: ''\n      },\n      rules: {\n        email: [{ type: 'email', required: true, message: '请输入邮箱' }],\n        validCode: [{ required: true, message: '请输入邮箱验证码', trigger: 'blur' }]\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      loginInfo: obj => {\n        return obj.state.loginInfo;\n      }\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    post_user_send_email() {\n      //判断是否填写了邮箱\n      this.$refs.ruleForm.validateField('email', async message => {\n        if (!message) {\n          this.countDown = 120;\n          let countDown = setInterval(() => {\n            this.countDown--;\n            if (this.countDown == 0) {\n              clearInterval(countDown);\n            }\n          }, 1000);\n          const res = await user_send_email({\n            email: this.form.email,\n            templateCode: 'user_3'\n          });\n          if (res.code == '200') {\n            this.$message({\n              type: 'success',\n              message: '发送成功'\n            });\n          }\n        }\n      });\n    },\n    quick() {\n      this.$router.push('/user/login/email');\n    },\n    forget() {\n      this.$router.push('/user/forget/email');\n    },\n    submitForm(formName) {\n      let _this = this;\n      this.$refs[formName].validate(async valid => {\n        if (valid) {\n          try {\n            _this.loading = true;\n            let now = Date.now();\n            let sign = md5(\n              `timestamp=${now}&userName=${this.form.email}&validCode=${this.form.validCode}\n              &validCodeType=email&key=4yUbWtGLevMv9GVH`\n            );\n            await user_web_register({\n              ..._this.form,\n              timestamp: now,\n              validCodeType: 'email',\n              userName: _this.form.email,\n              sign\n            });\n            _this.loading = false;\n            _this.$message.success('注册成功，可以进行登录了！');\n            _this.$router.push('/user/login/pass');\n          } catch (err) {\n            _this.loading = false;\n            _this.$message.error('注册失败，请重试或联系系统管理员！');\n            throw new Error(err);\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div class=\"pass\">\n    <div class=\"main-login\">\n      <h3>注册</h3>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input placeholder=\"请输入邮箱地址\" v-model=\"form.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"validCode\" class=\"relative\">\n          <el-input placeholder=\"请输入邮箱验证码\" v-model=\"form.validCode\"></el-input>\n          <span class=\"clickGet\" @click=\"post_user_send_email\" v-if=\"countDown == 0\">点击获取</span>\n          <span class=\"clickGet\" v-else>{{ countDown }}</span>\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-between\">\n          <span @click=\"quick\">快捷登录</span>\n          <span @click=\"forget\">忘记密码</span>\n        </div>\n        <el-form-item>\n          <div class=\"step1-privacy\">\n            <span>注册即代表同意</span>\n            <a href=\"http://m.didimessage.com/#/staticpage/privacy\" target=\"_blank\">《隐私政策与注册协议》</a>\n          </div>\n          <el-button style=\"width: 100%\" type=\"primary\" :loading=\"loading\" @click=\"submitForm('ruleForm')\">立即注册</el-button>\n          <div class=\"regsiter-btn\">\n            <router-link to=\"/user/register\">注册专业版</router-link>\n          </div>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapState } from 'vuex';\nimport { user_web_register } from './server';\nimport { user_send_email } from '@/server';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      countDown: 0,\n      loading: false,\n      form: {\n        email: '',\n        validCode: ''\n      },\n      rules: {\n        email: [{ type: 'email', required: true, message: '请输入邮箱' }],\n        validCode: [{ required: true, message: '请输入邮箱验证码', trigger: 'blur' }]\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      loginInfo: obj => {\n        return obj.state.loginInfo;\n      }\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    post_user_send_email() {\n      //判断是否填写了邮箱\n      this.$refs.ruleForm.validateField('email', async message => {\n        if (!message) {\n          this.countDown = 120;\n          let countDown = setInterval(() => {\n            this.countDown--;\n            if (this.countDown == 0) {\n              clearInterval(countDown);\n            }\n          }, 1000);\n          const res = await user_send_email({\n            email: this.form.email,\n            templateCode: 'user_3'\n          });\n          if (res.code == '200') {\n            this.$message({\n              type: 'success',\n              message: '发送成功'\n            });\n          }\n        }\n      });\n    },\n    quick() {\n      this.$router.push('/user/login/email');\n    },\n    forget() {\n      this.$router.push('/user/forget/email');\n    },\n    submitForm(formName) {\n      let _this = this;\n      this.$refs[formName].validate(async valid => {\n        if (valid) {\n          try {\n            _this.loading = true;\n            let now = Date.now();\n            let sign = md5(\n              `timestamp=${now}&userName=${this.form.email}&validCode=${this.form.validCode}\n              &validCodeType=email&key=4yUbWtGLevMv9GVH`\n            );\n            await user_web_register({\n              ..._this.form,\n              timestamp: now,\n              validCodeType: 'email',\n              userName: _this.form.email,\n              sign\n            });\n            _this.loading = false;\n            _this.$message.success('注册成功，可以进行登录了！');\n            _this.$router.push('/user/login/pass');\n          } catch (err) {\n            _this.loading = false;\n            _this.$message.error('注册失败，请重试或联系系统管理员！');\n            throw new Error(err);\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.main-login {\n  width: 400px;\n  height: 530px;\n  padding: 60px;\n  box-sizing: border-box;\n  // background: rgba(255, 255, 255, 1);\n  box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n  h3 {\n    text-align: center;\n    margin: 0 0 30px 0;\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n  .step1-privacy {\n    text-align: center;\n    color: #999;\n    a {\n      color: #2f54eb;\n    }\n  }\n  .regsiter-btn {\n    text-align: center;\n    a {\n      color: #999;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n  .relative {\n    position: relative;\n    .clickGet {\n      position: absolute;\n      right: 8px;\n      font-size: 14px;\n      cursor: pointer;\n\n      font-weight: 500;\n      color: rgba(47, 84, 235, 1);\n    }\n  }\n  .login-code {\n    font-size: 14px;\n    padding: 0 0 40px;\n\n    span {\n      cursor: pointer;\n      font-size: 14px;\n\n      color: #2f54eb;\n      //   color: rgba(51, 51, 51, 1);\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".main-login": {
          "width": "400px",
          "height": "530px",
          "padding": "60px",
          "box-sizing": "border-box",
          "box-shadow": "0px 4px 8px 0px rgba(5, 36, 163, 0.1)",
          "border-radius": "4px",
          "h3": {
            "text-align": "center",
            "margin": "0 0 30px 0",
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".step1-privacy": {
            "text-align": "center",
            "color": "#999",
            "a": {
              "color": "#2f54eb"
            }
          },
          ".regsiter-btn": {
            "text-align": "center",
            "a": {
              "color": "#999",
              "&:hover": {
                "text-decoration": "underline"
              }
            }
          },
          ".relative": {
            "position": "relative",
            ".clickGet": {
              "position": "absolute",
              "right": "8px",
              "font-size": "14px",
              "cursor": "pointer",
              "font-weight": "500",
              "color": "rgba(47, 84, 235, 1)"
            }
          },
          ".login-code": {
            "font-size": "14px",
            "padding": "0 0 40px",
            "span": {
              "cursor": "pointer",
              "font-size": "14px",
              "color": "#2f54eb"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/forget/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- layout_user -->\n<template>\n  <div class=\"layout layout_user\">\n    <el-container>\n      <Header />\n      <el-main>\n        <div class=\"flex flex-direction align-center justify-center\">\n          <router-view />\n        </div>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Header from '../components/header';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Header\n  },\n  data() {\n    //这里存放数据\n    return {\n      langMap: {\n        'en-us': 'English',\n        'zh-cn': '简体中文'\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    handleCommand(command) {\n      this.$i18n.locale = command;\n      localStorage.lang = command;\n      this.$message({\n        type: 'success',\n        message: '切换语言成功：' + this.langMap[command]\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    window.vm.$remote.getCurrentWindow().setSize(380, 500); //登陆页面初始化大小\n    window.vm.$remote.getCurrentWindow().center(); //窗口居中\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- layout_user -->\n<template>\n  <div class=\"layout layout_user\">\n    <el-container>\n      <Header />\n      <el-main>\n        <div class=\"flex flex-direction align-center justify-center\">\n          <router-view />\n        </div>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Header from '../components/header';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Header\n  },\n  data() {\n    //这里存放数据\n    return {\n      langMap: {\n        'en-us': 'English',\n        'zh-cn': '简体中文'\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    handleCommand(command) {\n      this.$i18n.locale = command;\n      localStorage.lang = command;\n      this.$message({\n        type: 'success',\n        message: '切换语言成功：' + this.langMap[command]\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    window.vm.$remote.getCurrentWindow().setSize(380, 500); //登陆页面初始化大小\n    window.vm.$remote.getCurrentWindow().center(); //窗口居中\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.el-main {\n  // background-color: #e9eef3;\n  color: #000;\n  // text-align: center;\n  font-size: 15px;\n  .main-left {\n    width: 60%;\n    img {\n      margin-bottom: 20px;\n      width: 100%;\n    }\n    span {\n      font-size: 18px;\n\n      font-weight: 500;\n      line-height: 28px;\n      color: rgba(47, 84, 235, 1);\n    }\n    :nth-child(3) {\n      margin-bottom: 150px;\n    }\n  }\n  .main-right {\n    width: 40%;\n  }\n}\n\nbody .el-container {\n  // background: url(http://didiimg.oss-ap-southeast-1.aliyuncs.com/pc/user/bg%402x.png) no-repeat;\n  flex-direction: column;\n  background-size: 100% 100%;\n  min-height: 100vh;\n}\n</style>\n",
    "cssJson": [
      {
        ".el-main": {
          "color": "#000",
          "font-size": "15px",
          ".main-left": {
            "width": "60%",
            "img": {
              "margin-bottom": "20px",
              "width": "100%"
            },
            "span": {
              "font-size": "18px",
              "font-weight": "500",
              "line-height": "28px",
              "color": "rgba(47, 84, 235, 1)"
            },
            ":nth-child(3)": {
              "margin-bottom": "150px"
            }
          },
          ".main-right": {
            "width": "40%"
          }
        },
        "body .el-container": {
          "flex-direction": "column",
          "background-size": "100% 100%",
          "min-height": "100vh"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/forget/phone.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 忘记密码 手机找回 -->\n<template>\n  <div class=\"pass\">\n    <img src=\"../../../assets/images/di.png\" alt style=\"width: 100px; display: block; margin: 0 auto; margin-top: -20px\" />\n    <div class=\"main-login\">\n      <!-- <h3>忘记密码</h3> -->\n      <div class=\"flex align-center justify-around\">\n        <span class=\"email-phone\" @click=\"goEmail\">邮箱验证</span>\n        <span class=\"email-phone-choosing\">手机验证</span>\n      </div>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"\" prop=\"phone\">\n          <el-input placeholder=\"请输入手机号码\" v-model=\"form.phone\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"\" prop=\"password\">\n          <el-input placeholder=\"输入手机验证码\"></el-input>\n          <span class=\"clickGet\" @click=\"getCode\">点击获取</span>\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-end\">\n          <span @click=\"tologin\">密码登录</span>\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%\" type=\"primary\" @click=\"submitForm('ruleForm')\">下一步</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      form: {\n        phone: '',\n        password: ''\n      },\n      rules: {\n        phone: [{ required: true, message: '请输入手机号' }],\n        password: [{ required: true, message: '请输入密码' }]\n      },\n      options: [\n        {\n          value: '选项1',\n          label: '+86'\n        },\n        {\n          value: '选项2',\n          label: '+88'\n        },\n        {\n          value: '选项3',\n          label: '+96'\n        },\n        {\n          value: '选项4',\n          label: '+98'\n        },\n        {\n          value: '选项5',\n          label: '+100'\n        }\n      ],\n      value: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    tologin() {\n      this.$router.push('/user/login/pass');\n    },\n    getCode() {\n      this.post_user_send_mobile({\n        mobile: this.form.phone,\n        templateCode: ''\n      });\n    },\n    goEmail() {\n      this.$router.push('/user/forget/email');\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          return false;\n        }\n      });\n    },\n    async post_user_send_mobile() {}\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 忘记密码 手机找回 -->\n<template>\n  <div class=\"pass\">\n    <img src=\"../../../assets/images/di.png\" alt style=\"width: 100px; display: block; margin: 0 auto; margin-top: -20px\" />\n    <div class=\"main-login\">\n      <!-- <h3>忘记密码</h3> -->\n      <div class=\"flex align-center justify-around\">\n        <span class=\"email-phone\" @click=\"goEmail\">邮箱验证</span>\n        <span class=\"email-phone-choosing\">手机验证</span>\n      </div>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"\" prop=\"phone\">\n          <el-input placeholder=\"请输入手机号码\" v-model=\"form.phone\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"\" prop=\"password\">\n          <el-input placeholder=\"输入手机验证码\"></el-input>\n          <span class=\"clickGet\" @click=\"getCode\">点击获取</span>\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-end\">\n          <span @click=\"tologin\">密码登录</span>\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%\" type=\"primary\" @click=\"submitForm('ruleForm')\">下一步</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      form: {\n        phone: '',\n        password: ''\n      },\n      rules: {\n        phone: [{ required: true, message: '请输入手机号' }],\n        password: [{ required: true, message: '请输入密码' }]\n      },\n      options: [\n        {\n          value: '选项1',\n          label: '+86'\n        },\n        {\n          value: '选项2',\n          label: '+88'\n        },\n        {\n          value: '选项3',\n          label: '+96'\n        },\n        {\n          value: '选项4',\n          label: '+98'\n        },\n        {\n          value: '选项5',\n          label: '+100'\n        }\n      ],\n      value: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    tologin() {\n      this.$router.push('/user/login/pass');\n    },\n    getCode() {\n      this.post_user_send_mobile({\n        mobile: this.form.phone,\n        templateCode: ''\n      });\n    },\n    goEmail() {\n      this.$router.push('/user/forget/email');\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          return false;\n        }\n      });\n    },\n    async post_user_send_mobile() {}\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.pass {\n  position: absolute;\n  top: 80px;\n}\n.main-login {\n  width: 400px;\n  height: 530px;\n  padding: 60px;\n  box-sizing: border-box;\n  // background: rgba(255, 255, 255, 1);\n  box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n  h3 {\n    text-align: center;\n    margin: 0 0 30px 0;\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n  .login-code {\n    font-size: 14px;\n    padding: 10px 10px 20px 10px;\n    span {\n      cursor: pointer;\n      font-size: 14px;\n\n      font-weight: 500;\n      color: rgba(51, 51, 51, 1);\n    }\n  }\n  .email-phone {\n    margin: 0 0 10px 0;\n    font-size: 16px;\n\n    font-weight: 400;\n    padding: 10px;\n    cursor: pointer;\n  }\n  .email-phone-choosing {\n    margin: 0 0 10px 0;\n    font-size: 16px;\n\n    font-weight: 400;\n    color: rgba(47, 84, 235, 1);\n    padding: 10px;\n    border-bottom: 1px solid rgba(47, 84, 235, 1);\n    cursor: pointer;\n  }\n  .clickGet {\n    position: absolute;\n    right: 8px;\n    font-size: 14px;\n    cursor: pointer;\n\n    font-weight: 500;\n    color: rgba(47, 84, 235, 1);\n  }\n  .el-select {\n    width: 75px;\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    z-index: 999;\n  }\n  .el-form-item {\n    position: relative;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".pass": {
          "position": "absolute",
          "top": "80px"
        },
        ".main-login": {
          "width": "400px",
          "height": "530px",
          "padding": "60px",
          "box-sizing": "border-box",
          "box-shadow": "0px 4px 8px 0px rgba(5, 36, 163, 0.1)",
          "border-radius": "4px",
          "h3": {
            "text-align": "center",
            "margin": "0 0 30px 0",
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".login-code": {
            "font-size": "14px",
            "padding": "10px 10px 20px 10px",
            "span": {
              "cursor": "pointer",
              "font-size": "14px",
              "font-weight": "500",
              "color": "rgba(51, 51, 51, 1)"
            }
          },
          ".email-phone": {
            "margin": "0 0 10px 0",
            "font-size": "16px",
            "font-weight": "400",
            "padding": "10px",
            "cursor": "pointer"
          },
          ".email-phone-choosing": {
            "margin": "0 0 10px 0",
            "font-size": "16px",
            "font-weight": "400",
            "color": "rgba(47, 84, 235, 1)",
            "padding": "10px",
            "border-bottom": "1px solid rgba(47, 84, 235, 1)",
            "cursor": "pointer"
          },
          ".clickGet": {
            "position": "absolute",
            "right": "8px",
            "font-size": "14px",
            "cursor": "pointer",
            "font-weight": "500",
            "color": "rgba(47, 84, 235, 1)"
          },
          ".el-select": {
            "width": "75px",
            "position": "absolute",
            "right": "0px",
            "top": "0px",
            "z-index": "999"
          },
          ".el-form-item": {
            "position": "relative"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/forget/email.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 忘记密码 邮箱找回 -->\n<template>\n  <div class=\"email\">\n    <img src=\"../../../assets/images/di.png\" alt style=\"width: 100px; display: block; margin: 0 auto; margin-top: -20px\" />\n    <div class=\"main-login\">\n      <!-- <h3>忘记密码</h3> -->\n      <div class=\"flex align-start\">\n        <span class=\"email-phone-choosing\">邮箱验证</span>\n      </div>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"\" prop=\"loginName\">\n          <el-input placeholder=\"请输入邮箱地址\" v-model=\"form.loginName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"\" prop=\"validCode\" class=\"relative\">\n          <el-input placeholder=\"请输入邮箱验证码\" show-password v-model=\"form.validCode\"></el-input>\n          <span class=\"clickGet\" @click=\"post_user_send_email\" v-show=\"countDown == 0\">点击获取</span>\n          <span class=\"clickGet\" v-show=\"countDown != 0\">{{ countDown }}s</span>\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-end\">\n          <span @click=\"tologin\">密码登录</span>\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%\" type=\"primary\" @click=\"submitForm('ruleForm')\">下一步</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { check_validcode } from './server';\nimport { user_send_email } from '@/server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      form: {\n        loginName: '',\n        validCode: ''\n      },\n      rules: {\n        loginName: [{ type: 'email', required: true, message: '请输入邮箱' }],\n        validCode: [{ required: true, message: '请输入邮箱验证码' }]\n      },\n      countDown: 0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    tologin() {\n      this.$router.push('/user/login/pass');\n    },\n    goPhone() {\n      this.$router.push('/user/forget/phone');\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.post_check_validcode({\n            templateCode: 'user_9',\n            validCodeType: 'email',\n            ...this.form\n          });\n          // this.post_pwd_reset();\n        }\n      });\n    },\n    async post_user_send_email() {\n      const res = await user_send_email({\n        email: this.form.loginName,\n        templateCode: 'user_9'\n      });\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: '发送成功'\n        });\n        this.showTime();\n      } else {\n        this.$message.error(res.data.msg);\n      }\n    },\n    showTime() {\n      this.countDown = 120;\n      let countDown = setInterval(() => {\n        this.countDown--;\n        if (this.countDown == 0) {\n          clearInterval(countDown);\n        }\n      }, 1000);\n    },\n    async post_check_validcode(params) {\n      const res = await check_validcode(params);\n      if (res.data) {\n        this.$router.push({\n          path: '/user/forget/newpass',\n          query: {\n            userName: this.form.loginName,\n            validCode: this.form.validCode,\n            validCodeType: 'email'\n          }\n        });\n      } else {\n        this.$message({\n          type: 'error',\n          message: '验证码不正确'\n        });\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 忘记密码 邮箱找回 -->\n<template>\n  <div class=\"email\">\n    <img src=\"../../../assets/images/di.png\" alt style=\"width: 100px; display: block; margin: 0 auto; margin-top: -20px\" />\n    <div class=\"main-login\">\n      <!-- <h3>忘记密码</h3> -->\n      <div class=\"flex align-start\">\n        <span class=\"email-phone-choosing\">邮箱验证</span>\n      </div>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"\" prop=\"loginName\">\n          <el-input placeholder=\"请输入邮箱地址\" v-model=\"form.loginName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"\" prop=\"validCode\" class=\"relative\">\n          <el-input placeholder=\"请输入邮箱验证码\" show-password v-model=\"form.validCode\"></el-input>\n          <span class=\"clickGet\" @click=\"post_user_send_email\" v-show=\"countDown == 0\">点击获取</span>\n          <span class=\"clickGet\" v-show=\"countDown != 0\">{{ countDown }}s</span>\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-end\">\n          <span @click=\"tologin\">密码登录</span>\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%\" type=\"primary\" @click=\"submitForm('ruleForm')\">下一步</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { check_validcode } from './server';\nimport { user_send_email } from '@/server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      form: {\n        loginName: '',\n        validCode: ''\n      },\n      rules: {\n        loginName: [{ type: 'email', required: true, message: '请输入邮箱' }],\n        validCode: [{ required: true, message: '请输入邮箱验证码' }]\n      },\n      countDown: 0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    tologin() {\n      this.$router.push('/user/login/pass');\n    },\n    goPhone() {\n      this.$router.push('/user/forget/phone');\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.post_check_validcode({\n            templateCode: 'user_9',\n            validCodeType: 'email',\n            ...this.form\n          });\n          // this.post_pwd_reset();\n        }\n      });\n    },\n    async post_user_send_email() {\n      const res = await user_send_email({\n        email: this.form.loginName,\n        templateCode: 'user_9'\n      });\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: '发送成功'\n        });\n        this.showTime();\n      } else {\n        this.$message.error(res.data.msg);\n      }\n    },\n    showTime() {\n      this.countDown = 120;\n      let countDown = setInterval(() => {\n        this.countDown--;\n        if (this.countDown == 0) {\n          clearInterval(countDown);\n        }\n      }, 1000);\n    },\n    async post_check_validcode(params) {\n      const res = await check_validcode(params);\n      if (res.data) {\n        this.$router.push({\n          path: '/user/forget/newpass',\n          query: {\n            userName: this.form.loginName,\n            validCode: this.form.validCode,\n            validCodeType: 'email'\n          }\n        });\n      } else {\n        this.$message({\n          type: 'error',\n          message: '验证码不正确'\n        });\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.email {\n  position: absolute;\n  top: 80px;\n}\n.main-login {\n  width: 400px;\n  height: 530px;\n  padding: 60px;\n  box-sizing: border-box;\n  // background: rgba(255, 255, 255, 1);\n  box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n  h3 {\n    text-align: center;\n    margin: 0 0 30px 0;\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n  .login-code {\n    font-size: 14px;\n    padding: 10px 10px 20px 10px;\n    span {\n      cursor: pointer;\n      font-size: 14px;\n\n      font-weight: 500;\n      color: rgba(51, 51, 51, 1);\n    }\n  }\n  .relative {\n    position: relative;\n  }\n  .clickGet {\n    position: absolute;\n    right: 8px;\n    font-size: 14px;\n    cursor: pointer;\n\n    font-weight: 500;\n    color: rgba(47, 84, 235, 1);\n  }\n  .email-phone {\n    margin: 0 0 10px 0;\n    font-size: 16px;\n\n    font-weight: 400;\n    padding: 10px;\n    cursor: pointer;\n  }\n  .email-phone-choosing {\n    margin: 0 0 10px 0;\n    font-size: 16px;\n\n    font-weight: 400;\n    color: rgba(47, 84, 235, 1);\n    padding: 10px;\n    /*border-bottom: 1px solid rgba(47, 84, 235, 1);*/\n    cursor: pointer;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".email": {
          "position": "absolute",
          "top": "80px"
        },
        ".main-login": {
          "width": "400px",
          "height": "530px",
          "padding": "60px",
          "box-sizing": "border-box",
          "box-shadow": "0px 4px 8px 0px rgba(5, 36, 163, 0.1)",
          "border-radius": "4px",
          "h3": {
            "text-align": "center",
            "margin": "0 0 30px 0",
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".login-code": {
            "font-size": "14px",
            "padding": "10px 10px 20px 10px",
            "span": {
              "cursor": "pointer",
              "font-size": "14px",
              "font-weight": "500",
              "color": "rgba(51, 51, 51, 1)"
            }
          },
          ".relative": {
            "position": "relative"
          },
          ".clickGet": {
            "position": "absolute",
            "right": "8px",
            "font-size": "14px",
            "cursor": "pointer",
            "font-weight": "500",
            "color": "rgba(47, 84, 235, 1)"
          },
          ".email-phone": {
            "margin": "0 0 10px 0",
            "font-size": "16px",
            "font-weight": "400",
            "padding": "10px",
            "cursor": "pointer"
          },
          ".email-phone-choosing": {
            "margin": "0 0 10px 0",
            "font-size": "16px",
            "font-weight": "400",
            "color": "rgba(47, 84, 235, 1)",
            "padding": "10px",
            "cursor": "pointer"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/forget/newpass.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- pass -->\n<template>\n  <div class=\"email\">\n    <div class=\"main-login\">\n      <h3>忘记密码</h3>\n      <div class=\"flex align-center justify-around\">\n        <span class=\"reset\">请输入新密码，密码为6~16位的数字或字母</span>\n      </div>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"新密码\" prop=\"password\">\n          <el-input placeholder=\"请输入新的密码\" :type=\"showPassword ? 'text' : 'password'\" v-model=\"form.password\">\n            <img\n              src=\"../../../assets/images/open.png\"\n              slot=\"suffix\"\n              v-if=\"showPassword\"\n              class=\"password-image\"\n              @click=\"showPassword = !showPassword\"\n              alt\n            />\n            <img src=\"../../../assets/images/close.png\" slot=\"suffix\" v-else class=\"password-image\"\n                 @click=\"showPassword = !showPassword\" alt/>\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"newPassword\" class=\"relative\">\n          <el-input placeholder=\"请再次输入新的密码\" :type=\"showNewPassword ? 'text' : 'password'\" v-model=\"form.newPassword\">\n            <img\n              src=\"../../../assets/images/open.png\"\n              slot=\"suffix\"\n              v-if=\"showNewPassword\"\n              class=\"password-image\"\n              @click=\"showNewPassword = !showNewPassword\"\n              alt\n            />\n            <img src=\"../../../assets/images/close.png\" slot=\"suffix\" v-else class=\"password-image\"\n                 @click=\"showNewPassword = !showNewPassword\" alt/>\n          </el-input>\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-between\">\n          <!-- <span>密码登录</span> -->\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%\" type=\"primary\" @click=\"submitForm('ruleForm')\">下一步</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { pwd_reset } from './server';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6 || value.length > 16) {\n        callback(new Error('请输6-16位密码'));\n      } else {\n        if (this.form.newPassword !== '') {\n          // 对第二个密码框单独验证\n          this.$refs['ruleForm'].validateField('newPassword');\n        }\n        callback();\n      }\n    };\n    const validatePassCheck = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入新密码'));\n      } else if (value.length < 6 || value.length > 16) {\n        callback(new Error('请输6-16位新密码'));\n      } else if (value !== this.form.password) {\n        callback(new Error('密码不一样'));\n      } else {\n        callback();\n      }\n    };\n    //这里存放数据\n    return {\n      form: {\n        newPassword: '',\n        password: ''\n      },\n      rules: {\n        password: [{ validator: validatePass, trigger: 'blur' }],\n        newPassword: [{ validator: validatePassCheck, trigger: 'blur' }]\n      },\n      showPassword: false,\n      showNewPassword: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.post_pwd_reset({\n            userName: this.$route.query.userName,\n            password: md5(this.form.password),\n            validCode: this.$route.query.validCode,\n            validCodeType: this.$route.query.validCodeType\n          });\n        }\n      });\n    },\n    async post_pwd_reset(params) {\n      let res = await pwd_reset(params);\n      if (res.code == '200') {\n        this.$message.success('修改成功');\n        this.$router.push('/user/login/pass');\n      }\n    },\n    showPass() {\n      this.showPassword = !this.showPassword;\n    },\n    showNewPass() {\n      this.showNewPassword = !this.showNewPassword;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- pass -->\n<template>\n  <div class=\"email\">\n    <div class=\"main-login\">\n      <h3>忘记密码</h3>\n      <div class=\"flex align-center justify-around\">\n        <span class=\"reset\">请输入新密码，密码为6~16位的数字或字母</span>\n      </div>\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"top\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"新密码\" prop=\"password\">\n          <el-input placeholder=\"请输入新的密码\" :type=\"showPassword ? 'text' : 'password'\" v-model=\"form.password\">\n            <img\n              src=\"../../../assets/images/open.png\"\n              slot=\"suffix\"\n              v-if=\"showPassword\"\n              class=\"password-image\"\n              @click=\"showPassword = !showPassword\"\n              alt\n            />\n            <img src=\"../../../assets/images/close.png\" slot=\"suffix\" v-else class=\"password-image\"\n                 @click=\"showPassword = !showPassword\" alt/>\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"newPassword\" class=\"relative\">\n          <el-input placeholder=\"请再次输入新的密码\" :type=\"showNewPassword ? 'text' : 'password'\" v-model=\"form.newPassword\">\n            <img\n              src=\"../../../assets/images/open.png\"\n              slot=\"suffix\"\n              v-if=\"showNewPassword\"\n              class=\"password-image\"\n              @click=\"showNewPassword = !showNewPassword\"\n              alt\n            />\n            <img src=\"../../../assets/images/close.png\" slot=\"suffix\" v-else class=\"password-image\"\n                 @click=\"showNewPassword = !showNewPassword\" alt/>\n          </el-input>\n        </el-form-item>\n        <div class=\"login-code flex align-center justify-between\">\n          <!-- <span>密码登录</span> -->\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%\" type=\"primary\" @click=\"submitForm('ruleForm')\">下一步</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { pwd_reset } from './server';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6 || value.length > 16) {\n        callback(new Error('请输6-16位密码'));\n      } else {\n        if (this.form.newPassword !== '') {\n          // 对第二个密码框单独验证\n          this.$refs['ruleForm'].validateField('newPassword');\n        }\n        callback();\n      }\n    };\n    const validatePassCheck = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入新密码'));\n      } else if (value.length < 6 || value.length > 16) {\n        callback(new Error('请输6-16位新密码'));\n      } else if (value !== this.form.password) {\n        callback(new Error('密码不一样'));\n      } else {\n        callback();\n      }\n    };\n    //这里存放数据\n    return {\n      form: {\n        newPassword: '',\n        password: ''\n      },\n      rules: {\n        password: [{ validator: validatePass, trigger: 'blur' }],\n        newPassword: [{ validator: validatePassCheck, trigger: 'blur' }]\n      },\n      showPassword: false,\n      showNewPassword: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.post_pwd_reset({\n            userName: this.$route.query.userName,\n            password: md5(this.form.password),\n            validCode: this.$route.query.validCode,\n            validCodeType: this.$route.query.validCodeType\n          });\n        }\n      });\n    },\n    async post_pwd_reset(params) {\n      let res = await pwd_reset(params);\n      if (res.code == '200') {\n        this.$message.success('修改成功');\n        this.$router.push('/user/login/pass');\n      }\n    },\n    showPass() {\n      this.showPassword = !this.showPassword;\n    },\n    showNewPass() {\n      this.showNewPassword = !this.showNewPassword;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.main-login {\n  width: 400px;\n  height: 530px;\n  padding: 20px;\n  box-sizing: border-box;\n  // background: rgba(255, 255, 255, 1);\n  box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n  border-radius: 4px;\n  h3 {\n    text-align: center;\n    margin: 0 0 30px 0;\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n  .login-code {\n    font-size: 14px;\n    padding: 10px 10px 40px 10px;\n    span {\n      cursor: pointer;\n      font-size: 14px;\n\n      font-weight: 500;\n      color: rgba(51, 51, 51, 1);\n    }\n  }\n  .relative {\n    position: relative;\n  }\n  .reset {\n    font-size: 14px;\n\n    font-weight: 400;\n    color: rgba(47, 84, 235, 1);\n    margin-bottom: 10px;\n  }\n  .password-image {\n    margin-top: 10px;\n    margin-right: 3px;\n    opacity: 0.5;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".main-login": {
          "width": "400px",
          "height": "530px",
          "padding": "20px",
          "box-sizing": "border-box",
          "box-shadow": "0px 4px 8px 0px rgba(5, 36, 163, 0.1)",
          "border-radius": "4px",
          "h3": {
            "text-align": "center",
            "margin": "0 0 30px 0",
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".login-code": {
            "font-size": "14px",
            "padding": "10px 10px 40px 10px",
            "span": {
              "cursor": "pointer",
              "font-size": "14px",
              "font-weight": "500",
              "color": "rgba(51, 51, 51, 1)"
            }
          },
          ".relative": {
            "position": "relative"
          },
          ".reset": {
            "font-size": "14px",
            "font-weight": "400",
            "color": "rgba(47, 84, 235, 1)",
            "margin-bottom": "10px"
          },
          ".password-image": {
            "margin-top": "10px",
            "margin-right": "3px",
            "opacity": "0.5"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/register/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- layout_user -->\n<template>\n  <div class=\"register\">\n    <el-container>\n      <Header />\n      <el-main class=\"flex flex-direction align-center\">\n        <h3>DIDI平台申请团队账号</h3>\n        <div class=\"step1-header\">\n          <el-steps :active=\"step\" align-center class=\"flex justify-center\">\n            <el-step title=\"填写账号信息\"></el-step>\n            <el-step title=\"完善资料\"></el-step>\n            <el-step title=\"完成\"></el-step>\n          </el-steps>\n        </div>\n        <Step1 v-if=\"$route.query.step == 1 || !$route.query.step\" />\n        <Step2 v-if=\"$route.query.step == 2\" />\n        <Step3 v-if=\"$route.query.step == 3\" />\n      </el-main>\n\n      <Footer />\n    </el-container>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport Step1 from './step1';\nimport Step2 from './step2';\nimport Step3 from './step3';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Header,\n    Footer,\n    Step1,\n    Step2,\n    Step3\n  },\n  data() {\n    //这里存放数据\n    return {\n      step: 1\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    watch: {\n      $route: {\n        handle() {\n          this.step = Number(this.$route.query.step);\n        },\n        deep: true\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    handleCommand(command) {\n      this.$i18n.locale = command;\n      localStorage.lang = command;\n      this.$message({\n        type: 'success',\n        message: '切换语言成功：' + this.langMap[command]\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    if (this.$route.query.step) {\n      this.step = Number(this.$route.query.step);\n    } else {\n      this.step = 1;\n    }\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- layout_user -->\n<template>\n  <div class=\"register\">\n    <el-container>\n      <Header />\n      <el-main class=\"flex flex-direction align-center\">\n        <h3>DIDI平台申请团队账号</h3>\n        <div class=\"step1-header\">\n          <el-steps :active=\"step\" align-center class=\"flex justify-center\">\n            <el-step title=\"填写账号信息\"></el-step>\n            <el-step title=\"完善资料\"></el-step>\n            <el-step title=\"完成\"></el-step>\n          </el-steps>\n        </div>\n        <Step1 v-if=\"$route.query.step == 1 || !$route.query.step\" />\n        <Step2 v-if=\"$route.query.step == 2\" />\n        <Step3 v-if=\"$route.query.step == 3\" />\n      </el-main>\n\n      <Footer />\n    </el-container>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport Step1 from './step1';\nimport Step2 from './step2';\nimport Step3 from './step3';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Header,\n    Footer,\n    Step1,\n    Step2,\n    Step3\n  },\n  data() {\n    //这里存放数据\n    return {\n      step: 1\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    watch: {\n      $route: {\n        handle() {\n          this.step = Number(this.$route.query.step);\n        },\n        deep: true\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    handleCommand(command) {\n      this.$i18n.locale = command;\n      localStorage.lang = command;\n      this.$message({\n        type: 'success',\n        message: '切换语言成功：' + this.langMap[command]\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    if (this.$route.query.step) {\n      this.step = Number(this.$route.query.step);\n    } else {\n      this.step = 1;\n    }\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.el-main {\n  .step1-header {\n    width: 80%;\n  }\n  h3 {\n    text-align: center;\n    margin: 20px 0 40px 0;\n    font-size: 19px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n  // background-color: #e9eef3;\n  color: #000;\n  // text-align: center;\n  font-size: 15px;\n  .main-left {\n    width: 60%;\n    img {\n      margin-bottom: 20px;\n      width: 100%;\n    }\n    span {\n      font-size: 18px;\n\n      font-weight: 500;\n      line-height: 28px;\n      color: rgba(47, 84, 235, 1);\n    }\n    :nth-child(3) {\n      margin-bottom: 150px;\n    }\n  }\n  .main-right {\n    width: 40%;\n  }\n}\n\nbody .el-container {\n  background: #fff;\n  flex-direction: column;\n  background-size: 100% 100%;\n}\n</style>\n",
    "cssJson": [
      {
        ".el-main": {
          ".step1-header": {
            "width": "80%"
          },
          "h3": {
            "text-align": "center",
            "margin": "20px 0 40px 0",
            "font-size": "19px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          "color: #000;  font-size: 15px;  .main-left": {
            "width": "60%",
            "img": {
              "margin-bottom": "20px",
              "width": "100%"
            },
            "span": {
              "font-size": "18px",
              "font-weight": "500",
              "line-height": "28px",
              "color": "rgba(47, 84, 235, 1)"
            },
            ":nth-child(3)": {
              "margin-bottom": "150px"
            }
          },
          ".main-right": {
            "width": "40%"
          }
        },
        "body .el-container": {
          "background": "#fff",
          "flex-direction": "column",
          "background-size": "100% 100%"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/media.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\r\n  <div @contextmenu.prevent=\"handleMediaRightClick($event)\">\r\n    <el-container>\r\n      <!-- <el-header\r\n        style=\"\r\n          text-align: right;\r\n          font-size: 12px;\r\n          background: white;\r\n          height: 20px;\r\n          z-index: 10000;\r\n        \"\r\n      >\r\n        <div class=\"flex align-baseline justify-end topwork2 header-class\"  >\r\n          <i @click=\"hideWin\" class=\"i1\">\r\n            <img class=\"img_12\" src=\"../../assets/images/di_closewin.png\" title=\"最小化\" />\r\n          </i>\r\n          <i @click=\"sizeWindow\" v-if=\"!isMaxed\" class=\"i1\">\r\n            <img class=\"img_12\" src=\"../../assets/images/di_maxmize.png\" title=\"最大化\" />\r\n          </i>\r\n          <i @click=\"sizeWindow\" v-if=\"isMaxed\" class=\"i1\">\r\n            <img class=\"img_12\" src=\"../../assets/images/di_minmize.png\" title=\"还原\" />\r\n          </i>\r\n          <i class=\"i2\" @click=\"closeWindow\">\r\n            <img class=\"img_12\" src=\"../../assets/images/di_min_close.png\" title=\"关闭\" />\r\n          </i>\r\n        </div>\r\n      </el-header> -->\r\n     \r\n      <el-main style=\"height:100vh;\" class=\"media-main\">\r\n        <elImageViewer\r\n          ref=\"elimageviewer\"\r\n          :url-list=\"viewerImgList\"\r\n          v-show=\"msgType == '2'\"\r\n          :initial-index=\"initialIndex\"\r\n          :url-data=\"downloadImglist\"\r\n          :agrs=\"agrs\"\r\n          :theme=\"theme\"\r\n        />\r\n        <div style=\"background:#757575;height: 100%;\">\r\n          <video\r\n            v-if=\"msgType == '10'\"\r\n            :src=\"item.msgBody.fileId\"\r\n            style=\"width: 100%; height: 100%;\"\r\n            controls=\"controls\"\r\n            ref=\"videoPlayer\"\r\n          ></video>\r\n        </div>\r\n      </el-main>\r\n    </el-container>\r\n\r\n    <el-dialog\r\n        class=\"dialog-tip\"\r\n        :title=\"$t('Universal_0059')\"\r\n        :close-on-click-modal=\"false\"\r\n        :close-on-press-escape=\"false\"\r\n        :show-close=\"showClose\"\r\n        center\r\n        :visible=\"showDialog\"\r\n        @close=\"closeDialog\"\r\n    >\r\n      <p class=\"cancel-update-dialog-p\">\r\n        {{ $t('chat_0122') }}\r\n      </p>\r\n      <div class=\"dialog-footer\">\r\n        <el-button size=\"mini\" @click=\"closeDialog\" class=\"cancel-btn\">\r\n          {{ $t('Universal_0063') }}</el-button>\r\n        <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            class=\"update-btn\"\r\n            @click=\"openVideo\"\r\n        >{{ $t('Universal_0356') }}</el-button\r\n        >\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import ELImageViewer from 'element-ui/packages/image/src/image-viewer'\r\nimport elImageViewer from './elImageViewer';\r\nimport { clipboard, ipcRenderer, shell } from 'electron';\r\nimport fileOperational from '@/services/fileOperational';\r\nimport _ from 'lodash';\r\nimport bus from '@/utils/eventbus';\r\n\r\nexport default {\r\n  name: 'Media',\r\n  components: {\r\n    elImageViewer\r\n  },\r\n  data() {\r\n    return {\r\n      imgList: [],\r\n      chatList: [],\r\n      reqId: '',\r\n      src: '',\r\n      initialIndex: 0,\r\n      viewerImgList: [],\r\n      msgType: '',\r\n      item: {},\r\n      isMaxed: false,\r\n      downloadImglist: [],\r\n      showDialog: false,\r\n      showClose: true,\r\n      agrs: {},\r\n      theme: '',\r\n    };\r\n  },\r\n  methods: {\r\n    inited(viewer) {\r\n      if (!this._viewer) {\r\n        this._viewer = viewer;\r\n      }\r\n    },\r\n    sizeWindow() {\r\n      const browserWindow = window.vm.$remote.getCurrentWindow();\r\n      if (!this.isMaxed) {\r\n        browserWindow.maximize();\r\n        this.isMaxed = true;\r\n      } else {\r\n        browserWindow.unmaximize();\r\n        this.isMaxed = false;\r\n      }\r\n    },\r\n    hideWin() {\r\n      const browserWindow = window.vm.$remote.getCurrentWindow();\r\n      browserWindow.minimize();\r\n    },\r\n    async closeWindow() {\r\n      this.imgList = [];\r\n      this.chatList = [];\r\n      this.reqId = '';\r\n      this.src = '';\r\n      this.msgType=\"\";\r\n      this.item={};\r\n      this.initialIndex = 0;\r\n      this.viewerImgList = [];\r\n      this.downloadImglist=[];\r\n      if (this.$refs.videoPlayer) {\r\n        this.$refs.videoPlayer.currentTime = 0;\r\n        this.$refs.videoPlayer.pause();\r\n      }\r\n      this.showDialog = false;\r\n      await this.$nextTick();\r\n      setTimeout(()=>{\r\n        const browserWindow = window.vm.$remote.getCurrentWindow();\r\n        console.log('hide');\r\n        // 将组件内部errorImg变量重置成false, 不然加载一张失败图片以后就无法正常加载图片\r\n        this.$refs.elimageviewer.errorImg = false\r\n        browserWindow.hide();\r\n      },150)\r\n    },\r\n    openImageViewer(imgUrl) {\r\n      let imgIndex = _.findIndex(this.downloadImglist, item => {\r\n        if (item.url == imgUrl) {\r\n          return item;\r\n        }\r\n      });\r\n      const reqId = this.downloadImglist[imgIndex].reqId;\r\n      let msgBody = this.downloadImglist[imgIndex].msgBody;\r\n      let url = this.downloadImglist[imgIndex].url;\r\n      const { ipcRenderer } = require('electron');\r\n      this.ipcRenderer = ipcRenderer;\r\n      this.ipcRenderer.send('image-viewer', {\r\n        reqId: reqId,\r\n        msgBody: msgBody,\r\n        url: url\r\n      });\r\n    },\r\n    handleMediaRightClick(e) {\r\n      console.log('进入右击事件')\r\n      if (e) {\r\n        e.preventDefault();\r\n      }\r\n      let that = this,\r\n        obj = this.$refs?.elimageviewer?.currentItem || {},\r\n        params = that.msgType == 2 ? obj : that.item,\r\n        rightClickOptions,\r\n        copy = {\r\n          name: this.$t('chat_0026'),\r\n          enabled: true,\r\n          fun: () => {\r\n            that.copyImage(params);\r\n          }\r\n        },\r\n        save = {\r\n          name: this.$t('Universal_0357'),\r\n          enabled: true,\r\n          fun: () => {\r\n            that.handleSave(params);\r\n          }\r\n        },\r\n        share = {\r\n          name: this.$t('chat_0027'),\r\n          enabled: true,\r\n          fun: () => {\r\n            that.handleShare(params);\r\n          }\r\n        };\r\n      console.log('params===', params)\r\n      if (that.msgType == 2) {\r\n        // 如果是头像查看 隐藏转发功能\r\n        if(params?.msgBody?.isCheckAvatar) {\r\n          rightClickOptions = [copy, save, ];\r\n        } else {\r\n          rightClickOptions = [copy, save, share];\r\n        }\r\n        const fileName = fileOperational.getFileName(params?.msgBody?.mediaId);\r\n        if (fileName.split('.')[1] == 'gif') {\r\n          rightClickOptions.shift();\r\n        }\r\n      }\r\n      if (that.msgType == 10) {\r\n        rightClickOptions = [share];\r\n      }\r\n      return that.$RightClick(rightClickOptions).popup({\r\n        window: window.vm.$remote.getCurrentWindow()\r\n      });\r\n    },\r\n    // 图片复制\r\n    async copyImage(item) {\r\n      let { msgBody } = item,\r\n        timer;\r\n      // console.log(item,msgBody.mediaId);\r\n      let mediaId = msgBody?.mediaId;\r\n      if (mediaId) {\r\n        const imagepath = await fileOperational.getPath(mediaId);\r\n        timer = setTimeout(() => {\r\n          clipboard.writeImage(imagepath, 'clipboard');\r\n          this.$message.success(this.$t('Universal_0384'));\r\n          clearTimeout(timer);\r\n          timer = null;\r\n        }, 500);\r\n      }\r\n    },\r\n    // 图片另存为\r\n    handleSave() {\r\n      this.$refs.elimageviewer.saveImages(this.$refs.elimageviewer.index);\r\n    },\r\n    // 图片、视频转发\r\n    handleShare(mediaData) {\r\n      console.log(mediaData);\r\n      ipcRenderer.send('media-share', mediaData);\r\n    },\r\n    _loadMedia(e,data){\r\n      console.log('%cloadMedia','font-size:30px',data);\r\n      this.msgType = data.msgType;\r\n      if (this.msgType == '2') {\r\n        this.item={};\r\n        this.imgList=[];\r\n        // console.log('data.imgList === ',data.imgList);\r\n        // console.log('data.index === ',data.index);\r\n        this.downloadImglist = data.imgList;\r\n        data.imgList.map(img => {\r\n          this.imgList.push(img.url);\r\n        });\r\n        this.src = this.imgList[data.index];\r\n        // this.initialIndex = data.index;\r\n        // this.$forceUpdate();\r\n        // this.imgList = data.imgList;\r\n        // this._viewer.images = this.imgList;\r\n        // this._viewer.update();\r\n        // this._viewer.view(data.index);\r\n        // this._viewer.index = data.index;\r\n        // this._viewer.show();\r\n        // let arrayBefore = this.imgList.slice(0, data.index);\r\n        // let arrayAfter = this.imgList.slice(data.index);\r\n        // this.viewerImgList = arrayAfter.concat(arrayBefore);\r\n        this.viewerImgList = this.imgList;\r\n        this.initialIndex = data.index;\r\n        this.agrs = data\r\n        console.log('agrs ====>',this.agrs)\r\n        console.log('imgList ====>',this.imgList)\r\n        // console.log('this.viewerImgList ======== ',this.viewerImgList);\r\n      } else if (this.msgType == '10') {\r\n        // if ((data.item.msgBody.isH265 || data.item.msgBody.noFirstFrame) && data.item.msgBody.downloadPath) {\r\n        //   // 是h265视频\r\n        //   this.showDialog = true;\r\n        // }\r\n\r\n        if(data.item.msgBody.isSupportVideo!== undefined && !data.item.msgBody.isSupportVideo) {\r\n          this.showDialog = true;\r\n        }\r\n        this.item = data.item;\r\n      }\r\n    },\r\n\r\n    // 获取系统主题\r\n    nativeTheme(e, data) {\r\n      console.log('%Theme ====>','font-size:30px',data.theme);\r\n      this.theme = data.theme\r\n    },\r\n\r\n    closeDialog() {\r\n      this.showDialog = false;\r\n      this.closeWindow();\r\n    },\r\n    openVideo() {\r\n      shell.showItemInFolder(this.item.msgBody.downloadPath);\r\n      this.showDialog = false;\r\n      this.closeWindow();\r\n    },\r\n    _keyup(e){\r\n      console.log(e.keyCode);\r\n      if (e.keyCode == 27) {\r\n        const browserWindow = window.vm.$remote.getCurrentWindow();\r\n        if (browserWindow.isMaximized()) {\r\n          browserWindow.setFullScreen(false);\r\n        } else {\r\n          setTimeout(() => {\r\n            this.closeWindow();\r\n          }, 100);\r\n        }\r\n      }\r\n    },\r\n    _imageTap(v){\r\n      this.initialIndex = v;\r\n    },\r\n    changeLan(e, data) {\r\n      this.$i18n.locale = data.lan.lan;\r\n    }\r\n  },\r\n  async mounted() {\r\n    bus.$on('imageTap', this._imageTap);\r\n    ipcRenderer.on('clearMedia', this.closeWindow);\r\n    ipcRenderer.on('loadMedia', this._loadMedia);\r\n    ipcRenderer.on('lanChanged', this.changeLan)\r\n    ipcRenderer.on('loadTheme', this.nativeTheme)\r\n    await this.$nextTick();\r\n    document.addEventListener('keyup', this._keyup);\r\n  },\r\n  beforeDestroy(){\r\n    bus.$off('imageTap', this._imageTap);\r\n    ipcRenderer.removeListener('clearMedia', this.closeWindow);\r\n    ipcRenderer.removeListener('loadMedia', this._loadMedia);\r\n    ipcRenderer.removeListener('loadTheme', this.nativeTheme)\r\n    document.removeEventListener('keyup', this._keyup)\r\n    ipcRenderer.removeListener('lanChanged', this.changeLan);\r\n  }\r\n};\r\n</script>",
    "originData": "<template>\r\n  <div @contextmenu.prevent=\"handleMediaRightClick($event)\">\r\n    <el-container>\r\n      <!-- <el-header\r\n        style=\"\r\n          text-align: right;\r\n          font-size: 12px;\r\n          background: white;\r\n          height: 20px;\r\n          z-index: 10000;\r\n        \"\r\n      >\r\n        <div class=\"flex align-baseline justify-end topwork2 header-class\"  >\r\n          <i @click=\"hideWin\" class=\"i1\">\r\n            <img class=\"img_12\" src=\"../../assets/images/di_closewin.png\" title=\"最小化\" />\r\n          </i>\r\n          <i @click=\"sizeWindow\" v-if=\"!isMaxed\" class=\"i1\">\r\n            <img class=\"img_12\" src=\"../../assets/images/di_maxmize.png\" title=\"最大化\" />\r\n          </i>\r\n          <i @click=\"sizeWindow\" v-if=\"isMaxed\" class=\"i1\">\r\n            <img class=\"img_12\" src=\"../../assets/images/di_minmize.png\" title=\"还原\" />\r\n          </i>\r\n          <i class=\"i2\" @click=\"closeWindow\">\r\n            <img class=\"img_12\" src=\"../../assets/images/di_min_close.png\" title=\"关闭\" />\r\n          </i>\r\n        </div>\r\n      </el-header> -->\r\n     \r\n      <el-main style=\"height:100vh;\" class=\"media-main\">\r\n        <elImageViewer\r\n          ref=\"elimageviewer\"\r\n          :url-list=\"viewerImgList\"\r\n          v-show=\"msgType == '2'\"\r\n          :initial-index=\"initialIndex\"\r\n          :url-data=\"downloadImglist\"\r\n          :agrs=\"agrs\"\r\n          :theme=\"theme\"\r\n        />\r\n        <div style=\"background:#757575;height: 100%;\">\r\n          <video\r\n            v-if=\"msgType == '10'\"\r\n            :src=\"item.msgBody.fileId\"\r\n            style=\"width: 100%; height: 100%;\"\r\n            controls=\"controls\"\r\n            ref=\"videoPlayer\"\r\n          ></video>\r\n        </div>\r\n      </el-main>\r\n    </el-container>\r\n\r\n    <el-dialog\r\n        class=\"dialog-tip\"\r\n        :title=\"$t('Universal_0059')\"\r\n        :close-on-click-modal=\"false\"\r\n        :close-on-press-escape=\"false\"\r\n        :show-close=\"showClose\"\r\n        center\r\n        :visible=\"showDialog\"\r\n        @close=\"closeDialog\"\r\n    >\r\n      <p class=\"cancel-update-dialog-p\">\r\n        {{ $t('chat_0122') }}\r\n      </p>\r\n      <div class=\"dialog-footer\">\r\n        <el-button size=\"mini\" @click=\"closeDialog\" class=\"cancel-btn\">\r\n          {{ $t('Universal_0063') }}</el-button>\r\n        <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            class=\"update-btn\"\r\n            @click=\"openVideo\"\r\n        >{{ $t('Universal_0356') }}</el-button\r\n        >\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import ELImageViewer from 'element-ui/packages/image/src/image-viewer'\r\nimport elImageViewer from './elImageViewer';\r\nimport { clipboard, ipcRenderer, shell } from 'electron';\r\nimport fileOperational from '@/services/fileOperational';\r\nimport _ from 'lodash';\r\nimport bus from '@/utils/eventbus';\r\n\r\nexport default {\r\n  name: 'Media',\r\n  components: {\r\n    elImageViewer\r\n  },\r\n  data() {\r\n    return {\r\n      imgList: [],\r\n      chatList: [],\r\n      reqId: '',\r\n      src: '',\r\n      initialIndex: 0,\r\n      viewerImgList: [],\r\n      msgType: '',\r\n      item: {},\r\n      isMaxed: false,\r\n      downloadImglist: [],\r\n      showDialog: false,\r\n      showClose: true,\r\n      agrs: {},\r\n      theme: '',\r\n    };\r\n  },\r\n  methods: {\r\n    inited(viewer) {\r\n      if (!this._viewer) {\r\n        this._viewer = viewer;\r\n      }\r\n    },\r\n    sizeWindow() {\r\n      const browserWindow = window.vm.$remote.getCurrentWindow();\r\n      if (!this.isMaxed) {\r\n        browserWindow.maximize();\r\n        this.isMaxed = true;\r\n      } else {\r\n        browserWindow.unmaximize();\r\n        this.isMaxed = false;\r\n      }\r\n    },\r\n    hideWin() {\r\n      const browserWindow = window.vm.$remote.getCurrentWindow();\r\n      browserWindow.minimize();\r\n    },\r\n    async closeWindow() {\r\n      this.imgList = [];\r\n      this.chatList = [];\r\n      this.reqId = '';\r\n      this.src = '';\r\n      this.msgType=\"\";\r\n      this.item={};\r\n      this.initialIndex = 0;\r\n      this.viewerImgList = [];\r\n      this.downloadImglist=[];\r\n      if (this.$refs.videoPlayer) {\r\n        this.$refs.videoPlayer.currentTime = 0;\r\n        this.$refs.videoPlayer.pause();\r\n      }\r\n      this.showDialog = false;\r\n      await this.$nextTick();\r\n      setTimeout(()=>{\r\n        const browserWindow = window.vm.$remote.getCurrentWindow();\r\n        console.log('hide');\r\n        // 将组件内部errorImg变量重置成false, 不然加载一张失败图片以后就无法正常加载图片\r\n        this.$refs.elimageviewer.errorImg = false\r\n        browserWindow.hide();\r\n      },150)\r\n    },\r\n    openImageViewer(imgUrl) {\r\n      let imgIndex = _.findIndex(this.downloadImglist, item => {\r\n        if (item.url == imgUrl) {\r\n          return item;\r\n        }\r\n      });\r\n      const reqId = this.downloadImglist[imgIndex].reqId;\r\n      let msgBody = this.downloadImglist[imgIndex].msgBody;\r\n      let url = this.downloadImglist[imgIndex].url;\r\n      const { ipcRenderer } = require('electron');\r\n      this.ipcRenderer = ipcRenderer;\r\n      this.ipcRenderer.send('image-viewer', {\r\n        reqId: reqId,\r\n        msgBody: msgBody,\r\n        url: url\r\n      });\r\n    },\r\n    handleMediaRightClick(e) {\r\n      console.log('进入右击事件')\r\n      if (e) {\r\n        e.preventDefault();\r\n      }\r\n      let that = this,\r\n        obj = this.$refs?.elimageviewer?.currentItem || {},\r\n        params = that.msgType == 2 ? obj : that.item,\r\n        rightClickOptions,\r\n        copy = {\r\n          name: this.$t('chat_0026'),\r\n          enabled: true,\r\n          fun: () => {\r\n            that.copyImage(params);\r\n          }\r\n        },\r\n        save = {\r\n          name: this.$t('Universal_0357'),\r\n          enabled: true,\r\n          fun: () => {\r\n            that.handleSave(params);\r\n          }\r\n        },\r\n        share = {\r\n          name: this.$t('chat_0027'),\r\n          enabled: true,\r\n          fun: () => {\r\n            that.handleShare(params);\r\n          }\r\n        };\r\n      console.log('params===', params)\r\n      if (that.msgType == 2) {\r\n        // 如果是头像查看 隐藏转发功能\r\n        if(params?.msgBody?.isCheckAvatar) {\r\n          rightClickOptions = [copy, save, ];\r\n        } else {\r\n          rightClickOptions = [copy, save, share];\r\n        }\r\n        const fileName = fileOperational.getFileName(params?.msgBody?.mediaId);\r\n        if (fileName.split('.')[1] == 'gif') {\r\n          rightClickOptions.shift();\r\n        }\r\n      }\r\n      if (that.msgType == 10) {\r\n        rightClickOptions = [share];\r\n      }\r\n      return that.$RightClick(rightClickOptions).popup({\r\n        window: window.vm.$remote.getCurrentWindow()\r\n      });\r\n    },\r\n    // 图片复制\r\n    async copyImage(item) {\r\n      let { msgBody } = item,\r\n        timer;\r\n      // console.log(item,msgBody.mediaId);\r\n      let mediaId = msgBody?.mediaId;\r\n      if (mediaId) {\r\n        const imagepath = await fileOperational.getPath(mediaId);\r\n        timer = setTimeout(() => {\r\n          clipboard.writeImage(imagepath, 'clipboard');\r\n          this.$message.success(this.$t('Universal_0384'));\r\n          clearTimeout(timer);\r\n          timer = null;\r\n        }, 500);\r\n      }\r\n    },\r\n    // 图片另存为\r\n    handleSave() {\r\n      this.$refs.elimageviewer.saveImages(this.$refs.elimageviewer.index);\r\n    },\r\n    // 图片、视频转发\r\n    handleShare(mediaData) {\r\n      console.log(mediaData);\r\n      ipcRenderer.send('media-share', mediaData);\r\n    },\r\n    _loadMedia(e,data){\r\n      console.log('%cloadMedia','font-size:30px',data);\r\n      this.msgType = data.msgType;\r\n      if (this.msgType == '2') {\r\n        this.item={};\r\n        this.imgList=[];\r\n        // console.log('data.imgList === ',data.imgList);\r\n        // console.log('data.index === ',data.index);\r\n        this.downloadImglist = data.imgList;\r\n        data.imgList.map(img => {\r\n          this.imgList.push(img.url);\r\n        });\r\n        this.src = this.imgList[data.index];\r\n        // this.initialIndex = data.index;\r\n        // this.$forceUpdate();\r\n        // this.imgList = data.imgList;\r\n        // this._viewer.images = this.imgList;\r\n        // this._viewer.update();\r\n        // this._viewer.view(data.index);\r\n        // this._viewer.index = data.index;\r\n        // this._viewer.show();\r\n        // let arrayBefore = this.imgList.slice(0, data.index);\r\n        // let arrayAfter = this.imgList.slice(data.index);\r\n        // this.viewerImgList = arrayAfter.concat(arrayBefore);\r\n        this.viewerImgList = this.imgList;\r\n        this.initialIndex = data.index;\r\n        this.agrs = data\r\n        console.log('agrs ====>',this.agrs)\r\n        console.log('imgList ====>',this.imgList)\r\n        // console.log('this.viewerImgList ======== ',this.viewerImgList);\r\n      } else if (this.msgType == '10') {\r\n        // if ((data.item.msgBody.isH265 || data.item.msgBody.noFirstFrame) && data.item.msgBody.downloadPath) {\r\n        //   // 是h265视频\r\n        //   this.showDialog = true;\r\n        // }\r\n\r\n        if(data.item.msgBody.isSupportVideo!== undefined && !data.item.msgBody.isSupportVideo) {\r\n          this.showDialog = true;\r\n        }\r\n        this.item = data.item;\r\n      }\r\n    },\r\n\r\n    // 获取系统主题\r\n    nativeTheme(e, data) {\r\n      console.log('%Theme ====>','font-size:30px',data.theme);\r\n      this.theme = data.theme\r\n    },\r\n\r\n    closeDialog() {\r\n      this.showDialog = false;\r\n      this.closeWindow();\r\n    },\r\n    openVideo() {\r\n      shell.showItemInFolder(this.item.msgBody.downloadPath);\r\n      this.showDialog = false;\r\n      this.closeWindow();\r\n    },\r\n    _keyup(e){\r\n      console.log(e.keyCode);\r\n      if (e.keyCode == 27) {\r\n        const browserWindow = window.vm.$remote.getCurrentWindow();\r\n        if (browserWindow.isMaximized()) {\r\n          browserWindow.setFullScreen(false);\r\n        } else {\r\n          setTimeout(() => {\r\n            this.closeWindow();\r\n          }, 100);\r\n        }\r\n      }\r\n    },\r\n    _imageTap(v){\r\n      this.initialIndex = v;\r\n    },\r\n    changeLan(e, data) {\r\n      this.$i18n.locale = data.lan.lan;\r\n    }\r\n  },\r\n  async mounted() {\r\n    bus.$on('imageTap', this._imageTap);\r\n    ipcRenderer.on('clearMedia', this.closeWindow);\r\n    ipcRenderer.on('loadMedia', this._loadMedia);\r\n    ipcRenderer.on('lanChanged', this.changeLan)\r\n    ipcRenderer.on('loadTheme', this.nativeTheme)\r\n    await this.$nextTick();\r\n    document.addEventListener('keyup', this._keyup);\r\n  },\r\n  beforeDestroy(){\r\n    bus.$off('imageTap', this._imageTap);\r\n    ipcRenderer.removeListener('clearMedia', this.closeWindow);\r\n    ipcRenderer.removeListener('loadMedia', this._loadMedia);\r\n    ipcRenderer.removeListener('loadTheme', this.nativeTheme)\r\n    document.removeEventListener('keyup', this._keyup)\r\n    ipcRenderer.removeListener('lanChanged', this.changeLan);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.el-main .el-image-viewer__mask {\r\n  top: 0px;\r\n  background-color: transparent;\r\n}\r\n.el-main .el-image-viewer__canvas {\r\n  padding-top: 20px;\r\n  /* width: 96%; */\r\n  height: 94%;\r\n  /* padding-left: 15px; */\r\n}\r\n</style>\r\n<style scoped>\r\n.header-class {\r\n  -webkit-app-region: drag;\r\n  width: 100%;\r\n  z-index: 1001;\r\n}\r\nvideo:focus{\r\n  outline: none;\r\n}\r\n.dialog-footer {\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n.dialog-tip {\r\n  margin-top: 18vh;\r\n}\r\n</style>\r\n",
    "cssJson": [
      {
        ".el-main .el-image-viewer__mask": {
          "top": "0px",
          "background-color": "transparent"
        },
        ".el-main .el-image-viewer__canvas": {
          "padding-top": "20px",
          "height": "94%"
        }
      },
      {
        ".header-class": {
          "-webkit-app-region": "drag",
          "width": "100%",
          "z-index": "1001"
        },
        "video:focus": {
          "outline": "none"
        },
        ".dialog-footer": {
          "margin-top": "10px",
          "text-align": "center"
        },
        ".dialog-tip": {
          "margin-top": "18vh"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/WinTray.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <ul class=\"win-tray\">\n   <template v-if=\"isNoRead\">\n     <li class=\"quit\" @click=\"quitApp\">{{ exitText }}</li>\n   </template>\n   <template>\n      <li>{{ newMsg }}</li>\n      <li\n          v-for=\"item in winTray\"\n          :key=\"item['id']\"\n          @click=\"toChat(item)\"\n      >\n        <div class=\"item-left\">\n          <img v-if=\"item.sessionIcon\" class=\"item-avatar\" :src=\"item.sessionIcon\" alt=\"\">\n          <DiscussionIcon\n              v-if=\"!item.sessionIcon && item.groupType==0\"\n              class=\"item-avatar\"\n              iconType=\"super-mini\"\n              :name=\"item.sessionName\" />\n          <div class=\"item-desc\">\n            <span class=\"item-name\"\n                  :style=\"{'max-width': item.people ? maxWidth(item.people) : '140px'}\">{{ item[\"sessionName\"] }}</span>\n            <div v-if=\"item.people\">({{ item[\"people\"] }})</div>\n          </div>\n        </div>\n        <div class=\"item-right\">{{ item[\"unread\"] > 99 ? '99+' : item[\"unread\"] }}</div>\n      </li>\n      <li><span @click=\"ignoreAll\">{{ ignoreAllText }}</span></li>\n   </template>\n  </ul>\n</template>\n\n<script>\nimport { sum } from \"lodash\";\nconst { ipcRenderer } = require(\"electron\");\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nexport default {\n  name: \"WinTray\",\n  data() {\n    return {\n      winTray: [],\n      newMsg: '',\n      ignoreAllText: '',\n      exitText: ''\n    };\n  },\n  components : { DiscussionIcon },\n  computed: {\n    loginfinished() {\n      // return JSON.stringify(store.state.common.userInfo);\n      return this.$route.path;\n    },\n    isNoRead() {\n      return sum(this.winTray.map((o) => o[\"unread\"])) <= 0;\n    },\n    getItemVH() {\n      let h = `${100 / (this.winTray.length + 2)}vh`;\n      return {\n        height: h,\n        lineHeight: h,\n      };\n    }\n  },\n  methods: {\n    maxWidth(people) {\n      switch (people.length) {\n      case 4:\n        return '80px';\n      case 3:\n        return '86px';\n      case 2:\n        return '92px';\n      case 1:\n        return '98px';\n      default:\n        break;\n      }\n    },\n    quitApp() {\n      ipcRenderer.send('update-badge', [])//处理window托盘、mac通知\n      ipcRenderer.send('quit-app');\n    },\n    toChat(item) {\n      const { id } = item;\n      ipcRenderer.send('to-chat-by-id', id);\n    },\n    handleTrayMsgArr(e, res) {\n      this.winTray = res.noNoticeFlagArr||[];\n      this.newMsg = res.newMsg;\n      this.ignoreAllText = res.ignoreAll;\n      this.exitText = res.exit;\n    },\n    // 忽略全部\n    ignoreAll() {\n      ipcRenderer.send('ignore-tray-data');\n    }\n  },\n  mounted() {\n    ipcRenderer.on(\"window-tray-data\", this.handleTrayMsgArr);\n  },\n\n  beforeDestroy() {\n    ipcRenderer.removeListener(\"window-tray-data\", this.handleTrayMsgArr);\n  },\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <ul class=\"win-tray\">\n   <template v-if=\"isNoRead\">\n     <li class=\"quit\" @click=\"quitApp\">{{ exitText }}</li>\n   </template>\n   <template>\n      <li>{{ newMsg }}</li>\n      <li\n          v-for=\"item in winTray\"\n          :key=\"item['id']\"\n          @click=\"toChat(item)\"\n      >\n        <div class=\"item-left\">\n          <img v-if=\"item.sessionIcon\" class=\"item-avatar\" :src=\"item.sessionIcon\" alt=\"\">\n          <DiscussionIcon\n              v-if=\"!item.sessionIcon && item.groupType==0\"\n              class=\"item-avatar\"\n              iconType=\"super-mini\"\n              :name=\"item.sessionName\" />\n          <div class=\"item-desc\">\n            <span class=\"item-name\"\n                  :style=\"{'max-width': item.people ? maxWidth(item.people) : '140px'}\">{{ item[\"sessionName\"] }}</span>\n            <div v-if=\"item.people\">({{ item[\"people\"] }})</div>\n          </div>\n        </div>\n        <div class=\"item-right\">{{ item[\"unread\"] > 99 ? '99+' : item[\"unread\"] }}</div>\n      </li>\n      <li><span @click=\"ignoreAll\">{{ ignoreAllText }}</span></li>\n   </template>\n  </ul>\n</template>\n\n<script>\nimport { sum } from \"lodash\";\nconst { ipcRenderer } = require(\"electron\");\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nexport default {\n  name: \"WinTray\",\n  data() {\n    return {\n      winTray: [],\n      newMsg: '',\n      ignoreAllText: '',\n      exitText: ''\n    };\n  },\n  components : { DiscussionIcon },\n  computed: {\n    loginfinished() {\n      // return JSON.stringify(store.state.common.userInfo);\n      return this.$route.path;\n    },\n    isNoRead() {\n      return sum(this.winTray.map((o) => o[\"unread\"])) <= 0;\n    },\n    getItemVH() {\n      let h = `${100 / (this.winTray.length + 2)}vh`;\n      return {\n        height: h,\n        lineHeight: h,\n      };\n    }\n  },\n  methods: {\n    maxWidth(people) {\n      switch (people.length) {\n      case 4:\n        return '80px';\n      case 3:\n        return '86px';\n      case 2:\n        return '92px';\n      case 1:\n        return '98px';\n      default:\n        break;\n      }\n    },\n    quitApp() {\n      ipcRenderer.send('update-badge', [])//处理window托盘、mac通知\n      ipcRenderer.send('quit-app');\n    },\n    toChat(item) {\n      const { id } = item;\n      ipcRenderer.send('to-chat-by-id', id);\n    },\n    handleTrayMsgArr(e, res) {\n      this.winTray = res.noNoticeFlagArr||[];\n      this.newMsg = res.newMsg;\n      this.ignoreAllText = res.ignoreAll;\n      this.exitText = res.exit;\n    },\n    // 忽略全部\n    ignoreAll() {\n      ipcRenderer.send('ignore-tray-data');\n    }\n  },\n  mounted() {\n    ipcRenderer.on(\"window-tray-data\", this.handleTrayMsgArr);\n  },\n\n  beforeDestroy() {\n    ipcRenderer.removeListener(\"window-tray-data\", this.handleTrayMsgArr);\n  },\n};\n</script>\n<style lang=\"less\" scoped>\n.win-tray {\n  min-height: 30px;\n  height: 100vh;\n  margin: 0;\n  overflow: hidden;\n  font-size: 13px;\n  background: #FBFBFB;\n  >li{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 15px;\n    height: 42px;\n    box-sizing: border-box;\n    border-bottom: 1px solid #ECECEC;\n     &:first-child {\n        border-bottom: none;\n     }\n     &:last-child{\n       border-bottom: none;\n     }\n     &:hover:not(:first-child){\n       background-color: #ECECEC;\n\n     }\n    &:last-child {\n      display: flex;\n      justify-content: flex-end;\n      color: #2F54EB;\n      span {\n        cursor: pointer;\n      }\n      &:hover {\n        background-color: #FBFBFB;\n      }\n    }\n    .item-left {\n      display: flex;\n      flex: 1;\n      align-items: center;\n      .item-avatar {\n        flex: 0 0 32px;\n        width: 32px;\n        height: 32px;\n        border-radius: 50%;\n      }\n      .item-desc {\n        margin-left: 5px;\n        display: flex;\n        .item-name {\n          overflow: hidden;\n          text-overflow:ellipsis;\n          white-space: pre;\n        }\n      }\n    }\n    .item-right {\n      min-width: 16px;\n      padding: 0 4px;\n      height: 16px;\n      line-height: 16px;\n      background: red;\n      color: #ffffff;\n      text-align: center;\n      border-radius: 8px;\n      font-size: 10px;\n      box-sizing: border-box;\n    }\n    &.quit {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n      line-height: 100vh;\n      color: #333333;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".win-tray": {
          "min-height": "30px",
          "height": "100vh",
          "margin": "0",
          "overflow": "hidden",
          "font-size": "13px",
          "background": "#FBFBFB",
          ">li": {
            "display": "flex",
            "align-items": "center",
            "justify-content": "space-between",
            "padding": "0 15px",
            "height": "42px",
            "box-sizing": "border-box",
            "border-bottom": "1px solid #ECECEC",
            "&:first-child": {
              "border-bottom": "none"
            },
            "&:last-child": {
              "border-bottom": "none",
              "display": "flex",
              "justify-content": "flex-end",
              "color": "#2F54EB",
              "span": {
                "cursor": "pointer"
              },
              "&:hover": {
                "background-color": "#FBFBFB"
              }
            },
            "&:hover:not(:first-child)": {
              "background-color": "#ECECEC"
            },
            ".item-left": {
              "display": "flex",
              "flex": "1",
              "align-items": "center",
              ".item-avatar": {
                "flex": "0 0 32px",
                "width": "32px",
                "height": "32px",
                "border-radius": "50%"
              },
              ".item-desc": {
                "margin-left": "5px",
                "display": "flex",
                ".item-name": {
                  "overflow": "hidden",
                  "text-overflow": "ellipsis",
                  "white-space": "pre"
                }
              }
            },
            ".item-right": {
              "min-width": "16px",
              "padding": "0 4px",
              "height": "16px",
              "line-height": "16px",
              "background": "red",
              "color": "#ffffff",
              "text-align": "center",
              "border-radius": "8px",
              "font-size": "10px",
              "box-sizing": "border-box"
            },
            "&.quit": {
              "display": "flex",
              "justify-content": "center",
              "align-items": "center",
              "height": "100vh",
              "line-height": "100vh",
              "color": "#333333"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/Index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 个人设置 -->\n<template>\n  <div class=\"setting-wrap\">\n    <div class=\"setting-title\">个人设置</div>\n    <ul class=\"setting-tab-wrap clearfix\" id=\"setting-tab-wrap\">\n      <router-link to=\"/app/setting/general\" tag=\"li\">通用设置</router-link>\n      <!-- <router-link to='/app/setting/identity' tag=\"li\">身份认证</router-link> -->\n      <router-link to=\"/app/setting/safe\" tag=\"li\">安全设置</router-link>\n      <router-link to=\"/app/setting/secretKey\" tag=\"li\">密钥管理</router-link>\n    </ul>\n    <div class=\"setting-content-wrap\" id=\"setting-content-wrap\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      i: \"\",\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.i = this.$route.query.num;\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 个人设置 -->\n<template>\n  <div class=\"setting-wrap\">\n    <div class=\"setting-title\">个人设置</div>\n    <ul class=\"setting-tab-wrap clearfix\" id=\"setting-tab-wrap\">\n      <router-link to=\"/app/setting/general\" tag=\"li\">通用设置</router-link>\n      <!-- <router-link to='/app/setting/identity' tag=\"li\">身份认证</router-link> -->\n      <router-link to=\"/app/setting/safe\" tag=\"li\">安全设置</router-link>\n      <router-link to=\"/app/setting/secretKey\" tag=\"li\">密钥管理</router-link>\n    </ul>\n    <div class=\"setting-content-wrap\" id=\"setting-content-wrap\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      i: \"\",\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.i = this.$route.query.num;\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.clearfix::after {\n  content: \"\";\n  display: inline-block;\n  overflow: hidden;\n  clear: both;\n}\n.setting-wrap {\n  padding: 30px;\n  //height: 100%;\n  text-align: left;\n  background-color: #fff;\n  .setting-title {\n    font-size: 14px;\n    color: #151f34;\n    line-height: 20px;\n  }\n  .setting-tab-wrap {\n    padding: 20px 0 50px;\n    margin: 0;\n  }\n  .setting-tab-wrap li {\n    float: left;\n    font-size: 14px;\n    color: #151f34;\n    list-style: none;\n    line-height: 20px;\n    margin-right: 35px;\n    user-select: none;\n  }\n  .setting-tab-wrap li:last-child {\n    margin-right: 0;\n  }\n  .setting-tab-wrap li.router-link-active {\n    color: #2f54eb;\n    position: relative;\n  }\n  .setting-tab-wrap li.router-link-active::after {\n    content: \"\";\n    display: inline-block;\n    position: absolute;\n    bottom: -5px;\n    width: 10px;\n    height: 2px;\n    background-color: #2f54eb;\n    left: 50%;\n    margin-left: -5px;\n  }\n  .setting-content-wrap {\n    .setting-content-wrap-item-con {\n      display: none;\n    }\n    .show {\n      display: block;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".clearfix::after": {
          "content": "\"\"",
          "display": "inline-block",
          "overflow": "hidden",
          "clear": "both"
        },
        ".setting-wrap": {
          "padding": "30px",
          "text-align": "left",
          "background-color": "#fff",
          ".setting-title": {
            "font-size": "14px",
            "color": "#151f34",
            "line-height": "20px"
          },
          ".setting-tab-wrap": {
            "padding": "20px 0 50px",
            "margin": "0"
          },
          ".setting-tab-wrap li": {
            "float": "left",
            "font-size": "14px",
            "color": "#151f34",
            "list-style": "none",
            "line-height": "20px",
            "margin-right": "35px",
            "user-select": "none"
          },
          ".setting-tab-wrap li:last-child": {
            "margin-right": "0"
          },
          ".setting-tab-wrap li.router-link-active": {
            "color": "#2f54eb",
            "position": "relative"
          },
          ".setting-tab-wrap li.router-link-active::after": {
            "content": "\"\"",
            "display": "inline-block",
            "position": "absolute",
            "bottom": "-5px",
            "width": "10px",
            "height": "2px",
            "background-color": "#2f54eb",
            "left": "50%",
            "margin-left": "-5px"
          },
          ".setting-content-wrap": {
            ".setting-content-wrap-item-con": {
              "display": "none"
            },
            ".show": {
              "display": "block"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/form/secretKey.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"secretWrap\">\n    <div><span class=\"key-backup\">备份密钥</span></div>\n    <div class=\"boxcont\">\n      <p class=\"divice-key\">\n        设备密钥：{{ short_secretKey }}\n        <span v-clipboard:copy=\"secretKey\" v-clipboard:success=\"onCopy\">复制密钥</span>\n      </p>\n      <p>\n        存储云端：{{ backups }}\n        <el-button\n          type=\"primary\"\n          icon=\"iconfont icon-shangchuan4\"\n          size=\"mini\"\n          @click=\"uploadWind()\"\n          class=\"btn-key\"\n          style=\"margin-left: 15px\"\n        >\n          &nbsp; &nbsp; &nbsp;上传云端\n        </el-button>\n      </p>\n    </div>\n    <div>\n      <span class=\"key-backup\" v-if=\"backups == '已备份'\">导入密钥</span>\n    </div>\n    <div class=\"key-download\" v-if=\"backups == '已备份'\">\n      <el-button type=\"primary\" icon=\"iconfont icon-xiazai1\" size=\"mini\" @click=\"downloadWind()\" class=\"btn-key\">\n        &nbsp; &nbsp; &nbsp;云端导入\n      </el-button>\n    </div>\n    <!-- <div class=\"box\">\n    <div id=\"preview\" v-on:paste=\"handlePaste\">\n        <span>将图片按Ctrl+V 粘贴至此处</span>\n    </div>\n    <el-button\n            v-on:click=\"uploadPlans\"\n        >上传文件</el-button>\n    </div>-->\n\n    <el-dialog\n      title=\"设置密钥备份密码\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"dialogVisible\"\n      customClass=\"customWidth\"\n      :modal=\"false\"\n      @close=\"dialogVisible = false\"\n    >\n      <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" :rules=\"rules\" @submit.native.prevent>\n        <el-form-item label=\"备份密码\" prop=\"password\">\n          <el-input v-model=\"form.password\" autocomplete=\"off\" maxlength=\"6\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div class=\"tip\">\n        <p>\n          你可以使用备份密钥从云端导入你的密钥,你的密钥会加密存储在云端，只有使用你的备份密码才能解密,备份密码不可找回，失去后可以去“个人-密钥管理”中重新备份\n        </p>\n        <el-button type=\"primary\" @click=\"addPrivate()\">确定</el-button>\n      </div>\n    </el-dialog>\n    <ImportKey ref=\"ImportKey\" @importback=\"importback\" :creatFlag=\"creatFlag\" @getKey=\"getKey\"></ImportKey>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { getRsaKeys } from '@/utils/rsa';\nimport { send_my_rsa } from '@/server';\nimport { checkRsaPrivate, addPrivate } from '../server';\nimport { SET_USER_PRIVATE_KEY } from '@/store/types';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nimport { getSelfUserId } from '@/utils/const';\nimport SQLUtils from '@/components/db/sqlite.js';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    visible: {\n      // 表格数据源\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      dialogVisible: false,\n      secretKey: '',\n      rsaVersion: 1,\n      short_secretKey: '',\n      form: {\n        password: ''\n      },\n      rules: {\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ]\n      },\n\n      backups: '',\n      creatFlag: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    visible(newVal) {\n      if (newVal == true) {\n        this.checkRsaPrivate();\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    importback(ret) {\n      this.secretKey = ret.rsaPrivate;\n      this.rsaVersion = ret.appVersion;\n      // this.short_secretKey = rsaPrivate.slice(0, 30) + \"...\";\n      // this.checkRsaPrivate()\n    },\n    uploadWind() {\n      this.dialogVisible = true;\n      if (this.$refs['form'] != undefined) {\n        this.$refs.form.resetFields();\n      }\n    },\n    downloadWind() {\n      this.$refs.ImportKey.opendialog();\n    },\n    checkRsaPrivate() {\n      checkRsaPrivate({}).then(res => {\n        if (res.code == 200) {\n          if (res.data) {\n            this.backups = '已备份';\n          } else {\n            this.backups = '未备份';\n          }\n        }\n      });\n    },\n\n    addPrivate() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          addPrivate({\n            rsaPrivate: this.secretKey, //私钥\n            rsaPassword: this.form.password, //私钥密码\n            loginUserId: localStorage.getItem('userId'), //\n            appVersion: this.rsaVersion,\n            source: 'pc'\n          }).then(res => {\n            if (res.code == 200) {\n              this.$message.success(res.msg);\n              this.dialogVisible = false;\n              this.checkRsaPrivate();\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    handlePaste(event) {\n      const items = (event.clipboardData || window.clipboardData).items;\n      let file = null;\n\n      if (!items || items.length === 0) {\n        this.$message.error('当前浏览器不支持本地');\n        return;\n      }\n      // 搜索剪切板items\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          file = items[i].getAsFile();\n          break;\n        }\n      }\n      if (!file) {\n        this.$message.error('粘贴内容非图片');\n        return;\n      }\n      // 此时file就是我们的剪切板中的图片对象\n      // 如果需要预览，可以执行下面代码\n      const reader = new FileReader();\n      // reader.onload = event => {\n      //   preview.innerHTML = `<img src=\"${event.target.result}\">`;\n      // };\n      reader.readAsDataURL(file);\n      this.file = file;\n      // uploadPlans(file);\n    },\n    //上传文件成功后回调\n    uploadPlans(file) {\n      // let file = this.file;\n      if (!file) {\n        this.$message.error('请粘贴图片后上传');\n        return;\n      }\n      this.loading = true;\n      let form = new FormData();\n      form.append('file', file);\n      form.append('type', this.type);\n    },\n    //重新创建秘钥后，秘钥的版本在上传新公钥的同时从后台获取\n    getKey() {\n      let that = this;\n\n      function getRsa(a, b) {\n        that.privateKey = a;\n        that.publicKey = b;\n        that.sendCode(a, b);\n        //localStorage.setItem(key, a);\n        that.secretKey = a;\n        that.short_secretKey = a.slice(0, 30) + '...';\n      }\n\n      getRsaKeys(getRsa);\n    },\n    async sendCode(priKey, pubKey) {\n      let res = await send_my_rsa({\n        rsaPub: pubKey\n      });\n      if (res.code == 200) {\n        this.$message.success('创建成功');\n        this.checkRsaPrivate();\n        //赋值公钥版本，后面需在入本地库\n        this.rsaVersion = res.data.rsaPubVersion;\n        let item = {\n          rsa_pub: res.data.rsaPub,\n          rsa_pub_version: res.data.rsaPubVersion,\n          rsa_pri: priKey\n        };\n        this.$store.dispatch(SET_USER_PRIVATE_KEY, item);\n        let userId = getSelfUserId();\n        SQLUtils.insertOrUpdateTContactsPubkey(userId);\n      }\n    },\n    onCopy() {\n      this.$message.success(this.$t('chat_0026'));\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    // this.checkRsaPrivate();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.secretKey = UserInfoUtils.getCurrentUserPrivateKey();\n    this.rsaVersion = UserInfoUtils.getCurrentUserPrivateKeyLastVersion();\n    console.log('this.secretKey', this.secretKey);\n    this.short_secretKey = this.secretKey.slice(0, 30) + '...';\n    this.checkRsaPrivate();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"secretWrap\">\n    <div><span class=\"key-backup\">备份密钥</span></div>\n    <div class=\"boxcont\">\n      <p class=\"divice-key\">\n        设备密钥：{{ short_secretKey }}\n        <span v-clipboard:copy=\"secretKey\" v-clipboard:success=\"onCopy\">复制密钥</span>\n      </p>\n      <p>\n        存储云端：{{ backups }}\n        <el-button\n          type=\"primary\"\n          icon=\"iconfont icon-shangchuan4\"\n          size=\"mini\"\n          @click=\"uploadWind()\"\n          class=\"btn-key\"\n          style=\"margin-left: 15px\"\n        >\n          &nbsp; &nbsp; &nbsp;上传云端\n        </el-button>\n      </p>\n    </div>\n    <div>\n      <span class=\"key-backup\" v-if=\"backups == '已备份'\">导入密钥</span>\n    </div>\n    <div class=\"key-download\" v-if=\"backups == '已备份'\">\n      <el-button type=\"primary\" icon=\"iconfont icon-xiazai1\" size=\"mini\" @click=\"downloadWind()\" class=\"btn-key\">\n        &nbsp; &nbsp; &nbsp;云端导入\n      </el-button>\n    </div>\n    <!-- <div class=\"box\">\n    <div id=\"preview\" v-on:paste=\"handlePaste\">\n        <span>将图片按Ctrl+V 粘贴至此处</span>\n    </div>\n    <el-button\n            v-on:click=\"uploadPlans\"\n        >上传文件</el-button>\n    </div>-->\n\n    <el-dialog\n      title=\"设置密钥备份密码\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"dialogVisible\"\n      customClass=\"customWidth\"\n      :modal=\"false\"\n      @close=\"dialogVisible = false\"\n    >\n      <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" :rules=\"rules\" @submit.native.prevent>\n        <el-form-item label=\"备份密码\" prop=\"password\">\n          <el-input v-model=\"form.password\" autocomplete=\"off\" maxlength=\"6\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div class=\"tip\">\n        <p>\n          你可以使用备份密钥从云端导入你的密钥,你的密钥会加密存储在云端，只有使用你的备份密码才能解密,备份密码不可找回，失去后可以去“个人-密钥管理”中重新备份\n        </p>\n        <el-button type=\"primary\" @click=\"addPrivate()\">确定</el-button>\n      </div>\n    </el-dialog>\n    <ImportKey ref=\"ImportKey\" @importback=\"importback\" :creatFlag=\"creatFlag\" @getKey=\"getKey\"></ImportKey>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { getRsaKeys } from '@/utils/rsa';\nimport { send_my_rsa } from '@/server';\nimport { checkRsaPrivate, addPrivate } from '../server';\nimport { SET_USER_PRIVATE_KEY } from '@/store/types';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nimport { getSelfUserId } from '@/utils/const';\nimport SQLUtils from '@/components/db/sqlite.js';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    visible: {\n      // 表格数据源\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      dialogVisible: false,\n      secretKey: '',\n      rsaVersion: 1,\n      short_secretKey: '',\n      form: {\n        password: ''\n      },\n      rules: {\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ]\n      },\n\n      backups: '',\n      creatFlag: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    visible(newVal) {\n      if (newVal == true) {\n        this.checkRsaPrivate();\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    importback(ret) {\n      this.secretKey = ret.rsaPrivate;\n      this.rsaVersion = ret.appVersion;\n      // this.short_secretKey = rsaPrivate.slice(0, 30) + \"...\";\n      // this.checkRsaPrivate()\n    },\n    uploadWind() {\n      this.dialogVisible = true;\n      if (this.$refs['form'] != undefined) {\n        this.$refs.form.resetFields();\n      }\n    },\n    downloadWind() {\n      this.$refs.ImportKey.opendialog();\n    },\n    checkRsaPrivate() {\n      checkRsaPrivate({}).then(res => {\n        if (res.code == 200) {\n          if (res.data) {\n            this.backups = '已备份';\n          } else {\n            this.backups = '未备份';\n          }\n        }\n      });\n    },\n\n    addPrivate() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          addPrivate({\n            rsaPrivate: this.secretKey, //私钥\n            rsaPassword: this.form.password, //私钥密码\n            loginUserId: localStorage.getItem('userId'), //\n            appVersion: this.rsaVersion,\n            source: 'pc'\n          }).then(res => {\n            if (res.code == 200) {\n              this.$message.success(res.msg);\n              this.dialogVisible = false;\n              this.checkRsaPrivate();\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    handlePaste(event) {\n      const items = (event.clipboardData || window.clipboardData).items;\n      let file = null;\n\n      if (!items || items.length === 0) {\n        this.$message.error('当前浏览器不支持本地');\n        return;\n      }\n      // 搜索剪切板items\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          file = items[i].getAsFile();\n          break;\n        }\n      }\n      if (!file) {\n        this.$message.error('粘贴内容非图片');\n        return;\n      }\n      // 此时file就是我们的剪切板中的图片对象\n      // 如果需要预览，可以执行下面代码\n      const reader = new FileReader();\n      // reader.onload = event => {\n      //   preview.innerHTML = `<img src=\"${event.target.result}\">`;\n      // };\n      reader.readAsDataURL(file);\n      this.file = file;\n      // uploadPlans(file);\n    },\n    //上传文件成功后回调\n    uploadPlans(file) {\n      // let file = this.file;\n      if (!file) {\n        this.$message.error('请粘贴图片后上传');\n        return;\n      }\n      this.loading = true;\n      let form = new FormData();\n      form.append('file', file);\n      form.append('type', this.type);\n    },\n    //重新创建秘钥后，秘钥的版本在上传新公钥的同时从后台获取\n    getKey() {\n      let that = this;\n\n      function getRsa(a, b) {\n        that.privateKey = a;\n        that.publicKey = b;\n        that.sendCode(a, b);\n        //localStorage.setItem(key, a);\n        that.secretKey = a;\n        that.short_secretKey = a.slice(0, 30) + '...';\n      }\n\n      getRsaKeys(getRsa);\n    },\n    async sendCode(priKey, pubKey) {\n      let res = await send_my_rsa({\n        rsaPub: pubKey\n      });\n      if (res.code == 200) {\n        this.$message.success('创建成功');\n        this.checkRsaPrivate();\n        //赋值公钥版本，后面需在入本地库\n        this.rsaVersion = res.data.rsaPubVersion;\n        let item = {\n          rsa_pub: res.data.rsaPub,\n          rsa_pub_version: res.data.rsaPubVersion,\n          rsa_pri: priKey\n        };\n        this.$store.dispatch(SET_USER_PRIVATE_KEY, item);\n        let userId = getSelfUserId();\n        SQLUtils.insertOrUpdateTContactsPubkey(userId);\n      }\n    },\n    onCopy() {\n      this.$message.success(this.$t('chat_0026'));\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    // this.checkRsaPrivate();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.secretKey = UserInfoUtils.getCurrentUserPrivateKey();\n    this.rsaVersion = UserInfoUtils.getCurrentUserPrivateKeyLastVersion();\n    console.log('this.secretKey', this.secretKey);\n    this.short_secretKey = this.secretKey.slice(0, 30) + '...';\n    this.checkRsaPrivate();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.secretWrap {\n  font-size: 14px;\n\n  .tip {\n    margin: 20px;\n    line-height: 30px;\n    text-align: center;\n    color: #f57d00;\n\n    p {\n      text-align: left;\n    }\n  }\n\n  .key-backup {\n    height: 20px;\n    font-size: 14px;\n\n    font-weight: 400;\n    color: #333333;\n    line-height: 20px;\n  }\n\n  h3 {\n    background: #f5f7f7;\n    height: 35px;\n    line-height: 35px;\n    padding-left: 10px;\n  }\n\n  .boxcont {\n    padding: 20px 15px;\n\n    p {\n      margin: 15px 0;\n\n      span {\n        color: #2f54eb;\n        cursor: pointer;\n        padding-left: 10px;\n      }\n\n      img {\n        height: 25px;\n        cursor: pointer;\n      }\n    }\n\n    .divice-key {\n      margin: 0 0 18px;\n      height: 17px;\n      font-size: 13px;\n\n      font-weight: 400;\n      color: #666666;\n      line-height: 17px;\n\n      span {\n        height: 17px;\n        font-size: 12px;\n\n        font-weight: 400;\n        color: #2f54eb;\n        line-height: 17px;\n        cursor: pointer;\n        padding-left: 10px;\n      }\n    }\n  }\n\n  .key-download {\n    padding: 15px 0;\n  }\n\n  #preview {\n    border: #ddd solid 1px;\n    width: 200px;\n    height: 200px;\n  }\n\n  .btn-key {\n    // .el-button--mini, .el-button--mini.is-round\n    padding: 5px 10px;\n    line-height: 15px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".secretWrap": {
          "font-size": "14px",
          ".tip": {
            "margin": "20px",
            "line-height": "30px",
            "text-align": "center",
            "color": "#f57d00",
            "p": {
              "text-align": "left"
            }
          },
          ".key-backup": {
            "height": "20px",
            "font-size": "14px",
            "font-weight": "400",
            "color": "#333333",
            "line-height": "20px"
          },
          "h3": {
            "background": "#f5f7f7",
            "height": "35px",
            "line-height": "35px",
            "padding-left": "10px"
          },
          ".boxcont": {
            "padding": "20px 15px",
            "p": {
              "margin": "15px 0",
              "span": {
                "color": "#2f54eb",
                "cursor": "pointer",
                "padding-left": "10px"
              },
              "img": {
                "height": "25px",
                "cursor": "pointer"
              }
            },
            ".divice-key": {
              "margin": "0 0 18px",
              "height": "17px",
              "font-size": "13px",
              "font-weight": "400",
              "color": "#666666",
              "line-height": "17px",
              "span": {
                "height": "17px",
                "font-size": "12px",
                "font-weight": "400",
                "color": "#2f54eb",
                "line-height": "17px",
                "cursor": "pointer",
                "padding-left": "10px"
              }
            }
          },
          ".key-download": {
            "padding": "15px 0"
          },
          "#preview": {
            "border": "#ddd solid 1px",
            "width": "200px",
            "height": "200px"
          },
          ".btn-key": {
            "padding": "5px 10px",
            "line-height": "15px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/GeneralSetting.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 通用设置 -->\n<template>\n  <div class=\"general-setting-wrap\">\n    <!-- <div class=\"general-setting-title\">\n      <div>通用设置</div>\n      <p>个人ID：456098553</p>\n    </div>-->\n    <div class=\"general-setting-content\">\n      <el-alert v-if=\"userStatus == 2\" :title=\"`驳回${userInfo.remark}`\" type=\"error\" show-icon effect=\"dark\"> </el-alert>\n      <el-form @submit.native.prevent :model=\"userInfo\" :rules=\"rules\" ref=\"userInfo\" :label-width=\"labelWidth\" class=\"demo-userInfo\">\n        <el-form-item label=\"账户类型\">\n          <div class=\"box-bg account-wrapper\">\n            <span>\n              {{ userInfo.userType !== 5 ? '普通用户' : '专业用户' }}\n            </span>\n            <template v-if=\"userInfo.userType !== 5\">\n              <!-- 账号状态(null: 表示未提交审核 0:待审核1:审核完成2:驳回） -->\n              <el-button type=\"text\" v-if=\"userStatus === null || userStatus == 2\" @click=\"$router.push('/app/upgradeAccount')\"\n                >升级账户</el-button\n              >\n              <span v-else-if=\"userStatus === 0\" style=\"color: rgba(146, 146, 146, 1)\">待审核</span>\n            </template>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"个人ID\">\n          <div class=\"box-bg\">{{ userInfo.inviteCode }}</div>\n        </el-form-item>\n        <el-form-item label=\"昵称\" prop=\"nickName\">\n          <el-input v-model=\"userInfo.nickName\" maxlength=\"15\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"gender\">\n          <el-radio-group v-model=\"userInfo.gender\">\n            <el-radio label=\"1\" value=\"1\">男</el-radio>\n            <el-radio label=\"2\" value=\"2\">女</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"个性签名\">\n          <el-input type=\"textarea\" v-model=\"userInfo.personalSign\" maxlength=\"50\" show-word-limit :rows=\"5\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"通知设置\" prop=\"delivery\">\n          <el-switch v-model=\"userInfo.delivery\" active-color=\"#999999\" inactive-color=\"#009900\"></el-switch>\n        </el-form-item>\n        <el-form-item>\n          <div class=\"flex btn-wrap\">\n            <div class=\"flex-sub\">\n              <button class=\"submit-btn\" type=\"info\" @click=\"goBack\">\n                返回\n              </button>\n            </div>\n            <div class=\"flex-sub\">\n              <button class=\"submit-btn\" @click=\"submitForm('userInfo')\">\n                保存\n              </button>\n            </div>\n          </div>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div class=\"upload-avatar-wrap\">\n      <!-- :on-preview=\"handlePreview\"\n        :on-remove=\"handleRemove\"\n        :before-remove=\"beforeRemove\"\n        :on-exceed=\"handleExceed\"\n        :limit=\"1\" -->\n      <el-upload\n        class=\"upload-demo\"\n        :action=\"uploadUrl\"\n        :data=\"uploadData\"\n        :headers=\"headers\"\n        :show-file-list=\"false\"\n        :before-upload=\"beforeAvatarUpload\"\n        :on-success=\"handleAvatarSuccess\"\n      >\n        <el-avatar :size=\"48\" fit=\"contain\" :src=\"userInfo.headImg\"></el-avatar>\n        <div class=\"upload-text\">上传</div>\n      </el-upload>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { upload_images_avatar, set_user_info } from './server';\nimport { user_get_team_info } from '@/layouts/user/register/server';\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    let validateGender = (rule, value, callback) => {\n      if (value === '0') {\n        callback(new Error('请选择性别'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      labelWidth: '130px',\n      rules: {\n        nickName: [\n          { required: true, message: '昵称不能为空', trigger: 'blur' }\n          // { min: 1, max: 50, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" }\n        ],\n        gender: [\n          { required: true, message: '请选择性别', trigger: 'blur' },\n          { validator: validateGender, trigger: 'blur' }\n        ]\n      },\n      uploadData: {},\n      uploadUrl: upload_images_avatar(),\n      headers: {\n        Authorization: localStorage.accessToken\n      },\n      userStatus: '', //用户审核状态\n      userRemark: '' // 驳回原因\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo'\n    })\n  },\n\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    init() {\n      this.getUserInfo();\n    },\n    async saveUserInfo() {\n      // 保存个人信息\n      let pararms = {\n        icon: this.userInfo.headImg,\n        gender: this.userInfo.gender,\n        personalSign: this.userInfo.personalSign,\n        nickName: this.userInfo.nickName\n        // ...this.userInfo\n      };\n      let res = await set_user_info(pararms);\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //\n          this.saveUserInfo();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    beforeAvatarUpload(files) {\n      const isLt2M = files.size / 1024 < 300;\n      const textArr = files.name.split('.');\n      const isPng = textArr[textArr.length - 1].toLowerCase();\n      if (isPng == 'jpg' || isPng == 'png' || isPng == 'jpeg') {\n        if (!isLt2M) {\n          this.$message.error('单个文件不可超过300 kB!');\n          return false;\n        }\n      } else {\n        this.$message('仅支持上传png、jpg、jpeg格式的文件');\n        return false;\n      }\n      this.uploadData.file = files.name;\n    },\n    handleAvatarSuccess(data) {\n      if (data.code == '200') {\n        this.userInfo.headImg = data.data.path;\n        this.$message.success(data.msg);\n      } else {\n        this.$message.error(data.msg);\n      }\n    },\n    // 获取用户的审核状态，如果非专业用户时才进行查询\n    async getAccountInfo() {\n      if (this.userInfo.userType === 5) return false;\n      try {\n        let { data } = await user_get_team_info();\n        if (data === null) {\n          this.userStatus = null;\n        } else {\n          this.userStatus = data.status;\n          this.userRemark = data.remark || '';\n        }\n      } catch (err) {\n        throw new Error(err);\n      }\n    },\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO'\n    })\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    setTimeout(this.getAccountInfo, 1500);\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 通用设置 -->\n<template>\n  <div class=\"general-setting-wrap\">\n    <!-- <div class=\"general-setting-title\">\n      <div>通用设置</div>\n      <p>个人ID：456098553</p>\n    </div>-->\n    <div class=\"general-setting-content\">\n      <el-alert v-if=\"userStatus == 2\" :title=\"`驳回${userInfo.remark}`\" type=\"error\" show-icon effect=\"dark\"> </el-alert>\n      <el-form @submit.native.prevent :model=\"userInfo\" :rules=\"rules\" ref=\"userInfo\" :label-width=\"labelWidth\" class=\"demo-userInfo\">\n        <el-form-item label=\"账户类型\">\n          <div class=\"box-bg account-wrapper\">\n            <span>\n              {{ userInfo.userType !== 5 ? '普通用户' : '专业用户' }}\n            </span>\n            <template v-if=\"userInfo.userType !== 5\">\n              <!-- 账号状态(null: 表示未提交审核 0:待审核1:审核完成2:驳回） -->\n              <el-button type=\"text\" v-if=\"userStatus === null || userStatus == 2\" @click=\"$router.push('/app/upgradeAccount')\"\n                >升级账户</el-button\n              >\n              <span v-else-if=\"userStatus === 0\" style=\"color: rgba(146, 146, 146, 1)\">待审核</span>\n            </template>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"个人ID\">\n          <div class=\"box-bg\">{{ userInfo.inviteCode }}</div>\n        </el-form-item>\n        <el-form-item label=\"昵称\" prop=\"nickName\">\n          <el-input v-model=\"userInfo.nickName\" maxlength=\"15\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"gender\">\n          <el-radio-group v-model=\"userInfo.gender\">\n            <el-radio label=\"1\" value=\"1\">男</el-radio>\n            <el-radio label=\"2\" value=\"2\">女</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"个性签名\">\n          <el-input type=\"textarea\" v-model=\"userInfo.personalSign\" maxlength=\"50\" show-word-limit :rows=\"5\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"通知设置\" prop=\"delivery\">\n          <el-switch v-model=\"userInfo.delivery\" active-color=\"#999999\" inactive-color=\"#009900\"></el-switch>\n        </el-form-item>\n        <el-form-item>\n          <div class=\"flex btn-wrap\">\n            <div class=\"flex-sub\">\n              <button class=\"submit-btn\" type=\"info\" @click=\"goBack\">\n                返回\n              </button>\n            </div>\n            <div class=\"flex-sub\">\n              <button class=\"submit-btn\" @click=\"submitForm('userInfo')\">\n                保存\n              </button>\n            </div>\n          </div>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div class=\"upload-avatar-wrap\">\n      <!-- :on-preview=\"handlePreview\"\n        :on-remove=\"handleRemove\"\n        :before-remove=\"beforeRemove\"\n        :on-exceed=\"handleExceed\"\n        :limit=\"1\" -->\n      <el-upload\n        class=\"upload-demo\"\n        :action=\"uploadUrl\"\n        :data=\"uploadData\"\n        :headers=\"headers\"\n        :show-file-list=\"false\"\n        :before-upload=\"beforeAvatarUpload\"\n        :on-success=\"handleAvatarSuccess\"\n      >\n        <el-avatar :size=\"48\" fit=\"contain\" :src=\"userInfo.headImg\"></el-avatar>\n        <div class=\"upload-text\">上传</div>\n      </el-upload>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { upload_images_avatar, set_user_info } from './server';\nimport { user_get_team_info } from '@/layouts/user/register/server';\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    let validateGender = (rule, value, callback) => {\n      if (value === '0') {\n        callback(new Error('请选择性别'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      labelWidth: '130px',\n      rules: {\n        nickName: [\n          { required: true, message: '昵称不能为空', trigger: 'blur' }\n          // { min: 1, max: 50, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" }\n        ],\n        gender: [\n          { required: true, message: '请选择性别', trigger: 'blur' },\n          { validator: validateGender, trigger: 'blur' }\n        ]\n      },\n      uploadData: {},\n      uploadUrl: upload_images_avatar(),\n      headers: {\n        Authorization: localStorage.accessToken\n      },\n      userStatus: '', //用户审核状态\n      userRemark: '' // 驳回原因\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo'\n    })\n  },\n\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    init() {\n      this.getUserInfo();\n    },\n    async saveUserInfo() {\n      // 保存个人信息\n      let pararms = {\n        icon: this.userInfo.headImg,\n        gender: this.userInfo.gender,\n        personalSign: this.userInfo.personalSign,\n        nickName: this.userInfo.nickName\n        // ...this.userInfo\n      };\n      let res = await set_user_info(pararms);\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //\n          this.saveUserInfo();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    beforeAvatarUpload(files) {\n      const isLt2M = files.size / 1024 < 300;\n      const textArr = files.name.split('.');\n      const isPng = textArr[textArr.length - 1].toLowerCase();\n      if (isPng == 'jpg' || isPng == 'png' || isPng == 'jpeg') {\n        if (!isLt2M) {\n          this.$message.error('单个文件不可超过300 kB!');\n          return false;\n        }\n      } else {\n        this.$message('仅支持上传png、jpg、jpeg格式的文件');\n        return false;\n      }\n      this.uploadData.file = files.name;\n    },\n    handleAvatarSuccess(data) {\n      if (data.code == '200') {\n        this.userInfo.headImg = data.data.path;\n        this.$message.success(data.msg);\n      } else {\n        this.$message.error(data.msg);\n      }\n    },\n    // 获取用户的审核状态，如果非专业用户时才进行查询\n    async getAccountInfo() {\n      if (this.userInfo.userType === 5) return false;\n      try {\n        let { data } = await user_get_team_info();\n        if (data === null) {\n          this.userStatus = null;\n        } else {\n          this.userStatus = data.status;\n          this.userRemark = data.remark || '';\n        }\n      } catch (err) {\n        throw new Error(err);\n      }\n    },\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO'\n    })\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    setTimeout(this.getAccountInfo, 1500);\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.general-setting-wrap .upload-avatar-wrap .el-upload-list {\n  display: none;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.general-setting-wrap {\n  position: relative;\n  .box-bg {\n    width: 420px;\n    height: 40px;\n    background: rgba(247, 247, 250, 1);\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    border-radius: 4px;\n    box-sizing: border-box;\n    padding: 0 15px;\n  }\n  .account-wrapper {\n    display: flex;\n    justify-content: space-between;\n    button {\n      font-weight: normal;\n    }\n  }\n  .upload-avatar-wrap {\n    position: absolute;\n    right: calc((100% - 550px - 48px) / 2 / 2);\n    top: 0;\n    .upload-text {\n      color: #2f53eb;\n      font-size: 14px;\n      margin-top: 10px;\n    }\n  }\n  .general-setting-title {\n    text-align: center;\n    line-height: 22px;\n    font-size: 16px;\n    color: #151f34;\n  }\n  .general-setting-title p {\n    color: #9297a3;\n    margin: 10px 0 30px;\n    line-height: 20px;\n    font-size: 14px;\n  }\n  .general-setting-content {\n    width: 550px;\n    margin: 0 auto;\n  }\n  .text {\n    color: #151f34;\n    font-size: 10px;\n    line-height: 14px;\n    margin: 60px 0 10px;\n  }\n  .submit-btn {\n    height: 40px;\n    background: #2f54eb;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n  }\n  .btn-wrap {\n    .flex-sub:nth-child(1) {\n      margin-right: 20px;\n      .submit-btn {\n        background: #9297a3;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".general-setting-wrap .upload-avatar-wrap .el-upload-list": {
          "display": "none"
        }
      },
      {
        ".general-setting-wrap": {
          "position": "relative",
          ".box-bg": {
            "width": "420px",
            "height": "40px",
            "background": "rgba(247, 247, 250, 1)",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "border-radius": "4px",
            "box-sizing": "border-box",
            "padding": "0 15px"
          },
          ".account-wrapper": {
            "display": "flex",
            "justify-content": "space-between",
            "button": {
              "font-weight": "normal"
            }
          },
          ".upload-avatar-wrap": {
            "position": "absolute",
            "right": "calc((100% - 550px - 48px) / 2 / 2)",
            "top": "0",
            ".upload-text": {
              "color": "#2f53eb",
              "font-size": "14px",
              "margin-top": "10px"
            }
          },
          ".general-setting-title": {
            "text-align": "center",
            "line-height": "22px",
            "font-size": "16px",
            "color": "#151f34"
          },
          ".general-setting-title p": {
            "color": "#9297a3",
            "margin": "10px 0 30px",
            "line-height": "20px",
            "font-size": "14px"
          },
          ".general-setting-content": {
            "width": "550px",
            "margin": "0 auto"
          },
          ".text": {
            "color": "#151f34",
            "font-size": "10px",
            "line-height": "14px",
            "margin": "60px 0 10px"
          },
          ".submit-btn": {
            "height": "40px",
            "background": "#2f54eb",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none"
          },
          ".btn-wrap": {
            ".flex-sub:nth-child(1)": {
              "margin-right": "20px",
              ".submit-btn": {
                "background": "#9297a3"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/IdentitySetting.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 身份设置 -->\n<template>\n  <div class=\"identity-setting-wrap\">\n    <div class=\"identity-setting-tab\">\n      <Tab :data=\"tabData\" />\n    </div>\n    <div class=\"identity-setting-content\" id=\"identity-setting-content\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Tab from '@/components/Tab';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Tab\n  },\n  data() {\n    //这里存放数据\n    return {\n      tabPosition: 'left',\n      tabData: [\n        {\n          label: '手机验证',\n          path: '/app/setting/identity/phone'\n        },\n        {\n          label: '邮箱验证',\n          path: '/app/setting/identity/email'\n        },\n        {\n          label: '谷歌验证',\n          path: '/app/setting/identity/google'\n        }\n      ]\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 身份设置 -->\n<template>\n  <div class=\"identity-setting-wrap\">\n    <div class=\"identity-setting-tab\">\n      <Tab :data=\"tabData\" />\n    </div>\n    <div class=\"identity-setting-content\" id=\"identity-setting-content\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Tab from '@/components/Tab';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Tab\n  },\n  data() {\n    //这里存放数据\n    return {\n      tabPosition: 'left',\n      tabData: [\n        {\n          label: '手机验证',\n          path: '/app/setting/identity/phone'\n        },\n        {\n          label: '邮箱验证',\n          path: '/app/setting/identity/email'\n        },\n        {\n          label: '谷歌验证',\n          path: '/app/setting/identity/google'\n        }\n      ]\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.identity-setting-wrap {\n  text-align: center;\n  .identity-setting-content {\n    width: 500px;\n    margin: 30px auto 0;\n    .identity-setting-item-con {\n      display: none;\n    }\n    .active {\n      display: block;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".identity-setting-wrap": {
          "text-align": "center",
          ".identity-setting-content": {
            "width": "500px",
            "margin": "30px auto 0",
            ".identity-setting-item-con": {
              "display": "none"
            },
            ".active": {
              "display": "block"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/form/IdentitySettingPhoneFrom.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 手机验证 -->\n<template>\n  <div class=\"phone-verificaty-wrap\">\n    <el-form :model=\"rulePhoneForm\" :rules=\"rules\" ref=\"rulePhoneForm\" :label-width=\"labelWidth\" class=\"demo-rulePhoneForm\">\n      <div>\n        <el-form-item label=\"请输入手机号码\" prop=\"mobile\">\n          <el-input v-model=\"rulePhoneForm.mobile\" class=\"input-with-select\" maxlength=\"12\">\n            <el-select v-model=\"rulePhoneForm.countryObj\" value-key=\"areaCode\" filterable slot=\"prepend\" placeholder=\"请选择\">\n              <el-option :label=\"item.areaCode\" :value=\"item\" v-for=\"(item, index) in contryList\" :key=\"index\"></el-option>\n            </el-select>\n            <!-- <span slot=\"prefix\" class=\"check-phone-icon\"></span> -->\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"请输入手机验证码\" prop=\"mobileValidCode\">\n          <el-input v-model=\"rulePhoneForm.mobileValidCode\" maxlength=\"6\">\n            <!-- <span slot=\"suffix\" class style=\"color:#2F54EB;margin-right: 10px;\">获取验证码</span> -->\n            <span slot=\"suffix\" v-if=\"this.timer_s\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n              countdownNumber_s + 's'\n            }}</span>\n            <span\n              slot=\"suffix\"\n              v-if=\"!this.timer_s\"\n              style=\"color: #2F54EB; margin-right: 10px; user-select: none\"\n              @click=\"getCode('user_34')\"\n              >获取验证码</span\n            >\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button class=\"submit-btn\" @click.prevent=\"submitForm('rulePhoneForm')\">完成验证</el-button>\n        </el-form-item>\n      </div>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapGetters, mapActions } from 'vuex';\nimport { send_newcode_mobile, get_country_list, bind_first_mobile, rebind_mobile } from '../server';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      labelWidth: '150px',\n      rulePhoneForm: {\n        // emailValidCode: \"\",\n        mobile: '',\n        mobileValidCode: '',\n        countryObj: ''\n      },\n      rules: {\n        // emailValidCode: [\n        //   { required: true, message: \"请输入邮箱验证码\", trigger: \"blur\" },\n        //   {\n        //     pattern: /^[0-9]{6,6}$/,\n        //     message: \"请输入6位数字\"\n        //   }\n        // ],\n        mobile: [\n          { required: true, message: '请输入手机号码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{7,12}$/,\n            message: '请输入7~12位数字'\n          }\n        ],\n        mobileValidCode: [\n          { required: true, message: '请输入手机验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ]\n      },\n      user_data: {},\n      timer: null,\n      countdownNumber: 120,\n      timer_s: null,\n      countdownNumber_s: 120,\n      select: '',\n      contryList: [],\n      orShow: false,\n      flagBind: false\n    };\n  },\n  inheritAttrs: false,\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo',\n      bindUserInfo: 'bindUserInfo'\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    init() {\n      this.getUserInfo();\n      this.geCountryList();\n      this.getBindUserInfor();\n    },\n    async bindMobile() {\n      // 绑定\n      let res = await bind_first_mobile({\n        mobile: this.rulePhoneForm.mobile,\n        countryCode: this.rulePhoneForm.countryObj.code,\n        mobileValidCode: this.rulePhoneForm.mobileValidCode\n      });\n\n      this.warnFn(res);\n    },\n    async reBindMobile() {\n      // 修改绑定\n      let res = await rebind_mobile(this.rulePhoneForm);\n      this.warnFn(res);\n    },\n    warnFn(res) {\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n        this.$emit('closeDig', false);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    async geCountryList() {\n      // 获取区号列表\n      try {\n        let res = await get_country_list();\n        if (res.code == '200') {\n          this.contryList = res.data;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    getCode(templateCode) {\n      if (templateCode == 'user_33') {\n        this.countdownNumber = 120;\n        this.timer = setInterval(() => {\n          this.countdown(templateCode);\n        }, 1000);\n      }\n      if (templateCode == 'user_34') {\n        this.countdownNumber_s = 120;\n        this.timer_s = setInterval(() => {\n          this.countdown(templateCode);\n        }, 1000);\n      }\n\n      this.sendCodeHand(templateCode);\n    },\n    countdown(templateCode) {\n      // 倒计时\n      if (templateCode == 'user_33') {\n        // 邮箱验证码\n        if (this.countdownNumber == 0) {\n          clearInterval(this.timer);\n          this.timer = null;\n          return;\n        }\n        this.countdownNumber -= 1;\n      }\n      if (templateCode == 'user_34') {\n        // 手机验证码\n        if (this.countdownNumber_s == 0) {\n          clearInterval(this.timer_s);\n          this.timer_s = null;\n          return;\n        }\n        this.countdownNumber_s -= 1;\n      }\n    },\n    async sendCodeHand(templateCode) {\n      let res = await send_newcode_mobile({\n        templateCode: templateCode,\n        mobile: this.rulePhoneForm.mobile,\n        areaCode: this.rulePhoneForm.countryObj.areaCode,\n        countryCode: this.rulePhoneForm.countryObj.code\n      });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    checkBindHand(val) {\n      this.orShow = true;\n      // 是否绑定的标识\n      this.flagBind = val;\n    },\n\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //绑定的手机不能修改\n          // if(this.flagBind) {\n          //   // 已经认证\n          //   this.reBindMobile()\n          // } else {\n          //   this.bindMobile()\n          // }\n          this.bindMobile();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO',\n      getBindUserInfor: 'GET_BIND_USER_INFO'\n    })\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {\n    clearInterval(this.timer);\n    clearInterval(this.timer_s);\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 手机验证 -->\n<template>\n  <div class=\"phone-verificaty-wrap\">\n    <el-form :model=\"rulePhoneForm\" :rules=\"rules\" ref=\"rulePhoneForm\" :label-width=\"labelWidth\" class=\"demo-rulePhoneForm\">\n      <div>\n        <el-form-item label=\"请输入手机号码\" prop=\"mobile\">\n          <el-input v-model=\"rulePhoneForm.mobile\" class=\"input-with-select\" maxlength=\"12\">\n            <el-select v-model=\"rulePhoneForm.countryObj\" value-key=\"areaCode\" filterable slot=\"prepend\" placeholder=\"请选择\">\n              <el-option :label=\"item.areaCode\" :value=\"item\" v-for=\"(item, index) in contryList\" :key=\"index\"></el-option>\n            </el-select>\n            <!-- <span slot=\"prefix\" class=\"check-phone-icon\"></span> -->\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"请输入手机验证码\" prop=\"mobileValidCode\">\n          <el-input v-model=\"rulePhoneForm.mobileValidCode\" maxlength=\"6\">\n            <!-- <span slot=\"suffix\" class style=\"color:#2F54EB;margin-right: 10px;\">获取验证码</span> -->\n            <span slot=\"suffix\" v-if=\"this.timer_s\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n              countdownNumber_s + 's'\n            }}</span>\n            <span\n              slot=\"suffix\"\n              v-if=\"!this.timer_s\"\n              style=\"color: #2F54EB; margin-right: 10px; user-select: none\"\n              @click=\"getCode('user_34')\"\n              >获取验证码</span\n            >\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button class=\"submit-btn\" @click.prevent=\"submitForm('rulePhoneForm')\">完成验证</el-button>\n        </el-form-item>\n      </div>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapGetters, mapActions } from 'vuex';\nimport { send_newcode_mobile, get_country_list, bind_first_mobile, rebind_mobile } from '../server';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      labelWidth: '150px',\n      rulePhoneForm: {\n        // emailValidCode: \"\",\n        mobile: '',\n        mobileValidCode: '',\n        countryObj: ''\n      },\n      rules: {\n        // emailValidCode: [\n        //   { required: true, message: \"请输入邮箱验证码\", trigger: \"blur\" },\n        //   {\n        //     pattern: /^[0-9]{6,6}$/,\n        //     message: \"请输入6位数字\"\n        //   }\n        // ],\n        mobile: [\n          { required: true, message: '请输入手机号码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{7,12}$/,\n            message: '请输入7~12位数字'\n          }\n        ],\n        mobileValidCode: [\n          { required: true, message: '请输入手机验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ]\n      },\n      user_data: {},\n      timer: null,\n      countdownNumber: 120,\n      timer_s: null,\n      countdownNumber_s: 120,\n      select: '',\n      contryList: [],\n      orShow: false,\n      flagBind: false\n    };\n  },\n  inheritAttrs: false,\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo',\n      bindUserInfo: 'bindUserInfo'\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    init() {\n      this.getUserInfo();\n      this.geCountryList();\n      this.getBindUserInfor();\n    },\n    async bindMobile() {\n      // 绑定\n      let res = await bind_first_mobile({\n        mobile: this.rulePhoneForm.mobile,\n        countryCode: this.rulePhoneForm.countryObj.code,\n        mobileValidCode: this.rulePhoneForm.mobileValidCode\n      });\n\n      this.warnFn(res);\n    },\n    async reBindMobile() {\n      // 修改绑定\n      let res = await rebind_mobile(this.rulePhoneForm);\n      this.warnFn(res);\n    },\n    warnFn(res) {\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n        this.$emit('closeDig', false);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    async geCountryList() {\n      // 获取区号列表\n      try {\n        let res = await get_country_list();\n        if (res.code == '200') {\n          this.contryList = res.data;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    getCode(templateCode) {\n      if (templateCode == 'user_33') {\n        this.countdownNumber = 120;\n        this.timer = setInterval(() => {\n          this.countdown(templateCode);\n        }, 1000);\n      }\n      if (templateCode == 'user_34') {\n        this.countdownNumber_s = 120;\n        this.timer_s = setInterval(() => {\n          this.countdown(templateCode);\n        }, 1000);\n      }\n\n      this.sendCodeHand(templateCode);\n    },\n    countdown(templateCode) {\n      // 倒计时\n      if (templateCode == 'user_33') {\n        // 邮箱验证码\n        if (this.countdownNumber == 0) {\n          clearInterval(this.timer);\n          this.timer = null;\n          return;\n        }\n        this.countdownNumber -= 1;\n      }\n      if (templateCode == 'user_34') {\n        // 手机验证码\n        if (this.countdownNumber_s == 0) {\n          clearInterval(this.timer_s);\n          this.timer_s = null;\n          return;\n        }\n        this.countdownNumber_s -= 1;\n      }\n    },\n    async sendCodeHand(templateCode) {\n      let res = await send_newcode_mobile({\n        templateCode: templateCode,\n        mobile: this.rulePhoneForm.mobile,\n        areaCode: this.rulePhoneForm.countryObj.areaCode,\n        countryCode: this.rulePhoneForm.countryObj.code\n      });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    checkBindHand(val) {\n      this.orShow = true;\n      // 是否绑定的标识\n      this.flagBind = val;\n    },\n\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //绑定的手机不能修改\n          // if(this.flagBind) {\n          //   // 已经认证\n          //   this.reBindMobile()\n          // } else {\n          //   this.bindMobile()\n          // }\n          this.bindMobile();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO',\n      getBindUserInfor: 'GET_BIND_USER_INFO'\n    })\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {\n    clearInterval(this.timer);\n    clearInterval(this.timer_s);\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.phone-verificaty-wrap .input-with-select .el-input-group__prepend {\n  background-color: #fff;\n}\n\n.phone-verificaty-wrap .input-with-select .el-select .el-input {\n  width: 100px;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.phone-verificaty-wrap {\n  .submit-btn {\n    height: 40px;\n    background: #2f54eb;\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  }\n\n  .bind-phone {\n    text-align: left;\n    color: #9297a3;\n\n    i {\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".phone-verificaty-wrap .input-with-select .el-input-group__prepend": {
          "background-color": "#fff"
        },
        ".phone-verificaty-wrap .input-with-select .el-select .el-input": {
          "width": "100px"
        }
      },
      {
        ".phone-verificaty-wrap": {
          ".submit-btn": {
            "height": "40px",
            "background": "#2f54eb",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)"
          },
          ".bind-phone": {
            "text-align": "left",
            "color": "#9297a3",
            "i": {}
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/form/IdentitySettingEmailFrom.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 邮箱验证 -->\n<template>\n  <div class=\"email-verificaty-wrap\">\n    <el-form :model=\"ruleEmailForm\" :rules=\"rules\" ref=\"ruleEmailForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n      <el-form-item label=\"邮箱地址\" prop=\"email\">\n        <el-input v-model=\"ruleEmailForm.email\" clearable></el-input>\n      </el-form-item>\n      <el-form-item label=\"邮箱验证码\" prop=\"emailValidCode\">\n        <el-input v-model=\"ruleEmailForm.emailValidCode\" maxlength=\"6\">\n          <span slot=\"suffix\" v-if=\"this.timer_s\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n            countdownNumber_s + 's'\n          }}</span>\n          <span\n            slot=\"suffix\"\n            v-if=\"!this.timer_s\"\n            style=\"\n              color: #2F54EB;\n              margin-right: 10px;\n              user-select: none;\n              cursor: pointer;\n            \"\n            @click=\"getCode('user_40')\"\n            >获取验证码</span\n          >\n        </el-input>\n        <!-- <div style=\"color:#9297A3\" class=\"text-left\">更换后请重新登录</div> -->\n      </el-form-item>\n      <el-form-item>\n        <el-button class=\"submit-btn\" @click.prevent=\"submitForm('ruleEmailForm')\">完成验证</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapGetters, mapActions } from 'vuex';\nimport { bind_first_email, rebind_email, emailvalidCode } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      labelWidth: '150px',\n      ruleEmailForm: {\n        // mobileValidCode: \"\",\n        email: '',\n        emailValidCode: ''\n      },\n      rules: {\n        // mobileValidCode: [\n        //  { required: true, message: \"请输入手机验证码\", trigger: \"blur\" },\n        //   {\n        //     pattern: /^[0-9]{6,6}$/,\n        //     message: \"请输入6位数字\"\n        //   }\n        // ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          {\n            type: 'email',\n            message: '请输入正确的邮箱地址',\n            trigger: ['blur', 'change']\n          }\n        ],\n        emailValidCode: [\n          { required: true, message: '请输入邮箱验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ]\n      },\n      user_data: {},\n      timer: null,\n      countdownNumber: 120,\n      timer_s: null,\n      countdownNumber_s: 120,\n      select: '',\n      contryList: [],\n      orShow: false,\n      flagBind: false\n    };\n  },\n  inheritAttrs: false,\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo',\n      bindUserInfo: 'bindUserInfo'\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    init() {\n      this.getUserInfo();\n      this.getBindUserInfor();\n    },\n    async bindEmail() {\n      // 绑定\n      let res = await bind_first_email(this.ruleEmailForm);\n      this.warnFn(res);\n    },\n    async reBindEmail() {\n      // 修改绑定\n      let res = await rebind_email(this.ruleEmailForm);\n      this.warnFn(res);\n    },\n    warnFn(res) {\n      if (res.data && res.code == '200') {\n        this.$message.success(res.msg || res.data.msg);\n        this.$emit('closeDig', false);\n        //TODO 修改邮箱后，生新生成了token，需要更新token\n      } else {\n        this.$message.error(res.msg || res.data.msg);\n      }\n    },\n    checkBindHand(val) {\n      this.orShow = true;\n      // 是否绑定的标识\n      this.flagBind = val;\n    },\n    getCode(templateCode) {\n      // if (templateCode == \"user_40\") {\n      //   this.countdownNumber_s = 120;\n      //   this.timer_s = setInterval(() => {\n      //     this.countdown(templateCode);\n      //   }, 1000);\n      // }\n      // if (templateCode == \"user_39\") {\n      //   this.countdownNumber = 120;\n      //   this.timer = setInterval(() => {\n      //     this.countdown(templateCode);\n      //   }, 1000);\n      // }\n\n      this.sendCodeHand(templateCode); //不输入邮箱或者邮箱格式不正确时，点击获取验证码，弹出错误提示信息的时候，倒计时不应该开始进行计时，应该还是显示获取验证码按钮\n    },\n    countdown(templateCode) {\n      // 倒计时\n      if (templateCode == 'user_40') {\n        // 邮箱验证码\n        if (this.countdownNumber_s == 0) {\n          clearInterval(this.timer_s);\n          this.timer_s = null;\n          return;\n        }\n        this.countdownNumber_s -= 1;\n      }\n      if (templateCode == 'user_39') {\n        // 手机验证码\n        if (this.countdownNumber_s == 0) {\n          clearInterval(this.timer_s);\n          this.timer_s = null;\n          return;\n        }\n        this.countdownNumber_s -= 1;\n      }\n    },\n    async sendCodeHand(templateCode) {\n      let res = await emailvalidCode({\n        email: this.ruleEmailForm.email,\n        templateCode: templateCode\n      });\n      if (res.data == true && res.code == '200') {\n        window.vm.$message.success(res.msg);\n        if (templateCode == 'user_40') {\n          this.countdownNumber_s = 120;\n          this.timer_s = setInterval(() => {\n            this.countdown(templateCode);\n          }, 1000);\n        }\n        if (templateCode == 'user_39') {\n          this.countdownNumber = 120;\n          this.timer = setInterval(() => {\n            this.countdown(templateCode);\n          }, 1000);\n        }\n      } else {\n        window.vm.$message.error(res.msg || res.data.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (this.flagBind) {\n            // 已经认证\n            this.reBindEmail();\n          } else {\n            this.bindEmail();\n          }\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO',\n      getBindUserInfor: 'GET_BIND_USER_INFO'\n    })\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 邮箱验证 -->\n<template>\n  <div class=\"email-verificaty-wrap\">\n    <el-form :model=\"ruleEmailForm\" :rules=\"rules\" ref=\"ruleEmailForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n      <el-form-item label=\"邮箱地址\" prop=\"email\">\n        <el-input v-model=\"ruleEmailForm.email\" clearable></el-input>\n      </el-form-item>\n      <el-form-item label=\"邮箱验证码\" prop=\"emailValidCode\">\n        <el-input v-model=\"ruleEmailForm.emailValidCode\" maxlength=\"6\">\n          <span slot=\"suffix\" v-if=\"this.timer_s\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n            countdownNumber_s + 's'\n          }}</span>\n          <span\n            slot=\"suffix\"\n            v-if=\"!this.timer_s\"\n            style=\"\n              color: #2F54EB;\n              margin-right: 10px;\n              user-select: none;\n              cursor: pointer;\n            \"\n            @click=\"getCode('user_40')\"\n            >获取验证码</span\n          >\n        </el-input>\n        <!-- <div style=\"color:#9297A3\" class=\"text-left\">更换后请重新登录</div> -->\n      </el-form-item>\n      <el-form-item>\n        <el-button class=\"submit-btn\" @click.prevent=\"submitForm('ruleEmailForm')\">完成验证</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapGetters, mapActions } from 'vuex';\nimport { bind_first_email, rebind_email, emailvalidCode } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      labelWidth: '150px',\n      ruleEmailForm: {\n        // mobileValidCode: \"\",\n        email: '',\n        emailValidCode: ''\n      },\n      rules: {\n        // mobileValidCode: [\n        //  { required: true, message: \"请输入手机验证码\", trigger: \"blur\" },\n        //   {\n        //     pattern: /^[0-9]{6,6}$/,\n        //     message: \"请输入6位数字\"\n        //   }\n        // ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          {\n            type: 'email',\n            message: '请输入正确的邮箱地址',\n            trigger: ['blur', 'change']\n          }\n        ],\n        emailValidCode: [\n          { required: true, message: '请输入邮箱验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ]\n      },\n      user_data: {},\n      timer: null,\n      countdownNumber: 120,\n      timer_s: null,\n      countdownNumber_s: 120,\n      select: '',\n      contryList: [],\n      orShow: false,\n      flagBind: false\n    };\n  },\n  inheritAttrs: false,\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo',\n      bindUserInfo: 'bindUserInfo'\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    init() {\n      this.getUserInfo();\n      this.getBindUserInfor();\n    },\n    async bindEmail() {\n      // 绑定\n      let res = await bind_first_email(this.ruleEmailForm);\n      this.warnFn(res);\n    },\n    async reBindEmail() {\n      // 修改绑定\n      let res = await rebind_email(this.ruleEmailForm);\n      this.warnFn(res);\n    },\n    warnFn(res) {\n      if (res.data && res.code == '200') {\n        this.$message.success(res.msg || res.data.msg);\n        this.$emit('closeDig', false);\n        //TODO 修改邮箱后，生新生成了token，需要更新token\n      } else {\n        this.$message.error(res.msg || res.data.msg);\n      }\n    },\n    checkBindHand(val) {\n      this.orShow = true;\n      // 是否绑定的标识\n      this.flagBind = val;\n    },\n    getCode(templateCode) {\n      // if (templateCode == \"user_40\") {\n      //   this.countdownNumber_s = 120;\n      //   this.timer_s = setInterval(() => {\n      //     this.countdown(templateCode);\n      //   }, 1000);\n      // }\n      // if (templateCode == \"user_39\") {\n      //   this.countdownNumber = 120;\n      //   this.timer = setInterval(() => {\n      //     this.countdown(templateCode);\n      //   }, 1000);\n      // }\n\n      this.sendCodeHand(templateCode); //不输入邮箱或者邮箱格式不正确时，点击获取验证码，弹出错误提示信息的时候，倒计时不应该开始进行计时，应该还是显示获取验证码按钮\n    },\n    countdown(templateCode) {\n      // 倒计时\n      if (templateCode == 'user_40') {\n        // 邮箱验证码\n        if (this.countdownNumber_s == 0) {\n          clearInterval(this.timer_s);\n          this.timer_s = null;\n          return;\n        }\n        this.countdownNumber_s -= 1;\n      }\n      if (templateCode == 'user_39') {\n        // 手机验证码\n        if (this.countdownNumber_s == 0) {\n          clearInterval(this.timer_s);\n          this.timer_s = null;\n          return;\n        }\n        this.countdownNumber_s -= 1;\n      }\n    },\n    async sendCodeHand(templateCode) {\n      let res = await emailvalidCode({\n        email: this.ruleEmailForm.email,\n        templateCode: templateCode\n      });\n      if (res.data == true && res.code == '200') {\n        window.vm.$message.success(res.msg);\n        if (templateCode == 'user_40') {\n          this.countdownNumber_s = 120;\n          this.timer_s = setInterval(() => {\n            this.countdown(templateCode);\n          }, 1000);\n        }\n        if (templateCode == 'user_39') {\n          this.countdownNumber = 120;\n          this.timer = setInterval(() => {\n            this.countdown(templateCode);\n          }, 1000);\n        }\n      } else {\n        window.vm.$message.error(res.msg || res.data.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (this.flagBind) {\n            // 已经认证\n            this.reBindEmail();\n          } else {\n            this.bindEmail();\n          }\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO',\n      getBindUserInfor: 'GET_BIND_USER_INFO'\n    })\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.email-verificaty-wrap {\n  .submit-btn {\n    height: 40px;\n    background: #2f54eb;\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  }\n  .bind-phone {\n    text-align: left;\n    color: #9297a3;\n    i {\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".email-verificaty-wrap": {
          ".submit-btn": {
            "height": "40px",
            "background": "#2f54eb",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)"
          },
          ".bind-phone": {
            "text-align": "left",
            "color": "#9297a3",
            "i": {}
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/form/IdentitySettingGoogleFrom.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--谷歌验证 -->\n<template>\n  <div class=\"google-verificaty-wrap\">\n    <el-form :model=\"ruleGoogleForm\" :rules=\"rules\" ref=\"ruleGoogleForm\" :label-width=\"labelWidth\" class=\"demo-ruleGoogleForm\">\n      <el-form-item label=\"账户名\">\n        <div class=\"account-name\">{{ googleData.userName }}</div>\n        <div class=\"account-code\">\n          <div id=\"qrcode\"></div>\n          <div class=\"copy-btn\">\n            <p>请妥善备份密钥以防遗失</p>\n            <div>\n              {{ googleData.secretKey }}\n              <span v-clipboard:copy=\"googleData.secretKey\" v-clipboard:success=\"onCopy\">复制</span>\n            </div>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"谷歌验证码\" prop=\"googleValidCode\">\n        <el-input\n          autofocus\n          minlength=\"6\"\n          maxlength=\"6\"\n          clearable\n          v-model=\"ruleGoogleForm.googleValidCode\"\n          onkeyup=\"value=value.replace(/[^\\d]/g,'')\"\n          placeholder=\"请输入谷歌验证码\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button class=\"submit-btn\" :loading=\"saveBtn\" @click.prevent=\"submitForm('ruleGoogleForm')\">\n          完成验证\n        </el-button>\n      </el-form-item>\n      <!-- </div> -->\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_google_refresh, google_bind } from '../server';\nimport QRCode from 'qrcodejs2-didi';\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      labelWidth: '150px',\n      ruleGoogleForm: {\n        googleValidCode: '',\n        userId: localStorage.getItem('userId')\n      },\n      rules: {\n        googleValidCode: [\n          { required: true, message: '请输入谷歌验证码', trigger: 'blur' },\n          {\n            min: 6,\n            max: 6,\n            message: '请输入6位数字的谷歌验证码',\n            trigger: 'change'\n          }\n        ]\n      },\n      googleData: {},\n      saveBtn: false,\n      orShow: false\n    };\n  },\n  inheritAttrs: false,\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      bindUserInfo: 'bindUserInfo'\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    init() {\n      this.getBindUserInfor();\n      this.get_google_refresh_hand();\n    },\n    async get_google_refresh_hand() {\n      let res = await get_google_refresh();\n      this.googleData = res.data;\n\n      if (!this.bindUserInfo.google) {\n        this.crateQrcode();\n      }\n    },\n    checkBindHand() {\n      this.orShow = true;\n      // 是否绑定的标识\n    },\n    crateQrcode() {\n      this.qr = new QRCode('qrcode', {\n        width: 102,\n        height: 102, // 高度\n        text: this.googleData.qrUrl, // 二维码内容\n        render: 'canvas'\n      });\n    },\n    async save_google_bind() {\n      try {\n        let res = await google_bind(this.ruleGoogleForm);\n        this.saveBtn = false;\n        console.log(res);\n        if (res.code == '200') {\n          this.$message.success(res.msg);\n          this.$emit('closeDig', false);\n        } else {\n          this.$message.error(res.data.msg);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.saveBtn = true;\n          this.save_google_bind();\n        }\n      });\n    },\n\n    onCopy() {\n      this.$message.success(this.$t('chat_0026'));\n    },\n\n    ...mapActions({\n      getBindUserInfor: 'GET_BIND_USER_INFO'\n    })\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.init();\n    console.log(QRCode, 'QRCode');\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--谷歌验证 -->\n<template>\n  <div class=\"google-verificaty-wrap\">\n    <el-form :model=\"ruleGoogleForm\" :rules=\"rules\" ref=\"ruleGoogleForm\" :label-width=\"labelWidth\" class=\"demo-ruleGoogleForm\">\n      <el-form-item label=\"账户名\">\n        <div class=\"account-name\">{{ googleData.userName }}</div>\n        <div class=\"account-code\">\n          <div id=\"qrcode\"></div>\n          <div class=\"copy-btn\">\n            <p>请妥善备份密钥以防遗失</p>\n            <div>\n              {{ googleData.secretKey }}\n              <span v-clipboard:copy=\"googleData.secretKey\" v-clipboard:success=\"onCopy\">复制</span>\n            </div>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"谷歌验证码\" prop=\"googleValidCode\">\n        <el-input\n          autofocus\n          minlength=\"6\"\n          maxlength=\"6\"\n          clearable\n          v-model=\"ruleGoogleForm.googleValidCode\"\n          onkeyup=\"value=value.replace(/[^\\d]/g,'')\"\n          placeholder=\"请输入谷歌验证码\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button class=\"submit-btn\" :loading=\"saveBtn\" @click.prevent=\"submitForm('ruleGoogleForm')\">\n          完成验证\n        </el-button>\n      </el-form-item>\n      <!-- </div> -->\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_google_refresh, google_bind } from '../server';\nimport QRCode from 'qrcodejs2-didi';\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      labelWidth: '150px',\n      ruleGoogleForm: {\n        googleValidCode: '',\n        userId: localStorage.getItem('userId')\n      },\n      rules: {\n        googleValidCode: [\n          { required: true, message: '请输入谷歌验证码', trigger: 'blur' },\n          {\n            min: 6,\n            max: 6,\n            message: '请输入6位数字的谷歌验证码',\n            trigger: 'change'\n          }\n        ]\n      },\n      googleData: {},\n      saveBtn: false,\n      orShow: false\n    };\n  },\n  inheritAttrs: false,\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      bindUserInfo: 'bindUserInfo'\n    })\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    init() {\n      this.getBindUserInfor();\n      this.get_google_refresh_hand();\n    },\n    async get_google_refresh_hand() {\n      let res = await get_google_refresh();\n      this.googleData = res.data;\n\n      if (!this.bindUserInfo.google) {\n        this.crateQrcode();\n      }\n    },\n    checkBindHand() {\n      this.orShow = true;\n      // 是否绑定的标识\n    },\n    crateQrcode() {\n      this.qr = new QRCode('qrcode', {\n        width: 102,\n        height: 102, // 高度\n        text: this.googleData.qrUrl, // 二维码内容\n        render: 'canvas'\n      });\n    },\n    async save_google_bind() {\n      try {\n        let res = await google_bind(this.ruleGoogleForm);\n        this.saveBtn = false;\n        console.log(res);\n        if (res.code == '200') {\n          this.$message.success(res.msg);\n          this.$emit('closeDig', false);\n        } else {\n          this.$message.error(res.data.msg);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.saveBtn = true;\n          this.save_google_bind();\n        }\n      });\n    },\n\n    onCopy() {\n      this.$message.success(this.$t('chat_0026'));\n    },\n\n    ...mapActions({\n      getBindUserInfor: 'GET_BIND_USER_INFO'\n    })\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.init();\n    console.log(QRCode, 'QRCode');\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.google-verificaty-wrap {\n  text-align: left;\n  .submit-btn {\n    height: 40px;\n    background: #2f54eb;\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    cursor: pointer;\n  }\n  .bind-phone {\n    text-align: left;\n    color: #9297a3;\n    i {\n    }\n  }\n  .account-name {\n    color: #151f34;\n    font-size: 14px;\n    font-weight: 600;\n  }\n  .account-code {\n    display: flex;\n    // justify-items: ;\n    .copy-btn {\n      flex: 1;\n      margin-left: 10px;\n      display: flex;\n      width: 100%;\n      flex-direction: column;\n      justify-content: flex-end;\n      div,\n      p {\n        line-height: 17px;\n        color: #9297a3;\n        font-size: 12px;\n      }\n      div {\n        color: #151f34;\n        font-weight: 600;\n        margin-top: 5px;\n        span {\n          color: #2f54eb;\n          display: inline-block;\n          margin-left: 10px;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".google-verificaty-wrap": {
          "text-align": "left",
          ".submit-btn": {
            "height": "40px",
            "background": "#2f54eb",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "cursor": "pointer"
          },
          ".bind-phone": {
            "text-align": "left",
            "color": "#9297a3",
            "i": {}
          },
          ".account-name": {
            "color": "#151f34",
            "font-size": "14px",
            "font-weight": "600"
          },
          ".account-code": {
            "display": "flex",
            ".copy-btn": {
              "flex": "1",
              "margin-left": "10px",
              "display": "flex",
              "width": "100%",
              "flex-direction": "column",
              "justify-content": "flex-end",
              "div,      p": {
                "line-height": "17px",
                "color": "#9297a3",
                "font-size": "12px"
              },
              "div": {
                "color": "#151f34",
                "font-weight": "600",
                "margin-top": "5px",
                "span": {
                  "color": "#2f54eb",
                  "display": "inline-block",
                  "margin-left": "10px",
                  "cursor": "pointer"
                }
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/SafeSetting.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 安全设置 -->\n<template>\n  <div class=\"safe-setting-wrap\">\n    <div class=\"text-center\">\n      <!-- <Tab :data=\"tabData\"/> -->\n      <div style=\"margin: 10px auto; width: 500px; text-align: left\">\n        <el-form :model=\"comForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n          <el-form-item label=\"当前邮箱\">\n            <div class=\"bind-phone\">\n              <span class=\"greybg\">{{ comForm.email ? comForm.email : '未绑定' }}</span>\n              <img v-if=\"!comForm.email\" width=\"20px\" src=\"../../assets/images/drawal_editor.png\" alt @click=\"BindEmail(comForm)\" />\n            </div>\n          </el-form-item>\n          <el-form-item label=\"谷歌身份验证器\">\n            <div class=\"bind-phone\">\n              <span class=\"greybg\">{{ comForm.googleAuthStatus ? '已绑定' : '未绑定' }}</span>\n              <img v-if=\"!comForm.googleAuthStatus\" width=\"20px\" src=\"../../assets/images/drawal_editor.png\" alt @click=\"bindGoogle()\" />\n            </div>\n          </el-form-item>\n          <el-form-item label=\"登录密码\">\n            <div class=\"bind-phone\">\n              <span class=\"greybg\">********</span>\n              <img width=\"20px\" src=\"../../assets/images/drawal_editor.png\" alt @click=\"modifyPword()\" />\n            </div>\n          </el-form-item>\n          <el-form-item label=\"资金密码\">\n            <div class=\"bind-phone\">\n              <span class=\"greybg\">{{ comForm.existFundPassWord ? '******' : '未设置' }}</span>\n              <img width=\"20px\" src=\"../../assets/images/drawal_editor.png\" alt @click=\"modify_jyPword()\" />\n            </div>\n          </el-form-item>\n        </el-form>\n      </div>\n    </div>\n    <el-dialog\n      title=\"绑定手机\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"dialogVisible\"\n      customClass=\"customWidth\"\n      @close=\"dialogVisible = false\"\n    >\n      <IdentitySettingPhoneFrom @closeDig=\"closeDig\"></IdentitySettingPhoneFrom>\n    </el-dialog>\n    <el-dialog\n      title=\"绑定邮箱\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"dialogVisible_email\"\n      :modal=\"false\"\n      customClass=\"customWidth\"\n      @close=\"closeIdentitySettingEmailFrom\"\n    >\n      <IdentitySettingEmailFrom ref=\"IdentitySettingEmailFrom\" @closeDig=\"closeDigEamil\"></IdentitySettingEmailFrom>\n    </el-dialog>\n    <el-dialog\n      title=\"谷歌身份验证器\"\n      :visible.sync=\"dialogVisible_google\"\n      :close-on-click-modal=\"false\"\n      customClass=\"customWidth\"\n      :modal=\"false\"\n      @close=\"dialogVisible_google = false\"\n    >\n      <IdentitySettingGoogleFrom @closeDig=\"closeDigGoogle\"></IdentitySettingGoogleFrom>\n    </el-dialog>\n\n    <el-dialog\n      title=\"登录密码修改\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"dialogVisible_passw\"\n      :modal=\"false\"\n      customClass=\"customWidth\"\n      @close=\"dialogVisible_passw = false\"\n    >\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n        <el-tab-pane label=\"邮箱验证\" name=\"first\" v-if=\"comForm.email\">\n          <EmailFormPass ref=\"mychild\" :comForm=\"comForm\" @closeDigpass=\"closeDigpass\"></EmailFormPass>\n        </el-tab-pane>\n        <!-- <el-tab-pane label=\"手机验证\" name=\"second\" v-if=\"comForm.mobile\" >\n              <PhoneFormPass  :comForm='comForm' @closeDig=\"closeDigGoogle\" ></PhoneFormPass>\n        </el-tab-pane>-->\n      </el-tabs>\n    </el-dialog>\n    <el-dialog\n      :title=\"fundsTitle\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"dialogVisible_passjy\"\n      customClass=\"customWidth\"\n      :modal=\"false\"\n      @close=\"dialogVisible_passjy = false\"\n    >\n      <el-tabs class=\"fundDialog\" v-model=\"activeName2\" @tab-click=\"handleClick\">\n        <!-- <el-tab-pane label=\"邮箱验证\" name=\"email\" v-if=\"comForm.email\"> -->\n        <el-tab-pane :label=\"verifiEmail\" name=\"email\" v-if=\"comForm.email\">\n          <EmailForm ref=\"jyEmailForm\" :comForm=\"comForm\" @closeDigjy=\"closeDigjy\" :jyFlag=\"jyFlag\"></EmailForm>\n        </el-tab-pane>\n        <!-- <el-tab-pane label=\"手机验证\" name=\"mobile\" v-if=\"comForm.mobile\" >\n              <PhoneForm  :comForm='comForm' @closeDig=\"closeDigGoogle\" ></PhoneForm>\n        </el-tab-pane>-->\n        <el-tab-pane label=\"谷歌验证\" name=\"google\" v-if=\"comForm.googleAuthStatus\">\n          <GoogleForm ref=\"jyGoogleForm\" :comForm=\"comForm\" @closeDigjy=\"closeDigjy\" :jyFlag=\"jyFlag\"></GoogleForm>\n        </el-tab-pane>\n      </el-tabs>\n    </el-dialog>\n    <!-- <div class=\"safe-setting-content\" id=\"safe-setting-content\">\n      <router-view></router-view>\n    </div>-->\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapActions } from 'vuex';\nimport IdentitySettingPhoneFrom from './form/IdentitySettingPhoneFrom';\nimport IdentitySettingEmailFrom from './form/IdentitySettingEmailFrom';\nimport IdentitySettingGoogleFrom from './form/IdentitySettingGoogleFrom';\nimport EmailFormPass from '../funds/tradepsd/from/EmailFormPass';\nimport EmailForm from '../funds/tradepsd/from/EmailForm';\nimport GoogleForm from '../funds/tradepsd/from/GoogleForm';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    IdentitySettingPhoneFrom,\n    IdentitySettingEmailFrom,\n    IdentitySettingGoogleFrom,\n    EmailFormPass,\n    EmailForm,\n    GoogleForm\n  },\n  data() {\n    //这里存放数据\n    return {\n      jyFlag: false, //没有设置过交易密码\n      activeName2: 'email',\n      activeName: 'first',\n      dialogVisible: false,\n      dialogVisible_email: false,\n      dialogVisible_google: false,\n      dialogVisible_passw: false,\n      dialogVisible_passjy: false,\n      comForm: {\n        userName: '',\n        secureLevel: 2\n      },\n      labelWidth: '150px',\n      tabData: [\n        {\n          label: '邮箱验证',\n          path: '/app/setting/safe/email'\n        },\n        {\n          label: '手机验证',\n          path: '/app/setting/safe/phone'\n        }\n      ],\n      fundsTitle: '资金密码修改',\n      verifiEmail: '邮箱验证'\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO'\n    }),\n    closeIdentitySettingEmailFrom() {\n      this.$refs.IdentitySettingEmailFrom.ruleEmailForm.email = '';\n      this.$refs.IdentitySettingEmailFrom.ruleEmailForm.emailValidCode = '';\n      this.dialogVisible_email = false;\n    },\n\n    handleClick() {},\n    modifyPword() {\n      if (this.comForm.mobile || this.comForm.email) {\n        this.dialogVisible_passw = true;\n        if (this.$refs.mychild != undefined) {\n          this.$refs.mychild.parentHandleclick();\n        }\n        if (this.comForm.email) {\n          this.activeName = 'first';\n        } else {\n          this.activeName = 'second';\n        }\n      } else {\n        this.$message.warning('请先绑定邮箱');\n      }\n    },\n    modify_jyPword() {\n      //修改资金密码\n      if (this.comForm.email || this.comForm.googleAuthStatus) {\n        this.dialogVisible_passjy = true;\n        if (this.$refs.jyEmailForm != undefined) {\n          this.$refs.jyEmailForm.parentHandleclick();\n        }\n        if (this.$refs.jyGoogleForm != undefined) {\n          this.$refs.jyGoogleForm.parentHandleclick();\n        }\n        if (this.comForm.email) {\n          this.activeName2 = 'email';\n        } else {\n          this.activeName2 = 'google';\n        }\n        if (this.comForm.existFundPassWord) {\n          this.jyFlag = true; //已经设置过交易密码，此时属于修改，需要加上邮箱或者谷歌验证。首次设置的话，不需要加上其他验证，直接设置\n        } else {\n          this.fundsTitle = '设置资金密码';\n          (this.verifiEmail = ''), (this.jyFlag = false);\n        }\n      } else {\n        this.$message.warning('请先绑定邮箱或谷歌验证码');\n      }\n    },\n    closeDig() {\n      this.dialogVisible = false;\n      this.init();\n    },\n    closeDigEamil() {\n      this.dialogVisible_email = false;\n      this.init();\n    },\n    closeDigGoogle() {\n      this.dialogVisible_google = false;\n      this.init();\n    },\n    closeDigpass() {\n      this.dialogVisible_passw = false;\n      this.init();\n    },\n    closeDigjy() {\n      this.dialogVisible_passjy = false;\n      this.init();\n    },\n    async init() {\n      await this.getUserInfo();\n      this.comForm = UserInfoUtils.getCurrentUserInfo();\n    },\n    handleClose() {},\n    bindMobile() {\n      this.dialogVisible = true;\n    },\n    BindEmail() {\n      this.dialogVisible_email = true;\n    },\n    bindGoogle() {\n      this.dialogVisible_google = true;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.comForm = JSON.parse(localStorage.userInfo);\n    console.log(this.comForm, localStorage.userInfo, 'localStorage.userInfolocalStorage.userInfo');\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 安全设置 -->\n<template>\n  <div class=\"safe-setting-wrap\">\n    <div class=\"text-center\">\n      <!-- <Tab :data=\"tabData\"/> -->\n      <div style=\"margin: 10px auto; width: 500px; text-align: left\">\n        <el-form :model=\"comForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n          <el-form-item label=\"当前邮箱\">\n            <div class=\"bind-phone\">\n              <span class=\"greybg\">{{ comForm.email ? comForm.email : '未绑定' }}</span>\n              <img v-if=\"!comForm.email\" width=\"20px\" src=\"../../assets/images/drawal_editor.png\" alt @click=\"BindEmail(comForm)\" />\n            </div>\n          </el-form-item>\n          <el-form-item label=\"谷歌身份验证器\">\n            <div class=\"bind-phone\">\n              <span class=\"greybg\">{{ comForm.googleAuthStatus ? '已绑定' : '未绑定' }}</span>\n              <img v-if=\"!comForm.googleAuthStatus\" width=\"20px\" src=\"../../assets/images/drawal_editor.png\" alt @click=\"bindGoogle()\" />\n            </div>\n          </el-form-item>\n          <el-form-item label=\"登录密码\">\n            <div class=\"bind-phone\">\n              <span class=\"greybg\">********</span>\n              <img width=\"20px\" src=\"../../assets/images/drawal_editor.png\" alt @click=\"modifyPword()\" />\n            </div>\n          </el-form-item>\n          <el-form-item label=\"资金密码\">\n            <div class=\"bind-phone\">\n              <span class=\"greybg\">{{ comForm.existFundPassWord ? '******' : '未设置' }}</span>\n              <img width=\"20px\" src=\"../../assets/images/drawal_editor.png\" alt @click=\"modify_jyPword()\" />\n            </div>\n          </el-form-item>\n        </el-form>\n      </div>\n    </div>\n    <el-dialog\n      title=\"绑定手机\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"dialogVisible\"\n      customClass=\"customWidth\"\n      @close=\"dialogVisible = false\"\n    >\n      <IdentitySettingPhoneFrom @closeDig=\"closeDig\"></IdentitySettingPhoneFrom>\n    </el-dialog>\n    <el-dialog\n      title=\"绑定邮箱\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"dialogVisible_email\"\n      :modal=\"false\"\n      customClass=\"customWidth\"\n      @close=\"closeIdentitySettingEmailFrom\"\n    >\n      <IdentitySettingEmailFrom ref=\"IdentitySettingEmailFrom\" @closeDig=\"closeDigEamil\"></IdentitySettingEmailFrom>\n    </el-dialog>\n    <el-dialog\n      title=\"谷歌身份验证器\"\n      :visible.sync=\"dialogVisible_google\"\n      :close-on-click-modal=\"false\"\n      customClass=\"customWidth\"\n      :modal=\"false\"\n      @close=\"dialogVisible_google = false\"\n    >\n      <IdentitySettingGoogleFrom @closeDig=\"closeDigGoogle\"></IdentitySettingGoogleFrom>\n    </el-dialog>\n\n    <el-dialog\n      title=\"登录密码修改\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"dialogVisible_passw\"\n      :modal=\"false\"\n      customClass=\"customWidth\"\n      @close=\"dialogVisible_passw = false\"\n    >\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n        <el-tab-pane label=\"邮箱验证\" name=\"first\" v-if=\"comForm.email\">\n          <EmailFormPass ref=\"mychild\" :comForm=\"comForm\" @closeDigpass=\"closeDigpass\"></EmailFormPass>\n        </el-tab-pane>\n        <!-- <el-tab-pane label=\"手机验证\" name=\"second\" v-if=\"comForm.mobile\" >\n              <PhoneFormPass  :comForm='comForm' @closeDig=\"closeDigGoogle\" ></PhoneFormPass>\n        </el-tab-pane>-->\n      </el-tabs>\n    </el-dialog>\n    <el-dialog\n      :title=\"fundsTitle\"\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"dialogVisible_passjy\"\n      customClass=\"customWidth\"\n      :modal=\"false\"\n      @close=\"dialogVisible_passjy = false\"\n    >\n      <el-tabs class=\"fundDialog\" v-model=\"activeName2\" @tab-click=\"handleClick\">\n        <!-- <el-tab-pane label=\"邮箱验证\" name=\"email\" v-if=\"comForm.email\"> -->\n        <el-tab-pane :label=\"verifiEmail\" name=\"email\" v-if=\"comForm.email\">\n          <EmailForm ref=\"jyEmailForm\" :comForm=\"comForm\" @closeDigjy=\"closeDigjy\" :jyFlag=\"jyFlag\"></EmailForm>\n        </el-tab-pane>\n        <!-- <el-tab-pane label=\"手机验证\" name=\"mobile\" v-if=\"comForm.mobile\" >\n              <PhoneForm  :comForm='comForm' @closeDig=\"closeDigGoogle\" ></PhoneForm>\n        </el-tab-pane>-->\n        <el-tab-pane label=\"谷歌验证\" name=\"google\" v-if=\"comForm.googleAuthStatus\">\n          <GoogleForm ref=\"jyGoogleForm\" :comForm=\"comForm\" @closeDigjy=\"closeDigjy\" :jyFlag=\"jyFlag\"></GoogleForm>\n        </el-tab-pane>\n      </el-tabs>\n    </el-dialog>\n    <!-- <div class=\"safe-setting-content\" id=\"safe-setting-content\">\n      <router-view></router-view>\n    </div>-->\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapActions } from 'vuex';\nimport IdentitySettingPhoneFrom from './form/IdentitySettingPhoneFrom';\nimport IdentitySettingEmailFrom from './form/IdentitySettingEmailFrom';\nimport IdentitySettingGoogleFrom from './form/IdentitySettingGoogleFrom';\nimport EmailFormPass from '../funds/tradepsd/from/EmailFormPass';\nimport EmailForm from '../funds/tradepsd/from/EmailForm';\nimport GoogleForm from '../funds/tradepsd/from/GoogleForm';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    IdentitySettingPhoneFrom,\n    IdentitySettingEmailFrom,\n    IdentitySettingGoogleFrom,\n    EmailFormPass,\n    EmailForm,\n    GoogleForm\n  },\n  data() {\n    //这里存放数据\n    return {\n      jyFlag: false, //没有设置过交易密码\n      activeName2: 'email',\n      activeName: 'first',\n      dialogVisible: false,\n      dialogVisible_email: false,\n      dialogVisible_google: false,\n      dialogVisible_passw: false,\n      dialogVisible_passjy: false,\n      comForm: {\n        userName: '',\n        secureLevel: 2\n      },\n      labelWidth: '150px',\n      tabData: [\n        {\n          label: '邮箱验证',\n          path: '/app/setting/safe/email'\n        },\n        {\n          label: '手机验证',\n          path: '/app/setting/safe/phone'\n        }\n      ],\n      fundsTitle: '资金密码修改',\n      verifiEmail: '邮箱验证'\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO'\n    }),\n    closeIdentitySettingEmailFrom() {\n      this.$refs.IdentitySettingEmailFrom.ruleEmailForm.email = '';\n      this.$refs.IdentitySettingEmailFrom.ruleEmailForm.emailValidCode = '';\n      this.dialogVisible_email = false;\n    },\n\n    handleClick() {},\n    modifyPword() {\n      if (this.comForm.mobile || this.comForm.email) {\n        this.dialogVisible_passw = true;\n        if (this.$refs.mychild != undefined) {\n          this.$refs.mychild.parentHandleclick();\n        }\n        if (this.comForm.email) {\n          this.activeName = 'first';\n        } else {\n          this.activeName = 'second';\n        }\n      } else {\n        this.$message.warning('请先绑定邮箱');\n      }\n    },\n    modify_jyPword() {\n      //修改资金密码\n      if (this.comForm.email || this.comForm.googleAuthStatus) {\n        this.dialogVisible_passjy = true;\n        if (this.$refs.jyEmailForm != undefined) {\n          this.$refs.jyEmailForm.parentHandleclick();\n        }\n        if (this.$refs.jyGoogleForm != undefined) {\n          this.$refs.jyGoogleForm.parentHandleclick();\n        }\n        if (this.comForm.email) {\n          this.activeName2 = 'email';\n        } else {\n          this.activeName2 = 'google';\n        }\n        if (this.comForm.existFundPassWord) {\n          this.jyFlag = true; //已经设置过交易密码，此时属于修改，需要加上邮箱或者谷歌验证。首次设置的话，不需要加上其他验证，直接设置\n        } else {\n          this.fundsTitle = '设置资金密码';\n          (this.verifiEmail = ''), (this.jyFlag = false);\n        }\n      } else {\n        this.$message.warning('请先绑定邮箱或谷歌验证码');\n      }\n    },\n    closeDig() {\n      this.dialogVisible = false;\n      this.init();\n    },\n    closeDigEamil() {\n      this.dialogVisible_email = false;\n      this.init();\n    },\n    closeDigGoogle() {\n      this.dialogVisible_google = false;\n      this.init();\n    },\n    closeDigpass() {\n      this.dialogVisible_passw = false;\n      this.init();\n    },\n    closeDigjy() {\n      this.dialogVisible_passjy = false;\n      this.init();\n    },\n    async init() {\n      await this.getUserInfo();\n      this.comForm = UserInfoUtils.getCurrentUserInfo();\n    },\n    handleClose() {},\n    bindMobile() {\n      this.dialogVisible = true;\n    },\n    BindEmail() {\n      this.dialogVisible_email = true;\n    },\n    bindGoogle() {\n      this.dialogVisible_google = true;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.comForm = JSON.parse(localStorage.userInfo);\n    console.log(this.comForm, localStorage.userInfo, 'localStorage.userInfolocalStorage.userInfo');\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.customWidth {\n  width: 500px;\n}\n.greybg {\n  background: #f7f7fa;\n  height: 30px;\n  line-height: 30px;\n  // width: 300px;\n  // padding: 8px 10px;\n  width: 260px;\n  padding: 5px;\n  display: inline-block;\n  border-radius: 5px;\n  margin-right: 5px;\n}\n.safe-setting-wrap {\n  .submit-btn {\n    height: 40px;\n    background: #2f54eb;\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  }\n  .bind-phone {\n    text-align: left;\n    color: #9297a3;\n    img {\n      cursor: pointer;\n    }\n  }\n  .safe-setting-content {\n    width: 500px;\n    margin: 30px auto 0;\n    .safe-setting-item-con {\n      display: none;\n    }\n    .show {\n      display: block;\n    }\n  }\n}\n.demo-ruleEmailForm {\n  /deep/ .el-form-item {\n    margin-bottom: 15px;\n  }\n}\n\n.fundDialog /deep/ .el-tabs__nav-wrap::after {\n  background-color: transparent;\n}\n</style>\n",
    "cssJson": [
      {
        ".customWidth": {
          "width": "500px"
        },
        ".greybg": {
          "background": "#f7f7fa",
          "height": "30px",
          "line-height": "30px",
          "width": "260px",
          "padding": "5px",
          "display": "inline-block",
          "border-radius": "5px",
          "margin-right": "5px"
        },
        ".safe-setting-wrap": {
          ".submit-btn": {
            "height": "40px",
            "background": "#2f54eb",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)"
          },
          ".bind-phone": {
            "text-align": "left",
            "color": "#9297a3",
            "img": {
              "cursor": "pointer"
            }
          },
          ".safe-setting-content": {
            "width": "500px",
            "margin": "30px auto 0",
            ".safe-setting-item-con": {
              "display": "none"
            },
            ".show": {
              "display": "block"
            }
          }
        },
        ".demo-ruleEmailForm": {
          "/deep/ .el-form-item": {
            "margin-bottom": "15px"
          }
        },
        ".fundDialog /deep/ .el-tabs__nav-wrap::after": {
          "background-color": "transparent"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/form/SafeSettingPhoneFrom.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--安全设置 手机验证 -->\n<template>\n  <div class=\"save-phone-verificaty-wrap\">\n    <el-form :model=\"ruleEmailForm\" :rules=\"rules\" ref=\"ruleEmailForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n      <el-form-item label=\"当前手机号\" prop=\"userName\">\n        <el-input v-model=\"ruleEmailForm.userName\" maxlength=\"12\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"请输入验证码\" prop=\"validCode\">\n        <el-input v-model=\"ruleEmailForm.validCode\" maxlength=\"6\">\n          <span slot=\"suffix\" v-if=\"this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n            countdownNumber + 's'\n          }}</span>\n          <span slot=\"suffix\" v-if=\"!this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\" @click=\"getCode('user_12')\"\n            >获取验证码</span\n          >\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请输入密码\" prop=\"password\">\n        <el-input v-model=\"ruleEmailForm.password\" :type=\"orShow ? 'password' : 'text'\" maxlength=\"16\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img src=\"../../../assets/images/close.png\" v-show=\"orShow\" @click=\"tabPsdHand\" width=\"20px\"\n                 style=\"vertical-align: middle\" alt/>\n            <img src=\"../../../assets/images/open.png\" v-show=\"!orShow\" @click=\"tabPsdHand\" width=\"20px\"\n                 style=\"vertical-align: middle\" alt/>\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认新密码\" prop=\"newPwd\">\n        <el-input v-model=\"ruleEmailForm.newPwd\" type=\"password\" maxlength=\"16\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <button class=\"submit-btn\" @click.prevent=\"submitForm('ruleEmailForm')\">\n          完成验证\n        </button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { send_code_mobile, reset_user_pwd } from '../server';\nimport { md5 } from '@/utils';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleEmailForm.newPwd !== '') {\n          this.$refs.ruleEmailForm.validateField('newPwd');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入确认密码'));\n      } else if (value !== this.ruleEmailForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      labelWidth: '150px',\n      ruleEmailForm: {\n        userName: '',\n        validCode: '',\n        password: '',\n        newPwd: '',\n        validCodeType: 'mobile'\n      },\n      rules: {\n        userName: [\n          { required: true, message: '请输入手机号', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{7,12}$/,\n            message: '请输入7~12位数字'\n          }\n        ],\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        newPwd: [\n          { required: true, message: '请输入确认新密码', trigger: 'blur' },\n          { validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      countdownNumber: 120,\n      timer: null,\n      saveBtn: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    async save_reset_user_pwd() {\n      let pararms = {\n        ...this.ruleEmailForm,\n        password: md5(this.ruleEmailForm.password)\n      };\n      delete pararms.newPwd;\n      let res = await reset_user_pwd(pararms);\n      this.saveBtn = false;\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    getCode(templateCode) {\n      this.countdownNumber = 120;\n      this.timer = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.sendCodeHand(templateCode);\n    },\n    countdown() {\n      // 倒计时\n      // 邮箱验证码\n      if (this.countdownNumber == 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.countdownNumber -= 1;\n    },\n    async sendCodeHand(templateCode) {\n      let res = await send_code_mobile({ templateCode });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.saveBtn = true;\n          this.save_reset_user_pwd();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--安全设置 手机验证 -->\n<template>\n  <div class=\"save-phone-verificaty-wrap\">\n    <el-form :model=\"ruleEmailForm\" :rules=\"rules\" ref=\"ruleEmailForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n      <el-form-item label=\"当前手机号\" prop=\"userName\">\n        <el-input v-model=\"ruleEmailForm.userName\" maxlength=\"12\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"请输入验证码\" prop=\"validCode\">\n        <el-input v-model=\"ruleEmailForm.validCode\" maxlength=\"6\">\n          <span slot=\"suffix\" v-if=\"this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n            countdownNumber + 's'\n          }}</span>\n          <span slot=\"suffix\" v-if=\"!this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\" @click=\"getCode('user_12')\"\n            >获取验证码</span\n          >\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请输入密码\" prop=\"password\">\n        <el-input v-model=\"ruleEmailForm.password\" :type=\"orShow ? 'password' : 'text'\" maxlength=\"16\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img src=\"../../../assets/images/close.png\" v-show=\"orShow\" @click=\"tabPsdHand\" width=\"20px\"\n                 style=\"vertical-align: middle\" alt/>\n            <img src=\"../../../assets/images/open.png\" v-show=\"!orShow\" @click=\"tabPsdHand\" width=\"20px\"\n                 style=\"vertical-align: middle\" alt/>\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认新密码\" prop=\"newPwd\">\n        <el-input v-model=\"ruleEmailForm.newPwd\" type=\"password\" maxlength=\"16\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <button class=\"submit-btn\" @click.prevent=\"submitForm('ruleEmailForm')\">\n          完成验证\n        </button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { send_code_mobile, reset_user_pwd } from '../server';\nimport { md5 } from '@/utils';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleEmailForm.newPwd !== '') {\n          this.$refs.ruleEmailForm.validateField('newPwd');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入确认密码'));\n      } else if (value !== this.ruleEmailForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      labelWidth: '150px',\n      ruleEmailForm: {\n        userName: '',\n        validCode: '',\n        password: '',\n        newPwd: '',\n        validCodeType: 'mobile'\n      },\n      rules: {\n        userName: [\n          { required: true, message: '请输入手机号', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{7,12}$/,\n            message: '请输入7~12位数字'\n          }\n        ],\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        newPwd: [\n          { required: true, message: '请输入确认新密码', trigger: 'blur' },\n          { validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      countdownNumber: 120,\n      timer: null,\n      saveBtn: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    async save_reset_user_pwd() {\n      let pararms = {\n        ...this.ruleEmailForm,\n        password: md5(this.ruleEmailForm.password)\n      };\n      delete pararms.newPwd;\n      let res = await reset_user_pwd(pararms);\n      this.saveBtn = false;\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    getCode(templateCode) {\n      this.countdownNumber = 120;\n      this.timer = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.sendCodeHand(templateCode);\n    },\n    countdown() {\n      // 倒计时\n      // 邮箱验证码\n      if (this.countdownNumber == 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.countdownNumber -= 1;\n    },\n    async sendCodeHand(templateCode) {\n      let res = await send_code_mobile({ templateCode });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.saveBtn = true;\n          this.save_reset_user_pwd();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.save-phone-verificaty-wrap {\n  .submit-btn {\n    height: 40px;\n    background: #2f54eb;\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  }\n\n  .bind-phone {\n    text-align: left;\n    color: #9297a3;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".save-phone-verificaty-wrap": {
          ".submit-btn": {
            "height": "40px",
            "background": "#2f54eb",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)"
          },
          ".bind-phone": {
            "text-align": "left",
            "color": "#9297a3"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/form/SafeSettingEmailFrom.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--安全设置 邮箱验证 -->\n<template>\n  <div class=\"save-email-verificaty-wrap\">\n    <el-form :model=\"ruleEmailForm\" :rules=\"rules\" ref=\"ruleEmailForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n      <el-form-item label=\"当前邮箱\" prop=\"userName\">\n        <el-input v-model=\"ruleEmailForm.userName\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"请输入验证码\" prop=\"validCode\">\n        <el-input v-model=\"ruleEmailForm.validCode\" maxlength=\"6\">\n          <span slot=\"suffix\" v-if=\"this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n            countdownNumber + 's'\n          }}</span>\n          <span slot=\"suffix\" v-if=\"!this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\" @click=\"getCode('user_12')\"\n            >获取验证码</span\n          >\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请输入密码\" prop=\"password\">\n        <el-input v-model=\"ruleEmailForm.password\" :type=\"orShow ? 'password' : 'text'\" maxlength=\"16\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img src=\"../../../assets/images/close.png\" v-show=\"orShow\" @click=\"tabPsdHand\" width=\"20px\"\n                 style=\"vertical-align: middle\" alt/>\n            <img src=\"../../../assets/images/open.png\" v-show=\"!orShow\" @click=\"tabPsdHand\" width=\"20px\"\n                 style=\"vertical-align: middle\" alt/>\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认新密码\" prop=\"newPwd\">\n        <el-input v-model=\"ruleEmailForm.newPwd\" maxlength=\"16\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button class=\"submit-btn\" :loading=\"saveBtn\" @click.prevent=\"submitForm('ruleEmailForm')\">完成验证</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { send_code_mobile, reset_user_pwd } from '../server';\nimport { md5 } from '@/utils';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleEmailForm.newPwd !== '') {\n          this.$refs.ruleEmailForm.validateField('newPwd');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入确认密码'));\n      } else if (value !== this.ruleEmailForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      labelWidth: '150px',\n      ruleEmailForm: {\n        userName: '',\n        validCode: '',\n        password: '',\n        newPwd: '',\n        validCodeType: 'email'\n      },\n      rules: {\n        userName: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          {\n            type: 'email',\n            message: '请输入正确的邮箱地址',\n            trigger: ['blur', 'change']\n          }\n          // {\n          //   pattern: /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/,\n          //   message: \"请输入邮箱\"\n          // }\n        ],\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        newPwd: [\n          { required: true, message: '请输入确认新密码', trigger: 'blur' },\n          { validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      countdownNumber: 120,\n      timer: null,\n      saveBtn: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    async save_reset_user_pwd() {\n      let pararms = {\n        ...this.ruleEmailForm,\n        password: md5(this.ruleEmailForm.password)\n      };\n      delete pararms.newPwd;\n      let res = await reset_user_pwd(pararms);\n      this.saveBtn = false;\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    getCode(templateCode) {\n      this.countdownNumber = 120;\n      this.timer = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.sendCodeHand(templateCode);\n    },\n    countdown() {\n      // 倒计时\n      // 邮箱验证码\n      if (this.countdownNumber == 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.countdownNumber -= 1;\n    },\n    async sendCodeHand(templateCode) {\n      let res = await send_code_mobile({ templateCode });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.saveBtn = true;\n          this.save_reset_user_pwd();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--安全设置 邮箱验证 -->\n<template>\n  <div class=\"save-email-verificaty-wrap\">\n    <el-form :model=\"ruleEmailForm\" :rules=\"rules\" ref=\"ruleEmailForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n      <el-form-item label=\"当前邮箱\" prop=\"userName\">\n        <el-input v-model=\"ruleEmailForm.userName\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"请输入验证码\" prop=\"validCode\">\n        <el-input v-model=\"ruleEmailForm.validCode\" maxlength=\"6\">\n          <span slot=\"suffix\" v-if=\"this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n            countdownNumber + 's'\n          }}</span>\n          <span slot=\"suffix\" v-if=\"!this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\" @click=\"getCode('user_12')\"\n            >获取验证码</span\n          >\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请输入密码\" prop=\"password\">\n        <el-input v-model=\"ruleEmailForm.password\" :type=\"orShow ? 'password' : 'text'\" maxlength=\"16\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img src=\"../../../assets/images/close.png\" v-show=\"orShow\" @click=\"tabPsdHand\" width=\"20px\"\n                 style=\"vertical-align: middle\" alt/>\n            <img src=\"../../../assets/images/open.png\" v-show=\"!orShow\" @click=\"tabPsdHand\" width=\"20px\"\n                 style=\"vertical-align: middle\" alt/>\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认新密码\" prop=\"newPwd\">\n        <el-input v-model=\"ruleEmailForm.newPwd\" maxlength=\"16\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button class=\"submit-btn\" :loading=\"saveBtn\" @click.prevent=\"submitForm('ruleEmailForm')\">完成验证</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { send_code_mobile, reset_user_pwd } from '../server';\nimport { md5 } from '@/utils';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleEmailForm.newPwd !== '') {\n          this.$refs.ruleEmailForm.validateField('newPwd');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入确认密码'));\n      } else if (value !== this.ruleEmailForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      labelWidth: '150px',\n      ruleEmailForm: {\n        userName: '',\n        validCode: '',\n        password: '',\n        newPwd: '',\n        validCodeType: 'email'\n      },\n      rules: {\n        userName: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          {\n            type: 'email',\n            message: '请输入正确的邮箱地址',\n            trigger: ['blur', 'change']\n          }\n          // {\n          //   pattern: /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/,\n          //   message: \"请输入邮箱\"\n          // }\n        ],\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        newPwd: [\n          { required: true, message: '请输入确认新密码', trigger: 'blur' },\n          { validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      countdownNumber: 120,\n      timer: null,\n      saveBtn: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    async save_reset_user_pwd() {\n      let pararms = {\n        ...this.ruleEmailForm,\n        password: md5(this.ruleEmailForm.password)\n      };\n      delete pararms.newPwd;\n      let res = await reset_user_pwd(pararms);\n      this.saveBtn = false;\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    getCode(templateCode) {\n      this.countdownNumber = 120;\n      this.timer = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.sendCodeHand(templateCode);\n    },\n    countdown() {\n      // 倒计时\n      // 邮箱验证码\n      if (this.countdownNumber == 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.countdownNumber -= 1;\n    },\n    async sendCodeHand(templateCode) {\n      let res = await send_code_mobile({ templateCode });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.saveBtn = true;\n          this.save_reset_user_pwd();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.save-email-verificaty-wrap {\n  .submit-btn {\n    height: 40px;\n    background: #2f54eb;\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  }\n\n  .bind-phone {\n    text-align: left;\n    color: #9297a3;\n\n    i {\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".save-email-verificaty-wrap": {
          ".submit-btn": {
            "height": "40px",
            "background": "#2f54eb",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)"
          },
          ".bind-phone": {
            "text-align": "left",
            "color": "#9297a3",
            "i": {}
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/upgradeAccount.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <div class=\"title\">\n      <span>升级账户</span>\n      <el-button type=\"text\" @click=\"$router.back()\">返回<i class=\"el-icon-arrow-right el-icon--right\"></i></el-button>\n    </div>\n    <step2 :callback=\"success\" />\n  </div>\n</template>\n\n<script>\nimport step2 from '@/layouts/user/register/step2';\nexport default {\n  data() {\n    return {};\n  },\n  components: {\n    step2\n  },\n  methods: {\n    success() {\n      // 提交成功\n      this.$message.success('审核资料提交成功，审核通过后我们将在APP通知您！');\n      this.$router.back();\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div>\n    <div class=\"title\">\n      <span>升级账户</span>\n      <el-button type=\"text\" @click=\"$router.back()\">返回<i class=\"el-icon-arrow-right el-icon--right\"></i></el-button>\n    </div>\n    <step2 :callback=\"success\" />\n  </div>\n</template>\n\n<script>\nimport step2 from '@/layouts/user/register/step2';\nexport default {\n  data() {\n    return {};\n  },\n  components: {\n    step2\n  },\n  methods: {\n    success() {\n      // 提交成功\n      this.$message.success('审核资料提交成功，审核通过后我们将在APP通知您！');\n      this.$router.back();\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.title {\n  display: flex;\n  justify-content: space-between;\n}\n</style>\n",
    "cssJson": [
      {
        ".title": {
          "display": "flex",
          "justify-content": "space-between"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/test.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <el-dialog title=\"图片裁切\" class=\"cropper-dialog\" :close-on-click-modal=\"false\" :visible=\"dialogVisible\" center @close=\"close\">\n    <div class=\"cropper-wrap\">\n      <div class=\"cropper-box\" :style=\"cropperStyle\">\n        <vue-cropper\n          ref=\"cropper\"\n          :img=\"option.img\"\n          :output-size=\"option.size\"\n          :output-type=\"option.outputType\"\n          :info=\"option.info\"\n          :full=\"option.full\"\n          :canScale=\"option.canScale\"\n          :can-move=\"option.canMove\"\n          :can-move-box=\"option.canMoveBox\"\n          :fixed=\"option.fixed\"\n          :fixed-box=\"option.fixedBox\"\n          :original=\"option.original\"\n          :auto-crop=\"option.autoCrop\"\n          :auto-crop-width=\"option.autoCropWidth\"\n          :auto-crop-height=\"option.autoCropHeight\"\n          :center-box=\"option.centerBox\"\n          :high=\"option.high\"\n          :info-true=\"option.infoTrue\"\n          :max-img-size=\"option.maxImageSize\"\n          :enlarge=\"option.enlarge\"\n          :mode=\"option.mode\"\n          :maxImgSize=\"option.maxImgSize\"\n          @realTime=\"realTime\"\n        />\n      </div>\n      <div class=\"preview-box\">\n        <div class=\"preview-title\">\n          <span @click=\"$router.push('/app/chat/')\">返回</span>\n          <span @click=\"upload\" class=\"preveiw-upload\">重新上传</span>\n        </div>\n        <input\n          ref=\"upload\"\n          type=\"file\"\n          style=\"position: absolute; clip: rect(0 0 0 0)\"\n          accept=\"image/png, image/jpeg, image/jpg\"\n          @change=\"uploadImg\"\n        />\n        <div :style=\"previewStyle\" class=\"preview-img\">\n          <div :style=\"preview.div\">\n            <img :style=\"preview.img\" :src=\"preview.url\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"close\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"finish\" :loading=\"loading\">确认</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { VueCropper } from 'vue-cropper';\nexport default {\n  name: 'ImageCropper',\n  components: {\n    VueCropper\n  },\n  data() {\n    return {\n      // 裁剪组件的基础配置option\n      option: {\n        img: '', // 裁剪图片的地址\n        outputSize: 1, // 裁剪生成图片的质量\n        outputType: 'png', // 裁剪生成图片的格式\n        full: true, // 是否输出原图比例的截图\n        info: true, // 图片大小信息\n        canScale: true, // 图片是否允许滚轮缩放\n        autoCrop: true, // 是否默认生成截图框\n        autoCropWidth: 200, // 默认生成截图框宽度\n        autoCropHeight: 150, // 默认生成截图框高度\n        canMove: true, // 上传图片是否可以移动\n        fixedBox: true, // 固定截图框大小 不允许改变\n        fixed: false, // 是否开启截图框宽高固定比例\n        canMoveBox: true, // 截图框能否拖动\n        original: false, // 上传图片按照原始比例渲染\n        centerBox: false, // 截图框是否被限制在图片里面\n        height: true,\n        infoTrue: false, // true 为展示真实输出图片宽高 false 展示看到的截图框宽高\n        enlarge: 1, // 图片根据截图框输出比例倍数\n        mode: 'container', // 图片默认渲染方式\n        maxImgSize: 375\n      },\n      // 防止重复提交\n      loading: false,\n      preview: {},\n      previewStyle: {},\n      dialogVisible: true\n    };\n  },\n  props: {\n    // dialogVisible: {\n    //   type: Boolean,\n    //   default: false\n    // },\n    cropperOption: {\n      type: Object,\n      default: () => {}\n    },\n    cropperStyle: {\n      type: Object,\n      default: () => {}\n    },\n    fileSize: {\n      type: Number,\n      default: 2\n    },\n    // 裁剪预览图片缩放比例\n    zoom: {\n      type: Number,\n      default: 1\n    }\n  },\n  watch: {\n    cropperOption: {\n      handler(value) {\n        this.option = Object.assign(this.option, value);\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    upload() {\n      // 点击上传\n      this.$refs.upload.value = null;\n      this.$refs.upload.click();\n    },\n    uploadImg(e) {\n      // 上传图片\n      let file = e.target.files[0];\n      if (!/\\.(jpg|jpeg|png|JPG|PNG)$/.test(e.target.value)) {\n        this.$message.error(file.name + '不是图片格式文件');\n        return false;\n      }\n      if (file.size > 1024 * 1024 * this.fileSize) {\n        // 图片不大于2M\n        this.$message.error(`请上传小于${this.fileSize}M的图片`);\n        return false;\n      }\n      let reader = new FileReader();\n      // 转化为blob\n      reader.readAsArrayBuffer(file);\n      reader.onload = e => {\n        let data;\n        if (typeof e.target.result === 'object') {\n          // 把Array Buffer转化为blob 如果是base64不需要\n          data = window.URL.createObjectURL(new Blob([e.target.result]));\n        } else {\n          data = e.target.result;\n        }\n        this.$set(this.option, 'img', data);\n      };\n    },\n    realTime(preview) {\n      // 实时预览\n      this.preview = preview;\n      this.previewStyle = {\n        width: preview.w + 'px',\n        height: preview.h + 'px',\n        overflow: 'hidden',\n        margin: '0',\n        zoom: this.zoom\n      };\n    },\n    // 将base64转换为文件\n    dataURLtoFile(dataurl, filename) {\n      let arr = dataurl.split(',');\n      let mime = arr[0].match(/:(.*?);/)[1];\n      let bstr = atob(arr[1]);\n      let len = bstr.length;\n      let u8arr = new Uint8Array(len);\n      while (len--) {\n        u8arr[len] = bstr.charCodeAt(len);\n      }\n      return new File([u8arr], filename, { type: mime });\n    },\n    // 将base64转换为png文件图片\n    finish() {\n      this.$refs.cropper.getCropData(data => {\n        let file = this.dataURLtoFile(data, 'images.png');\n        this.$emit('uploadCropper', file, data);\n      });\n    },\n    close() {\n      this.$emit('close');\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <el-dialog title=\"图片裁切\" class=\"cropper-dialog\" :close-on-click-modal=\"false\" :visible=\"dialogVisible\" center @close=\"close\">\n    <div class=\"cropper-wrap\">\n      <div class=\"cropper-box\" :style=\"cropperStyle\">\n        <vue-cropper\n          ref=\"cropper\"\n          :img=\"option.img\"\n          :output-size=\"option.size\"\n          :output-type=\"option.outputType\"\n          :info=\"option.info\"\n          :full=\"option.full\"\n          :canScale=\"option.canScale\"\n          :can-move=\"option.canMove\"\n          :can-move-box=\"option.canMoveBox\"\n          :fixed=\"option.fixed\"\n          :fixed-box=\"option.fixedBox\"\n          :original=\"option.original\"\n          :auto-crop=\"option.autoCrop\"\n          :auto-crop-width=\"option.autoCropWidth\"\n          :auto-crop-height=\"option.autoCropHeight\"\n          :center-box=\"option.centerBox\"\n          :high=\"option.high\"\n          :info-true=\"option.infoTrue\"\n          :max-img-size=\"option.maxImageSize\"\n          :enlarge=\"option.enlarge\"\n          :mode=\"option.mode\"\n          :maxImgSize=\"option.maxImgSize\"\n          @realTime=\"realTime\"\n        />\n      </div>\n      <div class=\"preview-box\">\n        <div class=\"preview-title\">\n          <span @click=\"$router.push('/app/chat/')\">返回</span>\n          <span @click=\"upload\" class=\"preveiw-upload\">重新上传</span>\n        </div>\n        <input\n          ref=\"upload\"\n          type=\"file\"\n          style=\"position: absolute; clip: rect(0 0 0 0)\"\n          accept=\"image/png, image/jpeg, image/jpg\"\n          @change=\"uploadImg\"\n        />\n        <div :style=\"previewStyle\" class=\"preview-img\">\n          <div :style=\"preview.div\">\n            <img :style=\"preview.img\" :src=\"preview.url\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"close\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"finish\" :loading=\"loading\">确认</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { VueCropper } from 'vue-cropper';\nexport default {\n  name: 'ImageCropper',\n  components: {\n    VueCropper\n  },\n  data() {\n    return {\n      // 裁剪组件的基础配置option\n      option: {\n        img: '', // 裁剪图片的地址\n        outputSize: 1, // 裁剪生成图片的质量\n        outputType: 'png', // 裁剪生成图片的格式\n        full: true, // 是否输出原图比例的截图\n        info: true, // 图片大小信息\n        canScale: true, // 图片是否允许滚轮缩放\n        autoCrop: true, // 是否默认生成截图框\n        autoCropWidth: 200, // 默认生成截图框宽度\n        autoCropHeight: 150, // 默认生成截图框高度\n        canMove: true, // 上传图片是否可以移动\n        fixedBox: true, // 固定截图框大小 不允许改变\n        fixed: false, // 是否开启截图框宽高固定比例\n        canMoveBox: true, // 截图框能否拖动\n        original: false, // 上传图片按照原始比例渲染\n        centerBox: false, // 截图框是否被限制在图片里面\n        height: true,\n        infoTrue: false, // true 为展示真实输出图片宽高 false 展示看到的截图框宽高\n        enlarge: 1, // 图片根据截图框输出比例倍数\n        mode: 'container', // 图片默认渲染方式\n        maxImgSize: 375\n      },\n      // 防止重复提交\n      loading: false,\n      preview: {},\n      previewStyle: {},\n      dialogVisible: true\n    };\n  },\n  props: {\n    // dialogVisible: {\n    //   type: Boolean,\n    //   default: false\n    // },\n    cropperOption: {\n      type: Object,\n      default: () => {}\n    },\n    cropperStyle: {\n      type: Object,\n      default: () => {}\n    },\n    fileSize: {\n      type: Number,\n      default: 2\n    },\n    // 裁剪预览图片缩放比例\n    zoom: {\n      type: Number,\n      default: 1\n    }\n  },\n  watch: {\n    cropperOption: {\n      handler(value) {\n        this.option = Object.assign(this.option, value);\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    upload() {\n      // 点击上传\n      this.$refs.upload.value = null;\n      this.$refs.upload.click();\n    },\n    uploadImg(e) {\n      // 上传图片\n      let file = e.target.files[0];\n      if (!/\\.(jpg|jpeg|png|JPG|PNG)$/.test(e.target.value)) {\n        this.$message.error(file.name + '不是图片格式文件');\n        return false;\n      }\n      if (file.size > 1024 * 1024 * this.fileSize) {\n        // 图片不大于2M\n        this.$message.error(`请上传小于${this.fileSize}M的图片`);\n        return false;\n      }\n      let reader = new FileReader();\n      // 转化为blob\n      reader.readAsArrayBuffer(file);\n      reader.onload = e => {\n        let data;\n        if (typeof e.target.result === 'object') {\n          // 把Array Buffer转化为blob 如果是base64不需要\n          data = window.URL.createObjectURL(new Blob([e.target.result]));\n        } else {\n          data = e.target.result;\n        }\n        this.$set(this.option, 'img', data);\n      };\n    },\n    realTime(preview) {\n      // 实时预览\n      this.preview = preview;\n      this.previewStyle = {\n        width: preview.w + 'px',\n        height: preview.h + 'px',\n        overflow: 'hidden',\n        margin: '0',\n        zoom: this.zoom\n      };\n    },\n    // 将base64转换为文件\n    dataURLtoFile(dataurl, filename) {\n      let arr = dataurl.split(',');\n      let mime = arr[0].match(/:(.*?);/)[1];\n      let bstr = atob(arr[1]);\n      let len = bstr.length;\n      let u8arr = new Uint8Array(len);\n      while (len--) {\n        u8arr[len] = bstr.charCodeAt(len);\n      }\n      return new File([u8arr], filename, { type: mime });\n    },\n    // 将base64转换为png文件图片\n    finish() {\n      this.$refs.cropper.getCropData(data => {\n        let file = this.dataURLtoFile(data, 'images.png');\n        this.$emit('uploadCropper', file, data);\n      });\n    },\n    close() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.cropper-dialog {\n  & /deep/ .el-dialog {\n    width: max-content;\n  }\n  & /deep/ .el-dialog__body {\n    padding: 20px;\n  }\n  & /deep/ .el-button {\n    width: 145px;\n  }\n}\n.cropper-wrap {\n  display: flex;\n  .cropper-box {\n    margin-right: 20px;\n    width: 375px;\n    height: 176px;\n  }\n  .preview-box {\n    .preview-title {\n      display: flex;\n      min-width: 100px;\n      justify-content: space-between;\n      align-items: center;\n      height: 32px;\n      color: rgba(30, 35, 48, 1);\n      font-family: PingFangSC-Medium;\n      .preveiw-upload {\n        color: #0067ed;\n        cursor: pointer;\n      }\n    }\n    .preview-img {\n      border-radius: 2px;\n    }\n  }\n}\n.fun-btn {\n  margin-top: 16px;\n  i {\n    margin-right: 16px;\n    font-size: 18px;\n    color: #8c8c8c;\n    cursor: pointer;\n    &:hover {\n      color: #0067ed;\n    }\n  }\n  .reUpload {\n    margin-right: 16px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".cropper-dialog": {
          "& /deep/ .el-dialog": {
            "width": "max-content"
          },
          "& /deep/ .el-dialog__body": {
            "padding": "20px"
          },
          "& /deep/ .el-button": {
            "width": "145px"
          }
        },
        ".cropper-wrap": {
          "display": "flex",
          ".cropper-box": {
            "margin-right": "20px",
            "width": "375px",
            "height": "176px"
          },
          ".preview-box": {
            ".preview-title": {
              "display": "flex",
              "min-width": "100px",
              "justify-content": "space-between",
              "align-items": "center",
              "height": "32px",
              "color": "rgba(30, 35, 48, 1)",
              "font-family": "PingFangSC-Medium",
              ".preveiw-upload": {
                "color": "#0067ed",
                "cursor": "pointer"
              }
            },
            ".preview-img": {
              "border-radius": "2px"
            }
          }
        },
        ".fun-btn": {
          "margin-top": "16px",
          "i": {
            "margin-right": "16px",
            "font-size": "18px",
            "color": "#8c8c8c",
            "cursor": "pointer",
            "&:hover": {
              "color": "#0067ed"
            }
          },
          ".reUpload": {
            "margin-right": "16px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/Index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--资金 模块 -->\n<template>\n  <div class=\"funds-wrap\">\n    <ul class=\"funds-tab-wrap cf\" id=\"funds-tab-wrap\">\n      <router-link to=\"/app/funds/general\" tag=\"li\">资产概况</router-link>\n      <router-link to=\"/app/funds/detail\" tag=\"li\">矿区明细</router-link>\n      <router-link to=\"/app/funds/tradepwd\" tag=\"li\">交易密码</router-link>\n      <router-link to=\"/app/funds/address\" tag=\"li\">提币地址</router-link>\n    </ul>\n    <div class=\"funds-content-wrap\" id=\"funds-content-wrap\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--资金 模块 -->\n<template>\n  <div class=\"funds-wrap\">\n    <ul class=\"funds-tab-wrap cf\" id=\"funds-tab-wrap\">\n      <router-link to=\"/app/funds/general\" tag=\"li\">资产概况</router-link>\n      <router-link to=\"/app/funds/detail\" tag=\"li\">矿区明细</router-link>\n      <router-link to=\"/app/funds/tradepwd\" tag=\"li\">交易密码</router-link>\n      <router-link to=\"/app/funds/address\" tag=\"li\">提币地址</router-link>\n    </ul>\n    <div class=\"funds-content-wrap\" id=\"funds-content-wrap\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.funds-wrap {\n  // padding: 30px;\n  height: 100%;\n  text-align: left;\n  background-color: #fff;\n  .funds-title {\n    font-size: 14px;\n    color: #151f34;\n    line-height: 20px;\n  }\n  .funds-tab-wrap li {\n    float: left;\n    font-size: 14px;\n    color: #151f34;\n    list-style: none;\n    line-height: 20px;\n    margin-right: 35px;\n    user-select: none;\n    &:hover {\n      color: #2f54eb;\n    }\n  }\n  .funds-tab-wrap li:last-child {\n    margin-right: 0;\n  }\n  .funds-tab-wrap li.router-link-active {\n    color: #2f54eb;\n    position: relative;\n    transition: all 0.5s linear;\n  }\n  .funds-tab-wrap li.router-link-active::after {\n    content: '';\n    display: inline-block;\n    position: absolute;\n    bottom: -5px;\n    width: 10px;\n    height: 2px;\n    background-color: #2f54eb;\n    left: 50%;\n    margin-left: -5px;\n  }\n  .funds-content-wrap {\n    margin-top: 35px;\n    .funds-content-wrap-item-con {\n      display: none;\n    }\n    .show {\n      display: block;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".funds-wrap": {
          "height": "100%",
          "text-align": "left",
          "background-color": "#fff",
          ".funds-title": {
            "font-size": "14px",
            "color": "#151f34",
            "line-height": "20px"
          },
          ".funds-tab-wrap li": {
            "float": "left",
            "font-size": "14px",
            "color": "#151f34",
            "list-style": "none",
            "line-height": "20px",
            "margin-right": "35px",
            "user-select": "none",
            "&:hover": {
              "color": "#2f54eb"
            }
          },
          ".funds-tab-wrap li:last-child": {
            "margin-right": "0"
          },
          ".funds-tab-wrap li.router-link-active": {
            "color": "#2f54eb",
            "position": "relative",
            "transition": "all 0.5s linear"
          },
          ".funds-tab-wrap li.router-link-active::after": {
            "content": "''",
            "display": "inline-block",
            "position": "absolute",
            "bottom": "-5px",
            "width": "10px",
            "height": "2px",
            "background-color": "#2f54eb",
            "left": "50%",
            "margin-left": "-5px"
          },
          ".funds-content-wrap": {
            "margin-top": "35px",
            ".funds-content-wrap-item-con": {
              "display": "none"
            },
            ".show": {
              "display": "block"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/Index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 资产概况 -->\n<template>\n  <div class=\"fund-general-wrap\">\n    <div class=\"fund-setting-tab\">\n      <Tab :data=\"userInfoType.userType == 5 ? tabData : tabDataInfo\" />\n      <div class=\"detail\">\n        <router-link v-if=\"this.$route.path == '/app/funds/general/wallet'\" tag=\"div\" to=\"/app/walletDetail\"\n          >钱包明细 <i class=\"el-icon-arrow-right\"></i\n        ></router-link>\n        <router-link v-if=\"this.$route.path == '/app/funds/general/mining'\" tag=\"div\" to=\"/app/miningDetail\"\n          >明细 <i class=\"el-icon-arrow-right\"></i\n        ></router-link>\n        <router-link v-if=\"this.$route.path == '/app/funds/general/ore'\" tag=\"div\" to=\"/app/oreDetail\"\n          >挖矿明细<i class=\"el-icon-arrow-right\"></i\n        ></router-link>\n      </div>\n    </div>\n    <div class=\"fund-content\" id=\"fund-content\">\n      <router-view v-bind=\"$route.props || {}\"></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Tab from '@/components/Tab';\n// import FundWallet from './table/fundWallet'\n// import FundOre from './table/fundOre'\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Tab\n    // FundWallet,\n    // // FundAdvert,\n    // FundOre\n  },\n  data() {\n    //这里存放数据\n    return {\n      tabPosition: 'left',\n      userInfoType: JSON.parse(localStorage.userInfo),\n      tabDataInfo: [\n        {\n          label: '资产账户',\n          path: '/app/funds/general/wallet'\n        },\n        {\n          label: '挖矿账户',\n          path: '/app/funds/general/mining'\n        }\n      ],\n      tabData: [\n        {\n          label: '资产账户',\n          path: '/app/funds/general/wallet'\n        },\n        {\n          label: '挖矿账户',\n          path: '/app/funds/general/mining'\n        },\n        {\n          label: '挖矿资金池',\n          path: '/app/funds/general/ore'\n        }\n      ],\n      thisIndex: 0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    // this.$router.push({path: '/app/funds/general/wallet'})\n    //\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 资产概况 -->\n<template>\n  <div class=\"fund-general-wrap\">\n    <div class=\"fund-setting-tab\">\n      <Tab :data=\"userInfoType.userType == 5 ? tabData : tabDataInfo\" />\n      <div class=\"detail\">\n        <router-link v-if=\"this.$route.path == '/app/funds/general/wallet'\" tag=\"div\" to=\"/app/walletDetail\"\n          >钱包明细 <i class=\"el-icon-arrow-right\"></i\n        ></router-link>\n        <router-link v-if=\"this.$route.path == '/app/funds/general/mining'\" tag=\"div\" to=\"/app/miningDetail\"\n          >明细 <i class=\"el-icon-arrow-right\"></i\n        ></router-link>\n        <router-link v-if=\"this.$route.path == '/app/funds/general/ore'\" tag=\"div\" to=\"/app/oreDetail\"\n          >挖矿明细<i class=\"el-icon-arrow-right\"></i\n        ></router-link>\n      </div>\n    </div>\n    <div class=\"fund-content\" id=\"fund-content\">\n      <router-view v-bind=\"$route.props || {}\"></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Tab from '@/components/Tab';\n// import FundWallet from './table/fundWallet'\n// import FundOre from './table/fundOre'\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Tab\n    // FundWallet,\n    // // FundAdvert,\n    // FundOre\n  },\n  data() {\n    //这里存放数据\n    return {\n      tabPosition: 'left',\n      userInfoType: JSON.parse(localStorage.userInfo),\n      tabDataInfo: [\n        {\n          label: '资产账户',\n          path: '/app/funds/general/wallet'\n        },\n        {\n          label: '挖矿账户',\n          path: '/app/funds/general/mining'\n        }\n      ],\n      tabData: [\n        {\n          label: '资产账户',\n          path: '/app/funds/general/wallet'\n        },\n        {\n          label: '挖矿账户',\n          path: '/app/funds/general/mining'\n        },\n        {\n          label: '挖矿资金池',\n          path: '/app/funds/general/ore'\n        }\n      ],\n      thisIndex: 0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    // this.$router.push({path: '/app/funds/general/wallet'})\n    //\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.fund-setting-tab {\n  display: flex;\n  justify-content: space-between;\n  .detail {\n    color: #2d53eb;\n    font-size: 14px;\n    div {\n      cursor: pointer;\n    }\n  }\n}\n.fund-general-wrap {\n  .fund-content {\n    width: 100%;\n    margin-top: 20px;\n    .fund-item {\n      display: none;\n    }\n    .active {\n      display: block;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".fund-setting-tab": {
          "display": "flex",
          "justify-content": "space-between",
          ".detail": {
            "color": "#2d53eb",
            "font-size": "14px",
            "div": {
              "cursor": "pointer"
            }
          }
        },
        ".fund-general-wrap": {
          ".fund-content": {
            "width": "100%",
            "margin-top": "20px",
            ".fund-item": {
              "display": "none"
            },
            ".active": {
              "display": "block"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/table/fundWallet.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {
      "1": "@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';"
    },
    "keepContent": "<template>\n  <div class=\"fund-wallet\">\n    <div class=\"wallet-top\">\n      <div class=\"inpt\">\n        <el-input placeholder=\"搜索币种简称或全称\" v-model=\"currency\" @keyup.enter.native=\"search\" @blur=\"search\" clearable>\n          <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n        </el-input>\n      </div>\n      <el-checkbox v-model=\"checked\" @change=\"search\">隐藏无余额币种</el-checkbox>\n    </div>\n    <div class=\"wallet-tab\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :show-header=\"showHeader\">\n        <el-table-column label=\"图片\" align=\"center\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <div @click=\"goDetail(scope.row.currency, scope.row.balance, scope.row.accountId)\">\n              <el-avatar :class=\"`ICON_${scope.row.currency}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"currency\" label=\"名称\">\n          <template slot-scope=\"scope\">\n            <div\n              style=\"\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n              \"\n            >\n              <p style=\"flex: 1; color: rgba(21, 31, 52, 1); font-size: 14px\">\n                {{ scope.row.currency }}\n              </p>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"balance\" label=\"余额\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <div style=\"font-size: 18px; color: #151F34; font-weight: 500\">\n              {{ scope.row.balance }}\n            </div>\n          </template>\n        </el-table-column>\n        <p slot=\"append\" style=\"text-align: center; line-height: 50px; border-bottom: none\">\n          <span href=\"javascript:;\" style=\"color: #2F54EB\">没有更多了</span>\n        </p>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_account_capitalList } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      currency: '',\n      checked: false,\n      showHeader: false,\n      tableData: [],\n      pageIndex: 1,\n      loading: false\n    };\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'wallet'\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      let param = {};\n      param.currency = this.currency;\n      param.hidden = this.checked;\n      this.getData(param);\n    },\n    async getData(parameter) {\n      try {\n        let res_data = await get_account_capitalList(parameter);\n        this.tableData = res_data.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    },\n    init() {\n      this.search();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    },\n    goDetail(row, balance, accountId) {\n      //详情页\n      this.$router.push({\n        path: '/app/fundDetail',\n        query: {\n          id: row,\n          type: 1001,\n          accountId: accountId\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<template>\n  <div class=\"fund-wallet\">\n    <div class=\"wallet-top\">\n      <div class=\"inpt\">\n        <el-input placeholder=\"搜索币种简称或全称\" v-model=\"currency\" @keyup.enter.native=\"search\" @blur=\"search\" clearable>\n          <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n        </el-input>\n      </div>\n      <el-checkbox v-model=\"checked\" @change=\"search\">隐藏无余额币种</el-checkbox>\n    </div>\n    <div class=\"wallet-tab\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :show-header=\"showHeader\">\n        <el-table-column label=\"图片\" align=\"center\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <div @click=\"goDetail(scope.row.currency, scope.row.balance, scope.row.accountId)\">\n              <el-avatar :class=\"`ICON_${scope.row.currency}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"currency\" label=\"名称\">\n          <template slot-scope=\"scope\">\n            <div\n              style=\"\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n              \"\n            >\n              <p style=\"flex: 1; color: rgba(21, 31, 52, 1); font-size: 14px\">\n                {{ scope.row.currency }}\n              </p>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"balance\" label=\"余额\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <div style=\"font-size: 18px; color: #151F34; font-weight: 500\">\n              {{ scope.row.balance }}\n            </div>\n          </template>\n        </el-table-column>\n        <p slot=\"append\" style=\"text-align: center; line-height: 50px; border-bottom: none\">\n          <span href=\"javascript:;\" style=\"color: #2F54EB\">没有更多了</span>\n        </p>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_account_capitalList } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      currency: '',\n      checked: false,\n      showHeader: false,\n      tableData: [],\n      pageIndex: 1,\n      loading: false\n    };\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'wallet'\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      let param = {};\n      param.currency = this.currency;\n      param.hidden = this.checked;\n      this.getData(param);\n    },\n    async getData(parameter) {\n      try {\n        let res_data = await get_account_capitalList(parameter);\n        this.tableData = res_data.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    },\n    init() {\n      this.search();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    },\n    goDetail(row, balance, accountId) {\n      //详情页\n      this.$router.push({\n        path: '/app/fundDetail',\n        query: {\n          id: row,\n          type: 1001,\n          accountId: accountId\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.wallet-tab .warning-row {\n  background: #f7f7fa;\n}\n\n.wallet-tab .success-row {\n  background: #fff;\n}\n.el-table::before {\n  height: 0;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';\n.fund-wallet {\n  .wallet-top {\n    display: flex;\n    justify-content: space-between;\n\n    .inpt {\n      width: 314px;\n    }\n  }\n  .wallet-tab {\n    margin-top: 20px;\n    width: 100%;\n    height: 100vh;\n    overflow: auto;\n    .avatar {\n      background-size: 40px 40px;\n      cursor: pointer;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".wallet-tab .warning-row": {
          "background": "#f7f7fa"
        },
        ".wallet-tab .success-row": {
          "background": "#fff"
        },
        ".el-table::before": {
          "height": "0"
        }
      },
      {
        ".fund-wallet": {
          ".wallet-top": {
            "display": "flex",
            "justify-content": "space-between",
            ".inpt": {
              "width": "314px"
            }
          },
          ".wallet-tab": {
            "margin-top": "20px",
            "width": "100%",
            "height": "100vh",
            "overflow": "auto",
            ".avatar": {
              "background-size": "40px 40px",
              "cursor": "pointer"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/tradepsd/Index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 交易密码 -->\n<template>\n  <div class=\"trade-psd-wrap\">\n    <Tab :data=\"tabData\" />\n    <div class=\"trade-psd-content\" id=\"trade-psd-content\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport Tab from '@/components/Tab';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Tab\n  },\n  data() {\n    //这里存放数据 \"\", \"手机验证\", \"谷歌验证\"\n    return {\n      tabData: [\n        {\n          label: '邮箱验证',\n          path: '/app/funds/tradepwd/email'\n        },\n        {\n          label: '手机验证',\n          path: '/app/funds/tradepwd/phone'\n        },\n        {\n          label: '谷歌验证',\n          path: '/app/funds/tradepwd/google'\n        }\n      ]\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    // this.$router.push({path: '/app/funds/tradepwd/email'})\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 交易密码 -->\n<template>\n  <div class=\"trade-psd-wrap\">\n    <Tab :data=\"tabData\" />\n    <div class=\"trade-psd-content\" id=\"trade-psd-content\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport Tab from '@/components/Tab';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Tab\n  },\n  data() {\n    //这里存放数据 \"\", \"手机验证\", \"谷歌验证\"\n    return {\n      tabData: [\n        {\n          label: '邮箱验证',\n          path: '/app/funds/tradepwd/email'\n        },\n        {\n          label: '手机验证',\n          path: '/app/funds/tradepwd/phone'\n        },\n        {\n          label: '谷歌验证',\n          path: '/app/funds/tradepwd/google'\n        }\n      ]\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    // this.$router.push({path: '/app/funds/tradepwd/email'})\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.trade-psd-wrap {\n  .trade-psd-content {\n    width: 500px;\n    margin-top: 40px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".trade-psd-wrap": {
          ".trade-psd-content": {
            "width": "500px",
            "margin-top": "40px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/table/fundMining.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {
      "1": "@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';"
    },
    "keepContent": "<template>\n  <div class=\"fund-wallet\">\n    <div class=\"wallet-top\">\n      <div class=\"inpt\">\n        <el-input placeholder=\"搜索币种\" v-model=\"currency\" @keyup.enter.native=\"search\" @blur=\"search\" clearable>\n          <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n        </el-input>\n      </div>\n      <el-checkbox v-model=\"checked\">隐藏无余额币种</el-checkbox>\n    </div>\n    <div class=\"wallet-tab\">\n      <el-table\n        :data=\"checked ? dataNoBalance : tableData\"\n        style=\"width: 100%\"\n        :row-class-name=\"tableRowClassName\"\n        :show-header=\"showHeader\"\n      >\n        <el-table-column label=\"图片\" align=\"center\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <div @click=\"goDetail(scope.row.currency, scope.row.balance, scope.row.accountId)\">\n              <el-avatar :class=\"`ICON_${scope.row.currency}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"currency\" label=\"名称\">\n          <template slot-scope=\"scope\">\n            <div\n              style=\"\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n              \"\n            >\n              <p style=\"flex: 1; color: rgba(21, 31, 52, 1); font-size: 14px\">\n                {{ scope.row.currency }}\n              </p>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"balance\" label=\"余额\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <div style=\"font-size: 18px; color: #151F34; font-weight: 500\">\n              {{ scope.row.balance }}\n            </div>\n          </template>\n        </el-table-column>\n        <p slot=\"append\" style=\"text-align: center; line-height: 50px; border-bottom: none\">\n          <span href=\"javascript:;\" style=\"color: #2F54EB\">没有更多了</span>\n        </p>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_ore_capitalList } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      currency: '',\n      checked: false,\n      showHeader: false,\n      tableData: [],\n      pageIndex: 1,\n      loading: false,\n      dataNoBalance: [],\n      dataList: []\n    };\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'wallet'\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      if (!this.currency) {\n        this.getData();\n        return;\n      }\n      this.tableData = this.dataList.filter(item => {\n        return item.currency.indexOf(this.currency) >= 0;\n      });\n    },\n    async getData() {\n      try {\n        let res_data = await get_ore_capitalList();\n        this.tableData = res_data.data;\n        this.dataList = res_data.data;\n        let newArr = [];\n        for (let i = 0; i < res_data.data.length; i++) {\n          if (res_data.data[i].balance > 0) {\n            newArr.push(res_data.data[i]);\n          }\n        }\n        this.dataNoBalance = newArr;\n      } catch (error) {\n        throw new Error(error);\n      }\n    },\n    init() {\n      this.getData();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    },\n    goDetail(row, balance, accountId) {\n      //详情页\n      this.$router.push({\n        path: '/app/fundDetail',\n        query: {\n          id: row,\n          type: 1002,\n          accountId: accountId,\n          isMini: 1 //自定义的，识别是否是挖矿，以便只显示划转\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<template>\n  <div class=\"fund-wallet\">\n    <div class=\"wallet-top\">\n      <div class=\"inpt\">\n        <el-input placeholder=\"搜索币种\" v-model=\"currency\" @keyup.enter.native=\"search\" @blur=\"search\" clearable>\n          <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n        </el-input>\n      </div>\n      <el-checkbox v-model=\"checked\">隐藏无余额币种</el-checkbox>\n    </div>\n    <div class=\"wallet-tab\">\n      <el-table\n        :data=\"checked ? dataNoBalance : tableData\"\n        style=\"width: 100%\"\n        :row-class-name=\"tableRowClassName\"\n        :show-header=\"showHeader\"\n      >\n        <el-table-column label=\"图片\" align=\"center\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <div @click=\"goDetail(scope.row.currency, scope.row.balance, scope.row.accountId)\">\n              <el-avatar :class=\"`ICON_${scope.row.currency}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"currency\" label=\"名称\">\n          <template slot-scope=\"scope\">\n            <div\n              style=\"\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n              \"\n            >\n              <p style=\"flex: 1; color: rgba(21, 31, 52, 1); font-size: 14px\">\n                {{ scope.row.currency }}\n              </p>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"balance\" label=\"余额\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <div style=\"font-size: 18px; color: #151F34; font-weight: 500\">\n              {{ scope.row.balance }}\n            </div>\n          </template>\n        </el-table-column>\n        <p slot=\"append\" style=\"text-align: center; line-height: 50px; border-bottom: none\">\n          <span href=\"javascript:;\" style=\"color: #2F54EB\">没有更多了</span>\n        </p>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_ore_capitalList } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      currency: '',\n      checked: false,\n      showHeader: false,\n      tableData: [],\n      pageIndex: 1,\n      loading: false,\n      dataNoBalance: [],\n      dataList: []\n    };\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'wallet'\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      if (!this.currency) {\n        this.getData();\n        return;\n      }\n      this.tableData = this.dataList.filter(item => {\n        return item.currency.indexOf(this.currency) >= 0;\n      });\n    },\n    async getData() {\n      try {\n        let res_data = await get_ore_capitalList();\n        this.tableData = res_data.data;\n        this.dataList = res_data.data;\n        let newArr = [];\n        for (let i = 0; i < res_data.data.length; i++) {\n          if (res_data.data[i].balance > 0) {\n            newArr.push(res_data.data[i]);\n          }\n        }\n        this.dataNoBalance = newArr;\n      } catch (error) {\n        throw new Error(error);\n      }\n    },\n    init() {\n      this.getData();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    },\n    goDetail(row, balance, accountId) {\n      //详情页\n      this.$router.push({\n        path: '/app/fundDetail',\n        query: {\n          id: row,\n          type: 1002,\n          accountId: accountId,\n          isMini: 1 //自定义的，识别是否是挖矿，以便只显示划转\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.wallet-tab .warning-row {\n  background: #f7f7fa;\n}\n\n.wallet-tab .success-row {\n  background: #fff;\n}\n.el-table::before {\n  height: 0;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';\n.fund-wallet {\n  .wallet-top {\n    display: flex;\n    justify-content: space-between;\n\n    .inpt {\n      width: 314px;\n    }\n  }\n  .wallet-tab {\n    margin-top: 20px;\n    width: 100%;\n    height: 100vh;\n    overflow: auto;\n    .avatar {\n      background-size: 40px 40px;\n      cursor: pointer;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".wallet-tab .warning-row": {
          "background": "#f7f7fa"
        },
        ".wallet-tab .success-row": {
          "background": "#fff"
        },
        ".el-table::before": {
          "height": "0"
        }
      },
      {
        ".fund-wallet": {
          ".wallet-top": {
            "display": "flex",
            "justify-content": "space-between",
            ".inpt": {
              "width": "314px"
            }
          },
          ".wallet-tab": {
            "margin-top": "20px",
            "width": "100%",
            "height": "100vh",
            "overflow": "auto",
            ".avatar": {
              "background-size": "40px 40px",
              "cursor": "pointer"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/tradepsd/from/EmailForm.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 邮箱验证 -->\n<template>\n  <div class=\"trade-email-wrap\">\n    <el-form :model=\"ruleEmailForm\" :rules=\"rules\" ref=\"ruleEmailForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n      <div v-if=\"comForm.email && jyFlag\">\n        <el-form-item label=\"当前邮箱\">\n          <!-- <el-input v-model=\"ruleEmailForm.email\" disabled></el-input> -->\n          <div style=\"color: #151F34\">{{ comForm.email }}</div>\n        </el-form-item>\n        <el-form-item label=\"邮箱验证码\" prop=\"validCode\">\n          <el-input v-model=\"ruleEmailForm.validCode\" autocomplete=\"off\" maxlength=\"6\">\n            <span slot=\"suffix\" v-if=\"this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n              countdownNumber + 's'\n            }}</span>\n            <span\n              slot=\"suffix\"\n              v-if=\"!this.timer\"\n              style=\"\n                color: #2F54EB;\n                margin-right: 10px;\n                user-select: none;\n                cursor: pointer;\n              \"\n              @click=\"getCode\"\n              >获取验证码</span\n            >\n          </el-input>\n        </el-form-item>\n      </div>\n      <el-form-item label=\"请输入资金密码\" prop=\"password\">\n        <el-input v-model=\"ruleEmailForm.password\" autocomplete=\"off\" :type=\"typeInput\" maxlength=\"6\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认资金密码\" prop=\"checkPassword\">\n        <el-input v-model=\"ruleEmailForm.checkPassword\" autocomplete=\"off\" maxlength=\"6\" :type=\"typeInputSure\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item>\n        <button class=\"submit-btn\" @click.prevent=\"submitForm('ruleEmailForm')\">\n          确定\n        </button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport { send_code_email, fundpwd_first_pwd, fundpwd_set_pwd } from '../server';\n\nimport myMixin from '../mixin';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    comForm: {\n      type: Object,\n      dafault() {\n        return {};\n      }\n    },\n    jyFlag: {\n      type: Boolean,\n      dafault() {\n        return {};\n      }\n    }\n  },\n  data() {\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleEmailForm.checkPassword !== '') {\n          this.$refs.ruleEmailForm.validateField('checkPassword');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入确认交易密码'));\n      } else if (value !== this.ruleEmailForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    //这里存放数据\n    return {\n      labelWidth: '140px',\n      typeInput: 'password',\n      typeInputSure: 'password',\n      ruleEmailForm: {\n        validCode: '',\n        password: '',\n        checkPassword: ''\n      },\n      rules: {\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPassword: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { required: true, validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      orShowSure: true,\n      timer: null,\n      countdownNumber: 120\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  mixins: [myMixin],\n  //方法集合\n  methods: {\n    parentHandleclick() {\n      if (this.$refs['ruleEmailForm'] != undefined) {\n        this.$refs['ruleEmailForm'].resetFields();\n      }\n    },\n    getCode() {\n      this.countdownNumber = 120;\n      this.timer = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.sendCodeHand();\n    },\n    countdown() {\n      // 倒计时\n      if (this.countdownNumber == 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.countdownNumber -= 1;\n    },\n    async sendCodeHand() {\n      let res = await send_code_email({ templateCode: 'user_15' });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (this.jyFlag) {\n            //设置过交易密码,此处为修改\n            fundpwd_set_pwd({\n              password: md5(this.ruleEmailForm.password),\n              validCode: this.ruleEmailForm.validCode,\n              validCodeType: 'email',\n              type: 2\n            }).then(res => {\n              if (res.code == '200') {\n                this.$message.success(res.msg);\n                this.$emit('closeDigjy');\n              }\n            });\n          } else {\n            //首次设置\n            fundpwd_first_pwd({\n              password: md5(this.ruleEmailForm.password)\n            }).then(res => {\n              if (res.code == '200') {\n                this.$message.success(res.msg);\n                this.$emit('closeDigjy');\n              }\n            });\n          }\n          // this.submitTradeForms(this.ruleEmailForm, 'email')\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n      this.typeInput = this.orShow ? 'password' : 'text';\n    },\n    tabPsdHandSure() {\n      this.orShowSure = !this.orShowSure;\n      this.typeInputSure = this.orShowSure ? 'password' : 'text';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getUserInfo();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {\n    clearInterval(this.timer);\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 邮箱验证 -->\n<template>\n  <div class=\"trade-email-wrap\">\n    <el-form :model=\"ruleEmailForm\" :rules=\"rules\" ref=\"ruleEmailForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n      <div v-if=\"comForm.email && jyFlag\">\n        <el-form-item label=\"当前邮箱\">\n          <!-- <el-input v-model=\"ruleEmailForm.email\" disabled></el-input> -->\n          <div style=\"color: #151F34\">{{ comForm.email }}</div>\n        </el-form-item>\n        <el-form-item label=\"邮箱验证码\" prop=\"validCode\">\n          <el-input v-model=\"ruleEmailForm.validCode\" autocomplete=\"off\" maxlength=\"6\">\n            <span slot=\"suffix\" v-if=\"this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n              countdownNumber + 's'\n            }}</span>\n            <span\n              slot=\"suffix\"\n              v-if=\"!this.timer\"\n              style=\"\n                color: #2F54EB;\n                margin-right: 10px;\n                user-select: none;\n                cursor: pointer;\n              \"\n              @click=\"getCode\"\n              >获取验证码</span\n            >\n          </el-input>\n        </el-form-item>\n      </div>\n      <el-form-item label=\"请输入资金密码\" prop=\"password\">\n        <el-input v-model=\"ruleEmailForm.password\" autocomplete=\"off\" :type=\"typeInput\" maxlength=\"6\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认资金密码\" prop=\"checkPassword\">\n        <el-input v-model=\"ruleEmailForm.checkPassword\" autocomplete=\"off\" maxlength=\"6\" :type=\"typeInputSure\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item>\n        <button class=\"submit-btn\" @click.prevent=\"submitForm('ruleEmailForm')\">\n          确定\n        </button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport { send_code_email, fundpwd_first_pwd, fundpwd_set_pwd } from '../server';\n\nimport myMixin from '../mixin';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    comForm: {\n      type: Object,\n      dafault() {\n        return {};\n      }\n    },\n    jyFlag: {\n      type: Boolean,\n      dafault() {\n        return {};\n      }\n    }\n  },\n  data() {\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleEmailForm.checkPassword !== '') {\n          this.$refs.ruleEmailForm.validateField('checkPassword');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入确认交易密码'));\n      } else if (value !== this.ruleEmailForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    //这里存放数据\n    return {\n      labelWidth: '140px',\n      typeInput: 'password',\n      typeInputSure: 'password',\n      ruleEmailForm: {\n        validCode: '',\n        password: '',\n        checkPassword: ''\n      },\n      rules: {\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPassword: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { required: true, validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      orShowSure: true,\n      timer: null,\n      countdownNumber: 120\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  mixins: [myMixin],\n  //方法集合\n  methods: {\n    parentHandleclick() {\n      if (this.$refs['ruleEmailForm'] != undefined) {\n        this.$refs['ruleEmailForm'].resetFields();\n      }\n    },\n    getCode() {\n      this.countdownNumber = 120;\n      this.timer = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.sendCodeHand();\n    },\n    countdown() {\n      // 倒计时\n      if (this.countdownNumber == 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.countdownNumber -= 1;\n    },\n    async sendCodeHand() {\n      let res = await send_code_email({ templateCode: 'user_15' });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (this.jyFlag) {\n            //设置过交易密码,此处为修改\n            fundpwd_set_pwd({\n              password: md5(this.ruleEmailForm.password),\n              validCode: this.ruleEmailForm.validCode,\n              validCodeType: 'email',\n              type: 2\n            }).then(res => {\n              if (res.code == '200') {\n                this.$message.success(res.msg);\n                this.$emit('closeDigjy');\n              }\n            });\n          } else {\n            //首次设置\n            fundpwd_first_pwd({\n              password: md5(this.ruleEmailForm.password)\n            }).then(res => {\n              if (res.code == '200') {\n                this.$message.success(res.msg);\n                this.$emit('closeDigjy');\n              }\n            });\n          }\n          // this.submitTradeForms(this.ruleEmailForm, 'email')\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n      this.typeInput = this.orShow ? 'password' : 'text';\n    },\n    tabPsdHandSure() {\n      this.orShowSure = !this.orShowSure;\n      this.typeInputSure = this.orShowSure ? 'password' : 'text';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getUserInfo();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {\n    clearInterval(this.timer);\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.trade-email-wrap {\n  .submit-btn {\n    margin-top: 38px;\n    height: 40px;\n    background: #2f54eb;\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    cursor: pointer;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".trade-email-wrap": {
          ".submit-btn": {
            "margin-top": "38px",
            "height": "40px",
            "background": "#2f54eb",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "cursor": "pointer"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/table/fundOre.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {
      "1": "@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';"
    },
    "keepContent": "<!--资金-挖矿  -->\n<template>\n  <div class=\"fund-ore\">\n    <p class=\"tip\">开矿专用账户，资金不可转出</p>\n    <div class=\"ore-top\">\n      <div class=\"inpt\">\n        <el-input placeholder=\"搜索币种简称或全称\" v-model=\"currency\" @blur=\"search\" @keyup.enter.native=\"search\" clearable>\n          <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n        </el-input>\n      </div>\n      <el-checkbox v-model=\"checked\">隐藏无余额币种</el-checkbox>\n    </div>\n    <div class=\"ore-tab\">\n      <el-table\n        :data=\"checked ? dataNoBalance : tableData\"\n        style=\"width: 100%\"\n        :row-class-name=\"tableRowClassName\"\n        :show-header=\"showHeader\"\n      >\n        <el-table-column label=\"图片\" align=\"center\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <div @click=\"goDetail(scope.row.currency, scope.row.balance, scope.row.accountId)\">\n              <el-avatar :class=\"`ICON_${scope.row.currency}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"currency\" label=\"名称\">\n          <template slot-scope=\"scope\">\n            <div\n              style=\"\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n              \"\n            >\n              <p style=\"flex: 1; color: rgba(21, 31, 52, 1); font-size: 14px\">\n                {{ scope.row.currency }}\n              </p>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"balance\" label=\"余额\" width=\"200\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <div style=\"font-size: 18px; color: #151F34; font-weight: 500\">\n              {{ scope.row.balance }}\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"enabled\" label=\"挖矿状态\" width=\"140\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-switch v-model=\"scope.row.enabled\" active-color=\"#009900\" inactive-color=\"#999999\" @change=\"changeOre($event)\"></el-switch>\n          </template>\n        </el-table-column>\n        <p slot=\"append\" style=\"text-align: center; line-height: 50px; border-bottom: none\">\n          <span href=\"javascript:;\" style=\"color: #2F54EB\">没有更多了</span>\n        </p>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_ore_capitalList, get_ore_allList, get_confirm_enable } from '../server';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      showHeader: false,\n      pageIndex: 1,\n      loading: false,\n      currency: '',\n      checked: false,\n      tableData: [],\n      dataNoBalance: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    // getData() {\n    //   //获取数据，在获取数据成功后，则关闭loading效果\n    //   //   this.slotloading = false;\n    // },\n    // getMData() {\n    //   this.pageIndex++;\n    //   //   self.loading = true;\n    //   //   this.getData();\n    // },\n    async changeOre(a) {\n      let param = 1;\n      if (a) {\n        param = 1;\n      } else {\n        param = 0;\n      }\n      let res = await get_confirm_enable({\n        enabled: param\n      });\n      if (res.code == 200) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(111);\n      }\n    },\n    search() {\n      let param = {};\n      param.currency = this.currency;\n      this.getOreData(param);\n    },\n    async getOreData(param) {\n      try {\n        let res_data = await get_ore_capitalList(param);\n        this.tableData = res_data.data;\n        let newArr = [];\n        for (let i = 0; i < res_data.data.length; i++) {\n          if (res_data.data[i].balance > 0) {\n            newArr.push(res_data.data[i]);\n          }\n        }\n        this.dataNoBalance = newArr;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getAllList() {\n      let res = await get_ore_allList();\n      this.tableData = res.data;\n    },\n    init() {\n      this.getAllList();\n    },\n\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    },\n    goDetail(row, balance, accountId) {\n      this.$router.push({\n        path: '/app/fundDetail',\n        query: {\n          id: row,\n          type: 1201,\n          accountId: accountId\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--资金-挖矿  -->\n<template>\n  <div class=\"fund-ore\">\n    <p class=\"tip\">开矿专用账户，资金不可转出</p>\n    <div class=\"ore-top\">\n      <div class=\"inpt\">\n        <el-input placeholder=\"搜索币种简称或全称\" v-model=\"currency\" @blur=\"search\" @keyup.enter.native=\"search\" clearable>\n          <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n        </el-input>\n      </div>\n      <el-checkbox v-model=\"checked\">隐藏无余额币种</el-checkbox>\n    </div>\n    <div class=\"ore-tab\">\n      <el-table\n        :data=\"checked ? dataNoBalance : tableData\"\n        style=\"width: 100%\"\n        :row-class-name=\"tableRowClassName\"\n        :show-header=\"showHeader\"\n      >\n        <el-table-column label=\"图片\" align=\"center\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <div @click=\"goDetail(scope.row.currency, scope.row.balance, scope.row.accountId)\">\n              <el-avatar :class=\"`ICON_${scope.row.currency}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"currency\" label=\"名称\">\n          <template slot-scope=\"scope\">\n            <div\n              style=\"\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n              \"\n            >\n              <p style=\"flex: 1; color: rgba(21, 31, 52, 1); font-size: 14px\">\n                {{ scope.row.currency }}\n              </p>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"balance\" label=\"余额\" width=\"200\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <div style=\"font-size: 18px; color: #151F34; font-weight: 500\">\n              {{ scope.row.balance }}\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"enabled\" label=\"挖矿状态\" width=\"140\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-switch v-model=\"scope.row.enabled\" active-color=\"#009900\" inactive-color=\"#999999\" @change=\"changeOre($event)\"></el-switch>\n          </template>\n        </el-table-column>\n        <p slot=\"append\" style=\"text-align: center; line-height: 50px; border-bottom: none\">\n          <span href=\"javascript:;\" style=\"color: #2F54EB\">没有更多了</span>\n        </p>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_ore_capitalList, get_ore_allList, get_confirm_enable } from '../server';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      showHeader: false,\n      pageIndex: 1,\n      loading: false,\n      currency: '',\n      checked: false,\n      tableData: [],\n      dataNoBalance: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    // getData() {\n    //   //获取数据，在获取数据成功后，则关闭loading效果\n    //   //   this.slotloading = false;\n    // },\n    // getMData() {\n    //   this.pageIndex++;\n    //   //   self.loading = true;\n    //   //   this.getData();\n    // },\n    async changeOre(a) {\n      let param = 1;\n      if (a) {\n        param = 1;\n      } else {\n        param = 0;\n      }\n      let res = await get_confirm_enable({\n        enabled: param\n      });\n      if (res.code == 200) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(111);\n      }\n    },\n    search() {\n      let param = {};\n      param.currency = this.currency;\n      this.getOreData(param);\n    },\n    async getOreData(param) {\n      try {\n        let res_data = await get_ore_capitalList(param);\n        this.tableData = res_data.data;\n        let newArr = [];\n        for (let i = 0; i < res_data.data.length; i++) {\n          if (res_data.data[i].balance > 0) {\n            newArr.push(res_data.data[i]);\n          }\n        }\n        this.dataNoBalance = newArr;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getAllList() {\n      let res = await get_ore_allList();\n      this.tableData = res.data;\n    },\n    init() {\n      this.getAllList();\n    },\n\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    },\n    goDetail(row, balance, accountId) {\n      this.$router.push({\n        path: '/app/fundDetail',\n        query: {\n          id: row,\n          type: 1201,\n          accountId: accountId\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.ore-tab .warning-row {\n  background: #f7f7fa;\n}\n\n.ore-tab .success-row {\n  background: #fff;\n}\n\n.el-table::before {\n  height: 0;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';\n\n.fund-ore {\n  .tip {\n    font-size: 12px;\n    font-weight: 400;\n    color: rgba(245, 36, 45, 1);\n    line-height: 17px;\n    height: 17px;\n    text-align: center;\n    margin-bottom: 10px;\n  }\n\n  .ore-top {\n    display: flex;\n    justify-content: space-between;\n\n    .inpt {\n      width: 314px;\n    }\n  }\n\n  .ore-tab {\n    margin-top: 20px;\n\n    .avatar {\n      background-size: 40px 40px;\n      cursor: pointer;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".ore-tab .warning-row": {
          "background": "#f7f7fa"
        },
        ".ore-tab .success-row": {
          "background": "#fff"
        },
        ".el-table::before": {
          "height": "0"
        }
      },
      {
        ".fund-ore": {
          ".tip": {
            "font-size": "12px",
            "font-weight": "400",
            "color": "rgba(245, 36, 45, 1)",
            "line-height": "17px",
            "height": "17px",
            "text-align": "center",
            "margin-bottom": "10px"
          },
          ".ore-top": {
            "display": "flex",
            "justify-content": "space-between",
            ".inpt": {
              "width": "314px"
            }
          },
          ".ore-tab": {
            "margin-top": "20px",
            ".avatar": {
              "background-size": "40px 40px",
              "cursor": "pointer"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/tradepsd/from/PhoneForm.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 手机验证 -->\n<template>\n  <div class=\"trade-phone-wrap\">\n    <el-form :model=\"rulePhoneForm\" :rules=\"rules\" ref=\"rulePhoneForm\" :label-width=\"labelWidth\" class=\"demo-rulePhoneForm\">\n      <div v-if=\"checkData.mobile\">\n        <el-form-item label=\"当前手机号\">\n          <div style=\"color: #151F34\">{{ checkData.userMobile }}</div>\n        </el-form-item>\n        <el-form-item label=\"请输入验证码\" prop=\"validCode\">\n          <el-input v-model=\"rulePhoneForm.validCode\" maxlength=\"6\">\n            <span slot=\"suffix\" v-if=\"this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n              countdownNumber + 's'\n            }}</span>\n            <span\n              slot=\"suffix\"\n              v-if=\"!this.timer\"\n              style=\"\n                color: #2F54EB;\n                margin-right: 10px;\n                user-select: none;\n                cursor: pointer;\n              \"\n              @click=\"getCode\"\n              >获取验证码</span\n            >\n          </el-input>\n        </el-form-item>\n      </div>\n      <el-form-item label=\"请输入交易密码\" prop=\"password\">\n        <el-input v-model=\"rulePhoneForm.password\" :type=\"typeInput\" maxlength=\"6\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认交易密码\" prop=\"checkPassword\">\n        <el-input v-model=\"rulePhoneForm.checkPassword\" :type=\"typeInputSure\" maxlength=\"6\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item>\n        <button class=\"submit-btn\" @click.prevent=\"submitForm('rulePhoneForm')\">\n          确定\n        </button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport myMixin from '../mixin';\nimport { send_code_mobile } from '../server';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  mixins: [myMixin],\n  data() {\n    //这里存放数据\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.rulePhoneForm.checkPassword !== '') {\n          this.$refs.rulePhoneForm.validateField('checkPassword');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入确认交易密码'));\n      } else if (value !== this.rulePhoneForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      labelWidth: '120px',\n      typeInput: 'password',\n      typeInputSure: 'password',\n      rulePhoneForm: {\n        validCode: '',\n        password: '',\n        checkPassword: ''\n      },\n      rules: {\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPassword: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { required: true, validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      orShowSure: true,\n      timer: null,\n      countdownNumber: 120\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    getCode() {\n      this.countdownNumber = 120;\n      this.timer = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.sendCodeHand();\n    },\n    countdown() {\n      // 倒计时\n      if (this.countdownNumber == 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.countdownNumber -= 1;\n    },\n    async sendCodeHand() {\n      let res = await send_code_mobile({ templateCode: 'user_14' });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          // this.$emit('submitForm', this.rulePhoneForm, 'mobile')\n          this.submitTradeForms(this.rulePhoneForm, 'mobile');\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n      this.typeInput = this.orShow ? 'password' : 'text';\n    },\n    tabPsdHandSure() {\n      this.orShowSure = !this.orShowSure;\n      this.typeInputSure = this.orShowSure ? 'password' : 'text';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getUserInfo();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 手机验证 -->\n<template>\n  <div class=\"trade-phone-wrap\">\n    <el-form :model=\"rulePhoneForm\" :rules=\"rules\" ref=\"rulePhoneForm\" :label-width=\"labelWidth\" class=\"demo-rulePhoneForm\">\n      <div v-if=\"checkData.mobile\">\n        <el-form-item label=\"当前手机号\">\n          <div style=\"color: #151F34\">{{ checkData.userMobile }}</div>\n        </el-form-item>\n        <el-form-item label=\"请输入验证码\" prop=\"validCode\">\n          <el-input v-model=\"rulePhoneForm.validCode\" maxlength=\"6\">\n            <span slot=\"suffix\" v-if=\"this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n              countdownNumber + 's'\n            }}</span>\n            <span\n              slot=\"suffix\"\n              v-if=\"!this.timer\"\n              style=\"\n                color: #2F54EB;\n                margin-right: 10px;\n                user-select: none;\n                cursor: pointer;\n              \"\n              @click=\"getCode\"\n              >获取验证码</span\n            >\n          </el-input>\n        </el-form-item>\n      </div>\n      <el-form-item label=\"请输入交易密码\" prop=\"password\">\n        <el-input v-model=\"rulePhoneForm.password\" :type=\"typeInput\" maxlength=\"6\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认交易密码\" prop=\"checkPassword\">\n        <el-input v-model=\"rulePhoneForm.checkPassword\" :type=\"typeInputSure\" maxlength=\"6\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item>\n        <button class=\"submit-btn\" @click.prevent=\"submitForm('rulePhoneForm')\">\n          确定\n        </button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport myMixin from '../mixin';\nimport { send_code_mobile } from '../server';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  mixins: [myMixin],\n  data() {\n    //这里存放数据\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.rulePhoneForm.checkPassword !== '') {\n          this.$refs.rulePhoneForm.validateField('checkPassword');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入确认交易密码'));\n      } else if (value !== this.rulePhoneForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      labelWidth: '120px',\n      typeInput: 'password',\n      typeInputSure: 'password',\n      rulePhoneForm: {\n        validCode: '',\n        password: '',\n        checkPassword: ''\n      },\n      rules: {\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPassword: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { required: true, validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      orShowSure: true,\n      timer: null,\n      countdownNumber: 120\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    getCode() {\n      this.countdownNumber = 120;\n      this.timer = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.sendCodeHand();\n    },\n    countdown() {\n      // 倒计时\n      if (this.countdownNumber == 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.countdownNumber -= 1;\n    },\n    async sendCodeHand() {\n      let res = await send_code_mobile({ templateCode: 'user_14' });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          // this.$emit('submitForm', this.rulePhoneForm, 'mobile')\n          this.submitTradeForms(this.rulePhoneForm, 'mobile');\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n      this.typeInput = this.orShow ? 'password' : 'text';\n    },\n    tabPsdHandSure() {\n      this.orShowSure = !this.orShowSure;\n      this.typeInputSure = this.orShowSure ? 'password' : 'text';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getUserInfo();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.trade-phone-wrap {\n  .submit-btn {\n    margin-top: 38px;\n    height: 40px;\n    background: #2f54eb;\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    cursor: pointer;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".trade-phone-wrap": {
          ".submit-btn": {
            "margin-top": "38px",
            "height": "40px",
            "background": "#2f54eb",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "cursor": "pointer"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/tradepsd/from/GoogleForm.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- google验证 -->\n<template>\n  <div class=\"trade-google-wrap\">\n    <el-form :model=\"ruleGoogleForm\" :rules=\"rules\" ref=\"ruleGoogleForm\" :label-width=\"labelWidth\" class=\"demo-ruleGoogleForm\">\n      <div v-if=\"comForm.googleAuthStatus && jyFlag\">\n        <el-form-item label=\"当前谷歌帐号\">\n          <div style=\"color: #151F34\">{{ comForm.email }}</div>\n        </el-form-item>\n        <el-form-item label=\"请输入谷歌验证码\" prop=\"validCode\">\n          <div class=\"input-groups-wrap\">\n            <el-input v-model=\"ruleGoogleForm.validCode\" autocomplete=\"off\" maxlength=\"6\"></el-input>\n          </div>\n        </el-form-item>\n      </div>\n      <el-form-item label=\"请输入资金密码\" prop=\"password\">\n        <el-input v-model=\"ruleGoogleForm.password\" :type=\"typeInput\" maxlength=\"6\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认资金密码\" prop=\"checkPassword\">\n        <el-input v-model=\"ruleGoogleForm.checkPassword\" :type=\"typeInputSure\" maxlength=\"6\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item>\n        <button class=\"submit-btn\" @click.prevent=\"submitForm('ruleGoogleForm')\">\n          确定\n        </button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport myMixin from '../mixin';\nimport { fundpwd_first_pwd, fundpwd_set_pwd } from '../server';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    comForm: {\n      type: Object,\n      dafault() {\n        return {};\n      }\n    },\n    jyFlag: {\n      type: Boolean,\n      dafault() {\n        return {};\n      }\n    }\n  },\n  mixins: [myMixin],\n  data() {\n    //这里存放数据\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleGoogleForm.checkPassword !== '') {\n          this.$refs.ruleGoogleForm.validateField('checkPassword');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入确认交易密码'));\n      } else if (value !== this.ruleGoogleForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      labelWidth: '140px',\n      typeInput: 'password',\n      typeInputSure: 'password',\n      validCode: {},\n      ruleGoogleForm: {\n        validCode: '',\n        password: '',\n        checkPassword: ''\n      },\n      rules: {\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPassword: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { required: true, validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      orShowSure: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    parentHandleclick() {\n      if (this.$refs['ruleGoogleForm'] != undefined) {\n        this.$refs['ruleGoogleForm'].resetFields();\n      }\n    },\n    checkNumber(eve) {\n      this.$nextTick(() => {\n        let val = eve.target.value;\n        let index = eve.target.getAttribute('data-index');\n        this.validCode[`key${index}`] = val.replace(/[^0-9$]{0,11}/g, '');\n        if (Number(index) < 5) {\n          this.$refs[`input${Number(index) + 1}`][0].focus();\n        }\n      });\n    },\n    submitForm(formName) {\n      // let flag = false;\n      // if (!this.checkData.google) {\n      //   for (let i = 0; i <= 5; i++) {\n      //     if (!this.validCode[`key${i}`]) {\n      //       this.$message.warning(\"请输入验证码\");\n      //       flag = true;\n      //       break;\n      //     }\n      //   }\n      // }\n      // if (flag) return;\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          // this.ruleGoogleForm.validCode = \"\";\n          // for (let i = 0; i <= 5; i++) {\n          //   this.ruleGoogleForm.validCode += this.validCode[`key${i}`];\n          // }\n          // this.submitTradeForms(this.ruleGoogleForm, \"google\");\n          if (this.jyFlag) {\n            //设置过交易密码,此处为修改\n            fundpwd_set_pwd({\n              password: md5(this.ruleGoogleForm.password),\n              validCode: this.ruleGoogleForm.validCode,\n              validCodeType: 'google',\n              type: 2\n            }).then(res => {\n              if (res.code == '200') {\n                this.$message.success(res.msg);\n                this.$emit('closeDigjy');\n              }\n            });\n          } else {\n            //首次设置\n            fundpwd_first_pwd({\n              password: md5(this.ruleGoogleForm.password)\n            }).then(res => {\n              if (res.code == '200') {\n                this.$message.success(res.msg);\n                this.$emit('closeDigjy');\n              }\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n      this.typeInput = this.orShow ? 'password' : 'text';\n    },\n    tabPsdHandSure() {\n      this.orShowSure = !this.orShowSure;\n      this.typeInputSure = this.orShowSure ? 'password' : 'text';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getUserInfo();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- google验证 -->\n<template>\n  <div class=\"trade-google-wrap\">\n    <el-form :model=\"ruleGoogleForm\" :rules=\"rules\" ref=\"ruleGoogleForm\" :label-width=\"labelWidth\" class=\"demo-ruleGoogleForm\">\n      <div v-if=\"comForm.googleAuthStatus && jyFlag\">\n        <el-form-item label=\"当前谷歌帐号\">\n          <div style=\"color: #151F34\">{{ comForm.email }}</div>\n        </el-form-item>\n        <el-form-item label=\"请输入谷歌验证码\" prop=\"validCode\">\n          <div class=\"input-groups-wrap\">\n            <el-input v-model=\"ruleGoogleForm.validCode\" autocomplete=\"off\" maxlength=\"6\"></el-input>\n          </div>\n        </el-form-item>\n      </div>\n      <el-form-item label=\"请输入资金密码\" prop=\"password\">\n        <el-input v-model=\"ruleGoogleForm.password\" :type=\"typeInput\" maxlength=\"6\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认资金密码\" prop=\"checkPassword\">\n        <el-input v-model=\"ruleGoogleForm.checkPassword\" :type=\"typeInputSure\" maxlength=\"6\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item>\n        <button class=\"submit-btn\" @click.prevent=\"submitForm('ruleGoogleForm')\">\n          确定\n        </button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport myMixin from '../mixin';\nimport { fundpwd_first_pwd, fundpwd_set_pwd } from '../server';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    comForm: {\n      type: Object,\n      dafault() {\n        return {};\n      }\n    },\n    jyFlag: {\n      type: Boolean,\n      dafault() {\n        return {};\n      }\n    }\n  },\n  mixins: [myMixin],\n  data() {\n    //这里存放数据\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleGoogleForm.checkPassword !== '') {\n          this.$refs.ruleGoogleForm.validateField('checkPassword');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入确认交易密码'));\n      } else if (value !== this.ruleGoogleForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      labelWidth: '140px',\n      typeInput: 'password',\n      typeInputSure: 'password',\n      validCode: {},\n      ruleGoogleForm: {\n        validCode: '',\n        password: '',\n        checkPassword: ''\n      },\n      rules: {\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPassword: [\n          {\n            required: true,\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          },\n          { required: true, validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      orShowSure: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    parentHandleclick() {\n      if (this.$refs['ruleGoogleForm'] != undefined) {\n        this.$refs['ruleGoogleForm'].resetFields();\n      }\n    },\n    checkNumber(eve) {\n      this.$nextTick(() => {\n        let val = eve.target.value;\n        let index = eve.target.getAttribute('data-index');\n        this.validCode[`key${index}`] = val.replace(/[^0-9$]{0,11}/g, '');\n        if (Number(index) < 5) {\n          this.$refs[`input${Number(index) + 1}`][0].focus();\n        }\n      });\n    },\n    submitForm(formName) {\n      // let flag = false;\n      // if (!this.checkData.google) {\n      //   for (let i = 0; i <= 5; i++) {\n      //     if (!this.validCode[`key${i}`]) {\n      //       this.$message.warning(\"请输入验证码\");\n      //       flag = true;\n      //       break;\n      //     }\n      //   }\n      // }\n      // if (flag) return;\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          // this.ruleGoogleForm.validCode = \"\";\n          // for (let i = 0; i <= 5; i++) {\n          //   this.ruleGoogleForm.validCode += this.validCode[`key${i}`];\n          // }\n          // this.submitTradeForms(this.ruleGoogleForm, \"google\");\n          if (this.jyFlag) {\n            //设置过交易密码,此处为修改\n            fundpwd_set_pwd({\n              password: md5(this.ruleGoogleForm.password),\n              validCode: this.ruleGoogleForm.validCode,\n              validCodeType: 'google',\n              type: 2\n            }).then(res => {\n              if (res.code == '200') {\n                this.$message.success(res.msg);\n                this.$emit('closeDigjy');\n              }\n            });\n          } else {\n            //首次设置\n            fundpwd_first_pwd({\n              password: md5(this.ruleGoogleForm.password)\n            }).then(res => {\n              if (res.code == '200') {\n                this.$message.success(res.msg);\n                this.$emit('closeDigjy');\n              }\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n      this.typeInput = this.orShow ? 'password' : 'text';\n    },\n    tabPsdHandSure() {\n      this.orShowSure = !this.orShowSure;\n      this.typeInputSure = this.orShowSure ? 'password' : 'text';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getUserInfo();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.trade-google-wrap {\n  .submit-btn {\n    margin-top: 38px;\n    height: 40px;\n    background: #2f54eb;\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    cursor: pointer;\n  }\n  .input-groups-wrap {\n    display: flex;\n    justify-content: space-around;\n    margin-top: 5px;\n    input {\n      display: inline-block;\n      width: 30px;\n      height: 30px;\n      background: rgba(247, 247, 250, 1);\n      box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n      border-radius: 4px;\n      border-radius: 4px;\n      text-align: center;\n      outline: none;\n      border: none;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".trade-google-wrap": {
          ".submit-btn": {
            "margin-top": "38px",
            "height": "40px",
            "background": "#2f54eb",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "cursor": "pointer"
          },
          ".input-groups-wrap": {
            "display": "flex",
            "justify-content": "space-around",
            "margin-top": "5px",
            "input": {
              "display": "inline-block",
              "width": "30px",
              "height": "30px",
              "background": "rgba(247, 247, 250, 1)",
              "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
              "border-radius": "4px",
              "text-align": "center",
              "outline": "none",
              "border": "none"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/miningDetail/index.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"mindetail\">\n    <p class=\"des\">矿区概况：<span>APP已为您开通权限，您可以至App进行开矿</span></p>\n    <el-tabs v-model=\"activeItem\">\n      <ul class=\"status\" id=\"taglist\" @click=\"tabHand\">\n        <li\n          :class=\"{ active: index == 0 }\"\n          :data-index=\"index\"\n          v-for=\"(item, index) in tabData\"\n          :key=\"index\"\n          @click=\"choosestaus(item.value)\"\n        >\n          {{ item.name }} {{ item.label }}\n        </li>\n      </ul>\n      <span slot=\"label\"> 进行中<label class=\"numtip\">563</label></span>\n      <div class=\"withdraw-address-table\">\n        <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n          <el-table-column prop=\"mineId\" label=\"矿ID\" width=\"180\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"name\" label=\"矿名称\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"currency\" label=\"币种\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"type\" label=\"矿类型\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"quantity\" label=\"矿大小\" align=\"center\"> </el-table-column>\n          <el-table-column prop=\"count\" label=\"参与挖矿人数\" align=\"center\" width=\"120\"> </el-table-column>\n          <el-table-column prop=\"startTime\" label=\"开挖时间\" align=\"center\" width=\"120\"> </el-table-column>\n          <el-table-column prop=\"endTime\" label=\"结束时间\" align=\"center\" width=\"120\"> </el-table-column>\n          <el-table-column prop=\"address\" label=\"创建时间\" align=\"center\" width=\"120\"> </el-table-column>\n        </el-table>\n      </div>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n      <div class=\"withdraw-address-table\">\n        <el-row style=\"margin: 10px 0; font-size: 14px\">\n          <el-col :span=\"15\"> 用户挖矿明细 </el-col>\n          <el-col :span=\"9\" align=\"right\">\n            <el-input placeholder=\"输入用户通行证搜索\" prefix-icon=\"el-icon-search\" style=\"width: 260px\" v-model=\"ltCode\"> </el-input>\n            <el-button type=\"primary\" style=\"margin-left: 20px; cursor: pointer\" @click=\"usermaring()\">搜索</el-button>\n          </el-col>\n        </el-row>\n        <el-table :data=\"tableData2\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n          <el-table-column prop=\"ltCode\" label=\"个人ID\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"nickName\" label=\"个人昵称\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"currency\" label=\"币种\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"amount\" label=\"挖矿金额(数量)\" align=\"center\"></el-table-column>\n        </el-table>\n      </div>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage2\"\n        :total=\"total2\"\n        :myPageSizes=\"pageSize2\"\n        @handleSizeChange=\"handleSizeChange2\"\n        @handleCurrentChange=\"handleCurrentChange2\"\n      />\n    </el-tabs>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { fund_mine_mymine } from '../server';\nimport { fund_mine_stat } from '../server';\nimport { fund_mine_usermaring } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      layout: 'prev, pager, next',\n      total: 0,\n      currentPage: 1,\n      pageNo: 1,\n      pageSize: 10,\n      tableData: [],\n      total2: 0,\n      currentPage2: 1,\n      pageNo2: 1,\n      pageSize2: 10,\n      tableData2: [],\n      blue: '',\n      activeItem: 'first',\n      tabData: [\n        { name: '进行中', value: '1', label: '0' },\n        { name: '未开始', value: '0', label: '0' },\n        { name: '已结束', value: '2', label: '0' },\n        { name: '失败', value: '3', label: '0' }\n      ],\n      dataSource: [], // 数据源\n      columns: [\n        {\n          hasSort: false, //<Boolean> 是否排序\n          isShow: true, //<Boolean> 是否展示\n          prop: 'createTime', //<String>  对应属性名\n          label: '矿ID', //<String>   表头标签\n          align: 'center'\n        }\n      ],\n      ltCode: '',\n      status: 1\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    usermaring() {\n      fund_mine_usermaring({\n        ltCode: this.ltCode,\n        pageNo: this.pageNo2,\n        pageSize: this.pageSize2\n      }).then(res => {\n        this.tableData2 = res.data.rows;\n        this.total2 = res.data.totalRow;\n      });\n    },\n    choosestaus(a) {\n      this.pageNo = 1;\n      this.currentPage = 1;\n      if (a) {\n        this.status = a;\n      }\n      this.mymine();\n    },\n    tabHand(e) {\n      if (e.target.nodeName.toLowerCase() === 'li') {\n        let arrLi = document.querySelectorAll('#taglist li');\n        e.target.className = 'active';\n        let activeIndex = e.target.getAttribute('data-index');\n        Array.from(arrLi).map((item, index) => {\n          if (activeIndex != index) {\n            item.classList.remove('active');\n          }\n        });\n      }\n    },\n    async mymine() {\n      let params = {\n        pageNo: this.pageNo,\n        pageSize: this.pageSize,\n        status: this.status\n      };\n      let res = await fund_mine_mymine(params);\n\n      this.tableData = res.data.rows;\n      this.total = res.data.totalRow;\n    },\n    stat() {\n      fund_mine_stat({}).then(res => {\n        this.tabData[0].label = res.data.mining;\n        this.tabData[1].label = res.data.waitOpen;\n        this.tabData[2].label = res.data.miningOver;\n        this.tabData[3].label = res.data.openFail;\n      });\n    },\n    getMymine() {\n      this.mymine();\n      this.stat();\n      this.usermaring();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.pageNo = 1;\n      this.pageSize = val;\n      this.mymine();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.pageNo = val;\n      this.currentPage = val;\n      this.mymine();\n    },\n    handleSizeChange2(val) {\n      // 一页显示多少条\n      this.currentPage2 = 1;\n      this.pageNo2 = 1;\n      this.pageSize2 = val;\n      this.usermaring();\n    },\n    handleCurrentChange2(val) {\n      // 页码改变时\n      this.pageNo2 = val;\n\n      this.usermaring();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getMymine();\n    //  this.stat()\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"mindetail\">\n    <p class=\"des\">矿区概况：<span>APP已为您开通权限，您可以至App进行开矿</span></p>\n    <el-tabs v-model=\"activeItem\">\n      <ul class=\"status\" id=\"taglist\" @click=\"tabHand\">\n        <li\n          :class=\"{ active: index == 0 }\"\n          :data-index=\"index\"\n          v-for=\"(item, index) in tabData\"\n          :key=\"index\"\n          @click=\"choosestaus(item.value)\"\n        >\n          {{ item.name }} {{ item.label }}\n        </li>\n      </ul>\n      <span slot=\"label\"> 进行中<label class=\"numtip\">563</label></span>\n      <div class=\"withdraw-address-table\">\n        <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n          <el-table-column prop=\"mineId\" label=\"矿ID\" width=\"180\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"name\" label=\"矿名称\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"currency\" label=\"币种\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"type\" label=\"矿类型\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"quantity\" label=\"矿大小\" align=\"center\"> </el-table-column>\n          <el-table-column prop=\"count\" label=\"参与挖矿人数\" align=\"center\" width=\"120\"> </el-table-column>\n          <el-table-column prop=\"startTime\" label=\"开挖时间\" align=\"center\" width=\"120\"> </el-table-column>\n          <el-table-column prop=\"endTime\" label=\"结束时间\" align=\"center\" width=\"120\"> </el-table-column>\n          <el-table-column prop=\"address\" label=\"创建时间\" align=\"center\" width=\"120\"> </el-table-column>\n        </el-table>\n      </div>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n      <div class=\"withdraw-address-table\">\n        <el-row style=\"margin: 10px 0; font-size: 14px\">\n          <el-col :span=\"15\"> 用户挖矿明细 </el-col>\n          <el-col :span=\"9\" align=\"right\">\n            <el-input placeholder=\"输入用户通行证搜索\" prefix-icon=\"el-icon-search\" style=\"width: 260px\" v-model=\"ltCode\"> </el-input>\n            <el-button type=\"primary\" style=\"margin-left: 20px; cursor: pointer\" @click=\"usermaring()\">搜索</el-button>\n          </el-col>\n        </el-row>\n        <el-table :data=\"tableData2\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n          <el-table-column prop=\"ltCode\" label=\"个人ID\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"nickName\" label=\"个人昵称\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"currency\" label=\"币种\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"amount\" label=\"挖矿金额(数量)\" align=\"center\"></el-table-column>\n        </el-table>\n      </div>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage2\"\n        :total=\"total2\"\n        :myPageSizes=\"pageSize2\"\n        @handleSizeChange=\"handleSizeChange2\"\n        @handleCurrentChange=\"handleCurrentChange2\"\n      />\n    </el-tabs>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { fund_mine_mymine } from '../server';\nimport { fund_mine_stat } from '../server';\nimport { fund_mine_usermaring } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      layout: 'prev, pager, next',\n      total: 0,\n      currentPage: 1,\n      pageNo: 1,\n      pageSize: 10,\n      tableData: [],\n      total2: 0,\n      currentPage2: 1,\n      pageNo2: 1,\n      pageSize2: 10,\n      tableData2: [],\n      blue: '',\n      activeItem: 'first',\n      tabData: [\n        { name: '进行中', value: '1', label: '0' },\n        { name: '未开始', value: '0', label: '0' },\n        { name: '已结束', value: '2', label: '0' },\n        { name: '失败', value: '3', label: '0' }\n      ],\n      dataSource: [], // 数据源\n      columns: [\n        {\n          hasSort: false, //<Boolean> 是否排序\n          isShow: true, //<Boolean> 是否展示\n          prop: 'createTime', //<String>  对应属性名\n          label: '矿ID', //<String>   表头标签\n          align: 'center'\n        }\n      ],\n      ltCode: '',\n      status: 1\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    usermaring() {\n      fund_mine_usermaring({\n        ltCode: this.ltCode,\n        pageNo: this.pageNo2,\n        pageSize: this.pageSize2\n      }).then(res => {\n        this.tableData2 = res.data.rows;\n        this.total2 = res.data.totalRow;\n      });\n    },\n    choosestaus(a) {\n      this.pageNo = 1;\n      this.currentPage = 1;\n      if (a) {\n        this.status = a;\n      }\n      this.mymine();\n    },\n    tabHand(e) {\n      if (e.target.nodeName.toLowerCase() === 'li') {\n        let arrLi = document.querySelectorAll('#taglist li');\n        e.target.className = 'active';\n        let activeIndex = e.target.getAttribute('data-index');\n        Array.from(arrLi).map((item, index) => {\n          if (activeIndex != index) {\n            item.classList.remove('active');\n          }\n        });\n      }\n    },\n    async mymine() {\n      let params = {\n        pageNo: this.pageNo,\n        pageSize: this.pageSize,\n        status: this.status\n      };\n      let res = await fund_mine_mymine(params);\n\n      this.tableData = res.data.rows;\n      this.total = res.data.totalRow;\n    },\n    stat() {\n      fund_mine_stat({}).then(res => {\n        this.tabData[0].label = res.data.mining;\n        this.tabData[1].label = res.data.waitOpen;\n        this.tabData[2].label = res.data.miningOver;\n        this.tabData[3].label = res.data.openFail;\n      });\n    },\n    getMymine() {\n      this.mymine();\n      this.stat();\n      this.usermaring();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.pageNo = 1;\n      this.pageSize = val;\n      this.mymine();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.pageNo = val;\n      this.currentPage = val;\n      this.mymine();\n    },\n    handleSizeChange2(val) {\n      // 一页显示多少条\n      this.currentPage2 = 1;\n      this.pageNo2 = 1;\n      this.pageSize2 = val;\n      this.usermaring();\n    },\n    handleCurrentChange2(val) {\n      // 页码改变时\n      this.pageNo2 = val;\n\n      this.usermaring();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getMymine();\n    //  this.stat()\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.withdraw-address-table {\n  margin-top: 20px;\n}\n.withdraw-address-table .warning-row {\n  background: #f7f7fa;\n}\n\n.withdraw-address-table .success-row {\n  background: #fff;\n}\n.withdraw-address-table .el-table td,\n.withdraw-address-table .el-table th.is-leaf {\n  border: none;\n}\n.withdraw-address-table .el-table th {\n  background-color: #9297a3;\n  color: #151f34;\n}\n.withdraw-address-table .el-table::before {\n  height: 0;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.des {\n  font-size: 14px;\n  margin: 20px 0;\n  span {\n    color: #aaa;\n  }\n}\n.status {\n  padding-right: 50px;\n  overflow: hidden;\n  li {\n    float: left;\n    cursor: pointer;\n    padding-right: 50px;\n    font-size: 14px;\n  }\n  .active {\n    color: #2f54eb;\n  }\n}\n\n.numtip {\n  padding-left: 5px;\n}\n.topdes {\n  margin: 20px 0;\n  color: #666;\n  font-size: 14px;\n  span {\n    padding-right: 50px;\n  }\n}\n.fund-general-wrap {\n  .fund-content {\n    width: 100%;\n    margin-top: 30px;\n    .fund-item {\n      display: none;\n    }\n    .active {\n      display: block;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".withdraw-address-table": {
          "margin-top": "20px"
        },
        ".withdraw-address-table .warning-row": {
          "background": "#f7f7fa"
        },
        ".withdraw-address-table .success-row": {
          "background": "#fff"
        },
        ".withdraw-address-table .el-table td,.withdraw-address-table .el-table th.is-leaf": {
          "border": "none"
        },
        ".withdraw-address-table .el-table th": {
          "background-color": "#9297a3",
          "color": "#151f34"
        },
        ".withdraw-address-table .el-table::before": {
          "height": "0"
        }
      },
      {
        ".des": {
          "font-size": "14px",
          "margin": "20px 0",
          "span": {
            "color": "#aaa"
          }
        },
        ".status": {
          "padding-right": "50px",
          "overflow": "hidden",
          "li": {
            "float": "left",
            "cursor": "pointer",
            "padding-right": "50px",
            "font-size": "14px"
          },
          ".active": {
            "color": "#2f54eb"
          }
        },
        ".numtip": {
          "padding-left": "5px"
        },
        ".topdes": {
          "margin": "20px 0",
          "color": "#666",
          "font-size": "14px",
          "span": {
            "padding-right": "50px"
          }
        },
        ".fund-general-wrap": {
          ".fund-content": {
            "width": "100%",
            "margin-top": "30px",
            ".fund-item": {
              "display": "none"
            },
            ".active": {
              "display": "block"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/withdrawal-address/Index.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 提币地址 -->\n<template>\n  <div class=\"withdraw-address-wrap\">\n    <div class=\"withdraw-address-title\">\n      <div>提币地址</div>\n      <div class=\"btn\" @click=\"dialogHand('add')\">新增地址</div>\n    </div>\n    <div class=\"withdraw-address-table\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n        <el-table-column prop=\"currency\" label=\"币种\" width=\"180\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"labelAddress\" label=\"地址标签\" width=\"180\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"linkType\" label=\"链类型\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"address\" label=\"地址\" align=\"center\"></el-table-column>\n        <!-- <el-table-column prop=\"address\" label=\"修改\" align=\"center\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <img\n              src=\"../../../assets/images/drawal_editor.png\"\n              width=\"20px\"\n              alt\n              @click=\"dialogHand('modify', scope.row)\"\n            />\n          </template>\n        </el-table-column>-->\n        <el-table-column prop=\"address\" label=\"删除\" align=\"center\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <img src=\"../../../assets/images/drawal_del.png\" width=\"20px\" alt @click=\"delHand(scope.$index, scope.row)\" />\n          </template>\n        </el-table-column>\n      </el-table>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"pagePararms.currentPage\"\n        :total=\"pagePararms.totalPage\"\n        :myPageSizes=\"pagePararms.pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n      <el-dialog title=\"新增地址\" :visible.sync=\"dialogVisible\" :close-on-click-modal=\"false\" :show-close=\"false\" width=\"500px\">\n        <div class>\n          <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n            <el-form-item label=\"币种\" prop=\"currency\">\n              <el-select v-model=\"ruleForm.currency\" placeholder=\"请选择币种\" style=\"width: 100%\" clearable @change=\"coinChangeHand\">\n                <el-option :label=\"item\" :value=\"item\" v-for=\"item in coin_type\" :key=\"item\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"链名称\" v-if=\"ruleForm.currency == coin_type[0]\">\n              <div class=\"check-btn-groups flex\">\n                <div\n                  class=\"btn-item\"\n                  :class=\"{ active: activeIndex == index }\"\n                  v-for=\"(item, index) in link_type\"\n                  :key=\"index\"\n                  @click=\"tabBtns(item, index)\"\n                >\n                  {{ item }}\n                </div>\n              </div>\n            </el-form-item>\n            <div v-if=\"ruleForm.currency == coin_type[1]\">\n              <el-form-item label=\"地址标签\" prop=\"labelAddress\">\n                <el-input v-model=\"ruleForm.labelAddress\"></el-input>\n              </el-form-item>\n            </div>\n            <el-form-item label=\"钱包地址\" prop=\"address\">\n              <el-input v-model=\"ruleForm.address\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input type=\"textarea\" v-model=\"ruleForm.remark\"></el-input>\n            </el-form-item>\n          </el-form>\n        </div>\n\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"resetForm('ruleForm')\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">确 定</el-button>\n        </span>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport * as api from './server';\nimport { coin_type, link_type } from '@/utils/const';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      link_type: link_type,\n      coin_type: coin_type,\n      layout: 'prev, pager, next',\n      pagePararms: {\n        totalPage: 0,\n        currentPage: 1,\n        pageNo: 1,\n        pageSize: 10\n      },\n      tableData: [],\n      dialogVisible: false,\n      ruleForm: {\n        currency: '',\n        linkType: 'OMNI',\n        labelAddress: '',\n        address: '',\n        remark: ''\n      },\n      rules: {\n        currency: [{ required: true, message: '请选择币种', trigger: 'change' }],\n        labelAddress: [{ required: true, message: '请输入地址标签', trigger: 'blur' }],\n        address: [{ required: true, message: '请输入钱包地址 ', trigger: 'blur' }],\n        remark: [{ required: true, message: '请输入备注', trigger: 'blur' }]\n      },\n      activeIndex: 0,\n      type: '',\n      saveBtn: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    coinChangeHand(val) {\n      switch (val) {\n      case coin_type[0]:\n        this.ruleForm.labelAddress = '';\n        break;\n      case coin_type[1]:\n        this.ruleForm.linkType = '';\n        this.activeIndex = 0;\n        break;\n      case coin_type[2]:\n        this.ruleForm.labelAddress = '';\n        this.ruleForm.linkType = '';\n        this.activeIndex = 0;\n        break;\n      }\n    },\n    async get_withdraw_address_list() {\n      let pararms = {\n        currency: '',\n        ...this.pagePararms\n      };\n      let res = await api.get_withdraw_address_list(pararms);\n      if (res.data && res.data != null) {\n        this.tableData = res.data.rows;\n        this.pagePararms.totalPage = res.data.totalPage;\n      }\n    },\n    delHand(index, row) {\n      this.$confirm('此操作是删除, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          this.saveDelHand(row.addressId);\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n    },\n    async saveDelHand(id) {\n      // 删除操作\n      let res = await api.delete_withdraw_address_book({\n        paymentAccountId: id\n      });\n\n      if (res.data) {\n        this.$message.success(res.msg);\n        this.get_withdraw_address_list();\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    tabBtns(item, index) {\n      this.activeIndex = index;\n      this.ruleForm.linkType = this.link_type[index];\n    },\n    dialogHand(type) {\n      this.dialogVisible = true;\n      this.type = type == 'add' ? 'add' : 'modify';\n    },\n    async saveAddressHand() {\n      // 新增地址---保存\n      let res = await api.add_withdraw_address_book(this.ruleForm);\n      this.saveBtn = false;\n      if (res.data) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (this.type === 'add') {\n            // 新增地址---保存\n            this.saveBtn = true;\n            this.saveAddressHand();\n          }\n          if (this.type === 'modify') {\n            // 修改地址\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm() {\n      this.dialogVisible = false;\n      this.$refs['ruleForm'].resetFields();\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.pagePararms.currentPage = 1;\n      this.pagePararms.pageNo = 1;\n      this.pagePararms.pageSize = val;\n      this.get_withdraw_address_list();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.pagePararms.pageNo = val;\n      this.pagePararms.currentPage = val;\n      this.get_withdraw_address_list();\n    },\n\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.get_withdraw_address_list();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 提币地址 -->\n<template>\n  <div class=\"withdraw-address-wrap\">\n    <div class=\"withdraw-address-title\">\n      <div>提币地址</div>\n      <div class=\"btn\" @click=\"dialogHand('add')\">新增地址</div>\n    </div>\n    <div class=\"withdraw-address-table\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n        <el-table-column prop=\"currency\" label=\"币种\" width=\"180\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"labelAddress\" label=\"地址标签\" width=\"180\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"linkType\" label=\"链类型\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"address\" label=\"地址\" align=\"center\"></el-table-column>\n        <!-- <el-table-column prop=\"address\" label=\"修改\" align=\"center\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <img\n              src=\"../../../assets/images/drawal_editor.png\"\n              width=\"20px\"\n              alt\n              @click=\"dialogHand('modify', scope.row)\"\n            />\n          </template>\n        </el-table-column>-->\n        <el-table-column prop=\"address\" label=\"删除\" align=\"center\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <img src=\"../../../assets/images/drawal_del.png\" width=\"20px\" alt @click=\"delHand(scope.$index, scope.row)\" />\n          </template>\n        </el-table-column>\n      </el-table>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"pagePararms.currentPage\"\n        :total=\"pagePararms.totalPage\"\n        :myPageSizes=\"pagePararms.pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n      <el-dialog title=\"新增地址\" :visible.sync=\"dialogVisible\" :close-on-click-modal=\"false\" :show-close=\"false\" width=\"500px\">\n        <div class>\n          <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n            <el-form-item label=\"币种\" prop=\"currency\">\n              <el-select v-model=\"ruleForm.currency\" placeholder=\"请选择币种\" style=\"width: 100%\" clearable @change=\"coinChangeHand\">\n                <el-option :label=\"item\" :value=\"item\" v-for=\"item in coin_type\" :key=\"item\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"链名称\" v-if=\"ruleForm.currency == coin_type[0]\">\n              <div class=\"check-btn-groups flex\">\n                <div\n                  class=\"btn-item\"\n                  :class=\"{ active: activeIndex == index }\"\n                  v-for=\"(item, index) in link_type\"\n                  :key=\"index\"\n                  @click=\"tabBtns(item, index)\"\n                >\n                  {{ item }}\n                </div>\n              </div>\n            </el-form-item>\n            <div v-if=\"ruleForm.currency == coin_type[1]\">\n              <el-form-item label=\"地址标签\" prop=\"labelAddress\">\n                <el-input v-model=\"ruleForm.labelAddress\"></el-input>\n              </el-form-item>\n            </div>\n            <el-form-item label=\"钱包地址\" prop=\"address\">\n              <el-input v-model=\"ruleForm.address\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input type=\"textarea\" v-model=\"ruleForm.remark\"></el-input>\n            </el-form-item>\n          </el-form>\n        </div>\n\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"resetForm('ruleForm')\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">确 定</el-button>\n        </span>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport * as api from './server';\nimport { coin_type, link_type } from '@/utils/const';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      link_type: link_type,\n      coin_type: coin_type,\n      layout: 'prev, pager, next',\n      pagePararms: {\n        totalPage: 0,\n        currentPage: 1,\n        pageNo: 1,\n        pageSize: 10\n      },\n      tableData: [],\n      dialogVisible: false,\n      ruleForm: {\n        currency: '',\n        linkType: 'OMNI',\n        labelAddress: '',\n        address: '',\n        remark: ''\n      },\n      rules: {\n        currency: [{ required: true, message: '请选择币种', trigger: 'change' }],\n        labelAddress: [{ required: true, message: '请输入地址标签', trigger: 'blur' }],\n        address: [{ required: true, message: '请输入钱包地址 ', trigger: 'blur' }],\n        remark: [{ required: true, message: '请输入备注', trigger: 'blur' }]\n      },\n      activeIndex: 0,\n      type: '',\n      saveBtn: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    coinChangeHand(val) {\n      switch (val) {\n      case coin_type[0]:\n        this.ruleForm.labelAddress = '';\n        break;\n      case coin_type[1]:\n        this.ruleForm.linkType = '';\n        this.activeIndex = 0;\n        break;\n      case coin_type[2]:\n        this.ruleForm.labelAddress = '';\n        this.ruleForm.linkType = '';\n        this.activeIndex = 0;\n        break;\n      }\n    },\n    async get_withdraw_address_list() {\n      let pararms = {\n        currency: '',\n        ...this.pagePararms\n      };\n      let res = await api.get_withdraw_address_list(pararms);\n      if (res.data && res.data != null) {\n        this.tableData = res.data.rows;\n        this.pagePararms.totalPage = res.data.totalPage;\n      }\n    },\n    delHand(index, row) {\n      this.$confirm('此操作是删除, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          this.saveDelHand(row.addressId);\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n    },\n    async saveDelHand(id) {\n      // 删除操作\n      let res = await api.delete_withdraw_address_book({\n        paymentAccountId: id\n      });\n\n      if (res.data) {\n        this.$message.success(res.msg);\n        this.get_withdraw_address_list();\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    tabBtns(item, index) {\n      this.activeIndex = index;\n      this.ruleForm.linkType = this.link_type[index];\n    },\n    dialogHand(type) {\n      this.dialogVisible = true;\n      this.type = type == 'add' ? 'add' : 'modify';\n    },\n    async saveAddressHand() {\n      // 新增地址---保存\n      let res = await api.add_withdraw_address_book(this.ruleForm);\n      this.saveBtn = false;\n      if (res.data) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (this.type === 'add') {\n            // 新增地址---保存\n            this.saveBtn = true;\n            this.saveAddressHand();\n          }\n          if (this.type === 'modify') {\n            // 修改地址\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm() {\n      this.dialogVisible = false;\n      this.$refs['ruleForm'].resetFields();\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.pagePararms.currentPage = 1;\n      this.pagePararms.pageNo = 1;\n      this.pagePararms.pageSize = val;\n      this.get_withdraw_address_list();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.pagePararms.pageNo = val;\n      this.pagePararms.currentPage = val;\n      this.get_withdraw_address_list();\n    },\n\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.get_withdraw_address_list();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.withdraw-address-wrap .withdraw-address-table .warning-row {\n  background: #f7f7fa;\n}\n\n.withdraw-address-wrap .withdraw-address-table .success-row {\n  background: #fff;\n}\n.withdraw-address-wrap .withdraw-address-table .el-table td,\n.withdraw-address-wrap .withdraw-address-table .el-table th.is-leaf {\n  border: none;\n}\n.withdraw-address-wrap .withdraw-address-table .el-table th {\n  background-color: #9297a3;\n  color: #151f34;\n}\n.withdraw-address-wrap .withdraw-address-table .el-table::before {\n  height: 0;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.withdraw-address-wrap {\n  .withdraw-address-title {\n    position: relative;\n    padding-bottom: 10px;\n    color: #151f34;\n    font-size: 14px;\n    border-bottom: 1px solid #f7f7fa;\n    .btn {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      color: #fff;\n      padding: 10px 35px;\n      line-height: 20px;\n      background: #2f54eb;\n      box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n      border-radius: 4px;\n      cursor: pointer;\n    }\n  }\n  .withdraw-address-table {\n    margin-top: 30px;\n  }\n  .check-btn-groups {\n    //   justify-content: sp;\n    div {\n      flex: 1;\n      text-align: center;\n      line-height: 20px;\n      padding: 10px 22px;\n      color: #999999;\n      border-radius: 8px;\n      margin-right: 20px;\n      user-select: none;\n      border: 1px solid rgba(153, 153, 153, 1);\n      max-width: 33.33%;\n      &:last-child {\n        margin-right: 0;\n      }\n      &.active {\n        color: #fff;\n        background-color: #2f54eb;\n        border-color: #2f54eb;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".withdraw-address-wrap .withdraw-address-table .warning-row": {
          "background": "#f7f7fa"
        },
        ".withdraw-address-wrap .withdraw-address-table .success-row": {
          "background": "#fff"
        },
        ".withdraw-address-wrap .withdraw-address-table .el-table td,.withdraw-address-wrap .withdraw-address-table .el-table th.is-leaf": {
          "border": "none"
        },
        ".withdraw-address-wrap .withdraw-address-table .el-table th": {
          "background-color": "#9297a3",
          "color": "#151f34"
        },
        ".withdraw-address-wrap .withdraw-address-table .el-table::before": {
          "height": "0"
        }
      },
      {
        ".withdraw-address-wrap": {
          ".withdraw-address-title": {
            "position": "relative",
            "padding-bottom": "10px",
            "color": "#151f34",
            "font-size": "14px",
            "border-bottom": "1px solid #f7f7fa",
            ".btn": {
              "position": "absolute",
              "bottom": "0",
              "right": "0",
              "color": "#fff",
              "padding": "10px 35px",
              "line-height": "20px",
              "background": "#2f54eb",
              "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
              "border-radius": "4px",
              "cursor": "pointer"
            }
          },
          ".withdraw-address-table": {
            "margin-top": "30px"
          },
          ".check-btn-groups": {
            "div": {
              "flex": "1",
              "text-align": "center",
              "line-height": "20px",
              "padding": "10px 22px",
              "color": "#999999",
              "border-radius": "8px",
              "margin-right": "20px",
              "user-select": "none",
              "border": "1px solid rgba(153, 153, 153, 1)",
              "max-width": "33.33%",
              "&:last-child": {
                "margin-right": "0"
              },
              "&.active": {
                "color": "#fff",
                "background-color": "#2f54eb",
                "border-color": "#2f54eb"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/contact/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 联系人 -->\n<template>\n  <div class=\"contact-wrap\">\n    <List />\n    <div class=\"contact-con-wrap flex-sub\">\n      <div class=\"contact-con-scroll\">\n        <ChatBg v-if=\"'/app/contact' == $route.path\" />\n        <router-view v-if=\"'/app/contact' != $route.path && isRouterAlive\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport List from './list';\nimport { LOGIN_OUT } from '@/store/types';\nimport { mapMutations } from 'vuex';\nimport bus from '@/utils/eventbus';\nexport default {\n  name: 'Contact',\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    List\n  },\n  data() {\n    //这里存放数据\n    return {\n      isMaxed: false,\n      isRouterAlive: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    reload() {\n      this.isRouterAlive =  false;\n      this.$nextTick(() => {\n        this.isRouterAlive = true;\n      });\n    },\n    ...mapMutations([LOGIN_OUT]),\n    _maximize(){\n      this.isMaxed = true;\n      console.log('maximize', this.isMaxed);\n    },\n    _unmaximize(){\n      this.isMaxed = false;\n      console.log('unmaximize', this.isMaxed);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    bus.$on('refresh', this.reload);\n    this.$remote.getCurrentWindow().addListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().addListener('unmaximize',this._unmaximize)\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    bus.$off('refresh', this.reload);\n    this.$remote.getCurrentWindow().removeListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().removeListener('unmaximize',this._unmaximize)\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 联系人 -->\n<template>\n  <div class=\"contact-wrap\">\n    <List />\n    <div class=\"contact-con-wrap flex-sub\">\n      <div class=\"contact-con-scroll\">\n        <ChatBg v-if=\"'/app/contact' == $route.path\" />\n        <router-view v-if=\"'/app/contact' != $route.path && isRouterAlive\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport List from './list';\nimport { LOGIN_OUT } from '@/store/types';\nimport { mapMutations } from 'vuex';\nimport bus from '@/utils/eventbus';\nexport default {\n  name: 'Contact',\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    List\n  },\n  data() {\n    //这里存放数据\n    return {\n      isMaxed: false,\n      isRouterAlive: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    reload() {\n      this.isRouterAlive =  false;\n      this.$nextTick(() => {\n        this.isRouterAlive = true;\n      });\n    },\n    ...mapMutations([LOGIN_OUT]),\n    _maximize(){\n      this.isMaxed = true;\n      console.log('maximize', this.isMaxed);\n    },\n    _unmaximize(){\n      this.isMaxed = false;\n      console.log('unmaximize', this.isMaxed);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    bus.$on('refresh', this.reload);\n    this.$remote.getCurrentWindow().addListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().addListener('unmaximize',this._unmaximize)\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    bus.$off('refresh', this.reload);\n    this.$remote.getCurrentWindow().removeListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().removeListener('unmaximize',this._unmaximize)\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.contact-wrap {\n  display: flex;\n  margin: 0;\n  height: 100vh;\n  overflow: hidden;\n  .contact-con-wrap {\n    background: #fcfbfb;\n    min-height: 90vh;\n    height: 100vh;\n    overflow: hidden;\n    // border-left: 1px solid rgba(221, 221, 221, 1);\n    border-left: 1px solid #e4e4e4;\n    box-sizing: border-box;\n    .contact-con-scroll {\n      height: 100%;\n      overflow-y: scroll;\n    }\n  }\n}\n.topwork {\n  height: 21px;\n  padding: 0;\n  -webkit-app-region: drag;\n  background: #fff;\n  .i1 {\n    &:hover {\n      background: #e7e7e7;\n    }\n  }\n  .i2 {\n    &:hover {\n      background: #fa5151;\n    }\n  }\n  img,\n  i {\n    cursor: pointer;\n    padding: 2px 5px 0;\n    display: inline-block;\n    -webkit-app-region: no-drag;\n  }\n}\n.chat {\n  display: flex;\n  border: #ddd solid 1px;\n  border-left: none;\n  .chatList {\n    width: 270px;\n    overflow-y: scroll;\n  }\n  .chatMessage {\n    padding-top: 23px;\n    background: #f6f6f6;\n    // min-height: 90vh;\n    border-left: 1px solid rgba(221, 221, 221, 1);\n    box-sizing: border-box;\n    height: 100vh;\n    overflow-y: hidden;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".contact-wrap": {
          "display": "flex",
          "margin": "0",
          "height": "100vh",
          "overflow": "hidden",
          ".contact-con-wrap": {
            "background": "#fcfbfb",
            "min-height": "90vh",
            "height": "100vh",
            "overflow": "hidden",
            "border-left": "1px solid #e4e4e4",
            "box-sizing": "border-box",
            ".contact-con-scroll": {
              "height": "100%",
              "overflow-y": "scroll"
            }
          }
        },
        ".topwork": {
          "height": "21px",
          "padding": "0",
          "-webkit-app-region": "drag",
          "background": "#fff",
          ".i1": {
            "&:hover": {
              "background": "#e7e7e7"
            }
          },
          ".i2": {
            "&:hover": {
              "background": "#fa5151"
            }
          },
          "img,  i": {
            "cursor": "pointer",
            "padding": "2px 5px 0",
            "display": "inline-block",
            "-webkit-app-region": "no-drag"
          }
        },
        ".chat": {
          "display": "flex",
          "border": "#ddd solid 1px",
          "border-left": "none",
          ".chatList": {
            "width": "270px",
            "overflow-y": "scroll"
          },
          ".chatMessage": {
            "padding-top": "23px",
            "background": "#f6f6f6",
            "border-left": "1px solid rgba(221, 221, 221, 1)",
            "box-sizing": "border-box",
            "height": "100vh",
            "overflow-y": "hidden"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/contact/relation/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n<VCFixedHeightScrollBar  class=\"scroll-color\" ref=\"scroll\" :noresize='true' :availableScrollHeight='availableScrollHeight'>\n  <div class=\"relation-wrap\">\n    <div class=\"new-friends flex align-center\"\n    @click=\"handleSysMsgRouter\" :class=\"$route.path == '/app/contact/addfriends' ? 'active' : ''\">\n      <img class=\"img_38\" src=\"../../../assets/images/system.png\" alt />\n      <div class=\"flex-sub text-cut flex justify-between\" >\n        <div style=\"min-height:20px\">{{ $t('Universal_0382') }}</div>\n        <el-badge v-if=\"totalNumber > 0\" :value=\"totalNumber\" class=\"item\"></el-badge>\n      </div>\n    </div>\n    <ul class=\"relation-friends-ul\"  \n        v-infinite-scroll=\"loadMore\"\n        :infinite-scroll-immediate='true'\n        :infinite-scroll-distance=\"70\">\n      <li\n        @click=\"handGoChat(item)\"\n        v-for=\"(item, index) in showFriendsList\"\n        :key=\"index\"\n        class=\"relation-friends-avatar flex align-center\"\n        :class=\"{ active: isSelect == item.friendId }\"\n        @contextmenu.prevent=\"rightClick($event, item)\"\n      >\n        <!-- <div class=\"relation-friends-avatar\">\n        <ul>-->\n        <!-- <li v-for=\"item in 3\" :key=\"item\" class=\"flex align-center\"> -->\n        <MemberIcon\n          :image=\"item.friendHeadImg\"\n          iconType=\"small\"\n          :userRank=\"item.userRank\"\n          style=\"margin-right: 12px\"\n          :vipType=\"item.vipType\"\n        />\n        <div>\n          <div class=\"nameClass\">\n            <span class=\"flex-sub text-cut pre-wrap\">\n              {{ item.friendNickName }}\n            </span>\n            <LevelIcon\n              :inviteCode=\"item.inviteCode\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n            />\n          </div>\n          <div style=\"margin-top:5px\">\n            <LuckIdIcon\n              :inviteCode=\"item.inviteCode\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :listFlag=\"false\"\n            />\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n </VCFixedHeightScrollBar>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { remote } from 'electron';\nimport { SET_CHAT, CLEAR_CHAT, ADD_LAST_MSG_LIST } from '@/store/types';\nimport { mapState, mapMutations } from 'vuex';\nimport { contFriSize } from '@/utils';\nimport fileOperational from '@/services/fileOperational';\nimport { getSelfUserId } from '@/utils/const';\nimport { delete_friend } from '@/server.js';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport VCFixedHeightScrollBar from \"@/components/ScrollBar/Index\"\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    VCFixedHeightScrollBar,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  props: {\n    availableScrollHeight:Number,\n    list: {\n      type: Array,\n      dafault() {\n        return [];\n      }\n    },\n    flagFriend: {\n      type: Number,\n      default() {\n        return 0;\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      showFriendsList:[],\n      flag: 0,\n      isSelect: this.$route.query?.isSelect?this.$route.query.isSelect:''\n    };\n  },\n  watch:{\n    'list.length': function () { \n      this.showFriendsList=[];//新增 联系人存在排序\n      this.loadMore();//deleteFriend 删除好友路由跳转了\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      totalNumber: state => {\n        return state.chat.totalSystemNumber;\n      }\n    })\n  },\n  methods: {\n    ...mapMutations([SET_CHAT, CLEAR_CHAT, ADD_LAST_MSG_LIST]),\n    loadMore() {\n      let len=this.showFriendsList.length;\n      this.showFriendsList = [...this.showFriendsList, ...this.list.slice(len, len+20)];\n    },\n    handleSysMsgRouter(){\n      this.isSelect = '';\n      this.$router.push({name:\"new-friends\"})\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    handGoChat(item) {\n      this.isSelect = item.friendId;\n\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: this.flagFriend,\n          id: item.friendId,\n          targetId: item.userId,\n          nickName: item.friendNickName,\n          headImg: item.friendHeadImg\n        }\n      });\n    },\n    rightClick(e, item) {\n      e.preventDefault();\n      this.addClick(item);\n    },\n    addClick(item) {\n      const menu = [\n        {\n          name: this.$t('Universal_0359'),\n          fun: () => {\n            this.goToChat(item);\n          }\n        },\n        {\n          name: this.$t('book_friend_0018'),\n          fun: () => {\n            this.deleteFriend(item);\n          }\n        }\n      ];\n      return this.$RightClick(menu).popup({\n        window: remote.getCurrentWindow()\n      });\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    goToChat(item) {\n      this.CLEAR_CHAT();\n      let current = {\n        id: item.friendId,\n        sessionName: item.friendNickName,\n        sessionIcon: item.friendHeadImg,\n        targetType: 1, //单聊\n        msgType: 1, //默认文本\n        uniqueCode: contFriSize(item.friendId, this.currentUserId()),\n        targetId: item.friendId\n      };\n      this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/single/message',\n        query: {\n          id: item.friendId,\n          fromId: item.friendId,\n          targetId: this.currentUserId(),\n          timer: new Date().getTime(),\n          uniqueCode: contFriSize(item.friendId, this.currentUserId()),\n          friendName: encodeURI(item.friendNickName)\n        }\n      });\n    },\n    deleteFriend(item) {\n      let message = this.$t('book_friend_0019', {friend: item.friendNickName});\n      this.$confirm(message, this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('Universal_0062'),\n        cancelButtonText: this.$t('Universal_0063'),\n        type: 'warning'\n      })\n        .then(() => {\n          this.deleteFriendConfirm(item);\n        })\n        .catch(() => {});\n    },\n    async deleteFriendConfirm(item) {\n      let res = await delete_friend({\n        userId: this.currentUserId(),\n        friendId: item.friendId\n      });\n      if (res.code == 200) {\n        this.$router.push({\n          path: '/app/chat'\n        });\n        this.$message({\n          type: 'success',\n          message: this.$t('Universal_0107')\n        });\n        await SQLUtils.updateFromTypeBy_210({ targetId: item.friendId,fromId:localStorage.userId });\n        this.$store.dispatch('GET_LAST_MSG_LIST');\n      }\n    }\n  },\n \n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    console.log(this.$route.path, '$route.path');\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "\n<!--  -->\n<template>\n<VCFixedHeightScrollBar  class=\"scroll-color\" ref=\"scroll\" :noresize='true' :availableScrollHeight='availableScrollHeight'>\n  <div class=\"relation-wrap\">\n    <div class=\"new-friends flex align-center\"\n    @click=\"handleSysMsgRouter\" :class=\"$route.path == '/app/contact/addfriends' ? 'active' : ''\">\n      <img class=\"img_38\" src=\"../../../assets/images/system.png\" alt />\n      <div class=\"flex-sub text-cut flex justify-between\" >\n        <div style=\"min-height:20px\">{{ $t('Universal_0382') }}</div>\n        <el-badge v-if=\"totalNumber > 0\" :value=\"totalNumber\" class=\"item\"></el-badge>\n      </div>\n    </div>\n    <ul class=\"relation-friends-ul\"  \n        v-infinite-scroll=\"loadMore\"\n        :infinite-scroll-immediate='true'\n        :infinite-scroll-distance=\"70\">\n      <li\n        @click=\"handGoChat(item)\"\n        v-for=\"(item, index) in showFriendsList\"\n        :key=\"index\"\n        class=\"relation-friends-avatar flex align-center\"\n        :class=\"{ active: isSelect == item.friendId }\"\n        @contextmenu.prevent=\"rightClick($event, item)\"\n      >\n        <!-- <div class=\"relation-friends-avatar\">\n        <ul>-->\n        <!-- <li v-for=\"item in 3\" :key=\"item\" class=\"flex align-center\"> -->\n        <MemberIcon\n          :image=\"item.friendHeadImg\"\n          iconType=\"small\"\n          :userRank=\"item.userRank\"\n          style=\"margin-right: 12px\"\n          :vipType=\"item.vipType\"\n        />\n        <div>\n          <div class=\"nameClass\">\n            <span class=\"flex-sub text-cut pre-wrap\">\n              {{ item.friendNickName }}\n            </span>\n            <LevelIcon\n              :inviteCode=\"item.inviteCode\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n            />\n          </div>\n          <div style=\"margin-top:5px\">\n            <LuckIdIcon\n              :inviteCode=\"item.inviteCode\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :listFlag=\"false\"\n            />\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n </VCFixedHeightScrollBar>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { remote } from 'electron';\nimport { SET_CHAT, CLEAR_CHAT, ADD_LAST_MSG_LIST } from '@/store/types';\nimport { mapState, mapMutations } from 'vuex';\nimport { contFriSize } from '@/utils';\nimport fileOperational from '@/services/fileOperational';\nimport { getSelfUserId } from '@/utils/const';\nimport { delete_friend } from '@/server.js';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport VCFixedHeightScrollBar from \"@/components/ScrollBar/Index\"\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    VCFixedHeightScrollBar,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  props: {\n    availableScrollHeight:Number,\n    list: {\n      type: Array,\n      dafault() {\n        return [];\n      }\n    },\n    flagFriend: {\n      type: Number,\n      default() {\n        return 0;\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      showFriendsList:[],\n      flag: 0,\n      isSelect: this.$route.query?.isSelect?this.$route.query.isSelect:''\n    };\n  },\n  watch:{\n    'list.length': function () { \n      this.showFriendsList=[];//新增 联系人存在排序\n      this.loadMore();//deleteFriend 删除好友路由跳转了\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      totalNumber: state => {\n        return state.chat.totalSystemNumber;\n      }\n    })\n  },\n  methods: {\n    ...mapMutations([SET_CHAT, CLEAR_CHAT, ADD_LAST_MSG_LIST]),\n    loadMore() {\n      let len=this.showFriendsList.length;\n      this.showFriendsList = [...this.showFriendsList, ...this.list.slice(len, len+20)];\n    },\n    handleSysMsgRouter(){\n      this.isSelect = '';\n      this.$router.push({name:\"new-friends\"})\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    handGoChat(item) {\n      this.isSelect = item.friendId;\n\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: this.flagFriend,\n          id: item.friendId,\n          targetId: item.userId,\n          nickName: item.friendNickName,\n          headImg: item.friendHeadImg\n        }\n      });\n    },\n    rightClick(e, item) {\n      e.preventDefault();\n      this.addClick(item);\n    },\n    addClick(item) {\n      const menu = [\n        {\n          name: this.$t('Universal_0359'),\n          fun: () => {\n            this.goToChat(item);\n          }\n        },\n        {\n          name: this.$t('book_friend_0018'),\n          fun: () => {\n            this.deleteFriend(item);\n          }\n        }\n      ];\n      return this.$RightClick(menu).popup({\n        window: remote.getCurrentWindow()\n      });\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    goToChat(item) {\n      this.CLEAR_CHAT();\n      let current = {\n        id: item.friendId,\n        sessionName: item.friendNickName,\n        sessionIcon: item.friendHeadImg,\n        targetType: 1, //单聊\n        msgType: 1, //默认文本\n        uniqueCode: contFriSize(item.friendId, this.currentUserId()),\n        targetId: item.friendId\n      };\n      this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/single/message',\n        query: {\n          id: item.friendId,\n          fromId: item.friendId,\n          targetId: this.currentUserId(),\n          timer: new Date().getTime(),\n          uniqueCode: contFriSize(item.friendId, this.currentUserId()),\n          friendName: encodeURI(item.friendNickName)\n        }\n      });\n    },\n    deleteFriend(item) {\n      let message = this.$t('book_friend_0019', {friend: item.friendNickName});\n      this.$confirm(message, this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('Universal_0062'),\n        cancelButtonText: this.$t('Universal_0063'),\n        type: 'warning'\n      })\n        .then(() => {\n          this.deleteFriendConfirm(item);\n        })\n        .catch(() => {});\n    },\n    async deleteFriendConfirm(item) {\n      let res = await delete_friend({\n        userId: this.currentUserId(),\n        friendId: item.friendId\n      });\n      if (res.code == 200) {\n        this.$router.push({\n          path: '/app/chat'\n        });\n        this.$message({\n          type: 'success',\n          message: this.$t('Universal_0107')\n        });\n        await SQLUtils.updateFromTypeBy_210({ targetId: item.friendId,fromId:localStorage.userId });\n        this.$store.dispatch('GET_LAST_MSG_LIST');\n      }\n    }\n  },\n \n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    console.log(this.$route.path, '$route.path');\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n// .bgActive {\n//   background: #f6f6f6 !important;\n// }\n.nameClass {\n  display: flex;\n  align-items: center;\n  span {\n    max-width: 97px;\n    padding-right: 3px;\n  }\n}\n.relation-wrap {\n  .new-friends {\n    cursor: pointer;\n    // height: 60px;\n    height: 66px;\n    background-color: #fff;\n    padding: 0 10px;\n    border-bottom: 1px solid #e4e4e4;\n\n    .img_38{\n      width: 38px;height: 38px;\n      margin-right: 10px;\n    }\n  }\n  .relation-friends-ul {\n    padding-bottom: 100px;\n    min-height: 100px;//触发 滚动加载\n    .relation-friends-avatar {\n      // padding-top: 20px;\n    }\n    li {\n      // height: 60px;\n      height: 66px;\n      padding: 0 10px;\n      border-bottom: 1px solid #e4e4e4;\n      background-color: #fff;\n      // &:last-child {\n      //   border-bottom: none;\n      // }\n      cursor: pointer;\n    }\n  }\n}\n.active {\n  background-color: #e4e4e4 !important;\n}\n</style>\n",
    "cssJson": [
      {
        ".nameClass": {
          "display": "flex",
          "align-items": "center",
          "span": {
            "max-width": "97px",
            "padding-right": "3px"
          }
        },
        ".relation-wrap": {
          ".new-friends": {
            "cursor": "pointer",
            "height": "66px",
            "background-color": "#fff",
            "padding": "0 10px",
            "border-bottom": "1px solid #e4e4e4",
            ".img_38": {
              "width": "38px",
              "height": "38px",
              "margin-right": "10px"
            }
          },
          ".relation-friends-ul": {
            "padding-bottom": "100px",
            "min-height": "100px",
            ".relation-friends-avatar": {},
            "li": {
              "height": "66px",
              "padding": "0 10px",
              "border-bottom": "1px solid #e4e4e4",
              "background-color": "#fff",
              "cursor": "pointer"
            }
          }
        },
        ".active": {
          "background-color": "#e4e4e4 !important"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/contact/group/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n<el-scrollbar class=\"scroll-color\" ref=\"scroll\">\n  <div class=\"contract-group-wrap\">\n    <ul class=\"contract-group-ul\">\n      <li v-if=\"list.ownerList && list.ownerList.length > 0\">\n        <div class=\"contract-group-title\">\n          {{ $t('book_community_0001', {value: list.ownerList.length}) }}\n        </div>\n        <ul class=\"contract-group-item\">\n          <li\n            v-for=\"(item, index) in list.ownerList\"\n            :key=\"index\"\n            class=\"flex align-center\"\n            :class=\"{ active: isSelect == item.groupId }\"\n            @click=\"handGoChat({ ...item, status: 1 })\"\n            @contextmenu.prevent=\"rightClick({ ...item, status: 1 })\"\n          >\n            <img\n              width=\"40px\"\n              height=\"40px\"\n              style=\"margin-right: 10px; border-radius: 50%\"\n              :src=\"findImage(item.groupAvatar) | hand_group_avatar\"\n              alt\n            />\n            <span class=\"flex-sub text-cut group-name-list\">{{ item.groupName }}</span>\n            ({{ item.people }})\n            <!-- <span class=\"flex-sub text-cut\">{{item.id }}</span> -->\n          </li>\n        </ul>\n      </li>\n      <li v-if=\"list.manageList && list.manageList.length > 0\">\n        <div class=\"contract-group-title\">{{ $t('book_community_0002', {value: list.manageList.length}) }}</div>\n        <ul class=\"contract-group-item\">\n          <li\n            v-for=\"(item, index) in list.manageList\"\n            :key=\"index\"\n            class=\"flex align-center\"\n            :class=\"{ active: isSelect == item.groupId }\"\n            @click=\"handGoChat({ ...item, status: 2 })\"\n            @contextmenu.prevent=\"rightClick({ ...item, status: 2 })\"\n          >\n            <img\n              width=\"40px\"\n              height=\"40px\"\n              style=\"margin-right: 10px; border-radius: 50%\"\n              :src=\"findImage(item.groupAvatar) | hand_group_avatar\"\n              alt\n            />\n            <span class=\"flex-sub text-cut group-name-list\">{{ item.groupName }}</span>\n            ({{ item.people }})\n          </li>\n        </ul>\n      </li>\n      <li v-if=\"list.joinList && list.joinList.length > 0\">\n        <div class=\"contract-group-title\">{{ $t('book_community_0003', {value: list.joinList.length}) }}</div>\n        <ul class=\"contract-group-item\">\n          <li\n            v-for=\"(item, index) in list.joinList\"\n            :key=\"index\"\n            class=\"flex align-center\"\n            :class=\"{ active: isSelect == item.groupId }\"\n            @click=\"handGoChat({ ...item, status: 3 })\"\n            @contextmenu.prevent=\"rightClick({ ...item, status: 3 })\"\n          >\n            <img\n              width=\"40px\"\n              height=\"40px\"\n              style=\"margin-right: 10px; border-radius: 50%\"\n              :src=\"findImage(item.groupAvatar) | hand_group_avatar\"\n              alt\n              @error=\"replaceImg\"\n            />\n            <span class=\"flex-sub text-cut group-name-list\">{{ item.groupName }}</span>\n            ({{ item.people }})\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</el-scrollbar>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapMutations } from 'vuex';\nimport { CLEAR_CHAT } from '@/store/types';\nimport fileOperational from '@/services/fileOperational';\nimport UserInfoUtils from '@/utils/UserInfoUtils';\nimport contextmenuMixin from \"../mixin/contextmenuMixin\"\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  mixins:[contextmenuMixin],\n  props: {\n    availableScrollHeight:Number,\n    list: {\n      type: Object,\n      dafault() {\n        return {};\n      }\n    },\n    flagGroup: {\n      type: Number,\n      default() {\n        return 1;\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      flag: 1,\n      isSelect: this.$route.query.isSelect?\"this.$route.query.isSelect\":'',\n      groupType:'1',\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    handGoChat(item) {\n      this.isSelect = item.groupId;\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: this.flagGroup,\n          id: item.groupId,\n          targetId: item.groupId,\n          nickName: item.groupName,\n          headImg: item.groupAvatar,\n          num: item.people,\n          authStatus: item.status\n        }\n      });\n    },\n    // 处理图片404问题\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'group');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n<el-scrollbar class=\"scroll-color\" ref=\"scroll\">\n  <div class=\"contract-group-wrap\">\n    <ul class=\"contract-group-ul\">\n      <li v-if=\"list.ownerList && list.ownerList.length > 0\">\n        <div class=\"contract-group-title\">\n          {{ $t('book_community_0001', {value: list.ownerList.length}) }}\n        </div>\n        <ul class=\"contract-group-item\">\n          <li\n            v-for=\"(item, index) in list.ownerList\"\n            :key=\"index\"\n            class=\"flex align-center\"\n            :class=\"{ active: isSelect == item.groupId }\"\n            @click=\"handGoChat({ ...item, status: 1 })\"\n            @contextmenu.prevent=\"rightClick({ ...item, status: 1 })\"\n          >\n            <img\n              width=\"40px\"\n              height=\"40px\"\n              style=\"margin-right: 10px; border-radius: 50%\"\n              :src=\"findImage(item.groupAvatar) | hand_group_avatar\"\n              alt\n            />\n            <span class=\"flex-sub text-cut group-name-list\">{{ item.groupName }}</span>\n            ({{ item.people }})\n            <!-- <span class=\"flex-sub text-cut\">{{item.id }}</span> -->\n          </li>\n        </ul>\n      </li>\n      <li v-if=\"list.manageList && list.manageList.length > 0\">\n        <div class=\"contract-group-title\">{{ $t('book_community_0002', {value: list.manageList.length}) }}</div>\n        <ul class=\"contract-group-item\">\n          <li\n            v-for=\"(item, index) in list.manageList\"\n            :key=\"index\"\n            class=\"flex align-center\"\n            :class=\"{ active: isSelect == item.groupId }\"\n            @click=\"handGoChat({ ...item, status: 2 })\"\n            @contextmenu.prevent=\"rightClick({ ...item, status: 2 })\"\n          >\n            <img\n              width=\"40px\"\n              height=\"40px\"\n              style=\"margin-right: 10px; border-radius: 50%\"\n              :src=\"findImage(item.groupAvatar) | hand_group_avatar\"\n              alt\n            />\n            <span class=\"flex-sub text-cut group-name-list\">{{ item.groupName }}</span>\n            ({{ item.people }})\n          </li>\n        </ul>\n      </li>\n      <li v-if=\"list.joinList && list.joinList.length > 0\">\n        <div class=\"contract-group-title\">{{ $t('book_community_0003', {value: list.joinList.length}) }}</div>\n        <ul class=\"contract-group-item\">\n          <li\n            v-for=\"(item, index) in list.joinList\"\n            :key=\"index\"\n            class=\"flex align-center\"\n            :class=\"{ active: isSelect == item.groupId }\"\n            @click=\"handGoChat({ ...item, status: 3 })\"\n            @contextmenu.prevent=\"rightClick({ ...item, status: 3 })\"\n          >\n            <img\n              width=\"40px\"\n              height=\"40px\"\n              style=\"margin-right: 10px; border-radius: 50%\"\n              :src=\"findImage(item.groupAvatar) | hand_group_avatar\"\n              alt\n              @error=\"replaceImg\"\n            />\n            <span class=\"flex-sub text-cut group-name-list\">{{ item.groupName }}</span>\n            ({{ item.people }})\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</el-scrollbar>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapMutations } from 'vuex';\nimport { CLEAR_CHAT } from '@/store/types';\nimport fileOperational from '@/services/fileOperational';\nimport UserInfoUtils from '@/utils/UserInfoUtils';\nimport contextmenuMixin from \"../mixin/contextmenuMixin\"\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  mixins:[contextmenuMixin],\n  props: {\n    availableScrollHeight:Number,\n    list: {\n      type: Object,\n      dafault() {\n        return {};\n      }\n    },\n    flagGroup: {\n      type: Number,\n      default() {\n        return 1;\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      flag: 1,\n      isSelect: this.$route.query.isSelect?\"this.$route.query.isSelect\":'',\n      groupType:'1',\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    handGoChat(item) {\n      this.isSelect = item.groupId;\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: this.flagGroup,\n          id: item.groupId,\n          targetId: item.groupId,\n          nickName: item.groupName,\n          headImg: item.groupAvatar,\n          num: item.people,\n          authStatus: item.status\n        }\n      });\n    },\n    // 处理图片404问题\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'group');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.contract-group-wrap {\n  padding-bottom: 100px;\n  .contract-group-title {\n    padding: 15px 10px 0;\n    font-size: 14px;\n    color: #999;\n  }\n  .contract-group-item {\n    li {\n      height: 66px;\n      // height: 60px;\n      padding: 0 10px;\n      border-bottom: 1px solid #e4e4e4;\n      background-color: #fff;\n      // &:last-child {\n      //   border-bottom: none;\n      // }\n    }\n  }\n}\n.active {\n  background-color: #e4e4e4 !important;\n}\n.group-name-list {\n  max-width: 70%;\n  font-size: 14px;\n  overflow: hidden;\n  display: inline-block;\n  text-overflow: ellipsis;\n  white-space: pre;\n}\n</style>\n",
    "cssJson": [
      {
        ".contract-group-wrap": {
          "padding-bottom": "100px",
          ".contract-group-title": {
            "padding": "15px 10px 0",
            "font-size": "14px",
            "color": "#999"
          },
          ".contract-group-item": {
            "li": {
              "height": "66px",
              "padding": "0 10px",
              "border-bottom": "1px solid #e4e4e4",
              "background-color": "#fff"
            }
          }
        },
        ".active": {
          "background-color": "#e4e4e4 !important"
        },
        ".group-name-list": {
          "max-width": "70%",
          "font-size": "14px",
          "overflow": "hidden",
          "display": "inline-block",
          "text-overflow": "ellipsis",
          "white-space": "pre"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/other.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--资金 模块 -->\n<template>\n  <div class=\"VIEW-wrap\">\n    <div class=\"tophead\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"11\" :offset=\"5\" align=\"right\">\n          <div class=\"sumlist-L\">\n            <el-button type=\"primary\" v-if=\"focusObj.interrelation\" @click=\"focus(0)\">取消关注</el-button>\n            <el-button type=\"primary\" v-else @click=\"focus(1)\">关注</el-button>\n          </div>\n        </el-col>\n        <el-col :span=\"8\">\n          <ul class=\"sumlist-R\">\n            <li>\n              <span>{{ focusObj.attention }}</span>\n              <p>关注</p>\n            </li>\n            <li>\n              <span>{{ focusObj.beAttention }}</span>\n              <p>粉丝</p>\n            </li>\n            <li>\n              <span>{{ total }}</span>\n              <p>看点</p>\n            </li>\n          </ul>\n        </el-col>\n      </el-row>\n    </div>\n\n    <div v-for=\"(item, index) in dataList\" :key=\"item.id\" :data-index=\"index\" class=\"myspin\">\n      <span v-for=\"pic in item.picObjs\" :key=\"pic.picId\">\n        <img :src=\"pic.url\" />\n      </span>\n    </div>\n    <div class=\"list\">\n      <div>\n        <div class=\"spot\" v-if=\"total > 0\">\n          <el-row class=\"box-card spot-card\" v-for=\"(item, index) in dataList\" :data-index=\"index\" :key=\"item.id\">\n            <el-col class=\"card-avatar\" style=\"text-align: right; padding-right: 15px; width: 70px\">\n              <el-avatar class=\"avatar\" :size=\"60\" :src=\"item.userImg\"></el-avatar>\n            </el-col>\n            <el-col :span=\"18\" class=\"card-info\">\n              <div class=\"info-name\">{{ item.userNickName }}</div>\n              <div class=\"spot-time\">{{ item.createdOn }}</div>\n              <div class=\"spot-content\">{{ item.content }}</div>\n            </el-col>\n            <el-col :span=\"4\" class=\"card-btn spot-btn\" style=\"text-align: right\">\n              <div class=\"blue\" @click=\"godetail(item.id)\">查看全文 ></div>\n            </el-col>\n            <el-row> </el-row>\n            <ul class=\"imgbox cf\" v-if=\"item.picObjs != null\">\n              <li v-for=\"(pic, index2) in item.picObjs.slice(0, 5)\" :key=\"pic.picId\" @click=\"preview(item, index2)\">\n                <img :src=\"pic.url\" />\n                <!-- <img :src=\"pic.url\" @click=\"onPreview(index,index2)\"/> -->\n              </li>\n            </ul>\n            <!-- <el-image-viewer\n            v-if=\"showViewer\"\n            :on-close=\"closeViewer\"\n            :url-list=\"[bigUrl]\" /> -->\n            <div class=\"work\">\n              <div>{{ item.invitationLabelNames }}</div>\n              <div class=\"right\">\n                <i><img src=\"../../assets/images/view_share.png\"/></i><span>分享 {{ item.sharedTimes }}</span>\n                <i><img src=\"../../assets/images/view_conment.png\"/></i><span>评论 {{ item.commentTimes }} </span>\n                <i><img src=\"../../assets/images/view_proud.png\"/></i><span>赞 {{ item.numberOfPoints }}</span>\n                <span class=\"authority\">\n                  <label v-if=\"item.limitsOfAuthority == '6009-001'\">公开</label>\n                  <label v-if=\"item.limitsOfAuthority == '6009-002'\">订阅</label>\n                  <label v-if=\"item.limitsOfAuthority == '6009-003'\">私密</label>\n                </span>\n              </div>\n            </div>\n          </el-row>\n          <Pagation\n            :layout=\"layout\"\n            :currentPage=\"currentPage\"\n            :total=\"total\"\n            :myPageSizes=\"pageSize\"\n            @handleSizeChange=\"handleSizeChange\"\n            @handleCurrentChange=\"handleCurrentChange\"\n          />\n        </div>\n        <div v-else class=\"nodata\">暂无数据</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport { getInvitationListPage, focusCount, focusUser } from './server';\n// import { state} from \"@/store/modules/common.js\";\n// import ElImageViewer from 'element-ui/packages/image/src/image-viewer'\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    // ElImageViewer,\n    // HeadTop\n  },\n  data() {\n    //这里存放数据\n    return {\n      focusObj: {\n        interration: false,\n        beAttention: '0',\n        attention: '0',\n        invitationCount: '0'\n      },\n      focusFlag: true,\n      showViewer: false, // 显示查看器\n      bigUrl: '',\n      layout: 'prev, pager, next',\n      onshow: false,\n      tabList: 'has',\n      tabData: ['已发布', '未发布'],\n      activeItem: 'first',\n      //   分页\n      pageNo: 1,\n      currentPage: 1,\n      pageSize: 5,\n      total: 0,\n      dataList: [],\n      srcList: ['https://fuss10.elemecdn.com/8/27/f01c15bb73e1ef3793e64e6b7bbccjpeg.jpeg']\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    focus(a) {\n      focusUser({\n        focusStatus: a, //1是关注  0是 取消关注\n        focusUserId: this.$route.query.userId\n      }).then(res => {\n        if (res.code == '200') {\n          this.$message.success(res.msg);\n          this.focusCount();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    focusCount() {\n      //关注数和粉丝数\n      focusCount({\n        sysUserId: this.$route.query.userId\n      }).then(res => {\n        if (res.code == '200') {\n          if (res.data != null) {\n            this.focusObj = res.data;\n          }\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n\n    // myInvitationCount(){ //获取看法数\n    //         myInvitationCount({\n    //             userId:this.$route.query.userId\n    //         }).then(res=>{\n    //             if(res.code == '200'){\n    //                     this.total = res.data\n    //             }\n    //         })\n    // },\n    preview(item, index) {\n      let arry = [];\n      for (let i in item.picObjs) {\n        arry.push(item.picObjs[i].url);\n      }\n\n      this.$imagePreview({\n        images: arry,\n        index: index\n      });\n    },\n\n    godetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n\n    onPreview(i, j) {\n      this.bigUrl = this.dataList[i].picObjs[j].url;\n      this.showViewer = true;\n    },\n    // 关闭查看器\n    closeViewer() {\n      this.showViewer = false;\n    },\n\n    getInvitationListPage() {\n      //已发布列表\n      getInvitationListPage({\n        pageNumber: this.pageNo,\n        pageSize: this.pageSize,\n        userInfoId: this.$route.query.userId\n      }).then(res => {\n        if (res.code == '200') {\n          this.dataList = res.data.rows;\n          this.total = res.data.totalRow;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleSizeChange(val) {\n      this.currentPage = 1;\n      this.pageNo = 1;\n      this.pageSize = val;\n      this.getInvitationListPage();\n    },\n    handleCurrentChange(val) {\n      this.pageNo = val;\n      this.currentPage = val;\n      this.getInvitationListPage();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getInvitationListPage();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.focusCount();\n    //   this.myInvitationCount()\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--资金 模块 -->\n<template>\n  <div class=\"VIEW-wrap\">\n    <div class=\"tophead\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"11\" :offset=\"5\" align=\"right\">\n          <div class=\"sumlist-L\">\n            <el-button type=\"primary\" v-if=\"focusObj.interrelation\" @click=\"focus(0)\">取消关注</el-button>\n            <el-button type=\"primary\" v-else @click=\"focus(1)\">关注</el-button>\n          </div>\n        </el-col>\n        <el-col :span=\"8\">\n          <ul class=\"sumlist-R\">\n            <li>\n              <span>{{ focusObj.attention }}</span>\n              <p>关注</p>\n            </li>\n            <li>\n              <span>{{ focusObj.beAttention }}</span>\n              <p>粉丝</p>\n            </li>\n            <li>\n              <span>{{ total }}</span>\n              <p>看点</p>\n            </li>\n          </ul>\n        </el-col>\n      </el-row>\n    </div>\n\n    <div v-for=\"(item, index) in dataList\" :key=\"item.id\" :data-index=\"index\" class=\"myspin\">\n      <span v-for=\"pic in item.picObjs\" :key=\"pic.picId\">\n        <img :src=\"pic.url\" />\n      </span>\n    </div>\n    <div class=\"list\">\n      <div>\n        <div class=\"spot\" v-if=\"total > 0\">\n          <el-row class=\"box-card spot-card\" v-for=\"(item, index) in dataList\" :data-index=\"index\" :key=\"item.id\">\n            <el-col class=\"card-avatar\" style=\"text-align: right; padding-right: 15px; width: 70px\">\n              <el-avatar class=\"avatar\" :size=\"60\" :src=\"item.userImg\"></el-avatar>\n            </el-col>\n            <el-col :span=\"18\" class=\"card-info\">\n              <div class=\"info-name\">{{ item.userNickName }}</div>\n              <div class=\"spot-time\">{{ item.createdOn }}</div>\n              <div class=\"spot-content\">{{ item.content }}</div>\n            </el-col>\n            <el-col :span=\"4\" class=\"card-btn spot-btn\" style=\"text-align: right\">\n              <div class=\"blue\" @click=\"godetail(item.id)\">查看全文 ></div>\n            </el-col>\n            <el-row> </el-row>\n            <ul class=\"imgbox cf\" v-if=\"item.picObjs != null\">\n              <li v-for=\"(pic, index2) in item.picObjs.slice(0, 5)\" :key=\"pic.picId\" @click=\"preview(item, index2)\">\n                <img :src=\"pic.url\" />\n                <!-- <img :src=\"pic.url\" @click=\"onPreview(index,index2)\"/> -->\n              </li>\n            </ul>\n            <!-- <el-image-viewer\n            v-if=\"showViewer\"\n            :on-close=\"closeViewer\"\n            :url-list=\"[bigUrl]\" /> -->\n            <div class=\"work\">\n              <div>{{ item.invitationLabelNames }}</div>\n              <div class=\"right\">\n                <i><img src=\"../../assets/images/view_share.png\"/></i><span>分享 {{ item.sharedTimes }}</span>\n                <i><img src=\"../../assets/images/view_conment.png\"/></i><span>评论 {{ item.commentTimes }} </span>\n                <i><img src=\"../../assets/images/view_proud.png\"/></i><span>赞 {{ item.numberOfPoints }}</span>\n                <span class=\"authority\">\n                  <label v-if=\"item.limitsOfAuthority == '6009-001'\">公开</label>\n                  <label v-if=\"item.limitsOfAuthority == '6009-002'\">订阅</label>\n                  <label v-if=\"item.limitsOfAuthority == '6009-003'\">私密</label>\n                </span>\n              </div>\n            </div>\n          </el-row>\n          <Pagation\n            :layout=\"layout\"\n            :currentPage=\"currentPage\"\n            :total=\"total\"\n            :myPageSizes=\"pageSize\"\n            @handleSizeChange=\"handleSizeChange\"\n            @handleCurrentChange=\"handleCurrentChange\"\n          />\n        </div>\n        <div v-else class=\"nodata\">暂无数据</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport { getInvitationListPage, focusCount, focusUser } from './server';\n// import { state} from \"@/store/modules/common.js\";\n// import ElImageViewer from 'element-ui/packages/image/src/image-viewer'\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    // ElImageViewer,\n    // HeadTop\n  },\n  data() {\n    //这里存放数据\n    return {\n      focusObj: {\n        interration: false,\n        beAttention: '0',\n        attention: '0',\n        invitationCount: '0'\n      },\n      focusFlag: true,\n      showViewer: false, // 显示查看器\n      bigUrl: '',\n      layout: 'prev, pager, next',\n      onshow: false,\n      tabList: 'has',\n      tabData: ['已发布', '未发布'],\n      activeItem: 'first',\n      //   分页\n      pageNo: 1,\n      currentPage: 1,\n      pageSize: 5,\n      total: 0,\n      dataList: [],\n      srcList: ['https://fuss10.elemecdn.com/8/27/f01c15bb73e1ef3793e64e6b7bbccjpeg.jpeg']\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    focus(a) {\n      focusUser({\n        focusStatus: a, //1是关注  0是 取消关注\n        focusUserId: this.$route.query.userId\n      }).then(res => {\n        if (res.code == '200') {\n          this.$message.success(res.msg);\n          this.focusCount();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    focusCount() {\n      //关注数和粉丝数\n      focusCount({\n        sysUserId: this.$route.query.userId\n      }).then(res => {\n        if (res.code == '200') {\n          if (res.data != null) {\n            this.focusObj = res.data;\n          }\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n\n    // myInvitationCount(){ //获取看法数\n    //         myInvitationCount({\n    //             userId:this.$route.query.userId\n    //         }).then(res=>{\n    //             if(res.code == '200'){\n    //                     this.total = res.data\n    //             }\n    //         })\n    // },\n    preview(item, index) {\n      let arry = [];\n      for (let i in item.picObjs) {\n        arry.push(item.picObjs[i].url);\n      }\n\n      this.$imagePreview({\n        images: arry,\n        index: index\n      });\n    },\n\n    godetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n\n    onPreview(i, j) {\n      this.bigUrl = this.dataList[i].picObjs[j].url;\n      this.showViewer = true;\n    },\n    // 关闭查看器\n    closeViewer() {\n      this.showViewer = false;\n    },\n\n    getInvitationListPage() {\n      //已发布列表\n      getInvitationListPage({\n        pageNumber: this.pageNo,\n        pageSize: this.pageSize,\n        userInfoId: this.$route.query.userId\n      }).then(res => {\n        if (res.code == '200') {\n          this.dataList = res.data.rows;\n          this.total = res.data.totalRow;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleSizeChange(val) {\n      this.currentPage = 1;\n      this.pageNo = 1;\n      this.pageSize = val;\n      this.getInvitationListPage();\n    },\n    handleCurrentChange(val) {\n      this.pageNo = val;\n      this.currentPage = val;\n      this.getInvitationListPage();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getInvitationListPage();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.focusCount();\n    //   this.myInvitationCount()\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.tophead {\n  background: #fff;\n  font-size: 14px;\n  margin-bottom: 20px;\n\n  .el-badge {\n    margin-left: 35px;\n    cursor: pointer;\n  }\n}\n\n.sumlist-L {\n  margin-top: 25px;\n\n  span {\n    cursor: pointer;\n\n    label {\n      font-size: 12px;\n      color: #666;\n    }\n  }\n\n  button {\n    background: #f57d00;\n    border: #f57d00;\n    padding: 12px 30px;\n    margin-left: 35px;\n  }\n}\n\n.sumlist-R {\n  background: #f7f7fa;\n  padding: 25px 15px;\n  border-radius: 6px;\n  overflow: hidden;\n  display: flex;\n\n  li {\n    flex: 1;\n    border-right: #2d53eb solid 1px;\n    padding: 0 25px;\n    text-align: center;\n\n    p {\n      margin-top: 5px;\n    }\n\n    &:last-child {\n      border: 0;\n    }\n  }\n}\n\n.nodata {\n  margin: 30px 0;\n  text-align: center;\n  color: #666;\n  font-size: 14px;\n}\n\n.imgbox {\n  margin: 20px;\n\n  li {\n    float: left;\n    padding: 0 20px;\n\n    img {\n      width: 170px;\n      height: 110px;\n      cursor: pointer;\n    }\n  }\n}\n\n.el-icon-delete {\n  padding-left: 10px;\n  cursor: pointer;\n}\n\n.work {\n  margin-top: 5px;\n  display: flex;\n  font-size: 13px;\n  color: #999;\n\n  div {\n    flex: 1;\n\n    &.right {\n      text-align: right;\n      color: #444;\n\n      .authority {\n        padding-left: 30px;\n        color: #999;\n      }\n    }\n  }\n\n  span {\n    padding-right: 10px;\n  }\n\n  span,\n  img {\n    vertical-align: middle;\n\n    padding-left: 5px;\n  }\n}\n\n.blue {\n  color: #5882f4;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.box-card {\n  width: 100%;\n  background: #fff;\n  border-bottom: #e7e7e7 solid 1px;\n  padding: 0 10px 10px;\n  margin: 20px 0;\n\n  .card-avatar {\n    height: 100%;\n\n    .avatar {\n      margin: 14px 0;\n    }\n  }\n\n  .card-info {\n    height: 100%;\n    text-align: left;\n    padding: 20px 0;\n\n    .info-name {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: #151f34;\n      line-height: 24px;\n    }\n\n    .info-num,\n    .spot-time {\n      font-size: 12px;\n\n      font-weight: 400;\n      color: #9297a3;\n      line-height: 22px;\n    }\n\n    .spot-time {\n      line-height: 26px;\n    }\n\n    .group-name {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: #151f34;\n      line-height: 20px;\n    }\n\n    .group-num,\n    .group-member {\n      font-size: 12px;\n\n      font-weight: 400;\n      color: #9297a3;\n      line-height: 18px;\n    }\n\n    .spot-content {\n      margin-top: 10px;\n      color: #151f34;\n      font-size: 14px;\n      line-height: 24px;\n      overflow: hidden;\n      word-break: break-all;\n      text-overflow: ellipsis;\n      display: -webkit-box;\n      -webkit-line-clamp: 3;\n      -webkit-box-orient: vertical;\n    }\n  }\n\n  .card-btn {\n    height: 100%;\n    line-height: 88px;\n  }\n}\n\n.myspin {\n  display: none;\n\n  img {\n    width: 50px;\n    height: 50px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".tophead": {
          "background": "#fff",
          "font-size": "14px",
          "margin-bottom": "20px",
          ".el-badge": {
            "margin-left": "35px",
            "cursor": "pointer"
          }
        },
        ".sumlist-L": {
          "margin-top": "25px",
          "span": {
            "cursor": "pointer",
            "label": {
              "font-size": "12px",
              "color": "#666"
            }
          },
          "button": {
            "background": "#f57d00",
            "border": "#f57d00",
            "padding": "12px 30px",
            "margin-left": "35px"
          }
        },
        ".sumlist-R": {
          "background": "#f7f7fa",
          "padding": "25px 15px",
          "border-radius": "6px",
          "overflow": "hidden",
          "display": "flex",
          "li": {
            "flex": "1",
            "border-right": "#2d53eb solid 1px",
            "padding": "0 25px",
            "text-align": "center",
            "p": {
              "margin-top": "5px"
            },
            "&:last-child": {
              "border": "0"
            }
          }
        },
        ".nodata": {
          "margin": "30px 0",
          "text-align": "center",
          "color": "#666",
          "font-size": "14px"
        },
        ".imgbox": {
          "margin": "20px",
          "li": {
            "float": "left",
            "padding": "0 20px",
            "img": {
              "width": "170px",
              "height": "110px",
              "cursor": "pointer"
            }
          }
        },
        ".el-icon-delete": {
          "padding-left": "10px",
          "cursor": "pointer"
        },
        ".work": {
          "margin-top": "5px",
          "display": "flex",
          "font-size": "13px",
          "color": "#999",
          "div": {
            "flex": "1",
            "&.right": {
              "text-align": "right",
              "color": "#444",
              ".authority": {
                "padding-left": "30px",
                "color": "#999"
              }
            }
          },
          "span": {
            "padding-right": "10px"
          },
          "span,  img": {
            "vertical-align": "middle",
            "padding-left": "5px"
          }
        },
        ".blue": {
          "color": "#5882f4",
          "font-size": "14px",
          "cursor": "pointer"
        },
        ".box-card": {
          "width": "100%",
          "background": "#fff",
          "border-bottom": "#e7e7e7 solid 1px",
          "padding": "0 10px 10px",
          "margin": "20px 0",
          ".card-avatar": {
            "height": "100%",
            ".avatar": {
              "margin": "14px 0"
            }
          },
          ".card-info": {
            "height": "100%",
            "text-align": "left",
            "padding": "20px 0",
            ".info-name": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "#151f34",
              "line-height": "24px"
            },
            ".info-num,    .spot-time": {
              "font-size": "12px",
              "font-weight": "400",
              "color": "#9297a3",
              "line-height": "22px"
            },
            ".spot-time": {
              "line-height": "26px"
            },
            ".group-name": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "#151f34",
              "line-height": "20px"
            },
            ".group-num,    .group-member": {
              "font-size": "12px",
              "font-weight": "400",
              "color": "#9297a3",
              "line-height": "18px"
            },
            ".spot-content": {
              "margin-top": "10px",
              "color": "#151f34",
              "font-size": "14px",
              "line-height": "24px",
              "overflow": "hidden",
              "word-break": "break-all",
              "text-overflow": "ellipsis",
              "display": "-webkit-box",
              "-webkit-line-clamp": "3",
              "-webkit-box-orient": "vertical"
            }
          },
          ".card-btn": {
            "height": "100%",
            "line-height": "88px"
          }
        },
        ".myspin": {
          "display": "none",
          "img": {
            "width": "50px",
            "height": "50px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/guide/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"homepage\">\n    <div class=\"top\">\n      <i>\n        <img src=\"../../assets/images/guide_welcome.png\" />\n      </i>\n      欢迎回来，尊敬的 {{ userInfo.nickName }}\n      <p>\n        在我们的帮助之下，您可以借助DIDI平台推广你的团队和产品，维系你的客户资源，管理你的团队。我们为您精心挑选了一些常用功能，你可以在这里快速进行管理。\n      </p>\n    </div>\n    <div class=\"mid\">\n      <div class=\"panel\" @click=\"goWalletHand()\">\n        <el-row align=\"middle\">\n          <el-col :span=\"2\">\n            <img src=\"../../assets/images/guide_cash.png\" />\n          </el-col>\n          <el-col :span=\"21\" class=\"centerbox\">\n            <p>\n              把你的资金接入DIDI平台，并利用它进行最大化的营销活动\n              <br />\n            </p>\n            <span>在你可以随时控制和监控你的资金使用情况</span>\n          </el-col>\n          <el-col :span=\"1\">\n            <img src=\"../../assets/images/guide_rightArrow.png\" style=\"margin-top: 20px\" />\n          </el-col>\n        </el-row>\n      </div>\n      <p class=\"tip\">\n        利用DIDI的团队营销工具，你可以针对整个平台进行资金空投、发红包以及在一些用户容易触达的位置对你的产品和团队进行宣传。\n      </p>\n      <ul class=\"quikHref\">\n        <li @click=\"goMessageHand()\">\n          <div>安全聊天</div>\n          <p>\n            每个人都拥有基本的隐私权，这也是DiDi的核心价值观之一。未经您许可的任何人都无法阅读您的消息，包括DiDi。\n          </p>\n        </li>\n        <li @click=\"goContactPersonHand()\">\n          <div>创建您的社群</div>\n          <p>\n            邀请朋友或同事加入社群，并进行语音或视频聊天或直播。你能够进行有关的小组讨论工作或电影，或找点乐子。\n          </p>\n        </li>\n        <li @click=\"goViewPointHand()\">\n          <div>发布看点</div>\n          <p>以文字、图片、视频等多媒体形式，实现信息的即时分享、传播互动</p>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapState } from 'vuex';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      activeItem: 'first'\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      userInfo: obj => {\n        return obj.state.userInfo;\n      }\n    })\n  },\n\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    //跳转至资产\n    goWalletHand() {\n      this.$router.push({\n        path: '/app/funds/general/wallet'\n      });\n    },\n    //跳转至看法\n    goViewPointHand() {\n      this.$router.push({\n        path: '/app/viewpoint'\n      });\n    },\n    //跳转至联系人\n    goContactPersonHand() {\n      this.$router.push({\n        path: '/app/contact'\n      });\n    },\n    //跳转至消息\n    goMessageHand() {\n      this.$router.push({\n        path: '/app/chat'\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"homepage\">\n    <div class=\"top\">\n      <i>\n        <img src=\"../../assets/images/guide_welcome.png\" />\n      </i>\n      欢迎回来，尊敬的 {{ userInfo.nickName }}\n      <p>\n        在我们的帮助之下，您可以借助DIDI平台推广你的团队和产品，维系你的客户资源，管理你的团队。我们为您精心挑选了一些常用功能，你可以在这里快速进行管理。\n      </p>\n    </div>\n    <div class=\"mid\">\n      <div class=\"panel\" @click=\"goWalletHand()\">\n        <el-row align=\"middle\">\n          <el-col :span=\"2\">\n            <img src=\"../../assets/images/guide_cash.png\" />\n          </el-col>\n          <el-col :span=\"21\" class=\"centerbox\">\n            <p>\n              把你的资金接入DIDI平台，并利用它进行最大化的营销活动\n              <br />\n            </p>\n            <span>在你可以随时控制和监控你的资金使用情况</span>\n          </el-col>\n          <el-col :span=\"1\">\n            <img src=\"../../assets/images/guide_rightArrow.png\" style=\"margin-top: 20px\" />\n          </el-col>\n        </el-row>\n      </div>\n      <p class=\"tip\">\n        利用DIDI的团队营销工具，你可以针对整个平台进行资金空投、发红包以及在一些用户容易触达的位置对你的产品和团队进行宣传。\n      </p>\n      <ul class=\"quikHref\">\n        <li @click=\"goMessageHand()\">\n          <div>安全聊天</div>\n          <p>\n            每个人都拥有基本的隐私权，这也是DiDi的核心价值观之一。未经您许可的任何人都无法阅读您的消息，包括DiDi。\n          </p>\n        </li>\n        <li @click=\"goContactPersonHand()\">\n          <div>创建您的社群</div>\n          <p>\n            邀请朋友或同事加入社群，并进行语音或视频聊天或直播。你能够进行有关的小组讨论工作或电影，或找点乐子。\n          </p>\n        </li>\n        <li @click=\"goViewPointHand()\">\n          <div>发布看点</div>\n          <p>以文字、图片、视频等多媒体形式，实现信息的即时分享、传播互动</p>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapState } from 'vuex';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      activeItem: 'first'\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      userInfo: obj => {\n        return obj.state.userInfo;\n      }\n    })\n  },\n\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    //跳转至资产\n    goWalletHand() {\n      this.$router.push({\n        path: '/app/funds/general/wallet'\n      });\n    },\n    //跳转至看法\n    goViewPointHand() {\n      this.$router.push({\n        path: '/app/viewpoint'\n      });\n    },\n    //跳转至联系人\n    goContactPersonHand() {\n      this.$router.push({\n        path: '/app/contact'\n      });\n    },\n    //跳转至消息\n    goMessageHand() {\n      this.$router.push({\n        path: '/app/chat'\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.homepage {\n  padding: 20px 0;\n  text-align: left;\n\n  .top {\n    border-bottom: #ddd solid 1px;\n    line-height: 28px;\n\n    p {\n      line-height: 28px;\n      margin: 10px 0 0 0;\n      padding-bottom: 10px;\n      color: #9297a3;\n      font-size: 0.8rem;\n    }\n  }\n\n  .mid {\n    padding: 40px 0;\n\n    .panel {\n      padding: 30px;\n      border-radius: 10px;\n      -moz-box-shadow: 4px 4px 12px 4px rgba(20%, 20%, 40%, 0.5);\n      -webkit-box-shadow: 4px 4px 12px 4px rgba(20%, 20%, 40%, 0.5);\n      box-shadow: 4px 4px 12px 4px rgba(20%, 20%, 40%, 0.5);\n\n      .centerbox {\n        padding-left: 20px;\n\n        p {\n          margin: 10px 0;\n        }\n\n        span {\n          color: #9297a3;\n          font-size: 0.8rem;\n        }\n      }\n    }\n\n    .tip {\n      margin: 50px 0 30px;\n      font-size: 1rem;\n    }\n\n    .quikHref {\n      margin: 10px 0;\n      display: flex;\n\n      li {\n        flex: 1;\n        margin: 0 20px;\n        background: linear-gradient(to top, #ffffff, #fce7cc);\n        padding: 30px 20px;\n        border-radius: 10px;\n        box-shadow: 4px 4px 12px 1px rgba(20%, 20%, 40%, 0.5);\n\n        &:nth-child(2) {\n          background: linear-gradient(to top, #ffffff, #d8defe);\n        }\n\n        &:nth-child(3) {\n          background: linear-gradient(to top, #ffffff, #f8d5d7);\n        }\n\n        div {\n          text-align: center;\n          font-weight: 700;\n          margin-bottom: 25px;\n        }\n\n        p {\n          line-height: 28px;\n          font-size: 0.8rem;\n        }\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".homepage": {
          "padding": "20px 0",
          "text-align": "left",
          ".top": {
            "border-bottom": "#ddd solid 1px",
            "line-height": "28px",
            "p": {
              "line-height": "28px",
              "margin": "10px 0 0 0",
              "padding-bottom": "10px",
              "color": "#9297a3",
              "font-size": "0.8rem"
            }
          },
          ".mid": {
            "padding": "40px 0",
            ".panel": {
              "padding": "30px",
              "border-radius": "10px",
              "-moz-box-shadow": "4px 4px 12px 4px rgba(20%, 20%, 40%, 0.5)",
              "-webkit-box-shadow": "4px 4px 12px 4px rgba(20%, 20%, 40%, 0.5)",
              "box-shadow": "4px 4px 12px 4px rgba(20%, 20%, 40%, 0.5)",
              ".centerbox": {
                "padding-left": "20px",
                "p": {
                  "margin": "10px 0"
                },
                "span": {
                  "color": "#9297a3",
                  "font-size": "0.8rem"
                }
              }
            },
            ".tip": {
              "margin": "50px 0 30px",
              "font-size": "1rem"
            },
            ".quikHref": {
              "margin": "10px 0",
              "display": "flex",
              "li": {
                "flex": "1",
                "margin": "0 20px",
                "background": "linear-gradient(to top, #ffffff, #fce7cc)",
                "padding": "30px 20px",
                "border-radius": "10px",
                "box-shadow": "4px 4px 12px 1px rgba(20%, 20%, 40%, 0.5)",
                "&:nth-child(2)": {
                  "background": "linear-gradient(to top, #ffffff, #d8defe)"
                },
                "&:nth-child(3)": {
                  "background": "linear-gradient(to top, #ffffff, #f8d5d7)"
                },
                "div": {
                  "text-align": "center",
                  "font-weight": "700",
                  "margin-bottom": "25px"
                },
                "p": {
                  "line-height": "28px",
                  "font-size": "0.8rem"
                }
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/publish/Index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 发布看法 -->\n<template>\n  <div class=\"publish-wrap\" v-loading.fullscreen.lock=\"fullscreenLoading\">\n    <!-- <div class=\"publish-title\">发布看法</div> -->\n    <div class=\"publish-type flex\">\n      <div class=\"publish-left\">有什么看点想告诉大家?</div>\n      <ul>\n        <li>\n          类型\n          <el-select v-model=\"form.invitationType\" placeholder=\"请选择\">\n            <el-option v-for=\"item in view_type\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n          </el-select>\n        </li>\n        <li>\n          权限\n          <el-select v-model=\"form.limitsOfAuthority\" placeholder=\"请选择\">\n            <el-option v-for=\"item in power_type\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n          </el-select>\n        </li>\n        <li>\n          选择标签\n          <el-select v-model=\"form.invitationLabelIds\" :multiple-limit=\"3\" multiple placeholder=\"请选择\">\n            <el-option v-for=\"item in labelArr\" :key=\"item.id\" :label=\"item.labelContent\" :value=\"item.id\"></el-option>\n          </el-select>\n        </li>\n      </ul>\n    </div>\n    <div>\n      <!-- 看点 -->\n      <ViewPage ref=\"ViewPage\" :ruleForm=\"form\" @publishHand=\"publishHand\" @saveHand=\"saveHand\" v-show=\"form.invitationType == '0'\" />\n      <!-- // 文章 -->\n      <Article v-show=\"!(form.invitationType == '0')\" :ruleForm=\"form\" @publishHand=\"publishHand\" @saveHand=\"saveHand\" />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport ViewPage from './View';\nimport Article from './Article';\n\nimport { view_type, power_type } from '@/utils/const';\n\nimport { getAllLabelInfo, saveDraftInvitation, pcAddOrUpdateInvitation } from './server';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    ViewPage,\n    Article\n  },\n  data() {\n    //这里存放数据\n    return {\n      fullscreenLoading: false,\n      textType: '类型',\n      value: '1',\n      view_type: view_type,\n      power_type,\n      valuePower: '1',\n      value_label: '',\n      form: {\n        invitationType: '0',\n        limitsOfAuthority: '6009-001',\n        invitationLabelIds: [],\n        invitationLabelNames: [],\n        origin: '6013-0002',\n        draftOperation: 0,\n        invitationSource: '原创'\n      },\n      labelArr: [],\n      show: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    publishHand(val) {\n      // 发布保存\n      this.changeLabelArrHand();\n      let pararms = {\n        ...this.form,\n        ...val,\n        invitationLabelIds: this.form.invitationLabelIds.join(','),\n        invitationLabelNames: this.form.invitationLabelNames.join(',')\n      };\n      if (this.$route.query.type && this.$route.query.type == 'edit') {\n        // 编辑--发布\n        pararms.draftOperation = 1;\n\n        this.editPublish(pararms);\n      } else {\n        this.newAddPublish(pararms);\n      }\n    },\n    async editPublish(pararms) {\n      // 编辑待发布，发布按钮保存事件\n      this.fullscreenLoading = true;\n      let res = await saveDraftInvitation({}, pararms);\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n        this.$router.push({\n          path: '/app/viewpoint'\n        });\n      } else {\n        this.$message.error(res.msg);\n      }\n      this.fullscreenLoading = false;\n    },\n    async newAddPublish(pararms) {\n      // 新增看法，发布按钮保存事件\n      this.fullscreenLoading = true;\n      let res = await pcAddOrUpdateInvitation({}, pararms);\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n        this.$router.push({\n          path: '/app/viewpoint'\n        });\n      } else {\n        this.$message.error(res.msg);\n      }\n      this.fullscreenLoading = false;\n    },\n    async saveHand(val) {\n      // 保存接口\n      this.changeLabelArrHand();\n      let pararms = {\n        ...this.form,\n        ...val,\n        invitationLabelIds: this.form.invitationLabelIds.join(','),\n        invitationLabelNames: this.form.invitationLabelNames.join(',')\n      };\n      this.fullscreenLoading = true;\n      let res = await saveDraftInvitation({}, pararms);\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n        this.$router.push({\n          path: '/app/viewpoint',\n          query: {\n            type: 'unpublish'\n          }\n        });\n      } else {\n        this.$message.error(res.msg);\n      }\n      this.fullscreenLoading = false;\n    },\n    changeHand(val) {\n      // 看法、文章切换\n      this.show = val == '0' ? true : false;\n    },\n    async getAllLabelInfoHand() {\n      // 获取标签列表\n      let res = await getAllLabelInfo();\n      this.labelArr = res.data || [];\n      this.form.invitationLabelIds[0] = this.labelArr[0].id;\n    },\n    changeLabelArrHand() {\n      if (this.form.invitationLabelIds.length > 0) {\n        this.form.invitationLabelNames = [];\n        this.labelArr.map((item, index) => {\n          if (this.form.invitationLabelIds.indexOf(item.id) > -1) {\n            this.form.invitationLabelNames.push(this.labelArr[index].labelContent);\n          }\n        });\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    if (this.$route.query.type && this.$route.query.type == 'edit') {\n      // 编辑\n      let publishItem = JSON.parse(localStorage.getItem('publish'));\n      this.form = publishItem;\n    }\n    this.getAllLabelInfoHand();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 发布看法 -->\n<template>\n  <div class=\"publish-wrap\" v-loading.fullscreen.lock=\"fullscreenLoading\">\n    <!-- <div class=\"publish-title\">发布看法</div> -->\n    <div class=\"publish-type flex\">\n      <div class=\"publish-left\">有什么看点想告诉大家?</div>\n      <ul>\n        <li>\n          类型\n          <el-select v-model=\"form.invitationType\" placeholder=\"请选择\">\n            <el-option v-for=\"item in view_type\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n          </el-select>\n        </li>\n        <li>\n          权限\n          <el-select v-model=\"form.limitsOfAuthority\" placeholder=\"请选择\">\n            <el-option v-for=\"item in power_type\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n          </el-select>\n        </li>\n        <li>\n          选择标签\n          <el-select v-model=\"form.invitationLabelIds\" :multiple-limit=\"3\" multiple placeholder=\"请选择\">\n            <el-option v-for=\"item in labelArr\" :key=\"item.id\" :label=\"item.labelContent\" :value=\"item.id\"></el-option>\n          </el-select>\n        </li>\n      </ul>\n    </div>\n    <div>\n      <!-- 看点 -->\n      <ViewPage ref=\"ViewPage\" :ruleForm=\"form\" @publishHand=\"publishHand\" @saveHand=\"saveHand\" v-show=\"form.invitationType == '0'\" />\n      <!-- // 文章 -->\n      <Article v-show=\"!(form.invitationType == '0')\" :ruleForm=\"form\" @publishHand=\"publishHand\" @saveHand=\"saveHand\" />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport ViewPage from './View';\nimport Article from './Article';\n\nimport { view_type, power_type } from '@/utils/const';\n\nimport { getAllLabelInfo, saveDraftInvitation, pcAddOrUpdateInvitation } from './server';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    ViewPage,\n    Article\n  },\n  data() {\n    //这里存放数据\n    return {\n      fullscreenLoading: false,\n      textType: '类型',\n      value: '1',\n      view_type: view_type,\n      power_type,\n      valuePower: '1',\n      value_label: '',\n      form: {\n        invitationType: '0',\n        limitsOfAuthority: '6009-001',\n        invitationLabelIds: [],\n        invitationLabelNames: [],\n        origin: '6013-0002',\n        draftOperation: 0,\n        invitationSource: '原创'\n      },\n      labelArr: [],\n      show: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    publishHand(val) {\n      // 发布保存\n      this.changeLabelArrHand();\n      let pararms = {\n        ...this.form,\n        ...val,\n        invitationLabelIds: this.form.invitationLabelIds.join(','),\n        invitationLabelNames: this.form.invitationLabelNames.join(',')\n      };\n      if (this.$route.query.type && this.$route.query.type == 'edit') {\n        // 编辑--发布\n        pararms.draftOperation = 1;\n\n        this.editPublish(pararms);\n      } else {\n        this.newAddPublish(pararms);\n      }\n    },\n    async editPublish(pararms) {\n      // 编辑待发布，发布按钮保存事件\n      this.fullscreenLoading = true;\n      let res = await saveDraftInvitation({}, pararms);\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n        this.$router.push({\n          path: '/app/viewpoint'\n        });\n      } else {\n        this.$message.error(res.msg);\n      }\n      this.fullscreenLoading = false;\n    },\n    async newAddPublish(pararms) {\n      // 新增看法，发布按钮保存事件\n      this.fullscreenLoading = true;\n      let res = await pcAddOrUpdateInvitation({}, pararms);\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n        this.$router.push({\n          path: '/app/viewpoint'\n        });\n      } else {\n        this.$message.error(res.msg);\n      }\n      this.fullscreenLoading = false;\n    },\n    async saveHand(val) {\n      // 保存接口\n      this.changeLabelArrHand();\n      let pararms = {\n        ...this.form,\n        ...val,\n        invitationLabelIds: this.form.invitationLabelIds.join(','),\n        invitationLabelNames: this.form.invitationLabelNames.join(',')\n      };\n      this.fullscreenLoading = true;\n      let res = await saveDraftInvitation({}, pararms);\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n        this.$router.push({\n          path: '/app/viewpoint',\n          query: {\n            type: 'unpublish'\n          }\n        });\n      } else {\n        this.$message.error(res.msg);\n      }\n      this.fullscreenLoading = false;\n    },\n    changeHand(val) {\n      // 看法、文章切换\n      this.show = val == '0' ? true : false;\n    },\n    async getAllLabelInfoHand() {\n      // 获取标签列表\n      let res = await getAllLabelInfo();\n      this.labelArr = res.data || [];\n      this.form.invitationLabelIds[0] = this.labelArr[0].id;\n    },\n    changeLabelArrHand() {\n      if (this.form.invitationLabelIds.length > 0) {\n        this.form.invitationLabelNames = [];\n        this.labelArr.map((item, index) => {\n          if (this.form.invitationLabelIds.indexOf(item.id) > -1) {\n            this.form.invitationLabelNames.push(this.labelArr[index].labelContent);\n          }\n        });\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    if (this.$route.query.type && this.$route.query.type == 'edit') {\n      // 编辑\n      let publishItem = JSON.parse(localStorage.getItem('publish'));\n      this.form = publishItem;\n    }\n    this.getAllLabelInfoHand();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.publish-wrap {\n  .publish-title {\n    color: #151f34;\n    line-height: 22px;\n    margin-bottom: 10px;\n  }\n  .publish-type {\n    height: 40px;\n    line-height: 40px;\n    font-size: 16px;\n    margin-bottom: 20px;\n    .publish-left {\n      color: #f57d00;\n    }\n    ul {\n      flex: 1;\n      text-align: right;\n      li {\n        display: inline-block;\n        font-size: 14px;\n        color: #333333;\n        margin-left: 20px;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".publish-wrap": {
          ".publish-title": {
            "color": "#151f34",
            "line-height": "22px",
            "margin-bottom": "10px"
          },
          ".publish-type": {
            "height": "40px",
            "line-height": "40px",
            "font-size": "16px",
            "margin-bottom": "20px",
            ".publish-left": {
              "color": "#f57d00"
            },
            "ul": {
              "flex": "1",
              "text-align": "right",
              "li": {
                "display": "inline-block",
                "font-size": "14px",
                "color": "#333333",
                "margin-left": "20px"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/detail/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"VIEW-wrap\">\n    <div style=\"text-align: right; color: #2f54eb; cursor: pointer\" @click=\"goback()\">\n      返回\n    </div>\n    <div v-if=\"detailObj.content\">\n      <div v-for=\"item in detailObj.picObjs\" :key=\"item.id\" class=\"myspin\">\n        <img :src=\"item.url\" />\n      </div>\n      <div class=\"list\">\n        <div>\n          <div class=\"spot\">\n            <el-row class=\"box-card spot-card\">\n              <el-col class=\"card-avatar\" style=\"text-align: right; padding-right: 15px; width: 70px\">\n                <div @click=\"gotoself(detailObj.userId)\" class=\"pointer\">\n                  <el-avatar class=\"avatar\" :size=\"60\" :src=\"detailObj.userImg\"></el-avatar>\n                </div>\n              </el-col>\n              <el-col :span=\"22\" class=\"card-info\">\n                <div class=\"info-name\">{{ detailObj.userNickName }}</div>\n                <div class=\"spot-time\">\n                  {{ detailObj.createdOn | timeCulmulate }}\n                </div>\n                <div class=\"spot-content\">{{ detailObj.content }}</div>\n              </el-col>\n              <div class=\"clear\"></div>\n              <ul class=\"imgbox\">\n                <li v-for=\"(item, index) in detailObj.picObjs\" :key=\"item.picId\" @click=\"preview(index)\">\n                  <img :src=\"item.url\" />\n                </li>\n              </ul>\n              <div style=\"clear: both\"></div>\n              <div class=\"article\" v-show=\"detailObj.invitationType == '1'\" @click=\"toArticle(detailObj.id)\">\n                <div class=\"art-img\">\n                  <img :src=\"detailObj.articleImg\" alt=\"\" v-if=\"detailObj.articleImg\" />\n                  <img src=\"../../../assets/images/noimg.png\" alt=\"\" v-else />\n                </div>\n                <div class=\"art-content\">\n                  <p v-if=\"detailObj.title\" class=\"art-title\">\n                    {{ detailObj.title }}\n                  </p>\n                  <p v-else class=\"art-title\">来自@{{ detailObj.userNickName }}的看点</p>\n                  <p v-if=\"detailObj.invitationSource\" class=\"art-source\">来源：{{ detailObj.invitationSource }}</p>\n                </div>\n              </div>\n              <div class=\"work\">\n                <i><img src=\"../../../assets/images/view_share.png\"/></i><span>分享 {{ detailObj.sharedTimes }}</span>\n                <i><img src=\"../../../assets/images/view_conment.png\"/></i><span>评论 {{ detailObj.commentTimes }} </span>\n                <i><img src=\"../../../assets/images/view_proud.png\"/></i><span>赞 {{ detailObj.numberOfPoints }}</span>\n              </div>\n            </el-row>\n          </div>\n        </div>\n      </div>\n      <div class=\"comment\">\n        <div class=\"comment-me\">全部评论（共{{ totalRow }}条）</div>\n        <div class=\"com-content\">\n          <div class=\"every-con\" v-for=\"(item, index) in dataList\" :key=\"index\">\n            <div class=\"info\">\n              <el-row class=\"liston\">\n                <el-col :span=\"1\" class=\"card-avatar\">\n                  <div @click=\"gotoself(item.replyUserId)\" class=\"pointer\">\n                    <el-avatar class=\"avatar\" :size=\"40\" :src=\"item.replyImg\"></el-avatar>\n                  </div>\n                </el-col>\n                <el-col :span=\"2\" class=\"card-info\">\n                  <div class=\"info-name\">{{ item.replyName }}</div>\n                  <div class=\"info-num\">\n                    <span v-if=\"item.replyTime != 0\">{{ item.replyTime }}</span\n                    ><span v-if=\"item.replyTimeType != 'day'\">{{ item.replyTimeType }}</span>\n                  </div>\n                </el-col>\n                <el-col :span=\"17\">\n                  <div class=\"comment-replay\">\n                    <span class=\"reply-left\">\n                      <label class=\"pointer\" v-if=\"item.beReplyName\" @click=\"gotoself(item.beReplyUserId)\">\n                        回复{{ item.beReplyName }} </label\n                      >：</span\n                    >{{ item.replyComment }}\n                  </div>\n                </el-col>\n                <el-col :span=\"4\" class=\"info-replay\">\n                  <div @click=\"onReplay(index)\" v-show=\"!item.show && item.replyUserId != myUserId\">\n                    回复\n                  </div>\n                </el-col>\n              </el-row>\n            </div>\n            <div class=\"text-box\" v-show=\"item.show\">\n              <el-row>\n                <el-col :span=\"1\">\n                  <div class=\"box-left\">回复</div>\n                </el-col>\n                <el-col :span=\"23\">\n                  <div class=\"box-right\">\n                    <el-input\n                      type=\"textarea\"\n                      :autosize=\"{ minRows: 2, maxRows: 4 }\"\n                      placeholder=\"请输入回复内容\"\n                      maxlength=\"150\"\n                      v-model=\"textarea\"\n                    ></el-input>\n                  </div>\n                </el-col>\n              </el-row>\n              <div class=\"replay-btn\">\n                <el-button type=\"info\" @click=\"cancel(index)\">取消</el-button>\n                <el-button type=\"warning\" @click=\"onSubmit(item.invitationId, item.id, index)\">发送</el-button>\n              </div>\n            </div>\n          </div>\n          <p class=\"more\" v-if=\"totalRow > pageSize\" @click=\"lookMore()\">\n            查看更多>\n          </p>\n          <p class=\"more\" v-else></p>\n          <p class=\"shengming\">\n            免责声明：行情分享，观点仅代表来源，不构成任何投资理财建议\n          </p>\n        </div>\n      </div>\n    </div>\n    <div v-else style=\"margin: 80px 0; text-align: center\">看点已删除</div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { getAllReply, getDetailContent } from '../server';\nimport { get_reply_comment } from '../relatedme/server';\nimport Vue from 'vue';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      myUserId: '',\n      dataList: [],\n      textarea: '',\n      detailObj: {\n        content: ''\n      },\n      totalRow: '',\n      pageSize: 10\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    toArticle(a) {\n      this.$router.push({\n        path: `/app/articleDetail?id=${a}`\n      });\n    },\n    goback() {\n      //  this.$router.go(-1)\n      this.$router.back();\n    },\n    gotoself(userId) {\n      if (userId == localStorage.getItem('userId')) {\n        this.$router.push({\n          path: 'viewpoint'\n        });\n      } else {\n        this.$router.push({\n          path: 'otherpoint',\n          query: { userId: userId }\n        });\n      }\n    },\n    onSubmit(invId, comId, indx) {\n      // async onSubmit(invId, comId,indx) {\n      if (!this.textarea) {\n        this.$message.error('请输入回复内容');\n        return;\n      }\n      // this.toReplay(invId, comId,indx)\n      // this.getAllReply()\n\n      this.toReplay(invId, comId, indx);\n      //  await this.getAllReply();\n    },\n\n    async toReplay(invId, comId, indx) {\n      try {\n        let param = {\n          beReplyId: comId,\n          invitationId: invId,\n          replyComment: this.textarea\n        };\n        let res = await get_reply_comment(param);\n        this.$message.success(res.msg);\n        Vue.set(this.dataList[indx], 'show', false);\n        this.textarea = [];\n        this.getDetailContent();\n        this.getAllReply();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    onReplay(indx) {\n      //\n      this.dataList.map(item => {\n        item.show = false;\n      });\n      Vue.set(this.dataList[indx], 'show', true);\n    },\n    cancel(indx) {\n      this.textarea = [];\n      Vue.set(this.dataList[indx], 'show', false);\n    },\n    preview(index) {\n      let arry = [];\n      for (let i in this.detailObj.picObjs) {\n        arry.push(this.detailObj.picObjs[i].url);\n      }\n\n      this.$imagePreview({\n        images: arry,\n        index: index\n      });\n    },\n    getDetailContent() {\n      getDetailContent(\n        {\n          id: this.$route.query.id\n        },\n        {}\n      ).then(res => {\n        if (res.code == '200' && res.data.length > 0) {\n          this.detailObj = res.data[0];\n          console.log(this.detailObj);\n        } else if (res.code != '200') {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    lookMore() {\n      this.pageSize += 10;\n      this.getAllReply();\n    },\n    getAllReply() {\n      getAllReply({\n        pageNumber: 1,\n        pageSize: this.pageSize,\n        invitationId: this.$route.query.id\n      }).then(res => {\n        if (res.code == '200') {\n          // this.dataList = res.data.rows\n          //  this.dataList.map((item) => {\n          //     item.show = false;\n          //  });\n          let arrNew = [];\n          res.data.rows.map(item => {\n            arrNew.push(Object.assign({}, item, { show: false }));\n          });\n          this.dataList = arrNew;\n\n          this.totalRow = res.data.totalRow;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.getDetailContent();\n    this.getAllReply();\n    this.myUserId = localStorage.getItem('userId');\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"VIEW-wrap\">\n    <div style=\"text-align: right; color: #2f54eb; cursor: pointer\" @click=\"goback()\">\n      返回\n    </div>\n    <div v-if=\"detailObj.content\">\n      <div v-for=\"item in detailObj.picObjs\" :key=\"item.id\" class=\"myspin\">\n        <img :src=\"item.url\" />\n      </div>\n      <div class=\"list\">\n        <div>\n          <div class=\"spot\">\n            <el-row class=\"box-card spot-card\">\n              <el-col class=\"card-avatar\" style=\"text-align: right; padding-right: 15px; width: 70px\">\n                <div @click=\"gotoself(detailObj.userId)\" class=\"pointer\">\n                  <el-avatar class=\"avatar\" :size=\"60\" :src=\"detailObj.userImg\"></el-avatar>\n                </div>\n              </el-col>\n              <el-col :span=\"22\" class=\"card-info\">\n                <div class=\"info-name\">{{ detailObj.userNickName }}</div>\n                <div class=\"spot-time\">\n                  {{ detailObj.createdOn | timeCulmulate }}\n                </div>\n                <div class=\"spot-content\">{{ detailObj.content }}</div>\n              </el-col>\n              <div class=\"clear\"></div>\n              <ul class=\"imgbox\">\n                <li v-for=\"(item, index) in detailObj.picObjs\" :key=\"item.picId\" @click=\"preview(index)\">\n                  <img :src=\"item.url\" />\n                </li>\n              </ul>\n              <div style=\"clear: both\"></div>\n              <div class=\"article\" v-show=\"detailObj.invitationType == '1'\" @click=\"toArticle(detailObj.id)\">\n                <div class=\"art-img\">\n                  <img :src=\"detailObj.articleImg\" alt=\"\" v-if=\"detailObj.articleImg\" />\n                  <img src=\"../../../assets/images/noimg.png\" alt=\"\" v-else />\n                </div>\n                <div class=\"art-content\">\n                  <p v-if=\"detailObj.title\" class=\"art-title\">\n                    {{ detailObj.title }}\n                  </p>\n                  <p v-else class=\"art-title\">来自@{{ detailObj.userNickName }}的看点</p>\n                  <p v-if=\"detailObj.invitationSource\" class=\"art-source\">来源：{{ detailObj.invitationSource }}</p>\n                </div>\n              </div>\n              <div class=\"work\">\n                <i><img src=\"../../../assets/images/view_share.png\"/></i><span>分享 {{ detailObj.sharedTimes }}</span>\n                <i><img src=\"../../../assets/images/view_conment.png\"/></i><span>评论 {{ detailObj.commentTimes }} </span>\n                <i><img src=\"../../../assets/images/view_proud.png\"/></i><span>赞 {{ detailObj.numberOfPoints }}</span>\n              </div>\n            </el-row>\n          </div>\n        </div>\n      </div>\n      <div class=\"comment\">\n        <div class=\"comment-me\">全部评论（共{{ totalRow }}条）</div>\n        <div class=\"com-content\">\n          <div class=\"every-con\" v-for=\"(item, index) in dataList\" :key=\"index\">\n            <div class=\"info\">\n              <el-row class=\"liston\">\n                <el-col :span=\"1\" class=\"card-avatar\">\n                  <div @click=\"gotoself(item.replyUserId)\" class=\"pointer\">\n                    <el-avatar class=\"avatar\" :size=\"40\" :src=\"item.replyImg\"></el-avatar>\n                  </div>\n                </el-col>\n                <el-col :span=\"2\" class=\"card-info\">\n                  <div class=\"info-name\">{{ item.replyName }}</div>\n                  <div class=\"info-num\">\n                    <span v-if=\"item.replyTime != 0\">{{ item.replyTime }}</span\n                    ><span v-if=\"item.replyTimeType != 'day'\">{{ item.replyTimeType }}</span>\n                  </div>\n                </el-col>\n                <el-col :span=\"17\">\n                  <div class=\"comment-replay\">\n                    <span class=\"reply-left\">\n                      <label class=\"pointer\" v-if=\"item.beReplyName\" @click=\"gotoself(item.beReplyUserId)\">\n                        回复{{ item.beReplyName }} </label\n                      >：</span\n                    >{{ item.replyComment }}\n                  </div>\n                </el-col>\n                <el-col :span=\"4\" class=\"info-replay\">\n                  <div @click=\"onReplay(index)\" v-show=\"!item.show && item.replyUserId != myUserId\">\n                    回复\n                  </div>\n                </el-col>\n              </el-row>\n            </div>\n            <div class=\"text-box\" v-show=\"item.show\">\n              <el-row>\n                <el-col :span=\"1\">\n                  <div class=\"box-left\">回复</div>\n                </el-col>\n                <el-col :span=\"23\">\n                  <div class=\"box-right\">\n                    <el-input\n                      type=\"textarea\"\n                      :autosize=\"{ minRows: 2, maxRows: 4 }\"\n                      placeholder=\"请输入回复内容\"\n                      maxlength=\"150\"\n                      v-model=\"textarea\"\n                    ></el-input>\n                  </div>\n                </el-col>\n              </el-row>\n              <div class=\"replay-btn\">\n                <el-button type=\"info\" @click=\"cancel(index)\">取消</el-button>\n                <el-button type=\"warning\" @click=\"onSubmit(item.invitationId, item.id, index)\">发送</el-button>\n              </div>\n            </div>\n          </div>\n          <p class=\"more\" v-if=\"totalRow > pageSize\" @click=\"lookMore()\">\n            查看更多>\n          </p>\n          <p class=\"more\" v-else></p>\n          <p class=\"shengming\">\n            免责声明：行情分享，观点仅代表来源，不构成任何投资理财建议\n          </p>\n        </div>\n      </div>\n    </div>\n    <div v-else style=\"margin: 80px 0; text-align: center\">看点已删除</div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { getAllReply, getDetailContent } from '../server';\nimport { get_reply_comment } from '../relatedme/server';\nimport Vue from 'vue';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      myUserId: '',\n      dataList: [],\n      textarea: '',\n      detailObj: {\n        content: ''\n      },\n      totalRow: '',\n      pageSize: 10\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    toArticle(a) {\n      this.$router.push({\n        path: `/app/articleDetail?id=${a}`\n      });\n    },\n    goback() {\n      //  this.$router.go(-1)\n      this.$router.back();\n    },\n    gotoself(userId) {\n      if (userId == localStorage.getItem('userId')) {\n        this.$router.push({\n          path: 'viewpoint'\n        });\n      } else {\n        this.$router.push({\n          path: 'otherpoint',\n          query: { userId: userId }\n        });\n      }\n    },\n    onSubmit(invId, comId, indx) {\n      // async onSubmit(invId, comId,indx) {\n      if (!this.textarea) {\n        this.$message.error('请输入回复内容');\n        return;\n      }\n      // this.toReplay(invId, comId,indx)\n      // this.getAllReply()\n\n      this.toReplay(invId, comId, indx);\n      //  await this.getAllReply();\n    },\n\n    async toReplay(invId, comId, indx) {\n      try {\n        let param = {\n          beReplyId: comId,\n          invitationId: invId,\n          replyComment: this.textarea\n        };\n        let res = await get_reply_comment(param);\n        this.$message.success(res.msg);\n        Vue.set(this.dataList[indx], 'show', false);\n        this.textarea = [];\n        this.getDetailContent();\n        this.getAllReply();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    onReplay(indx) {\n      //\n      this.dataList.map(item => {\n        item.show = false;\n      });\n      Vue.set(this.dataList[indx], 'show', true);\n    },\n    cancel(indx) {\n      this.textarea = [];\n      Vue.set(this.dataList[indx], 'show', false);\n    },\n    preview(index) {\n      let arry = [];\n      for (let i in this.detailObj.picObjs) {\n        arry.push(this.detailObj.picObjs[i].url);\n      }\n\n      this.$imagePreview({\n        images: arry,\n        index: index\n      });\n    },\n    getDetailContent() {\n      getDetailContent(\n        {\n          id: this.$route.query.id\n        },\n        {}\n      ).then(res => {\n        if (res.code == '200' && res.data.length > 0) {\n          this.detailObj = res.data[0];\n          console.log(this.detailObj);\n        } else if (res.code != '200') {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    lookMore() {\n      this.pageSize += 10;\n      this.getAllReply();\n    },\n    getAllReply() {\n      getAllReply({\n        pageNumber: 1,\n        pageSize: this.pageSize,\n        invitationId: this.$route.query.id\n      }).then(res => {\n        if (res.code == '200') {\n          // this.dataList = res.data.rows\n          //  this.dataList.map((item) => {\n          //     item.show = false;\n          //  });\n          let arrNew = [];\n          res.data.rows.map(item => {\n            arrNew.push(Object.assign({}, item, { show: false }));\n          });\n          this.dataList = arrNew;\n\n          this.totalRow = res.data.totalRow;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.getDetailContent();\n    this.getAllReply();\n    this.myUserId = localStorage.getItem('userId');\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.shengming {\n  text-align: center;\n  font-size: 14px;\n  color: #999;\n  margin: 50px 0 20px;\n}\n\n.more {\n  text-align: center;\n  font-size: 14px;\n  cursor: pointer;\n  color: #2f54eb;\n}\n\n.myspin {\n  display: none;\n}\n\n.liston {\n  margin: 20px 0;\n  padding-bottom: 10px;\n  border-bottom: #eee solid 1px;\n}\n\n.clear {\n  clear: both;\n}\n\n.imgbox {\n  margin: 10px;\n\n  li {\n    padding: 0 20px;\n    float: left;\n    text-align: left;\n\n    img {\n      width: 170px;\n      height: 110px;\n      cursor: pointer;\n    }\n  }\n}\n\n.article {\n  box-sizing: border-box;\n  padding: 10px 20px;\n  background: #f7f7fa;\n  display: flex;\n\n  .art-img {\n    img {\n      width: 204px;\n      max-height: 150px;\n    }\n  }\n\n  .art-content {\n    flex: 1;\n    margin-left: 20px;\n\n    .art-title {\n      font-size: 18px;\n\n      font-weight: 400;\n      color: rgba(21, 31, 52, 1);\n      line-height: 24px;\n      margin-bottom: 10px;\n    }\n\n    .art-source {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgba(146, 151, 163, 1);\n      line-height: 17px;\n    }\n  }\n}\n\n.work {\n  text-align: right;\n  color: #666;\n  margin-top: 5px;\n\n  span {\n    padding-right: 10px;\n  }\n\n  span,\n  img {\n    vertical-align: middle;\n    font-size: 13px;\n    padding-left: 5px;\n  }\n}\n\n.blue {\n  color: #5882f4;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.box-card {\n  width: 100%;\n  background: #fff;\n  border-bottom: #e7e7e7 solid 1px;\n  padding: 0 10px 10px;\n  margin: 20px 0;\n\n  .card-avatar {\n    height: 100%;\n\n    .avatar {\n      margin: 14px 0;\n    }\n  }\n\n  .card-info {\n    height: 100%;\n    text-align: left;\n    padding: 20px 0;\n\n    .info-name {\n      overflow: hidden;\n      word-break: break-all;\n      text-overflow: ellipsis;\n      display: -webkit-box;\n      -webkit-line-clamp: 3;\n      font-size: 14px;\n\n      font-weight: 400;\n      color: #151f34;\n      line-height: 20px;\n    }\n\n    .info-num,\n    .spot-time {\n      font-size: 12px;\n\n      font-weight: 400;\n      color: #9297a3;\n      line-height: 22px;\n    }\n\n    .spot-time {\n      line-height: 26px;\n    }\n\n    .group-name {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: #151f34;\n      line-height: 20px;\n    }\n\n    .group-num,\n    .group-member {\n      font-size: 12px;\n\n      font-weight: 400;\n      color: #9297a3;\n      line-height: 18px;\n    }\n\n    .spot-content {\n      margin-top: 10px;\n      color: #151f34;\n      font-size: 14px;\n      line-height: 24px;\n      word-break: break-all;\n    }\n  }\n\n  .card-btn {\n    height: 100%;\n    line-height: 88px;\n  }\n}\n\n.comment {\n  box-sizing: border-box;\n  padding: 30px;\n\n  .comment-me {\n    height: 22px;\n    font-size: 16px;\n    font-weight: 400;\n    color: rgba(21, 31, 52, 1);\n    line-height: 22px;\n    margin-bottom: 30px;\n  }\n\n  .com-content {\n    .every-con {\n      .info {\n        margin: 3px 0;\n\n        .card-avatar {\n          height: 100%;\n\n          .avatar {\n            margin: 14px 0;\n          }\n        }\n\n        .card-info {\n          height: 100%;\n          text-align: left;\n          padding: 0 0 0 16px;\n\n          .info-name {\n            line-height: 20px;\n            overflow: hidden;\n            word-break: break-all;\n            text-overflow: ellipsis;\n            display: -webkit-box;\n            -webkit-line-clamp: 3;\n            -webkit-box-orient: vertical;\n            font-size: 14px;\n            font-weight: 400;\n            color: rgba(21, 31, 52, 1);\n          }\n\n          .info-num {\n            height: 17px;\n            font-size: 12px;\n            font-weight: 400;\n            color: rgba(146, 151, 163, 1);\n            line-height: 17px;\n          }\n        }\n\n        .info-replay {\n          height: 40px;\n          font-size: 14px;\n          font-weight: 400;\n          color: rgba(47, 84, 235, 1);\n          line-height: 60px;\n          text-align: right;\n          cursor: pointer;\n        }\n      }\n\n      .comment-replay {\n        word-break: break-all;\n        font-size: 14px;\n\n        font-weight: 400;\n        color: rgba(21, 31, 52, 1);\n        line-height: 24px;\n\n        .reply-left {\n          color: rgba(47, 84, 235, 1);\n          margin-right: 10px;\n        }\n      }\n\n      .text-box {\n        margin-top: 10px;\n\n        .replay-btn {\n          text-align: right;\n          margin-top: 6px;\n        }\n\n        .box-left {\n          width: 40px;\n          height: 20px;\n          font-size: 14px;\n          font-weight: 400;\n          color: rgba(21, 31, 52, 1);\n          line-height: 20px;\n          text-align: center;\n        }\n\n        .box-right {\n          margin-left: 16px;\n        }\n      }\n\n      .comment-detail {\n        height: 30px;\n        font-size: 14px;\n        font-weight: 400;\n        color: rgba(21, 31, 52, 1);\n        line-height: 30px;\n      }\n\n      .text-con {\n        display: flex;\n\n        .text-img {\n          .avatar {\n            margin: 10px 0;\n          }\n        }\n\n        .con-text {\n          box-sizing: border-box;\n          padding: 4px 0px;\n\n          .con-box {\n            box-sizing: border-box;\n            padding-left: 20px;\n\n            .my-info {\n              height: 24px;\n              font-size: 14px;\n              font-weight: 400;\n              color: rgba(21, 31, 52, 1);\n              line-height: 24px;\n            }\n\n            .my-text {\n              font-size: 14px;\n              line-height: 20px;\n              font-weight: 400;\n              color: rgba(21, 31, 52, 1);\n              overflow: hidden;\n              text-overflow: ellipsis;\n              display: -webkit-box;\n              -webkit-line-clamp: 2;\n              -webkit-box-orient: vertical;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".shengming": {
          "text-align": "center",
          "font-size": "14px",
          "color": "#999",
          "margin": "50px 0 20px"
        },
        ".more": {
          "text-align": "center",
          "font-size": "14px",
          "cursor": "pointer",
          "color": "#2f54eb"
        },
        ".myspin": {
          "display": "none"
        },
        ".liston": {
          "margin": "20px 0",
          "padding-bottom": "10px",
          "border-bottom": "#eee solid 1px"
        },
        ".clear": {
          "clear": "both"
        },
        ".imgbox": {
          "margin": "10px",
          "li": {
            "padding": "0 20px",
            "float": "left",
            "text-align": "left",
            "img": {
              "width": "170px",
              "height": "110px",
              "cursor": "pointer"
            }
          }
        },
        ".article": {
          "box-sizing": "border-box",
          "padding": "10px 20px",
          "background": "#f7f7fa",
          "display": "flex",
          ".art-img": {
            "img": {
              "width": "204px",
              "max-height": "150px"
            }
          },
          ".art-content": {
            "flex": "1",
            "margin-left": "20px",
            ".art-title": {
              "font-size": "18px",
              "font-weight": "400",
              "color": "rgba(21, 31, 52, 1)",
              "line-height": "24px",
              "margin-bottom": "10px"
            },
            ".art-source": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(146, 151, 163, 1)",
              "line-height": "17px"
            }
          }
        },
        ".work": {
          "text-align": "right",
          "color": "#666",
          "margin-top": "5px",
          "span": {
            "padding-right": "10px"
          },
          "span,  img": {
            "vertical-align": "middle",
            "font-size": "13px",
            "padding-left": "5px"
          }
        },
        ".blue": {
          "color": "#5882f4",
          "font-size": "14px",
          "cursor": "pointer"
        },
        ".box-card": {
          "width": "100%",
          "background": "#fff",
          "border-bottom": "#e7e7e7 solid 1px",
          "padding": "0 10px 10px",
          "margin": "20px 0",
          ".card-avatar": {
            "height": "100%",
            ".avatar": {
              "margin": "14px 0"
            }
          },
          ".card-info": {
            "height": "100%",
            "text-align": "left",
            "padding": "20px 0",
            ".info-name": {
              "overflow": "hidden",
              "word-break": "break-all",
              "text-overflow": "ellipsis",
              "display": "-webkit-box",
              "-webkit-line-clamp": "3",
              "font-size": "14px",
              "font-weight": "400",
              "color": "#151f34",
              "line-height": "20px"
            },
            ".info-num,    .spot-time": {
              "font-size": "12px",
              "font-weight": "400",
              "color": "#9297a3",
              "line-height": "22px"
            },
            ".spot-time": {
              "line-height": "26px"
            },
            ".group-name": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "#151f34",
              "line-height": "20px"
            },
            ".group-num,    .group-member": {
              "font-size": "12px",
              "font-weight": "400",
              "color": "#9297a3",
              "line-height": "18px"
            },
            ".spot-content": {
              "margin-top": "10px",
              "color": "#151f34",
              "font-size": "14px",
              "line-height": "24px",
              "word-break": "break-all"
            }
          },
          ".card-btn": {
            "height": "100%",
            "line-height": "88px"
          }
        },
        ".comment": {
          "box-sizing": "border-box",
          "padding": "30px",
          ".comment-me": {
            "height": "22px",
            "font-size": "16px",
            "font-weight": "400",
            "color": "rgba(21, 31, 52, 1)",
            "line-height": "22px",
            "margin-bottom": "30px"
          },
          ".com-content": {
            ".every-con": {
              ".info": {
                "margin": "3px 0",
                ".card-avatar": {
                  "height": "100%",
                  ".avatar": {
                    "margin": "14px 0"
                  }
                },
                ".card-info": {
                  "height": "100%",
                  "text-align": "left",
                  "padding": "0 0 0 16px",
                  ".info-name": {
                    "line-height": "20px",
                    "overflow": "hidden",
                    "word-break": "break-all",
                    "text-overflow": "ellipsis",
                    "display": "-webkit-box",
                    "-webkit-line-clamp": "3",
                    "-webkit-box-orient": "vertical",
                    "font-size": "14px",
                    "font-weight": "400",
                    "color": "rgba(21, 31, 52, 1)"
                  },
                  ".info-num": {
                    "height": "17px",
                    "font-size": "12px",
                    "font-weight": "400",
                    "color": "rgba(146, 151, 163, 1)",
                    "line-height": "17px"
                  }
                },
                ".info-replay": {
                  "height": "40px",
                  "font-size": "14px",
                  "font-weight": "400",
                  "color": "rgba(47, 84, 235, 1)",
                  "line-height": "60px",
                  "text-align": "right",
                  "cursor": "pointer"
                }
              },
              ".comment-replay": {
                "word-break": "break-all",
                "font-size": "14px",
                "font-weight": "400",
                "color": "rgba(21, 31, 52, 1)",
                "line-height": "24px",
                ".reply-left": {
                  "color": "rgba(47, 84, 235, 1)",
                  "margin-right": "10px"
                }
              },
              ".text-box": {
                "margin-top": "10px",
                ".replay-btn": {
                  "text-align": "right",
                  "margin-top": "6px"
                },
                ".box-left": {
                  "width": "40px",
                  "height": "20px",
                  "font-size": "14px",
                  "font-weight": "400",
                  "color": "rgba(21, 31, 52, 1)",
                  "line-height": "20px",
                  "text-align": "center"
                },
                ".box-right": {
                  "margin-left": "16px"
                }
              },
              ".comment-detail": {
                "height": "30px",
                "font-size": "14px",
                "font-weight": "400",
                "color": "rgba(21, 31, 52, 1)",
                "line-height": "30px"
              },
              ".text-con": {
                "display": "flex",
                ".text-img": {
                  ".avatar": {
                    "margin": "10px 0"
                  }
                },
                ".con-text": {
                  "box-sizing": "border-box",
                  "padding": "4px 0px",
                  ".con-box": {
                    "box-sizing": "border-box",
                    "padding-left": "20px",
                    ".my-info": {
                      "height": "24px",
                      "font-size": "14px",
                      "font-weight": "400",
                      "color": "rgba(21, 31, 52, 1)",
                      "line-height": "24px"
                    },
                    ".my-text": {
                      "font-size": "14px",
                      "line-height": "20px",
                      "font-weight": "400",
                      "color": "rgba(21, 31, 52, 1)",
                      "overflow": "hidden",
                      "text-overflow": "ellipsis",
                      "display": "-webkit-box",
                      "-webkit-line-clamp": "2",
                      "-webkit-box-orient": "vertical"
                    }
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/articleDetail/index.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 看点详情 -->\n<template>\n  <div class=\"viewpoint\">\n    <div style=\"text-align: right; color: #2f54eb; cursor: pointer\" @click=\"goback()\">\n      返回\n    </div>\n    <div class=\"ql-snow\">\n      <div class=\"content ql-editor\" v-html=\"articleContent\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { getContent } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      articleContent: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    goback() {\n      //  this.$router.go(-1)\n      this.$router.back();\n    },\n    async POST_content() {\n      const res = await getContent({\n        invitationId: this.$route.query.id\n      });\n      this.articleContent = res.data;\n      //   console.log(this.articleContent,88888)\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.POST_content();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 看点详情 -->\n<template>\n  <div class=\"viewpoint\">\n    <div style=\"text-align: right; color: #2f54eb; cursor: pointer\" @click=\"goback()\">\n      返回\n    </div>\n    <div class=\"ql-snow\">\n      <div class=\"content ql-editor\" v-html=\"articleContent\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { getContent } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      articleContent: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    goback() {\n      //  this.$router.go(-1)\n      this.$router.back();\n    },\n    async POST_content() {\n      const res = await getContent({\n        invitationId: this.$route.query.id\n      });\n      this.articleContent = res.data;\n      //   console.log(this.articleContent,88888)\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.POST_content();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style scoped>\n.viewpoint >>> div {\n  max-width: 100%;\n}</style\n>>\n\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.viewpoint {\n  width: 100%;\n  max-height: 100vh;\n  box-sizing: border-box;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  padding: 20px;\n  word-break: break-all;\n  word-wrap: break-word;\n}\n</style>\n",
    "cssJson": [
      {
        ".viewpoint >>> div": {
          "max-width": "100%"
        },
        "</style>><style lang=\"less\" scoped>.viewpoint": {
          "width": "100%",
          "max-height": "100vh",
          "box-sizing": "border-box",
          "overflow-y": "scroll",
          "-webkit-overflow-scrolling": "touch",
          "padding": "20px",
          "word-break": "break-all",
          "word-wrap": "break-word"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/detail/miningDetail.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 矿区明细 -->\n<template>\n  <div class=\"ore-detail\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <el-form :model=\"formData\" ref=\"formData\" :inline=\"true\" class=\"ser-box\">\n      <el-input placeholder=\"搜索币种\" v-model=\"formData.currency\" class=\"input\" clearable @keyup.enter.native=\"search\" @blur=\"search\">\n        <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n      </el-input>\n      <el-input v-show=\"false\"></el-input>\n    </el-form>\n    <div class=\"ore-table\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n        <el-table-column prop=\"createdOn\" label=\"交易时间\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"tabName\" label=\"交易类型\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"currency\" label=\"币种\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"交易数量\" align=\"center\"></el-table-column>\n      </el-table>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"formData.pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_account_mining } from './../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      options: [\n        {\n          value: '10004',\n          label: '转出'\n        },\n        {\n          value: '10005',\n          label: '转入'\n        },\n        {\n          value: '10009',\n          label: '充币'\n        },\n        {\n          value: '10010',\n          label: '提币'\n        }\n      ],\n      value: '',\n      beginTime: '',\n      endTime: '',\n      serAdvert: '',\n      layout: 'prev, pager, next',\n      total: 100,\n      currentPage: 1,\n      tableData: [],\n      formData: {\n        currency: '',\n        cause: '',\n        pageSize: 10,\n        pageNo: 1\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      this.formData.pageNo = 1;\n      this.currentPage = 1;\n      this.getTableData();\n    },\n    async getTableData() {\n      try {\n        let res = await get_account_mining(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n        // this.formData.currency = ''\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    init() {\n      this.getTableData();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.formData.pageNo = 1;\n      this.formData.pageSize = val;\n      this.getTableData();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.formData.pageNo = val;\n      this.currentPage = val;\n      this.getTableData();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 矿区明细 -->\n<template>\n  <div class=\"ore-detail\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <el-form :model=\"formData\" ref=\"formData\" :inline=\"true\" class=\"ser-box\">\n      <el-input placeholder=\"搜索币种\" v-model=\"formData.currency\" class=\"input\" clearable @keyup.enter.native=\"search\" @blur=\"search\">\n        <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n      </el-input>\n      <el-input v-show=\"false\"></el-input>\n    </el-form>\n    <div class=\"ore-table\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n        <el-table-column prop=\"createdOn\" label=\"交易时间\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"tabName\" label=\"交易类型\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"currency\" label=\"币种\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"交易数量\" align=\"center\"></el-table-column>\n      </el-table>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"formData.pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_account_mining } from './../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      options: [\n        {\n          value: '10004',\n          label: '转出'\n        },\n        {\n          value: '10005',\n          label: '转入'\n        },\n        {\n          value: '10009',\n          label: '充币'\n        },\n        {\n          value: '10010',\n          label: '提币'\n        }\n      ],\n      value: '',\n      beginTime: '',\n      endTime: '',\n      serAdvert: '',\n      layout: 'prev, pager, next',\n      total: 100,\n      currentPage: 1,\n      tableData: [],\n      formData: {\n        currency: '',\n        cause: '',\n        pageSize: 10,\n        pageNo: 1\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      this.formData.pageNo = 1;\n      this.currentPage = 1;\n      this.getTableData();\n    },\n    async getTableData() {\n      try {\n        let res = await get_account_mining(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n        // this.formData.currency = ''\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    init() {\n      this.getTableData();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.formData.pageNo = 1;\n      this.formData.pageSize = val;\n      this.getTableData();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.formData.pageNo = val;\n      this.currentPage = val;\n      this.getTableData();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.ore-detail .ore-table .warning-row {\n  background: #f7f7fa;\n}\n.ore-detail .ore-table .success-row {\n  background: #fff;\n}\n.ore-detail .ore-table .el-table td,\n.ore-detail .ore-table .el-table th.is-leaf {\n  border: none;\n}\n.ore-detail .ore-table .el-table th {\n  background-color: #9297a3;\n  color: #151f34;\n}\n.ore-detail .ore-table .el-table::before {\n  height: 0;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.ore-detail {\n  box-sizing: border-box;\n  padding: 30px 20px;\n  .back {\n    width: 100px;\n    cursor: pointer;\n    color: #151f34;\n    font-size: 16px;\n    .el-icon-arrow-left {\n      color: #9497a3;\n      margin-right: 10px;\n      font-weight: 500;\n    }\n  }\n  .ser-box {\n    margin: 35px 0 30px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    .input {\n      width: 314px;\n    }\n    .time {\n      .middle {\n        display: inline-block;\n        margin: 0 10px;\n        font-size: 20px;\n        font-weight: 500;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".ore-detail .ore-table .warning-row": {
          "background": "#f7f7fa"
        },
        ".ore-detail .ore-table .success-row": {
          "background": "#fff"
        },
        ".ore-detail .ore-table .el-table td,.ore-detail .ore-table .el-table th.is-leaf": {
          "border": "none"
        },
        ".ore-detail .ore-table .el-table th": {
          "background-color": "#9297a3",
          "color": "#151f34"
        },
        ".ore-detail .ore-table .el-table::before": {
          "height": "0"
        }
      },
      {
        ".ore-detail": {
          "box-sizing": "border-box",
          "padding": "30px 20px",
          ".back": {
            "width": "100px",
            "cursor": "pointer",
            "color": "#151f34",
            "font-size": "16px",
            ".el-icon-arrow-left": {
              "color": "#9497a3",
              "margin-right": "10px",
              "font-weight": "500"
            }
          },
          ".ser-box": {
            "margin": "35px 0 30px",
            "width": "100%",
            "display": "flex",
            "justify-content": "space-between",
            ".input": {
              "width": "314px"
            },
            ".time": {
              ".middle": {
                "display": "inline-block",
                "margin": "0 10px",
                "font-size": "20px",
                "font-weight": "500"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/detail/oreDetail.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 矿区明细 -->\n<template>\n  <div class=\"ore-detail\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <el-form :model=\"formData\" ref=\"formData\" :inline=\"true\" class=\"ser-box\">\n      <el-input\n        placeholder=\"搜索币种简称或全称\"\n        v-model=\"formData.currency\"\n        class=\"input\"\n        clearable\n        @keyup.enter.native=\"search\"\n        @blur=\"search\"\n      >\n        <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n      </el-input>\n    </el-form>\n    <div class=\"ore-table\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n        <el-table-column prop=\"time\" label=\"交易时间\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"tabType\" label=\"交易类型\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"currency\" label=\"币种\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"交易数量\" align=\"center\"></el-table-column>\n      </el-table>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"formData.pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_account_ore } from './../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      options: [\n        {\n          value: '10004',\n          label: '转出'\n        },\n        {\n          value: '10005',\n          label: '转入'\n        },\n        {\n          value: '10009',\n          label: '充币'\n        },\n        {\n          value: '10010',\n          label: '提币'\n        }\n      ],\n      value: '',\n      beginTime: '',\n      endTime: '',\n      serAdvert: '',\n      layout: 'prev, pager, next',\n      total: 100,\n      currentPage: 1,\n      tableData: [],\n      formData: {\n        currency: '',\n        accountType: 1201,\n        pageSize: 10,\n        pageNo: 1\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      this.formData.pageNo = 1;\n      this.currentPage = 1;\n      this.getTableData();\n    },\n    async getTableData() {\n      try {\n        let res = await get_account_ore(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    init() {\n      this.getTableData();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.formData.pageNo = 1;\n      this.formData.pageSize = val;\n      this.getTableData();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.formData.pageNo = val;\n      this.currentPage = val;\n      this.getTableData();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 矿区明细 -->\n<template>\n  <div class=\"ore-detail\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <el-form :model=\"formData\" ref=\"formData\" :inline=\"true\" class=\"ser-box\">\n      <el-input\n        placeholder=\"搜索币种简称或全称\"\n        v-model=\"formData.currency\"\n        class=\"input\"\n        clearable\n        @keyup.enter.native=\"search\"\n        @blur=\"search\"\n      >\n        <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n      </el-input>\n    </el-form>\n    <div class=\"ore-table\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n        <el-table-column prop=\"time\" label=\"交易时间\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"tabType\" label=\"交易类型\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"currency\" label=\"币种\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"交易数量\" align=\"center\"></el-table-column>\n      </el-table>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"formData.pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_account_ore } from './../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      options: [\n        {\n          value: '10004',\n          label: '转出'\n        },\n        {\n          value: '10005',\n          label: '转入'\n        },\n        {\n          value: '10009',\n          label: '充币'\n        },\n        {\n          value: '10010',\n          label: '提币'\n        }\n      ],\n      value: '',\n      beginTime: '',\n      endTime: '',\n      serAdvert: '',\n      layout: 'prev, pager, next',\n      total: 100,\n      currentPage: 1,\n      tableData: [],\n      formData: {\n        currency: '',\n        accountType: 1201,\n        pageSize: 10,\n        pageNo: 1\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      this.formData.pageNo = 1;\n      this.currentPage = 1;\n      this.getTableData();\n    },\n    async getTableData() {\n      try {\n        let res = await get_account_ore(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    init() {\n      this.getTableData();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.formData.pageNo = 1;\n      this.formData.pageSize = val;\n      this.getTableData();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.formData.pageNo = val;\n      this.currentPage = val;\n      this.getTableData();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.ore-detail .ore-table .warning-row {\n  background: #f7f7fa;\n}\n.ore-detail .ore-table .success-row {\n  background: #fff;\n}\n.ore-detail .ore-table .el-table td,\n.ore-detail .ore-table .el-table th.is-leaf {\n  border: none;\n}\n.ore-detail .ore-table .el-table th {\n  background-color: #9297a3;\n  color: #151f34;\n}\n.ore-detail .ore-table .el-table::before {\n  height: 0;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.ore-detail {\n  box-sizing: border-box;\n  padding: 30px 20px;\n  .back {\n    width: 100px;\n    cursor: pointer;\n    color: #151f34;\n    font-size: 16px;\n    .el-icon-arrow-left {\n      color: #9497a3;\n      margin-right: 10px;\n      font-weight: 500;\n    }\n  }\n  .ser-box {\n    margin: 35px 0 30px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    .input {\n      width: 314px;\n    }\n    .time {\n      .middle {\n        display: inline-block;\n        margin: 0 10px;\n        font-size: 20px;\n        font-weight: 500;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".ore-detail .ore-table .warning-row": {
          "background": "#f7f7fa"
        },
        ".ore-detail .ore-table .success-row": {
          "background": "#fff"
        },
        ".ore-detail .ore-table .el-table td,.ore-detail .ore-table .el-table th.is-leaf": {
          "border": "none"
        },
        ".ore-detail .ore-table .el-table th": {
          "background-color": "#9297a3",
          "color": "#151f34"
        },
        ".ore-detail .ore-table .el-table::before": {
          "height": "0"
        }
      },
      {
        ".ore-detail": {
          "box-sizing": "border-box",
          "padding": "30px 20px",
          ".back": {
            "width": "100px",
            "cursor": "pointer",
            "color": "#151f34",
            "font-size": "16px",
            ".el-icon-arrow-left": {
              "color": "#9497a3",
              "margin-right": "10px",
              "font-weight": "500"
            }
          },
          ".ser-box": {
            "margin": "35px 0 30px",
            "width": "100%",
            "display": "flex",
            "justify-content": "space-between",
            ".input": {
              "width": "314px"
            },
            ".time": {
              ".middle": {
                "display": "inline-block",
                "margin": "0 10px",
                "font-size": "20px",
                "font-weight": "500"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/detail/walletDetail.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 钱包明细 -->\n<template>\n  <div class=\"wallet-detail\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <el-form :model=\"formData\" ref=\"formData\" :inline=\"true\" class=\"ser-box\">\n      <el-input\n        placeholder=\"搜索币种简称或全称\"\n        v-model=\"formData.currency\"\n        @keyup.enter.native=\"search\"\n        @blur=\"search\"\n        class=\"input\"\n        clearable\n      >\n        <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n      </el-input>\n      <el-select v-model=\"formData.cause\" placeholder=\"交易类型\" clearable class=\"select\" @change=\"search\">\n        <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n      </el-select>\n    </el-form>\n    <div class=\"wallet-table\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n        <el-table-column prop=\"createdOn\" label=\"交易时间\" width=\"160\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"cause\" label=\"交易类型\" width=\"180\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"currency\" label=\"币种\" width=\"100\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"currency\" label=\"币种全称\" width=\"120\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"交易数量\" width=\"100\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"fee\" label=\"手续费\" width=\"100\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"address\" label=\"地址\" align=\"center\"></el-table-column>\n      </el-table>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"formData.pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_account_wallet } from './../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      formData: {\n        cause: '',\n        currency: '',\n        latelyDay: 14,\n        pageSize: 10,\n        pageNo: 1\n      },\n      options: [\n        {\n          value: '10004',\n          label: '转出'\n        },\n        {\n          value: '10005',\n          label: '转入'\n        },\n        {\n          value: '10009',\n          label: '充币'\n        },\n        {\n          value: '10010',\n          label: '提币'\n        }\n      ],\n      value: '',\n      beginTime: '',\n      endTime: '',\n      serAdvert: '',\n      layout: 'prev, pager, next',\n      total: 100,\n      currentPage: 1,\n      tableData: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      this.formData.pageNo = 1;\n      this.currentPage = 1;\n      this.getTableData();\n    },\n    async getTableData() {\n      try {\n        let res = await get_account_wallet(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    init() {\n      this.getTableData();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.formData.pageNo = 1;\n      this.formData.pageSize = val;\n      this.getTableData();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.formData.pageNo = val;\n      this.currentPage = val;\n      this.getTableData();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 钱包明细 -->\n<template>\n  <div class=\"wallet-detail\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <el-form :model=\"formData\" ref=\"formData\" :inline=\"true\" class=\"ser-box\">\n      <el-input\n        placeholder=\"搜索币种简称或全称\"\n        v-model=\"formData.currency\"\n        @keyup.enter.native=\"search\"\n        @blur=\"search\"\n        class=\"input\"\n        clearable\n      >\n        <i slot=\"prefix\" class=\"el-input__icon el-icon-search\" style=\"font-size: 16px\" @click=\"search\"></i>\n      </el-input>\n      <el-select v-model=\"formData.cause\" placeholder=\"交易类型\" clearable class=\"select\" @change=\"search\">\n        <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n      </el-select>\n    </el-form>\n    <div class=\"wallet-table\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n        <el-table-column prop=\"createdOn\" label=\"交易时间\" width=\"160\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"cause\" label=\"交易类型\" width=\"180\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"currency\" label=\"币种\" width=\"100\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"currency\" label=\"币种全称\" width=\"120\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"交易数量\" width=\"100\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"fee\" label=\"手续费\" width=\"100\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"address\" label=\"地址\" align=\"center\"></el-table-column>\n      </el-table>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"formData.pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_account_wallet } from './../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      formData: {\n        cause: '',\n        currency: '',\n        latelyDay: 14,\n        pageSize: 10,\n        pageNo: 1\n      },\n      options: [\n        {\n          value: '10004',\n          label: '转出'\n        },\n        {\n          value: '10005',\n          label: '转入'\n        },\n        {\n          value: '10009',\n          label: '充币'\n        },\n        {\n          value: '10010',\n          label: '提币'\n        }\n      ],\n      value: '',\n      beginTime: '',\n      endTime: '',\n      serAdvert: '',\n      layout: 'prev, pager, next',\n      total: 100,\n      currentPage: 1,\n      tableData: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      this.formData.pageNo = 1;\n      this.currentPage = 1;\n      this.getTableData();\n    },\n    async getTableData() {\n      try {\n        let res = await get_account_wallet(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    init() {\n      this.getTableData();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.formData.pageNo = 1;\n      this.formData.pageSize = val;\n      this.getTableData();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.formData.pageNo = val;\n      this.currentPage = val;\n      this.getTableData();\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.wallet-detail .wallet-table .warning-row {\n  background: #f7f7fa;\n}\n.wallet-detail .wallet-table .success-row {\n  background: #fff;\n}\n.wallet-detail .wallet-table .el-table td,\n.wallet-detail .wallet-table .el-table th.is-leaf {\n  border: none;\n}\n.wallet-detail .wallet-table .el-table th {\n  background-color: #9297a3;\n  color: #151f34;\n}\n.wallet-detail .wallet-table .el-table::before {\n  height: 0;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.wallet-detail {\n  box-sizing: border-box;\n  padding: 30px 20px;\n  .back {\n    width: 100px;\n    cursor: pointer;\n    color: #151f34;\n    font-size: 16px;\n    .el-icon-arrow-left {\n      color: #9497a3;\n      margin-right: 10px;\n      font-weight: 500;\n    }\n  }\n  .ser-box {\n    margin: 35px 0 30px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    .input {\n      width: 314px;\n    }\n\n    .middle {\n      display: inline-block;\n      margin: 0 10px;\n      font-size: 20px;\n      font-weight: 500;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".wallet-detail .wallet-table .warning-row": {
          "background": "#f7f7fa"
        },
        ".wallet-detail .wallet-table .success-row": {
          "background": "#fff"
        },
        ".wallet-detail .wallet-table .el-table td,.wallet-detail .wallet-table .el-table th.is-leaf": {
          "border": "none"
        },
        ".wallet-detail .wallet-table .el-table th": {
          "background-color": "#9297a3",
          "color": "#151f34"
        },
        ".wallet-detail .wallet-table .el-table::before": {
          "height": "0"
        }
      },
      {
        ".wallet-detail": {
          "box-sizing": "border-box",
          "padding": "30px 20px",
          ".back": {
            "width": "100px",
            "cursor": "pointer",
            "color": "#151f34",
            "font-size": "16px",
            ".el-icon-arrow-left": {
              "color": "#9497a3",
              "margin-right": "10px",
              "font-weight": "500"
            }
          },
          ".ser-box": {
            "margin": "35px 0 30px",
            "width": "100%",
            "display": "flex",
            "justify-content": "space-between",
            ".input": {
              "width": "314px"
            },
            ".middle": {
              "display": "inline-block",
              "margin": "0 10px",
              "font-size": "20px",
              "font-weight": "500"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/fundDetail/index.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {
      "1": "@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';"
    },
    "keepContent": "<!-- 资金详情 -->\n<template>\n  <div class=\"fund-detail\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <div class=\"currency-type\">\n      <el-row>\n        <el-col :span=\"2\" class=\"card-avatar\">\n          <el-avatar :class=\"`ICON_${this.$route.query.id}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n        </el-col>\n        <el-col :span=\"18\" class=\"card-con\">\n          <p>{{ formData.currency }}</p>\n        </el-col>\n        <el-col :span=\"4\" class=\"card-money\">\n          <p>{{ balance }}</p>\n        </el-col>\n      </el-row>\n    </div>\n    <el-form\n      :model=\"formData\"\n      ref=\"formData\"\n      :inline=\"true\"\n      class=\"ser-box\"\n      v-if=\"this.$route.query.type == '1001' || this.$route.query.type == '1201'\"\n    >\n      <el-select\n        v-model=\"formData.cause\"\n        placeholder=\"交易类型\"\n        clearable\n        class=\"select\"\n        @blur=\"search\"\n        @change=\"search\"\n        v-if=\"!(this.$route.query.isMini == 1)\"\n      >\n        <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n      </el-select>\n      <div class=\"fund-btn\" v-if=\"this.$route.query.type == '1001'\">\n        <el-button type=\"info\" @click=\"goDetail('transfer')\">划转</el-button>\n        <el-button type=\"success\" @click=\"goDetail('withdraw')\">提币</el-button>\n        <el-button type=\"primary\" @click=\"goDetail('charging')\">充币</el-button>\n      </div>\n    </el-form>\n    <div class=\"fundore-btn\" v-if=\"this.$route.query.type == '1002'\">\n      <el-button type=\"info\" @click=\"goDetail('transfer')\">划转</el-button>\n    </div>\n    <div class=\"fund-table\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n        <el-table-column prop=\"createdOn\" label=\"交易时间\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"cause\" label=\"交易类型\" align=\"center\" v-if=\"type == 1001\"></el-table-column>\n        <el-table-column prop=\"tabName\" label=\"交易类型\" align=\"center\" v-if=\"type == 1201 || type == 1002\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"交易数量\" align=\"center\" v-if=\"type == 1001 || type == 1002\"></el-table-column>\n        <el-table-column prop=\"currency\" label=\"币种\" align=\"center\" v-if=\"type == 1201 || type == 1002\"></el-table-column>\n        <el-table-column prop=\"fee\" label=\"手续费\" align=\"center\" v-if=\"type == 1001\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"交易数量\" align=\"center\" v-if=\"type == 1201\"></el-table-column>\n      </el-table>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"formData.pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_account_wallet, get_account_ore, get_mining_wallet, get_funds_balance } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  // beforeRouteEnter:(to,from,next)=>{\n  //     // next(vm=>{\n  //     //     // alert(vm.num)\n  //     //\n  //     //     if(from.path == '/app/funds/general/wallet'){\n  //     //       this.path = 'wallet'\n  //     //     } else if(from.path == '/app/funds/general/ore') {\n  //     //       this.path = 'ore'\n  //     //     }\n  //     // })\n  //     next(vm => {\n  //       this.pa\n  //     })\n  // },\n  data() {\n    //这里存放数据\n    return {\n      formData: {\n        accountType: 0,\n        currency: this.$route.query.id,\n        pageSize: 10,\n        pageNo: 1\n      },\n      options: [\n        {\n          value: '10004',\n          label: '转出'\n        },\n        {\n          value: '10005',\n          label: '转入'\n        },\n        {\n          value: '10009',\n          label: '充币'\n        },\n        {\n          value: '10010',\n          label: '提币'\n        }\n      ],\n      value: '',\n      beginTime: '',\n      endTime: '',\n      serAdvert: '',\n      layout: 'prev, pager, next',\n      total: 100,\n      currentPage: 1,\n      tableData: [],\n      type: this.$route.query.type,\n      balance: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      this.formData.accountType = Number(this.$route.query.type);\n      this.formData.pageNo = 1;\n      this.currentPage = 1;\n      if (this.$route.query.type == '1001') {\n        this.getWallet();\n      } else if (this.$route.query.type == '1201') {\n        this.getOre();\n      } else if (this.$route.query.type == '1002') {\n        this.getMining();\n      }\n    },\n    async getWallet() {\n      try {\n        let res = await get_account_wallet(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getOre() {\n      try {\n        let res = await get_account_ore(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getMining() {\n      try {\n        let res = await get_mining_wallet(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    init() {\n      this.search();\n    },\n    goDetail(con) {\n      this.$router.push({\n        path: `/app/${con}`,\n        query: {\n          id: this.$route.query.id,\n          balance: this.$route.query.balance,\n          type: this.$route.query.type\n        }\n      });\n    },\n    goBack() {\n      this.$router.go(-1);\n      // this.$router.push({\n      //   path: ''\n      // })\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.formData.pageNo = 1;\n      this.formData.pageSize = val;\n      if (this.$route.query.type == '1001') {\n        this.getWallet();\n      } else if (this.$route.query.type == '1201') {\n        this.getOre();\n      } else if (this.$route.query.type == '1002') {\n        this.getMining();\n      }\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.formData.pageNo = val;\n      this.currentPage = val;\n      if (this.$route.query.type == '1001') {\n        this.getWallet();\n      } else if (this.$route.query.type == '1201') {\n        this.getOre();\n      } else if (this.$route.query.type == '1002') {\n        this.getMining();\n      }\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    },\n    async getBalance() {\n      let res = await get_funds_balance({\n        currency: this.$route.query.id,\n        accountType: this.$route.query.type\n      });\n      if (res.code == 200) {\n        this.balance = res.data.balance;\n      } else {\n        console.log(res.msg);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n    this.getBalance();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beffundCreate() {}, //生命周期 - 创建之前\n  beffundMount() {}, //生命周期 - 挂载之前\n  beffundUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beffundDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 资金详情 -->\n<template>\n  <div class=\"fund-detail\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <div class=\"currency-type\">\n      <el-row>\n        <el-col :span=\"2\" class=\"card-avatar\">\n          <el-avatar :class=\"`ICON_${this.$route.query.id}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n        </el-col>\n        <el-col :span=\"18\" class=\"card-con\">\n          <p>{{ formData.currency }}</p>\n        </el-col>\n        <el-col :span=\"4\" class=\"card-money\">\n          <p>{{ balance }}</p>\n        </el-col>\n      </el-row>\n    </div>\n    <el-form\n      :model=\"formData\"\n      ref=\"formData\"\n      :inline=\"true\"\n      class=\"ser-box\"\n      v-if=\"this.$route.query.type == '1001' || this.$route.query.type == '1201'\"\n    >\n      <el-select\n        v-model=\"formData.cause\"\n        placeholder=\"交易类型\"\n        clearable\n        class=\"select\"\n        @blur=\"search\"\n        @change=\"search\"\n        v-if=\"!(this.$route.query.isMini == 1)\"\n      >\n        <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n      </el-select>\n      <div class=\"fund-btn\" v-if=\"this.$route.query.type == '1001'\">\n        <el-button type=\"info\" @click=\"goDetail('transfer')\">划转</el-button>\n        <el-button type=\"success\" @click=\"goDetail('withdraw')\">提币</el-button>\n        <el-button type=\"primary\" @click=\"goDetail('charging')\">充币</el-button>\n      </div>\n    </el-form>\n    <div class=\"fundore-btn\" v-if=\"this.$route.query.type == '1002'\">\n      <el-button type=\"info\" @click=\"goDetail('transfer')\">划转</el-button>\n    </div>\n    <div class=\"fund-table\">\n      <el-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :border=\"false\">\n        <el-table-column prop=\"createdOn\" label=\"交易时间\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"cause\" label=\"交易类型\" align=\"center\" v-if=\"type == 1001\"></el-table-column>\n        <el-table-column prop=\"tabName\" label=\"交易类型\" align=\"center\" v-if=\"type == 1201 || type == 1002\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"交易数量\" align=\"center\" v-if=\"type == 1001 || type == 1002\"></el-table-column>\n        <el-table-column prop=\"currency\" label=\"币种\" align=\"center\" v-if=\"type == 1201 || type == 1002\"></el-table-column>\n        <el-table-column prop=\"fee\" label=\"手续费\" align=\"center\" v-if=\"type == 1001\"></el-table-column>\n        <el-table-column prop=\"amount\" label=\"交易数量\" align=\"center\" v-if=\"type == 1201\"></el-table-column>\n      </el-table>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"formData.pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_account_wallet, get_account_ore, get_mining_wallet, get_funds_balance } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  // beforeRouteEnter:(to,from,next)=>{\n  //     // next(vm=>{\n  //     //     // alert(vm.num)\n  //     //\n  //     //     if(from.path == '/app/funds/general/wallet'){\n  //     //       this.path = 'wallet'\n  //     //     } else if(from.path == '/app/funds/general/ore') {\n  //     //       this.path = 'ore'\n  //     //     }\n  //     // })\n  //     next(vm => {\n  //       this.pa\n  //     })\n  // },\n  data() {\n    //这里存放数据\n    return {\n      formData: {\n        accountType: 0,\n        currency: this.$route.query.id,\n        pageSize: 10,\n        pageNo: 1\n      },\n      options: [\n        {\n          value: '10004',\n          label: '转出'\n        },\n        {\n          value: '10005',\n          label: '转入'\n        },\n        {\n          value: '10009',\n          label: '充币'\n        },\n        {\n          value: '10010',\n          label: '提币'\n        }\n      ],\n      value: '',\n      beginTime: '',\n      endTime: '',\n      serAdvert: '',\n      layout: 'prev, pager, next',\n      total: 100,\n      currentPage: 1,\n      tableData: [],\n      type: this.$route.query.type,\n      balance: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    search() {\n      this.formData.accountType = Number(this.$route.query.type);\n      this.formData.pageNo = 1;\n      this.currentPage = 1;\n      if (this.$route.query.type == '1001') {\n        this.getWallet();\n      } else if (this.$route.query.type == '1201') {\n        this.getOre();\n      } else if (this.$route.query.type == '1002') {\n        this.getMining();\n      }\n    },\n    async getWallet() {\n      try {\n        let res = await get_account_wallet(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getOre() {\n      try {\n        let res = await get_account_ore(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getMining() {\n      try {\n        let res = await get_mining_wallet(this.formData);\n        this.tableData = res.data.rows;\n        this.total = res.data.totalRow;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    init() {\n      this.search();\n    },\n    goDetail(con) {\n      this.$router.push({\n        path: `/app/${con}`,\n        query: {\n          id: this.$route.query.id,\n          balance: this.$route.query.balance,\n          type: this.$route.query.type\n        }\n      });\n    },\n    goBack() {\n      this.$router.go(-1);\n      // this.$router.push({\n      //   path: ''\n      // })\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.formData.pageNo = 1;\n      this.formData.pageSize = val;\n      if (this.$route.query.type == '1001') {\n        this.getWallet();\n      } else if (this.$route.query.type == '1201') {\n        this.getOre();\n      } else if (this.$route.query.type == '1002') {\n        this.getMining();\n      }\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.formData.pageNo = val;\n      this.currentPage = val;\n      if (this.$route.query.type == '1001') {\n        this.getWallet();\n      } else if (this.$route.query.type == '1201') {\n        this.getOre();\n      } else if (this.$route.query.type == '1002') {\n        this.getMining();\n      }\n    },\n    tableRowClassName({ rowIndex }) {\n      if (rowIndex % 2 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 2 === 0) {\n        return 'success-row';\n      }\n      return '';\n    },\n    async getBalance() {\n      let res = await get_funds_balance({\n        currency: this.$route.query.id,\n        accountType: this.$route.query.type\n      });\n      if (res.code == 200) {\n        this.balance = res.data.balance;\n      } else {\n        console.log(res.msg);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n    this.getBalance();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beffundCreate() {}, //生命周期 - 创建之前\n  beffundMount() {}, //生命周期 - 挂载之前\n  beffundUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beffundDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.fund-detail .fund-table .warning-row {\n  background: #f7f7fa;\n}\n.fund-detail .fund-table .success-row {\n  background: #fff;\n}\n.fund-detail .fund-table .el-table td,\n.fund-detail .fund-table .el-table th.is-leaf {\n  border: none;\n}\n.fund-detail .fund-table .el-table th {\n  background-color: #9297a3;\n  color: #151f34;\n}\n/*.fund-detail .fund-table .el-table::beffund {*/\n/*  height: 0;*/\n/*}*/\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';\n.fund-detail {\n  box-sizing: border-box;\n  padding: 30px 20px;\n  .fundore-btn {\n    margin-bottom: 20px;\n    text-align: right;\n  }\n  .back {\n    width: 100px;\n    cursor: pointer;\n    color: #151f34;\n    font-size: 16px;\n    .el-icon-arrow-left {\n      color: #9497a3;\n      margin-right: 10px;\n      font-weight: 500;\n    }\n  }\n  .currency-type {\n    margin: 30px 0;\n    .card-avatar {\n      text-align: center;\n      .avatar {\n        background-size: 40px 40px;\n        cursor: pointer;\n      }\n    }\n    .card-con {\n      p {\n        height: 20px;\n        font-size: 14px;\n        font-weight: 400;\n        color: rgba(21, 31, 52, 1);\n        line-height: 40px;\n        // &:nth-child(2) {\n        //   height: 17px;\n        //   font-size: 12px;\n        //   font-weight: 400;\n        //   color: rgba(153, 153, 153, 1);\n        //   line-height: 17px;\n        // }\n      }\n    }\n  }\n  .ser-box {\n    margin: 35px 0 30px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    .input {\n      width: 314px;\n    }\n    .time {\n      .middle {\n        display: inline-block;\n        margin: 0 10px;\n        font-size: 20px;\n        font-weight: 500;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".fund-detail .fund-table .warning-row": {
          "background": "#f7f7fa"
        },
        ".fund-detail .fund-table .success-row": {
          "background": "#fff"
        },
        ".fund-detail .fund-table .el-table td,.fund-detail .fund-table .el-table th.is-leaf": {
          "border": "none"
        },
        ".fund-detail .fund-table .el-table th": {
          "background-color": "#9297a3",
          "color": "#151f34"
        }
      },
      {
        ".fund-detail": {
          "box-sizing": "border-box",
          "padding": "30px 20px",
          ".fundore-btn": {
            "margin-bottom": "20px",
            "text-align": "right"
          },
          ".back": {
            "width": "100px",
            "cursor": "pointer",
            "color": "#151f34",
            "font-size": "16px",
            ".el-icon-arrow-left": {
              "color": "#9497a3",
              "margin-right": "10px",
              "font-weight": "500"
            }
          },
          ".currency-type": {
            "margin": "30px 0",
            ".card-avatar": {
              "text-align": "center",
              ".avatar": {
                "background-size": "40px 40px",
                "cursor": "pointer"
              }
            },
            ".card-con": {
              "p": {
                "height": "20px",
                "font-size": "14px",
                "font-weight": "400",
                "color": "rgba(21, 31, 52, 1)",
                "line-height": "40px"
              }
            }
          },
          ".ser-box": {
            "margin": "35px 0 30px",
            "width": "100%",
            "display": "flex",
            "justify-content": "space-between",
            ".input": {
              "width": "314px"
            },
            ".time": {
              ".middle": {
                "display": "inline-block",
                "margin": "0 10px",
                "font-size": "20px",
                "font-weight": "500"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/fundDetail/handle/charging.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {
      "0": "@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';"
    },
    "keepContent": "<!-- 充币 -->\n<template>\n  <div class=\"charging\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <div class=\"charg-form\">\n      <el-form label-width=\"100px\">\n        <el-form-item label=\"币种\">\n          <div class=\"currency\">\n            <el-avatar :class=\"`ICON_${this.$route.query.id}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            <div\n              style=\"\n                display: inline-block;\n                font-weight: 400;\n                line-height: 20px;\n                margin-left: 8px;\n              \"\n            >\n              <span style=\"color: #151F34; font-size: 14px; line-height: 20px\">{{ this.$route.query.id }}</span>\n            </div>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"链类型\" v-if=\"this.$route.query.id == 'USDT'\">\n          <el-radio-group v-model=\"radio\" v-for=\"(item, index) in chainName\" :key=\"index\" @change=\"changeAddress(item)\">\n            <el-radio-button :label=\"item\"></el-radio-button>\n          </el-radio-group>\n          <div style=\"font-size: 12px; line-height: 30px; color: #999\">\n            选择链类型获取钱包地址\n          </div>\n          <!-- <el-radio v-model=\"formData.radio1\" label=\"1\" border>OMNI</el-radio>\n            <el-radio v-model=\"formData.radio1\" label=\"2\" border>ERC20</el-radio>\n          <el-radio v-model=\"formData.radio1\" label=\"3\" border>TRC20</el-radio>-->\n        </el-form-item>\n        <el-form-item label=\"钱包地址\">\n          <span class=\"address\" v-if=\"address\" id=\"copyMy\">{{ address }}</span>\n          <span class=\"copy\" v-if=\"address\" @click=\"copyFn()\">复制地址</span>\n          <div class=\"code\">\n            <div id=\"qrcode\" ref=\"qrcode\"></div>\n            <a class=\"copy-btn\" v-if=\"address\" @click=\"downloadImg\" style=\"cursor: pointer; line-height: 280px\">点击下载</a>\n          </div>\n        </el-form-item>\n      </el-form>\n      <div class=\"tip\">\n        <span class=\"tip-hed\">注意</span>\n        <div class=\"tip-con\">\n          1、请勿向上述地址充值任何非USDT资产，否则资产将不可找回\n          <br />2、您充值到上述地址后，需要整个网络节点确认\n          <br />\n          3、最小充值金额：{{ this.minInVol }}，小于最小金额的充值将不会上账且无法退回\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_currency, get_recharge_address } from '../../server';\nimport QRCode from 'qrcodejs2-didi';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      radio: '',\n      minInVol: '', //最小充值\n      maxInVol: '', //最大充值\n      chainName: [],\n      address: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    // 复制\n    copyFn() {\n      let val = document.getElementById('copyMy');\n      window.getSelection().selectAllChildren(val);\n      document.execCommand('Copy');\n      this.$message.success('复制成功');\n    },\n    // 下载二维码\n    downloadImg() {\n      let myCanvas = document.getElementById('qrcode').getElementsByTagName('canvas');\n      let a = document.createElement('a');\n      a.href = myCanvas[0].toDataURL('image/png');\n      a.download = '地址二维码';\n      a.click();\n      this.$message({\n        message: '正在下载保存'\n      });\n    },\n    // 展示二维码\n    payOrder() {\n      this.innerVisible = true;\n      // 二维码内容,一般是由后台返回的跳转链接,这里是写死的一个链接\n      this.qrcode = this.address;\n      // 使用$nextTick确保数据渲染\n      this.$nextTick(() => {\n        this.crateQrcode();\n      });\n    },\n    // 生成二维码\n    crateQrcode() {\n      this.closeCode();\n      this.qr = new QRCode('qrcode', {\n        width: 150,\n        height: 150, // 高度\n        text: this.qrcode, // 二维码内容\n        render: 'canvas' // 设置渲染方式（有两种方式 table和canvas，默认是canvas）\n        // background: '#f0f'\n        // foreground: '#ff0'\n      });\n      //\n    },\n    // 关闭弹框,清除已经生成的二维码\n    closeCode() {\n      this.$refs.qrcode.innerHTML = '';\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    async changeAddress(type) {\n      try {\n        let response = await get_recharge_address({\n          currency: this.$route.query.id,\n          linkType: type\n        });\n        this.address = response.data.address;\n\n        this.payOrder();\n      } catch (error) {\n        this.address = '';\n        this.payOrder();\n      }\n    },\n    async getCurrency() {\n      try {\n        let param = {\n          currency: this.$route.query.id\n        };\n        let res = await get_currency(param);\n\n        this.chainName = res.data.chainName;\n        this.minInVol = res.data.minInVol;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getAddress() {\n      try {\n        let response = await get_recharge_address({\n          currency: this.$route.query.id\n        });\n        this.address = response.data.address;\n\n        this.payOrder();\n      } catch (error) {\n        this.address = '';\n        this.payOrder();\n      }\n    },\n    init() {\n      this.getCurrency();\n      if (this.$route.query.id != 'USDT') {\n        this.getAddress();\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 充币 -->\n<template>\n  <div class=\"charging\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <div class=\"charg-form\">\n      <el-form label-width=\"100px\">\n        <el-form-item label=\"币种\">\n          <div class=\"currency\">\n            <el-avatar :class=\"`ICON_${this.$route.query.id}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            <div\n              style=\"\n                display: inline-block;\n                font-weight: 400;\n                line-height: 20px;\n                margin-left: 8px;\n              \"\n            >\n              <span style=\"color: #151F34; font-size: 14px; line-height: 20px\">{{ this.$route.query.id }}</span>\n            </div>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"链类型\" v-if=\"this.$route.query.id == 'USDT'\">\n          <el-radio-group v-model=\"radio\" v-for=\"(item, index) in chainName\" :key=\"index\" @change=\"changeAddress(item)\">\n            <el-radio-button :label=\"item\"></el-radio-button>\n          </el-radio-group>\n          <div style=\"font-size: 12px; line-height: 30px; color: #999\">\n            选择链类型获取钱包地址\n          </div>\n          <!-- <el-radio v-model=\"formData.radio1\" label=\"1\" border>OMNI</el-radio>\n            <el-radio v-model=\"formData.radio1\" label=\"2\" border>ERC20</el-radio>\n          <el-radio v-model=\"formData.radio1\" label=\"3\" border>TRC20</el-radio>-->\n        </el-form-item>\n        <el-form-item label=\"钱包地址\">\n          <span class=\"address\" v-if=\"address\" id=\"copyMy\">{{ address }}</span>\n          <span class=\"copy\" v-if=\"address\" @click=\"copyFn()\">复制地址</span>\n          <div class=\"code\">\n            <div id=\"qrcode\" ref=\"qrcode\"></div>\n            <a class=\"copy-btn\" v-if=\"address\" @click=\"downloadImg\" style=\"cursor: pointer; line-height: 280px\">点击下载</a>\n          </div>\n        </el-form-item>\n      </el-form>\n      <div class=\"tip\">\n        <span class=\"tip-hed\">注意</span>\n        <div class=\"tip-con\">\n          1、请勿向上述地址充值任何非USDT资产，否则资产将不可找回\n          <br />2、您充值到上述地址后，需要整个网络节点确认\n          <br />\n          3、最小充值金额：{{ this.minInVol }}，小于最小金额的充值将不会上账且无法退回\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_currency, get_recharge_address } from '../../server';\nimport QRCode from 'qrcodejs2-didi';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      radio: '',\n      minInVol: '', //最小充值\n      maxInVol: '', //最大充值\n      chainName: [],\n      address: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    // 复制\n    copyFn() {\n      let val = document.getElementById('copyMy');\n      window.getSelection().selectAllChildren(val);\n      document.execCommand('Copy');\n      this.$message.success('复制成功');\n    },\n    // 下载二维码\n    downloadImg() {\n      let myCanvas = document.getElementById('qrcode').getElementsByTagName('canvas');\n      let a = document.createElement('a');\n      a.href = myCanvas[0].toDataURL('image/png');\n      a.download = '地址二维码';\n      a.click();\n      this.$message({\n        message: '正在下载保存'\n      });\n    },\n    // 展示二维码\n    payOrder() {\n      this.innerVisible = true;\n      // 二维码内容,一般是由后台返回的跳转链接,这里是写死的一个链接\n      this.qrcode = this.address;\n      // 使用$nextTick确保数据渲染\n      this.$nextTick(() => {\n        this.crateQrcode();\n      });\n    },\n    // 生成二维码\n    crateQrcode() {\n      this.closeCode();\n      this.qr = new QRCode('qrcode', {\n        width: 150,\n        height: 150, // 高度\n        text: this.qrcode, // 二维码内容\n        render: 'canvas' // 设置渲染方式（有两种方式 table和canvas，默认是canvas）\n        // background: '#f0f'\n        // foreground: '#ff0'\n      });\n      //\n    },\n    // 关闭弹框,清除已经生成的二维码\n    closeCode() {\n      this.$refs.qrcode.innerHTML = '';\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    async changeAddress(type) {\n      try {\n        let response = await get_recharge_address({\n          currency: this.$route.query.id,\n          linkType: type\n        });\n        this.address = response.data.address;\n\n        this.payOrder();\n      } catch (error) {\n        this.address = '';\n        this.payOrder();\n      }\n    },\n    async getCurrency() {\n      try {\n        let param = {\n          currency: this.$route.query.id\n        };\n        let res = await get_currency(param);\n\n        this.chainName = res.data.chainName;\n        this.minInVol = res.data.minInVol;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getAddress() {\n      try {\n        let response = await get_recharge_address({\n          currency: this.$route.query.id\n        });\n        this.address = response.data.address;\n\n        this.payOrder();\n      } catch (error) {\n        this.address = '';\n        this.payOrder();\n      }\n    },\n    init() {\n      this.getCurrency();\n      if (this.$route.query.id != 'USDT') {\n        this.getAddress();\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';\n//@import url(); 引入公共css类\n.charging {\n  box-sizing: border-box;\n  padding: 30px 20px;\n  .back {\n    width: 100px;\n    cursor: pointer;\n    color: #151f34;\n    font-size: 16px;\n    .el-icon-arrow-left {\n      color: #9497a3;\n      margin-right: 10px;\n      font-weight: 500;\n    }\n  }\n  .charg-form {\n    margin-top: 30px;\n    .avatar {\n      background-size: 40px 40px;\n    }\n    .address {\n      display: inline-block;\n      width: 310px;\n      height: 20px;\n      font-size: 14px;\n      font-weight: 400;\n      color: rgba(21, 31, 52, 1);\n      line-height: 20px;\n    }\n    .copy {\n      display: inline-block;\n      margin-left: 20px;\n      width: 56px;\n      height: 20px;\n      font-size: 14px;\n      font-weight: 400;\n      color: rgba(47, 84, 235, 1);\n      line-height: 20px;\n      cursor: pointer;\n    }\n    .code {\n      display: flex;\n      // justify-items: ;\n      .copy-btn {\n        width: 56px;\n        height: 20px;\n        font-size: 14px;\n        font-weight: 400;\n        color: rgba(47, 84, 235, 1);\n        line-height: 180px;\n        margin-left: 20px;\n      }\n    }\n    .tip {\n      color: rgba(245, 36, 45, 1);\n      margin-top: 60px;\n      .tip-hed {\n        display: inline-block;\n        width: 80px;\n        height: 63px;\n        font-size: 14px;\n        font-weight: 400;\n        text-align: center;\n        vertical-align: top;\n      }\n      .tip-con {\n        display: inline-block;\n        width: 500px;\n        height: 63px;\n        font-size: 14px;\n\n        font-weight: 400;\n        line-height: 21px;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".charging": {
          "box-sizing": "border-box",
          "padding": "30px 20px",
          ".back": {
            "width": "100px",
            "cursor": "pointer",
            "color": "#151f34",
            "font-size": "16px",
            ".el-icon-arrow-left": {
              "color": "#9497a3",
              "margin-right": "10px",
              "font-weight": "500"
            }
          },
          ".charg-form": {
            "margin-top": "30px",
            ".avatar": {
              "background-size": "40px 40px"
            },
            ".address": {
              "display": "inline-block",
              "width": "310px",
              "height": "20px",
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(21, 31, 52, 1)",
              "line-height": "20px"
            },
            ".copy": {
              "display": "inline-block",
              "margin-left": "20px",
              "width": "56px",
              "height": "20px",
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(47, 84, 235, 1)",
              "line-height": "20px",
              "cursor": "pointer"
            },
            ".code": {
              "display": "flex",
              ".copy-btn": {
                "width": "56px",
                "height": "20px",
                "font-size": "14px",
                "font-weight": "400",
                "color": "rgba(47, 84, 235, 1)",
                "line-height": "180px",
                "margin-left": "20px"
              }
            },
            ".tip": {
              "color": "rgba(245, 36, 45, 1)",
              "margin-top": "60px",
              ".tip-hed": {
                "display": "inline-block",
                "width": "80px",
                "height": "63px",
                "font-size": "14px",
                "font-weight": "400",
                "text-align": "center",
                "vertical-align": "top"
              },
              ".tip-con": {
                "display": "inline-block",
                "width": "500px",
                "height": "63px",
                "font-size": "14px",
                "font-weight": "400",
                "line-height": "21px"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/fundDetail/handle/transfer.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {
      "0": "@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';"
    },
    "keepContent": "<!-- 划转 -->\n<template>\n  <div class=\"transfer\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <div class=\"trans-form\">\n      <el-form ref=\"formData\" :model=\"formData\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"币种\">\n          <div class=\"currency\">\n            <el-avatar :class=\"`ICON_${this.$route.query.id}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            <div\n              style=\"\n                display: inline-block;\n                font-weight: 400;\n                line-height: 20px;\n                margin-left: 8px;\n              \"\n            >\n              <span style=\"color: #151F34; font-size: 14px; line-height: 20px\">{{ this.$route.query.id }}</span>\n            </div>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"转出账户\" prop=\"transferFrom\">\n          <el-select v-model=\"formData.transferFrom\" placeholder=\"请选择账户\">\n            <el-option v-for=\"item in options1\" :key=\"item.type\" :label=\"item.value\" :value=\"item.type\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"转入账户\" prop=\"transferTo\">\n          <el-select v-model=\"formData.transferTo\" placeholder=\"请选择账户\">\n            <el-option v-for=\"item in options\" :key=\"item.type\" :label=\"item.value\" :value=\"item.type\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"转出数量\" prop=\"transferCount\">\n          <el-input v-model=\"formData.transferCount\"></el-input>\n          <span class=\"num-text\" @click=\"clickMost()\">最大</span>\n          <div class=\"balance\">账户余额：{{ balance }} {{ this.$route.query.id }}</div>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"onSubmit('formData')\">确认划转</el-button>\n        </el-form-item>\n      </el-form>\n      <div class=\"tip\">\n        <span class=\"tip-hed\">温馨提示</span>\n        <div class=\"tip-con\">\n          • 请务必确认电脑及浏览器安全，防止信息被篡改或泄露。\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { support_account_types, account_transfer_num, get_account_transfer, get_currency, get_funds_balance } from '../../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    let validateCount = (rule, value, callback) => {\n      if (value < 1 && value != 0) {\n        if (value.toString().split('.')[1].length > this.miniScale) {\n          callback(new Error('最多只能有' + `${this.miniScale}` + '位小数'));\n          return;\n        }\n      }\n      if (value > this.balance && value != 0) {\n        callback(new Error('不可超过余额'));\n        return;\n      }\n      if (value == 0) {\n        callback(new Error('转出数量需大于0'));\n        return;\n      }\n      callback();\n    };\n    return {\n      options: [],\n      options1: [],\n      formData: {\n        currency: this.$route.query.id,\n        currencyPair: '',\n        transferTo: '',\n        transferFrom: '',\n        transferCount: '',\n        bizId: ''\n      },\n      rules: {\n        transferTo: [{ required: true, message: '请选择账户', trigger: 'blur' }],\n        transferFrom: [{ required: true, message: '请选择账户', trigger: 'blur' }],\n        transferCount: [\n          { required: true, message: '请输入数量', trigger: 'blur' },\n          {\n            pattern: /^[+]{0,1}(\\d+)$|^[+]{0,1}(\\d+\\.\\d+)$/,\n            message: '请输入正数'\n          },\n          { validator: validateCount, trigger: 'blur' }\n        ]\n      },\n      miniScale: '',\n      balance: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    // 点击最大\n    clickMost() {\n      let mostNum = parseFloat(this.balance);\n      this.formData.transferCount = mostNum;\n    },\n    onSubmit(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.transfer();\n        } else {\n          return false;\n        }\n      });\n    },\n    async transfer() {\n      try {\n        let res = await get_account_transfer(this.formData);\n        this.$message.success(res.msg);\n        this.resetForm('formData');\n        this.$router.go(-1);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    async getType() {\n      let currencyNow = {\n        currency: this.$route.query.id\n      };\n      // 获取币种小数位限制\n      let currencyStrict = await get_currency(currencyNow);\n      if (currencyStrict.code == 200) {\n        this.miniScale = currencyStrict.data.scale;\n      }\n      let param = {\n        types: this.$route.query.type,\n        currency: this.$route.query.id,\n        userType: JSON.parse(localStorage.userInfo).userType\n      };\n      // 获取账户类型\n      let res = await support_account_types(param);\n      if (res.code == 200) {\n        // let dataType = res.data.filter(item => {\n        //   return (item.type = \"\" + item.type);\n        // });\n        let dataType = res.data;\n        this.options = dataType;\n        //\n      }\n      // this.options = res.data\n\n      // 获取流水号\n      let resp = await account_transfer_num();\n      if (resp.code == 200) {\n        this.formData.bizId = resp.data;\n      }\n    },\n    async getBalance() {\n      let res = await get_funds_balance({\n        currency: this.$route.query.id,\n        accountType: this.$route.query.type\n      });\n      if (res.code == 200) {\n        this.balance = res.data.balance;\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getType();\n    this.getBalance();\n    this.options1 = this.$route.query.type == 1001 ? [{ type: 1001, value: '资金账户' }] : [{ type: 1002, value: '挖矿账户' }];\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 划转 -->\n<template>\n  <div class=\"transfer\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <div class=\"trans-form\">\n      <el-form ref=\"formData\" :model=\"formData\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"币种\">\n          <div class=\"currency\">\n            <el-avatar :class=\"`ICON_${this.$route.query.id}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            <div\n              style=\"\n                display: inline-block;\n                font-weight: 400;\n                line-height: 20px;\n                margin-left: 8px;\n              \"\n            >\n              <span style=\"color: #151F34; font-size: 14px; line-height: 20px\">{{ this.$route.query.id }}</span>\n            </div>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"转出账户\" prop=\"transferFrom\">\n          <el-select v-model=\"formData.transferFrom\" placeholder=\"请选择账户\">\n            <el-option v-for=\"item in options1\" :key=\"item.type\" :label=\"item.value\" :value=\"item.type\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"转入账户\" prop=\"transferTo\">\n          <el-select v-model=\"formData.transferTo\" placeholder=\"请选择账户\">\n            <el-option v-for=\"item in options\" :key=\"item.type\" :label=\"item.value\" :value=\"item.type\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"转出数量\" prop=\"transferCount\">\n          <el-input v-model=\"formData.transferCount\"></el-input>\n          <span class=\"num-text\" @click=\"clickMost()\">最大</span>\n          <div class=\"balance\">账户余额：{{ balance }} {{ this.$route.query.id }}</div>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"onSubmit('formData')\">确认划转</el-button>\n        </el-form-item>\n      </el-form>\n      <div class=\"tip\">\n        <span class=\"tip-hed\">温馨提示</span>\n        <div class=\"tip-con\">\n          • 请务必确认电脑及浏览器安全，防止信息被篡改或泄露。\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { support_account_types, account_transfer_num, get_account_transfer, get_currency, get_funds_balance } from '../../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    let validateCount = (rule, value, callback) => {\n      if (value < 1 && value != 0) {\n        if (value.toString().split('.')[1].length > this.miniScale) {\n          callback(new Error('最多只能有' + `${this.miniScale}` + '位小数'));\n          return;\n        }\n      }\n      if (value > this.balance && value != 0) {\n        callback(new Error('不可超过余额'));\n        return;\n      }\n      if (value == 0) {\n        callback(new Error('转出数量需大于0'));\n        return;\n      }\n      callback();\n    };\n    return {\n      options: [],\n      options1: [],\n      formData: {\n        currency: this.$route.query.id,\n        currencyPair: '',\n        transferTo: '',\n        transferFrom: '',\n        transferCount: '',\n        bizId: ''\n      },\n      rules: {\n        transferTo: [{ required: true, message: '请选择账户', trigger: 'blur' }],\n        transferFrom: [{ required: true, message: '请选择账户', trigger: 'blur' }],\n        transferCount: [\n          { required: true, message: '请输入数量', trigger: 'blur' },\n          {\n            pattern: /^[+]{0,1}(\\d+)$|^[+]{0,1}(\\d+\\.\\d+)$/,\n            message: '请输入正数'\n          },\n          { validator: validateCount, trigger: 'blur' }\n        ]\n      },\n      miniScale: '',\n      balance: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    // 点击最大\n    clickMost() {\n      let mostNum = parseFloat(this.balance);\n      this.formData.transferCount = mostNum;\n    },\n    onSubmit(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.transfer();\n        } else {\n          return false;\n        }\n      });\n    },\n    async transfer() {\n      try {\n        let res = await get_account_transfer(this.formData);\n        this.$message.success(res.msg);\n        this.resetForm('formData');\n        this.$router.go(-1);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    async getType() {\n      let currencyNow = {\n        currency: this.$route.query.id\n      };\n      // 获取币种小数位限制\n      let currencyStrict = await get_currency(currencyNow);\n      if (currencyStrict.code == 200) {\n        this.miniScale = currencyStrict.data.scale;\n      }\n      let param = {\n        types: this.$route.query.type,\n        currency: this.$route.query.id,\n        userType: JSON.parse(localStorage.userInfo).userType\n      };\n      // 获取账户类型\n      let res = await support_account_types(param);\n      if (res.code == 200) {\n        // let dataType = res.data.filter(item => {\n        //   return (item.type = \"\" + item.type);\n        // });\n        let dataType = res.data;\n        this.options = dataType;\n        //\n      }\n      // this.options = res.data\n\n      // 获取流水号\n      let resp = await account_transfer_num();\n      if (resp.code == 200) {\n        this.formData.bizId = resp.data;\n      }\n    },\n    async getBalance() {\n      let res = await get_funds_balance({\n        currency: this.$route.query.id,\n        accountType: this.$route.query.type\n      });\n      if (res.code == 200) {\n        this.balance = res.data.balance;\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getType();\n    this.getBalance();\n    this.options1 = this.$route.query.type == 1001 ? [{ type: 1001, value: '资金账户' }] : [{ type: 1002, value: '挖矿账户' }];\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';\n.transfer {\n  box-sizing: border-box;\n  padding: 30px 20px;\n  .back {\n    width: 100px;\n    cursor: pointer;\n    color: #151f34;\n    font-size: 16px;\n    .el-icon-arrow-left {\n      color: #9497a3;\n      margin-right: 10px;\n      font-weight: 500;\n    }\n  }\n  .trans-form {\n    margin-top: 30px;\n    .avatar {\n      background-size: 40px 40px;\n    }\n    .num-text {\n      display: inline-block;\n      width: 50px;\n      text-align: center;\n      height: 18px;\n      font-size: 13px;\n      font-weight: 400;\n      color: rgba(47, 84, 235, 1);\n      line-height: 18px;\n      cursor: pointer;\n    }\n    .balance {\n      margin-top: 10px;\n      width: 300px;\n      text-align: right;\n      height: 17px;\n      font-size: 12px;\n      font-weight: 400;\n      color: rgba(21, 31, 52, 1);\n      line-height: 17px;\n    }\n    .tip {\n      color: rgba(245, 36, 45, 1);\n      margin-top: 60px;\n      .tip-hed {\n        display: inline-block;\n        width: 80px;\n        height: 63px;\n        font-size: 14px;\n        font-weight: 400;\n        text-align: center;\n        vertical-align: top;\n      }\n      .tip-con {\n        display: inline-block;\n        width: 453px;\n        height: 63px;\n        font-size: 14px;\n\n        font-weight: 400;\n        line-height: 21px;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".transfer": {
          "box-sizing": "border-box",
          "padding": "30px 20px",
          ".back": {
            "width": "100px",
            "cursor": "pointer",
            "color": "#151f34",
            "font-size": "16px",
            ".el-icon-arrow-left": {
              "color": "#9497a3",
              "margin-right": "10px",
              "font-weight": "500"
            }
          },
          ".trans-form": {
            "margin-top": "30px",
            ".avatar": {
              "background-size": "40px 40px"
            },
            ".num-text": {
              "display": "inline-block",
              "width": "50px",
              "text-align": "center",
              "height": "18px",
              "font-size": "13px",
              "font-weight": "400",
              "color": "rgba(47, 84, 235, 1)",
              "line-height": "18px",
              "cursor": "pointer"
            },
            ".balance": {
              "margin-top": "10px",
              "width": "300px",
              "text-align": "right",
              "height": "17px",
              "font-size": "12px",
              "font-weight": "400",
              "color": "rgba(21, 31, 52, 1)",
              "line-height": "17px"
            },
            ".tip": {
              "color": "rgba(245, 36, 45, 1)",
              "margin-top": "60px",
              ".tip-hed": {
                "display": "inline-block",
                "width": "80px",
                "height": "63px",
                "font-size": "14px",
                "font-weight": "400",
                "text-align": "center",
                "vertical-align": "top"
              },
              ".tip-con": {
                "display": "inline-block",
                "width": "453px",
                "height": "63px",
                "font-size": "14px",
                "font-weight": "400",
                "line-height": "21px"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/fund-general/fundDetail/handle/withdraw.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {
      "0": "@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';"
    },
    "keepContent": "<!-- 充币 -->\n<template>\n  <div class=\"withdraw\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <div class=\"withd-form\">\n      <el-form ref=\"formData\" :model=\"formData\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"币种\">\n          <div class=\"currency\">\n            <el-avatar :class=\"`ICON_${this.$route.query.id}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            <div\n              style=\"\n                display: inline-block;\n                font-weight: 400;\n                line-height: 20px;\n                margin-left: 8px;\n              \"\n            >\n              <span style=\"color: #151F34; font-size: 14px; line-height: 20px\">{{ this.$route.query.id }}</span>\n            </div>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"提币地址\" prop=\"addressId\">\n          <el-select v-model=\"formData.addressId\" placeholder=\"请选择提币地址\">\n            <el-option v-for=\"item in addressList\" :key=\"item.addressId\" :label=\"item.address\" :value=\"item.addressId\">\n              <div style=\"line-height: 20px\">\n                <span style=\"font-size: 14px; color: #8492a6\">{{ item.currency }}</span>\n                <span style=\"font-size: 12px; margin-left: 10px\">链类型：{{ item.linkType }}</span>\n              </div>\n              <div style=\"line-height: 16px\">{{ item.address }}</div>\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"提币数量\" prop=\"actualAmount\">\n          <el-input v-model=\"formData.actualAmount\"></el-input>\n          <span class=\"num-text\" @click=\"clickMost()\">最大</span>\n          <div class=\"balance\">账户余额：{{ balance }}</div>\n        </el-form-item>\n        <el-form-item label=\"手续费\" prop=\"fee\">\n          <el-input v-model=\"formData.fee\"></el-input>\n          <div class=\"balance\">范围：{{ outFee }}-{{ maxOutFee }}</div>\n        </el-form-item>\n        <el-form-item label=\"资金密码\" prop=\"accountPassword\">\n          <el-input v-model=\"formData.accountPassword\" show-password></el-input>\n          <span class=\"num-text\" @click=\"forget\">忘记密码</span>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"onSubmit('formData')\">确认提币</el-button>\n        </el-form-item>\n      </el-form>\n      <div class=\"tip\">\n        <span class=\"tip-hed\">温馨提示</span>\n        <div class=\"tip-con\">\n          • 最小提币数量为：{{ minOutVol }} <br />•\n          为保障资金安全，当您账户安全策略变更、密码修改、我们会对提币进行人工审核，请耐心等待工作人员电话或邮件联系 <br />•\n          请务必确认电脑及浏览器安全，防止信息被篡改或泄露\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_currency, get_user_capitaldetail, get_withdraw_addressList, get_confirm_withdraw } from '../../server';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    let validateCount = (rule, value, callback) => {\n      if (value < this.minOutVol) {\n        callback(new Error('最小提币金额为' + `${this.minOutVol}`));\n        return;\n      }\n      if (value > this.maxOutVol) {\n        callback(new Error('最大提币金额为' + `${this.maxOutVol}`));\n        return;\n      }\n      callback();\n    };\n    let validateFee = (rule, value, callback) => {\n      if (value < this.outFee) {\n        callback(new Error('最小手续费为' + `${this.outFee}`));\n        return;\n      }\n      if (value > this.maxOutFee) {\n        callback(new Error('最大手续费为' + `${this.maxOutFee}`));\n        return;\n      }\n      callback();\n    };\n    //这里存放数据\n    return {\n      formData: {\n        currency: this.$route.query.id,\n        addressId: '',\n        fee: '',\n        actualAmount: '',\n        accountPassword: ''\n      },\n      rules: {\n        addressId: [{ required: true, message: '请选择地址', trigger: 'blur' }],\n        fee: [\n          { required: true, message: '请输入手续费', trigger: 'blur' },\n          {\n            pattern: /^[+]{0,1}(\\d+)$|^[+]{0,1}(\\d+\\.\\d+)$/,\n            message: '请输入正数'\n          },\n          { validator: validateFee, trigger: 'blur' }\n        ],\n        actualAmount: [\n          { required: true, message: '请输入提币数量', trigger: 'blur' },\n          {\n            pattern: /^[+]{0,1}(\\d+)$|^[+]{0,1}(\\d+\\.\\d+)$/,\n            message: '请输入正数'\n          },\n          { validator: validateCount, trigger: 'blur' }\n        ],\n        accountPassword: [{ required: true, message: '请输入密码', trigger: 'blur' }]\n      },\n      // linkType: [], //链类型\n      minOutVol: '', //最小提币额度\n      maxOutVol: '', //最大提币额度\n      outFee: '', //最小手续费\n      maxOutFee: '', //最大手续费\n      balance: '', //账户余额\n      addressList: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    forget() {\n      this.$router.push('/app/funds/tradepwd/email');\n    },\n    clickMost() {\n      if (this.maxOutVol >= this.balance) {\n        let mostNum = parseFloat(this.balance);\n        this.formData.actualAmount = mostNum;\n      } else {\n        let mostNum = parseFloat(this.maxOutVol);\n        this.formData.actualAmount = mostNum;\n      }\n    },\n    onSubmit(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.confirmWithDraw({\n            ...this.formData,\n            accountPassword: md5(this.formData.accountPassword)\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    async confirmWithDraw(data) {\n      try {\n        let res = await get_confirm_withdraw(data);\n        this.$message.success(res.msg);\n        this.resetForm('formData');\n        this.$router.go(-1);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    async init() {\n      // 获取币种配置\n      try {\n        let param = {\n          currency: this.$route.query.id\n        };\n        let res = await get_currency(param);\n\n        // this.linkType = res.data.chainName\n        this.minOutVol = parseFloat(res.data.minOutVol);\n        this.maxOutVol = parseFloat(res.data.maxOutVol);\n        this.outFee = parseFloat(res.data.outFee);\n        this.maxOutFee = parseFloat(res.data.maxOutFee);\n      } catch (error) {\n        console.error(error);\n      }\n      //\n      // 提币页面用户金额\n      try {\n        let param = {\n          currency: this.$route.query.id\n        };\n        let detailCurrency = await get_user_capitaldetail(param);\n\n        this.balance = detailCurrency.data.balance;\n      } catch (error) {\n        console.error(error);\n      }\n      // 地址簿列表查询(提币地址下拉框使用)\n      try {\n        let params = {\n          currency: this.$route.query.id,\n          pageNo: 1,\n          pageSize: 10\n        };\n        let addList = await get_withdraw_addressList(params);\n        //\n        this.addressList = addList.data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 充币 -->\n<template>\n  <div class=\"withdraw\">\n    <div class=\"back\" @click=\"goBack()\"><i class=\"el-icon-arrow-left\"></i>返回</div>\n    <div class=\"withd-form\">\n      <el-form ref=\"formData\" :model=\"formData\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"币种\">\n          <div class=\"currency\">\n            <el-avatar :class=\"`ICON_${this.$route.query.id}`\" class=\"avatar\" :size=\"40\"></el-avatar>\n            <div\n              style=\"\n                display: inline-block;\n                font-weight: 400;\n                line-height: 20px;\n                margin-left: 8px;\n              \"\n            >\n              <span style=\"color: #151F34; font-size: 14px; line-height: 20px\">{{ this.$route.query.id }}</span>\n            </div>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"提币地址\" prop=\"addressId\">\n          <el-select v-model=\"formData.addressId\" placeholder=\"请选择提币地址\">\n            <el-option v-for=\"item in addressList\" :key=\"item.addressId\" :label=\"item.address\" :value=\"item.addressId\">\n              <div style=\"line-height: 20px\">\n                <span style=\"font-size: 14px; color: #8492a6\">{{ item.currency }}</span>\n                <span style=\"font-size: 12px; margin-left: 10px\">链类型：{{ item.linkType }}</span>\n              </div>\n              <div style=\"line-height: 16px\">{{ item.address }}</div>\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"提币数量\" prop=\"actualAmount\">\n          <el-input v-model=\"formData.actualAmount\"></el-input>\n          <span class=\"num-text\" @click=\"clickMost()\">最大</span>\n          <div class=\"balance\">账户余额：{{ balance }}</div>\n        </el-form-item>\n        <el-form-item label=\"手续费\" prop=\"fee\">\n          <el-input v-model=\"formData.fee\"></el-input>\n          <div class=\"balance\">范围：{{ outFee }}-{{ maxOutFee }}</div>\n        </el-form-item>\n        <el-form-item label=\"资金密码\" prop=\"accountPassword\">\n          <el-input v-model=\"formData.accountPassword\" show-password></el-input>\n          <span class=\"num-text\" @click=\"forget\">忘记密码</span>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"onSubmit('formData')\">确认提币</el-button>\n        </el-form-item>\n      </el-form>\n      <div class=\"tip\">\n        <span class=\"tip-hed\">温馨提示</span>\n        <div class=\"tip-con\">\n          • 最小提币数量为：{{ minOutVol }} <br />•\n          为保障资金安全，当您账户安全策略变更、密码修改、我们会对提币进行人工审核，请耐心等待工作人员电话或邮件联系 <br />•\n          请务必确认电脑及浏览器安全，防止信息被篡改或泄露\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_currency, get_user_capitaldetail, get_withdraw_addressList, get_confirm_withdraw } from '../../server';\nimport { md5 } from '@/utils';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    let validateCount = (rule, value, callback) => {\n      if (value < this.minOutVol) {\n        callback(new Error('最小提币金额为' + `${this.minOutVol}`));\n        return;\n      }\n      if (value > this.maxOutVol) {\n        callback(new Error('最大提币金额为' + `${this.maxOutVol}`));\n        return;\n      }\n      callback();\n    };\n    let validateFee = (rule, value, callback) => {\n      if (value < this.outFee) {\n        callback(new Error('最小手续费为' + `${this.outFee}`));\n        return;\n      }\n      if (value > this.maxOutFee) {\n        callback(new Error('最大手续费为' + `${this.maxOutFee}`));\n        return;\n      }\n      callback();\n    };\n    //这里存放数据\n    return {\n      formData: {\n        currency: this.$route.query.id,\n        addressId: '',\n        fee: '',\n        actualAmount: '',\n        accountPassword: ''\n      },\n      rules: {\n        addressId: [{ required: true, message: '请选择地址', trigger: 'blur' }],\n        fee: [\n          { required: true, message: '请输入手续费', trigger: 'blur' },\n          {\n            pattern: /^[+]{0,1}(\\d+)$|^[+]{0,1}(\\d+\\.\\d+)$/,\n            message: '请输入正数'\n          },\n          { validator: validateFee, trigger: 'blur' }\n        ],\n        actualAmount: [\n          { required: true, message: '请输入提币数量', trigger: 'blur' },\n          {\n            pattern: /^[+]{0,1}(\\d+)$|^[+]{0,1}(\\d+\\.\\d+)$/,\n            message: '请输入正数'\n          },\n          { validator: validateCount, trigger: 'blur' }\n        ],\n        accountPassword: [{ required: true, message: '请输入密码', trigger: 'blur' }]\n      },\n      // linkType: [], //链类型\n      minOutVol: '', //最小提币额度\n      maxOutVol: '', //最大提币额度\n      outFee: '', //最小手续费\n      maxOutFee: '', //最大手续费\n      balance: '', //账户余额\n      addressList: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    forget() {\n      this.$router.push('/app/funds/tradepwd/email');\n    },\n    clickMost() {\n      if (this.maxOutVol >= this.balance) {\n        let mostNum = parseFloat(this.balance);\n        this.formData.actualAmount = mostNum;\n      } else {\n        let mostNum = parseFloat(this.maxOutVol);\n        this.formData.actualAmount = mostNum;\n      }\n    },\n    onSubmit(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.confirmWithDraw({\n            ...this.formData,\n            accountPassword: md5(this.formData.accountPassword)\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    async confirmWithDraw(data) {\n      try {\n        let res = await get_confirm_withdraw(data);\n        this.$message.success(res.msg);\n        this.resetForm('formData');\n        this.$router.go(-1);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    async init() {\n      // 获取币种配置\n      try {\n        let param = {\n          currency: this.$route.query.id\n        };\n        let res = await get_currency(param);\n\n        // this.linkType = res.data.chainName\n        this.minOutVol = parseFloat(res.data.minOutVol);\n        this.maxOutVol = parseFloat(res.data.maxOutVol);\n        this.outFee = parseFloat(res.data.outFee);\n        this.maxOutFee = parseFloat(res.data.maxOutFee);\n      } catch (error) {\n        console.error(error);\n      }\n      //\n      // 提币页面用户金额\n      try {\n        let param = {\n          currency: this.$route.query.id\n        };\n        let detailCurrency = await get_user_capitaldetail(param);\n\n        this.balance = detailCurrency.data.balance;\n      } catch (error) {\n        console.error(error);\n      }\n      // 地址簿列表查询(提币地址下拉框使用)\n      try {\n        let params = {\n          currency: this.$route.query.id,\n          pageNo: 1,\n          pageSize: 10\n        };\n        let addList = await get_withdraw_addressList(params);\n        //\n        this.addressList = addList.data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n@import 'http://test.mobile.didimessage.com:50001/api/base/commodity/icons/encry.css';\n.withdraw {\n  box-sizing: border-box;\n  padding: 30px 20px;\n  .back {\n    width: 100px;\n    cursor: pointer;\n    color: #151f34;\n    font-size: 16px;\n    .el-icon-arrow-left {\n      color: #9497a3;\n      margin-right: 10px;\n      font-weight: 500;\n    }\n  }\n  .withd-form {\n    margin-top: 30px;\n    .avatar {\n      background-size: 40px 40px;\n    }\n    .num-text {\n      display: inline-block;\n      width: 100px;\n      text-align: center;\n      height: 18px;\n      font-size: 13px;\n      font-weight: 400;\n      color: rgba(47, 84, 235, 1);\n      line-height: 18px;\n      cursor: pointer;\n    }\n    .balance {\n      margin-top: 10px;\n      width: 300px;\n      text-align: right;\n      height: 17px;\n      font-size: 12px;\n      font-weight: 400;\n      color: rgba(21, 31, 52, 1);\n      line-height: 17px;\n    }\n    .tip {\n      color: rgba(245, 36, 45, 1);\n      margin-top: 60px;\n      .tip-hed {\n        display: inline-block;\n        width: 80px;\n        height: 63px;\n        font-size: 14px;\n        font-weight: 400;\n        text-align: center;\n        vertical-align: top;\n      }\n      .tip-con {\n        display: inline-block;\n        width: 453px;\n        height: 63px;\n        font-size: 14px;\n\n        font-weight: 400;\n        line-height: 21px;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".withdraw": {
          "box-sizing": "border-box",
          "padding": "30px 20px",
          ".back": {
            "width": "100px",
            "cursor": "pointer",
            "color": "#151f34",
            "font-size": "16px",
            ".el-icon-arrow-left": {
              "color": "#9497a3",
              "margin-right": "10px",
              "font-weight": "500"
            }
          },
          ".withd-form": {
            "margin-top": "30px",
            ".avatar": {
              "background-size": "40px 40px"
            },
            ".num-text": {
              "display": "inline-block",
              "width": "100px",
              "text-align": "center",
              "height": "18px",
              "font-size": "13px",
              "font-weight": "400",
              "color": "rgba(47, 84, 235, 1)",
              "line-height": "18px",
              "cursor": "pointer"
            },
            ".balance": {
              "margin-top": "10px",
              "width": "300px",
              "text-align": "right",
              "height": "17px",
              "font-size": "12px",
              "font-weight": "400",
              "color": "rgba(21, 31, 52, 1)",
              "line-height": "17px"
            },
            ".tip": {
              "color": "rgba(245, 36, 45, 1)",
              "margin-top": "60px",
              ".tip-hed": {
                "display": "inline-block",
                "width": "80px",
                "height": "63px",
                "font-size": "14px",
                "font-weight": "400",
                "text-align": "center",
                "vertical-align": "top"
              },
              ".tip-con": {
                "display": "inline-block",
                "width": "453px",
                "height": "63px",
                "font-size": "14px",
                "font-weight": "400",
                "line-height": "21px"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/relatedme/comment.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 评论我的 -->\n<template>\n  <div class=\"comment\">\n    <HeadTop ref=\"tophead\"></HeadTop>\n    <div class=\"comment-me\">评论我的（共{{ total }}条）</div>\n    <div class=\"com-content\" v-if=\"total != 0\">\n      <div class=\"every-con\" v-for=\"(item, index) in dataList\" :key=\"index\">\n        <div class=\"info\">\n          <el-row>\n            <el-col :span=\"1\" class=\"card-avatar\">\n              <div @click=\"toUser(item.replyUserId)\">\n                <el-avatar class=\"avatar\" :size=\"40\" :src=\"item.replyImg\" style=\"cursor: pointer\"></el-avatar>\n              </div>\n            </el-col>\n            <el-col :span=\"19\" class=\"card-info\">\n              <div class=\"info-name\">{{ item.replyName }}</div>\n              <div class=\"info-num\">\n                <span\n                  ><span v-if=\"item.replyTime != 0\">{{ item.replyTime }}</span\n                  >&nbsp;&nbsp;<span v-if=\"item.replyTimeType != 'day'\">{{ item.replyTimeType }}</span></span\n                >\n              </div>\n            </el-col>\n            <el-col :span=\"4\" class=\"info-replay\">\n              <div @click=\"onReplay(index)\" v-if=\"!item.show && !item.delete\">\n                回复\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n        <div class=\"comment-replay\" v-if=\"item.beReplyName\">\n          <div style=\"word-break: break-all; word-wrap: break-word\">\n            <span class=\"reply-left\">回复{{ item.beReplyName }}：</span>\n            <span>{{ item.replyComment }}</span>\n          </div>\n          <div style=\"word-break: break-all; word-wrap: break-word\">\n            <span class=\"reply-left\" @click=\"toBeRepplay(item.beReplyUserId)\" style=\"cursor: pointer\"> {{ item.beReplyName }}： </span>\n            <span>{{ item.beReplyContent }}</span>\n          </div>\n        </div>\n        <div class=\"comment-detail\" v-if=\"!item.beReplyName\" style=\"word-break: break-all; word-wrap: break-word\">\n          {{ item.replyComment }}\n        </div>\n        <div class=\"text-con\">\n          <div class=\"text-img\" @click=\"toBeRepplay(item.userId)\">\n            <el-avatar class=\"avatar\" :size=\"58\" :src=\"item.invitationUserImg\"></el-avatar>\n          </div>\n          <div class=\"con-text\">\n            <div class=\"con-box\">\n              <div class=\"my-info\">@{{ item.invitationUserName }}</div>\n              <div class=\"my-text\" @click=\"pointDetail(item.invitationId)\">\n                {{ item.invitationContent }}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"text-box\" v-if=\"item.show\">\n          <el-row>\n            <el-col :span=\"1\">\n              <div class=\"box-left\">回复</div>\n            </el-col>\n            <el-col :span=\"23\">\n              <div class=\"box-right\">\n                <el-input\n                  type=\"textarea\"\n                  :autosize=\"{ minRows: 2, maxRows: 4 }\"\n                  placeholder=\"请输入回复内容\"\n                  v-model=\"textarea\"\n                  maxlength=\"150\"\n                ></el-input>\n              </div>\n            </el-col>\n          </el-row>\n          <div class=\"replay-btn\">\n            <el-button type=\"info\" @click=\"cancel(index)\">取消</el-button>\n            <el-button type=\"warning\" @click=\"onSubmit(item.invitationId, item.id, index)\">发送</el-button>\n          </div>\n        </div>\n      </div>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n    <div class=\"com-nocontent\" v-else>\n      <div class=\"no-box\">\n        <img src=\"../../../assets/images/web.png\" alt=\"error\" />\n        <p>{{ $t('Universal_0174') }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_my_reply, get_reply_comment } from './server';\nimport Vue from 'vue';\nimport HeadTop from '../head/head';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    HeadTop\n  },\n  data() {\n    //这里存放数据\n    return {\n      textarea: '',\n      clickCom: false,\n      layout: 'prev, pager, next',\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      pageNumber: 1,\n      dataList: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    onReplay(indx) {\n      this.dataList.map(item => {\n        item.show = false;\n      });\n      Vue.set(this.dataList[indx], 'show', true);\n      //\n    },\n    cancel(indx) {\n      this.textarea = '';\n      Vue.set(this.dataList[indx], 'show', false);\n    },\n    onSubmit(invId, comId, indx) {\n      if (!this.textarea) {\n        this.$message.error('请输入回复内容');\n        return;\n      }\n      this.toReplay(invId, comId, indx);\n      this.textarea = '';\n      this.getMyreplay();\n    },\n    toBeRepplay(a) {\n      let userId = localStorage.getItem('userId');\n      if (a == userId) {\n        this.$router.push({ path: '/app/viewpoint' });\n      } else {\n        this.$router.push({ path: '/app/otherpoint', query: { userId: a } });\n      }\n    },\n    toUser(a) {\n      //\n      this.$router.push({ path: '/app/otherpoint', query: { userId: a } });\n    },\n    pointDetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n    async toReplay(invId, comId, indx) {\n      try {\n        let param = {\n          beReplyId: comId,\n          invitationId: invId,\n          replyComment: this.textarea\n        };\n        let res = await get_reply_comment(param);\n        this.$message.success(res.msg);\n        Vue.set(this.dataList[indx], 'show', false);\n      } catch (error) {\n        // console.error(error)\n      }\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.pageNumber = 1;\n      this.pageSize = val;\n      this.getMyreplay();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.pageNumber = val;\n      this.currentPage = val;\n      this.getMyreplay();\n    },\n    async getMyreplay() {\n      try {\n        let param = {\n          pageSize: this.pageSize,\n          pageNumber: this.pageNumber,\n          replyType: 1\n        };\n        let res = await get_my_reply(param);\n        // this.dataList = res.data.rows\n        let arrNew = [];\n        res.data.rows.map(item => {\n          arrNew.push(Object.assign({}, item, { show: false }));\n        });\n        this.dataList = arrNew;\n        this.total = res.data.totalRow;\n        //\n      } catch (error) {\n        // console.error(error)\n      }\n    },\n    init() {\n      this.getMyreplay();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.$refs.tophead.comInit();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 评论我的 -->\n<template>\n  <div class=\"comment\">\n    <HeadTop ref=\"tophead\"></HeadTop>\n    <div class=\"comment-me\">评论我的（共{{ total }}条）</div>\n    <div class=\"com-content\" v-if=\"total != 0\">\n      <div class=\"every-con\" v-for=\"(item, index) in dataList\" :key=\"index\">\n        <div class=\"info\">\n          <el-row>\n            <el-col :span=\"1\" class=\"card-avatar\">\n              <div @click=\"toUser(item.replyUserId)\">\n                <el-avatar class=\"avatar\" :size=\"40\" :src=\"item.replyImg\" style=\"cursor: pointer\"></el-avatar>\n              </div>\n            </el-col>\n            <el-col :span=\"19\" class=\"card-info\">\n              <div class=\"info-name\">{{ item.replyName }}</div>\n              <div class=\"info-num\">\n                <span\n                  ><span v-if=\"item.replyTime != 0\">{{ item.replyTime }}</span\n                  >&nbsp;&nbsp;<span v-if=\"item.replyTimeType != 'day'\">{{ item.replyTimeType }}</span></span\n                >\n              </div>\n            </el-col>\n            <el-col :span=\"4\" class=\"info-replay\">\n              <div @click=\"onReplay(index)\" v-if=\"!item.show && !item.delete\">\n                回复\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n        <div class=\"comment-replay\" v-if=\"item.beReplyName\">\n          <div style=\"word-break: break-all; word-wrap: break-word\">\n            <span class=\"reply-left\">回复{{ item.beReplyName }}：</span>\n            <span>{{ item.replyComment }}</span>\n          </div>\n          <div style=\"word-break: break-all; word-wrap: break-word\">\n            <span class=\"reply-left\" @click=\"toBeRepplay(item.beReplyUserId)\" style=\"cursor: pointer\"> {{ item.beReplyName }}： </span>\n            <span>{{ item.beReplyContent }}</span>\n          </div>\n        </div>\n        <div class=\"comment-detail\" v-if=\"!item.beReplyName\" style=\"word-break: break-all; word-wrap: break-word\">\n          {{ item.replyComment }}\n        </div>\n        <div class=\"text-con\">\n          <div class=\"text-img\" @click=\"toBeRepplay(item.userId)\">\n            <el-avatar class=\"avatar\" :size=\"58\" :src=\"item.invitationUserImg\"></el-avatar>\n          </div>\n          <div class=\"con-text\">\n            <div class=\"con-box\">\n              <div class=\"my-info\">@{{ item.invitationUserName }}</div>\n              <div class=\"my-text\" @click=\"pointDetail(item.invitationId)\">\n                {{ item.invitationContent }}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"text-box\" v-if=\"item.show\">\n          <el-row>\n            <el-col :span=\"1\">\n              <div class=\"box-left\">回复</div>\n            </el-col>\n            <el-col :span=\"23\">\n              <div class=\"box-right\">\n                <el-input\n                  type=\"textarea\"\n                  :autosize=\"{ minRows: 2, maxRows: 4 }\"\n                  placeholder=\"请输入回复内容\"\n                  v-model=\"textarea\"\n                  maxlength=\"150\"\n                ></el-input>\n              </div>\n            </el-col>\n          </el-row>\n          <div class=\"replay-btn\">\n            <el-button type=\"info\" @click=\"cancel(index)\">取消</el-button>\n            <el-button type=\"warning\" @click=\"onSubmit(item.invitationId, item.id, index)\">发送</el-button>\n          </div>\n        </div>\n      </div>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n    <div class=\"com-nocontent\" v-else>\n      <div class=\"no-box\">\n        <img src=\"../../../assets/images/web.png\" alt=\"error\" />\n        <p>{{ $t('Universal_0174') }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_my_reply, get_reply_comment } from './server';\nimport Vue from 'vue';\nimport HeadTop from '../head/head';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    HeadTop\n  },\n  data() {\n    //这里存放数据\n    return {\n      textarea: '',\n      clickCom: false,\n      layout: 'prev, pager, next',\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      pageNumber: 1,\n      dataList: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    onReplay(indx) {\n      this.dataList.map(item => {\n        item.show = false;\n      });\n      Vue.set(this.dataList[indx], 'show', true);\n      //\n    },\n    cancel(indx) {\n      this.textarea = '';\n      Vue.set(this.dataList[indx], 'show', false);\n    },\n    onSubmit(invId, comId, indx) {\n      if (!this.textarea) {\n        this.$message.error('请输入回复内容');\n        return;\n      }\n      this.toReplay(invId, comId, indx);\n      this.textarea = '';\n      this.getMyreplay();\n    },\n    toBeRepplay(a) {\n      let userId = localStorage.getItem('userId');\n      if (a == userId) {\n        this.$router.push({ path: '/app/viewpoint' });\n      } else {\n        this.$router.push({ path: '/app/otherpoint', query: { userId: a } });\n      }\n    },\n    toUser(a) {\n      //\n      this.$router.push({ path: '/app/otherpoint', query: { userId: a } });\n    },\n    pointDetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n    async toReplay(invId, comId, indx) {\n      try {\n        let param = {\n          beReplyId: comId,\n          invitationId: invId,\n          replyComment: this.textarea\n        };\n        let res = await get_reply_comment(param);\n        this.$message.success(res.msg);\n        Vue.set(this.dataList[indx], 'show', false);\n      } catch (error) {\n        // console.error(error)\n      }\n    },\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.pageNumber = 1;\n      this.pageSize = val;\n      this.getMyreplay();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.pageNumber = val;\n      this.currentPage = val;\n      this.getMyreplay();\n    },\n    async getMyreplay() {\n      try {\n        let param = {\n          pageSize: this.pageSize,\n          pageNumber: this.pageNumber,\n          replyType: 1\n        };\n        let res = await get_my_reply(param);\n        // this.dataList = res.data.rows\n        let arrNew = [];\n        res.data.rows.map(item => {\n          arrNew.push(Object.assign({}, item, { show: false }));\n        });\n        this.dataList = arrNew;\n        this.total = res.data.totalRow;\n        //\n      } catch (error) {\n        // console.error(error)\n      }\n    },\n    init() {\n      this.getMyreplay();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.$refs.tophead.comInit();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.comment {\n  box-sizing: border-box;\n\n  .comment-me {\n    height: 22px;\n    font-size: 16px;\n    font-weight: 400;\n    color: rgba(21, 31, 52, 1);\n    line-height: 22px;\n    margin-bottom: 10px;\n  }\n\n  .com-content {\n    height: 100vh;\n    overflow: auto;\n\n    .every-con {\n      margin: 20px 0px;\n\n      .info {\n        margin: 3px 0;\n\n        .card-avatar {\n          height: 100%;\n\n          .avatar {\n            margin: 14px 0;\n          }\n        }\n\n        .card-info {\n          height: 100%;\n          text-align: left;\n          padding: 0 0 0 16px;\n\n          .info-name {\n            height: 20px;\n            font-size: 14px;\n            font-weight: 400;\n            color: rgba(21, 31, 52, 1);\n            line-height: 20px;\n          }\n\n          .info-num {\n            height: 17px;\n            font-size: 12px;\n            font-weight: 400;\n            color: rgba(146, 151, 163, 1);\n            line-height: 17px;\n          }\n        }\n\n        .info-replay {\n          height: 40px;\n          font-size: 14px;\n          font-weight: 400;\n          color: rgba(47, 84, 235, 1);\n          line-height: 60px;\n          text-align: right;\n          cursor: pointer;\n        }\n      }\n\n      .comment-replay {\n        margin-bottom: 8px;\n        font-size: 14px;\n\n        font-weight: 400;\n        color: rgba(21, 31, 52, 1);\n        line-height: 24px;\n\n        .reply-left {\n          color: rgba(47, 84, 235, 1);\n          margin-right: 10px;\n        }\n      }\n\n      .text-box {\n        margin-top: 10px;\n\n        .replay-btn {\n          text-align: right;\n          margin-top: 6px;\n        }\n\n        .box-left {\n          width: 40px;\n          height: 20px;\n          font-size: 14px;\n          font-weight: 400;\n          color: rgba(21, 31, 52, 1);\n          line-height: 20px;\n          text-align: center;\n        }\n\n        .box-right {\n          margin-left: 16px;\n        }\n      }\n\n      .comment-detail {\n        font-size: 14px;\n        font-weight: 400;\n        color: rgba(21, 31, 52, 1);\n        line-height: 30px;\n      }\n\n      .text-con {\n        box-sizing: border-box;\n        padding: 0 8px;\n        display: flex;\n        background: rgb(235, 237, 241);\n\n        .text-img {\n          cursor: pointer;\n\n          .avatar {\n            margin: 10px 0px;\n          }\n        }\n\n        .con-text {\n          box-sizing: border-box;\n          padding: 4px 0px;\n\n          .con-box {\n            box-sizing: border-box;\n            padding-left: 20px;\n\n            .my-info {\n              height: 24px;\n              font-size: 14px;\n              font-weight: 400;\n              color: rgba(21, 31, 52, 1);\n              line-height: 24px;\n            }\n\n            .my-text {\n              cursor: pointer;\n              font-size: 14px;\n              line-height: 20px;\n              font-weight: 400;\n              color: rgba(21, 31, 52, 1);\n              word-break: break-all;\n              word-wrap: break-word;\n              overflow: hidden;\n              text-overflow: ellipsis;\n              display: -webkit-box;\n              -webkit-line-clamp: 2;\n              -webkit-box-orient: vertical;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .com-nocontent {\n    text-align: center;\n\n    .no-box {\n      margin-top: 100px;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".comment": {
          "box-sizing": "border-box",
          ".comment-me": {
            "height": "22px",
            "font-size": "16px",
            "font-weight": "400",
            "color": "rgba(21, 31, 52, 1)",
            "line-height": "22px",
            "margin-bottom": "10px"
          },
          ".com-content": {
            "height": "100vh",
            "overflow": "auto",
            ".every-con": {
              "margin": "20px 0px",
              ".info": {
                "margin": "3px 0",
                ".card-avatar": {
                  "height": "100%",
                  ".avatar": {
                    "margin": "14px 0"
                  }
                },
                ".card-info": {
                  "height": "100%",
                  "text-align": "left",
                  "padding": "0 0 0 16px",
                  ".info-name": {
                    "height": "20px",
                    "font-size": "14px",
                    "font-weight": "400",
                    "color": "rgba(21, 31, 52, 1)",
                    "line-height": "20px"
                  },
                  ".info-num": {
                    "height": "17px",
                    "font-size": "12px",
                    "font-weight": "400",
                    "color": "rgba(146, 151, 163, 1)",
                    "line-height": "17px"
                  }
                },
                ".info-replay": {
                  "height": "40px",
                  "font-size": "14px",
                  "font-weight": "400",
                  "color": "rgba(47, 84, 235, 1)",
                  "line-height": "60px",
                  "text-align": "right",
                  "cursor": "pointer"
                }
              },
              ".comment-replay": {
                "margin-bottom": "8px",
                "font-size": "14px",
                "font-weight": "400",
                "color": "rgba(21, 31, 52, 1)",
                "line-height": "24px",
                ".reply-left": {
                  "color": "rgba(47, 84, 235, 1)",
                  "margin-right": "10px"
                }
              },
              ".text-box": {
                "margin-top": "10px",
                ".replay-btn": {
                  "text-align": "right",
                  "margin-top": "6px"
                },
                ".box-left": {
                  "width": "40px",
                  "height": "20px",
                  "font-size": "14px",
                  "font-weight": "400",
                  "color": "rgba(21, 31, 52, 1)",
                  "line-height": "20px",
                  "text-align": "center"
                },
                ".box-right": {
                  "margin-left": "16px"
                }
              },
              ".comment-detail": {
                "font-size": "14px",
                "font-weight": "400",
                "color": "rgba(21, 31, 52, 1)",
                "line-height": "30px"
              },
              ".text-con": {
                "box-sizing": "border-box",
                "padding": "0 8px",
                "display": "flex",
                "background": "rgb(235, 237, 241)",
                ".text-img": {
                  "cursor": "pointer",
                  ".avatar": {
                    "margin": "10px 0px"
                  }
                },
                ".con-text": {
                  "box-sizing": "border-box",
                  "padding": "4px 0px",
                  ".con-box": {
                    "box-sizing": "border-box",
                    "padding-left": "20px",
                    ".my-info": {
                      "height": "24px",
                      "font-size": "14px",
                      "font-weight": "400",
                      "color": "rgba(21, 31, 52, 1)",
                      "line-height": "24px"
                    },
                    ".my-text": {
                      "cursor": "pointer",
                      "font-size": "14px",
                      "line-height": "20px",
                      "font-weight": "400",
                      "color": "rgba(21, 31, 52, 1)",
                      "word-break": "break-all",
                      "word-wrap": "break-word",
                      "overflow": "hidden",
                      "text-overflow": "ellipsis",
                      "display": "-webkit-box",
                      "-webkit-line-clamp": "2",
                      "-webkit-box-orient": "vertical"
                    }
                  }
                }
              }
            }
          },
          ".com-nocontent": {
            "text-align": "center",
            ".no-box": {
              "margin-top": "100px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/relatedme/thumbsup.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 评论我的 -->\n<template>\n  <div class=\"comment\">\n    <HeadTop ref=\"tophead\"></HeadTop>\n    <div class=\"comment-me\">点赞我的（共{{ total }}条）</div>\n    <div class=\"com-content\" v-if=\"total != 0\">\n      <div class=\"every-con\" v-for=\"(item, index) in dataList\" :key=\"index\">\n        <div class=\"info\">\n          <el-row>\n            <el-col :span=\"1\" class=\"card-avatar\">\n              <div @click=\"toUser(item.pointUserId)\" style=\"cursor: pointer\">\n                <el-avatar class=\"avatar\" :size=\"40\" :src=\"item.pointHeadImg\"></el-avatar>\n              </div>\n            </el-col>\n            <el-col :span=\"23\" class=\"card-info\">\n              <div class=\"info-name\">{{ item.pointNickname }}</div>\n              <div class=\"info-num\">\n                <span\n                  ><span v-if=\"item.pointTime != 0\">{{ item.pointTime }}</span>\n                  &nbsp;&nbsp;\n                  <span v-if=\"item.pointTimeType != 'day'\">{{ item.pointTimeType }}</span></span\n                >\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n        <div class=\"comment-detail\">赞了你的帖子</div>\n        <div class=\"text-con\">\n          <div class=\"text-img\" @click=\"toUser(item.sendInvUserId)\">\n            <el-avatar class=\"avatar\" :size=\"58\" :src=\"item.sendInvUserHeadImg\"></el-avatar>\n          </div>\n          <div class=\"con-text\">\n            <div class=\"con-box\">\n              <div class=\"my-info\">@{{ item.sendInvUserNickname }}</div>\n              <div class=\"my-text\" @click=\"pointDetail(item.invitationId)\">\n                {{ item.invitationContent }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n    <div class=\"com-nocontent\" v-else>\n      <div class=\"no-box\">\n        <img src=\"../../../assets/images/web.png\" alt=\"error\" />\n        <p>{{ $t('Universal_0174') }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_point_thumbsup } from './server';\nimport HeadTop from '../head/head';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    HeadTop\n  },\n  data() {\n    //这里存放数据\n    return {\n      textarea: '',\n      clickCom: false,\n      layout: 'prev, pager, next',\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      pageNum: 1,\n      dataList: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.getMyreplay();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.pageNum = val;\n      this.currentPage = val;\n      this.getMyreplay();\n    },\n    toUser(a) {\n      let userId = localStorage.getItem('userId');\n      if (a == userId) {\n        this.$router.push({ path: '/app/viewpoint' });\n      } else {\n        this.$router.push({ path: '/app/otherpoint', query: { userId: a } });\n      }\n    },\n    // 跳转详情\n    pointDetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n    async getMyreplay() {\n      try {\n        let param = {\n          pageSize: this.pageSize,\n          pageNum: this.pageNum\n        };\n        let res = await get_point_thumbsup(param);\n        this.dataList = res.data.rows;\n        this.total = res.data.totalRow;\n        //\n      } catch (error) {\n        // console.error(error)\n      }\n    },\n    init() {\n      this.getMyreplay();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.$refs.tophead.comInit();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 评论我的 -->\n<template>\n  <div class=\"comment\">\n    <HeadTop ref=\"tophead\"></HeadTop>\n    <div class=\"comment-me\">点赞我的（共{{ total }}条）</div>\n    <div class=\"com-content\" v-if=\"total != 0\">\n      <div class=\"every-con\" v-for=\"(item, index) in dataList\" :key=\"index\">\n        <div class=\"info\">\n          <el-row>\n            <el-col :span=\"1\" class=\"card-avatar\">\n              <div @click=\"toUser(item.pointUserId)\" style=\"cursor: pointer\">\n                <el-avatar class=\"avatar\" :size=\"40\" :src=\"item.pointHeadImg\"></el-avatar>\n              </div>\n            </el-col>\n            <el-col :span=\"23\" class=\"card-info\">\n              <div class=\"info-name\">{{ item.pointNickname }}</div>\n              <div class=\"info-num\">\n                <span\n                  ><span v-if=\"item.pointTime != 0\">{{ item.pointTime }}</span>\n                  &nbsp;&nbsp;\n                  <span v-if=\"item.pointTimeType != 'day'\">{{ item.pointTimeType }}</span></span\n                >\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n        <div class=\"comment-detail\">赞了你的帖子</div>\n        <div class=\"text-con\">\n          <div class=\"text-img\" @click=\"toUser(item.sendInvUserId)\">\n            <el-avatar class=\"avatar\" :size=\"58\" :src=\"item.sendInvUserHeadImg\"></el-avatar>\n          </div>\n          <div class=\"con-text\">\n            <div class=\"con-box\">\n              <div class=\"my-info\">@{{ item.sendInvUserNickname }}</div>\n              <div class=\"my-text\" @click=\"pointDetail(item.invitationId)\">\n                {{ item.invitationContent }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n    <div class=\"com-nocontent\" v-else>\n      <div class=\"no-box\">\n        <img src=\"../../../assets/images/web.png\" alt=\"error\" />\n        <p>{{ $t('Universal_0174') }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_point_thumbsup } from './server';\nimport HeadTop from '../head/head';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    HeadTop\n  },\n  data() {\n    //这里存放数据\n    return {\n      textarea: '',\n      clickCom: false,\n      layout: 'prev, pager, next',\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      pageNum: 1,\n      dataList: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.getMyreplay();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.pageNum = val;\n      this.currentPage = val;\n      this.getMyreplay();\n    },\n    toUser(a) {\n      let userId = localStorage.getItem('userId');\n      if (a == userId) {\n        this.$router.push({ path: '/app/viewpoint' });\n      } else {\n        this.$router.push({ path: '/app/otherpoint', query: { userId: a } });\n      }\n    },\n    // 跳转详情\n    pointDetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n    async getMyreplay() {\n      try {\n        let param = {\n          pageSize: this.pageSize,\n          pageNum: this.pageNum\n        };\n        let res = await get_point_thumbsup(param);\n        this.dataList = res.data.rows;\n        this.total = res.data.totalRow;\n        //\n      } catch (error) {\n        // console.error(error)\n      }\n    },\n    init() {\n      this.getMyreplay();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.$refs.tophead.comInit();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.comment {\n  box-sizing: border-box;\n  .comment-me {\n    height: 22px;\n    font-size: 16px;\n    font-weight: 400;\n    color: rgba(21, 31, 52, 1);\n    line-height: 22px;\n    margin-bottom: 10px;\n  }\n  .com-content {\n    .every-con {\n      margin: 20px 0px;\n      .info {\n        margin: 3px 0;\n        .card-avatar {\n          height: 100%;\n          .avatar {\n            margin: 14px 0;\n          }\n        }\n        .card-info {\n          height: 100%;\n          text-align: left;\n          padding: 0 0 0 16px;\n          .info-name {\n            height: 20px;\n            font-size: 14px;\n            font-weight: 400;\n            color: rgba(21, 31, 52, 1);\n            line-height: 20px;\n          }\n          .info-num {\n            height: 17px;\n            font-size: 12px;\n            font-weight: 400;\n            color: rgba(146, 151, 163, 1);\n            line-height: 17px;\n          }\n        }\n      }\n      .comment-detail {\n        height: 30px;\n        font-size: 14px;\n        font-weight: 400;\n        color: rgba(21, 31, 52, 1);\n        line-height: 30px;\n      }\n      .text-con {\n        box-sizing: border-box;\n        padding: 0 8px;\n        display: flex;\n        background: rgb(235, 237, 241);\n        .text-img {\n          cursor: pointer;\n          .avatar {\n            margin: 10px 0px;\n          }\n        }\n        .con-text {\n          box-sizing: border-box;\n          padding: 4px 0px;\n          .con-box {\n            box-sizing: border-box;\n            padding-left: 20px;\n            .my-info {\n              height: 24px;\n              font-size: 14px;\n              font-weight: 400;\n              color: rgba(21, 31, 52, 1);\n              line-height: 24px;\n            }\n            .my-text {\n              cursor: pointer;\n              font-size: 14px;\n              line-height: 20px;\n              font-weight: 400;\n              color: rgba(21, 31, 52, 1);\n              word-break: break-all;\n              word-wrap: break-word;\n              overflow: hidden;\n              text-overflow: ellipsis;\n              display: -webkit-box;\n              -webkit-line-clamp: 2;\n              -webkit-box-orient: vertical;\n            }\n          }\n        }\n      }\n    }\n  }\n  .com-nocontent {\n    text-align: center;\n    .no-box {\n      margin-top: 100px;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".comment": {
          "box-sizing": "border-box",
          ".comment-me": {
            "height": "22px",
            "font-size": "16px",
            "font-weight": "400",
            "color": "rgba(21, 31, 52, 1)",
            "line-height": "22px",
            "margin-bottom": "10px"
          },
          ".com-content": {
            ".every-con": {
              "margin": "20px 0px",
              ".info": {
                "margin": "3px 0",
                ".card-avatar": {
                  "height": "100%",
                  ".avatar": {
                    "margin": "14px 0"
                  }
                },
                ".card-info": {
                  "height": "100%",
                  "text-align": "left",
                  "padding": "0 0 0 16px",
                  ".info-name": {
                    "height": "20px",
                    "font-size": "14px",
                    "font-weight": "400",
                    "color": "rgba(21, 31, 52, 1)",
                    "line-height": "20px"
                  },
                  ".info-num": {
                    "height": "17px",
                    "font-size": "12px",
                    "font-weight": "400",
                    "color": "rgba(146, 151, 163, 1)",
                    "line-height": "17px"
                  }
                }
              },
              ".comment-detail": {
                "height": "30px",
                "font-size": "14px",
                "font-weight": "400",
                "color": "rgba(21, 31, 52, 1)",
                "line-height": "30px"
              },
              ".text-con": {
                "box-sizing": "border-box",
                "padding": "0 8px",
                "display": "flex",
                "background": "rgb(235, 237, 241)",
                ".text-img": {
                  "cursor": "pointer",
                  ".avatar": {
                    "margin": "10px 0px"
                  }
                },
                ".con-text": {
                  "box-sizing": "border-box",
                  "padding": "4px 0px",
                  ".con-box": {
                    "box-sizing": "border-box",
                    "padding-left": "20px",
                    ".my-info": {
                      "height": "24px",
                      "font-size": "14px",
                      "font-weight": "400",
                      "color": "rgba(21, 31, 52, 1)",
                      "line-height": "24px"
                    },
                    ".my-text": {
                      "cursor": "pointer",
                      "font-size": "14px",
                      "line-height": "20px",
                      "font-weight": "400",
                      "color": "rgba(21, 31, 52, 1)",
                      "word-break": "break-all",
                      "word-wrap": "break-word",
                      "overflow": "hidden",
                      "text-overflow": "ellipsis",
                      "display": "-webkit-box",
                      "-webkit-line-clamp": "2",
                      "-webkit-box-orient": "vertical"
                    }
                  }
                }
              }
            }
          },
          ".com-nocontent": {
            "text-align": "center",
            ".no-box": {
              "margin-top": "100px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/relatedme/share.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 评论我的 -->\n<template>\n  <div class=\"comment\">\n    <HeadTop ref=\"tophead\"></HeadTop>\n    <div class=\"comment-me\">分享我的（共{{ total }}条）</div>\n    <div class=\"com-content\" v-if=\"total != 0\">\n      <div class=\"every-con\" v-for=\"(item, index) in dataList\" :key=\"index\">\n        <div class=\"info\">\n          <el-row>\n            <el-col :span=\"1\" class=\"card-avatar\">\n              <div @click=\"toUser(item.shareUserId)\" style=\"cursor: pointer\">\n                <el-avatar class=\"avatar\" :size=\"40\" :src=\"item.shareHeadImg\"></el-avatar>\n              </div>\n            </el-col>\n            <el-col :span=\"23\" class=\"card-info\">\n              <div class=\"info-name\">{{ item.shareNickname }}</div>\n              <div class=\"info-num\">\n                <span\n                  ><span v-if=\"item.shareTime != 0\">{{ item.shareTime }}</span\n                  >&nbsp;&nbsp;<span v-if=\"item.shareTimeType != 'day'\">{{ item.shareTimeType }}</span></span\n                >\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n        <div class=\"comment-detail\">分享内容</div>\n        <div class=\"text-con\">\n          <div class=\"text-img\" @click=\"toUser(item.sendInvUserId)\">\n            <el-avatar class=\"avatar\" :size=\"58\" :src=\"item.sendInvUserHeadImg\"></el-avatar>\n          </div>\n          <div class=\"con-text\">\n            <div class=\"con-box\">\n              <div class=\"my-info\">@{{ item.sendInvUserNickname }}</div>\n              <div class=\"my-text\" @click=\"pointDetail(item.invitationId)\">\n                {{ item.invitationContent }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n    <div class=\"com-nocontent\" v-else>\n      <div class=\"no-box\">\n        <img src=\"../../../assets/images/web.png\" alt=\"error\" />\n        <p>{{ $t('Universal_0174') }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_point_share } from './server';\nimport HeadTop from '../head/head';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    HeadTop\n  },\n  data() {\n    //这里存放数据\n    return {\n      textarea: '',\n      clickCom: false,\n      layout: 'prev, pager, next',\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      pageNum: 1,\n      dataList: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.getMyreplay();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.pageNum = val;\n      this.currentPage = val;\n      this.getMyreplay();\n    },\n    toUser(a) {\n      let userId = localStorage.getItem('userId');\n      if (a == userId) {\n        this.$router.push({ path: '/app/viewpoint' });\n      } else {\n        this.$router.push({ path: '/app/otherpoint', query: { userId: a } });\n      }\n    },\n    // 跳转详情\n    pointDetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n    async getMyreplay() {\n      try {\n        let param = {\n          pageSize: this.pageSize,\n          pageNum: this.pageNum,\n          shareType: 1\n        };\n        let res = await get_point_share(param);\n        this.dataList = res.data.rows;\n        this.total = res.data.totalRow;\n        //\n      } catch (error) {\n        // console.error(error)\n      }\n    },\n    init() {\n      this.getMyreplay();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.$refs.tophead.comInit();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 评论我的 -->\n<template>\n  <div class=\"comment\">\n    <HeadTop ref=\"tophead\"></HeadTop>\n    <div class=\"comment-me\">分享我的（共{{ total }}条）</div>\n    <div class=\"com-content\" v-if=\"total != 0\">\n      <div class=\"every-con\" v-for=\"(item, index) in dataList\" :key=\"index\">\n        <div class=\"info\">\n          <el-row>\n            <el-col :span=\"1\" class=\"card-avatar\">\n              <div @click=\"toUser(item.shareUserId)\" style=\"cursor: pointer\">\n                <el-avatar class=\"avatar\" :size=\"40\" :src=\"item.shareHeadImg\"></el-avatar>\n              </div>\n            </el-col>\n            <el-col :span=\"23\" class=\"card-info\">\n              <div class=\"info-name\">{{ item.shareNickname }}</div>\n              <div class=\"info-num\">\n                <span\n                  ><span v-if=\"item.shareTime != 0\">{{ item.shareTime }}</span\n                  >&nbsp;&nbsp;<span v-if=\"item.shareTimeType != 'day'\">{{ item.shareTimeType }}</span></span\n                >\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n        <div class=\"comment-detail\">分享内容</div>\n        <div class=\"text-con\">\n          <div class=\"text-img\" @click=\"toUser(item.sendInvUserId)\">\n            <el-avatar class=\"avatar\" :size=\"58\" :src=\"item.sendInvUserHeadImg\"></el-avatar>\n          </div>\n          <div class=\"con-text\">\n            <div class=\"con-box\">\n              <div class=\"my-info\">@{{ item.sendInvUserNickname }}</div>\n              <div class=\"my-text\" @click=\"pointDetail(item.invitationId)\">\n                {{ item.invitationContent }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Pagation\n        :layout=\"layout\"\n        :currentPage=\"currentPage\"\n        :total=\"total\"\n        :myPageSizes=\"pageSize\"\n        @handleSizeChange=\"handleSizeChange\"\n        @handleCurrentChange=\"handleCurrentChange\"\n      />\n    </div>\n    <div class=\"com-nocontent\" v-else>\n      <div class=\"no-box\">\n        <img src=\"../../../assets/images/web.png\" alt=\"error\" />\n        <p>{{ $t('Universal_0174') }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { get_point_share } from './server';\nimport HeadTop from '../head/head';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    HeadTop\n  },\n  data() {\n    //这里存放数据\n    return {\n      textarea: '',\n      clickCom: false,\n      layout: 'prev, pager, next',\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      pageNum: 1,\n      dataList: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    handleSizeChange(val) {\n      // 一页显示多少条\n      this.currentPage = 1;\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.getMyreplay();\n    },\n    handleCurrentChange(val) {\n      // 页码改变时\n      this.pageNum = val;\n      this.currentPage = val;\n      this.getMyreplay();\n    },\n    toUser(a) {\n      let userId = localStorage.getItem('userId');\n      if (a == userId) {\n        this.$router.push({ path: '/app/viewpoint' });\n      } else {\n        this.$router.push({ path: '/app/otherpoint', query: { userId: a } });\n      }\n    },\n    // 跳转详情\n    pointDetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n    async getMyreplay() {\n      try {\n        let param = {\n          pageSize: this.pageSize,\n          pageNum: this.pageNum,\n          shareType: 1\n        };\n        let res = await get_point_share(param);\n        this.dataList = res.data.rows;\n        this.total = res.data.totalRow;\n        //\n      } catch (error) {\n        // console.error(error)\n      }\n    },\n    init() {\n      this.getMyreplay();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.$refs.tophead.comInit();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.comment {\n  box-sizing: border-box;\n\n  .comment-me {\n    height: 22px;\n    font-size: 16px;\n    font-weight: 400;\n    color: rgba(21, 31, 52, 1);\n    line-height: 22px;\n    margin-bottom: 10px;\n  }\n  .com-content {\n    .every-con {\n      margin: 20px 0px;\n      .info {\n        margin: 3px 0;\n        .card-avatar {\n          height: 100%;\n          .avatar {\n            margin: 14px 0;\n            cursor: pointer;\n          }\n        }\n        .card-info {\n          height: 100%;\n          text-align: left;\n          padding: 0 0 0 16px;\n          .info-name {\n            height: 20px;\n            font-size: 14px;\n            font-weight: 400;\n            color: rgba(21, 31, 52, 1);\n            line-height: 20px;\n          }\n          .info-num {\n            height: 17px;\n            font-size: 12px;\n            font-weight: 400;\n            color: rgba(146, 151, 163, 1);\n            line-height: 17px;\n          }\n        }\n      }\n      .comment-detail {\n        height: 30px;\n        font-size: 14px;\n        font-weight: 400;\n        color: rgba(21, 31, 52, 1);\n        line-height: 30px;\n      }\n      .text-con {\n        box-sizing: border-box;\n        padding: 0 8px;\n        display: flex;\n        background: rgb(235, 237, 241);\n        .text-img {\n          cursor: pointer;\n          .avatar {\n            margin: 10px 0px;\n            cursor: pointer;\n          }\n        }\n        .con-text {\n          box-sizing: border-box;\n          padding: 4px 0px;\n          .con-box {\n            box-sizing: border-box;\n            padding-left: 20px;\n            .my-info {\n              height: 24px;\n              font-size: 14px;\n              font-weight: 400;\n              color: rgba(21, 31, 52, 1);\n              line-height: 24px;\n            }\n            .my-text {\n              cursor: pointer;\n              font-size: 14px;\n              line-height: 20px;\n              font-weight: 400;\n              color: rgba(21, 31, 52, 1);\n              word-break: break-all;\n              word-wrap: break-word;\n              overflow: hidden;\n              text-overflow: ellipsis;\n              display: -webkit-box;\n              -webkit-line-clamp: 2;\n              -webkit-box-orient: vertical;\n            }\n          }\n        }\n      }\n    }\n  }\n  .com-nocontent {\n    text-align: center;\n    .no-box {\n      margin-top: 100px;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".comment": {
          "box-sizing": "border-box",
          ".comment-me": {
            "height": "22px",
            "font-size": "16px",
            "font-weight": "400",
            "color": "rgba(21, 31, 52, 1)",
            "line-height": "22px",
            "margin-bottom": "10px"
          },
          ".com-content": {
            ".every-con": {
              "margin": "20px 0px",
              ".info": {
                "margin": "3px 0",
                ".card-avatar": {
                  "height": "100%",
                  ".avatar": {
                    "margin": "14px 0",
                    "cursor": "pointer"
                  }
                },
                ".card-info": {
                  "height": "100%",
                  "text-align": "left",
                  "padding": "0 0 0 16px",
                  ".info-name": {
                    "height": "20px",
                    "font-size": "14px",
                    "font-weight": "400",
                    "color": "rgba(21, 31, 52, 1)",
                    "line-height": "20px"
                  },
                  ".info-num": {
                    "height": "17px",
                    "font-size": "12px",
                    "font-weight": "400",
                    "color": "rgba(146, 151, 163, 1)",
                    "line-height": "17px"
                  }
                }
              },
              ".comment-detail": {
                "height": "30px",
                "font-size": "14px",
                "font-weight": "400",
                "color": "rgba(21, 31, 52, 1)",
                "line-height": "30px"
              },
              ".text-con": {
                "box-sizing": "border-box",
                "padding": "0 8px",
                "display": "flex",
                "background": "rgb(235, 237, 241)",
                ".text-img": {
                  "cursor": "pointer",
                  ".avatar": {
                    "margin": "10px 0px",
                    "cursor": "pointer"
                  }
                },
                ".con-text": {
                  "box-sizing": "border-box",
                  "padding": "4px 0px",
                  ".con-box": {
                    "box-sizing": "border-box",
                    "padding-left": "20px",
                    ".my-info": {
                      "height": "24px",
                      "font-size": "14px",
                      "font-weight": "400",
                      "color": "rgba(21, 31, 52, 1)",
                      "line-height": "24px"
                    },
                    ".my-text": {
                      "cursor": "pointer",
                      "font-size": "14px",
                      "line-height": "20px",
                      "font-weight": "400",
                      "color": "rgba(21, 31, 52, 1)",
                      "word-break": "break-all",
                      "word-wrap": "break-word",
                      "overflow": "hidden",
                      "text-overflow": "ellipsis",
                      "display": "-webkit-box",
                      "-webkit-line-clamp": "2",
                      "-webkit-box-orient": "vertical"
                    }
                  }
                }
              }
            }
          },
          ".com-nocontent": {
            "text-align": "center",
            ".no-box": {
              "margin-top": "100px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/audio.vue",
    "tagInfo": {
      "0": "<style scoped>",
      "1": "<style>"
    },
    "importInfo": {},
    "keepContent": "<template>\r\n  <div class=\"audio-main\">\r\n    <div :style=\"audioMainBackground\" class=\"user-background-class\"></div>\r\n    <div class=\"user-background-mask-class\"></div>\r\n    <div class=\"flex align-baseline justify-end topwork2 header-class\">\r\n      <i @click=\"setToTopWin\" v-if=\"!isTop\" class=\"i1\">\r\n        <img src=\"../../assets/images/audio_totop.png\" title=\"置顶\" />\r\n      </i>\r\n      <i @click=\"setToTopWin\" v-if=\"isTop\" class=\"i1\">\r\n        <img src=\"../../assets/images/audio_totop.png\" title=\"取消置顶\" />\r\n      </i>\r\n      <i @click=\"hideWin\" class=\"i1\">\r\n        <img class=\"img_12\" src=\"../../assets/images/audio_min_close.png\" style=\"padding-bottom: 6px;\" title=\"最小化\" />\r\n      </i>\r\n      <i class=\"i2\" @click=\"closeAudioWindow\">\r\n        <img class=\"img_12\" src=\"../../assets/images/audio_closewin.png\" style=\"padding-bottom: 2px;\" title=\"关闭\" />\r\n      </i>\r\n    </div>\r\n    <div class=\"content\">\r\n      <div class=\"audio-user-icon\">\r\n        <img :src=\"findImage(userInfo.url)\" class=\"user-icon\" alt />\r\n      </div>\r\n      <div class=\"audio-user-name\">\r\n        <span class=\"user-name\">\r\n          {{ userInfo.name }}\r\n        </span>\r\n      </div>\r\n      <div class=\"audio-loading\">\r\n        <!--        <AudioWaiting start=\"gray\" />-->\r\n        <!--        <AudioWaiting start=\"lightgray\" />-->\r\n        <!--        <AudioWaiting start=\"white\" />-->\r\n        <span>{{ waitingForOthers }}</span>\r\n        <AudioLoading v-if=\"status != 'chatting' && waitingForOthers != ''\" />\r\n      </div>\r\n      <div class=\"audio-quality\" v-if=\"!networkQuality\">\r\n        <span>当前通话连接质量不佳</span>\r\n      </div>\r\n      <div class=\"audio-sound\"></div>\r\n      <div class=\"audio-stop\">\r\n        <img src=\"../../assets/images/audio_mute.png\" @click=\"muteAudio\" v-if=\"status === 'chatting' && !isMute\" alt title=\"静音\" />\r\n        <img src=\"../../assets/images/audio_muted.png\" @click=\"muteAudio\" v-if=\"status === 'chatting' && isMute\" alt title=\"非静音\" />\r\n        <img src=\"../../assets/images/audio_cancel.png\" @click=\"cancelAudio\" alt title=\"挂断\" />\r\n        <img src=\"../../assets/images/audio_accept.png\" @click=\"acceptAudio\" v-if=\"status === 'waiting' && !isOriginator\" alt title=\"接听\" />\r\n        <img src=\"../../assets/images/audio_sound.png\" @click=\"soundAudio\" v-if=\"status === 'chatting' && !soundChange\" alt title=\"音量\" />\r\n        <img src=\"../../assets/images/audio_soundchange.png\" @click=\"soundAudio\"\r\n             v-if=\"status === 'chatting' && soundChange\" alt title=\"音量\"/>\r\n        <div class=\"audio-sound-control\" v-if=\"soundChange\">\r\n          <el-slider id=\"volumeSlider\" v-model=\"volume\" @change=\"volumeChange\" @wheel.native=\"wheelChange\" vertical height=\"100px\">\r\n          </el-slider>\r\n        </div>\r\n        <div class=\"audio-description\" v-show=\"status === 'chatting'\">\r\n          <span>静音</span>\r\n          <span>挂断</span>\r\n          <span>音量</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <audio id=\"audioWaitingSound\" src=\"./sounds/audioWaiting.mp3\" preload=\"auto\" loop=\"loop\" ref=\"audioWaiting\"></audio>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AudioLoading from './AudioLoading';\r\n// import fileOperational from '@/services/fileOperational';\r\n// import TRTCCloud from 'trtc-electron-sdk';\r\n// import { TRTCParams, TRTCAppScene, TRTCAudioQuality } from 'trtc-electron-sdk/liteav/trtc_define';\r\n\r\nexport default {\r\n  name: 'Audio',\r\n  components: {\r\n    AudioLoading\r\n  },\r\n  computed: {\r\n    audioMainBackground() {\r\n      if (this.userInfo.url) {\r\n        return `background: url(${this.userInfo.url});`;\r\n      }\r\n      return 'background: white;';\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userInfo: {},\r\n      isTop: false,\r\n      status: 'waiting',\r\n      isOriginator: true,\r\n      isMute: false,\r\n      waitingForOthers: '正在呼叫中',\r\n      userSig: {},\r\n      roomId: '',\r\n      timer: 0,\r\n      hour: 0,\r\n      minutes: 0,\r\n      seconds: 0,\r\n      chatTime: 0,\r\n      isJoined: false,\r\n      client: {},\r\n      localStream: {},\r\n      trtcCloud: {},\r\n      trtcParams: {},\r\n      networkQuality: true,\r\n      volume: 80,\r\n      soundChange: false,\r\n      showWindowTimer: 0,\r\n      count: 70,\r\n      connectTimer: 0,\r\n      connectCount: 20,\r\n      noNetworkCall: true\r\n    };\r\n  },\r\n  // methods: {\r\n  //   findImage(image) {\r\n  //     return fileOperational.getImage(image);\r\n  //   },\r\n  //   setToTopWin() {\r\n  //     const browserWindow = window.vm.$remote.getCurrentWindow();\r\n  //     browserWindow.setAlwaysOnTop(true);\r\n  //     if (!this.isTop) {\r\n  //       browserWindow.setAlwaysOnTop(true);\r\n  //       this.isTop = true;\r\n  //     } else {\r\n  //       browserWindow.setAlwaysOnTop(false);\r\n  //       this.isTop = false;\r\n  //     }\r\n  //   },\r\n  //   unsetToTopWin() {\r\n  //     const browserWindow = window.vm.$remote.getCurrentWindow();\r\n  //     browserWindow.setAlwaysOnTop(false);\r\n  //   },\r\n  //   hideWin() {\r\n  //     const browserWindow = window.vm.$remote.getCurrentWindow();\r\n  //     browserWindow.minimize();\r\n  //   },\r\n  //   closeWindow() {\r\n  //     this.leaveRoom();\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     ipcRenderer.send('audio-window-close');\r\n  //     setTimeout(() => {\r\n  //       const browserWindow = window.vm.$remote.getCurrentWindow();\r\n  //       browserWindow.hide();\r\n  //     }, 100);\r\n  //   },\r\n  //   muteAudio() {\r\n  //     this.isMute = !this.isMute;\r\n  //     this.trtcCloud.muteLocalAudio(this.isMute);\r\n  //   },\r\n  //   closeAudioWindow() {\r\n  //     if (this.status == 'chatting') {\r\n  //       this.$confirm('关闭窗口将结束语音聊天，确定要关闭吗？', '提示', {\r\n  //         confirmButtonText: '确定',\r\n  //         cancelButtonText: '取消',\r\n  //         type: 'warning',\r\n  //         customClass: 'message-box-class'\r\n  //       })\r\n  //         .then(() => {\r\n  //           setTimeout(() => {\r\n  //             this.cancelAudio();\r\n  //           }, 200);\r\n  //         })\r\n  //         .catch(() => {});\r\n  //     } else {\r\n  //       this.cancelAudio();\r\n  //     }\r\n  //   },\r\n  //   cancelAudio() {\r\n  //     this.leaveSocket();\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   overTimeCancelAudio() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     console.log('leaveSocket ====== 705');\r\n  //     ipcRenderer.send('overtimeCall', {\r\n  //       userInfo: this.userInfo,\r\n  //       roomId: this.roomId,\r\n  //       time: this.chatTime\r\n  //     });\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   cancelCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   connectingAudio() {\r\n  //     this.noNetworkCall = false;\r\n  //   },\r\n  //   async acceptAudioConnect() {\r\n  //     console.log('this.roomId ======= ', this.roomId);\r\n  //     await this.joinRoom();\r\n  //     this.acceptCall();\r\n  //   },\r\n  //   acceptAudio() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     ipcRenderer.send('acceptCall', {\r\n  //       userInfo: this.userInfo,\r\n  //       roomId: this.roomId,\r\n  //       time: this.chatTime\r\n  //     });\r\n  //     this.waitingForOthers = '连接中';\r\n  //     this.checkConnectTimeout();\r\n  //   },\r\n  //   acceptCall() {\r\n  //     this.$refs.audioWaiting.currentTime = 0;\r\n  //     this.$refs.audioWaiting.pause();\r\n  //     this.status = 'chatting';\r\n  //     this.waitingForOthers = '00:00';\r\n  //     this.hour = 0;\r\n  //     this.minutes = 0;\r\n  //     this.seconds = 0;\r\n  //     this.chatTime = 0;\r\n  //     this.timer = window.setInterval(this.startTimer, 1000);\r\n  //     this.soundChange = false;\r\n  //     this.trtcCloud.setAudioPlayoutVolume(this.volume);\r\n  //   },\r\n  //   refuseAudio() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     ipcRenderer.send('refuseCall', {\r\n  //       userInfo: this.userInfo,\r\n  //       roomId: this.roomId,\r\n  //       time: this.chatTime\r\n  //     });\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   refuseCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   leaveAudio() {\r\n  //     this.leaveSocket();\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   leaveCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   overtimeCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   busyCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   suspendCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   socketCloseAudio() {\r\n  //     console.log('leaveSocket ====== 712');\r\n  //     this.suspendSocket();\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   suspendSocket() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     if (this.waitingForOthers == '连接中' || this.waitingForOthers == '正在呼叫中') {\r\n  //       ipcRenderer.send('noNetworkCall', {\r\n  //         userInfo: this.userInfo,\r\n  //         roomId: this.roomId,\r\n  //         time: this.chatTime\r\n  //       });\r\n  //     } else {\r\n  //       ipcRenderer.send('suspendCall', {\r\n  //         userInfo: this.userInfo,\r\n  //         roomId: this.roomId,\r\n  //         time: this.chatTime\r\n  //       });\r\n  //     }\r\n  //   },\r\n  //   othersProcessingAudio() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   onlineAudio() {\r\n  //     this.noNetworkCall = false;\r\n  //   },\r\n  //   offlineAudio() {\r\n  //     this.noNetworkCall = true;\r\n  //   },\r\n  //   startTimer() {\r\n  //     this.seconds += 1;\r\n  //     if (this.seconds >= 60) {\r\n  //       this.seconds = 0;\r\n  //       this.minutes = this.minutes + 1;\r\n  //     }\r\n\r\n  //     if (this.minutes >= 60) {\r\n  //       this.minutes = 0;\r\n  //       this.hour = this.hour + 1;\r\n  //     }\r\n  //     if (this.hour > 0) {\r\n  //       this.waitingForOthers = \r\n  //        `${this.prefixInteger(this.hour)}:${this.prefixInteger(this.minutes)}:${this.prefixInteger(this.seconds)}`;\r\n  //     } else {\r\n  //       this.waitingForOthers = `${this.prefixInteger(this.minutes)}:${this.prefixInteger(this.seconds)}`;\r\n  //     }\r\n  //     this.chatTime = this.hour * 3600 + this.minutes * 60 + this.seconds;\r\n  //     console.log('this.chatTime ===== ', this.chatTime, new Date());\r\n  //     if (this.chatTime > 14400) {\r\n  //       console.log('超过4小时 14400s 自动挂断');\r\n  //       this.socketCloseAudio();\r\n  //     }\r\n  //   },\r\n  //   prefixInteger(num) {\r\n  //     return (Array(2).join('0') + num).slice(-2);\r\n  //   },\r\n  //   soundAudio() {\r\n  //     this.soundChange = !this.soundChange;\r\n  //   },\r\n  //   wheelChange(e) {\r\n  //     if (e.deltaY > 0) {\r\n  //       if (this.volume > 0) {\r\n  //         --this.volume;\r\n  //       } else if (this.volume == 0) {\r\n  //         this.volume = 0;\r\n  //       }\r\n  //     } else {\r\n  //       if (this.volume < 100) {\r\n  //         ++this.volume;\r\n  //       } else if (this.volume == 100) {\r\n  //         this.volume = 100;\r\n  //       }\r\n  //     }\r\n  //     this.trtcCloud.setAudioPlayoutVolume(this.volume);\r\n  //   },\r\n  //   volumeChange() {\r\n  //     this.soundChange = !this.soundChange;\r\n  //     this.trtcCloud.setAudioPlayoutVolume(this.volume);\r\n  //   },\r\n  //   checkWindowTimeout() {\r\n  //     const TIME_COUNT = 70;\r\n  //     if (!this.showWindowTimer) {\r\n  //       this.count = TIME_COUNT;\r\n  //       this.showWindowTimer = setInterval(() => {\r\n  //         if (this.count > 0 && this.count <= TIME_COUNT) {\r\n  //           this.count--;\r\n  //         } else {\r\n  //           clearInterval(this.showWindowTimer);\r\n  //           this.showWindowTimer = null;\r\n  //           if (this.status == 'waiting') {\r\n  //             this.overTimeCancelAudio();\r\n  //           }\r\n  //         }\r\n  //       }, 1000);\r\n  //     }\r\n  //   },\r\n  //   async joinRoom() {\r\n  //     this.trtcParams = new TRTCParams();\r\n  //     this.trtcParams.sdkAppId = this.userSig.sdkappid;\r\n  //     this.trtcParams.roomId = +this.roomId;\r\n  //     this.trtcParams.userId = this.userSig.UserID;\r\n  //     this.trtcParams.userSig = this.userSig.UserSig;\r\n\r\n  //     this.trtcCloud = new TRTCCloud();\r\n  //     let onEnterRoom = function(result) {\r\n  //       if (result > 0) {\r\n  //         console.log(`onEnterRoom，进房成功，使用了 ${result} 秒`);\r\n  //       } else {\r\n  //         console.warn(`onEnterRoom: 进房失败 ${result}`);\r\n  //       }\r\n  //     };\r\n  //     let onNetworkQuality = (localQuality, remoteQuality) => {\r\n  //       if (localQuality.quality > 3) {\r\n  //         this.networkQuality = false;\r\n  //       } else {\r\n  //         this.networkQuality = true;\r\n  //       }\r\n  //       if (remoteQuality.length > 0 && this.networkQuality) {\r\n  //         if (remoteQuality[0].quality > 3) {\r\n  //           this.networkQuality = false;\r\n  //         } else {\r\n  //           this.networkQuality = true;\r\n  //         }\r\n  //       }\r\n  //     };\r\n  //     // 订阅进房成功事件\r\n  //     this.trtcCloud.on('onNetworkQuality', onNetworkQuality);\r\n  //     this.trtcCloud.on('onEnterRoom', onEnterRoom);\r\n  //     this.trtcCloud.enterRoom(this.trtcParams, TRTCAppScene.TRTCAppSceneVideoCall);\r\n  //     this.trtcCloud.startLocalAudio(TRTCAudioQuality.TRTCAudioQualitySpeech);\r\n  //     this.isJoined = true;\r\n  //   },\r\n  //   async leaveRoom() {\r\n  //     if (!this.trtcCloud) {\r\n  //       return;\r\n  //     }\r\n  //     console.log('this.isJoined ======== ', this.isJoined);\r\n  //     if (!this.isJoined) {\r\n  //       console.warn('leave() - please join() firstly');\r\n  //       return;\r\n  //     }\r\n  //     let onExitRoom = function(reason) {\r\n  //       console.log(`onExitRoom, reason: ${reason}`);\r\n  //     };\r\n  //     this.trtcCloud.exitRoom();\r\n  //     this.trtcCloud.on('onExitRoom', onExitRoom);\r\n  //     this.isJoined = false;\r\n  //   },\r\n  //   joinSocket() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     ipcRenderer.send('sendCall', {\r\n  //       userInfo: this.userInfo,\r\n  //       roomId: this.roomId,\r\n  //       time: this.chatTime\r\n  //     });\r\n  //   },\r\n  //   checkConnectTimeout() {\r\n  //     const TIME_COUNT = 20;\r\n  //     if (!this.connectTimer) {\r\n  //       this.connectCount = TIME_COUNT;\r\n  //       this.connectTimer = setInterval(() => {\r\n  //         if (this.connectCount > 0 && this.connectCount <= TIME_COUNT) {\r\n  //           this.connectCount--;\r\n  //         } else {\r\n  //           clearInterval(this.connectTimer);\r\n  //           this.connectTimer = null;\r\n  //           console.log('checkConnectTimeout ===== ', this.connectCount, this.noNetworkCall);\r\n  //           if (this.noNetworkCall || this.waitingForOthers == '连接中' || this.waitingForOthers == '正在呼叫中') {\r\n  //             this.noNetworkCallCancelAudio();\r\n  //           }\r\n  //         }\r\n  //       }, 1000);\r\n  //     }\r\n  //   },\r\n  //   noNetworkCallCancelAudio() {\r\n  //     console.log('leaveSocket ====== 700');\r\n  //     this.suspendSocket();\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   leaveSocket() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     console.log('leaveSocket === ', this.status, this.isOriginator, this.noNetworkCall);\r\n  //     if (this.status == 'waiting' && this.isOriginator) {\r\n  //       // 706\r\n  //       console.log('leaveSocket ====== 706');\r\n  //       ipcRenderer.send('cancelCall', {\r\n  //         userInfo: this.userInfo,\r\n  //         roomId: this.roomId,\r\n  //         time: this.chatTime\r\n  //       });\r\n  //     } else if (this.status == 'waiting' && !this.isOriginator) {\r\n  //       // 703\r\n  //       console.log('leaveSocket ====== 703');\r\n  //       ipcRenderer.send('refuseCall', {\r\n  //         userInfo: this.userInfo,\r\n  //         roomId: this.roomId,\r\n  //         time: this.chatTime\r\n  //       });\r\n  //     } else if (this.status == 'chatting') {\r\n  //       // 704\r\n  //       console.log('leaveSocket ====== 704');\r\n  //       ipcRenderer.send('leaveCall', {\r\n  //         userInfo: this.userInfo,\r\n  //         roomId: this.roomId,\r\n  //         time: this.chatTime\r\n  //       });\r\n  //     }\r\n  //   },\r\n  //   clearParams() {\r\n  //     const browserWindow = window.vm.$remote.getCurrentWindow();\r\n  //     this.userInfo = {};\r\n  //     browserWindow.setAlwaysOnTop(false);\r\n  //     this.isTop = false;\r\n  //     this.timer = window.clearInterval(this.timer);\r\n  //     this.hour = 0;\r\n  //     this.minutes = 0;\r\n  //     this.seconds = 0;\r\n  //     this.chatTime = 0;\r\n  //     this.status = 'waiting';\r\n  //     this.isOriginator = true;\r\n  //     this.isMute = false;\r\n  //     this.waitingForOthers = '';\r\n  //     this.networkQuality = true;\r\n  //     this.soundChange = false;\r\n  //     this.volume = 80;\r\n  //     clearInterval(this.showWindowTimer);\r\n  //     this.showWindowTimer = null;\r\n  //     this.soundChange = false;\r\n  //     this.count = 70;\r\n  //     clearInterval(this.connectTimer);\r\n  //     this.connectTimer = null;\r\n  //     this.connectCount = 20;\r\n  //     (this.noNetworkCall = true), (this.$refs.audioWaiting.currentTime = 0);\r\n  //     this.$refs.audioWaiting.pause();\r\n  //   },\r\n  //   initAudio() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     ipcRenderer.removeAllListeners('loadAudio');\r\n  //     ipcRenderer.removeAllListeners('connectingAudio');\r\n  //     ipcRenderer.removeAllListeners('cancelAudio');\r\n  //     ipcRenderer.removeAllListeners('acceptAudio');\r\n  //     ipcRenderer.removeAllListeners('refuseAudio');\r\n  //     ipcRenderer.removeAllListeners('leaveAudio');\r\n  //     ipcRenderer.removeAllListeners('overtimeAudio');\r\n  //     ipcRenderer.removeAllListeners('busyAudio');\r\n  //     ipcRenderer.removeAllListeners('suspendAudio');\r\n  //     ipcRenderer.removeAllListeners('socketCloseAudio');\r\n  //     ipcRenderer.removeAllListeners('othersProcessingAudio');\r\n  //     ipcRenderer.removeAllListeners('onlineAudio');\r\n  //     ipcRenderer.removeAllListeners('offlineAudio');\r\n  //     ipcRenderer.removeAllListeners('cancelAudioForceCloseWin');\r\n  //     ipcRenderer.on('loadAudio', (e, data) => {\r\n  //       this.$nextTick(async () => {\r\n  //         console.log('loadAudio', data);\r\n  //         this.userInfo = data.userInfo;\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         this.status = 'waiting';\r\n  //         this.networkQuality = true;\r\n  //         this.isMute = false;\r\n  //         this.isOriginator = this.userInfo.isOriginator ? this.userInfo.isOriginator : false;\r\n  //         this.timer = window.clearInterval(this.timer);\r\n  //         this.hour = 0;\r\n  //         this.minutes = 0;\r\n  //         this.seconds = 0;\r\n  //         this.chatTime = 0;\r\n  //         this.soundChange = false;\r\n  //         this.volume = 80;\r\n  //         if (this.isOriginator) {\r\n  //           this.waitingForOthers = '正在呼叫中';\r\n  //           this.joinSocket();\r\n  //           this.checkConnectTimeout();\r\n  //         } else {\r\n  //           this.connectingAudio();\r\n  //           this.waitingForOthers = '邀请你接受通话';\r\n  //           this.checkWindowTimeout();\r\n  //         }\r\n  //         this.$refs.audioWaiting.play();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('connectingAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('connectingAudio');\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         if (this.isOriginator) {\r\n  //           this.waitingForOthers = '等待对方接受邀请';\r\n  //         } else {\r\n  //           this.waitingForOthers = '邀请你接受通话';\r\n  //         }\r\n  //         this.connectingAudio();\r\n  //         this.checkWindowTimeout();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('cancelAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('cancelAudio');\r\n  //         if (data && data.userSig) {\r\n  //           this.userSig = data.userSig;\r\n  //           this.roomId = data.roomId;\r\n  //         }\r\n  //         this.cancelCall();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('acceptAudio', (e, data) => {\r\n  //       this.$nextTick(async () => {\r\n  //         console.log('acceptAudio');\r\n  //         // this.userInfo = data.userInfo;\r\n  //         if (this.isJoined) {\r\n  //           return;\r\n  //         }\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         await this.joinRoom();\r\n  //         this.acceptCall();\r\n  //         clearInterval(this.showWindowTimer);\r\n  //         this.showWindowTimer = null;\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('refuseAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         // this.userInfo = data.userInfo;\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         console.log('refuseAudio');\r\n  //         this.refuseCall();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('leaveAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         // this.userInfo = data.userInfo;\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         console.log('leaveAudio');\r\n  //         this.leaveCall();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('overtimeAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         // this.userInfo = data.userInfo;\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         console.log('overtimeAudio');\r\n  //         this.overtimeCall();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('busyAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         // this.userInfo = data.userInfo;\r\n  //         this.userSig = data.userSig;\r\n  //         console.log('busyAudio');\r\n  //         // this.roomId = data.roomId;\r\n  //         if (this.roomId != data.roomId) {\r\n  //           return;\r\n  //         } else {\r\n  //           this.busyCall();\r\n  //         }\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('suspendAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         // this.userInfo = data.userInfo;\r\n  //         if (data && data.userSig) {\r\n  //           this.userSig = data.userSig;\r\n  //           this.roomId = data.roomId;\r\n  //         }\r\n  //         console.log('suspendAudio');\r\n  //         this.suspendCall();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('socketCloseAudio', () => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('socketCloseAudio');\r\n  //         this.socketCloseAudio();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('othersProcessingAudio', () => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('othersProcessingAudio');\r\n  //         this.othersProcessingAudio();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('onlineAudio', () => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('onlineAudio');\r\n  //         this.onlineAudio();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('offlineAudio', () => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('offlineAudio');\r\n  //         this.offlineAudio();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('cancelAudioForceCloseWin', () => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('cancelAudioForceCloseWin');\r\n  //         this.cancelAudio();\r\n  //       });\r\n  //     });\r\n  //   }\r\n  // },\r\n  beforeCreate() {\r\n    this.userInfo = {};\r\n  },\r\n  // mounted() {\r\n  //   this.initAudio();\r\n  //   this.$nextTick(() => {\r\n  //     document.addEventListener('keyup', e => {\r\n  //       if (e.keyCode == 27) {\r\n  //         this.closeWindow();\r\n  //       }\r\n  //     });\r\n  //   });\r\n  // }\r\n};\r\n</script>",
    "originData": "<template>\r\n  <div class=\"audio-main\">\r\n    <div :style=\"audioMainBackground\" class=\"user-background-class\"></div>\r\n    <div class=\"user-background-mask-class\"></div>\r\n    <div class=\"flex align-baseline justify-end topwork2 header-class\">\r\n      <i @click=\"setToTopWin\" v-if=\"!isTop\" class=\"i1\">\r\n        <img src=\"../../assets/images/audio_totop.png\" title=\"置顶\" />\r\n      </i>\r\n      <i @click=\"setToTopWin\" v-if=\"isTop\" class=\"i1\">\r\n        <img src=\"../../assets/images/audio_totop.png\" title=\"取消置顶\" />\r\n      </i>\r\n      <i @click=\"hideWin\" class=\"i1\">\r\n        <img class=\"img_12\" src=\"../../assets/images/audio_min_close.png\" style=\"padding-bottom: 6px;\" title=\"最小化\" />\r\n      </i>\r\n      <i class=\"i2\" @click=\"closeAudioWindow\">\r\n        <img class=\"img_12\" src=\"../../assets/images/audio_closewin.png\" style=\"padding-bottom: 2px;\" title=\"关闭\" />\r\n      </i>\r\n    </div>\r\n    <div class=\"content\">\r\n      <div class=\"audio-user-icon\">\r\n        <img :src=\"findImage(userInfo.url)\" class=\"user-icon\" alt />\r\n      </div>\r\n      <div class=\"audio-user-name\">\r\n        <span class=\"user-name\">\r\n          {{ userInfo.name }}\r\n        </span>\r\n      </div>\r\n      <div class=\"audio-loading\">\r\n        <!--        <AudioWaiting start=\"gray\" />-->\r\n        <!--        <AudioWaiting start=\"lightgray\" />-->\r\n        <!--        <AudioWaiting start=\"white\" />-->\r\n        <span>{{ waitingForOthers }}</span>\r\n        <AudioLoading v-if=\"status != 'chatting' && waitingForOthers != ''\" />\r\n      </div>\r\n      <div class=\"audio-quality\" v-if=\"!networkQuality\">\r\n        <span>当前通话连接质量不佳</span>\r\n      </div>\r\n      <div class=\"audio-sound\"></div>\r\n      <div class=\"audio-stop\">\r\n        <img src=\"../../assets/images/audio_mute.png\" @click=\"muteAudio\" v-if=\"status === 'chatting' && !isMute\" alt title=\"静音\" />\r\n        <img src=\"../../assets/images/audio_muted.png\" @click=\"muteAudio\" v-if=\"status === 'chatting' && isMute\" alt title=\"非静音\" />\r\n        <img src=\"../../assets/images/audio_cancel.png\" @click=\"cancelAudio\" alt title=\"挂断\" />\r\n        <img src=\"../../assets/images/audio_accept.png\" @click=\"acceptAudio\" v-if=\"status === 'waiting' && !isOriginator\" alt title=\"接听\" />\r\n        <img src=\"../../assets/images/audio_sound.png\" @click=\"soundAudio\" v-if=\"status === 'chatting' && !soundChange\" alt title=\"音量\" />\r\n        <img src=\"../../assets/images/audio_soundchange.png\" @click=\"soundAudio\"\r\n             v-if=\"status === 'chatting' && soundChange\" alt title=\"音量\"/>\r\n        <div class=\"audio-sound-control\" v-if=\"soundChange\">\r\n          <el-slider id=\"volumeSlider\" v-model=\"volume\" @change=\"volumeChange\" @wheel.native=\"wheelChange\" vertical height=\"100px\">\r\n          </el-slider>\r\n        </div>\r\n        <div class=\"audio-description\" v-show=\"status === 'chatting'\">\r\n          <span>静音</span>\r\n          <span>挂断</span>\r\n          <span>音量</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <audio id=\"audioWaitingSound\" src=\"./sounds/audioWaiting.mp3\" preload=\"auto\" loop=\"loop\" ref=\"audioWaiting\"></audio>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AudioLoading from './AudioLoading';\r\n// import fileOperational from '@/services/fileOperational';\r\n// import TRTCCloud from 'trtc-electron-sdk';\r\n// import { TRTCParams, TRTCAppScene, TRTCAudioQuality } from 'trtc-electron-sdk/liteav/trtc_define';\r\n\r\nexport default {\r\n  name: 'Audio',\r\n  components: {\r\n    AudioLoading\r\n  },\r\n  computed: {\r\n    audioMainBackground() {\r\n      if (this.userInfo.url) {\r\n        return `background: url(${this.userInfo.url});`;\r\n      }\r\n      return 'background: white;';\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      userInfo: {},\r\n      isTop: false,\r\n      status: 'waiting',\r\n      isOriginator: true,\r\n      isMute: false,\r\n      waitingForOthers: '正在呼叫中',\r\n      userSig: {},\r\n      roomId: '',\r\n      timer: 0,\r\n      hour: 0,\r\n      minutes: 0,\r\n      seconds: 0,\r\n      chatTime: 0,\r\n      isJoined: false,\r\n      client: {},\r\n      localStream: {},\r\n      trtcCloud: {},\r\n      trtcParams: {},\r\n      networkQuality: true,\r\n      volume: 80,\r\n      soundChange: false,\r\n      showWindowTimer: 0,\r\n      count: 70,\r\n      connectTimer: 0,\r\n      connectCount: 20,\r\n      noNetworkCall: true\r\n    };\r\n  },\r\n  // methods: {\r\n  //   findImage(image) {\r\n  //     return fileOperational.getImage(image);\r\n  //   },\r\n  //   setToTopWin() {\r\n  //     const browserWindow = window.vm.$remote.getCurrentWindow();\r\n  //     browserWindow.setAlwaysOnTop(true);\r\n  //     if (!this.isTop) {\r\n  //       browserWindow.setAlwaysOnTop(true);\r\n  //       this.isTop = true;\r\n  //     } else {\r\n  //       browserWindow.setAlwaysOnTop(false);\r\n  //       this.isTop = false;\r\n  //     }\r\n  //   },\r\n  //   unsetToTopWin() {\r\n  //     const browserWindow = window.vm.$remote.getCurrentWindow();\r\n  //     browserWindow.setAlwaysOnTop(false);\r\n  //   },\r\n  //   hideWin() {\r\n  //     const browserWindow = window.vm.$remote.getCurrentWindow();\r\n  //     browserWindow.minimize();\r\n  //   },\r\n  //   closeWindow() {\r\n  //     this.leaveRoom();\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     ipcRenderer.send('audio-window-close');\r\n  //     setTimeout(() => {\r\n  //       const browserWindow = window.vm.$remote.getCurrentWindow();\r\n  //       browserWindow.hide();\r\n  //     }, 100);\r\n  //   },\r\n  //   muteAudio() {\r\n  //     this.isMute = !this.isMute;\r\n  //     this.trtcCloud.muteLocalAudio(this.isMute);\r\n  //   },\r\n  //   closeAudioWindow() {\r\n  //     if (this.status == 'chatting') {\r\n  //       this.$confirm('关闭窗口将结束语音聊天，确定要关闭吗？', '提示', {\r\n  //         confirmButtonText: '确定',\r\n  //         cancelButtonText: '取消',\r\n  //         type: 'warning',\r\n  //         customClass: 'message-box-class'\r\n  //       })\r\n  //         .then(() => {\r\n  //           setTimeout(() => {\r\n  //             this.cancelAudio();\r\n  //           }, 200);\r\n  //         })\r\n  //         .catch(() => {});\r\n  //     } else {\r\n  //       this.cancelAudio();\r\n  //     }\r\n  //   },\r\n  //   cancelAudio() {\r\n  //     this.leaveSocket();\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   overTimeCancelAudio() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     console.log('leaveSocket ====== 705');\r\n  //     ipcRenderer.send('overtimeCall', {\r\n  //       userInfo: this.userInfo,\r\n  //       roomId: this.roomId,\r\n  //       time: this.chatTime\r\n  //     });\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   cancelCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   connectingAudio() {\r\n  //     this.noNetworkCall = false;\r\n  //   },\r\n  //   async acceptAudioConnect() {\r\n  //     console.log('this.roomId ======= ', this.roomId);\r\n  //     await this.joinRoom();\r\n  //     this.acceptCall();\r\n  //   },\r\n  //   acceptAudio() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     ipcRenderer.send('acceptCall', {\r\n  //       userInfo: this.userInfo,\r\n  //       roomId: this.roomId,\r\n  //       time: this.chatTime\r\n  //     });\r\n  //     this.waitingForOthers = '连接中';\r\n  //     this.checkConnectTimeout();\r\n  //   },\r\n  //   acceptCall() {\r\n  //     this.$refs.audioWaiting.currentTime = 0;\r\n  //     this.$refs.audioWaiting.pause();\r\n  //     this.status = 'chatting';\r\n  //     this.waitingForOthers = '00:00';\r\n  //     this.hour = 0;\r\n  //     this.minutes = 0;\r\n  //     this.seconds = 0;\r\n  //     this.chatTime = 0;\r\n  //     this.timer = window.setInterval(this.startTimer, 1000);\r\n  //     this.soundChange = false;\r\n  //     this.trtcCloud.setAudioPlayoutVolume(this.volume);\r\n  //   },\r\n  //   refuseAudio() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     ipcRenderer.send('refuseCall', {\r\n  //       userInfo: this.userInfo,\r\n  //       roomId: this.roomId,\r\n  //       time: this.chatTime\r\n  //     });\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   refuseCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   leaveAudio() {\r\n  //     this.leaveSocket();\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   leaveCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   overtimeCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   busyCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   suspendCall() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   socketCloseAudio() {\r\n  //     console.log('leaveSocket ====== 712');\r\n  //     this.suspendSocket();\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   suspendSocket() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     if (this.waitingForOthers == '连接中' || this.waitingForOthers == '正在呼叫中') {\r\n  //       ipcRenderer.send('noNetworkCall', {\r\n  //         userInfo: this.userInfo,\r\n  //         roomId: this.roomId,\r\n  //         time: this.chatTime\r\n  //       });\r\n  //     } else {\r\n  //       ipcRenderer.send('suspendCall', {\r\n  //         userInfo: this.userInfo,\r\n  //         roomId: this.roomId,\r\n  //         time: this.chatTime\r\n  //       });\r\n  //     }\r\n  //   },\r\n  //   othersProcessingAudio() {\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   onlineAudio() {\r\n  //     this.noNetworkCall = false;\r\n  //   },\r\n  //   offlineAudio() {\r\n  //     this.noNetworkCall = true;\r\n  //   },\r\n  //   startTimer() {\r\n  //     this.seconds += 1;\r\n  //     if (this.seconds >= 60) {\r\n  //       this.seconds = 0;\r\n  //       this.minutes = this.minutes + 1;\r\n  //     }\r\n\r\n  //     if (this.minutes >= 60) {\r\n  //       this.minutes = 0;\r\n  //       this.hour = this.hour + 1;\r\n  //     }\r\n  //     if (this.hour > 0) {\r\n  //       this.waitingForOthers = \r\n  //        `${this.prefixInteger(this.hour)}:${this.prefixInteger(this.minutes)}:${this.prefixInteger(this.seconds)}`;\r\n  //     } else {\r\n  //       this.waitingForOthers = `${this.prefixInteger(this.minutes)}:${this.prefixInteger(this.seconds)}`;\r\n  //     }\r\n  //     this.chatTime = this.hour * 3600 + this.minutes * 60 + this.seconds;\r\n  //     console.log('this.chatTime ===== ', this.chatTime, new Date());\r\n  //     if (this.chatTime > 14400) {\r\n  //       console.log('超过4小时 14400s 自动挂断');\r\n  //       this.socketCloseAudio();\r\n  //     }\r\n  //   },\r\n  //   prefixInteger(num) {\r\n  //     return (Array(2).join('0') + num).slice(-2);\r\n  //   },\r\n  //   soundAudio() {\r\n  //     this.soundChange = !this.soundChange;\r\n  //   },\r\n  //   wheelChange(e) {\r\n  //     if (e.deltaY > 0) {\r\n  //       if (this.volume > 0) {\r\n  //         --this.volume;\r\n  //       } else if (this.volume == 0) {\r\n  //         this.volume = 0;\r\n  //       }\r\n  //     } else {\r\n  //       if (this.volume < 100) {\r\n  //         ++this.volume;\r\n  //       } else if (this.volume == 100) {\r\n  //         this.volume = 100;\r\n  //       }\r\n  //     }\r\n  //     this.trtcCloud.setAudioPlayoutVolume(this.volume);\r\n  //   },\r\n  //   volumeChange() {\r\n  //     this.soundChange = !this.soundChange;\r\n  //     this.trtcCloud.setAudioPlayoutVolume(this.volume);\r\n  //   },\r\n  //   checkWindowTimeout() {\r\n  //     const TIME_COUNT = 70;\r\n  //     if (!this.showWindowTimer) {\r\n  //       this.count = TIME_COUNT;\r\n  //       this.showWindowTimer = setInterval(() => {\r\n  //         if (this.count > 0 && this.count <= TIME_COUNT) {\r\n  //           this.count--;\r\n  //         } else {\r\n  //           clearInterval(this.showWindowTimer);\r\n  //           this.showWindowTimer = null;\r\n  //           if (this.status == 'waiting') {\r\n  //             this.overTimeCancelAudio();\r\n  //           }\r\n  //         }\r\n  //       }, 1000);\r\n  //     }\r\n  //   },\r\n  //   async joinRoom() {\r\n  //     this.trtcParams = new TRTCParams();\r\n  //     this.trtcParams.sdkAppId = this.userSig.sdkappid;\r\n  //     this.trtcParams.roomId = +this.roomId;\r\n  //     this.trtcParams.userId = this.userSig.UserID;\r\n  //     this.trtcParams.userSig = this.userSig.UserSig;\r\n\r\n  //     this.trtcCloud = new TRTCCloud();\r\n  //     let onEnterRoom = function(result) {\r\n  //       if (result > 0) {\r\n  //         console.log(`onEnterRoom，进房成功，使用了 ${result} 秒`);\r\n  //       } else {\r\n  //         console.warn(`onEnterRoom: 进房失败 ${result}`);\r\n  //       }\r\n  //     };\r\n  //     let onNetworkQuality = (localQuality, remoteQuality) => {\r\n  //       if (localQuality.quality > 3) {\r\n  //         this.networkQuality = false;\r\n  //       } else {\r\n  //         this.networkQuality = true;\r\n  //       }\r\n  //       if (remoteQuality.length > 0 && this.networkQuality) {\r\n  //         if (remoteQuality[0].quality > 3) {\r\n  //           this.networkQuality = false;\r\n  //         } else {\r\n  //           this.networkQuality = true;\r\n  //         }\r\n  //       }\r\n  //     };\r\n  //     // 订阅进房成功事件\r\n  //     this.trtcCloud.on('onNetworkQuality', onNetworkQuality);\r\n  //     this.trtcCloud.on('onEnterRoom', onEnterRoom);\r\n  //     this.trtcCloud.enterRoom(this.trtcParams, TRTCAppScene.TRTCAppSceneVideoCall);\r\n  //     this.trtcCloud.startLocalAudio(TRTCAudioQuality.TRTCAudioQualitySpeech);\r\n  //     this.isJoined = true;\r\n  //   },\r\n  //   async leaveRoom() {\r\n  //     if (!this.trtcCloud) {\r\n  //       return;\r\n  //     }\r\n  //     console.log('this.isJoined ======== ', this.isJoined);\r\n  //     if (!this.isJoined) {\r\n  //       console.warn('leave() - please join() firstly');\r\n  //       return;\r\n  //     }\r\n  //     let onExitRoom = function(reason) {\r\n  //       console.log(`onExitRoom, reason: ${reason}`);\r\n  //     };\r\n  //     this.trtcCloud.exitRoom();\r\n  //     this.trtcCloud.on('onExitRoom', onExitRoom);\r\n  //     this.isJoined = false;\r\n  //   },\r\n  //   joinSocket() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     ipcRenderer.send('sendCall', {\r\n  //       userInfo: this.userInfo,\r\n  //       roomId: this.roomId,\r\n  //       time: this.chatTime\r\n  //     });\r\n  //   },\r\n  //   checkConnectTimeout() {\r\n  //     const TIME_COUNT = 20;\r\n  //     if (!this.connectTimer) {\r\n  //       this.connectCount = TIME_COUNT;\r\n  //       this.connectTimer = setInterval(() => {\r\n  //         if (this.connectCount > 0 && this.connectCount <= TIME_COUNT) {\r\n  //           this.connectCount--;\r\n  //         } else {\r\n  //           clearInterval(this.connectTimer);\r\n  //           this.connectTimer = null;\r\n  //           console.log('checkConnectTimeout ===== ', this.connectCount, this.noNetworkCall);\r\n  //           if (this.noNetworkCall || this.waitingForOthers == '连接中' || this.waitingForOthers == '正在呼叫中') {\r\n  //             this.noNetworkCallCancelAudio();\r\n  //           }\r\n  //         }\r\n  //       }, 1000);\r\n  //     }\r\n  //   },\r\n  //   noNetworkCallCancelAudio() {\r\n  //     console.log('leaveSocket ====== 700');\r\n  //     this.suspendSocket();\r\n  //     this.clearParams();\r\n  //     this.closeWindow();\r\n  //   },\r\n  //   leaveSocket() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     console.log('leaveSocket === ', this.status, this.isOriginator, this.noNetworkCall);\r\n  //     if (this.status == 'waiting' && this.isOriginator) {\r\n  //       // 706\r\n  //       console.log('leaveSocket ====== 706');\r\n  //       ipcRenderer.send('cancelCall', {\r\n  //         userInfo: this.userInfo,\r\n  //         roomId: this.roomId,\r\n  //         time: this.chatTime\r\n  //       });\r\n  //     } else if (this.status == 'waiting' && !this.isOriginator) {\r\n  //       // 703\r\n  //       console.log('leaveSocket ====== 703');\r\n  //       ipcRenderer.send('refuseCall', {\r\n  //         userInfo: this.userInfo,\r\n  //         roomId: this.roomId,\r\n  //         time: this.chatTime\r\n  //       });\r\n  //     } else if (this.status == 'chatting') {\r\n  //       // 704\r\n  //       console.log('leaveSocket ====== 704');\r\n  //       ipcRenderer.send('leaveCall', {\r\n  //         userInfo: this.userInfo,\r\n  //         roomId: this.roomId,\r\n  //         time: this.chatTime\r\n  //       });\r\n  //     }\r\n  //   },\r\n  //   clearParams() {\r\n  //     const browserWindow = window.vm.$remote.getCurrentWindow();\r\n  //     this.userInfo = {};\r\n  //     browserWindow.setAlwaysOnTop(false);\r\n  //     this.isTop = false;\r\n  //     this.timer = window.clearInterval(this.timer);\r\n  //     this.hour = 0;\r\n  //     this.minutes = 0;\r\n  //     this.seconds = 0;\r\n  //     this.chatTime = 0;\r\n  //     this.status = 'waiting';\r\n  //     this.isOriginator = true;\r\n  //     this.isMute = false;\r\n  //     this.waitingForOthers = '';\r\n  //     this.networkQuality = true;\r\n  //     this.soundChange = false;\r\n  //     this.volume = 80;\r\n  //     clearInterval(this.showWindowTimer);\r\n  //     this.showWindowTimer = null;\r\n  //     this.soundChange = false;\r\n  //     this.count = 70;\r\n  //     clearInterval(this.connectTimer);\r\n  //     this.connectTimer = null;\r\n  //     this.connectCount = 20;\r\n  //     (this.noNetworkCall = true), (this.$refs.audioWaiting.currentTime = 0);\r\n  //     this.$refs.audioWaiting.pause();\r\n  //   },\r\n  //   initAudio() {\r\n  //     const { ipcRenderer } = require('electron');\r\n  //     ipcRenderer.removeAllListeners('loadAudio');\r\n  //     ipcRenderer.removeAllListeners('connectingAudio');\r\n  //     ipcRenderer.removeAllListeners('cancelAudio');\r\n  //     ipcRenderer.removeAllListeners('acceptAudio');\r\n  //     ipcRenderer.removeAllListeners('refuseAudio');\r\n  //     ipcRenderer.removeAllListeners('leaveAudio');\r\n  //     ipcRenderer.removeAllListeners('overtimeAudio');\r\n  //     ipcRenderer.removeAllListeners('busyAudio');\r\n  //     ipcRenderer.removeAllListeners('suspendAudio');\r\n  //     ipcRenderer.removeAllListeners('socketCloseAudio');\r\n  //     ipcRenderer.removeAllListeners('othersProcessingAudio');\r\n  //     ipcRenderer.removeAllListeners('onlineAudio');\r\n  //     ipcRenderer.removeAllListeners('offlineAudio');\r\n  //     ipcRenderer.removeAllListeners('cancelAudioForceCloseWin');\r\n  //     ipcRenderer.on('loadAudio', (e, data) => {\r\n  //       this.$nextTick(async () => {\r\n  //         console.log('loadAudio', data);\r\n  //         this.userInfo = data.userInfo;\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         this.status = 'waiting';\r\n  //         this.networkQuality = true;\r\n  //         this.isMute = false;\r\n  //         this.isOriginator = this.userInfo.isOriginator ? this.userInfo.isOriginator : false;\r\n  //         this.timer = window.clearInterval(this.timer);\r\n  //         this.hour = 0;\r\n  //         this.minutes = 0;\r\n  //         this.seconds = 0;\r\n  //         this.chatTime = 0;\r\n  //         this.soundChange = false;\r\n  //         this.volume = 80;\r\n  //         if (this.isOriginator) {\r\n  //           this.waitingForOthers = '正在呼叫中';\r\n  //           this.joinSocket();\r\n  //           this.checkConnectTimeout();\r\n  //         } else {\r\n  //           this.connectingAudio();\r\n  //           this.waitingForOthers = '邀请你接受通话';\r\n  //           this.checkWindowTimeout();\r\n  //         }\r\n  //         this.$refs.audioWaiting.play();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('connectingAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('connectingAudio');\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         if (this.isOriginator) {\r\n  //           this.waitingForOthers = '等待对方接受邀请';\r\n  //         } else {\r\n  //           this.waitingForOthers = '邀请你接受通话';\r\n  //         }\r\n  //         this.connectingAudio();\r\n  //         this.checkWindowTimeout();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('cancelAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('cancelAudio');\r\n  //         if (data && data.userSig) {\r\n  //           this.userSig = data.userSig;\r\n  //           this.roomId = data.roomId;\r\n  //         }\r\n  //         this.cancelCall();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('acceptAudio', (e, data) => {\r\n  //       this.$nextTick(async () => {\r\n  //         console.log('acceptAudio');\r\n  //         // this.userInfo = data.userInfo;\r\n  //         if (this.isJoined) {\r\n  //           return;\r\n  //         }\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         await this.joinRoom();\r\n  //         this.acceptCall();\r\n  //         clearInterval(this.showWindowTimer);\r\n  //         this.showWindowTimer = null;\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('refuseAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         // this.userInfo = data.userInfo;\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         console.log('refuseAudio');\r\n  //         this.refuseCall();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('leaveAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         // this.userInfo = data.userInfo;\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         console.log('leaveAudio');\r\n  //         this.leaveCall();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('overtimeAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         // this.userInfo = data.userInfo;\r\n  //         this.userSig = data.userSig;\r\n  //         this.roomId = data.roomId;\r\n  //         console.log('overtimeAudio');\r\n  //         this.overtimeCall();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('busyAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         // this.userInfo = data.userInfo;\r\n  //         this.userSig = data.userSig;\r\n  //         console.log('busyAudio');\r\n  //         // this.roomId = data.roomId;\r\n  //         if (this.roomId != data.roomId) {\r\n  //           return;\r\n  //         } else {\r\n  //           this.busyCall();\r\n  //         }\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('suspendAudio', (e, data) => {\r\n  //       this.$nextTick(() => {\r\n  //         // this.userInfo = data.userInfo;\r\n  //         if (data && data.userSig) {\r\n  //           this.userSig = data.userSig;\r\n  //           this.roomId = data.roomId;\r\n  //         }\r\n  //         console.log('suspendAudio');\r\n  //         this.suspendCall();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('socketCloseAudio', () => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('socketCloseAudio');\r\n  //         this.socketCloseAudio();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('othersProcessingAudio', () => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('othersProcessingAudio');\r\n  //         this.othersProcessingAudio();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('onlineAudio', () => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('onlineAudio');\r\n  //         this.onlineAudio();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('offlineAudio', () => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('offlineAudio');\r\n  //         this.offlineAudio();\r\n  //       });\r\n  //     });\r\n  //     ipcRenderer.on('cancelAudioForceCloseWin', () => {\r\n  //       this.$nextTick(() => {\r\n  //         console.log('cancelAudioForceCloseWin');\r\n  //         this.cancelAudio();\r\n  //       });\r\n  //     });\r\n  //   }\r\n  // },\r\n  beforeCreate() {\r\n    this.userInfo = {};\r\n  },\r\n  // mounted() {\r\n  //   this.initAudio();\r\n  //   this.$nextTick(() => {\r\n  //     document.addEventListener('keyup', e => {\r\n  //       if (e.keyCode == 27) {\r\n  //         this.closeWindow();\r\n  //       }\r\n  //     });\r\n  //   });\r\n  // }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.header-class {\r\n  -webkit-app-region: drag;\r\n  width: 100%;\r\n  z-index: 1001;\r\n}\r\n\r\n.audio-main {\r\n  position: relative;\r\n  display: flex;\r\n  width: 300px;\r\n  height: 450px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.user-background-class {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  left: 0px;\r\n  top: 0px;\r\n  background-size: 450px !important;\r\n  background-size: cover !important;\r\n  background-position: center !important;\r\n  filter: blur(15px);\r\n}\r\n\r\n.user-background-mask-class {\r\n  background: black;\r\n  opacity: 0.7;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  left: 0px;\r\n  top: 0px;\r\n  background-size: 450px !important;\r\n  background-size: cover !important;\r\n  background-position: center !important;\r\n}\r\n\r\n.content {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  display: flex;\r\n  width: 300px;\r\n  height: 450px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 5;\r\n}\r\n\r\n/*.content img {*/\r\n/*  width: 54px;*/\r\n/*  height: 54px;*/\r\n/*  border-radius: 50%;*/\r\n/*}*/\r\n\r\n.user-icon {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.user-name {\r\n  font-size: 16px;\r\n  color: white;\r\n}\r\n\r\n.i1,\r\n.i2 {\r\n  padding-top: 0px;\r\n}\r\n.i1:hover {\r\n  background: #222222;\r\n}\r\n.i2:hover {\r\n  background: #fa5151;\r\n}\r\n\r\n.audio-loading {\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 30px;\r\n  align-items: flex-end;\r\n}\r\n\r\n.audio-loading span {\r\n  color: white;\r\n}\r\n\r\n.audio-quality span {\r\n  color: white;\r\n}\r\n\r\n.audio-user-icon {\r\n  height: 110px;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n}\r\n\r\n.audio-user-name {\r\n  height: 30px;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n}\r\n\r\n.audio-sound {\r\n  height: 100px;\r\n}\r\n\r\n.audio-stop {\r\n  position: relative;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  width: 270px;\r\n  justify-content: space-around;\r\n}\r\n\r\n.audio-description {\r\n  position: absolute;\r\n  height: 10px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  width: 270px;\r\n  justify-content: space-around;\r\n  color: white;\r\n  font-size: 12px;\r\n  top: 113px;\r\n}\r\n\r\n.audio-sound-control {\r\n  position: absolute;\r\n  left: 206px;\r\n  top: -60px;\r\n}\r\n.message-box-class {\r\n  width: 280px;\r\n}\r\n</style>\r\n<style>\r\n.audio-sound-control .el-slider__button {\r\n  width: 10px;\r\n  height: 10px;\r\n}\r\n</style>\r\n",
    "cssJson": [
      {
        ".header-class": {
          "-webkit-app-region": "drag",
          "width": "100%",
          "z-index": "1001"
        },
        ".audio-main": {
          "position": "relative",
          "display": "flex",
          "width": "300px",
          "height": "450px",
          "flex-direction": "column",
          "align-items": "center",
          "justify-content": "center"
        },
        ".user-background-class": {
          "width": "100%",
          "height": "100%",
          "position": "absolute",
          "left": "0px",
          "top": "0px",
          "background-size": "450px !important",
          "background-position": "center !important",
          "filter": "blur(15px)"
        },
        ".user-background-mask-class": {
          "background": "black",
          "opacity": "0.7",
          "width": "100%",
          "height": "100%",
          "position": "absolute",
          "left": "0px",
          "top": "0px",
          "background-size": "450px !important",
          "background-position": "center !important"
        },
        ".content": {
          "width": "300px",
          "height": "450px",
          "position": "absolute",
          "display": "flex",
          "flex-direction": "column",
          "align-items": "center",
          "justify-content": "center",
          "z-index": "5"
        },
        ".user-icon": {
          "width": "80px",
          "height": "80px",
          "border-radius": "50%"
        },
        ".user-name": {
          "font-size": "16px",
          "color": "white"
        },
        ".i1,.i2": {
          "padding-top": "0px"
        },
        ".i1:hover": {
          "background": "#222222"
        },
        ".i2:hover": {
          "background": "#fa5151"
        },
        ".audio-loading": {
          "display": "flex",
          "flex-direction": "row",
          "height": "30px",
          "align-items": "flex-end"
        },
        ".audio-loading span": {
          "color": "white"
        },
        ".audio-quality span": {
          "color": "white"
        },
        ".audio-user-icon": {
          "height": "110px",
          "display": "flex",
          "flex-direction": "column-reverse"
        },
        ".audio-user-name": {
          "height": "30px",
          "display": "flex",
          "flex-direction": "column-reverse"
        },
        ".audio-sound": {
          "height": "100px"
        },
        ".audio-stop": {
          "position": "relative",
          "height": "100px",
          "display": "flex",
          "align-items": "flex-end",
          "width": "270px",
          "justify-content": "space-around"
        },
        ".audio-description": {
          "position": "absolute",
          "height": "10px",
          "display": "flex",
          "align-items": "flex-end",
          "width": "270px",
          "justify-content": "space-around",
          "color": "white",
          "font-size": "12px",
          "top": "113px"
        },
        ".audio-sound-control": {
          "position": "absolute",
          "left": "206px",
          "top": "-60px"
        },
        ".message-box-class": {
          "width": "280px"
        }
      },
      {
        ".audio-sound-control .el-slider__button": {
          "width": "10px",
          "height": "10px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/contact/info.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"info\">\n    <div class=\"info-contact\">\n      <div class=\"info-top\">\n        <!-- 联系人昵称，性别icon -->\n        <!-- 头像 -->\n        <div class=\"info-top-avatar\">\n          <!-- 联系人 -->\n          <span @click=\"openImgView(contactAvatar)\">\n            <MemberIcon\n              :image=\"contactAvatar\"\n              iconType=\"large\"\n              :userRank=\"userInfo.userRank\"\n              :vipType=\"userInfo.vipType\"\n              v-if=\"infoType == 0\"\n            />\n          </span>\n          <!-- 群聊 -->\n          <span @click=\"openImgView(groupAvatar)\">\n            <el-avatar\n              v-if=\"infoType == 1 && !name\" \n              fit=\"fill\"\n              :src=\"findImage(groupAvatar) | hand_group_avatar\"  \n              @error=\"replaceImg\" \n              :key=\"groupAvatar\">\n              <img src=\"../../assets/images/group_avtar.png\" alt=\"\" />\n            </el-avatar>\n          </span>\n          <!-- 讨论组 -->\n          <DiscussionIcon v-if=\"infoType == 1 && name\" iconType=\"huge\" :name=\"groupName\" />\n        </div>\n        <div>\n          <div class=\"info-contact-name flex\" v-if=\"this.infoType == 0\">\n            <div class=\"into-top-name\">{{ contactName }}</div>\n            <LevelIcon\n              v-if=\"userInfo.inviteCode\"\n              :inviteCode=\"userInfo.inviteCode\"\n              :userRank=\"userInfo.userRank\"\n              iconType=\"large\"\n              :vipType=\"userInfo.vipType\"\n              :inviteCodeType=\"userInfo.inviteCodeType\"\n            />\n          </div>\n          <!-- <div class=\"info-gender-icon\" v-if=\"this.infoType == 0\">\n            <img src=\"../../assets/images/sex_girl.png\" title=\"女\" v-if=\"this.userSex == 2\" />\n            <img\n              src=\"../../assets/images/sex_boy.png\"\n              title=\"男\"\n              v-else-if=\"this.userSex == 1\"\n            />\n            <img src=\"../../assets/images/sex_place.png\" title=\"男\" v-else />\n          </div> -->\n          <!-- 群昵称 -->\n          <div class=\"info-group-name\" v-if=\"this.infoType == 1\">\n            <div class=\"group-nickname\">{{ groupName }}</div>\n          </div>\n          <div>\n            <LuckIdIcon\n              v-if=\"this.infoType == 0\"\n              :inviteCode=\"userInfo.inviteCode\"\n              :userRank=\"userInfo.userRank\"\n              iconType=\"large\"\n              :vipType=\"userInfo.vipType\"\n              :inviteCodeType=\"userInfo.inviteCodeType\"\n              :listFlag=\"false\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- 签名 -->\n      <div class=\"info-middle\" v-if=\"noteMsg == 0\">{{ noteInfo }}</div>\n      <el-popover placement=\"bottom\" width=\"400\" trigger=\"click\" :content=\"noteInfo\" popper-class=\"info-popover\" v-if=\"noteMsg == 1\">\n        <div slot=\"reference\" class=\"info-middle info-note\">{{ noteInfo }}</div>\n      </el-popover>\n      <el-divider class=\"info-divider\"></el-divider>\n      <!-- 好友-备注，地区，ID -->\n      <div class=\"contact-form\" v-if=\"this.infoType == 0\">\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"5\">\n            <!-- 性别 -->\n            <span>{{ $t('my_information_0009') }}</span>\n          </el-col>\n          <el-col :span=\"19\" class=\"item-notes\" style=\"margin-top: 0px;\">\n            <p>{{ userSex == 1 ? $t('my_information_0010') : userSex === 2 ? $t('my_information_0011') : '' }}</p>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"5\">\n            <!-- 备注 -->\n            <span>{{ $t('Universal_0185') }}</span>\n          </el-col>\n          <el-col :span=\"19\" class=\"item-notes\">\n            <editable-input\n              :target-value=\"friendNotes\"\n              target-label=\"friendNotes\"\n              :place-holder=\"$t('Universal_0372')\"\n              @updateUserInfo=\"updateUserInfo\"\n              maxsize=\"18\"\n            />\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"5\">\n            <!-- 地区 -->\n            <span>{{ $t('Universal_0212') }}</span>\n          </el-col>\n          <el-col :span=\"19\" style=\"padding-left: 6px;\">\n            <div>{{ contactArea }}</div>\n          </el-col>\n        </el-row>\n        <!-- <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"4\">\n            <span>ID</span>\n          </el-col>\n          <el-col :span=\"18\">\n            <div>{{contactId}}</div>\n          </el-col>\n        </el-row> -->\n      </div>\n      <!-- 群聊-群人数，地区，ID -->\n      <div class=\"group-form\" v-else>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"labelWidth\">\n            <span v-if=\"!name\">{{ $t('chat_comm_set_0030') }}</span>\n            <span v-else>{{ $t('book_group_0027') }}</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div>{{ contactNum }}</div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\" v-if=\"!name\">\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('Universal_0212') }}</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div>{{ contactArea }}</div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\" v-if=\"!name\">\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('chat_createcommunity_0010') }}</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div>{{ groupTab | tabFilter(statusMap) }}</div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\" v-if=\"!name\">\n          <el-col :span=\"labelWidth\">\n            <span>ID</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div>{{ contactId }}</div>\n          </el-col>\n        </el-row>\n      </div>\n\n      <!-- 发消息-按钮 -->\n      <div class=\"info-btn\">\n        <el-button type=\"primary\" @click=\"sendMsg\">{{ $t('Universal_0359') }}</el-button>\n      </div>\n\n      <!-- 群聊-编辑资料 -->\n      <div class=\"info-edit\" v-if=\"this.infoType == 1 && authStatus != '3'\">\n        <el-button type=\"text\" @click=\"editrelation\" v-if=\"!name\">{{ $t('chat_comm_set_0033') }}</el-button>\n      </div>\n    </div>\n    <GroupInfoEdit :info=\"groupInfo\" @refreshPage=\"refreshPage\" ref=\"groupInfoEdit\" />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DiscussionIcon from '@/components/memberIcon/DiscussionIcon';\nimport GroupInfoEdit from '../chat/group/components/GroupInfoEdit';\nimport EditableInput from '@/components/memberCard/EditableInput';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport { get_country_area, get_friend_user_info, set_member_notes } from '@/server.js';\nimport store from '@/store';\nimport { convertToPinyin } from '@/utils/pinyin';\nimport { contFriSize, contGrpSize } from '@/utils';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport fileOperational from '@/services/fileOperational';\n\nimport  { imgView } from '@/utils/util.js'\n\nexport default {\n  name: 'Info',\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    EditableInput,\n    GroupInfoEdit,\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  data() {\n    //这里存放数据\n    return {\n      id: '',\n      contactInfo: {},\n      contactName: this.$t('chat_search_0009'),\n      groupName: this.$t('chat_search_0010'),\n      // contactAvatar: require('../chat/images/default.png'),\n      // groupAvatar: require('../chat/images/group_avtar.png'),\n      contactAvatar:require('@/assets/images/default.png'),\n      groupAvatar: require('@/assets/images/group_avtar.png'),\n      noteInfo: this.$t('my_information_0012'),\n      contactId: '-',\n      contactArea: '-',\n      contactNum: '-',\n      groupTab: '-',\n      infoType: 1,\n      userSex: 0, //性别：1男，2女，0未知\n      groupInfo: {},\n      groupProfile: '',\n      people: '',\n      groupCode: '',\n      region: '',\n      userInfo: {},\n      userNickName: '',\n      gender: '',\n      userHeadImg: '',\n      personalSign: '',\n      friendNotes: '',\n      inviteCode: '',\n      country: '',\n      city: '',\n      countryName: '',\n      cityName: '',\n      authStatus: '',\n      groupType: '',\n      name: '',\n      statusMap:  {\n        // \"\": \"-\",\n        // 0: \"-\",\n        1: this.$t('chat_createcommunity_0012'),\n        2: \"BTC\",\n        3: this.$t('chat_createcommunity_0014'),\n        4: this.$t('chat_createcommunity_0015'),\n        5: this.$t('chat_createcommunity_0016'),\n        6: this.$t('chat_createcommunity_0017'),\n        7: \"Defi\",\n        8: this.$t('chat_createcommunity_0019'),\n        9: this.$t('chat_createcommunity_0020'),\n        10: this.$t('chat_createcommunity_0021')\n      }\n    };\n  },\n  filters: {\n    tabFilter(status, statusMap) {\n      return statusMap[status]||\"\";\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 7;\n      } else {\n        return 14;\n      }\n    },\n    valueWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 17;\n      } else {\n        return 10;\n      }\n    },\n    noteMsg: function() {\n      if (this.getBLen(this.noteInfo) == 86 || this.getBLen(this.noteInfo) >= 89) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    async $route() {\n      await this.init();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.infoType = this.$route.query.flag; //2讨论组\n    this.id = this.$route.query.id;\n    this.contactInfoShow();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  //方法集合\n  methods: {\n    // 打开图片查看器\n    openImgView (originAvatarURl) {\n      console.log('originAvatarURl=', originAvatarURl)\n      imgView(originAvatarURl, this.id)\n    },\n    findImage(image) {\n      return fileOperational.getImage(image,true);\n    },\n    init() {\n      this.contactInfoShow();\n    },\n    async refreshPage() {\n      this.init();\n      await this.$store.dispatch('GET_GROUP_LIST');\n    },\n    async contactInfoShow() {\n      // flag=0联系认66；\n      this.name = this.$route.query.name;\n      this.infoType = this.$route.query.flag;\n      console.log(this.infoType);\n      this.userInfo = {};\n      if (this.$route.query.flag == 0) {\n        // 查本地表，获取-性别、介绍（签名）、备注、地区、头像、昵称、\n        let res = await get_friend_user_info({ id: this.$route.query.id });\n        console.log('性别----》',res);\n        this.userInfo = res.data || {};\n        if(res?.data?.id&&res?.data?.userNickName){\n          this.id = this.userInfo.id;\n          this.contactName = this.userInfo.userNickName;\n          this.userSex = this.userInfo.gender;\n          this.contactAvatar = this.userInfo.userHeadImg || this.contactAvatar;\n          this.noteInfo = this.userInfo.personalSign;\n          this.friendNotes = this.userInfo.friendNotes;\n          this.contactId = this.userInfo.inviteCode;\n          this.groupTab = this.userInfo.groupTab;\n          this.getRegion();\n          this.updateFriendInfo();\n        }else{\n          console.log('异常数据',res?.data);\n        }\n      }\n      // flag=1群聊\n      if (this.$route.query.flag == 1) {\n        // 查本地表，获取-简介（签名）、地区、昵称、头像、群人数\n        let groupInfo = await SQLUtils.retrieveGroupsInfo(this.$route.query.id);\n        groupInfo.authStatus = this.$route.query.authStatus;\n        this.authStatus = this.$route.query.authStatus;\n        if (groupInfo && groupInfo.country && groupInfo.city) {\n          groupInfo.countryName = await SQLUtils.getTAreaCountryOrCityName(groupInfo.country);\n          groupInfo.cityName = await SQLUtils.getTAreaCountryOrCityName(groupInfo.city);\n          groupInfo.region = groupInfo.countryName + '-' + groupInfo.cityName;\n          this.contactArea = groupInfo.region;\n          this.country = groupInfo.country;\n          this.city = groupInfo.city;\n          this.countryName = groupInfo.countryName;\n          this.cityName = groupInfo.cityName;\n        } else {\n          groupInfo.region = '';\n          groupInfo.country = '';\n          groupInfo.city = '';\n          this.contactArea = '';\n          this.country = '';\n          this.city = '';\n        }\n        console.log('res', groupInfo);\n        this.id = groupInfo.id;\n        this.groupName = groupInfo.groupName;\n        if (groupInfo.groupAvatar) {\n          this.groupAvatar = groupInfo.groupAvatar;\n        } else {\n          // this.groupAvatar = require('../chat/images/group_avtar.png');\n          this.groupAvatar = require('@/assets/images/group_avtar.png');\n        }\n        this.noteInfo = groupInfo.groupProfile;\n        this.contactNum = groupInfo.people;\n        this.contactId = groupInfo.groupCode;\n        this.groupType = groupInfo.groupType;\n        this.groupTab = groupInfo.groupTab;\n      }\n    },\n    async getRegion() {\n      let { areaCountryCode = '', areaCityCode = '' } = this.userInfo || {};\n      // let areaCountryCode = \"country\" , areaCityCode = \"city\";\n      if (this.userInfo && areaCountryCode && areaCityCode) {\n        let res = await get_country_area({\n          codes: areaCountryCode + \",\" + areaCityCode,\n        });\n        let [country, city] = [\n          res.data?.[areaCountryCode] || {},\n          res.data?.[areaCityCode] || {},\n        ];\n        this.contactArea =\n          country?.name && city?.name\n            ? `${country.name}-${city.name}`\n            : country?.name || city?.name || '';\n      } else {\n        this.userInfo.areaCityCode = '';\n        this.userInfo.areaCountryCode = '';\n        this.contactArea = '';\n      }\n    },\n    async updateFriendInfo() {\n      let item = {\n        friend_id: this.userInfo.id,\n        friend_nick_name: this.userInfo.userNickName,\n        friend_nick_name_pinyin: convertToPinyin(this.userInfo.userNickName)||'',\n        friend_head_img: this.userInfo.userHeadImg,\n        friend_friendNotes: this.userInfo.friendNotes,\n        friend_friendNotes_pinyin: convertToPinyin(this.userInfo.friendNotes)||'',\n        invite_code: this.userInfo.inviteCode,\n        vipType: this.userInfo.vipType,\n        inviteCodeType: this.userInfo.inviteCodeType,\n        userRank: this.userInfo.userRank\n      };\n      let searchRet = await window.vm\n        .$knex('t_contacts')\n        .where({ friend_id: this.userInfo.id })\n        .select();\n      if (searchRet && searchRet.length > 0) {\n        //更新\n        await window.vm\n          .$knex('t_contacts')\n          .where('friend_id', '=', this.userInfo.id)\n          .update(item);\n      }\n      await this.$store.dispatch('GET_FRIENDS_LIST');\n    },\n    async updateUserInfo(label, ...values) {\n      let value = null;\n      if (values.length == 1) {\n        value = values[0];\n        value = value.trim() == '' ? null : value.trim();\n      }\n      if (label == 'friendNotes') {\n        this.friendNotes = value;\n        let params = {\n          friendId: this.id,\n          friendNotes: value == '' ? null : value\n        };\n        let res = await set_member_notes(params);\n        if (res.code == '200') {\n          //更新数据库\n          await window.vm\n            .$knex('t_contacts')\n            .update('friend_friendNotes', this.friendNotes)\n            .update('friend_friendNotes_pinyin', this.friendNotes == undefined ? '' : convertToPinyin(this.friendNotes))\n            .where('friend_id', this.id);\n          this.$message.success(res.msg);\n          store.dispatch('GET_LAST_MSG_LIST');\n          store.dispatch('GET_FRIENDS_LIST');\n        }\n      }\n    },\n    sendMsg() {\n      if (this.infoType == 0) {\n        // 好友-发消息\n        const userId = localStorage.userId;\n        const current = {\n          id: this.id,\n          fromId: this.id,\n          targetId: userId,\n          fromType: '999',\n          targetType: 1, //单聊\n          msgType: 1, //默认文本\n          timer: new Date().getTime(),\n          uniqueCode: contFriSize(userId, this.id),\n          friendName: encodeURI(this.contactName)\n        };\n        this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n        this.$store.dispatch('SET_CURRENT_CHAT', current);\n        this.$router.push({\n          path: '/app/chat/single/message',\n          query: current\n        });\n      } else {\n        // 群-发消息\n        let current = {\n          targetId: this.id,\n          id: this.id,\n          uniqueCode: contGrpSize(this.id),\n          sessionName: this.groupName,\n          sessionIcon: this.groupAvatar,\n          fromName: this.$store.state.common.userInfo.nickName,\n          targetType: 2, //单聊\n          msgType: 1, //默认文本\n          // item,\n          fromType: '999',\n          groupType: this.groupType\n        };\n        this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n        this.$store.dispatch('SET_CURRENT_CHAT', current);\n        if (this.groupType == 1) {\n          this.$router.push({\n            path: '/app/chat/group/message',\n            query: current\n          });\n        } else {\n          this.$router.push({\n            path: '/app/chat/discussion/message',\n            query: current\n          });\n        }\n      }\n    },\n    // 社区信息编辑\n    editrelation() {\n      this.groupInfo.id = this.id;\n      this.groupInfo.groupAvatar = this.groupAvatar;\n      this.groupInfo.groupName = this.groupName;\n      this.groupInfo.groupProfile = this.noteInfo;\n\n      this.groupInfo.countryName = this.countryName;\n      this.groupInfo.cityName = this.cityName;\n      this.groupInfo.country = this.country;\n      this.groupInfo.city = this.city;\n      this.groupInfo.groupTab = this.groupTab;\n      // this.$refs.groupInfoEdit.onPop();\n\n      this.$nextTick(async () => {\n        await this.$refs.groupInfoEdit.onPop();\n      });\n    },\n    // onPop() {\n    //     this.groupEditVisible = true;\n    // },\n    // 计算中英文长度\n    getBLen(str) {\n      if (str == null) return 0;\n      if (typeof str != 'string') {\n        str += '';\n      }\n      return str.replace(/[^\\x00-\\xff]/g, '01').length;\n    },\n    // 处理图片404问题\n    replaceImg() {\n      return true;\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<template>\n  <div class=\"info\">\n    <div class=\"info-contact\">\n      <div class=\"info-top\">\n        <!-- 联系人昵称，性别icon -->\n        <!-- 头像 -->\n        <div class=\"info-top-avatar\">\n          <!-- 联系人 -->\n          <span @click=\"openImgView(contactAvatar)\">\n            <MemberIcon\n              :image=\"contactAvatar\"\n              iconType=\"large\"\n              :userRank=\"userInfo.userRank\"\n              :vipType=\"userInfo.vipType\"\n              v-if=\"infoType == 0\"\n            />\n          </span>\n          <!-- 群聊 -->\n          <span @click=\"openImgView(groupAvatar)\">\n            <el-avatar\n              v-if=\"infoType == 1 && !name\" \n              fit=\"fill\"\n              :src=\"findImage(groupAvatar) | hand_group_avatar\"  \n              @error=\"replaceImg\" \n              :key=\"groupAvatar\">\n              <img src=\"../../assets/images/group_avtar.png\" alt=\"\" />\n            </el-avatar>\n          </span>\n          <!-- 讨论组 -->\n          <DiscussionIcon v-if=\"infoType == 1 && name\" iconType=\"huge\" :name=\"groupName\" />\n        </div>\n        <div>\n          <div class=\"info-contact-name flex\" v-if=\"this.infoType == 0\">\n            <div class=\"into-top-name\">{{ contactName }}</div>\n            <LevelIcon\n              v-if=\"userInfo.inviteCode\"\n              :inviteCode=\"userInfo.inviteCode\"\n              :userRank=\"userInfo.userRank\"\n              iconType=\"large\"\n              :vipType=\"userInfo.vipType\"\n              :inviteCodeType=\"userInfo.inviteCodeType\"\n            />\n          </div>\n          <!-- <div class=\"info-gender-icon\" v-if=\"this.infoType == 0\">\n            <img src=\"../../assets/images/sex_girl.png\" title=\"女\" v-if=\"this.userSex == 2\" />\n            <img\n              src=\"../../assets/images/sex_boy.png\"\n              title=\"男\"\n              v-else-if=\"this.userSex == 1\"\n            />\n            <img src=\"../../assets/images/sex_place.png\" title=\"男\" v-else />\n          </div> -->\n          <!-- 群昵称 -->\n          <div class=\"info-group-name\" v-if=\"this.infoType == 1\">\n            <div class=\"group-nickname\">{{ groupName }}</div>\n          </div>\n          <div>\n            <LuckIdIcon\n              v-if=\"this.infoType == 0\"\n              :inviteCode=\"userInfo.inviteCode\"\n              :userRank=\"userInfo.userRank\"\n              iconType=\"large\"\n              :vipType=\"userInfo.vipType\"\n              :inviteCodeType=\"userInfo.inviteCodeType\"\n              :listFlag=\"false\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- 签名 -->\n      <div class=\"info-middle\" v-if=\"noteMsg == 0\">{{ noteInfo }}</div>\n      <el-popover placement=\"bottom\" width=\"400\" trigger=\"click\" :content=\"noteInfo\" popper-class=\"info-popover\" v-if=\"noteMsg == 1\">\n        <div slot=\"reference\" class=\"info-middle info-note\">{{ noteInfo }}</div>\n      </el-popover>\n      <el-divider class=\"info-divider\"></el-divider>\n      <!-- 好友-备注，地区，ID -->\n      <div class=\"contact-form\" v-if=\"this.infoType == 0\">\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"5\">\n            <!-- 性别 -->\n            <span>{{ $t('my_information_0009') }}</span>\n          </el-col>\n          <el-col :span=\"19\" class=\"item-notes\" style=\"margin-top: 0px;\">\n            <p>{{ userSex == 1 ? $t('my_information_0010') : userSex === 2 ? $t('my_information_0011') : '' }}</p>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"5\">\n            <!-- 备注 -->\n            <span>{{ $t('Universal_0185') }}</span>\n          </el-col>\n          <el-col :span=\"19\" class=\"item-notes\">\n            <editable-input\n              :target-value=\"friendNotes\"\n              target-label=\"friendNotes\"\n              :place-holder=\"$t('Universal_0372')\"\n              @updateUserInfo=\"updateUserInfo\"\n              maxsize=\"18\"\n            />\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"5\">\n            <!-- 地区 -->\n            <span>{{ $t('Universal_0212') }}</span>\n          </el-col>\n          <el-col :span=\"19\" style=\"padding-left: 6px;\">\n            <div>{{ contactArea }}</div>\n          </el-col>\n        </el-row>\n        <!-- <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"4\">\n            <span>ID</span>\n          </el-col>\n          <el-col :span=\"18\">\n            <div>{{contactId}}</div>\n          </el-col>\n        </el-row> -->\n      </div>\n      <!-- 群聊-群人数，地区，ID -->\n      <div class=\"group-form\" v-else>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"labelWidth\">\n            <span v-if=\"!name\">{{ $t('chat_comm_set_0030') }}</span>\n            <span v-else>{{ $t('book_group_0027') }}</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div>{{ contactNum }}</div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\" v-if=\"!name\">\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('Universal_0212') }}</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div>{{ contactArea }}</div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\" v-if=\"!name\">\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('chat_createcommunity_0010') }}</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div>{{ groupTab | tabFilter(statusMap) }}</div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\" v-if=\"!name\">\n          <el-col :span=\"labelWidth\">\n            <span>ID</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div>{{ contactId }}</div>\n          </el-col>\n        </el-row>\n      </div>\n\n      <!-- 发消息-按钮 -->\n      <div class=\"info-btn\">\n        <el-button type=\"primary\" @click=\"sendMsg\">{{ $t('Universal_0359') }}</el-button>\n      </div>\n\n      <!-- 群聊-编辑资料 -->\n      <div class=\"info-edit\" v-if=\"this.infoType == 1 && authStatus != '3'\">\n        <el-button type=\"text\" @click=\"editrelation\" v-if=\"!name\">{{ $t('chat_comm_set_0033') }}</el-button>\n      </div>\n    </div>\n    <GroupInfoEdit :info=\"groupInfo\" @refreshPage=\"refreshPage\" ref=\"groupInfoEdit\" />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DiscussionIcon from '@/components/memberIcon/DiscussionIcon';\nimport GroupInfoEdit from '../chat/group/components/GroupInfoEdit';\nimport EditableInput from '@/components/memberCard/EditableInput';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport { get_country_area, get_friend_user_info, set_member_notes } from '@/server.js';\nimport store from '@/store';\nimport { convertToPinyin } from '@/utils/pinyin';\nimport { contFriSize, contGrpSize } from '@/utils';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport fileOperational from '@/services/fileOperational';\n\nimport  { imgView } from '@/utils/util.js'\n\nexport default {\n  name: 'Info',\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    EditableInput,\n    GroupInfoEdit,\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  data() {\n    //这里存放数据\n    return {\n      id: '',\n      contactInfo: {},\n      contactName: this.$t('chat_search_0009'),\n      groupName: this.$t('chat_search_0010'),\n      // contactAvatar: require('../chat/images/default.png'),\n      // groupAvatar: require('../chat/images/group_avtar.png'),\n      contactAvatar:require('@/assets/images/default.png'),\n      groupAvatar: require('@/assets/images/group_avtar.png'),\n      noteInfo: this.$t('my_information_0012'),\n      contactId: '-',\n      contactArea: '-',\n      contactNum: '-',\n      groupTab: '-',\n      infoType: 1,\n      userSex: 0, //性别：1男，2女，0未知\n      groupInfo: {},\n      groupProfile: '',\n      people: '',\n      groupCode: '',\n      region: '',\n      userInfo: {},\n      userNickName: '',\n      gender: '',\n      userHeadImg: '',\n      personalSign: '',\n      friendNotes: '',\n      inviteCode: '',\n      country: '',\n      city: '',\n      countryName: '',\n      cityName: '',\n      authStatus: '',\n      groupType: '',\n      name: '',\n      statusMap:  {\n        // \"\": \"-\",\n        // 0: \"-\",\n        1: this.$t('chat_createcommunity_0012'),\n        2: \"BTC\",\n        3: this.$t('chat_createcommunity_0014'),\n        4: this.$t('chat_createcommunity_0015'),\n        5: this.$t('chat_createcommunity_0016'),\n        6: this.$t('chat_createcommunity_0017'),\n        7: \"Defi\",\n        8: this.$t('chat_createcommunity_0019'),\n        9: this.$t('chat_createcommunity_0020'),\n        10: this.$t('chat_createcommunity_0021')\n      }\n    };\n  },\n  filters: {\n    tabFilter(status, statusMap) {\n      return statusMap[status]||\"\";\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 7;\n      } else {\n        return 14;\n      }\n    },\n    valueWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 17;\n      } else {\n        return 10;\n      }\n    },\n    noteMsg: function() {\n      if (this.getBLen(this.noteInfo) == 86 || this.getBLen(this.noteInfo) >= 89) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    async $route() {\n      await this.init();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.infoType = this.$route.query.flag; //2讨论组\n    this.id = this.$route.query.id;\n    this.contactInfoShow();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  //方法集合\n  methods: {\n    // 打开图片查看器\n    openImgView (originAvatarURl) {\n      console.log('originAvatarURl=', originAvatarURl)\n      imgView(originAvatarURl, this.id)\n    },\n    findImage(image) {\n      return fileOperational.getImage(image,true);\n    },\n    init() {\n      this.contactInfoShow();\n    },\n    async refreshPage() {\n      this.init();\n      await this.$store.dispatch('GET_GROUP_LIST');\n    },\n    async contactInfoShow() {\n      // flag=0联系认66；\n      this.name = this.$route.query.name;\n      this.infoType = this.$route.query.flag;\n      console.log(this.infoType);\n      this.userInfo = {};\n      if (this.$route.query.flag == 0) {\n        // 查本地表，获取-性别、介绍（签名）、备注、地区、头像、昵称、\n        let res = await get_friend_user_info({ id: this.$route.query.id });\n        console.log('性别----》',res);\n        this.userInfo = res.data || {};\n        if(res?.data?.id&&res?.data?.userNickName){\n          this.id = this.userInfo.id;\n          this.contactName = this.userInfo.userNickName;\n          this.userSex = this.userInfo.gender;\n          this.contactAvatar = this.userInfo.userHeadImg || this.contactAvatar;\n          this.noteInfo = this.userInfo.personalSign;\n          this.friendNotes = this.userInfo.friendNotes;\n          this.contactId = this.userInfo.inviteCode;\n          this.groupTab = this.userInfo.groupTab;\n          this.getRegion();\n          this.updateFriendInfo();\n        }else{\n          console.log('异常数据',res?.data);\n        }\n      }\n      // flag=1群聊\n      if (this.$route.query.flag == 1) {\n        // 查本地表，获取-简介（签名）、地区、昵称、头像、群人数\n        let groupInfo = await SQLUtils.retrieveGroupsInfo(this.$route.query.id);\n        groupInfo.authStatus = this.$route.query.authStatus;\n        this.authStatus = this.$route.query.authStatus;\n        if (groupInfo && groupInfo.country && groupInfo.city) {\n          groupInfo.countryName = await SQLUtils.getTAreaCountryOrCityName(groupInfo.country);\n          groupInfo.cityName = await SQLUtils.getTAreaCountryOrCityName(groupInfo.city);\n          groupInfo.region = groupInfo.countryName + '-' + groupInfo.cityName;\n          this.contactArea = groupInfo.region;\n          this.country = groupInfo.country;\n          this.city = groupInfo.city;\n          this.countryName = groupInfo.countryName;\n          this.cityName = groupInfo.cityName;\n        } else {\n          groupInfo.region = '';\n          groupInfo.country = '';\n          groupInfo.city = '';\n          this.contactArea = '';\n          this.country = '';\n          this.city = '';\n        }\n        console.log('res', groupInfo);\n        this.id = groupInfo.id;\n        this.groupName = groupInfo.groupName;\n        if (groupInfo.groupAvatar) {\n          this.groupAvatar = groupInfo.groupAvatar;\n        } else {\n          // this.groupAvatar = require('../chat/images/group_avtar.png');\n          this.groupAvatar = require('@/assets/images/group_avtar.png');\n        }\n        this.noteInfo = groupInfo.groupProfile;\n        this.contactNum = groupInfo.people;\n        this.contactId = groupInfo.groupCode;\n        this.groupType = groupInfo.groupType;\n        this.groupTab = groupInfo.groupTab;\n      }\n    },\n    async getRegion() {\n      let { areaCountryCode = '', areaCityCode = '' } = this.userInfo || {};\n      // let areaCountryCode = \"country\" , areaCityCode = \"city\";\n      if (this.userInfo && areaCountryCode && areaCityCode) {\n        let res = await get_country_area({\n          codes: areaCountryCode + \",\" + areaCityCode,\n        });\n        let [country, city] = [\n          res.data?.[areaCountryCode] || {},\n          res.data?.[areaCityCode] || {},\n        ];\n        this.contactArea =\n          country?.name && city?.name\n            ? `${country.name}-${city.name}`\n            : country?.name || city?.name || '';\n      } else {\n        this.userInfo.areaCityCode = '';\n        this.userInfo.areaCountryCode = '';\n        this.contactArea = '';\n      }\n    },\n    async updateFriendInfo() {\n      let item = {\n        friend_id: this.userInfo.id,\n        friend_nick_name: this.userInfo.userNickName,\n        friend_nick_name_pinyin: convertToPinyin(this.userInfo.userNickName)||'',\n        friend_head_img: this.userInfo.userHeadImg,\n        friend_friendNotes: this.userInfo.friendNotes,\n        friend_friendNotes_pinyin: convertToPinyin(this.userInfo.friendNotes)||'',\n        invite_code: this.userInfo.inviteCode,\n        vipType: this.userInfo.vipType,\n        inviteCodeType: this.userInfo.inviteCodeType,\n        userRank: this.userInfo.userRank\n      };\n      let searchRet = await window.vm\n        .$knex('t_contacts')\n        .where({ friend_id: this.userInfo.id })\n        .select();\n      if (searchRet && searchRet.length > 0) {\n        //更新\n        await window.vm\n          .$knex('t_contacts')\n          .where('friend_id', '=', this.userInfo.id)\n          .update(item);\n      }\n      await this.$store.dispatch('GET_FRIENDS_LIST');\n    },\n    async updateUserInfo(label, ...values) {\n      let value = null;\n      if (values.length == 1) {\n        value = values[0];\n        value = value.trim() == '' ? null : value.trim();\n      }\n      if (label == 'friendNotes') {\n        this.friendNotes = value;\n        let params = {\n          friendId: this.id,\n          friendNotes: value == '' ? null : value\n        };\n        let res = await set_member_notes(params);\n        if (res.code == '200') {\n          //更新数据库\n          await window.vm\n            .$knex('t_contacts')\n            .update('friend_friendNotes', this.friendNotes)\n            .update('friend_friendNotes_pinyin', this.friendNotes == undefined ? '' : convertToPinyin(this.friendNotes))\n            .where('friend_id', this.id);\n          this.$message.success(res.msg);\n          store.dispatch('GET_LAST_MSG_LIST');\n          store.dispatch('GET_FRIENDS_LIST');\n        }\n      }\n    },\n    sendMsg() {\n      if (this.infoType == 0) {\n        // 好友-发消息\n        const userId = localStorage.userId;\n        const current = {\n          id: this.id,\n          fromId: this.id,\n          targetId: userId,\n          fromType: '999',\n          targetType: 1, //单聊\n          msgType: 1, //默认文本\n          timer: new Date().getTime(),\n          uniqueCode: contFriSize(userId, this.id),\n          friendName: encodeURI(this.contactName)\n        };\n        this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n        this.$store.dispatch('SET_CURRENT_CHAT', current);\n        this.$router.push({\n          path: '/app/chat/single/message',\n          query: current\n        });\n      } else {\n        // 群-发消息\n        let current = {\n          targetId: this.id,\n          id: this.id,\n          uniqueCode: contGrpSize(this.id),\n          sessionName: this.groupName,\n          sessionIcon: this.groupAvatar,\n          fromName: this.$store.state.common.userInfo.nickName,\n          targetType: 2, //单聊\n          msgType: 1, //默认文本\n          // item,\n          fromType: '999',\n          groupType: this.groupType\n        };\n        this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n        this.$store.dispatch('SET_CURRENT_CHAT', current);\n        if (this.groupType == 1) {\n          this.$router.push({\n            path: '/app/chat/group/message',\n            query: current\n          });\n        } else {\n          this.$router.push({\n            path: '/app/chat/discussion/message',\n            query: current\n          });\n        }\n      }\n    },\n    // 社区信息编辑\n    editrelation() {\n      this.groupInfo.id = this.id;\n      this.groupInfo.groupAvatar = this.groupAvatar;\n      this.groupInfo.groupName = this.groupName;\n      this.groupInfo.groupProfile = this.noteInfo;\n\n      this.groupInfo.countryName = this.countryName;\n      this.groupInfo.cityName = this.cityName;\n      this.groupInfo.country = this.country;\n      this.groupInfo.city = this.city;\n      this.groupInfo.groupTab = this.groupTab;\n      // this.$refs.groupInfoEdit.onPop();\n\n      this.$nextTick(async () => {\n        await this.$refs.groupInfoEdit.onPop();\n      });\n    },\n    // onPop() {\n    //     this.groupEditVisible = true;\n    // },\n    // 计算中英文长度\n    getBLen(str) {\n      if (str == null) return 0;\n      if (typeof str != 'string') {\n        str += '';\n      }\n      return str.replace(/[^\\x00-\\xff]/g, '01').length;\n    },\n    // 处理图片404问题\n    replaceImg() {\n      return true;\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n\n<style lang=\"less\" scoped>\n.info {\n  width: 100%;\n  height: 350px;\n  max-height: 400px;\n  padding-top: 70px;\n\n  .info-contact {\n    width: 325px;\n    margin: 0 auto auto;\n\n    /deep/ .el-popover {\n      height: 200px;\n      overflow: auto;\n    }\n\n    .info-top {\n      height: 72px;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      .info-contact-name {\n        align-items: center;\n        .into-top-name {\n          max-width: 200px;\n          overflow: hidden;\n          word-break: break-all;\n          font-size: 22px;\n          white-space: pre;\n          text-overflow: ellipsis;\n        }\n\n        .info-top-icon {\n          width: 18px;\n          height: 18px;\n          margin: 27px 32px 27px 17px;\n        }\n      }\n\n      .info-group-name {\n        display: inline-block;\n\n        .group-nickname {\n          width: 218px;\n          font-size: 22px;\n          font-weight: 500;\n          color: #333333;\n          line-height: 30px;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          word-break: break-all;\n          hyphens: auto;\n          display: -webkit-box;\n          -webkit-line-clamp: 2;\n          line-clamp: 2;\n          -webkit-box-orient: vertical;\n          margin-top: 6px;\n          white-space: pre-wrap;\n        }\n      }\n\n      .info-top-avatar {\n        display: block;\n        /*float: right;\n        width: 72px;\n        height: 72px;*/\n        margin-right: 5px;\n\n        /deep/ .el-avatar {\n          width: 100%;\n          height: 100%;\n        }\n\n        /deep/ .el-avatar img {\n          width: 72px;\n          height: 72px;\n          // width: 100%;height:100%;\n        }\n      }\n    }\n\n    .info-middle {\n      font-size: 14px;\n      font-weight: 500;\n      color: #999999;\n      line-height: 20px;\n      margin-top: 20px;\n      word-break: break-all;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      line-clamp: 2;\n      -webkit-box-orient: vertical;\n      margin-top: 26px;\n      // text-indent: 15px;\n    }\n    .info-note {\n      cursor: pointer;\n    }\n\n    .info-divider {\n      margin-top: 30px;\n    }\n    /deep/ .el-divider {\n      background-color: #ececec;\n    }\n\n    .contact-form,\n    .group-form {\n      margin-top: 30px;\n      font-size: 14px;\n\n      font-weight: 500;\n      color: #333333;\n      line-height: 20px;\n\n      .info-area span {\n        width: 100%;\n        display: inline-block;\n        font-size: 14px;\n\n        font-weight: 500;\n        color: #999999;\n      }\n\n      .item-spacing {\n        margin-bottom: 10px;\n      }\n\n      .item-notes {\n        margin-top: -3px;\n        margin-left: -4px;\n        line-height: 20px;\n      }\n    }\n\n    // .group-form{\n    //   .info-area span{\n    //   text-align: right;\n    //   }\n    // }\n\n    .info-btn {\n      margin-top: 50px;\n      text-align: center;\n\n      /deep/ .el-button {\n        width: 140px;\n        height: 40px;\n      }\n    }\n\n    .info-edit {\n      margin-top: 15px;\n      text-align: center;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".info": {
          "width": "100%",
          "height": "350px",
          "max-height": "400px",
          "padding-top": "70px",
          ".info-contact": {
            "width": "325px",
            "margin": "0 auto auto",
            "/deep/ .el-popover": {
              "height": "200px",
              "overflow": "auto"
            },
            ".info-top": {
              "height": "72px",
              "display": "flex",
              "align-items": "center",
              "justify-content": "flex-start",
              ".info-contact-name": {
                "align-items": "center",
                ".into-top-name": {
                  "max-width": "200px",
                  "overflow": "hidden",
                  "word-break": "break-all",
                  "font-size": "22px",
                  "white-space": "pre",
                  "text-overflow": "ellipsis"
                },
                ".info-top-icon": {
                  "width": "18px",
                  "height": "18px",
                  "margin": "27px 32px 27px 17px"
                }
              },
              ".info-group-name": {
                "display": "inline-block",
                ".group-nickname": {
                  "width": "218px",
                  "font-size": "22px",
                  "font-weight": "500",
                  "color": "#333333",
                  "line-height": "30px",
                  "text-overflow": "ellipsis",
                  "overflow": "hidden",
                  "word-break": "break-all",
                  "hyphens": "auto",
                  "display": "-webkit-box",
                  "-webkit-line-clamp": "2",
                  "line-clamp": "2",
                  "-webkit-box-orient": "vertical",
                  "margin-top": "6px",
                  "white-space": "pre-wrap"
                }
              },
              ".info-top-avatar": {
                "display": "block",
                "margin-right": "5px",
                "/deep/ .el-avatar": {
                  "width": "100%",
                  "height": "100%"
                },
                "/deep/ .el-avatar img": {
                  "width": "72px",
                  "height": "72px"
                }
              }
            },
            ".info-middle": {
              "font-size": "14px",
              "font-weight": "500",
              "color": "#999999",
              "line-height": "20px",
              "margin-top": "26px",
              "word-break": "break-all",
              "overflow": "hidden",
              "text-overflow": "ellipsis",
              "display": "-webkit-box",
              "-webkit-line-clamp": "2",
              "line-clamp": "2",
              "-webkit-box-orient": "vertical"
            },
            ".info-note": {
              "cursor": "pointer"
            },
            ".info-divider": {
              "margin-top": "30px"
            },
            "/deep/ .el-divider": {
              "background-color": "#ececec"
            },
            ".contact-form,    .group-form": {
              "margin-top": "30px",
              "font-size": "14px",
              "font-weight": "500",
              "color": "#333333",
              "line-height": "20px",
              ".info-area span": {
                "width": "100%",
                "display": "inline-block",
                "font-size": "14px",
                "font-weight": "500",
                "color": "#999999"
              },
              ".item-spacing": {
                "margin-bottom": "10px"
              },
              ".item-notes": {
                "margin-top": "-3px",
                "margin-left": "-4px",
                "line-height": "20px"
              }
            },
            ".info-btn": {
              "margin-top": "50px",
              "text-align": "center",
              "/deep/ .el-button": {
                "width": "140px",
                "height": "40px"
              }
            },
            ".info-edit": {
              "margin-top": "15px",
              "text-align": "center"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/contact/newfriends/index.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n<div class=\"contact-new-friends\" v-loading=\"loading\">\n  <div class=\"contact-new-friends-title\">{{ $t('Universal_0382') }}</div>\n  <ul class=\"contact-new-friends-item\" v-if=\"!noResult\">\n    <li class=\"time-title\" v-if=\"oneAndthreeDay.length > 0\">{{ $t('Universal_0019') }}</li>\n    <li v-for=\"(item, index) in oneAndthreeDay\" :key=\"`${item.id}${item.userId}${index}`\">\n      <div class=\"flex align-center\">\n        <MemberIcon :image=\"handImg(item) | hand_group_avatar\" \n        iconType=\"large\" :userRank=\"item.userRank\" :vipType=\"item.vipType\" class=\"member-icon-class\" />\n        <div class=\"flex-sub flex justify-between align-center mr20\">\n          <div class=\"flex-sub flex flex-direction\" style=\"padding-right:20px;\">\n            <p class=\"contact-add-name text-cut\" style=\"white-space:pre-line;\">\n              {{ showName(item) }}\n              <LevelIcon v-if=\"!item.groupName\" :inviteCode=\"item.inviteCode\" \n              :userRank=\"item.userRank\" iconType=\"medium\" :vipType=\"item.vipType\" :inviteCodeType=\"item.inviteCodeType\" />\n            </p>\n            <p class=\"contact-add-des\" v-if=\"item.applyStatus == 0 && item.groupName && userId == item.userId\">\n              {{ $t('book_notice_0008') }}\n            </p>\n            <p class=\"contact-add-des\" v-else-if=\"item.applyStatus == 0 && !item.groupName && userId == item.userId\">\n              {{ $t('book_notice_0007') }}\n            </p>\n            <p class=\"contact-add-des\" v-else>{{ item.content }}</p>\n          </div>\n          <div v-if=\"item.applyStatus == '-1'\">\n            <el-button type=\"danger\" size=\"small\" @click=\"handUpdateSimple(item, 0)\">{{ $t('book_friend_0011') }}</el-button>\n            <el-button type=\"primary\" size=\"small\" \n            @click=\"item.groupName ? handUpdateSimple(item, 1) : acceptFriend(item, 1)\">{{ $t('Universal_0266') }}</el-button>\n          </div>\n          <div v-else>\n            <el-button v-if=\"item.applyStatus == 0 && userId != item.userId\" type=\"danger\" size=\"small\">\n              {{ $t('Universal_0152') }}\n            </el-button>\n            <el-button v-if=\"item.applyStatus == 1\" type=\"info\" size=\"small\">{{ $t('Universal_0151') }}</el-button>\n            <el-button v-if=\"item.applyStatus == -2\" type=\"info\" size=\"small\">{{ $t('Universal_0149') }}</el-button>\n          </div>\n        </div>\n      </div>\n    </li>\n    <li class=\"time-title\" v-if=\"threeAndSevenDay.length > 0\">{{ $t('Universal_0020') }}</li>\n    <li class=\"flex align-center\" v-for=\"(item, index) in threeAndSevenDay\" :key=\"`${item.id}${index}${item.userId}`\">\n      <!-- :src=\"item.userHeadImgPath\" -->\n      <MemberIcon :image=\"handImg(item) | hand_group_avatar\" iconType=\"medium\" \n      :userRank=\"item.userRank\" class=\"member-icon-class\" :vipType=\"item.vipType\" />\n      <div class=\"flex-sub flex justify-between align-center mr20\">\n        <div class=\"flex-sub flex flex-direction\" style=\"padding-right:20px;\">\n          <p class=\"contact-add-name text-cut\" style=\"white-space: pre-line;\">\n            {{ showName(item) }}\n            <LevelIcon v-if=\"!item.groupName\" :inviteCode=\"item.inviteCode\" \n            :userRank=\"item.userRank\" iconType=\"medium\" :vipType=\"item.vipType\" :inviteCodeType=\"item.inviteCodeType\" />\n          </p>\n          <p class=\"contact-add-des\" v-if=\"item.applyStatus == 0 && item.groupName && userId == item.userId\">\n            {{ $t('book_notice_0008') }}\n          </p>\n          <p class=\"contact-add-des\" v-else-if=\"item.applyStatus == 0 && !item.groupName && userId == item.userId\">\n            {{ $t('book_notice_0007') }}\n          </p>\n          <p class=\"contact-add-des\" v-else>{{ item.content }}</p>\n        </div>\n        <div v-if=\"item.applyStatus == '-1'\">\n          <el-button type=\"danger\" size=\"small\" @click=\"handUpdateSimple(item, 0)\">\n            {{ $t('book_friend_0011') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"acceptFriend(item, 1)\">\n            {{ $t('Universal_0266') }}\n          </el-button>\n        </div>\n        <div v-else>\n          <el-button v-if=\"item.applyStatus == 0 && userId != item.userId\" type=\"danger\" size=\"small\">\n            {{ $t('Universal_0152') }}\n          </el-button>\n          <el-button v-if=\"item.applyStatus == 1\" type=\"info\" size=\"small\">\n            {{ $t('Universal_0151') }}\n          </el-button>\n          <el-button v-if=\"item.applyStatus == -2\" type=\"info\" size=\"small\">\n            {{ $t('Universal_0149') }}\n          </el-button>\n        </div>\n      </div>\n    </li>\n    <li class=\"time-title\" v-if=\"gtSevenDay.length > 0\">{{ $t('Universal_0021') }}</li>\n    <li class=\"flex align-center\" v-for=\"(item, index) in gtSevenDay\" :key=\"`${index}${item.id}${item.userId}`\">\n      <MemberIcon :image=\"handImg(item) | hand_group_avatar\" iconType=\"medium\" \n      :userRank=\"item.userRank\" class=\"member-icon-class\" :vipType=\"item.vipType\" />\n      <div class=\"flex-sub flex justify-between align-center mr20\">\n        <div class=\"flex-sub flex flex-direction\" style=\"padding-right:20px;\">\n          <p class=\"contact-add-name text-cut\" style=\"white-space: pre-line;\">\n            {{ showName(item) }}\n            <LevelIcon v-if=\"!item.groupName\" :inviteCode=\"item.inviteCode\" \n            :userRank=\"item.userRank\" iconType=\"medium\" :vipType=\"item.vipType\" :inviteCodeType=\"item.inviteCodeType\" />\n          </p>\n          <p class=\"contact-add-des\" v-if=\"item.applyStatus == 0 && item.groupName && userId == item.userId\">\n            {{ $t('book_notice_0008') }}\n          </p>\n          <p class=\"contact-add-des\" v-else-if=\"item.applyStatus == 0 && !item.groupName && userId == item.userId\">\n            {{ $t('book_notice_0007') }}\n          </p>\n          <p class=\"contact-add-des\" v-else>{{ item.content }}</p>\n        </div>\n        <div v-if=\"item.applyStatus == '-1'\">\n          <el-button type=\"danger\" size=\"small\" @click=\"handUpdateSimple(item, 0)\">\n            {{ $t('book_friend_0011') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"acceptFriend(item, 1)\">\n            {{ $t('Universal_0266') }}\n          </el-button>\n        </div>\n        <div v-else>\n          <el-button v-if=\"item.applyStatus == 0 && userId != item.userId\" type=\"danger\" size=\"small\">\n            {{ $t('Universal_0152') }}\n          </el-button>\n          <el-button v-if=\"item.applyStatus == 1\" type=\"info\" size=\"small\">\n            {{ $t('Universal_0151') }}\n          </el-button>\n          <el-button v-if=\"item.applyStatus == -2\" type=\"info\" size=\"small\">\n            {{ $t('Universal_0149') }}\n          </el-button>\n        </div>\n      </div>\n    </li>\n  </ul>\n  <div v-if=\"noResult\" class=\"no-results\">\n    <img src=\"../../../assets/images/web.png\" class=\"img_search\" />\n    <p>{{ $t('book_notice_0019') }}</p>\n  </div>\n  <div class=\"loadmore\" v-if=\"hasMore\" v-loading=\"listLoading\" element-loading-spinner=\"el-icon-loading\" @click=\"loadmorelist()\">\n    {{ $t('Universal_0361') }}\n  </div>\n  <!-- <PersonInfoDialog\n      :userInfo=\"userInfo\"\n      :dialogPersonInfoVisible=\"dialogPersonInfoVisible\"\n      @handCloseDialog=\"handCloseDialog\"\n    >\n      <div>\n        <el-button\n          style=\"background-color: #2F54EB; width: 70%\"\n          @click=\"handUpdateSimple(userItem, 1, 'dialog')\"\n          type=\"info\"\n          >通过</el-button\n        >\n      </div>\n      <div style=\"margin-top: 20px\">\n        <el-button\n          style=\"background-color: #F5222D; width: 70%\"\n          @click=\"handUpdateSimple(userItem, 0, 'dialog')\"\n          type=\"warning\"\n          >拒绝</el-button\n        >\n      </div>\n    </PersonInfoDialog> -->\n  <el-dialog :title=\"$t('chat_addfriend_0014')\" :visible.sync=\"dialogFriendVisile\" width=\"40%\" center>\n    <div style=\"text-align:left\">\n      <span style=\"padding:10px 0;display:inline-block\">{{ $t('book_friend_0005') }}</span>\n      <el-form ref=\"ruleForm\" :rules=\"formRules\" :model=\"formValues\" @submit.native.prevent>\n        <el-form-item prop=\"friendNotes\">\n          <el-input :placeholder=\"$t('Universal_0353')\" v-model=\"formValues.friendNotes\"></el-input>\n          <!-- <span style=\"padding:10px 0;display:inline-block\">设置备注</span>\n        <el-form ref=\"ruleForm\" :rules=\"formRules\" :model=\"formValues\"  @submit.native.prevent>\n          <el-form-item prop=\"friendNotes\">\n            <el-input placeholder=\"请输入备注2\" v-model=\"formValues.friendNotes\"></el-input> -->\n        </el-form-item>\n      </el-form>\n    </div>\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"small\" @click=\"dialogFriendVisile = false\" style=\"padding: 7px 25px\">\n        {{ $t('Universal_0063') }}\n      </el-button>\n      <el-button size=\"small\" type=\"primary\" @click=\"handUpdateSimple(friendItem, 1)\" style=\"padding: 7px 25px\">\n        {{ $t('Universal_0062') }}\n      </el-button>\n    </span>\n  </el-dialog>\n</div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import PersonInfoDialog from \"@/components/chat/PersonInfo\";\nimport {\n  getFriendsApplyList,\n  updateSimple,\n  getUserInfo,\n  group_apply_member_deal\n} from '../server';\nimport {\n  diffDays\n} from '@/utils';\nimport {\n  mapActions\n} from 'vuex';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport {\n  t_friend_apply_builder\n} from '@/utils/dbDataBuilder';\nimport bus from '@/utils/eventbus';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    // PersonInfoDialog,\n    MemberIcon,\n    LevelIcon\n  },\n  data() {\n    let validateName = (rule, value, callback) => {\n      if (value) {\n        let length = value.replace(/[\\u4e00-\\u9fa5]/g, 'aaa').length;\n        console.log('@@@@', length, value);\n        if (length > 18 || length < 3) {\n          callback(new Error(this.$t('Universal_0226')));\n        } else {\n          callback();\n        }\n      } else {\n        callback();\n      }\n    };\n    //这里存放数据\n    return {\n      noResult: false,\n      listLoading: false,\n      hasMore: false,\n      isRouterAlive: true,\n      oneAndthreeDay: [],\n      threeAndSevenDay: [],\n      gtSevenDay: [],\n      loading: false,\n      dialogPersonInfoVisible: false,\n      userInfo: {},\n      userItem: {},\n      userId: localStorage.userId,\n      dialogFriendVisile: false,\n      friendItem: {},\n      formValues: { \n        friendNotes: ''\n      },\n      pageSize: 10,\n      pageNo: 1,\n      formRules: {\n        friendNotes: [{\n          validator: validateName,\n          trigger: 'blur',\n          message: this.$t('Universal_0226')\n        },\n        {\n          pattern: /^((?!didi).)+$/i, ///^didi/ig,\n          message: this.$t('chat_comm_set_0017')\n        }\n        ]\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  filters: {\n    substringName(val) {\n      return val && val.length > 10 ? val.substring(0, 10) + '...' : val;\n    }\n  },\n  //方法集合\n  methods: {\n    acceptFriend(item) {\n      this.dialogFriendVisile = true;\n      this.friendItem = item;\n    },\n    async init() {\n      // 这里判断本地是否有数据 没有从服务器获取 有从本地获取\n      const list = await SQLUtils.getFriensApplyList(this.pageNo, this.pageSize)\n      if (list.length === 0 && this.pageNo === 1) {\n        this.getFriendsApplyListHand();\n      } else {\n        if (list.length === this.pageSize) {\n          this.hasMore = true\n        } else {\n          this.hasMore = false\n        }\n        // 检查过期时间\n        list.forEach(element => {\n          // 七天时间戳\n          const day7 = 7*24*60*60*1000 \n          const applyTimeStamp7 = element.applyTimeStamp + day7\n          // 当前时间与7天过期时间对比\n          const timestamp = new Date().getTime();\n          if (timestamp > applyTimeStamp7 && element.applyStatus == '-1') { // 当前时间大于7天过期时间  同时状态是 -1 更新状态\n            element.applyStatus = -2 // 已过期\n          }\n        });\n        this.sortTime(list)\n      }\n      this.$store.dispatch('SET_APPLY_FRINED_NUMBER', 0);\n      this.$store.dispatch('SET_REJECT_FRIEND_NUMBER', 0);\n      this.$store.dispatch('SET_REQUEST_FRIEND_NUMBER', 0);\n      await SQLUtils.clearSystemMessageNumber();\n      this.$store.dispatch('SET_TOTAL_SYSTEM_NUMBER', 0);\n    },\n\n    handImg(item) {\n      let avatar;\n      if (this.userId == item.userId) {\n        // 本人发起申请\n        avatar = item.friendHeadImgPath;\n      }\n      if (this.userId == item.friendId) {\n        // 他人发起\n        avatar = item.userHeadImgPath;\n      }\n      if (item.groupId != 0 && item.groupName) {\n        if (item.applyStatus == -1 || item.applyStatus == 1) {\n          avatar = item.userHeadImgPath;\n        } else {\n          if (this.userId == item.userId) {\n            avatar = item.groupImg;\n          } else {\n            avatar = item.userHeadImgPath;\n          }\n        }\n      }\n      return avatar;\n    },\n    showName(item) {\n      let name;\n      if (this.userId == item.userId) {\n        // 本人发起申请\n        name = item.friendNickName;\n        item.userRank = item.friendUserRank;\n        item.inviteCode = item.friendInviteCode;\n        item.inviteCodeType = item.friendInviteCodeType || 0;\n        item.vipType = item.friendVipType;\n      }\n      if (this.userId == item.friendId) {\n        // 他人发起\n        name = item.userNickName;\n      }\n      if (item.groupId != 0 && item.groupName) {\n        if (item.applyStatus == -1 || item.applyStatus == 1) {\n          if (this.userId == item.userId) {\n            name = item.friendNickName;\n          } else {\n            if (item.channelCode == '2') {\n              // xx邀请xx加入xx群\n              name = this.userInviteGroup(item);\n            } else if (item.channelCode == '1') {\n              // xxx申请加入xxx群\n              name = this.userApplyGroup(item);\n            } else {\n              name = item.userNickName;\n            }\n          }\n        } else {\n          if (this.userId == item.userId) {\n            name = item.groupName;\n          } else {\n            if (item.channelCode == '2') {\n              // xx邀请xx加入xx群\n              name = this.userInviteGroup(item);\n            } else if (item.channelCode == '1') {\n              // xxx申请加入xxx群\n              name = this.userApplyGroup(item);\n            } else {\n              name = item.userNickName;\n            }\n          }\n        }\n      }\n      return name;\n    },\n    userApplyGroup(item) {\n      return this.$t('book_notice_0003', {\n        value1: item.userNickName,\n        value2: item.groupName\n      });\n      // .concat(\"群\");\n    },\n    userInviteGroup(item) {\n      return this.$t('book_notice_0004', {\n        value1: item.friendNickName,\n        value2: item.userNickName,\n        value3: item.groupName\n      });\n    },\n    handOpenPersonInfo(item) {\n      // 弹出个人信息弹框\n      if (item.applyStatus == '-1') {\n        this.userItem = item;\n        // 申请中\n        this.dialogPersonInfoVisible = true;\n        if (this.userId == item.userId) {\n          // 本人发起申请\n          this.getUserInfoHand(item.friendId);\n        }\n        if (this.userId == item.friendId) {\n          // 他人发起\n          this.getUserInfoHand(item.userId);\n        }\n      }\n    },\n    handCloseDialog() {\n      this.dialogPersonInfoVisible = false;\n    },\n    async getUserInfoHand(id) {\n      // 获取好友信息 1014707554377326592\n      let res = await getUserInfo({\n        id\n      });\n      this.userInfo = res.data || {};\n    },\n    async getFriendsApplyListHand() {\n      // 查询列表\n      let pararms = {\n        pageNo: 1,\n        pageSize: 10000000,\n        // 1017150835043491840\n        friendId: localStorage.getItem('userId')\n      };\n      this.loading = true;\n      let res = await getFriendsApplyList(pararms);\n      if (res.code == '200') {\n        if (res.data.rows.length > 0) {\n          const rows = res.data.rows.map((row) => {\n            // 时间都转成时间戳\n            // row.applyTime = new Date(row.applyTime).getTime()\n            // row.createdOn = new Date(row.createdOn).getTime()\n            return t_friend_apply_builder(row)\n          });\n          console.log('getFriendsApplyListHand ===>', rows);\n          await SQLUtils.insertFriendsApply(rows)\n          // this.sortTime(res.data.rows) // 排序\n          this.init()\n          this.noResult = false\n        } else {\n          this.noResult = true\n          console.log('无数据 页面显示暂无数据 ===>');\n        }\n      }\n      this.loading = false;\n      // if (res.code != '200') {\n      //   this.$message.error(res.msg);\n      // }\n    },\n\n    sortTime(rows) {\n      const array = rows.filter(item => {\n        // 三天内\n        return diffDays(this.timeStamp2Time(item.applyTimeStamp) || item.applyTime) < 3;\n      });\n      this.oneAndthreeDay = this.oneAndthreeDay.concat(array)\n\n      this.oneAndthreeDay.sort((a, b) => {\n        return new Date(this.timeStamp2Time(b.applyTimeStamp) ||\n          b.applyTime).getTime() - new Date(this.timeStamp2Time(a.applyTimeStamp) || a.applyTime).getTime();\n      });\n      \n      const array2 = rows.filter(item => {\n        // 七天前\n        return diffDays(this.timeStamp2Time(item.applyTimeStamp) || item.applyTime) > 7;\n      });\n      this.gtSevenDay =  this.gtSevenDay.concat(array2)\n\n      this.gtSevenDay.sort((a, b) => {\n        return new Date(this.timeStamp2Time(b.applyTimeStamp) ||\n          b.applyTime).getTime() - new Date(this.timeStamp2Time(a.applyTimeStamp) || a.applyTime).getTime();\n      });\n\n      const array3 = rows.filter(item => {\n        // 三天前\n        return diffDays(this.timeStamp2Time(item.applyTimeStamp) ||\n          item.applyTime) <= 7 && diffDays(this.timeStamp2Time(item.applyTimeStamp) || item.applyTime) >= 3;\n      });\n      this.threeAndSevenDay = this.threeAndSevenDay.concat(array3)\n      this.threeAndSevenDay.sort((a, b) => {\n        return new Date(this.timeStamp2Time(b.applyTimeStamp) ||\n          b.applyTime).getTime() - new Date(this.timeStamp2Time(a.applyTimeStamp) || a.applyTime).getTime();\n      });\n    },\n\n    // 时间戳转日期\n    timeStamp2Time(applyTimeStamp) {\n      // return moment(parseInt(applyTimeStamp)).format('YYYY-MM-DD hh:mm:ss')\n      return applyTimeStamp\n    },\n\n    async handUpdateSimple(item, val, type) {\n      let {\n        id,\n        userId,\n        friendId\n      } = item;\n      if (item.groupId && item.groupName) {\n        // 群申请\n        let params = {\n          adminId: this.userId,\n          applyUserId: id,\n          groupId: item.groupId,\n          status: val\n        };\n        let res = await group_apply_member_deal(params);\n        if (res.code == 200) {\n          this.$message.success(res.msg);\n          // this.getFriendsApplyListHand();\n          // 更新数据库好友状态\n          let pararms = {\n            id,\n            userId,\n            friendId,\n            groupId: item.groupId,\n            applyStatus: val,\n          };\n          await SQLUtils.updateFriendsApply(pararms)\n          this.updateItem(pararms)\n          // this.init()\n        } else {\n          this.$message.error(`${res.data.msg}`);\n          // this.init();\n          \n        }\n      } else {\n        // 拒绝、同意好友\n        // type: 参数，表示弹框的拒绝、同意好友\n        let pararms = {\n          id,\n          userId,\n          friendId,\n          applyStatus: val,\n          friendNotes: this.formValues.friendNotes\n        };\n        if (val == 0) {\n          let res = await updateSimple(pararms);\n          if (res.code == '200') {\n            this.$message.success(res.msg);\n            this.dialogFriendVisile = false;\n            // this.getFriendsApplyListHand();\n            // 更新数据库好友状态\n            await SQLUtils.updateFriendsApply(pararms)\n            this.updateItem(pararms)\n            // this.init()\n            if (type && type == 'dialog') {\n              this.dialogPersonInfoVisible = false;\n              this.dialogFriendVisile = true;\n            }\n          } else {\n            // this.init();\n            this.$message.error(res.msg);\n          }\n        } else {\n          this.$refs['ruleForm'].validate(async valid => {\n            if (valid) {\n              let res = await updateSimple(pararms);\n              if (res.code == '200') {\n                this.$message.success(res.msg);\n                this.dialogFriendVisile = false;\n                // this.getFriendsApplyListHand();\n                await SQLUtils.updateFriendsApply(pararms)\n                this.updateItem(pararms)\n                // this.init()\n                if (type && type == 'dialog') {\n                  this.dialogPersonInfoVisible = false;\n                  this.dialogFriendVisile = true;\n                }\n              } else {\n                // this.init();\n                this.$message.error(res.msg);\n              }\n            }\n          });\n        }\n      }\n    },\n\n    updateItem(pararms) {\n      const item1 = this.oneAndthreeDay.filter(d=>d.id == pararms.id)[0]\n      const item2 = this.gtSevenDay.filter(d=>d.id == pararms.id)[0]\n      const item3 = this.threeAndSevenDay.filter(d=>d.id == pararms.id)[0]\n      const item = item1 || item2 || item3\n      if (item) {\n        item.applyStatus = pararms.applyStatus\n        item.friendId = pararms.friendId\n        item.friendFriendNotes = pararms.friendFriendNotes\n        item.group_id = pararms.group_id\n      }\n    },\n    // 加载更多好友申请列表\n    async loadmorelist() {\n      this.listLoading = true\n      this.pageNo ++\n      await this.init();\n      this.listLoading = false\n    },\n    ...mapActions({\n      getFriendsListHand: 'GET_FRIENDS_LIST'\n    }),\n    async refreshApplyList() {\n      if (this.isRouterAlive) {\n        console.log('当前页面刷新泪列表数据');\n        this.listLoading = true\n        this.pageNo = 1\n        await this.init();\n        this.listLoading = false\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    bus.$on('refreshApplyList', this.refreshApplyList);\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    bus.$off('refreshApplyList', this.refreshApplyList);\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n<div class=\"contact-new-friends\" v-loading=\"loading\">\n  <div class=\"contact-new-friends-title\">{{ $t('Universal_0382') }}</div>\n  <ul class=\"contact-new-friends-item\" v-if=\"!noResult\">\n    <li class=\"time-title\" v-if=\"oneAndthreeDay.length > 0\">{{ $t('Universal_0019') }}</li>\n    <li v-for=\"(item, index) in oneAndthreeDay\" :key=\"`${item.id}${item.userId}${index}`\">\n      <div class=\"flex align-center\">\n        <MemberIcon :image=\"handImg(item) | hand_group_avatar\" \n        iconType=\"large\" :userRank=\"item.userRank\" :vipType=\"item.vipType\" class=\"member-icon-class\" />\n        <div class=\"flex-sub flex justify-between align-center mr20\">\n          <div class=\"flex-sub flex flex-direction\" style=\"padding-right:20px;\">\n            <p class=\"contact-add-name text-cut\" style=\"white-space:pre-line;\">\n              {{ showName(item) }}\n              <LevelIcon v-if=\"!item.groupName\" :inviteCode=\"item.inviteCode\" \n              :userRank=\"item.userRank\" iconType=\"medium\" :vipType=\"item.vipType\" :inviteCodeType=\"item.inviteCodeType\" />\n            </p>\n            <p class=\"contact-add-des\" v-if=\"item.applyStatus == 0 && item.groupName && userId == item.userId\">\n              {{ $t('book_notice_0008') }}\n            </p>\n            <p class=\"contact-add-des\" v-else-if=\"item.applyStatus == 0 && !item.groupName && userId == item.userId\">\n              {{ $t('book_notice_0007') }}\n            </p>\n            <p class=\"contact-add-des\" v-else>{{ item.content }}</p>\n          </div>\n          <div v-if=\"item.applyStatus == '-1'\">\n            <el-button type=\"danger\" size=\"small\" @click=\"handUpdateSimple(item, 0)\">{{ $t('book_friend_0011') }}</el-button>\n            <el-button type=\"primary\" size=\"small\" \n            @click=\"item.groupName ? handUpdateSimple(item, 1) : acceptFriend(item, 1)\">{{ $t('Universal_0266') }}</el-button>\n          </div>\n          <div v-else>\n            <el-button v-if=\"item.applyStatus == 0 && userId != item.userId\" type=\"danger\" size=\"small\">\n              {{ $t('Universal_0152') }}\n            </el-button>\n            <el-button v-if=\"item.applyStatus == 1\" type=\"info\" size=\"small\">{{ $t('Universal_0151') }}</el-button>\n            <el-button v-if=\"item.applyStatus == -2\" type=\"info\" size=\"small\">{{ $t('Universal_0149') }}</el-button>\n          </div>\n        </div>\n      </div>\n    </li>\n    <li class=\"time-title\" v-if=\"threeAndSevenDay.length > 0\">{{ $t('Universal_0020') }}</li>\n    <li class=\"flex align-center\" v-for=\"(item, index) in threeAndSevenDay\" :key=\"`${item.id}${index}${item.userId}`\">\n      <!-- :src=\"item.userHeadImgPath\" -->\n      <MemberIcon :image=\"handImg(item) | hand_group_avatar\" iconType=\"medium\" \n      :userRank=\"item.userRank\" class=\"member-icon-class\" :vipType=\"item.vipType\" />\n      <div class=\"flex-sub flex justify-between align-center mr20\">\n        <div class=\"flex-sub flex flex-direction\" style=\"padding-right:20px;\">\n          <p class=\"contact-add-name text-cut\" style=\"white-space: pre-line;\">\n            {{ showName(item) }}\n            <LevelIcon v-if=\"!item.groupName\" :inviteCode=\"item.inviteCode\" \n            :userRank=\"item.userRank\" iconType=\"medium\" :vipType=\"item.vipType\" :inviteCodeType=\"item.inviteCodeType\" />\n          </p>\n          <p class=\"contact-add-des\" v-if=\"item.applyStatus == 0 && item.groupName && userId == item.userId\">\n            {{ $t('book_notice_0008') }}\n          </p>\n          <p class=\"contact-add-des\" v-else-if=\"item.applyStatus == 0 && !item.groupName && userId == item.userId\">\n            {{ $t('book_notice_0007') }}\n          </p>\n          <p class=\"contact-add-des\" v-else>{{ item.content }}</p>\n        </div>\n        <div v-if=\"item.applyStatus == '-1'\">\n          <el-button type=\"danger\" size=\"small\" @click=\"handUpdateSimple(item, 0)\">\n            {{ $t('book_friend_0011') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"acceptFriend(item, 1)\">\n            {{ $t('Universal_0266') }}\n          </el-button>\n        </div>\n        <div v-else>\n          <el-button v-if=\"item.applyStatus == 0 && userId != item.userId\" type=\"danger\" size=\"small\">\n            {{ $t('Universal_0152') }}\n          </el-button>\n          <el-button v-if=\"item.applyStatus == 1\" type=\"info\" size=\"small\">\n            {{ $t('Universal_0151') }}\n          </el-button>\n          <el-button v-if=\"item.applyStatus == -2\" type=\"info\" size=\"small\">\n            {{ $t('Universal_0149') }}\n          </el-button>\n        </div>\n      </div>\n    </li>\n    <li class=\"time-title\" v-if=\"gtSevenDay.length > 0\">{{ $t('Universal_0021') }}</li>\n    <li class=\"flex align-center\" v-for=\"(item, index) in gtSevenDay\" :key=\"`${index}${item.id}${item.userId}`\">\n      <MemberIcon :image=\"handImg(item) | hand_group_avatar\" iconType=\"medium\" \n      :userRank=\"item.userRank\" class=\"member-icon-class\" :vipType=\"item.vipType\" />\n      <div class=\"flex-sub flex justify-between align-center mr20\">\n        <div class=\"flex-sub flex flex-direction\" style=\"padding-right:20px;\">\n          <p class=\"contact-add-name text-cut\" style=\"white-space: pre-line;\">\n            {{ showName(item) }}\n            <LevelIcon v-if=\"!item.groupName\" :inviteCode=\"item.inviteCode\" \n            :userRank=\"item.userRank\" iconType=\"medium\" :vipType=\"item.vipType\" :inviteCodeType=\"item.inviteCodeType\" />\n          </p>\n          <p class=\"contact-add-des\" v-if=\"item.applyStatus == 0 && item.groupName && userId == item.userId\">\n            {{ $t('book_notice_0008') }}\n          </p>\n          <p class=\"contact-add-des\" v-else-if=\"item.applyStatus == 0 && !item.groupName && userId == item.userId\">\n            {{ $t('book_notice_0007') }}\n          </p>\n          <p class=\"contact-add-des\" v-else>{{ item.content }}</p>\n        </div>\n        <div v-if=\"item.applyStatus == '-1'\">\n          <el-button type=\"danger\" size=\"small\" @click=\"handUpdateSimple(item, 0)\">\n            {{ $t('book_friend_0011') }}\n          </el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"acceptFriend(item, 1)\">\n            {{ $t('Universal_0266') }}\n          </el-button>\n        </div>\n        <div v-else>\n          <el-button v-if=\"item.applyStatus == 0 && userId != item.userId\" type=\"danger\" size=\"small\">\n            {{ $t('Universal_0152') }}\n          </el-button>\n          <el-button v-if=\"item.applyStatus == 1\" type=\"info\" size=\"small\">\n            {{ $t('Universal_0151') }}\n          </el-button>\n          <el-button v-if=\"item.applyStatus == -2\" type=\"info\" size=\"small\">\n            {{ $t('Universal_0149') }}\n          </el-button>\n        </div>\n      </div>\n    </li>\n  </ul>\n  <div v-if=\"noResult\" class=\"no-results\">\n    <img src=\"../../../assets/images/web.png\" class=\"img_search\" />\n    <p>{{ $t('book_notice_0019') }}</p>\n  </div>\n  <div class=\"loadmore\" v-if=\"hasMore\" v-loading=\"listLoading\" element-loading-spinner=\"el-icon-loading\" @click=\"loadmorelist()\">\n    {{ $t('Universal_0361') }}\n  </div>\n  <!-- <PersonInfoDialog\n      :userInfo=\"userInfo\"\n      :dialogPersonInfoVisible=\"dialogPersonInfoVisible\"\n      @handCloseDialog=\"handCloseDialog\"\n    >\n      <div>\n        <el-button\n          style=\"background-color: #2F54EB; width: 70%\"\n          @click=\"handUpdateSimple(userItem, 1, 'dialog')\"\n          type=\"info\"\n          >通过</el-button\n        >\n      </div>\n      <div style=\"margin-top: 20px\">\n        <el-button\n          style=\"background-color: #F5222D; width: 70%\"\n          @click=\"handUpdateSimple(userItem, 0, 'dialog')\"\n          type=\"warning\"\n          >拒绝</el-button\n        >\n      </div>\n    </PersonInfoDialog> -->\n  <el-dialog :title=\"$t('chat_addfriend_0014')\" :visible.sync=\"dialogFriendVisile\" width=\"40%\" center>\n    <div style=\"text-align:left\">\n      <span style=\"padding:10px 0;display:inline-block\">{{ $t('book_friend_0005') }}</span>\n      <el-form ref=\"ruleForm\" :rules=\"formRules\" :model=\"formValues\" @submit.native.prevent>\n        <el-form-item prop=\"friendNotes\">\n          <el-input :placeholder=\"$t('Universal_0353')\" v-model=\"formValues.friendNotes\"></el-input>\n          <!-- <span style=\"padding:10px 0;display:inline-block\">设置备注</span>\n        <el-form ref=\"ruleForm\" :rules=\"formRules\" :model=\"formValues\"  @submit.native.prevent>\n          <el-form-item prop=\"friendNotes\">\n            <el-input placeholder=\"请输入备注2\" v-model=\"formValues.friendNotes\"></el-input> -->\n        </el-form-item>\n      </el-form>\n    </div>\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"small\" @click=\"dialogFriendVisile = false\" style=\"padding: 7px 25px\">\n        {{ $t('Universal_0063') }}\n      </el-button>\n      <el-button size=\"small\" type=\"primary\" @click=\"handUpdateSimple(friendItem, 1)\" style=\"padding: 7px 25px\">\n        {{ $t('Universal_0062') }}\n      </el-button>\n    </span>\n  </el-dialog>\n</div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import PersonInfoDialog from \"@/components/chat/PersonInfo\";\nimport {\n  getFriendsApplyList,\n  updateSimple,\n  getUserInfo,\n  group_apply_member_deal\n} from '../server';\nimport {\n  diffDays\n} from '@/utils';\nimport {\n  mapActions\n} from 'vuex';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport {\n  t_friend_apply_builder\n} from '@/utils/dbDataBuilder';\nimport bus from '@/utils/eventbus';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    // PersonInfoDialog,\n    MemberIcon,\n    LevelIcon\n  },\n  data() {\n    let validateName = (rule, value, callback) => {\n      if (value) {\n        let length = value.replace(/[\\u4e00-\\u9fa5]/g, 'aaa').length;\n        console.log('@@@@', length, value);\n        if (length > 18 || length < 3) {\n          callback(new Error(this.$t('Universal_0226')));\n        } else {\n          callback();\n        }\n      } else {\n        callback();\n      }\n    };\n    //这里存放数据\n    return {\n      noResult: false,\n      listLoading: false,\n      hasMore: false,\n      isRouterAlive: true,\n      oneAndthreeDay: [],\n      threeAndSevenDay: [],\n      gtSevenDay: [],\n      loading: false,\n      dialogPersonInfoVisible: false,\n      userInfo: {},\n      userItem: {},\n      userId: localStorage.userId,\n      dialogFriendVisile: false,\n      friendItem: {},\n      formValues: { \n        friendNotes: ''\n      },\n      pageSize: 10,\n      pageNo: 1,\n      formRules: {\n        friendNotes: [{\n          validator: validateName,\n          trigger: 'blur',\n          message: this.$t('Universal_0226')\n        },\n        {\n          pattern: /^((?!didi).)+$/i, ///^didi/ig,\n          message: this.$t('chat_comm_set_0017')\n        }\n        ]\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  filters: {\n    substringName(val) {\n      return val && val.length > 10 ? val.substring(0, 10) + '...' : val;\n    }\n  },\n  //方法集合\n  methods: {\n    acceptFriend(item) {\n      this.dialogFriendVisile = true;\n      this.friendItem = item;\n    },\n    async init() {\n      // 这里判断本地是否有数据 没有从服务器获取 有从本地获取\n      const list = await SQLUtils.getFriensApplyList(this.pageNo, this.pageSize)\n      if (list.length === 0 && this.pageNo === 1) {\n        this.getFriendsApplyListHand();\n      } else {\n        if (list.length === this.pageSize) {\n          this.hasMore = true\n        } else {\n          this.hasMore = false\n        }\n        // 检查过期时间\n        list.forEach(element => {\n          // 七天时间戳\n          const day7 = 7*24*60*60*1000 \n          const applyTimeStamp7 = element.applyTimeStamp + day7\n          // 当前时间与7天过期时间对比\n          const timestamp = new Date().getTime();\n          if (timestamp > applyTimeStamp7 && element.applyStatus == '-1') { // 当前时间大于7天过期时间  同时状态是 -1 更新状态\n            element.applyStatus = -2 // 已过期\n          }\n        });\n        this.sortTime(list)\n      }\n      this.$store.dispatch('SET_APPLY_FRINED_NUMBER', 0);\n      this.$store.dispatch('SET_REJECT_FRIEND_NUMBER', 0);\n      this.$store.dispatch('SET_REQUEST_FRIEND_NUMBER', 0);\n      await SQLUtils.clearSystemMessageNumber();\n      this.$store.dispatch('SET_TOTAL_SYSTEM_NUMBER', 0);\n    },\n\n    handImg(item) {\n      let avatar;\n      if (this.userId == item.userId) {\n        // 本人发起申请\n        avatar = item.friendHeadImgPath;\n      }\n      if (this.userId == item.friendId) {\n        // 他人发起\n        avatar = item.userHeadImgPath;\n      }\n      if (item.groupId != 0 && item.groupName) {\n        if (item.applyStatus == -1 || item.applyStatus == 1) {\n          avatar = item.userHeadImgPath;\n        } else {\n          if (this.userId == item.userId) {\n            avatar = item.groupImg;\n          } else {\n            avatar = item.userHeadImgPath;\n          }\n        }\n      }\n      return avatar;\n    },\n    showName(item) {\n      let name;\n      if (this.userId == item.userId) {\n        // 本人发起申请\n        name = item.friendNickName;\n        item.userRank = item.friendUserRank;\n        item.inviteCode = item.friendInviteCode;\n        item.inviteCodeType = item.friendInviteCodeType || 0;\n        item.vipType = item.friendVipType;\n      }\n      if (this.userId == item.friendId) {\n        // 他人发起\n        name = item.userNickName;\n      }\n      if (item.groupId != 0 && item.groupName) {\n        if (item.applyStatus == -1 || item.applyStatus == 1) {\n          if (this.userId == item.userId) {\n            name = item.friendNickName;\n          } else {\n            if (item.channelCode == '2') {\n              // xx邀请xx加入xx群\n              name = this.userInviteGroup(item);\n            } else if (item.channelCode == '1') {\n              // xxx申请加入xxx群\n              name = this.userApplyGroup(item);\n            } else {\n              name = item.userNickName;\n            }\n          }\n        } else {\n          if (this.userId == item.userId) {\n            name = item.groupName;\n          } else {\n            if (item.channelCode == '2') {\n              // xx邀请xx加入xx群\n              name = this.userInviteGroup(item);\n            } else if (item.channelCode == '1') {\n              // xxx申请加入xxx群\n              name = this.userApplyGroup(item);\n            } else {\n              name = item.userNickName;\n            }\n          }\n        }\n      }\n      return name;\n    },\n    userApplyGroup(item) {\n      return this.$t('book_notice_0003', {\n        value1: item.userNickName,\n        value2: item.groupName\n      });\n      // .concat(\"群\");\n    },\n    userInviteGroup(item) {\n      return this.$t('book_notice_0004', {\n        value1: item.friendNickName,\n        value2: item.userNickName,\n        value3: item.groupName\n      });\n    },\n    handOpenPersonInfo(item) {\n      // 弹出个人信息弹框\n      if (item.applyStatus == '-1') {\n        this.userItem = item;\n        // 申请中\n        this.dialogPersonInfoVisible = true;\n        if (this.userId == item.userId) {\n          // 本人发起申请\n          this.getUserInfoHand(item.friendId);\n        }\n        if (this.userId == item.friendId) {\n          // 他人发起\n          this.getUserInfoHand(item.userId);\n        }\n      }\n    },\n    handCloseDialog() {\n      this.dialogPersonInfoVisible = false;\n    },\n    async getUserInfoHand(id) {\n      // 获取好友信息 1014707554377326592\n      let res = await getUserInfo({\n        id\n      });\n      this.userInfo = res.data || {};\n    },\n    async getFriendsApplyListHand() {\n      // 查询列表\n      let pararms = {\n        pageNo: 1,\n        pageSize: 10000000,\n        // 1017150835043491840\n        friendId: localStorage.getItem('userId')\n      };\n      this.loading = true;\n      let res = await getFriendsApplyList(pararms);\n      if (res.code == '200') {\n        if (res.data.rows.length > 0) {\n          const rows = res.data.rows.map((row) => {\n            // 时间都转成时间戳\n            // row.applyTime = new Date(row.applyTime).getTime()\n            // row.createdOn = new Date(row.createdOn).getTime()\n            return t_friend_apply_builder(row)\n          });\n          console.log('getFriendsApplyListHand ===>', rows);\n          await SQLUtils.insertFriendsApply(rows)\n          // this.sortTime(res.data.rows) // 排序\n          this.init()\n          this.noResult = false\n        } else {\n          this.noResult = true\n          console.log('无数据 页面显示暂无数据 ===>');\n        }\n      }\n      this.loading = false;\n      // if (res.code != '200') {\n      //   this.$message.error(res.msg);\n      // }\n    },\n\n    sortTime(rows) {\n      const array = rows.filter(item => {\n        // 三天内\n        return diffDays(this.timeStamp2Time(item.applyTimeStamp) || item.applyTime) < 3;\n      });\n      this.oneAndthreeDay = this.oneAndthreeDay.concat(array)\n\n      this.oneAndthreeDay.sort((a, b) => {\n        return new Date(this.timeStamp2Time(b.applyTimeStamp) ||\n          b.applyTime).getTime() - new Date(this.timeStamp2Time(a.applyTimeStamp) || a.applyTime).getTime();\n      });\n      \n      const array2 = rows.filter(item => {\n        // 七天前\n        return diffDays(this.timeStamp2Time(item.applyTimeStamp) || item.applyTime) > 7;\n      });\n      this.gtSevenDay =  this.gtSevenDay.concat(array2)\n\n      this.gtSevenDay.sort((a, b) => {\n        return new Date(this.timeStamp2Time(b.applyTimeStamp) ||\n          b.applyTime).getTime() - new Date(this.timeStamp2Time(a.applyTimeStamp) || a.applyTime).getTime();\n      });\n\n      const array3 = rows.filter(item => {\n        // 三天前\n        return diffDays(this.timeStamp2Time(item.applyTimeStamp) ||\n          item.applyTime) <= 7 && diffDays(this.timeStamp2Time(item.applyTimeStamp) || item.applyTime) >= 3;\n      });\n      this.threeAndSevenDay = this.threeAndSevenDay.concat(array3)\n      this.threeAndSevenDay.sort((a, b) => {\n        return new Date(this.timeStamp2Time(b.applyTimeStamp) ||\n          b.applyTime).getTime() - new Date(this.timeStamp2Time(a.applyTimeStamp) || a.applyTime).getTime();\n      });\n    },\n\n    // 时间戳转日期\n    timeStamp2Time(applyTimeStamp) {\n      // return moment(parseInt(applyTimeStamp)).format('YYYY-MM-DD hh:mm:ss')\n      return applyTimeStamp\n    },\n\n    async handUpdateSimple(item, val, type) {\n      let {\n        id,\n        userId,\n        friendId\n      } = item;\n      if (item.groupId && item.groupName) {\n        // 群申请\n        let params = {\n          adminId: this.userId,\n          applyUserId: id,\n          groupId: item.groupId,\n          status: val\n        };\n        let res = await group_apply_member_deal(params);\n        if (res.code == 200) {\n          this.$message.success(res.msg);\n          // this.getFriendsApplyListHand();\n          // 更新数据库好友状态\n          let pararms = {\n            id,\n            userId,\n            friendId,\n            groupId: item.groupId,\n            applyStatus: val,\n          };\n          await SQLUtils.updateFriendsApply(pararms)\n          this.updateItem(pararms)\n          // this.init()\n        } else {\n          this.$message.error(`${res.data.msg}`);\n          // this.init();\n          \n        }\n      } else {\n        // 拒绝、同意好友\n        // type: 参数，表示弹框的拒绝、同意好友\n        let pararms = {\n          id,\n          userId,\n          friendId,\n          applyStatus: val,\n          friendNotes: this.formValues.friendNotes\n        };\n        if (val == 0) {\n          let res = await updateSimple(pararms);\n          if (res.code == '200') {\n            this.$message.success(res.msg);\n            this.dialogFriendVisile = false;\n            // this.getFriendsApplyListHand();\n            // 更新数据库好友状态\n            await SQLUtils.updateFriendsApply(pararms)\n            this.updateItem(pararms)\n            // this.init()\n            if (type && type == 'dialog') {\n              this.dialogPersonInfoVisible = false;\n              this.dialogFriendVisile = true;\n            }\n          } else {\n            // this.init();\n            this.$message.error(res.msg);\n          }\n        } else {\n          this.$refs['ruleForm'].validate(async valid => {\n            if (valid) {\n              let res = await updateSimple(pararms);\n              if (res.code == '200') {\n                this.$message.success(res.msg);\n                this.dialogFriendVisile = false;\n                // this.getFriendsApplyListHand();\n                await SQLUtils.updateFriendsApply(pararms)\n                this.updateItem(pararms)\n                // this.init()\n                if (type && type == 'dialog') {\n                  this.dialogPersonInfoVisible = false;\n                  this.dialogFriendVisile = true;\n                }\n              } else {\n                // this.init();\n                this.$message.error(res.msg);\n              }\n            }\n          });\n        }\n      }\n    },\n\n    updateItem(pararms) {\n      const item1 = this.oneAndthreeDay.filter(d=>d.id == pararms.id)[0]\n      const item2 = this.gtSevenDay.filter(d=>d.id == pararms.id)[0]\n      const item3 = this.threeAndSevenDay.filter(d=>d.id == pararms.id)[0]\n      const item = item1 || item2 || item3\n      if (item) {\n        item.applyStatus = pararms.applyStatus\n        item.friendId = pararms.friendId\n        item.friendFriendNotes = pararms.friendFriendNotes\n        item.group_id = pararms.group_id\n      }\n    },\n    // 加载更多好友申请列表\n    async loadmorelist() {\n      this.listLoading = true\n      this.pageNo ++\n      await this.init();\n      this.listLoading = false\n    },\n    ...mapActions({\n      getFriendsListHand: 'GET_FRIENDS_LIST'\n    }),\n    async refreshApplyList() {\n      if (this.isRouterAlive) {\n        console.log('当前页面刷新泪列表数据');\n        this.listLoading = true\n        this.pageNo = 1\n        await this.init();\n        this.listLoading = false\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    bus.$on('refreshApplyList', this.refreshApplyList);\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    bus.$off('refreshApplyList', this.refreshApplyList);\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n\n<style>\n.el-dialog__title {\n  font-size: 15px;\n  font-weight: 700;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n@fixedHeight: 48px;\n\n.contact-new-friends {\n  height: 100vh;\n  overflow: hidden;\n\n  .mr20 {\n    margin-right: 20px;\n  }\n\n  .contact-new-friends-title {\n    position: fixed;\n    width: 100%;\n    z-index: 2;\n    padding: 0 20px;\n    color: #333333;\n    height: @fixedHeight;\n    line-height: @fixedHeight;\n    font-size: 18px;\n    font-weight: 600;\n    background-color: #f3f3f3;\n  }\n\n  .contact-new-friends-item {\n    margin-top: @fixedHeight;\n    max-height: calc(100vh - @fixedHeight - 40px);\n    overflow: scroll;\n\n    li {\n      padding: 20px;\n      border-bottom: 2px solid #dddddd;\n\n      &:last-child {\n        border-bottom: none;\n      }\n\n      .contact-add-des {\n        margin-top: 10px;\n        font-size: 14px;\n        color: #999999;\n        white-space: normal;\n        word-break: break-all;\n        word-wrap: break-word;\n      }\n\n      .contact-add-name {\n        color: #333333;\n        font-size: 14px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n\n        div {\n          padding-left: 2px;\n        }\n      }\n\n      &.time-title {\n        color: #333333;\n        height: 50px;\n        line-height: 50px;\n        padding: 0 20px;\n        border: none;\n        background-color: #fcfbfb;\n      }\n    }\n  }\n\n  .no-results {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    color: #999;\n    font-size: 14px;\n  }\n\n  .loadmore {\n    font-size: 12px;\n    text-align: center;\n    color: #2f54eb;\n  }\n}\n\n.member-icon-class {\n  margin-right: 16px;\n}\n</style>\n",
    "cssJson": [
      {
        ".el-dialog__title": {
          "font-size": "15px",
          "font-weight": "700"
        }
      },
      {
        "@fixedHeight: 48px;.contact-new-friends": {
          "height": "100vh",
          "overflow": "hidden",
          ".mr20": {
            "margin-right": "20px"
          },
          ".contact-new-friends-title": {
            "position": "fixed",
            "width": "100%",
            "z-index": "2",
            "padding": "0 20px",
            "color": "#333333",
            "height": "@fixedHeight",
            "line-height": "@fixedHeight",
            "font-size": "18px",
            "font-weight": "600",
            "background-color": "#f3f3f3"
          },
          ".contact-new-friends-item": {
            "margin-top": "@fixedHeight",
            "max-height": "calc(100vh - @fixedHeight - 40px)",
            "overflow": "scroll",
            "li": {
              "padding": "20px",
              "border-bottom": "2px solid #dddddd",
              "&:last-child": {
                "border-bottom": "none"
              },
              ".contact-add-des": {
                "margin-top": "10px",
                "font-size": "14px",
                "color": "#999999",
                "white-space": "normal",
                "word-break": "break-all",
                "word-wrap": "break-word"
              },
              ".contact-add-name": {
                "color": "#333333",
                "font-size": "14px",
                "font-weight": "600",
                "display": "flex",
                "align-items": "center",
                "div": {
                  "padding-left": "2px"
                }
              },
              "&.time-title": {
                "color": "#333333",
                "height": "50px",
                "line-height": "50px",
                "padding": "0 20px",
                "border": "none",
                "background-color": "#fcfbfb"
              }
            }
          },
          ".no-results": {
            "height": "100%",
            "width": "100%",
            "display": "flex",
            "justify-content": "center",
            "align-items": "center",
            "flex-direction": "column",
            "color": "#999",
            "font-size": "14px"
          },
          ".loadmore": {
            "font-size": "12px",
            "text-align": "center",
            "color": "#2f54eb"
          }
        },
        ".member-icon-class": {
          "margin-right": "16px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chatSetting/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\">",
      "1": "<style scoped>",
      "2": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"chatset\">\n    <!-- <p\n      style=\"text-align:right;color:#409EFF;font-size:16px;padding-right:20px;margin-bottom:20px;\"\n      v-if=\"step === 2\"\n      @click=\"gotoChat()\"\n    >跳过</p>-->\n    <el-steps :active=\"activeStep\" align-center>\n      <el-step :title=\"$t('chat_createcommunity_0001')\"></el-step>\n      <!-- <el-step title=\"群聊设置\"></el-step> -->\n      <el-step :title=\"$t('chat_comm_set_0019')\"></el-step>\n    </el-steps>\n    <br />\n    <div class=\"formbox groupavatar\">\n      <el-form\n        ref=\"creatformm\"\n        v-if=\"step === 1\"\n        :rules=\"creatformRules\"\n        :model=\"creatform\"\n        :label-width=\"labelWidth\"\n      >\n        <el-form-item\n          :label=\"$t('chat_createcommunity_0002')\"\n          prop=\"groupAvatar\"\n          required\n          class=\"groupImg\"\n        >\n          <div class=\"demo-block\">\n            <Copper\n              ref=\"copperBox\"\n              @uploadCropper=\"uploadCropper\"\n              :avater=\"groupAvatarUrl\"\n            ></Copper>\n          </div>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_createcommunity_0003')\" prop=\"groupName\" class=\"groupWord-name\">\n          <el-input\n            size=\"small\"\n            :minlength=\"1\"\n            :maxlength=\"30\"\n            v-model=\"creatform.groupName\"\n            show-word-limit\n            class=\"limtinput\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_createcommunity_0006')\" required class=\"typesel\">\n          <el-radio-group v-model=\"creatform.groupStatus\">\n            <el-radio :label=\"1\">{{ $t('chat_createcommunity_0008') }}</el-radio>\n            <el-radio :label=\"2\">{{ $t('chat_createcommunity_0009') }}</el-radio>\n          </el-radio-group>\n          <!-- <p class=\"tip\">公开群聊可被更多人发现</p> -->\n        </el-form-item>\n        <el-form-item :label=\"$t('Universal_0205')\" prop=\"country\" class=\"groupWord-area\">\n          <el-row>\n            <el-col :span=\"11\">\n              <el-select\n                size=\"mini\"\n                v-model=\"creatform.country\"\n                clearable\n                filterable\n                :placeholder=\"$t('Universal_0208')\"\n                popper-class=\"noDrag\"\n                @change=\"getarea\"\n                class=\"select_box\"\n              >\n                <el-option\n                  :label=\"item.name\"\n                  :value=\"item.id\"\n                  v-for=\"item in countryList\"\n                  :key=\"item.id\"\n                ></el-option>\n              </el-select>\n            </el-col>\n            <el-col :span=\"11\" :offset=\"2\">\n              <el-form-item label prop=\"city\">\n                <el-select\n                  size=\"mini\"\n                  v-model=\"creatform.city\"\n                  clearable\n                  filterable\n                  :placeholder=\"$t('Universal_0209')\"\n                  popper-class=\"noDrag\"\n                  class=\"select_box\"\n                >\n                  <el-option\n                    :label=\"item.name\"\n                    :value=\"item.id\"\n                    v-for=\"item in areaList\"\n                    :key=\"item.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_createcommunity_0010')\" prop=\"groupTab\" class=\"formTab\">\n          <el-row>\n            <el-select\n              size=\"mini\"\n              v-model=\"creatform.groupTab\"\n              clearable\n              filterable\n              :placeholder=\"$t('chat_createcommunity_0035')\"\n              class=\"select_box\"\n            >\n              <el-option\n                v-for=\"item in tabList\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value.toString()\"\n              ></el-option>\n            </el-select>\n          </el-row>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_comm_set_0002')\" prop=\"type\" class=\"notegroup\">\n          <el-input\n            show-word-limit\n            class=\"limtinput\"\n            type=\"textarea\"\n            :maxlength=\"500\"\n            :rows=\"4\"\n            :placeholder=\"$t('chat_createcommunity_0033')\"\n            v-model=\"creatform.groupProfile\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item class=\"next-btn\">\n          <div class=\"right\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              :loading=\"btnloading\"\n              @click=\"CloseDialog()\"\n              >{{ $t('Universal_0063') }}</el-button\n            >\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              :loading=\"btnloading\"\n              @click=\"firstSubmit('creatformm')\"\n            >\n              {{ $t('Universal_0069') }}\n            </el-button>\n          </div>\n        </el-form-item>\n      </el-form>\n      <!-- <el-form\n        ref=\"setform\"\n        v-if=\"step === 2\"\n        :rules=\"setform\"\n        :model=\"setform\"\n        label-width=\"120px\">\n        <el-form-item label=\"群聊欢迎语\" prop=\"welcome\">\n          <el-input\n            type=\"textarea\"\n            :maxlength=\"500\"\n            :rows=\"8\"\n            placeholder=\"设置群欢迎语，用户加入群聊时即可收到欢迎语\"\n            v-model=\"setform.welcome\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"群公告\" prop=\"notice\">\n          <el-input\n            type=\"textarea\"\n            :maxlength=\"500\"\n            :rows=\"8\"\n            placeholder=\"您可以发布一份公告，以便群成员更好的了解群\"\n            v-model=\"setform.notice\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <div class=\"demo-block\">\n            <el-upload\n              class=\"avatar-uploader\"\n              action=\"https://jsonplaceholder.typicode.com/posts/\"\n              :show-file-list=\"false\"\n              :on-success=\"handleAvatarSuccess\"\n              :before-upload=\"beforeAvatarUpload\"\n            >\n              <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\" />\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n            </el-upload>\n            <span class=\"tip\">仅支持添加一张与公告内容相关的图片</span>\n          </div>\n        </el-form-item>\n        <el-form-item>\n          <div class=\"center\">\n            <el-button type=\"primary\" @click=\"firstSubmit('creatform')\">下一步</el-button>\n          </div>\n        </el-form-item>\n      </el-form>-->\n      <div class=\"finish\" v-if=\"step === 2\">\n        <p>{{ $t('chat_addfriend_0016') }}</p>\n        <br />\n        <div class=\"mid\">\n          <!-- <img src=\"../../assets/images/success.png\" /> -->\n          <!-- <span>群邀请链接已创建</span> -->\n          <!-- <p>您可以将链接分享至DiDi、QQ、微信等应用内，好友通过链接即可加入群聊</p> -->\n          <el-input\n            v-model=\"linkurl\"\n            readonly\n            style=\"width: 300px\"\n            id=\"link\"\n            class=\"copyLink\"\n          ></el-input>\n          <span\n            v-clipboard:copy=\"linkurl\"\n            v-clipboard:success=\"onCopy\"\n            class=\"copy\"\n            >{{ $t('chat_0026') }}</span\n          >\n        </div>\n        <br />\n        <br />\n        <el-button size=\"mini\" type=\"primary\" @click=\"gotoChat()\"\n          >{{ $t('Universal_0060') }}</el-button\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { createGroup, queryGroupByGroupId } from \"./server\";\nimport { upload_images_avatar } from \"@/server.js\";\nimport { contGrpSize } from \"@/utils\";\nimport { mapState, mapMutations } from \"vuex\";\nimport { convertToPinyin } from \"@/utils/pinyin\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport SQLUtils from \"@/components/db/sqlite.js\";\nimport Copper from \"@/components/chat/copper\";\nimport bus from \"@/utils/eventbus\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { Copper },\n  data() {\n    //这里存放数据\n    return {\n      btnloading: false,\n      activeStep: 1,\n      step: 1,\n      countryList: [],\n      areaList: [],\n      creatform: {\n        groupAvatar: \"\",\n        groupBigAvatar: \"\",\n        groupName: \"\",\n        groupStatus: 1,\n        groupProfile: \"\",\n        city: \"\",\n        country: \"\",\n        groupTab: \"\",\n      },\n      /*creatformRules: {\n        groupAvatar: [\n          { required: true, message: this.$t('chat_createcommunity_0034'), trigger: \"change\" },\n        ],\n        groupName: [\n          { required: true, message: this.$t('chat_createcommunity_0004'), trigger: \"blur\" },\n          {\n            min: 1,\n            max: 30,\n            trigger: \"blur\",\n          },\n          {\n            pattern: /^((?!didi).)+$/i, ///^didi/ig,\n            message: this.$t('chat_comm_set_0017'),\n          },\n        ],\n        groupStatus: [{ required: true, message: this.$t('chat_createcommunity_0032') }],\n        country: [{ message: this.$t('Universal_0208'), trigger: \"change\" }],\n        city: [{ trigger: \"change\" }],\n        groupTab: [{ message: this.$t('chat_createcommunity_0035'), trigger: \"change\" }],\n      },*/\n      setform: {\n        welcome: \"\",\n        notice: \"\",\n        noticePic: \"\",\n      },\n      imageUrl: \"\",\n      linkurl: \"\",\n      groupCode: \"\",\n      groupobj: {},\n      uploadUrl: upload_images_avatar(),\n      uploadData: {},\n      headers: {\n        Authorization: localStorage.accessToken,\n      },\n      groupAvatarUrl: \"\",\n      imgLoading: false,\n      /*tabList: [\n        { value: 1, label: this.$t('chat_createcommunity_0012') },\n        { value: 2, label: \"BTC\" },\n        { value: 3, label: this.$t('chat_createcommunity_0014') },\n        { value: 4, label: this.$t('chat_createcommunity_0015') },\n        { value: 5, label: this.$t('chat_createcommunity_0016') },\n        { value: 6, label: this.$t('chat_createcommunity_0017') },\n        { value: 7, label: \"Defi\" },\n        { value: 8, label: this.$t('chat_createcommunity_0019') },\n        { value: 9, label: this.$t('chat_createcommunity_0020') },\n        { value: 10, label: this.$t('chat_createcommunity_0021') },\n      ],*/\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    creatformRules() {\n      return {\n        groupAvatar: [\n          { required: true, message: this.$t('chat_createcommunity_0034'), trigger: \"change\" },\n        ],\n        groupName: [\n          { required: true, message: this.$t('chat_createcommunity_0004'), trigger: \"blur\" },\n          {\n            min: 1,\n            max: 30,\n            trigger: \"blur\",\n          },\n          {\n            pattern: /^((?!didi).)+$/i, ///^didi/ig,\n            message: this.$t('chat_comm_set_0017'),\n          },\n        ],\n        groupStatus: [{ required: true, message: this.$t('chat_createcommunity_0032') }],\n        country: [{ message: this.$t('Universal_0208'), trigger: \"change\" }],\n        city: [{ trigger: \"change\" }],\n        groupTab: [{ message: this.$t('chat_createcommunity_0035'), trigger: \"change\" }],\n      };\n    },\n    tabList() {\n      return [\n        { value: 1, label: this.$t('chat_createcommunity_0012') },\n        { value: 2, label: \"BTC\" },\n        { value: 3, label: this.$t('chat_createcommunity_0014') },\n        { value: 4, label: this.$t('chat_createcommunity_0015') },\n        { value: 5, label: this.$t('chat_createcommunity_0016') },\n        { value: 6, label: this.$t('chat_createcommunity_0017') },\n        { value: 7, label: \"Defi\" },\n        { value: 8, label: this.$t('chat_createcommunity_0019') },\n        { value: 9, label: this.$t('chat_createcommunity_0020') },\n        { value: 10, label: this.$t('chat_createcommunity_0021') },\n      ];\n    },\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '100px';\n      } else {\n        return '170px';\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    bus.$on('changeLanguage',(lang)=>{   \n      this.areaList=[];\n      this.post_base_country_list(lang);\n    });\n    this.$emit(\"boxTitleFn\", this.$t('chat_createcommunity_0001'));\n  },\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    async uploadCropper(smallUrl, bigUrl) {\n      //调接口上传裁剪的头像\n      this.groupAvatarUrl = smallUrl; //传给子\n      this.creatform.groupAvatar = smallUrl; //传给接口\n      this.creatform.groupBigAvatar = bigUrl; //传给接口\n      console.log('chen-创建群-groupAvatar==', smallUrl)\n      console.log('chen-创建群-groupBigAvatar==', bigUrl)\n    },\n    resetForm() {\n      // this.$refs['creatform'].clearValidate();\n\n      this.activeStep = 1;\n      this.step = 1;\n      this.creatform = {\n        groupName: \"\",\n        groupStatus: 1,\n        groupProfile: \"\",\n        city: \"\",\n        country: \"\",\n        groupAvatar: \"\",\n        groupBigAvatar: \"\",\n        groupTab: \"\",\n      };\n      this.groupAvatarUrl = \"\";\n      if (this.$refs[\"creatformm\"] != undefined) {\n        this.$refs[\"creatformm\"].resetFields();\n        this.imgLoading = false;\n      }\n    },\n\n    async post_base_country_list(lang) {\n      this.countryList = await SQLUtils.getTAreaCountryList(lang);\n    },\n    async getarea(val) {\n      this.areaList = await SQLUtils.getTAreaCityList(val);\n      this.creatform.city = \"\";\n    },\n    async gotoChat() {\n      //this.groupobj.targetId = this.groupobj.id\n      // this.$store.dispatch('SET_CURRENT_CHAT', this.groupobj)\n      this.CLEAR_CHAT();\n      let current = {\n        id: this.groupId,\n        targetId: this.groupId,\n        uniqueCode: contGrpSize(this.groupId),\n        sessionId: this.groupobj.headImg,\n        sessionName: this.groupobj.groupName,\n        item: this._groupInfo,\n      };\n      await this.$store.dispatch(\"SET_CURRENT_CHAT\", current);\n      this.$router.push({\n        path: \"/app/chat/group/message\",\n        query: {\n          id: this.groupId,\n          targetId: this.groupId,\n          timer: new Date().getTime(),\n          friendName: encodeURI(this.groupobj.groupName),\n          uniqueCode: contGrpSize(this.groupId),\n        },\n      });\n      this.$emit(\"CloseDialog\", false);\n    },\n    CloseDialog() {\n      this.$emit(\"CloseDialog\", false);\n    },\n    onCopy() {\n      this.$message.success(this.$t('chat_0026'));\n    },\n\n    beforeAvatarUpload(file) {\n      const isJPG =\n        file.type === \"image/jpg\" ||\n        file.type === \"image/jpeg\" ||\n        file.type === \"image/png\";\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        this.$message.error(this.$t('Universal_0369'));\n        return false;\n      } else {\n        if (!isLt2M) {\n          this.$message.error(this.$t('Universal_0390'));\n          return false;\n        }\n      }\n      this.imgLoading = true;\n    },\n    handleAvatarSuccess(res, file) {\n      if (res.code == 200) {\n        this.imgLoading = false;\n        this.$message({\n          message: this.$t('Universal_0110'),\n          type: \"success\",\n          duration: 1500,\n          onClose: () => {},\n        });\n        this.groupAvatarUrl = URL.createObjectURL(file.raw);\n        this.creatform.groupAvatar = res.data.path;\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    async createGroupInfo(item) {\n      const obj = {\n        group_id: item.id,\n        group_name: item.groupName,\n        group_status: item.groupStatus,\n        group_profile: item.groupProfile,\n        group_avatar: item.groupAvatar,\n        group_avatar_local: \"\",\n        add_check: item.addCheck,\n        invite_auth: item.inviteAuth,\n        country: item.country,\n        city: item.city,\n        screenshotsReminderStatus: item.screenshotsReminderStatus,\n        forbiddenWordsStatus: item.forbiddenWordsStatus,\n        memberSingleChatStatus: item.memberSingleChatStatus,\n        sendPicturesStatus: item.sendPicturesStatus,\n        sendConnectionStatus: item.sendConnectionStatus,\n        copyMessagesStauts: item.copyMessagesStauts,\n        sendRedpacketStatus: item.sendRedpacketStatus,\n        create_time: item.createdOn,\n        save_time: item.saveTime,\n        people: item.people,\n        member_level_status: item.memberLevelStatus,\n        group_level: item.groupLevel,\n        updatedOn: item.updatedOn,\n        code: \"\",\n        group_name_pinyin: convertToPinyin(item.groupName),\n        is_show: \"true\",\n        group_code: item.groupCode,\n        group_type: item.groupType,\n        groupTab: item.groupTab,\n      };\n      this._groupInfo = obj;\n      return await window.vm.$knex(\"t_groups\").insert(obj);\n      \n    },\n    async createGroupMember(memberList) {\n      console.log(\"createGroupMember\");\n      const list = [];\n      for (let item of memberList) {\n        list.push({\n          id: item.userId,\n          group_id: item.groupId,\n          auth_status: item.authStatus,\n          nick_name: item.nickName,\n          user_head_img: item.userHeadImg,\n          user_head_img_local: \"\",\n          member_notes: item.memberNotes,\n          member_notes_pinyin:\n            item.memberNotes == undefined\n              ? \"\"\n              : convertToPinyin(item.memberNotes),\n          is_show: \"true\",\n          forbiddenWordsStatus: 0,\n          muteNotifications: 0,\n          additionalStatus: 0,\n          mutedStatus: 0,\n          stickyStatus: 0,\n        });\n      }\n      const cc = await window.vm.$knex.batchInsert(\"t_groups_member\", list, 10);\n      return cc;\n    },\n    async createGroupAuth(memberAuthList) {\n      const list = [];\n      for (let item of memberAuthList) {\n        list.push({\n          group_id: item.groupId,\n          user_id: item.userId,\n          member_leval: item.memberLeval,\n          muted_status: item.mutedStatus,\n          additional_status: item.additionalStatus,\n          mute_notifications: item.muteNotifications,\n          forbidden_words_status: item.forbiddenWordsStatus,\n          sticky_status: item.stickyStatus,\n          user_level: item.userLevel,\n        });\n      }\n      const cc = await window.vm.$knex.batchInsert(\n        \"t_groups_member_auth\",\n        list,\n        10\n      );\n      return cc;\n    },\n    async createGroupAppealInfo(item) {\n      const obj = {\n        group_id: item.id,\n        closure_create_time: '',\n        closure_end_time: '',\n        closure_impeach_reason: '',\n        closure_limit_day: 0,\n        closure_limit_type:0,\n        show_appeal_closure_notice: 0,\n        warn_create_time: '',\n        warn_end_time: '',\n        warn_impeach_reason: '',\n        warn_limit_day: 0,\n        warn_limit_type:0,\n        show_appeal_warn_notice: 0\n      }\n      return await window.vm.$knex('t_groups_appeal').insert(obj);\n    },\n    async createGroupExceedInfo(item) {\n      const obj = {\n        group_id: item.id,\n        exceed_num: 0,\n        show_exceed_notice: 0,\n      }\n      return await window.vm.$knex('t_groups_exceed').insert(obj);\n    },\n    async createGroupToUpdateVersion(versionlist) {\n      const q = [];\n      for (let item of versionlist) {\n        q.push(\n          window.vm\n            .$knex(\"t_news_version\")\n            .where({ name: item.name })\n            .update({ version: item.version })\n        );\n      }\n      const cc = await Promise.all(q);\n      return cc;\n    },\n    async createGroupBylocal(data) {\n      console.log('data-- ',data);\n      // 创建群   groupBase\n      const groupInfo = data.groupBase[0];\n      const groupMemberList = data.groupMember;\n      const memberAuthList = data.memberAuth;\n      await Promise.all([\n        this.createGroupInfo(groupInfo),\n        this.createGroupMember(groupMemberList),\n        this.createGroupAuth(memberAuthList),\n        this.createGroupAppealInfo(groupInfo),\n        this.createGroupExceedInfo(groupInfo),\n        this.createGroupToUpdateVersion([\n          {\n            name: \"gtmcn\",\n            version: data.gtmcn,\n          },\n          {\n            name: \"gtmn\",\n            version: data.gtmn,\n          },\n          {\n            name: \"gtn\",\n            version: data.gtn,\n          },\n        ]),\n      ]).then((result)=>{\n        return result;\n      }).catch((error)=>{\n        console.log('error--',error);\n      });\n     \n      // 创建群成员信息    groupMember\n      // 创建群成员权限信息    memberAuth\n      // 更新版本信息      gtmcn/gtmn/gtn\n    },\n    async firstSubmit(formName) {\n      if (this.personalAppealInfo.createTime) {\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(\n          this.$t('appeal_0003', {time}),\n          this.$t('Universal_0059'),\n          {\n            confirmButtonText: this.$t('appeal_0017'),\n            cancelButtonText: this.$t('book_group_0019'),\n            center: true,\n            showClose: false,\n          }\n        )\n          .then(() => {})\n          .catch(() => {});\n      } else {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            console.log(\"imgLoading\", this.imgLoading);\n            if (this.imgLoading) {\n              this.$message.error(\"请等待图片上传完成\");\n              return;\n            }\n            this.btnloading = true;\n            let params = JSON.parse(JSON.stringify(this.creatform));\n            this.convertCountryCode(params);\n            createGroup(params)\n              .then(async (res) => {\n                if (res.code == 200) {\n                  this.step = 2;\n                  this.activeStep = 2;\n\n                  this.$emit(\"boxTitleFn\", this.$t('chat_comm_set_0019'));\n                  this.groupId = res.data.groupBase[0].id;\n                  this.queryGroupByGroupId();\n                  \n                  await this.createGroupBylocal(res.data);\n                  // this.$emit(\"boxTitleFn\", this.$t('chat_comm_set_0019'));\n                  // this.groupId = res.data.groupBase[0].id;\n                  // this.queryGroupByGroupId();\n                } else {\n                  this.$message.error(res.data.msg);\n                  this.convertCountryId();\n                }\n                this.btnloading = false;\n                //原下一步的处理\n              })\n              .catch(() => {\n                this.btnloading = false;\n              });\n          } else {\n            return false;\n          }\n        });\n      }\n    },\n    convertCountryCode(item) {\n      if (this.creatform.country && this.creatform.city) {\n        item.country = this.countryList.find(\n          (item) => item.id == this.creatform.country\n        ).code;\n        item.city = this.areaList.find(\n          (item) => item.id == this.creatform.city\n        ).code;\n      } else {\n        item.country = \"\";\n        item.city = \"\";\n      }\n    },\n    convertCountryId() {\n      if (this.creatform.country && this.creatform.city) {\n        this.creatform.country = this.countryList.find(\n          (item) => item.code == this.creatform.country\n        ).id;\n        this.creatform.city = this.areaList.find(\n          (item) => item.code == this.creatform.city\n        ).id;\n      }\n    },\n    queryGroupByGroupId() {\n      let language = this.$i18n.locale;\n      let baseUrl = process.env.VUE_APP_SHARE;\n      queryGroupByGroupId({\n        groupId: this.groupId,\n      }).then((res) => {\n        console.log(res);\n        if (res.code == 200) {\n          this.groupobj = res.data;\n          this.groupCode = res.data.groupCode;\n          let obj = JSON.parse(localStorage.getItem(\"userInfo\"));\n          this.linkurl = `${baseUrl}/#/invite/groups?userId=${localStorage.getItem(\n            \"userId\"\n          )}&inviteCode=${obj.inviteCode}&groupCode=${this.groupCode}&groupId=${\n            this.groupId\n          }&language=${language}&nickName=${obj.nickName}&category=fgg`;\n          this.linkurl = encodeURI(this.linkurl);\n        }\n      });\n    },\n  },\n\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"chatset\">\n    <!-- <p\n      style=\"text-align:right;color:#409EFF;font-size:16px;padding-right:20px;margin-bottom:20px;\"\n      v-if=\"step === 2\"\n      @click=\"gotoChat()\"\n    >跳过</p>-->\n    <el-steps :active=\"activeStep\" align-center>\n      <el-step :title=\"$t('chat_createcommunity_0001')\"></el-step>\n      <!-- <el-step title=\"群聊设置\"></el-step> -->\n      <el-step :title=\"$t('chat_comm_set_0019')\"></el-step>\n    </el-steps>\n    <br />\n    <div class=\"formbox groupavatar\">\n      <el-form\n        ref=\"creatformm\"\n        v-if=\"step === 1\"\n        :rules=\"creatformRules\"\n        :model=\"creatform\"\n        :label-width=\"labelWidth\"\n      >\n        <el-form-item\n          :label=\"$t('chat_createcommunity_0002')\"\n          prop=\"groupAvatar\"\n          required\n          class=\"groupImg\"\n        >\n          <div class=\"demo-block\">\n            <Copper\n              ref=\"copperBox\"\n              @uploadCropper=\"uploadCropper\"\n              :avater=\"groupAvatarUrl\"\n            ></Copper>\n          </div>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_createcommunity_0003')\" prop=\"groupName\" class=\"groupWord-name\">\n          <el-input\n            size=\"small\"\n            :minlength=\"1\"\n            :maxlength=\"30\"\n            v-model=\"creatform.groupName\"\n            show-word-limit\n            class=\"limtinput\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_createcommunity_0006')\" required class=\"typesel\">\n          <el-radio-group v-model=\"creatform.groupStatus\">\n            <el-radio :label=\"1\">{{ $t('chat_createcommunity_0008') }}</el-radio>\n            <el-radio :label=\"2\">{{ $t('chat_createcommunity_0009') }}</el-radio>\n          </el-radio-group>\n          <!-- <p class=\"tip\">公开群聊可被更多人发现</p> -->\n        </el-form-item>\n        <el-form-item :label=\"$t('Universal_0205')\" prop=\"country\" class=\"groupWord-area\">\n          <el-row>\n            <el-col :span=\"11\">\n              <el-select\n                size=\"mini\"\n                v-model=\"creatform.country\"\n                clearable\n                filterable\n                :placeholder=\"$t('Universal_0208')\"\n                popper-class=\"noDrag\"\n                @change=\"getarea\"\n                class=\"select_box\"\n              >\n                <el-option\n                  :label=\"item.name\"\n                  :value=\"item.id\"\n                  v-for=\"item in countryList\"\n                  :key=\"item.id\"\n                ></el-option>\n              </el-select>\n            </el-col>\n            <el-col :span=\"11\" :offset=\"2\">\n              <el-form-item label prop=\"city\">\n                <el-select\n                  size=\"mini\"\n                  v-model=\"creatform.city\"\n                  clearable\n                  filterable\n                  :placeholder=\"$t('Universal_0209')\"\n                  popper-class=\"noDrag\"\n                  class=\"select_box\"\n                >\n                  <el-option\n                    :label=\"item.name\"\n                    :value=\"item.id\"\n                    v-for=\"item in areaList\"\n                    :key=\"item.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_createcommunity_0010')\" prop=\"groupTab\" class=\"formTab\">\n          <el-row>\n            <el-select\n              size=\"mini\"\n              v-model=\"creatform.groupTab\"\n              clearable\n              filterable\n              :placeholder=\"$t('chat_createcommunity_0035')\"\n              class=\"select_box\"\n            >\n              <el-option\n                v-for=\"item in tabList\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value.toString()\"\n              ></el-option>\n            </el-select>\n          </el-row>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_comm_set_0002')\" prop=\"type\" class=\"notegroup\">\n          <el-input\n            show-word-limit\n            class=\"limtinput\"\n            type=\"textarea\"\n            :maxlength=\"500\"\n            :rows=\"4\"\n            :placeholder=\"$t('chat_createcommunity_0033')\"\n            v-model=\"creatform.groupProfile\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item class=\"next-btn\">\n          <div class=\"right\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              :loading=\"btnloading\"\n              @click=\"CloseDialog()\"\n              >{{ $t('Universal_0063') }}</el-button\n            >\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              :loading=\"btnloading\"\n              @click=\"firstSubmit('creatformm')\"\n            >\n              {{ $t('Universal_0069') }}\n            </el-button>\n          </div>\n        </el-form-item>\n      </el-form>\n      <!-- <el-form\n        ref=\"setform\"\n        v-if=\"step === 2\"\n        :rules=\"setform\"\n        :model=\"setform\"\n        label-width=\"120px\">\n        <el-form-item label=\"群聊欢迎语\" prop=\"welcome\">\n          <el-input\n            type=\"textarea\"\n            :maxlength=\"500\"\n            :rows=\"8\"\n            placeholder=\"设置群欢迎语，用户加入群聊时即可收到欢迎语\"\n            v-model=\"setform.welcome\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"群公告\" prop=\"notice\">\n          <el-input\n            type=\"textarea\"\n            :maxlength=\"500\"\n            :rows=\"8\"\n            placeholder=\"您可以发布一份公告，以便群成员更好的了解群\"\n            v-model=\"setform.notice\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <div class=\"demo-block\">\n            <el-upload\n              class=\"avatar-uploader\"\n              action=\"https://jsonplaceholder.typicode.com/posts/\"\n              :show-file-list=\"false\"\n              :on-success=\"handleAvatarSuccess\"\n              :before-upload=\"beforeAvatarUpload\"\n            >\n              <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\" />\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n            </el-upload>\n            <span class=\"tip\">仅支持添加一张与公告内容相关的图片</span>\n          </div>\n        </el-form-item>\n        <el-form-item>\n          <div class=\"center\">\n            <el-button type=\"primary\" @click=\"firstSubmit('creatform')\">下一步</el-button>\n          </div>\n        </el-form-item>\n      </el-form>-->\n      <div class=\"finish\" v-if=\"step === 2\">\n        <p>{{ $t('chat_addfriend_0016') }}</p>\n        <br />\n        <div class=\"mid\">\n          <!-- <img src=\"../../assets/images/success.png\" /> -->\n          <!-- <span>群邀请链接已创建</span> -->\n          <!-- <p>您可以将链接分享至DiDi、QQ、微信等应用内，好友通过链接即可加入群聊</p> -->\n          <el-input\n            v-model=\"linkurl\"\n            readonly\n            style=\"width: 300px\"\n            id=\"link\"\n            class=\"copyLink\"\n          ></el-input>\n          <span\n            v-clipboard:copy=\"linkurl\"\n            v-clipboard:success=\"onCopy\"\n            class=\"copy\"\n            >{{ $t('chat_0026') }}</span\n          >\n        </div>\n        <br />\n        <br />\n        <el-button size=\"mini\" type=\"primary\" @click=\"gotoChat()\"\n          >{{ $t('Universal_0060') }}</el-button\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { createGroup, queryGroupByGroupId } from \"./server\";\nimport { upload_images_avatar } from \"@/server.js\";\nimport { contGrpSize } from \"@/utils\";\nimport { mapState, mapMutations } from \"vuex\";\nimport { convertToPinyin } from \"@/utils/pinyin\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport SQLUtils from \"@/components/db/sqlite.js\";\nimport Copper from \"@/components/chat/copper\";\nimport bus from \"@/utils/eventbus\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { Copper },\n  data() {\n    //这里存放数据\n    return {\n      btnloading: false,\n      activeStep: 1,\n      step: 1,\n      countryList: [],\n      areaList: [],\n      creatform: {\n        groupAvatar: \"\",\n        groupBigAvatar: \"\",\n        groupName: \"\",\n        groupStatus: 1,\n        groupProfile: \"\",\n        city: \"\",\n        country: \"\",\n        groupTab: \"\",\n      },\n      /*creatformRules: {\n        groupAvatar: [\n          { required: true, message: this.$t('chat_createcommunity_0034'), trigger: \"change\" },\n        ],\n        groupName: [\n          { required: true, message: this.$t('chat_createcommunity_0004'), trigger: \"blur\" },\n          {\n            min: 1,\n            max: 30,\n            trigger: \"blur\",\n          },\n          {\n            pattern: /^((?!didi).)+$/i, ///^didi/ig,\n            message: this.$t('chat_comm_set_0017'),\n          },\n        ],\n        groupStatus: [{ required: true, message: this.$t('chat_createcommunity_0032') }],\n        country: [{ message: this.$t('Universal_0208'), trigger: \"change\" }],\n        city: [{ trigger: \"change\" }],\n        groupTab: [{ message: this.$t('chat_createcommunity_0035'), trigger: \"change\" }],\n      },*/\n      setform: {\n        welcome: \"\",\n        notice: \"\",\n        noticePic: \"\",\n      },\n      imageUrl: \"\",\n      linkurl: \"\",\n      groupCode: \"\",\n      groupobj: {},\n      uploadUrl: upload_images_avatar(),\n      uploadData: {},\n      headers: {\n        Authorization: localStorage.accessToken,\n      },\n      groupAvatarUrl: \"\",\n      imgLoading: false,\n      /*tabList: [\n        { value: 1, label: this.$t('chat_createcommunity_0012') },\n        { value: 2, label: \"BTC\" },\n        { value: 3, label: this.$t('chat_createcommunity_0014') },\n        { value: 4, label: this.$t('chat_createcommunity_0015') },\n        { value: 5, label: this.$t('chat_createcommunity_0016') },\n        { value: 6, label: this.$t('chat_createcommunity_0017') },\n        { value: 7, label: \"Defi\" },\n        { value: 8, label: this.$t('chat_createcommunity_0019') },\n        { value: 9, label: this.$t('chat_createcommunity_0020') },\n        { value: 10, label: this.$t('chat_createcommunity_0021') },\n      ],*/\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    creatformRules() {\n      return {\n        groupAvatar: [\n          { required: true, message: this.$t('chat_createcommunity_0034'), trigger: \"change\" },\n        ],\n        groupName: [\n          { required: true, message: this.$t('chat_createcommunity_0004'), trigger: \"blur\" },\n          {\n            min: 1,\n            max: 30,\n            trigger: \"blur\",\n          },\n          {\n            pattern: /^((?!didi).)+$/i, ///^didi/ig,\n            message: this.$t('chat_comm_set_0017'),\n          },\n        ],\n        groupStatus: [{ required: true, message: this.$t('chat_createcommunity_0032') }],\n        country: [{ message: this.$t('Universal_0208'), trigger: \"change\" }],\n        city: [{ trigger: \"change\" }],\n        groupTab: [{ message: this.$t('chat_createcommunity_0035'), trigger: \"change\" }],\n      };\n    },\n    tabList() {\n      return [\n        { value: 1, label: this.$t('chat_createcommunity_0012') },\n        { value: 2, label: \"BTC\" },\n        { value: 3, label: this.$t('chat_createcommunity_0014') },\n        { value: 4, label: this.$t('chat_createcommunity_0015') },\n        { value: 5, label: this.$t('chat_createcommunity_0016') },\n        { value: 6, label: this.$t('chat_createcommunity_0017') },\n        { value: 7, label: \"Defi\" },\n        { value: 8, label: this.$t('chat_createcommunity_0019') },\n        { value: 9, label: this.$t('chat_createcommunity_0020') },\n        { value: 10, label: this.$t('chat_createcommunity_0021') },\n      ];\n    },\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '100px';\n      } else {\n        return '170px';\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    bus.$on('changeLanguage',(lang)=>{   \n      this.areaList=[];\n      this.post_base_country_list(lang);\n    });\n    this.$emit(\"boxTitleFn\", this.$t('chat_createcommunity_0001'));\n  },\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    async uploadCropper(smallUrl, bigUrl) {\n      //调接口上传裁剪的头像\n      this.groupAvatarUrl = smallUrl; //传给子\n      this.creatform.groupAvatar = smallUrl; //传给接口\n      this.creatform.groupBigAvatar = bigUrl; //传给接口\n      console.log('chen-创建群-groupAvatar==', smallUrl)\n      console.log('chen-创建群-groupBigAvatar==', bigUrl)\n    },\n    resetForm() {\n      // this.$refs['creatform'].clearValidate();\n\n      this.activeStep = 1;\n      this.step = 1;\n      this.creatform = {\n        groupName: \"\",\n        groupStatus: 1,\n        groupProfile: \"\",\n        city: \"\",\n        country: \"\",\n        groupAvatar: \"\",\n        groupBigAvatar: \"\",\n        groupTab: \"\",\n      };\n      this.groupAvatarUrl = \"\";\n      if (this.$refs[\"creatformm\"] != undefined) {\n        this.$refs[\"creatformm\"].resetFields();\n        this.imgLoading = false;\n      }\n    },\n\n    async post_base_country_list(lang) {\n      this.countryList = await SQLUtils.getTAreaCountryList(lang);\n    },\n    async getarea(val) {\n      this.areaList = await SQLUtils.getTAreaCityList(val);\n      this.creatform.city = \"\";\n    },\n    async gotoChat() {\n      //this.groupobj.targetId = this.groupobj.id\n      // this.$store.dispatch('SET_CURRENT_CHAT', this.groupobj)\n      this.CLEAR_CHAT();\n      let current = {\n        id: this.groupId,\n        targetId: this.groupId,\n        uniqueCode: contGrpSize(this.groupId),\n        sessionId: this.groupobj.headImg,\n        sessionName: this.groupobj.groupName,\n        item: this._groupInfo,\n      };\n      await this.$store.dispatch(\"SET_CURRENT_CHAT\", current);\n      this.$router.push({\n        path: \"/app/chat/group/message\",\n        query: {\n          id: this.groupId,\n          targetId: this.groupId,\n          timer: new Date().getTime(),\n          friendName: encodeURI(this.groupobj.groupName),\n          uniqueCode: contGrpSize(this.groupId),\n        },\n      });\n      this.$emit(\"CloseDialog\", false);\n    },\n    CloseDialog() {\n      this.$emit(\"CloseDialog\", false);\n    },\n    onCopy() {\n      this.$message.success(this.$t('chat_0026'));\n    },\n\n    beforeAvatarUpload(file) {\n      const isJPG =\n        file.type === \"image/jpg\" ||\n        file.type === \"image/jpeg\" ||\n        file.type === \"image/png\";\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        this.$message.error(this.$t('Universal_0369'));\n        return false;\n      } else {\n        if (!isLt2M) {\n          this.$message.error(this.$t('Universal_0390'));\n          return false;\n        }\n      }\n      this.imgLoading = true;\n    },\n    handleAvatarSuccess(res, file) {\n      if (res.code == 200) {\n        this.imgLoading = false;\n        this.$message({\n          message: this.$t('Universal_0110'),\n          type: \"success\",\n          duration: 1500,\n          onClose: () => {},\n        });\n        this.groupAvatarUrl = URL.createObjectURL(file.raw);\n        this.creatform.groupAvatar = res.data.path;\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    async createGroupInfo(item) {\n      const obj = {\n        group_id: item.id,\n        group_name: item.groupName,\n        group_status: item.groupStatus,\n        group_profile: item.groupProfile,\n        group_avatar: item.groupAvatar,\n        group_avatar_local: \"\",\n        add_check: item.addCheck,\n        invite_auth: item.inviteAuth,\n        country: item.country,\n        city: item.city,\n        screenshotsReminderStatus: item.screenshotsReminderStatus,\n        forbiddenWordsStatus: item.forbiddenWordsStatus,\n        memberSingleChatStatus: item.memberSingleChatStatus,\n        sendPicturesStatus: item.sendPicturesStatus,\n        sendConnectionStatus: item.sendConnectionStatus,\n        copyMessagesStauts: item.copyMessagesStauts,\n        sendRedpacketStatus: item.sendRedpacketStatus,\n        create_time: item.createdOn,\n        save_time: item.saveTime,\n        people: item.people,\n        member_level_status: item.memberLevelStatus,\n        group_level: item.groupLevel,\n        updatedOn: item.updatedOn,\n        code: \"\",\n        group_name_pinyin: convertToPinyin(item.groupName),\n        is_show: \"true\",\n        group_code: item.groupCode,\n        group_type: item.groupType,\n        groupTab: item.groupTab,\n      };\n      this._groupInfo = obj;\n      return await window.vm.$knex(\"t_groups\").insert(obj);\n      \n    },\n    async createGroupMember(memberList) {\n      console.log(\"createGroupMember\");\n      const list = [];\n      for (let item of memberList) {\n        list.push({\n          id: item.userId,\n          group_id: item.groupId,\n          auth_status: item.authStatus,\n          nick_name: item.nickName,\n          user_head_img: item.userHeadImg,\n          user_head_img_local: \"\",\n          member_notes: item.memberNotes,\n          member_notes_pinyin:\n            item.memberNotes == undefined\n              ? \"\"\n              : convertToPinyin(item.memberNotes),\n          is_show: \"true\",\n          forbiddenWordsStatus: 0,\n          muteNotifications: 0,\n          additionalStatus: 0,\n          mutedStatus: 0,\n          stickyStatus: 0,\n        });\n      }\n      const cc = await window.vm.$knex.batchInsert(\"t_groups_member\", list, 10);\n      return cc;\n    },\n    async createGroupAuth(memberAuthList) {\n      const list = [];\n      for (let item of memberAuthList) {\n        list.push({\n          group_id: item.groupId,\n          user_id: item.userId,\n          member_leval: item.memberLeval,\n          muted_status: item.mutedStatus,\n          additional_status: item.additionalStatus,\n          mute_notifications: item.muteNotifications,\n          forbidden_words_status: item.forbiddenWordsStatus,\n          sticky_status: item.stickyStatus,\n          user_level: item.userLevel,\n        });\n      }\n      const cc = await window.vm.$knex.batchInsert(\n        \"t_groups_member_auth\",\n        list,\n        10\n      );\n      return cc;\n    },\n    async createGroupAppealInfo(item) {\n      const obj = {\n        group_id: item.id,\n        closure_create_time: '',\n        closure_end_time: '',\n        closure_impeach_reason: '',\n        closure_limit_day: 0,\n        closure_limit_type:0,\n        show_appeal_closure_notice: 0,\n        warn_create_time: '',\n        warn_end_time: '',\n        warn_impeach_reason: '',\n        warn_limit_day: 0,\n        warn_limit_type:0,\n        show_appeal_warn_notice: 0\n      }\n      return await window.vm.$knex('t_groups_appeal').insert(obj);\n    },\n    async createGroupExceedInfo(item) {\n      const obj = {\n        group_id: item.id,\n        exceed_num: 0,\n        show_exceed_notice: 0,\n      }\n      return await window.vm.$knex('t_groups_exceed').insert(obj);\n    },\n    async createGroupToUpdateVersion(versionlist) {\n      const q = [];\n      for (let item of versionlist) {\n        q.push(\n          window.vm\n            .$knex(\"t_news_version\")\n            .where({ name: item.name })\n            .update({ version: item.version })\n        );\n      }\n      const cc = await Promise.all(q);\n      return cc;\n    },\n    async createGroupBylocal(data) {\n      console.log('data-- ',data);\n      // 创建群   groupBase\n      const groupInfo = data.groupBase[0];\n      const groupMemberList = data.groupMember;\n      const memberAuthList = data.memberAuth;\n      await Promise.all([\n        this.createGroupInfo(groupInfo),\n        this.createGroupMember(groupMemberList),\n        this.createGroupAuth(memberAuthList),\n        this.createGroupAppealInfo(groupInfo),\n        this.createGroupExceedInfo(groupInfo),\n        this.createGroupToUpdateVersion([\n          {\n            name: \"gtmcn\",\n            version: data.gtmcn,\n          },\n          {\n            name: \"gtmn\",\n            version: data.gtmn,\n          },\n          {\n            name: \"gtn\",\n            version: data.gtn,\n          },\n        ]),\n      ]).then((result)=>{\n        return result;\n      }).catch((error)=>{\n        console.log('error--',error);\n      });\n     \n      // 创建群成员信息    groupMember\n      // 创建群成员权限信息    memberAuth\n      // 更新版本信息      gtmcn/gtmn/gtn\n    },\n    async firstSubmit(formName) {\n      if (this.personalAppealInfo.createTime) {\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(\n          this.$t('appeal_0003', {time}),\n          this.$t('Universal_0059'),\n          {\n            confirmButtonText: this.$t('appeal_0017'),\n            cancelButtonText: this.$t('book_group_0019'),\n            center: true,\n            showClose: false,\n          }\n        )\n          .then(() => {})\n          .catch(() => {});\n      } else {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            console.log(\"imgLoading\", this.imgLoading);\n            if (this.imgLoading) {\n              this.$message.error(\"请等待图片上传完成\");\n              return;\n            }\n            this.btnloading = true;\n            let params = JSON.parse(JSON.stringify(this.creatform));\n            this.convertCountryCode(params);\n            createGroup(params)\n              .then(async (res) => {\n                if (res.code == 200) {\n                  this.step = 2;\n                  this.activeStep = 2;\n\n                  this.$emit(\"boxTitleFn\", this.$t('chat_comm_set_0019'));\n                  this.groupId = res.data.groupBase[0].id;\n                  this.queryGroupByGroupId();\n                  \n                  await this.createGroupBylocal(res.data);\n                  // this.$emit(\"boxTitleFn\", this.$t('chat_comm_set_0019'));\n                  // this.groupId = res.data.groupBase[0].id;\n                  // this.queryGroupByGroupId();\n                } else {\n                  this.$message.error(res.data.msg);\n                  this.convertCountryId();\n                }\n                this.btnloading = false;\n                //原下一步的处理\n              })\n              .catch(() => {\n                this.btnloading = false;\n              });\n          } else {\n            return false;\n          }\n        });\n      }\n    },\n    convertCountryCode(item) {\n      if (this.creatform.country && this.creatform.city) {\n        item.country = this.countryList.find(\n          (item) => item.id == this.creatform.country\n        ).code;\n        item.city = this.areaList.find(\n          (item) => item.id == this.creatform.city\n        ).code;\n      } else {\n        item.country = \"\";\n        item.city = \"\";\n      }\n    },\n    convertCountryId() {\n      if (this.creatform.country && this.creatform.city) {\n        this.creatform.country = this.countryList.find(\n          (item) => item.code == this.creatform.country\n        ).id;\n        this.creatform.city = this.areaList.find(\n          (item) => item.code == this.creatform.city\n        ).id;\n      }\n    },\n    queryGroupByGroupId() {\n      let language = this.$i18n.locale;\n      let baseUrl = process.env.VUE_APP_SHARE;\n      queryGroupByGroupId({\n        groupId: this.groupId,\n      }).then((res) => {\n        console.log(res);\n        if (res.code == 200) {\n          this.groupobj = res.data;\n          this.groupCode = res.data.groupCode;\n          let obj = JSON.parse(localStorage.getItem(\"userInfo\"));\n          this.linkurl = `${baseUrl}/#/invite/groups?userId=${localStorage.getItem(\n            \"userId\"\n          )}&inviteCode=${obj.inviteCode}&groupCode=${this.groupCode}&groupId=${\n            this.groupId\n          }&language=${language}&nickName=${obj.nickName}&category=fgg`;\n          this.linkurl = encodeURI(this.linkurl);\n        }\n      });\n    },\n  },\n\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\">\n.chatset {\n  .el-step__title {\n    font-size: 12px;\n  }\n  .el-input__inner,\n  .el-textarea__inner {\n    background: #fff;\n    border: 1px solid rgba(215, 215, 215, 1);\n  }\n  .el-textarea .el-input__count {\n    background: #fff;\n  }\n}\n</style>\n\n<style scoped>\n.group-avatar {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n}\n\n.user-uploader-icon {\n  font-size: 40px;\n  color: #e9e8e8;\n  text-align: center;\n}\n</style>\n\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.chatset {\n  box-sizing: border-box;\n  width: 100%;\n  padding: 0;\n  overflow-y: scroll;\n  .formbox {\n    width: 100%;\n    box-sizing: border-box;\n    padding: 0 10px 0 0 !important;\n  }\n  .groupImg {\n    margin-bottom: 10px;\n  }\n  .tip {\n    color: #bbb;\n    font-size: 12px;\n  }\n  .right {\n    text-align: right;\n\n    /deep/ .el-button--primary {\n      margin-top: 30px;\n    }\n  }\n  .finish {\n    text-align: center;\n    margin: 40px 0 0;\n    color: #333333;\n    .mid {\n      // display: flex;\n      margin: 10px 0;\n      img,\n      span {\n        vertical-align: middle;\n        padding-right: 5px;\n        margin-top: 40px;\n      }\n      p {\n        color: #999999;\n        font-size: 12px;\n        margin: 20px 0;\n      }\n      .copy {\n        font-size: 12px;\n        padding-left: 15px;\n        color: #2f54eb;\n        cursor: pointer;\n      }\n    }\n    .el-button {\n      width: 202px;\n      background: #2f54eb;\n      border-color: #2f54eb;\n    }\n  }\n}\n\n.chatset {\n  /deep/ .el-step__title {\n    line-height: 25px;\n  }\n  /deep/ .el-step__title.is-finish {\n    color: #333;\n  }\n\n  /deep/ .el-step__title.is-process {\n    color: #333;\n  }\n\n  /deep/ .el-form-item__label {\n    color: #333;\n    font-size: 13px;\n\n    font-weight: 400;\n  }\n\n  /deep/ .el-input__inner,\n  .el-textarea__inner {\n    color: #333;\n    font-size: 13px;\n\n    font-weight: 400;\n  }\n\n  /deep/ .el-radio__label {\n    color: #333;\n    font-size: 13px;\n\n    font-weight: 400;\n  }\n\n  /deep/ .limtinput textarea {\n    min-height: 50px;\n    max-height: 105px;\n    font-size: 13px;\n  }\n\n  /deep/ .el-button--primary {\n    width: 84px;\n    height: 28px;\n    margin-top: 13px;\n    font-size: 13px;\n  }\n  /deep/ .el-form-item__error {\n    padding-top: 0;\n  }\n\n  .typesel {\n    margin-bottom: 0;\n  }\n  .groupWord-name {\n    margin-bottom: 0px;\n  }\n  .groupWord-area {\n    margin-bottom: 6px;\n  }\n\n  .formTab {\n    margin-bottom: 13px;\n  }\n  .notegroup {\n    margin-bottom: 0;\n\n    /deep/ .el-form-item__content {\n      line-height: 20px;\n    }\n    /deep/ .el-textarea .el-input__count {\n      bottom: -20px;\n    }\n\n    /deep/ .el-textarea__inner {\n      padding: 8px;\n    }\n  }\n  .copyLink /deep/ .el-input__inner {\n    font-size: 12px;\n  }\n}\n\n.demo-block {\n  height: 50px;\n  /deep/ .el-loading-spinner {\n    left: -20%;\n    margin-top: -25px;\n  }\n\n  /deep/ .el-icon-loading {\n    color: #fff;\n    font-size: 12px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".chatset": {
          ".el-step__title": {
            "font-size": "12px"
          },
          ".el-input__inner,  .el-textarea__inner": {
            "background": "#fff",
            "border": "1px solid rgba(215, 215, 215, 1)"
          },
          ".el-textarea .el-input__count": {
            "background": "#fff"
          }
        }
      },
      {
        ".group-avatar": {
          "width": "30px",
          "height": "30px",
          "border-radius": "50%"
        },
        ".user-uploader-icon": {
          "font-size": "40px",
          "color": "#e9e8e8",
          "text-align": "center"
        }
      },
      {
        ".chatset": {
          "box-sizing": "border-box",
          "width": "100%",
          "padding": "0",
          "overflow-y": "scroll",
          ".formbox": {
            "width": "100%",
            "box-sizing": "border-box",
            "padding": "0 10px 0 0 !important"
          },
          ".groupImg": {
            "margin-bottom": "10px"
          },
          ".tip": {
            "color": "#bbb",
            "font-size": "12px"
          },
          ".right": {
            "text-align": "right",
            "/deep/ .el-button--primary": {
              "margin-top": "30px"
            }
          },
          ".finish": {
            "text-align": "center",
            "margin": "40px 0 0",
            "color": "#333333",
            ".mid": {
              "margin": "10px 0",
              "img,      span": {
                "vertical-align": "middle",
                "padding-right": "5px",
                "margin-top": "40px"
              },
              "p": {
                "color": "#999999",
                "font-size": "12px",
                "margin": "20px 0"
              },
              ".copy": {
                "font-size": "12px",
                "padding-left": "15px",
                "color": "#2f54eb",
                "cursor": "pointer"
              }
            },
            ".el-button": {
              "width": "202px",
              "background": "#2f54eb",
              "border-color": "#2f54eb"
            }
          },
          "/deep/ .el-step__title": {
            "line-height": "25px"
          },
          "/deep/ .el-step__title.is-finish": {
            "color": "#333"
          },
          "/deep/ .el-step__title.is-process": {
            "color": "#333"
          },
          "/deep/ .el-form-item__label": {
            "color": "#333",
            "font-size": "13px",
            "font-weight": "400"
          },
          "/deep/ .el-input__inner,  .el-textarea__inner": {
            "color": "#333",
            "font-size": "13px",
            "font-weight": "400"
          },
          "/deep/ .el-radio__label": {
            "color": "#333",
            "font-size": "13px",
            "font-weight": "400"
          },
          "/deep/ .limtinput textarea": {
            "min-height": "50px",
            "max-height": "105px",
            "font-size": "13px"
          },
          "/deep/ .el-button--primary": {
            "width": "84px",
            "height": "28px",
            "margin-top": "13px",
            "font-size": "13px"
          },
          "/deep/ .el-form-item__error": {
            "padding-top": "0"
          },
          ".typesel": {
            "margin-bottom": "0"
          },
          ".groupWord-name": {
            "margin-bottom": "0px"
          },
          ".groupWord-area": {
            "margin-bottom": "6px"
          },
          ".formTab": {
            "margin-bottom": "13px"
          },
          ".notegroup": {
            "margin-bottom": "0",
            "/deep/ .el-form-item__content": {
              "line-height": "20px"
            },
            "/deep/ .el-textarea .el-input__count": {
              "bottom": "-20px"
            },
            "/deep/ .el-textarea__inner": {
              "padding": "8px"
            }
          },
          ".copyLink /deep/ .el-input__inner": {
            "font-size": "12px"
          }
        },
        ".demo-block": {
          "height": "50px",
          "/deep/ .el-loading-spinner": {
            "left": "-20%",
            "margin-top": "-25px"
          },
          "/deep/ .el-icon-loading": {
            "color": "#fff",
            "font-size": "12px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--资金 模块 -->\n<template>\n  <div class=\"VIEW-wrap\">\n    <HeadTop ref=\"tophead\"></HeadTop>\n    <el-radio-group v-model=\"tabList\" style=\"margin-bottom: 30px\" @change=\"changTab\">\n      <el-radio-button label=\"has\">已发布</el-radio-button>\n      <el-radio-button label=\"nohas\">待发布</el-radio-button>\n    </el-radio-group>\n    <div v-for=\"(item, index) in dataList\" :key=\"item.id\" :data-index=\"index\" class=\"myspin\">\n      <span v-for=\"pic in item.picObjs\" :key=\"pic.picId\">\n        <img :src=\"pic.url\" />\n      </span>\n    </div>\n    <div class=\"list\">\n      <div>\n        <div class=\"spot\" v-if=\"total > 0\">\n          <el-row class=\"box-card spot-card\" v-for=\"(item, index) in dataList\" :data-index=\"index\" :key=\"item.id\">\n            <el-row>\n              <el-col class=\"card-avatar\" style=\"text-align: right; padding-right: 15px; width: 70px\">\n                <el-avatar class=\"avatar\" :size=\"60\" :src=\"item.userImg\"></el-avatar>\n              </el-col>\n              <el-col :span=\"18\" class=\"card-info\">\n                <div class=\"info-name\">{{ item.userNickName }}</div>\n                <!-- <div class=\"spot-time\">{{item.createdOn | timeCulmulate}}</div> -->\n                <div class=\"spot-time\" v-if=\"item.postTime != '0' && item.postTimeDecribe != 'day'\">\n                  {{ item.postTime }}{{ item.postTimeDecribe }}\n                </div>\n                <div class=\"spot-time\" v-else-if=\"item.postTimeDecribe == 'day'\">\n                  {{ item.postTime }}\n                </div>\n                <div class=\"spot-time\" v-else>{{ item.postTimeDecribe }}</div>\n                <!-- <div class=\"spot-time\" v-if=\"onshow\">{{item.updatedOn}}</div> -->\n                <div class=\"spot-relative\">\n                  <div class=\"spot-content\" :class=\"{ active: item.isShowMore }\" :ref=\"item.id\">\n                    {{ item.content }}\n                  </div>\n                  <span class=\"isShow\" v-if=\"item.isDescStatus\" @click=\"item.isShowMore = !item.isShowMore\">\n                    {{ item.isShowMore ? '全文' : '收起' }}\n                  </span>\n                </div>\n              </el-col>\n              <el-col :span=\"4\" class=\"card-btn spot-btn\" style=\"text-align: right\">\n                <i class=\"el-icon-edit\" v-if=\"onshow\" @click=\"goPublishHand(item)\"></i>\n                <i class=\"el-icon-delete\" @click=\"delInvitation(item.id, onshow)\"></i>\n                <!-- <div class=\"blue\" v-if=\"!onshow\" @click=\"godetail(item.id)\">查看全文 ></div> -->\n              </el-col>\n            </el-row>\n            <ul class=\"imgbox cf\" v-if=\"item.picObjs != null\">\n              <li v-for=\"(pic, index2) in item.picObjs.slice(0, 5)\" :key=\"pic.picId\" @click=\"preview(item, index2)\">\n                <img :src=\"pic.url\" />\n                <!-- <img :src=\"pic.url\" @click=\"onPreview(index,index2)\"/> -->\n              </li>\n            </ul>\n            <!-- <el-image-viewer\n            v-if=\"showViewer\"\n            :on-close=\"closeViewer\"\n            :url-list=\"[bigUrl]\" /> -->\n            <div class=\"article\" v-show=\"item.invitationType == '1'\" @click=\"toArticle(item.id)\">\n              <div class=\"art-img\">\n                <img :src=\"item.articleImg\" alt=\"\" v-if=\"item.articleImg\" />\n                <img src=\"../../assets/images/noimg.png\" alt=\"\" v-else />\n              </div>\n              <div class=\"art-content\">\n                <p v-if=\"item.title\" class=\"art-title\">{{ item.title }}</p>\n                <p v-else class=\"art-title\">来自@{{ item.userNickName }}的看点</p>\n                <!-- <p v-if=\"item.invitationSource\" class=\"art-source\">来源：{{item.invitationSource}}</p> -->\n              </div>\n            </div>\n            <div class=\"work\">\n              <div>{{ item.invitationLabelNames }}</div>\n              <div class=\"right\">\n                <span v-if=\"!onshow\">\n                  <i><img src=\"../../assets/images/view_share.png\"/></i><span>分享 {{ item.sharedTimes }}</span>\n                  <i @click=\"godetail(item.id)\" style=\"cursor: pointer\"><img src=\"../../assets/images/view_conment.png\"/></i\n                  ><span @click=\"godetail(item.id)\" style=\"cursor: pointer\"> 评论 {{ item.commentTimes }} </span>\n                  <i><img src=\"../../assets/images/view_proud.png\"/></i><span>赞 {{ item.numberOfPoints }}</span>\n                </span>\n                <span class=\"authority\">\n                  <label v-if=\"item.limitsOfAuthority == '6009-001'\">公开</label>\n                  <label v-if=\"item.limitsOfAuthority == '6009-002'\">订阅</label>\n                  <label v-if=\"item.limitsOfAuthority == '6009-003'\">私密</label>\n                </span>\n              </div>\n            </div>\n          </el-row>\n          <Pagation\n            :layout=\"layout\"\n            :currentPage=\"currentPage\"\n            :total=\"total\"\n            :myPageSizes=\"pageSize\"\n            @handleSizeChange=\"handleSizeChange\"\n            @handleCurrentChange=\"handleCurrentChange\"\n          />\n        </div>\n        <div v-else class=\"nodata\">暂无数据</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Vue from 'vue';\nimport HeadTop from './head/head';\nimport { getInvitationListPage, delInvitation, removeDraftInvitation, queryDraftInvitation } from './server';\nimport { mapState } from 'vuex';\n// import { timeCulmulate} from \"../../utils/index.js\";\n// import { state} from \"@/store/modules/common.js\";\n// import ElImageViewer from 'element-ui/packages/image/src/image-viewer'\nexport default {\n  //import引入的组件需要注入到对象中才能使用，本人性格开朗，乐观，热情，与同事相处融洽，爱好看书，电影，打羽毛球。其他熟悉软件photoshop,AE,Premior Pro,3Dmax,micro Officec\n  components: {\n    // ElImageViewer,\n    HeadTop\n  },\n  data() {\n    //这里存放数据\n    return {\n      showViewer: false, // 显示查看器\n      bigUrl: '',\n      layout: 'prev, pager, next',\n      onshow: false,\n      tabList: 'has',\n      tabData: ['已发布', '未发布'],\n      activeItem: 'first',\n      //   分页\n      pageNo: 1,\n      currentPage: 1,\n      pageSize: 5,\n      total: 0,\n      dataList: [],\n      srcList: ['https://fuss10.elemecdn.com/8/27/f01c15bb73e1ef3793e64e6b7bbccjpeg.jpeg']\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      loginInfo: obj => {\n        return obj.state.loginInfo;\n      }\n    })\n  },\n  //   filters: {\n  //     timeCulmulate: function (date) {\n\n  //         let nowTimes = new Date().getTime();\n  //         let parTimes = new Date(date).getTime();\n  //\n  //         if(nowTimes-parTimes>=86400000){\n  //             return date\n  //         }else{\n  //             let time = Number(((nowTimes - parTimes)/(1000*60*60)).toFixed(1))+ ''\n  //             time=time.substring(0,time.indexOf(\".\"))\n  //             return (time +'小时前')\n  //         }\n  //     }\n  //   },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    toArticle(a) {\n      //   console.log(this.onshow)\n      if (!this.onshow) {\n        this.$router.push({\n          path: `/app/articleDetail?id=${a}`\n        });\n      } else {\n        return;\n      }\n    },\n    preview(item, index) {\n      let arry = [];\n      for (let i in item.picObjs) {\n        arry.push(item.picObjs[i].url);\n      }\n\n      this.$imagePreview({\n        images: arry,\n        index: index\n      });\n    },\n    goPublishHand(item) {\n      //   let picObjs = item.picObjs\n      //   let arrImg = []\n      //   picObjs.map(item => {\n      //     arrImg.push({\n      //         ...item,\n      //         name:''\n      //     })\n      //   })\n      let pararms = {\n        invitationType: item.invitationType + '',\n        limitsOfAuthority: item.limitsOfAuthority,\n        invitationLabelIds: item.invitationLabelIds,\n        title: item.title,\n        content: item.content,\n        articleImg: item.articleImg || '',\n        articleContent: item.articleContent,\n        //   img: arrImg,\n        picShortObjs: item.picShortObjs,\n        picObjs: item.picObjs,\n        draftId: item.id,\n        draftOperation: 0,\n        invitationSource: item.invitationSource\n      };\n      localStorage.setItem('publish', JSON.stringify(pararms));\n      //\n      this.$router.push({\n        path: '/app/publish',\n        query: {\n          type: 'edit'\n        }\n      });\n    },\n    godetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n    delInvitation(id, onshow) {\n      //删除已发布\n      console.log(id);\n      let aipname, pararms;\n      if (onshow) {\n        //\n        aipname = removeDraftInvitation;\n        pararms = {\n          draftInvitationId: id\n        };\n      } else {\n        aipname = delInvitation;\n        pararms = {\n          invitationId: id\n        };\n      }\n      this.$confirm('确定要删除看点吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          aipname(pararms).then(res => {\n            //\n            if (res.code == '200') {\n              this.$message.success(res.msg);\n              this.pageNo = 1;\n              this.currentPage = 1;\n              if (onshow) {\n                this.queryDraftInvitation();\n              } else {\n                this.getInvitationListPage();\n              }\n              this.$refs.tophead.comInit();\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n    },\n    onPreview(i, j) {\n      this.bigUrl = this.dataList[i].picObjs[j].url;\n      this.showViewer = true;\n    },\n    // 关闭查看器\n    closeViewer() {\n      this.showViewer = false;\n    },\n\n    getInvitationListPage() {\n      //已发布列表\n      getInvitationListPage({\n        pageNumber: this.pageNo,\n        pageSize: this.pageSize,\n        userInfoId: localStorage.getItem('userId')\n      }).then(res => {\n        if (res.code == '200') {\n          this.dataList = res.data.rows;\n          this.total = res.data.totalRow;\n          this.$nextTick(() => {\n            this.dataList.forEach(item => {\n              let vHeight = this.$refs[`${item.id}`][0].offsetHeight;\n              if (vHeight > 72) {\n                Vue.set(item, 'isShowMore', true);\n                Vue.set(item, 'isDescStatus', true);\n              } else {\n                Vue.set(item, 'isShowMore', false);\n                Vue.set(item, 'isDescStatus', false);\n              }\n            });\n          });\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    queryDraftInvitation() {\n      queryDraftInvitation({\n        pageNumber: this.pageNo,\n        pageSize: this.pageSize,\n        userInfoId: localStorage.getItem('userId')\n      }).then(res => {\n        if (res.code == '200') {\n          this.dataList = res.data.rows;\n          this.total = res.data.totalRow;\n          this.$nextTick(() => {\n            this.dataList.forEach(item => {\n              let vHeight = this.$refs[`${item.id}`][0].offsetHeight;\n              // console.log(vHeight,888)\n              if (vHeight > 72) {\n                // item.isShowMore = true\n                // item.isDescStatus = true\n                Vue.set(item, 'isShowMore', true);\n                Vue.set(item, 'isDescStatus', true);\n              } else {\n                // item.isShowMore = false\n                // item.isDescStatus = false\n                Vue.set(item, 'isShowMore', false);\n                Vue.set(item, 'isDescStatus', false);\n              }\n            });\n          });\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    changTab(a) {\n      this.currentPage = 1;\n      this.pageNo = 1;\n      this.pageSize = 5;\n      if (a == 'has') {\n        this.onshow = false;\n        this.getInvitationListPage();\n      } else {\n        this.onshow = true;\n        this.queryDraftInvitation();\n      }\n    },\n    handleSizeChange(val) {\n      this.currentPage = 1;\n      this.pageNo = 1;\n      this.pageSize = val;\n      if (!this.onshow) {\n        this.getInvitationListPage();\n      } else {\n        this.queryDraftInvitation();\n      }\n    },\n    handleCurrentChange(val) {\n      this.pageNo = val;\n      this.currentPage = val;\n      if (!this.onshow) {\n        this.getInvitationListPage();\n      } else {\n        this.queryDraftInvitation();\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.$refs.tophead.comInit();\n    if (this.$route.query.type) {\n      this.tabList = 'nohas';\n      this.onshow = true;\n      this.$nextTick(function() {\n        this.queryDraftInvitation();\n      });\n    } else {\n      this.getInvitationListPage();\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--资金 模块 -->\n<template>\n  <div class=\"VIEW-wrap\">\n    <HeadTop ref=\"tophead\"></HeadTop>\n    <el-radio-group v-model=\"tabList\" style=\"margin-bottom: 30px\" @change=\"changTab\">\n      <el-radio-button label=\"has\">已发布</el-radio-button>\n      <el-radio-button label=\"nohas\">待发布</el-radio-button>\n    </el-radio-group>\n    <div v-for=\"(item, index) in dataList\" :key=\"item.id\" :data-index=\"index\" class=\"myspin\">\n      <span v-for=\"pic in item.picObjs\" :key=\"pic.picId\">\n        <img :src=\"pic.url\" />\n      </span>\n    </div>\n    <div class=\"list\">\n      <div>\n        <div class=\"spot\" v-if=\"total > 0\">\n          <el-row class=\"box-card spot-card\" v-for=\"(item, index) in dataList\" :data-index=\"index\" :key=\"item.id\">\n            <el-row>\n              <el-col class=\"card-avatar\" style=\"text-align: right; padding-right: 15px; width: 70px\">\n                <el-avatar class=\"avatar\" :size=\"60\" :src=\"item.userImg\"></el-avatar>\n              </el-col>\n              <el-col :span=\"18\" class=\"card-info\">\n                <div class=\"info-name\">{{ item.userNickName }}</div>\n                <!-- <div class=\"spot-time\">{{item.createdOn | timeCulmulate}}</div> -->\n                <div class=\"spot-time\" v-if=\"item.postTime != '0' && item.postTimeDecribe != 'day'\">\n                  {{ item.postTime }}{{ item.postTimeDecribe }}\n                </div>\n                <div class=\"spot-time\" v-else-if=\"item.postTimeDecribe == 'day'\">\n                  {{ item.postTime }}\n                </div>\n                <div class=\"spot-time\" v-else>{{ item.postTimeDecribe }}</div>\n                <!-- <div class=\"spot-time\" v-if=\"onshow\">{{item.updatedOn}}</div> -->\n                <div class=\"spot-relative\">\n                  <div class=\"spot-content\" :class=\"{ active: item.isShowMore }\" :ref=\"item.id\">\n                    {{ item.content }}\n                  </div>\n                  <span class=\"isShow\" v-if=\"item.isDescStatus\" @click=\"item.isShowMore = !item.isShowMore\">\n                    {{ item.isShowMore ? '全文' : '收起' }}\n                  </span>\n                </div>\n              </el-col>\n              <el-col :span=\"4\" class=\"card-btn spot-btn\" style=\"text-align: right\">\n                <i class=\"el-icon-edit\" v-if=\"onshow\" @click=\"goPublishHand(item)\"></i>\n                <i class=\"el-icon-delete\" @click=\"delInvitation(item.id, onshow)\"></i>\n                <!-- <div class=\"blue\" v-if=\"!onshow\" @click=\"godetail(item.id)\">查看全文 ></div> -->\n              </el-col>\n            </el-row>\n            <ul class=\"imgbox cf\" v-if=\"item.picObjs != null\">\n              <li v-for=\"(pic, index2) in item.picObjs.slice(0, 5)\" :key=\"pic.picId\" @click=\"preview(item, index2)\">\n                <img :src=\"pic.url\" />\n                <!-- <img :src=\"pic.url\" @click=\"onPreview(index,index2)\"/> -->\n              </li>\n            </ul>\n            <!-- <el-image-viewer\n            v-if=\"showViewer\"\n            :on-close=\"closeViewer\"\n            :url-list=\"[bigUrl]\" /> -->\n            <div class=\"article\" v-show=\"item.invitationType == '1'\" @click=\"toArticle(item.id)\">\n              <div class=\"art-img\">\n                <img :src=\"item.articleImg\" alt=\"\" v-if=\"item.articleImg\" />\n                <img src=\"../../assets/images/noimg.png\" alt=\"\" v-else />\n              </div>\n              <div class=\"art-content\">\n                <p v-if=\"item.title\" class=\"art-title\">{{ item.title }}</p>\n                <p v-else class=\"art-title\">来自@{{ item.userNickName }}的看点</p>\n                <!-- <p v-if=\"item.invitationSource\" class=\"art-source\">来源：{{item.invitationSource}}</p> -->\n              </div>\n            </div>\n            <div class=\"work\">\n              <div>{{ item.invitationLabelNames }}</div>\n              <div class=\"right\">\n                <span v-if=\"!onshow\">\n                  <i><img src=\"../../assets/images/view_share.png\"/></i><span>分享 {{ item.sharedTimes }}</span>\n                  <i @click=\"godetail(item.id)\" style=\"cursor: pointer\"><img src=\"../../assets/images/view_conment.png\"/></i\n                  ><span @click=\"godetail(item.id)\" style=\"cursor: pointer\"> 评论 {{ item.commentTimes }} </span>\n                  <i><img src=\"../../assets/images/view_proud.png\"/></i><span>赞 {{ item.numberOfPoints }}</span>\n                </span>\n                <span class=\"authority\">\n                  <label v-if=\"item.limitsOfAuthority == '6009-001'\">公开</label>\n                  <label v-if=\"item.limitsOfAuthority == '6009-002'\">订阅</label>\n                  <label v-if=\"item.limitsOfAuthority == '6009-003'\">私密</label>\n                </span>\n              </div>\n            </div>\n          </el-row>\n          <Pagation\n            :layout=\"layout\"\n            :currentPage=\"currentPage\"\n            :total=\"total\"\n            :myPageSizes=\"pageSize\"\n            @handleSizeChange=\"handleSizeChange\"\n            @handleCurrentChange=\"handleCurrentChange\"\n          />\n        </div>\n        <div v-else class=\"nodata\">暂无数据</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Vue from 'vue';\nimport HeadTop from './head/head';\nimport { getInvitationListPage, delInvitation, removeDraftInvitation, queryDraftInvitation } from './server';\nimport { mapState } from 'vuex';\n// import { timeCulmulate} from \"../../utils/index.js\";\n// import { state} from \"@/store/modules/common.js\";\n// import ElImageViewer from 'element-ui/packages/image/src/image-viewer'\nexport default {\n  //import引入的组件需要注入到对象中才能使用，本人性格开朗，乐观，热情，与同事相处融洽，爱好看书，电影，打羽毛球。其他熟悉软件photoshop,AE,Premior Pro,3Dmax,micro Officec\n  components: {\n    // ElImageViewer,\n    HeadTop\n  },\n  data() {\n    //这里存放数据\n    return {\n      showViewer: false, // 显示查看器\n      bigUrl: '',\n      layout: 'prev, pager, next',\n      onshow: false,\n      tabList: 'has',\n      tabData: ['已发布', '未发布'],\n      activeItem: 'first',\n      //   分页\n      pageNo: 1,\n      currentPage: 1,\n      pageSize: 5,\n      total: 0,\n      dataList: [],\n      srcList: ['https://fuss10.elemecdn.com/8/27/f01c15bb73e1ef3793e64e6b7bbccjpeg.jpeg']\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      loginInfo: obj => {\n        return obj.state.loginInfo;\n      }\n    })\n  },\n  //   filters: {\n  //     timeCulmulate: function (date) {\n\n  //         let nowTimes = new Date().getTime();\n  //         let parTimes = new Date(date).getTime();\n  //\n  //         if(nowTimes-parTimes>=86400000){\n  //             return date\n  //         }else{\n  //             let time = Number(((nowTimes - parTimes)/(1000*60*60)).toFixed(1))+ ''\n  //             time=time.substring(0,time.indexOf(\".\"))\n  //             return (time +'小时前')\n  //         }\n  //     }\n  //   },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    toArticle(a) {\n      //   console.log(this.onshow)\n      if (!this.onshow) {\n        this.$router.push({\n          path: `/app/articleDetail?id=${a}`\n        });\n      } else {\n        return;\n      }\n    },\n    preview(item, index) {\n      let arry = [];\n      for (let i in item.picObjs) {\n        arry.push(item.picObjs[i].url);\n      }\n\n      this.$imagePreview({\n        images: arry,\n        index: index\n      });\n    },\n    goPublishHand(item) {\n      //   let picObjs = item.picObjs\n      //   let arrImg = []\n      //   picObjs.map(item => {\n      //     arrImg.push({\n      //         ...item,\n      //         name:''\n      //     })\n      //   })\n      let pararms = {\n        invitationType: item.invitationType + '',\n        limitsOfAuthority: item.limitsOfAuthority,\n        invitationLabelIds: item.invitationLabelIds,\n        title: item.title,\n        content: item.content,\n        articleImg: item.articleImg || '',\n        articleContent: item.articleContent,\n        //   img: arrImg,\n        picShortObjs: item.picShortObjs,\n        picObjs: item.picObjs,\n        draftId: item.id,\n        draftOperation: 0,\n        invitationSource: item.invitationSource\n      };\n      localStorage.setItem('publish', JSON.stringify(pararms));\n      //\n      this.$router.push({\n        path: '/app/publish',\n        query: {\n          type: 'edit'\n        }\n      });\n    },\n    godetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n    delInvitation(id, onshow) {\n      //删除已发布\n      console.log(id);\n      let aipname, pararms;\n      if (onshow) {\n        //\n        aipname = removeDraftInvitation;\n        pararms = {\n          draftInvitationId: id\n        };\n      } else {\n        aipname = delInvitation;\n        pararms = {\n          invitationId: id\n        };\n      }\n      this.$confirm('确定要删除看点吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          aipname(pararms).then(res => {\n            //\n            if (res.code == '200') {\n              this.$message.success(res.msg);\n              this.pageNo = 1;\n              this.currentPage = 1;\n              if (onshow) {\n                this.queryDraftInvitation();\n              } else {\n                this.getInvitationListPage();\n              }\n              this.$refs.tophead.comInit();\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n    },\n    onPreview(i, j) {\n      this.bigUrl = this.dataList[i].picObjs[j].url;\n      this.showViewer = true;\n    },\n    // 关闭查看器\n    closeViewer() {\n      this.showViewer = false;\n    },\n\n    getInvitationListPage() {\n      //已发布列表\n      getInvitationListPage({\n        pageNumber: this.pageNo,\n        pageSize: this.pageSize,\n        userInfoId: localStorage.getItem('userId')\n      }).then(res => {\n        if (res.code == '200') {\n          this.dataList = res.data.rows;\n          this.total = res.data.totalRow;\n          this.$nextTick(() => {\n            this.dataList.forEach(item => {\n              let vHeight = this.$refs[`${item.id}`][0].offsetHeight;\n              if (vHeight > 72) {\n                Vue.set(item, 'isShowMore', true);\n                Vue.set(item, 'isDescStatus', true);\n              } else {\n                Vue.set(item, 'isShowMore', false);\n                Vue.set(item, 'isDescStatus', false);\n              }\n            });\n          });\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    queryDraftInvitation() {\n      queryDraftInvitation({\n        pageNumber: this.pageNo,\n        pageSize: this.pageSize,\n        userInfoId: localStorage.getItem('userId')\n      }).then(res => {\n        if (res.code == '200') {\n          this.dataList = res.data.rows;\n          this.total = res.data.totalRow;\n          this.$nextTick(() => {\n            this.dataList.forEach(item => {\n              let vHeight = this.$refs[`${item.id}`][0].offsetHeight;\n              // console.log(vHeight,888)\n              if (vHeight > 72) {\n                // item.isShowMore = true\n                // item.isDescStatus = true\n                Vue.set(item, 'isShowMore', true);\n                Vue.set(item, 'isDescStatus', true);\n              } else {\n                // item.isShowMore = false\n                // item.isDescStatus = false\n                Vue.set(item, 'isShowMore', false);\n                Vue.set(item, 'isDescStatus', false);\n              }\n            });\n          });\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    changTab(a) {\n      this.currentPage = 1;\n      this.pageNo = 1;\n      this.pageSize = 5;\n      if (a == 'has') {\n        this.onshow = false;\n        this.getInvitationListPage();\n      } else {\n        this.onshow = true;\n        this.queryDraftInvitation();\n      }\n    },\n    handleSizeChange(val) {\n      this.currentPage = 1;\n      this.pageNo = 1;\n      this.pageSize = val;\n      if (!this.onshow) {\n        this.getInvitationListPage();\n      } else {\n        this.queryDraftInvitation();\n      }\n    },\n    handleCurrentChange(val) {\n      this.pageNo = val;\n      this.currentPage = val;\n      if (!this.onshow) {\n        this.getInvitationListPage();\n      } else {\n        this.queryDraftInvitation();\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.$refs.tophead.comInit();\n    if (this.$route.query.type) {\n      this.tabList = 'nohas';\n      this.onshow = true;\n      this.$nextTick(function() {\n        this.queryDraftInvitation();\n      });\n    } else {\n      this.getInvitationListPage();\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.nodata {\n  margin: 30px 0;\n  text-align: center;\n  color: #666;\n  font-size: 14px;\n}\n\n.imgbox {\n  margin: 20px;\n\n  li {\n    float: left;\n    padding: 0 12px;\n\n    img {\n      width: 170px;\n      height: 110px;\n      cursor: pointer;\n    }\n  }\n}\n\n.article {\n  box-sizing: border-box;\n  padding: 10px 20px;\n  background: #f7f7fa;\n  display: flex;\n\n  .art-img {\n    img {\n      width: 204px;\n      max-height: 150px;\n    }\n  }\n\n  .art-content {\n    flex: 1;\n    margin-left: 20px;\n\n    .art-title {\n      font-size: 18px;\n\n      font-weight: 400;\n      color: rgba(21, 31, 52, 1);\n      line-height: 24px;\n      margin-bottom: 10px;\n    }\n\n    .art-source {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgba(146, 151, 163, 1);\n      line-height: 17px;\n    }\n  }\n}\n\n.el-icon-delete {\n  padding-left: 10px;\n  cursor: pointer;\n}\n\n.work {\n  margin-top: 5px;\n  display: flex;\n  font-size: 13px;\n  color: #999;\n\n  div {\n    flex: 1;\n\n    &.right {\n      text-align: right;\n      color: #444;\n\n      .authority {\n        padding-left: 30px;\n        color: #999;\n      }\n    }\n  }\n\n  span {\n    padding-right: 10px;\n  }\n\n  span,\n  img {\n    vertical-align: middle;\n\n    padding-left: 5px;\n  }\n}\n\n.spot-relative {\n  font-size: 14px;\n  cursor: pointer;\n  position: relative;\n\n  .isShow {\n    position: absolute;\n    bottom: 4px;\n    right: -30px;\n    color: #2f54eb;\n    background: #fff;\n    padding-left: 10px;\n    cursor: pointer;\n  }\n}\n\n.box-card {\n  width: 100%;\n  background: #fff;\n  border-bottom: #e7e7e7 solid 1px;\n  padding: 0 10px 10px;\n  margin: 20px 0;\n\n  .card-avatar {\n    height: 100%;\n\n    .avatar {\n      margin: 14px 0;\n    }\n  }\n\n  .card-info {\n    height: 100%;\n    text-align: left;\n    padding: 20px 0;\n\n    .info-name {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: #151f34;\n      line-height: 24px;\n    }\n\n    .info-num,\n    .spot-time {\n      font-size: 12px;\n\n      font-weight: 400;\n      color: #9297a3;\n      line-height: 22px;\n    }\n\n    .spot-time {\n      line-height: 26px;\n    }\n\n    .group-name {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: #151f34;\n      line-height: 20px;\n    }\n\n    .group-num,\n    .group-member {\n      font-size: 12px;\n\n      font-weight: 400;\n      color: #9297a3;\n      line-height: 18px;\n    }\n\n    .spot-content {\n      margin-top: 10px;\n      color: #151f34;\n      font-size: 14px;\n      line-height: 24px;\n      position: relative;\n      word-break: break-all;\n      word-wrap: break-word;\n    }\n\n    .active {\n      display: -webkit-box;\n      -webkit-box-orient: vertical;\n      -webkit-line-clamp: 3;\n      overflow: hidden;\n    }\n  }\n\n  .card-btn {\n    height: 100%;\n    line-height: 88px;\n  }\n}\n\n.myspin {\n  display: none;\n\n  img {\n    width: 50px;\n    height: 50px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".nodata": {
          "margin": "30px 0",
          "text-align": "center",
          "color": "#666",
          "font-size": "14px"
        },
        ".imgbox": {
          "margin": "20px",
          "li": {
            "float": "left",
            "padding": "0 12px",
            "img": {
              "width": "170px",
              "height": "110px",
              "cursor": "pointer"
            }
          }
        },
        ".article": {
          "box-sizing": "border-box",
          "padding": "10px 20px",
          "background": "#f7f7fa",
          "display": "flex",
          ".art-img": {
            "img": {
              "width": "204px",
              "max-height": "150px"
            }
          },
          ".art-content": {
            "flex": "1",
            "margin-left": "20px",
            ".art-title": {
              "font-size": "18px",
              "font-weight": "400",
              "color": "rgba(21, 31, 52, 1)",
              "line-height": "24px",
              "margin-bottom": "10px"
            },
            ".art-source": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(146, 151, 163, 1)",
              "line-height": "17px"
            }
          }
        },
        ".el-icon-delete": {
          "padding-left": "10px",
          "cursor": "pointer"
        },
        ".work": {
          "margin-top": "5px",
          "display": "flex",
          "font-size": "13px",
          "color": "#999",
          "div": {
            "flex": "1",
            "&.right": {
              "text-align": "right",
              "color": "#444",
              ".authority": {
                "padding-left": "30px",
                "color": "#999"
              }
            }
          },
          "span": {
            "padding-right": "10px"
          },
          "span,  img": {
            "vertical-align": "middle",
            "padding-left": "5px"
          }
        },
        ".spot-relative": {
          "font-size": "14px",
          "cursor": "pointer",
          "position": "relative",
          ".isShow": {
            "position": "absolute",
            "bottom": "4px",
            "right": "-30px",
            "color": "#2f54eb",
            "background": "#fff",
            "padding-left": "10px",
            "cursor": "pointer"
          }
        },
        ".box-card": {
          "width": "100%",
          "background": "#fff",
          "border-bottom": "#e7e7e7 solid 1px",
          "padding": "0 10px 10px",
          "margin": "20px 0",
          ".card-avatar": {
            "height": "100%",
            ".avatar": {
              "margin": "14px 0"
            }
          },
          ".card-info": {
            "height": "100%",
            "text-align": "left",
            "padding": "20px 0",
            ".info-name": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "#151f34",
              "line-height": "24px"
            },
            ".info-num,    .spot-time": {
              "font-size": "12px",
              "font-weight": "400",
              "color": "#9297a3",
              "line-height": "22px"
            },
            ".spot-time": {
              "line-height": "26px"
            },
            ".group-name": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "#151f34",
              "line-height": "20px"
            },
            ".group-num,    .group-member": {
              "font-size": "12px",
              "font-weight": "400",
              "color": "#9297a3",
              "line-height": "18px"
            },
            ".spot-content": {
              "margin-top": "10px",
              "color": "#151f34",
              "font-size": "14px",
              "line-height": "24px",
              "position": "relative",
              "word-break": "break-all",
              "word-wrap": "break-word"
            },
            ".active": {
              "display": "-webkit-box",
              "-webkit-box-orient": "vertical",
              "-webkit-line-clamp": "3",
              "overflow": "hidden"
            }
          },
          ".card-btn": {
            "height": "100%",
            "line-height": "88px"
          }
        },
        ".myspin": {
          "display": "none",
          "img": {
            "width": "50px",
            "height": "50px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/guide/search.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 搜索导览页 -->\n<template>\n  <div class=\"guide-ser\">\n    <div class=\"ser-content\" v-if=\"hasContent\">\n      <!-- 搜索到人 -->\n      <p v-if=\"friendsData && friendsData.length > 0\">好友</p>\n      <el-card class=\"box-card info-card\" v-for=\"(itm, idx) in friendsData\" :key=\"'info' + idx\">\n        <el-row>\n          <el-col :span=\"3\" class=\"card-avatar\">\n            <span @click=\"getuserInfo(itm.friendId)\">\n              <el-avatar class=\"avatar\" :size=\"60\" :src=\"itm.friendHeadImg\"></el-avatar>\n            </span>\n          </el-col>\n          <el-col :span=\"17\" class=\"card-info\">\n            <div class=\"info-name\">{{ itm.friendNickName }}</div>\n            <div class=\"info-num\">个人ID：{{ itm.inviteCode }}</div>\n          </el-col>\n          <el-col :span=\"4\" class=\"card-btn\">\n            <el-button type=\"primary\" v-if=\"itm.isFriend\" @click=\"goChat(itm)\">开始聊天</el-button>\n            <el-button type=\"primary\" v-else @click=\"addFriends(itm.friendId)\">加为好友</el-button>\n          </el-col>\n        </el-row>\n      </el-card>\n      <!-- 搜索到群 -->\n      <p v-if=\"groupsData && groupsData.length > 0\">社区</p>\n      <el-card class=\"box-card\" v-for=\"(item, index) in groupsData\" :key=\"'group' + index\">\n        <el-row>\n          <el-col :span=\"3\" class=\"card-avatar\">\n            <span @click=\"addGroups(item)\">\n              <img class=\"avatar\" :src=\"item.groupAvatar\" v-if=\"item.groupAvatar\" />\n              <img class=\"avatar\" src=\"../../assets/images/group.png\" v-else />\n            </span>\n          </el-col>\n          <el-col :span=\"17\" class=\"card-info\">\n            <div class=\"group-name\">{{ item.groupName }}</div>\n            <div class=\"group-member\">{{ $t('chat_comm_member_0003') }} : 这里应该是社区的人数，目前表里没有这个字段 {{ item.people }}</div>\n            <div class=\"group-num\">社区ID ：{{ item.code }}</div>\n          </el-col>\n          <el-col :span=\"4\" class=\"card-btn\">\n            <b>这里缺少按钮判断字段：是否已经在社区内</b>\n            <el-button type=\"primary\" @click=\"goGroupchat(item)\"> 进入社区</el-button>\n            <el-button type=\"primary\" @click=\"addGroupNow(item)\"> 加入社区</el-button>\n          </el-col>\n        </el-row>\n      </el-card>\n      <!-- 搜索到看法 -->\n      <!-- <div class=\"spot spot-card\" v-if=\"this.seeingData.length != 0\">\n        <el-card class=\"box-card\" v-for=\"(items,ind) in seeingData\" :key=\"ind\">\n          <el-row>\n            <el-col :span=\"3\" class=\"card-avatar\">\n              <el-avatar class=\"avatar\" :size=\"60\" :src=\"items.userImg\"></el-avatar>\n            </el-col>\n            <el-col :span=\"17\" class=\"card-info\">\n              <div class=\"info-name\">{{items.userNickName}}</div>\n              <div class=\"spot-time\">{{items.postTime}}</div>\n              <div class=\"spot-content\">{{items.content}}</div>\n            </el-col>\n            <el-col :span=\"4\" class=\"card-btn spot-btn\">\n              <el-button type=\"primary\" @click=\"pointDetail(items.id)\">{{$t('guide.viewFullText')}}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n        <Pagation\n          @handleSizeChange=\"handleSizeChange\"\n          @handleCurrentChange=\"handleCurrentChange\"\n          :currentPage=\"currentPage\"\n          :myPageSizes=\"pagesize\"\n          layout=\"prev, pager, next\"\n          :total=\"total\"\n        />\n      </div> -->\n    </div>\n    <div class=\"ser-nocontent\" v-else>\n      <div class=\"no-box\">\n        <img src=\"../../assets/images/web.png\" alt=\"error\" />\n        <p>{{ $t('Universal_0174') }}</p>\n      </div>\n    </div>\n    <DialogAddFriendVisible\n      ref=\"myordernum\"\n      :dialogAddFriendsVisible=\"dialogAddFriendsVisible\"\n      @handCancelFriDialog=\"handCancelFriDialog\"\n      @handConfirmFriDialog=\"handConfirmFriDialog\"\n      :friendData=\"friendData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <DialogAddGroupVisible\n      :dialogAddGroupsVisible=\"dialogAddGroupsVisible\"\n      @handConfirmGroupDialog=\"handConfirmGroupDialog\"\n      @handCloseAddGroups=\"handCancelGroupDialog\"\n      :groupData=\"groupData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <PersonInfoDialog\n      :userInfo=\"userChatInfo\"\n      @handDel=\"handDel\"\n      @handSendMes=\"handSendMes\"\n      @handaddFriend=\"addFriends\"\n      @handCloseDialog=\"handCloseDialog\"\n      :dialogPersonInfoVisible=\"dialogPersonInfoVisible\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DialogAddFriendVisible from \"../add-friends-group/dialog/add-friends\";\nimport PersonInfoDialog from \"@/components/chat/PersonInfo\";\nimport DialogAddGroupVisible from \"../add-friends-group/dialog/add-groups\";\nimport { mapState, mapActions, mapMutations } from \"vuex\";\nimport { get_the_info } from \"../add-friends-group/add/server\";\nimport { delete_friends, add_the_group } from \"./server\";\nimport { contFriSize, contGrpSize } from \"@/utils\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport AppealsDialog from \"@/view/chat/appeals\";\nimport ImpeachDialog from \"@/view/chat/impeach\";\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    PersonInfoDialog,\n    DialogAddFriendVisible,\n    DialogAddGroupVisible,\n    AppealsDialog,\n    ImpeachDialog,\n  },\n  data() {\n    //这里存放数据\n    return {\n      dialogAddFriendsVisible: false,\n      dialogAddGroupsVisible: false,\n      AppealsVisible: false,\n      ImpeachVisible: false,\n      impeachFromtype: '',//来源类型\n      isFriend: true,\n      isMember: false,\n      hasContent: true,\n      //   分页\n      currentPage: 1,\n      pagesize: 10,\n      pageNumber: 1,\n      total: 0,\n      seeingData: [],\n      friendsData: [],\n      groupsData: [],\n      friendData: {},\n      groupData: {},\n      userChatInfo: {},\n      dialogPersonInfoVisible: false,\n      keywrod: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      friends: state => state.search.searchFriends,\n      groups: state => state.search.searchGroup,\n      seeings: state => state.search.seeings,\n      keyword: state => state.search.keyword,\n      totalNum: state => state.search.total\n    })\n  },\n  //监控data中的数据变化\n  watch: {\n    seeings: {\n      deep: true,\n      handler() {\n        // 由于是异步载入，所以只能在状态值的变化时执行渲染操作\n        // 绝不可在mounted中执行render方法\n        // this.init(val);\n      }\n    },\n    groups: {\n      deep: true,\n      handler(val) {\n        // 由于是异步载入，所以只能在状态值的变化时执行渲染操作\n        // 绝不可在mounted中执行render方法\n        this.init(val);\n      }\n    },\n    totalNum: {\n      deep: true,\n      handler(val) {\n        // 由于是异步载入，所以只能在状态值的变化时执行渲染操作\n        // 绝不可在mounted中执行render方法\n        this.init(val);\n      }\n    },\n    friends: {\n      deep: true,\n      handler(val) {\n        // 由于是异步载入，所以只能在状态值的变化时执行渲染操作\n        // 绝不可在mounted中执行render方法\n        this.init(val);\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    //将 friendList 中字段下划线转换成驼峰\n    changeFriendName(arr) {\n      return arr.map(a => {\n        a = {\n          friendAreaCityCode: a.friend_areaCountryCode,\n          friendAreaCountryCode: a.friend_areaCountryCode,\n          friendAttrs: a.friend_attrs,\n          friendFriendNotes: a.friend_friendNotes,\n          friendGender: a.friend_gender,\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name,\n          friendPersonalSign: a.friend_personalSign,\n          friendType: a.friend_type,\n          friendUpdatedOn: a.friend_updatedOn,\n          inviteCode: a.invite_code,\n          isShow: a.is_show,\n          level: a.level,\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank\n        };\n        return a;\n      });\n    },\n    //将 groupList 中字段下划线转换成驼峰\n    changeGroupName(arr) {\n      return arr.map(a => {\n        a = {\n          groupId: a.group_id,\n          groupName: a.group_name,\n          groupNamePinyin: a.group_name_pinyin,\n          groupStatus: a.group_status,\n          groupProfile: a.group_profile,\n\n          groupAvatar: a.group_avatar,\n          groupAvatarLocal: a.group_avatar_local,\n          addCheck: a.add_check,\n          inviteAuth: a.invite_auth,\n          country: a.country,\n\n          city: a.city,\n          screenshotsReminderStatus: a.screenshotsReminderStatus,\n          forbiddenWordsStatus: a.forbiddenWordsStatus,\n          memberSingleChatStatus: a.memberSingleChatStatus,\n          sendPicturesStatus: a.sendPicturesStatus,\n          sendConnectionStatus: a.sendConnectionStatus,\n          sendRedpacketStatus: a.sendRedpacketStatus,\n          copyMessagesStauts: a.copyMessagesStauts,\n          createTime: a.create_time,\n          saveTime: a.save_time,\n          people: a.people,\n          memberLevelStatus: a.member_level_status,\n          groupLevel: a.group_level,\n          updatedOn: a.updatedOn,\n          code: a.code\n        };\n        return a;\n      });\n    },\n\n    ...mapMutations([CLEAR_CHAT]),\n    ...mapActions(['GET_SEARCH_SEEING', 'GET_SEARCH_GROUP', 'GET_SEARCH_FRIENDS']),\n    handleSizeChange(val) {\n      this.currentPage = 1;\n      this.pageNumber = 1;\n      this.pageSize = val;\n      // 加参数\n      this.GET_SEARCH_SEEING({\n        pageSize: this.pageSize,\n        pageNumber: this.pageNumber,\n        keyword: this.$store.state.search.keyword\n      });\n    },\n    handleCurrentChange(val) {\n      this.pageNumber = val;\n      this.currentPage = val;\n      //\n      this.GET_SEARCH_SEEING({\n        pageSize: this.pageSize,\n        pageNumber: this.pageNumber,\n        keyword: this.$store.state.search.keyword\n      });\n    },\n    goChat(a) {\n      let current = {\n        uniqueCode: contFriSize(a.id, localStorage.userId)\n      };\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.CLEAR_CHAT();\n      this.$router.push({\n        path: '/app/chat/single/message',\n        query: {\n          fromId: a.id,\n          targetId: localStorage.getItem('userId'),\n          timer: new Date().getTime(),\n          uniqueCode: contFriSize(a.id, localStorage.userId),\n          friendName: encodeURI(a.userNickName)\n        }\n      });\n    },\n    goGroupchat(a) {\n      this.CLEAR_CHAT();\n      let current = {\n        uniqueCode: contGrpSize(a.groupId)\n      };\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          targetId: a.groupId,\n          timer: new Date().getTime(),\n          friendName: encodeURI(a.groupName),\n          uniqueCode: contGrpSize(a.groupId)\n        }\n      });\n    },\n    addGroupNow(a) {\n      let userid = localStorage.getItem('userId');\n      let param = {\n        userId: userid,\n        groupId: a.groupId\n      };\n      this.goGroup(param, a);\n    },\n    async goGroup(param, a) {\n      let res = await add_the_group(param);\n      if (res.code == 200) {\n        this.$message.success(res.msg);\n        this.text = '';\n        let current = {\n          uniqueCode: contGrpSize(a.id)\n        };\n        this.CLEAR_CHAT();\n        this.$store.dispatch('SET_CURRENT_CHAT', current);\n        this.$router.push({\n          path: '/app/chat/group/message',\n          query: {\n            targetId: a.id,\n            timer: new Date().getTime(),\n            friendName: encodeURI(a.groupName),\n            uniqueCode: contGrpSize(a.id)\n          }\n        });\n      } else {\n        this.$message.error(res.msg);\n        return;\n      }\n    },\n    async getuserInfo(a) {\n      this.dialogPersonInfoVisible = true;\n      let res = await get_the_info({ id: a });\n      if (res.code == 200) {\n        this.userChatInfo = res.data || {};\n      }\n    },\n    async handDel(userInfo) {\n      // 删除好友\n      this.$confirm(`确定删除好友吗？`, '提示', {\n        confirmButtonText: '删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          this.handDelteFriend(userInfo);\n        })\n        .catch(() => {\n          // this.$message({\n          //   type: 'info',\n          //   message: '已取消删除'\n          // });\n        });\n    },\n    async handDelteFriend(userInfo) {\n      // 删除好友\n      let pararms = {\n        friendId: userInfo.id,\n        userId: localStorage.userId\n      };\n      let res = await delete_friends(pararms);\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: res.msg\n        });\n        this.dialogPersonInfoVisible = false;\n        this.GET_SEARCH_GROUP({\n          param: this.$store.state.search.keyword\n        });\n        this.GET_SEARCH_FRIENDS({\n          code: this.$store.state.search.keyword\n        });\n      } else {\n        this.$message({\n          type: 'info',\n          message: res.msg\n        });\n      }\n    },\n    handCloseDialog() {\n      this.dialogPersonInfoVisible = false;\n    },\n    handSendMes(a) {\n      // 发送消息\n      let current = {\n        uniqueCode: contFriSize(a.id, localStorage.userId)\n      };\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.CLEAR_CHAT();\n      this.$router.push({\n        path: '/app/chat/single/message',\n        query: {\n          fromId: a.id,\n          targetId: localStorage.getItem('userId'),\n          timer: new Date().getTime(),\n          uniqueCode: contFriSize(a.id, localStorage.userId),\n          friendName: encodeURI(a.userNickName)\n        }\n      });\n    },\n    async getFrInfo(a) {\n      let res = await get_the_info({ id: a });\n      if (res.code == 200) {\n        this.friendData = res.data;\n        this.$refs.myordernum.setkeynull();\n      }\n    },\n    addFriends(a) {\n      this.getFrInfo(a);\n      this.dialogAddFriendsVisible = true;\n    },\n    handCancelFriDialog(param) {\n      this.dialogAddFriendsVisible = param;\n    },\n    handConfirmFriDialog(param) {\n      this.dialogAddFriendsVisible = param;\n    },\n    addGroups(param) {\n      this.groupData = param;\n      //\n      this.dialogAddGroupsVisible = true;\n    },\n    handCancelGroupDialog(param) {\n      this.dialogAddGroupsVisible = param;\n    },\n    handConfirmGroupDialog(param) {\n      this.dialogAddGroupsVisible = param;\n    },\n    cancelAppealsDialogHand(param) {\n      this.AppealsVisible = param;\n    },\n    cancelImpeachDialogHand(param) {\n      this.ImpeachVisible = param;\n    },\n    //去申诉\n    toAppeal(impeachFromtype) {\n      this.impeachFromtype = impeachFromtype;\n      this.AppealsVisible = true;\n      this.$refs.appeal.init();\n    },\n    toImpeachDialog(){\n      this.AppealsVisible = false;\n      this.ImpeachVisible = true;\n      this.$refs.impeach.init()\n    },\n    pointDetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n    toGroup() {},\n    toFriend() {},\n    init() {\n      this.total = this.totalNum;\n      this.seeingData = this.seeings;\n      this.groupsData = this.changeGroupName(this.groups);\n      this.friendsData = this.changeFriendName(this.friends);\n      //\n      if ((this.groupsData.length || this.friendsData.length) != 0) {\n        this.hasContent = true;\n      } else {\n        this.hasContent = false;\n      }\n      //\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 搜索导览页 -->\n<template>\n  <div class=\"guide-ser\">\n    <div class=\"ser-content\" v-if=\"hasContent\">\n      <!-- 搜索到人 -->\n      <p v-if=\"friendsData && friendsData.length > 0\">好友</p>\n      <el-card class=\"box-card info-card\" v-for=\"(itm, idx) in friendsData\" :key=\"'info' + idx\">\n        <el-row>\n          <el-col :span=\"3\" class=\"card-avatar\">\n            <span @click=\"getuserInfo(itm.friendId)\">\n              <el-avatar class=\"avatar\" :size=\"60\" :src=\"itm.friendHeadImg\"></el-avatar>\n            </span>\n          </el-col>\n          <el-col :span=\"17\" class=\"card-info\">\n            <div class=\"info-name\">{{ itm.friendNickName }}</div>\n            <div class=\"info-num\">个人ID：{{ itm.inviteCode }}</div>\n          </el-col>\n          <el-col :span=\"4\" class=\"card-btn\">\n            <el-button type=\"primary\" v-if=\"itm.isFriend\" @click=\"goChat(itm)\">开始聊天</el-button>\n            <el-button type=\"primary\" v-else @click=\"addFriends(itm.friendId)\">加为好友</el-button>\n          </el-col>\n        </el-row>\n      </el-card>\n      <!-- 搜索到群 -->\n      <p v-if=\"groupsData && groupsData.length > 0\">社区</p>\n      <el-card class=\"box-card\" v-for=\"(item, index) in groupsData\" :key=\"'group' + index\">\n        <el-row>\n          <el-col :span=\"3\" class=\"card-avatar\">\n            <span @click=\"addGroups(item)\">\n              <img class=\"avatar\" :src=\"item.groupAvatar\" v-if=\"item.groupAvatar\" />\n              <img class=\"avatar\" src=\"../../assets/images/group.png\" v-else />\n            </span>\n          </el-col>\n          <el-col :span=\"17\" class=\"card-info\">\n            <div class=\"group-name\">{{ item.groupName }}</div>\n            <div class=\"group-member\">{{ $t('chat_comm_member_0003') }} : 这里应该是社区的人数，目前表里没有这个字段 {{ item.people }}</div>\n            <div class=\"group-num\">社区ID ：{{ item.code }}</div>\n          </el-col>\n          <el-col :span=\"4\" class=\"card-btn\">\n            <b>这里缺少按钮判断字段：是否已经在社区内</b>\n            <el-button type=\"primary\" @click=\"goGroupchat(item)\"> 进入社区</el-button>\n            <el-button type=\"primary\" @click=\"addGroupNow(item)\"> 加入社区</el-button>\n          </el-col>\n        </el-row>\n      </el-card>\n      <!-- 搜索到看法 -->\n      <!-- <div class=\"spot spot-card\" v-if=\"this.seeingData.length != 0\">\n        <el-card class=\"box-card\" v-for=\"(items,ind) in seeingData\" :key=\"ind\">\n          <el-row>\n            <el-col :span=\"3\" class=\"card-avatar\">\n              <el-avatar class=\"avatar\" :size=\"60\" :src=\"items.userImg\"></el-avatar>\n            </el-col>\n            <el-col :span=\"17\" class=\"card-info\">\n              <div class=\"info-name\">{{items.userNickName}}</div>\n              <div class=\"spot-time\">{{items.postTime}}</div>\n              <div class=\"spot-content\">{{items.content}}</div>\n            </el-col>\n            <el-col :span=\"4\" class=\"card-btn spot-btn\">\n              <el-button type=\"primary\" @click=\"pointDetail(items.id)\">{{$t('guide.viewFullText')}}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n        <Pagation\n          @handleSizeChange=\"handleSizeChange\"\n          @handleCurrentChange=\"handleCurrentChange\"\n          :currentPage=\"currentPage\"\n          :myPageSizes=\"pagesize\"\n          layout=\"prev, pager, next\"\n          :total=\"total\"\n        />\n      </div> -->\n    </div>\n    <div class=\"ser-nocontent\" v-else>\n      <div class=\"no-box\">\n        <img src=\"../../assets/images/web.png\" alt=\"error\" />\n        <p>{{ $t('Universal_0174') }}</p>\n      </div>\n    </div>\n    <DialogAddFriendVisible\n      ref=\"myordernum\"\n      :dialogAddFriendsVisible=\"dialogAddFriendsVisible\"\n      @handCancelFriDialog=\"handCancelFriDialog\"\n      @handConfirmFriDialog=\"handConfirmFriDialog\"\n      :friendData=\"friendData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <DialogAddGroupVisible\n      :dialogAddGroupsVisible=\"dialogAddGroupsVisible\"\n      @handConfirmGroupDialog=\"handConfirmGroupDialog\"\n      @handCloseAddGroups=\"handCancelGroupDialog\"\n      :groupData=\"groupData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <PersonInfoDialog\n      :userInfo=\"userChatInfo\"\n      @handDel=\"handDel\"\n      @handSendMes=\"handSendMes\"\n      @handaddFriend=\"addFriends\"\n      @handCloseDialog=\"handCloseDialog\"\n      :dialogPersonInfoVisible=\"dialogPersonInfoVisible\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DialogAddFriendVisible from \"../add-friends-group/dialog/add-friends\";\nimport PersonInfoDialog from \"@/components/chat/PersonInfo\";\nimport DialogAddGroupVisible from \"../add-friends-group/dialog/add-groups\";\nimport { mapState, mapActions, mapMutations } from \"vuex\";\nimport { get_the_info } from \"../add-friends-group/add/server\";\nimport { delete_friends, add_the_group } from \"./server\";\nimport { contFriSize, contGrpSize } from \"@/utils\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport AppealsDialog from \"@/view/chat/appeals\";\nimport ImpeachDialog from \"@/view/chat/impeach\";\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    PersonInfoDialog,\n    DialogAddFriendVisible,\n    DialogAddGroupVisible,\n    AppealsDialog,\n    ImpeachDialog,\n  },\n  data() {\n    //这里存放数据\n    return {\n      dialogAddFriendsVisible: false,\n      dialogAddGroupsVisible: false,\n      AppealsVisible: false,\n      ImpeachVisible: false,\n      impeachFromtype: '',//来源类型\n      isFriend: true,\n      isMember: false,\n      hasContent: true,\n      //   分页\n      currentPage: 1,\n      pagesize: 10,\n      pageNumber: 1,\n      total: 0,\n      seeingData: [],\n      friendsData: [],\n      groupsData: [],\n      friendData: {},\n      groupData: {},\n      userChatInfo: {},\n      dialogPersonInfoVisible: false,\n      keywrod: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      friends: state => state.search.searchFriends,\n      groups: state => state.search.searchGroup,\n      seeings: state => state.search.seeings,\n      keyword: state => state.search.keyword,\n      totalNum: state => state.search.total\n    })\n  },\n  //监控data中的数据变化\n  watch: {\n    seeings: {\n      deep: true,\n      handler() {\n        // 由于是异步载入，所以只能在状态值的变化时执行渲染操作\n        // 绝不可在mounted中执行render方法\n        // this.init(val);\n      }\n    },\n    groups: {\n      deep: true,\n      handler(val) {\n        // 由于是异步载入，所以只能在状态值的变化时执行渲染操作\n        // 绝不可在mounted中执行render方法\n        this.init(val);\n      }\n    },\n    totalNum: {\n      deep: true,\n      handler(val) {\n        // 由于是异步载入，所以只能在状态值的变化时执行渲染操作\n        // 绝不可在mounted中执行render方法\n        this.init(val);\n      }\n    },\n    friends: {\n      deep: true,\n      handler(val) {\n        // 由于是异步载入，所以只能在状态值的变化时执行渲染操作\n        // 绝不可在mounted中执行render方法\n        this.init(val);\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    //将 friendList 中字段下划线转换成驼峰\n    changeFriendName(arr) {\n      return arr.map(a => {\n        a = {\n          friendAreaCityCode: a.friend_areaCountryCode,\n          friendAreaCountryCode: a.friend_areaCountryCode,\n          friendAttrs: a.friend_attrs,\n          friendFriendNotes: a.friend_friendNotes,\n          friendGender: a.friend_gender,\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name,\n          friendPersonalSign: a.friend_personalSign,\n          friendType: a.friend_type,\n          friendUpdatedOn: a.friend_updatedOn,\n          inviteCode: a.invite_code,\n          isShow: a.is_show,\n          level: a.level,\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank\n        };\n        return a;\n      });\n    },\n    //将 groupList 中字段下划线转换成驼峰\n    changeGroupName(arr) {\n      return arr.map(a => {\n        a = {\n          groupId: a.group_id,\n          groupName: a.group_name,\n          groupNamePinyin: a.group_name_pinyin,\n          groupStatus: a.group_status,\n          groupProfile: a.group_profile,\n\n          groupAvatar: a.group_avatar,\n          groupAvatarLocal: a.group_avatar_local,\n          addCheck: a.add_check,\n          inviteAuth: a.invite_auth,\n          country: a.country,\n\n          city: a.city,\n          screenshotsReminderStatus: a.screenshotsReminderStatus,\n          forbiddenWordsStatus: a.forbiddenWordsStatus,\n          memberSingleChatStatus: a.memberSingleChatStatus,\n          sendPicturesStatus: a.sendPicturesStatus,\n          sendConnectionStatus: a.sendConnectionStatus,\n          sendRedpacketStatus: a.sendRedpacketStatus,\n          copyMessagesStauts: a.copyMessagesStauts,\n          createTime: a.create_time,\n          saveTime: a.save_time,\n          people: a.people,\n          memberLevelStatus: a.member_level_status,\n          groupLevel: a.group_level,\n          updatedOn: a.updatedOn,\n          code: a.code\n        };\n        return a;\n      });\n    },\n\n    ...mapMutations([CLEAR_CHAT]),\n    ...mapActions(['GET_SEARCH_SEEING', 'GET_SEARCH_GROUP', 'GET_SEARCH_FRIENDS']),\n    handleSizeChange(val) {\n      this.currentPage = 1;\n      this.pageNumber = 1;\n      this.pageSize = val;\n      // 加参数\n      this.GET_SEARCH_SEEING({\n        pageSize: this.pageSize,\n        pageNumber: this.pageNumber,\n        keyword: this.$store.state.search.keyword\n      });\n    },\n    handleCurrentChange(val) {\n      this.pageNumber = val;\n      this.currentPage = val;\n      //\n      this.GET_SEARCH_SEEING({\n        pageSize: this.pageSize,\n        pageNumber: this.pageNumber,\n        keyword: this.$store.state.search.keyword\n      });\n    },\n    goChat(a) {\n      let current = {\n        uniqueCode: contFriSize(a.id, localStorage.userId)\n      };\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.CLEAR_CHAT();\n      this.$router.push({\n        path: '/app/chat/single/message',\n        query: {\n          fromId: a.id,\n          targetId: localStorage.getItem('userId'),\n          timer: new Date().getTime(),\n          uniqueCode: contFriSize(a.id, localStorage.userId),\n          friendName: encodeURI(a.userNickName)\n        }\n      });\n    },\n    goGroupchat(a) {\n      this.CLEAR_CHAT();\n      let current = {\n        uniqueCode: contGrpSize(a.groupId)\n      };\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          targetId: a.groupId,\n          timer: new Date().getTime(),\n          friendName: encodeURI(a.groupName),\n          uniqueCode: contGrpSize(a.groupId)\n        }\n      });\n    },\n    addGroupNow(a) {\n      let userid = localStorage.getItem('userId');\n      let param = {\n        userId: userid,\n        groupId: a.groupId\n      };\n      this.goGroup(param, a);\n    },\n    async goGroup(param, a) {\n      let res = await add_the_group(param);\n      if (res.code == 200) {\n        this.$message.success(res.msg);\n        this.text = '';\n        let current = {\n          uniqueCode: contGrpSize(a.id)\n        };\n        this.CLEAR_CHAT();\n        this.$store.dispatch('SET_CURRENT_CHAT', current);\n        this.$router.push({\n          path: '/app/chat/group/message',\n          query: {\n            targetId: a.id,\n            timer: new Date().getTime(),\n            friendName: encodeURI(a.groupName),\n            uniqueCode: contGrpSize(a.id)\n          }\n        });\n      } else {\n        this.$message.error(res.msg);\n        return;\n      }\n    },\n    async getuserInfo(a) {\n      this.dialogPersonInfoVisible = true;\n      let res = await get_the_info({ id: a });\n      if (res.code == 200) {\n        this.userChatInfo = res.data || {};\n      }\n    },\n    async handDel(userInfo) {\n      // 删除好友\n      this.$confirm(`确定删除好友吗？`, '提示', {\n        confirmButtonText: '删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          this.handDelteFriend(userInfo);\n        })\n        .catch(() => {\n          // this.$message({\n          //   type: 'info',\n          //   message: '已取消删除'\n          // });\n        });\n    },\n    async handDelteFriend(userInfo) {\n      // 删除好友\n      let pararms = {\n        friendId: userInfo.id,\n        userId: localStorage.userId\n      };\n      let res = await delete_friends(pararms);\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: res.msg\n        });\n        this.dialogPersonInfoVisible = false;\n        this.GET_SEARCH_GROUP({\n          param: this.$store.state.search.keyword\n        });\n        this.GET_SEARCH_FRIENDS({\n          code: this.$store.state.search.keyword\n        });\n      } else {\n        this.$message({\n          type: 'info',\n          message: res.msg\n        });\n      }\n    },\n    handCloseDialog() {\n      this.dialogPersonInfoVisible = false;\n    },\n    handSendMes(a) {\n      // 发送消息\n      let current = {\n        uniqueCode: contFriSize(a.id, localStorage.userId)\n      };\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.CLEAR_CHAT();\n      this.$router.push({\n        path: '/app/chat/single/message',\n        query: {\n          fromId: a.id,\n          targetId: localStorage.getItem('userId'),\n          timer: new Date().getTime(),\n          uniqueCode: contFriSize(a.id, localStorage.userId),\n          friendName: encodeURI(a.userNickName)\n        }\n      });\n    },\n    async getFrInfo(a) {\n      let res = await get_the_info({ id: a });\n      if (res.code == 200) {\n        this.friendData = res.data;\n        this.$refs.myordernum.setkeynull();\n      }\n    },\n    addFriends(a) {\n      this.getFrInfo(a);\n      this.dialogAddFriendsVisible = true;\n    },\n    handCancelFriDialog(param) {\n      this.dialogAddFriendsVisible = param;\n    },\n    handConfirmFriDialog(param) {\n      this.dialogAddFriendsVisible = param;\n    },\n    addGroups(param) {\n      this.groupData = param;\n      //\n      this.dialogAddGroupsVisible = true;\n    },\n    handCancelGroupDialog(param) {\n      this.dialogAddGroupsVisible = param;\n    },\n    handConfirmGroupDialog(param) {\n      this.dialogAddGroupsVisible = param;\n    },\n    cancelAppealsDialogHand(param) {\n      this.AppealsVisible = param;\n    },\n    cancelImpeachDialogHand(param) {\n      this.ImpeachVisible = param;\n    },\n    //去申诉\n    toAppeal(impeachFromtype) {\n      this.impeachFromtype = impeachFromtype;\n      this.AppealsVisible = true;\n      this.$refs.appeal.init();\n    },\n    toImpeachDialog(){\n      this.AppealsVisible = false;\n      this.ImpeachVisible = true;\n      this.$refs.impeach.init()\n    },\n    pointDetail(a) {\n      this.$router.push({ path: '/app/viewdetail', query: { id: a } });\n    },\n    toGroup() {},\n    toFriend() {},\n    init() {\n      this.total = this.totalNum;\n      this.seeingData = this.seeings;\n      this.groupsData = this.changeGroupName(this.groups);\n      this.friendsData = this.changeFriendName(this.friends);\n      //\n      if ((this.groupsData.length || this.friendsData.length) != 0) {\n        this.hasContent = true;\n      } else {\n        this.hasContent = false;\n      }\n      //\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.guide-ser {\n  padding: 2px 0px;\n  height: 100vh;\n  background: #fff;\n  overflow: auto;\n  text-align: center;\n\n  .ser-content {\n    .box-card {\n      width: 100%;\n      background: rgba(236, 236, 240, 1);\n      margin: 30px 0;\n\n      .card-avatar {\n        height: 100%;\n\n        .avatar {\n          margin: 14px 0;\n          width: 60px;\n          height: 60px;\n          border-radius: 50%;\n        }\n      }\n\n      .card-info {\n        height: 100%;\n        text-align: left;\n        padding: 20px 0;\n        cursor: default;\n\n        .info-name {\n          font-size: 14px;\n\n          font-weight: 400;\n          color: #151f34;\n          line-height: 24px;\n        }\n\n        .info-num,\n        .spot-time {\n          font-size: 12px;\n\n          font-weight: 400;\n          color: #9297a3;\n          line-height: 22px;\n        }\n\n        .spot-time {\n          line-height: 26px;\n        }\n\n        .group-name {\n          font-size: 14px;\n\n          font-weight: 400;\n          color: #151f34;\n          line-height: 20px;\n        }\n\n        .group-num,\n        .group-member {\n          font-size: 12px;\n\n          font-weight: 400;\n          color: #9297a3;\n          line-height: 18px;\n        }\n\n        .spot-content {\n          margin-top: 10px;\n          color: #151f34;\n          font-size: 14px;\n          line-height: 24px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          display: -webkit-box;\n          -webkit-line-clamp: 3;\n          -webkit-box-orient: vertical;\n        }\n      }\n\n      .card-btn {\n        height: 100%;\n        line-height: 88px;\n      }\n\n      .spot-btn {\n        line-height: 200px;\n      }\n    }\n\n    .info-card {\n      height: 88px;\n    }\n  }\n\n  .ser-nocontent {\n    text-align: center;\n\n    .no-box {\n      margin-top: 100px;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".guide-ser": {
          "padding": "2px 0px",
          "height": "100vh",
          "background": "#fff",
          "overflow": "auto",
          "text-align": "center",
          ".ser-content": {
            ".box-card": {
              "width": "100%",
              "background": "rgba(236, 236, 240, 1)",
              "margin": "30px 0",
              ".card-avatar": {
                "height": "100%",
                ".avatar": {
                  "margin": "14px 0",
                  "width": "60px",
                  "height": "60px",
                  "border-radius": "50%"
                }
              },
              ".card-info": {
                "height": "100%",
                "text-align": "left",
                "padding": "20px 0",
                "cursor": "default",
                ".info-name": {
                  "font-size": "14px",
                  "font-weight": "400",
                  "color": "#151f34",
                  "line-height": "24px"
                },
                ".info-num,        .spot-time": {
                  "font-size": "12px",
                  "font-weight": "400",
                  "color": "#9297a3",
                  "line-height": "22px"
                },
                ".spot-time": {
                  "line-height": "26px"
                },
                ".group-name": {
                  "font-size": "14px",
                  "font-weight": "400",
                  "color": "#151f34",
                  "line-height": "20px"
                },
                ".group-num,        .group-member": {
                  "font-size": "12px",
                  "font-weight": "400",
                  "color": "#9297a3",
                  "line-height": "18px"
                },
                ".spot-content": {
                  "margin-top": "10px",
                  "color": "#151f34",
                  "font-size": "14px",
                  "line-height": "24px",
                  "overflow": "hidden",
                  "text-overflow": "ellipsis",
                  "display": "-webkit-box",
                  "-webkit-line-clamp": "3",
                  "-webkit-box-orient": "vertical"
                }
              },
              ".card-btn": {
                "height": "100%",
                "line-height": "88px"
              },
              ".spot-btn": {
                "line-height": "200px"
              }
            },
            ".info-card": {
              "height": "88px"
            }
          },
          ".ser-nocontent": {
            "text-align": "center",
            ".no-box": {
              "margin-top": "100px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/Set.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 通用设置 -->\n<template>\n  <div class=\"general-setting-wrap\">\n    <el-menu class=\"el-menu-vertical-user w160\">\n      <el-menu-item\n        :class=\"comName === item.path ? 'active-item' : ''\"\n        v-for=\"item in menuList\"\n        :key=\"item.path\"\n        @click=\"Tocomponent(item.path)\"\n      >\n        <span>{{ item.name }}</span>\n        <el-badge is-dot v-if=\"idDotShow(item)\"></el-badge>\n      </el-menu-item>\n    </el-menu>\n    <div class=\"set-content\">\n      <component\n        :is=\"comName\"\n        :latestVersion=\"latestVersion\"\n        :obj=\"updateObj\"\n      ></component>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport About from \"./setMenu/about\";\nimport General from \"./setMenu/general\";\nimport User from \"./setMenu/user\";\nimport { mapState } from \"vuex\";\nimport { check_update_by_server } from \"@/server\";\nconst appVersionCode = require(\"../../../package.json\").version_code;\nconst appVersion = require(\"../../../package.json\").version;\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { User, General, About },\n  data() {\n    //这里存放数据\n    return {\n      comName: \"User\",\n      isNewVersion: true,\n      updateObj: {},\n      latestVersion: \"\",\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      versionUpdateInfo: (obj) => {\n        return obj.state.versionUpdateInfo;\n      },\n    }),\n    menuList() {\n      return [\n        {\n          name: this.$t(\"personal_0053\"),\n          path: \"User\",\n        },\n        {\n          name: this.$t(\"personal_0054\"),\n          path: \"General\",\n        },\n        {\n          name: this.$t(\"personal_0046\"),\n          // name: 'Информация о DiDi',\n          path: \"About\",\n        },\n      ];\n    },\n  },\n\n  //监控data中的数据变化\n  watch: {\n    versionUpdateInfo: {\n      immediate: true,\n      deep: true,\n      handler: function (v) {\n        if (!v) {\n          // 版本一样\n          this.latestVersion = appVersion;\n        }\n        if (!v.updateInfo) {\n          // 没有数据\n          this.getUpdateVersion();\n        }\n      },\n    },\n  },\n  //方法集合\n  methods: {\n    // 请示版本接口\n    async getUpdateVersion() {\n      const updateInfo = await check_update_by_server({\n        currentVersion: appVersionCode,\n      });\n      if (updateInfo.data) {\n        this.latestVersion = updateInfo.data.versionCode;\n        this.updateObj = updateInfo.data;\n      }\n    },\n    toUser() {\n      this.comName = \"User\";\n    },\n    Tocomponent(name) {\n      this.comName = name;\n    },\n    idDotShow(item) {\n      // eslint-disable-next-line max-len\n      return (\n        item.name === this.$t(\"personal_0046\") &&\n        ((this.versionUpdateInfo.versionSign !== undefined &&\n          this.versionUpdateInfo.versionSign !== false) ||\n          (this.latestVersion && this.latestVersion !== appVersion))\n      );\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    // this.getUpdateVersion();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 通用设置 -->\n<template>\n  <div class=\"general-setting-wrap\">\n    <el-menu class=\"el-menu-vertical-user w160\">\n      <el-menu-item\n        :class=\"comName === item.path ? 'active-item' : ''\"\n        v-for=\"item in menuList\"\n        :key=\"item.path\"\n        @click=\"Tocomponent(item.path)\"\n      >\n        <span>{{ item.name }}</span>\n        <el-badge is-dot v-if=\"idDotShow(item)\"></el-badge>\n      </el-menu-item>\n    </el-menu>\n    <div class=\"set-content\">\n      <component\n        :is=\"comName\"\n        :latestVersion=\"latestVersion\"\n        :obj=\"updateObj\"\n      ></component>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport About from \"./setMenu/about\";\nimport General from \"./setMenu/general\";\nimport User from \"./setMenu/user\";\nimport { mapState } from \"vuex\";\nimport { check_update_by_server } from \"@/server\";\nconst appVersionCode = require(\"../../../package.json\").version_code;\nconst appVersion = require(\"../../../package.json\").version;\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { User, General, About },\n  data() {\n    //这里存放数据\n    return {\n      comName: \"User\",\n      isNewVersion: true,\n      updateObj: {},\n      latestVersion: \"\",\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      versionUpdateInfo: (obj) => {\n        return obj.state.versionUpdateInfo;\n      },\n    }),\n    menuList() {\n      return [\n        {\n          name: this.$t(\"personal_0053\"),\n          path: \"User\",\n        },\n        {\n          name: this.$t(\"personal_0054\"),\n          path: \"General\",\n        },\n        {\n          name: this.$t(\"personal_0046\"),\n          // name: 'Информация о DiDi',\n          path: \"About\",\n        },\n      ];\n    },\n  },\n\n  //监控data中的数据变化\n  watch: {\n    versionUpdateInfo: {\n      immediate: true,\n      deep: true,\n      handler: function (v) {\n        if (!v) {\n          // 版本一样\n          this.latestVersion = appVersion;\n        }\n        if (!v.updateInfo) {\n          // 没有数据\n          this.getUpdateVersion();\n        }\n      },\n    },\n  },\n  //方法集合\n  methods: {\n    // 请示版本接口\n    async getUpdateVersion() {\n      const updateInfo = await check_update_by_server({\n        currentVersion: appVersionCode,\n      });\n      if (updateInfo.data) {\n        this.latestVersion = updateInfo.data.versionCode;\n        this.updateObj = updateInfo.data;\n      }\n    },\n    toUser() {\n      this.comName = \"User\";\n    },\n    Tocomponent(name) {\n      this.comName = name;\n    },\n    idDotShow(item) {\n      // eslint-disable-next-line max-len\n      return (\n        item.name === this.$t(\"personal_0046\") &&\n        ((this.versionUpdateInfo.versionSign !== undefined &&\n          this.versionUpdateInfo.versionSign !== false) ||\n          (this.latestVersion && this.latestVersion !== appVersion))\n      );\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    // this.getUpdateVersion();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.general-setting-wrap .upload-avatar-wrap .el-upload-list {\n  display: none;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.el-menu-vertical-user {\n  min-height: 316px;\n  .el-badge {\n    vertical-align: baseline;\n    margin-left: 4px;\n    /deep/ .el-badge__content {\n      background-color: #ff0000;\n    }\n  }\n  /deep/ .el-menu-item {\n    padding: 0 10px !important;\n    display: flex;\n    align-items: center;\n  }\n\n  li {\n    &.active-item {\n      background-color: #ecf5ff;\n    }\n  }\n}\n\n.w160 {\n  //width: 100px;\n  //float: left;\n  border-right: #e7e7e7 solid 1px;\n\n  /deep/ .is-dot {\n    width: 7px;\n    height: 7px;\n  }\n}\n.set-content {\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  //float: right;\n  //width: 448px;\n}\n.general-setting-wrap {\n  //position: relative;\n  //overflow: hidden;\n  display: flex;\n  flex-direction: row;\n  .box-bg {\n    width: 420px;\n    height: 40px;\n    background: rgba(247, 247, 250, 1);\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    border-radius: 4px;\n    box-sizing: border-box;\n    padding: 0 15px;\n  }\n  .account-wrapper {\n    display: flex;\n    justify-content: space-between;\n    button {\n      font-weight: normal;\n    }\n  }\n  .upload-avatar-wrap {\n    position: absolute;\n    right: calc((100% - 550px - 48px) / 2 / 2);\n    top: 0;\n    .upload-text {\n      color: #2f53eb;\n      font-size: 14px;\n      margin-top: 10px;\n    }\n  }\n  .general-setting-title {\n    text-align: center;\n    line-height: 22px;\n    font-size: 16px;\n    color: #151f34;\n  }\n  .general-setting-title p {\n    color: #9297a3;\n    margin: 10px 0 30px;\n    line-height: 20px;\n    font-size: 14px;\n  }\n  .general-setting-content {\n    width: 550px;\n    margin: 0 auto;\n  }\n  .text {\n    color: #151f34;\n    font-size: 10px;\n    line-height: 14px;\n    margin: 60px 0 10px;\n  }\n  .submit-btn {\n    height: 40px;\n    background: #2f54eb;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n  }\n  .btn-wrap {\n    .flex-sub:nth-child(1) {\n      margin-right: 20px;\n      .submit-btn {\n        background: #9297a3;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".general-setting-wrap .upload-avatar-wrap .el-upload-list": {
          "display": "none"
        }
      },
      {
        ".el-menu-vertical-user": {
          "min-height": "316px",
          ".el-badge": {
            "vertical-align": "baseline",
            "margin-left": "4px",
            "/deep/ .el-badge__content": {
              "background-color": "#ff0000"
            }
          },
          "/deep/ .el-menu-item": {
            "padding": "0 10px !important",
            "display": "flex",
            "align-items": "center"
          },
          "li": {
            "&.active-item": {
              "background-color": "#ecf5ff"
            }
          }
        },
        ".w160": {
          "border-right": "#e7e7e7 solid 1px",
          "/deep/ .is-dot": {
            "width": "7px",
            "height": "7px"
          }
        },
        ".set-content": {
          "flex": "1",
          "display": "flex",
          "flex-direction": "row",
          "justify-content": "center"
        },
        ".general-setting-wrap": {
          "display": "flex",
          "flex-direction": "row",
          ".box-bg": {
            "width": "420px",
            "height": "40px",
            "background": "rgba(247, 247, 250, 1)",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "border-radius": "4px",
            "box-sizing": "border-box",
            "padding": "0 15px"
          },
          ".account-wrapper": {
            "display": "flex",
            "justify-content": "space-between",
            "button": {
              "font-weight": "normal"
            }
          },
          ".upload-avatar-wrap": {
            "position": "absolute",
            "right": "calc((100% - 550px - 48px) / 2 / 2)",
            "top": "0",
            ".upload-text": {
              "color": "#2f53eb",
              "font-size": "14px",
              "margin-top": "10px"
            }
          },
          ".general-setting-title": {
            "text-align": "center",
            "line-height": "22px",
            "font-size": "16px",
            "color": "#151f34"
          },
          ".general-setting-title p": {
            "color": "#9297a3",
            "margin": "10px 0 30px",
            "line-height": "20px",
            "font-size": "14px"
          },
          ".general-setting-content": {
            "width": "550px",
            "margin": "0 auto"
          },
          ".text": {
            "color": "#151f34",
            "font-size": "10px",
            "line-height": "14px",
            "margin": "60px 0 10px"
          },
          ".submit-btn": {
            "height": "40px",
            "background": "#2f54eb",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none"
          },
          ".btn-wrap": {
            ".flex-sub:nth-child(1)": {
              "margin-right": "20px",
              ".submit-btn": {
                "background": "#9297a3"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberCard/MemberCard.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style scoped lang=\"less\">"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"noDrag member-card-main-class\">\n    <img\n      :src=\"findImage(this.image)\"\n      alt\n      v-if=\"\n        (memberSingleChatStatus === '0' && authStatus === '3' && userId !== currentUserId()) ||\n          userId == '1032384035881537536' ||\n          userId == '1008455862495526912'\n      \"\n      @error=\"replaceImg\"\n    />\n    <el-popover\n      ref=\"member-card\"\n      :width=\"dialogWidth\"\n      @show=\"onCardShow\"\n      @hide=\"onCardHide\"\n      trigger=\"click\"\n      placement=\"right-end\"\n      visible-arrow=\"false\"\n      popper-class=\"popper-member-card\"\n      v-else\n    >\n      <member-info\n        :user-id=\"userId\"\n        :groupId=\"groupId\"\n        :memberSingleChatStatus=\"memberSingleChatStatus\"\n        :authStatus=\"authStatus\"\n        ref=\"memberinfo\"\n      />\n      <img slot=\"reference\" v-popover:member-card :src=\"findImage(this.image)\" :class=\"userImageClass\" alt @error=\"replaceImg\" />\n    </el-popover>\n    <img v-if=\"vipType\" class=\"userLevelClass\" src=\"../../assets/images/vipCrown.png\" alt :class=\"userRank < 31 ? 'lower' : 'higher'\" />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nimport { getSelfUserId } from '@/utils/const';\nimport MemberInfo from './MemberInfo';\nimport { GET_USER_INFO } from '../../store/types';\nimport store from '@/store';\nimport UserInfoUtils from '@/utils/UserInfoUtils';\nexport default {\n  name: 'MemberCard',\n  components: {\n    MemberInfo\n  },\n  computed: {\n    userImageClass() {\n      if (this.userRank > 30) {\n        return 'user-high-level-border';\n      } else {\n        return 'user-low-level-border';\n      }\n    },\n    dialogWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 310;\n      } else {\n        return 340;\n      }\n    },\n  },\n  data() {\n    return {\n      region: '',\n      userInfo: {},\n      groupInfo: {},\n      isCurrentUser: false,\n      isEdit: false,\n      isGroupMember: false,\n      isGroupHolder: false,\n      title: this.$t('Universal_0202'),\n      GroupInviteVisible: false,\n      postcard: true,\n      userRank: store.state.common.userInfo.userRank,\n      vipType: store.state.common.userInfo.vipType\n    };\n  },\n  props: {\n    image: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    userId: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    groupId: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    memberSingleChatStatus: {\n      type: String,\n      default() {\n        return '1';\n      }\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '1';\n      }\n    }\n  },\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    async onCardShow() {\n      this.$nextTick(() => {\n        this.$refs.memberinfo.onCardShow();\n      });\n    },\n    onCardHide() {\n      this.$refs.memberinfo.onMemberInfoHide();\n      this.$emit('handleclosecard');\n      if (this.userId == this.currentUserId()) {\n        store.dispatch(GET_USER_INFO);\n      }\n    },\n    closeHandle() {},\n    // 替换404图片\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'user');\n    }\n  },\n\n  created() {},\n  updated() {}\n};\n</script>",
    "originData": "<template>\n  <div class=\"noDrag member-card-main-class\">\n    <img\n      :src=\"findImage(this.image)\"\n      alt\n      v-if=\"\n        (memberSingleChatStatus === '0' && authStatus === '3' && userId !== currentUserId()) ||\n          userId == '1032384035881537536' ||\n          userId == '1008455862495526912'\n      \"\n      @error=\"replaceImg\"\n    />\n    <el-popover\n      ref=\"member-card\"\n      :width=\"dialogWidth\"\n      @show=\"onCardShow\"\n      @hide=\"onCardHide\"\n      trigger=\"click\"\n      placement=\"right-end\"\n      visible-arrow=\"false\"\n      popper-class=\"popper-member-card\"\n      v-else\n    >\n      <member-info\n        :user-id=\"userId\"\n        :groupId=\"groupId\"\n        :memberSingleChatStatus=\"memberSingleChatStatus\"\n        :authStatus=\"authStatus\"\n        ref=\"memberinfo\"\n      />\n      <img slot=\"reference\" v-popover:member-card :src=\"findImage(this.image)\" :class=\"userImageClass\" alt @error=\"replaceImg\" />\n    </el-popover>\n    <img v-if=\"vipType\" class=\"userLevelClass\" src=\"../../assets/images/vipCrown.png\" alt :class=\"userRank < 31 ? 'lower' : 'higher'\" />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nimport { getSelfUserId } from '@/utils/const';\nimport MemberInfo from './MemberInfo';\nimport { GET_USER_INFO } from '../../store/types';\nimport store from '@/store';\nimport UserInfoUtils from '@/utils/UserInfoUtils';\nexport default {\n  name: 'MemberCard',\n  components: {\n    MemberInfo\n  },\n  computed: {\n    userImageClass() {\n      if (this.userRank > 30) {\n        return 'user-high-level-border';\n      } else {\n        return 'user-low-level-border';\n      }\n    },\n    dialogWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 310;\n      } else {\n        return 340;\n      }\n    },\n  },\n  data() {\n    return {\n      region: '',\n      userInfo: {},\n      groupInfo: {},\n      isCurrentUser: false,\n      isEdit: false,\n      isGroupMember: false,\n      isGroupHolder: false,\n      title: this.$t('Universal_0202'),\n      GroupInviteVisible: false,\n      postcard: true,\n      userRank: store.state.common.userInfo.userRank,\n      vipType: store.state.common.userInfo.vipType\n    };\n  },\n  props: {\n    image: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    userId: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    groupId: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    memberSingleChatStatus: {\n      type: String,\n      default() {\n        return '1';\n      }\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '1';\n      }\n    }\n  },\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    async onCardShow() {\n      this.$nextTick(() => {\n        this.$refs.memberinfo.onCardShow();\n      });\n    },\n    onCardHide() {\n      this.$refs.memberinfo.onMemberInfoHide();\n      this.$emit('handleclosecard');\n      if (this.userId == this.currentUserId()) {\n        store.dispatch(GET_USER_INFO);\n      }\n    },\n    closeHandle() {},\n    // 替换404图片\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'user');\n    }\n  },\n\n  created() {},\n  updated() {}\n};\n</script>\n<style>\n.popper-member-card {\n  top: 61px !important;\n}\n.popper-member-card .popper__arrow {\n  display: none;\n}\n</style>\n<style scoped lang=\"less\">\n.member-card-main-class {\n  position: relative;\n}\n.user-high-level-border {\n  /* border: 2px solid #ECC143; */\n  background-image: url(../../assets/images/wjt_highbg_62.png);\n  background-size: contain;\n  display: block;\n  padding: 8px;\n}\n.user-low-level-border {\n  /* border: 2px solid #86B6FF; */\n  background-image: url(../../assets/images/wjt_lowbg_62.png);\n  background-size: contain;\n  display: block;\n  padding: 6px;\n}\n.userLevelClass {\n  position: absolute;\n  top: -11px;\n  height: 14px;\n  width: 28px;\n  left: 50%;\n  margin-left: -16px;\n  &.lower {\n    top: -16px;\n  }\n  &.higher {\n    margin-left: -14px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".popper-member-card": {
          "top": "61px !important"
        },
        ".popper-member-card .popper__arrow": {
          "display": "none"
        }
      },
      {
        ".member-card-main-class": {
          "position": "relative"
        },
        ".user-high-level-border": {
          "background-image": "url(../../assets/images/wjt_highbg_62.png)",
          "background-size": "contain",
          "display": "block",
          "padding": "8px"
        },
        ".user-low-level-border": {
          "background-image": "url(../../assets/images/wjt_lowbg_62.png)",
          "background-size": "contain",
          "display": "block",
          "padding": "6px"
        },
        ".userLevelClass": {
          "position": "absolute",
          "top": "-11px",
          "height": "14px",
          "width": "28px",
          "left": "50%",
          "margin-left": "-16px",
          "&.lower": {
            "top": "-16px"
          },
          "&.higher": {
            "margin-left": "-14px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>",
      "1": "<style lang=\"less\">",
      "2": "<style lang=\"less\">"
    },
    "importInfo": {
      "1": "@import './common-popper/MsgBgPopper.less';"
    },
    "keepContent": "<!--  -->\n<template>\n  <div class=\"chat common-height\">\n    <div class=\"chatList\">\n      <Search/>\n      <chatList />\n    </div>\n    <div class=\"chatMessage flex-sub\">\n      <div class=\"netmask red\" v-if=\"isNetOff\"\n           :style=\"{'line-height': lineHeight, 'padding': padding}\"\n      ><i class=\"el-icon-warning-outline\"></i>{{ $t('Universal_0156') }}</div>\n      <div class=\"netmask yellow\" v-else-if=\"isReconn\"><i class=\"el-icon-loading\"></i>{{ $t('Universal_0163') }}</div>\n      <ChatBg v-if=\"'/app/chat' == $route.path\" />\n      <router-view v-if=\"'/app/chat' != $route.path && isRouterAlive\" />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Search from '@/components/search';\nimport chatList from './list';\nimport { mapState, mapMutations } from 'vuex';\nimport ChatBg from '@/components/ChatBg';\nimport { LOGIN_OUT, SYNC_DATA_PROGRESS } from '@/store/types';\nimport { shell } from 'electron';\nimport bus from '@/utils/eventbus';\nimport i18n from '../../i18n'\nconst saveTimeArr372 = () => {\n  return [\n    { value: \"1\", label: i18n.t(\"Universal_0004\", { value: 1 }) },\n    { value: \"3\", label: i18n.t(\"Universal_0004\", { value: 3 }) },\n    { value: \"12\", label: i18n.t(\"Universal_0004\", { value: 12 }) },\n    { value: \"24\", label: i18n.t(\"Universal_0004\", { value: 24 }) },\n    { value: \"72\", label: i18n.t(\"Universal_0008\", { value: 3 }) },\n    { value: \"120\", label: i18n.t(\"Universal_0008\", { value: 5 }) },\n    { value: \"168\", label: i18n.t(\"Universal_0008\", { value: 7 }) },\n  ];\n};\nexport default {\n  name: 'Chat',\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Search,\n    chatList,\n    ChatBg\n  },\n  provide: {\n    saveTimeArr372\n  },\n  data() {\n    //这里存放数据\n    return {\n      isMaxed: false,\n      isReconn: false,\n      isNetOff: false,\n      isRouterAlive: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      getNetStatus() {\n        return this.$store.state.common.netStatus;\n      },\n      getSocketStatus() {\n        return this.$store.state.common.socketStatus;\n      }\n    }),\n    lineHeight() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '32px';\n      } else {\n        return '24px';\n      }\n    },\n    padding() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '0';\n      } else {\n        return '10px 0';\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    getNetStatus(val) {\n      this.isNetOff = val == 'offline' ? true : false;\n    },\n    getSocketStatus(val) {\n      console.log('socket 状态', val);\n      // this.isReconn = !this.isNetOff && val == \"reconn\" ? true : false;\n      this.isReconn = val == 'online' ? false : true;\n    },\n  },\n  //方法集合\n  methods: {\n    reload() {\n      this.isRouterAlive =  false;\n      this.$nextTick(() => {\n        this.isRouterAlive = true;\n      });\n    },\n    ...mapMutations([LOGIN_OUT]),\n    _maximize(){\n      this.isMaxed = true;\n      console.log('maximize', this.isMaxed);\n    },\n    _unmaximize(){\n      this.isMaxed = false;\n      console.log('unmaximize', this.isMaxed);\n    },\n    //chat路由 主要用于聊天消息识别链接跳转\n    _handleElement_A(e){\n      // data- *  \n      if (e.target.tagName.toLowerCase() === 'a' && e.target.href) {\n        e.preventDefault();\n        shell.openExternal(e.target.href);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    bus.$on('refresh', this.reload);\n    this.$remote.getCurrentWindow().addListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().addListener('unmaximize',this._unmaximize)\n\n    this.$store.commit(SYNC_DATA_PROGRESS, 0);\n    this.isNetOff = this.getNetStatus == 'offline' ? true : false;\n    this.isReconn = this.getSocketStatus == 'online' ? false : true;\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    document.addEventListener('click',this._handleElement_A,false)\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    bus.$off('refresh', this.reload);\n    document.removeEventListener('click',this._handleElement_A)\n    this.$off();\n    this.$remote.getCurrentWindow().removeListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().removeListener('unmaximize',this._unmaximize)\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"chat common-height\">\n    <div class=\"chatList\">\n      <Search/>\n      <chatList />\n    </div>\n    <div class=\"chatMessage flex-sub\">\n      <div class=\"netmask red\" v-if=\"isNetOff\"\n           :style=\"{'line-height': lineHeight, 'padding': padding}\"\n      ><i class=\"el-icon-warning-outline\"></i>{{ $t('Universal_0156') }}</div>\n      <div class=\"netmask yellow\" v-else-if=\"isReconn\"><i class=\"el-icon-loading\"></i>{{ $t('Universal_0163') }}</div>\n      <ChatBg v-if=\"'/app/chat' == $route.path\" />\n      <router-view v-if=\"'/app/chat' != $route.path && isRouterAlive\" />\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Search from '@/components/search';\nimport chatList from './list';\nimport { mapState, mapMutations } from 'vuex';\nimport ChatBg from '@/components/ChatBg';\nimport { LOGIN_OUT, SYNC_DATA_PROGRESS } from '@/store/types';\nimport { shell } from 'electron';\nimport bus from '@/utils/eventbus';\nimport i18n from '../../i18n'\nconst saveTimeArr372 = () => {\n  return [\n    { value: \"1\", label: i18n.t(\"Universal_0004\", { value: 1 }) },\n    { value: \"3\", label: i18n.t(\"Universal_0004\", { value: 3 }) },\n    { value: \"12\", label: i18n.t(\"Universal_0004\", { value: 12 }) },\n    { value: \"24\", label: i18n.t(\"Universal_0004\", { value: 24 }) },\n    { value: \"72\", label: i18n.t(\"Universal_0008\", { value: 3 }) },\n    { value: \"120\", label: i18n.t(\"Universal_0008\", { value: 5 }) },\n    { value: \"168\", label: i18n.t(\"Universal_0008\", { value: 7 }) },\n  ];\n};\nexport default {\n  name: 'Chat',\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Search,\n    chatList,\n    ChatBg\n  },\n  provide: {\n    saveTimeArr372\n  },\n  data() {\n    //这里存放数据\n    return {\n      isMaxed: false,\n      isReconn: false,\n      isNetOff: false,\n      isRouterAlive: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      getNetStatus() {\n        return this.$store.state.common.netStatus;\n      },\n      getSocketStatus() {\n        return this.$store.state.common.socketStatus;\n      }\n    }),\n    lineHeight() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '32px';\n      } else {\n        return '24px';\n      }\n    },\n    padding() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '0';\n      } else {\n        return '10px 0';\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    getNetStatus(val) {\n      this.isNetOff = val == 'offline' ? true : false;\n    },\n    getSocketStatus(val) {\n      console.log('socket 状态', val);\n      // this.isReconn = !this.isNetOff && val == \"reconn\" ? true : false;\n      this.isReconn = val == 'online' ? false : true;\n    },\n  },\n  //方法集合\n  methods: {\n    reload() {\n      this.isRouterAlive =  false;\n      this.$nextTick(() => {\n        this.isRouterAlive = true;\n      });\n    },\n    ...mapMutations([LOGIN_OUT]),\n    _maximize(){\n      this.isMaxed = true;\n      console.log('maximize', this.isMaxed);\n    },\n    _unmaximize(){\n      this.isMaxed = false;\n      console.log('unmaximize', this.isMaxed);\n    },\n    //chat路由 主要用于聊天消息识别链接跳转\n    _handleElement_A(e){\n      // data- *  \n      if (e.target.tagName.toLowerCase() === 'a' && e.target.href) {\n        e.preventDefault();\n        shell.openExternal(e.target.href);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    bus.$on('refresh', this.reload);\n    this.$remote.getCurrentWindow().addListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().addListener('unmaximize',this._unmaximize)\n\n    this.$store.commit(SYNC_DATA_PROGRESS, 0);\n    this.isNetOff = this.getNetStatus == 'offline' ? true : false;\n    this.isReconn = this.getSocketStatus == 'online' ? false : true;\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    document.addEventListener('click',this._handleElement_A,false)\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    bus.$off('refresh', this.reload);\n    document.removeEventListener('click',this._handleElement_A)\n    this.$off();\n    this.$remote.getCurrentWindow().removeListener('maximize',this._maximize);\n    this.$remote.getCurrentWindow().removeListener('unmaximize',this._unmaximize)\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.netmask {\n  position: absolute;\n  top: 63px;\n  left: calc(50%);\n  width: 280px;\n  text-align: center;\n  line-height: 32px;\n  z-index: 1001;\n  .el-icon-warning-outline {\n    color: #ff6263;\n    font-size: 16px;\n    padding-right: 5px;\n  }\n  &.red {\n    background: #ffe8e8;\n    border: #ffc6c6 solid 1px;\n    color: #ff6263;\n  }\n  &.yellow {\n    background: #fdf6ec;\n    border: #ffdeb0 solid 1px;\n    color: #eda368;\n  }\n}\n.topwork {\n  height: 21px;\n  padding: 0;\n  -webkit-app-region: drag;\n  background: #fff;\n  .i1 {\n    &:hover {\n      background: #e7e7e7;\n    }\n  }\n  .i2 {\n    &:hover {\n      background: #fa5151;\n    }\n  }\n  img,\n  i {\n    cursor: pointer;\n    padding: 2px 5px 0;\n    display: inline-block;\n    -webkit-app-region: no-drag;\n  }\n}\n.chat {\n  display: flex;\n  // border: #ddd solid 1px;\n  border-left: none;\n  .chatList {\n    width: 270px;\n    overflow-y: hidden;\n  }\n  .chatMessage {\n    padding-top: 23px;\n    background: #f6f6f6;\n    // min-height: 90vh;\n    // border-left:1px solid rgba(221,221,221,1);\n    border-left: 1px solid #e4e4e4;\n    box-sizing: border-box;\n    height: 100vh;\n    overflow-y: hidden;\n  }\n}\n</style>\n<style lang=\"less\">\n@import './common-popper/MsgBgPopper.less';\n</style>\n<style lang=\"less\">\n.atBoxActive,.atInput.selected{\n  background-color: #D6DEFF;\n}\n.atBoxHover {\n  background: #f7f7f7;\n}\n.atBox {\n  // position: absolute;\n  overflow: scroll;\n  width: 170px;\n  max-height: 184px;\n  // bottom: 25px;\n  background: #fff;\n  border: 1px solid #dddddd;\n  border-radius: 4px;\n  box-shadow: 0px 2px 8px 0px #888888;\n  ul {\n    overflow: hidden;\n    li {\n      display: flex;\n      align-items: center;\n      padding: 0 5px;\n      cursor: pointer;\n      img {\n        margin: 5px 2px;\n      }\n      span {\n        -ms-text-overflow: ellipsis;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n        max-width: 110px;\n        display: inline-block;\n      }\n    }\n  }\n}\n//quill element remove  BUG\n.atBox-bottom{\n  display: none;\n  z-index: -1;\n}\n.atInput {\n  max-width: 170px;\n  max-height: 183px;\n  overflow: scroll;\n  ul {\n    li {\n      text-overflow: ellipsis;\n      &:first-child {\n        padding-left: 19px;\n      }\n    }\n  }\n  img {\n    display: inline-block;\n    width: 25px;\n    height: 25px;\n    border-radius: 15px;\n    &:not([src]) {\n      opacity: 0;\n    }\n  }\n  span,\n  img {\n    vertical-align: middle;\n    margin: 0 5px;\n  }\n}\n\n</style>",
    "cssJson": [
      {
        ".netmask": {
          "position": "absolute",
          "top": "63px",
          "left": "calc(50%)",
          "width": "280px",
          "text-align": "center",
          "line-height": "32px",
          "z-index": "1001",
          ".el-icon-warning-outline": {
            "color": "#ff6263",
            "font-size": "16px",
            "padding-right": "5px"
          },
          "&.red": {
            "background": "#ffe8e8",
            "border": "#ffc6c6 solid 1px",
            "color": "#ff6263"
          },
          "&.yellow": {
            "background": "#fdf6ec",
            "border": "#ffdeb0 solid 1px",
            "color": "#eda368"
          }
        },
        ".topwork": {
          "height": "21px",
          "padding": "0",
          "-webkit-app-region": "drag",
          "background": "#fff",
          ".i1": {
            "&:hover": {
              "background": "#e7e7e7"
            }
          },
          ".i2": {
            "&:hover": {
              "background": "#fa5151"
            }
          },
          "img,  i": {
            "cursor": "pointer",
            "padding": "2px 5px 0",
            "display": "inline-block",
            "-webkit-app-region": "no-drag"
          }
        },
        ".chat": {
          "display": "flex",
          "border-left": "none",
          ".chatList": {
            "width": "270px",
            "overflow-y": "hidden"
          },
          ".chatMessage": {
            "padding-top": "23px",
            "background": "#f6f6f6",
            "border-left": "1px solid #e4e4e4",
            "box-sizing": "border-box",
            "height": "100vh",
            "overflow-y": "hidden"
          }
        }
      },
      {},
      {
        ".atBoxActive,.atInput.selected": {
          "background-color": "#D6DEFF"
        },
        ".atBoxHover": {
          "background": "#f7f7f7"
        },
        ".atBox": {
          "overflow": "scroll",
          "width": "170px",
          "max-height": "184px",
          "background": "#fff",
          "border": "1px solid #dddddd",
          "border-radius": "4px",
          "box-shadow": "0px 2px 8px 0px #888888",
          "ul": {
            "overflow": "hidden",
            "li": {
              "display": "flex",
              "align-items": "center",
              "padding": "0 5px",
              "cursor": "pointer",
              "img": {
                "margin": "5px 2px"
              },
              "span": {
                "-ms-text-overflow": "ellipsis",
                "text-overflow": "ellipsis",
                "overflow": "hidden",
                "white-space": "nowrap",
                "max-width": "110px",
                "display": "inline-block"
              }
            }
          }
        },
        ".atBox-bottom": {
          "display": "none",
          "z-index": "-1"
        },
        ".atInput": {
          "max-width": "170px",
          "max-height": "183px",
          "overflow": "scroll",
          "ul": {
            "li": {
              "text-overflow": "ellipsis",
              "&:first-child": {
                "padding-left": "19px"
              }
            }
          },
          "img": {
            "display": "inline-block",
            "width": "25px",
            "height": "25px",
            "border-radius": "15px",
            "&:not([src])": {
              "opacity": "0"
            }
          },
          "span,  img": {
            "vertical-align": "middle",
            "margin": "0 5px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/tipoffs/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 举报 -->\n<template>\n  <div class=\"tipoffs\">\n    <div class=\"tip-head\">{{ $t('report_0001') }}</div>\n    <div class=\"tip-details\">\n      <el-form class=\"tipoffs-con\" :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\">\n        <div class=\"col colone flex justify-between\">\n          <div class=\"text\"><span>*</span> {{ $t('report_0002') }}</div>\n          <el-form-item prop=\"impeachOpinionId\">\n            <el-select v-model=\"ruleForm.impeachOpinionId\" :placeholder=\"$t('Universal_0202')\" clearable class=\"tipoffInput\">\n              <el-option v-for=\"item in options\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n            </el-select>\n          </el-form-item>\n        </div>\n        <div class=\"col\">\n          <div class=\"text\"><span>*</span> {{ $t('report_0004') }}</div>\n          <el-form-item prop=\"content\">\n            <el-input\n              type=\"textarea\"\n              v-model.trim=\"ruleForm.content\"\n              :placeholder=\"$t('report_0003')\"\n              :autosize=\"{ minRows: 6, maxRows: 20 }\"\n              maxlength=\"200\"\n              :rules=\"[\n                { required: true, message: this.$t('report_0005') },\n                {\n                  min: 5,\n                  max: 200,\n                  message: this.$t('report_0005'),\n                  trigger: 'blur'\n                }\n              ]\"\n              show-word-limit\n            ></el-input>\n          </el-form-item>\n          <UpoadImg\n            class=\"image\"\n            ref=\"UpoadImg\"\n            :limit=\"limit\"\n            :multiple=\"multiple\"\n            :imgList=\"imgList\"\n          />\n          <!-- </el-upload> -->\n        </div>\n      </el-form>\n      <div class=\"btn flex justify-around\">\n        <el-button type=\"info\" @click=\"goBack('ruleForm')\">{{ $t('Universal_0355') }}</el-button>\n        <el-button type=\"primary\" @click=\"onSubmit('ruleForm')\" v-loading.fullscreen.lock=\"fullscreenLoading\">\n          {{ $t('Universal_0049') }}\n        </el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport UpoadImg from \"./UpoadImg\";\nimport { get_type_lists, get_tipoffs_add } from \"./server\";\nimport fileOperational from '@/services/fileOperational';\n// import FileUpload from \"@/utils/fileUpload\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    UpoadImg\n  },\n  data() {\n    //这里存放数据\n    return {\n      options: [],\n      ruleForm: {\n        impeachOpinionId: '',\n        content: '',\n        impeachType: 1,\n        othersId: ''\n      },\n      limit: 5,\n      multiple: true,\n      imgList: [],\n      fullscreenLoading: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    rules() {\n      return {\n        impeachOpinionId: [{ required: true, message: this.$t('Universal_0202'), trigger: 'change' }],\n        content: [\n          {\n            required: true,\n            message: this.$t('report_0005'),\n            trigger: 'blur'\n          },\n          {\n            min: 5,\n            max: 200,\n            message: this.$t('report_0005'),\n            trigger: 'blur'\n          }\n        ]\n      };\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    onSubmit(formName) {\n      this.$refs[formName].validate(async (valid) => {\n        if (valid) {\n          this.fullscreenLoading = true;\n          this.ruleForm.files = [...this.$refs.UpoadImg.imgList];\n          const imgUrls = await this.uploadImageToSdk(this.ruleForm.files)\n          this.totipoffs(imgUrls);\n        } else {\n          return false;\n        }\n      });\n    },\n    async uploadImageToSdk(pararm){\n      let imgUrls = []\n      for(let imgData of pararm){\n        // eslint-disable-next-line\n        const filePath = await fileOperational.saveImageToFile( imgData.file.src, UserInfoUtils.getCurrentUserId() + '.png');\n        const { FileUpload } = require('@/utils/fileUpload');\n        const fileUpload = new FileUpload(filePath, UserInfoUtils.getCurrentUserId(),-1); \n        const upload = await fileUpload.headImageUpload();//通过sdk上传\n        imgUrls.push(upload[0].url)\n      }\n      return imgUrls;\n    },\n    async totipoffs(imgUrls) {\n      const params = {\n        impeachOpinionId:this.ruleForm.impeachOpinionId,\n        content:this.ruleForm.content,\n        impeachType:this.ruleForm.impeachType,\n        othersId:this.ruleForm.othersId,\n        imgArray:imgUrls,\n        userId:UserInfoUtils.getCurrentUserId()\n      }\n      let res = await get_tipoffs_add({}, params);\n      if (res.code == 200) {\n        this.fullscreenLoading = false;\n        this.$message.success(this.$t('report_0012'));\n        this.$router.go(-1);\n      } else {\n        this.fullscreenLoading = false;\n        this.$message.error(res.msg);\n        // console.log(res.msg);\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    // 获取下拉列表数据\n    async getList() {\n      this.ruleForm.impeachType = this.$route.query.impeachType;\n      this.ruleForm.othersId = this.$route.query.othersId;\n      let res = await get_type_lists();\n      if (res.code == 200) {\n        this.options = res.data.rows;\n      }\n    },\n    init() {\n      this.getList();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 举报 -->\n<template>\n  <div class=\"tipoffs\">\n    <div class=\"tip-head\">{{ $t('report_0001') }}</div>\n    <div class=\"tip-details\">\n      <el-form class=\"tipoffs-con\" :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\">\n        <div class=\"col colone flex justify-between\">\n          <div class=\"text\"><span>*</span> {{ $t('report_0002') }}</div>\n          <el-form-item prop=\"impeachOpinionId\">\n            <el-select v-model=\"ruleForm.impeachOpinionId\" :placeholder=\"$t('Universal_0202')\" clearable class=\"tipoffInput\">\n              <el-option v-for=\"item in options\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n            </el-select>\n          </el-form-item>\n        </div>\n        <div class=\"col\">\n          <div class=\"text\"><span>*</span> {{ $t('report_0004') }}</div>\n          <el-form-item prop=\"content\">\n            <el-input\n              type=\"textarea\"\n              v-model.trim=\"ruleForm.content\"\n              :placeholder=\"$t('report_0003')\"\n              :autosize=\"{ minRows: 6, maxRows: 20 }\"\n              maxlength=\"200\"\n              :rules=\"[\n                { required: true, message: this.$t('report_0005') },\n                {\n                  min: 5,\n                  max: 200,\n                  message: this.$t('report_0005'),\n                  trigger: 'blur'\n                }\n              ]\"\n              show-word-limit\n            ></el-input>\n          </el-form-item>\n          <UpoadImg\n            class=\"image\"\n            ref=\"UpoadImg\"\n            :limit=\"limit\"\n            :multiple=\"multiple\"\n            :imgList=\"imgList\"\n          />\n          <!-- </el-upload> -->\n        </div>\n      </el-form>\n      <div class=\"btn flex justify-around\">\n        <el-button type=\"info\" @click=\"goBack('ruleForm')\">{{ $t('Universal_0355') }}</el-button>\n        <el-button type=\"primary\" @click=\"onSubmit('ruleForm')\" v-loading.fullscreen.lock=\"fullscreenLoading\">\n          {{ $t('Universal_0049') }}\n        </el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport UpoadImg from \"./UpoadImg\";\nimport { get_type_lists, get_tipoffs_add } from \"./server\";\nimport fileOperational from '@/services/fileOperational';\n// import FileUpload from \"@/utils/fileUpload\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    UpoadImg\n  },\n  data() {\n    //这里存放数据\n    return {\n      options: [],\n      ruleForm: {\n        impeachOpinionId: '',\n        content: '',\n        impeachType: 1,\n        othersId: ''\n      },\n      limit: 5,\n      multiple: true,\n      imgList: [],\n      fullscreenLoading: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    rules() {\n      return {\n        impeachOpinionId: [{ required: true, message: this.$t('Universal_0202'), trigger: 'change' }],\n        content: [\n          {\n            required: true,\n            message: this.$t('report_0005'),\n            trigger: 'blur'\n          },\n          {\n            min: 5,\n            max: 200,\n            message: this.$t('report_0005'),\n            trigger: 'blur'\n          }\n        ]\n      };\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    onSubmit(formName) {\n      this.$refs[formName].validate(async (valid) => {\n        if (valid) {\n          this.fullscreenLoading = true;\n          this.ruleForm.files = [...this.$refs.UpoadImg.imgList];\n          const imgUrls = await this.uploadImageToSdk(this.ruleForm.files)\n          this.totipoffs(imgUrls);\n        } else {\n          return false;\n        }\n      });\n    },\n    async uploadImageToSdk(pararm){\n      let imgUrls = []\n      for(let imgData of pararm){\n        // eslint-disable-next-line\n        const filePath = await fileOperational.saveImageToFile( imgData.file.src, UserInfoUtils.getCurrentUserId() + '.png');\n        const { FileUpload } = require('@/utils/fileUpload');\n        const fileUpload = new FileUpload(filePath, UserInfoUtils.getCurrentUserId(),-1); \n        const upload = await fileUpload.headImageUpload();//通过sdk上传\n        imgUrls.push(upload[0].url)\n      }\n      return imgUrls;\n    },\n    async totipoffs(imgUrls) {\n      const params = {\n        impeachOpinionId:this.ruleForm.impeachOpinionId,\n        content:this.ruleForm.content,\n        impeachType:this.ruleForm.impeachType,\n        othersId:this.ruleForm.othersId,\n        imgArray:imgUrls,\n        userId:UserInfoUtils.getCurrentUserId()\n      }\n      let res = await get_tipoffs_add({}, params);\n      if (res.code == 200) {\n        this.fullscreenLoading = false;\n        this.$message.success(this.$t('report_0012'));\n        this.$router.go(-1);\n      } else {\n        this.fullscreenLoading = false;\n        this.$message.error(res.msg);\n        // console.log(res.msg);\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    // 获取下拉列表数据\n    async getList() {\n      this.ruleForm.impeachType = this.$route.query.impeachType;\n      this.ruleForm.othersId = this.$route.query.othersId;\n      let res = await get_type_lists();\n      if (res.code == 200) {\n        this.options = res.data.rows;\n      }\n    },\n    init() {\n      this.getList();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.tipoffs {\n  .tip-head {\n    height: 48px;\n    background: rgba(243, 243, 243, 1);\n    padding: 0 20px;\n    box-sizing: border-box;\n    border-top: 1px solid #dddddd;\n    line-height: 48px;\n    font-weight: 600;\n  }\n  .tip-details {\n    overflow: scroll;\n    height: calc(100vh - 100px);\n  }\n  .tipoffs-con {\n    width: 100%;\n    background: #fff;\n    padding: 20px;\n    box-sizing: border-box;\n    .col {\n      font-size: 14px;\n      .text {\n        line-height: 52px;\n        span {\n          // content: \"*\";\n          color: #f56c6c;\n          margin-right: 4px;\n        }\n      }\n      .image {\n        margin-top: 20px;\n      }\n    }\n    .colone {\n      border-bottom: 1px solid #dddddd;\n      min-height: 60px;\n    }\n  }\n  .btn {\n    margin-top: 20px;\n  }\n}\n\n.tipoffInput {\n  width: 260px;\n}\n</style>\n",
    "cssJson": [
      {
        ".tipoffs": {
          ".tip-head": {
            "height": "48px",
            "background": "rgba(243, 243, 243, 1)",
            "padding": "0 20px",
            "box-sizing": "border-box",
            "border-top": "1px solid #dddddd",
            "line-height": "48px",
            "font-weight": "600"
          },
          ".tip-details": {
            "overflow": "scroll",
            "height": "calc(100vh - 100px)"
          },
          ".tipoffs-con": {
            "width": "100%",
            "background": "#fff",
            "padding": "20px",
            "box-sizing": "border-box",
            ".col": {
              "font-size": "14px",
              ".text": {
                "line-height": "52px",
                "span": {
                  "color": "#f56c6c",
                  "margin-right": "4px"
                }
              },
              ".image": {
                "margin-top": "20px"
              }
            },
            ".colone": {
              "border-bottom": "1px solid #dddddd",
              "min-height": "60px"
            }
          },
          ".btn": {
            "margin-top": "20px"
          }
        },
        ".tipoffInput": {
          "width": "260px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/single/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"\">\n    <!-- DiDiPayment -->\n    <template v-if=\"query['id'] == $paymentId || query['id'] == actAssistantId\">\n      <Title>\n        <div style=\"display: flex; align-items: center; cursor: pointer\">\n          <label class=\"vlogo\">\n            <img src=\"../../../assets/images/vlogo.png\" />\n          </label>\n          <span class=\"group-name\" :title=\"decodeURI(query['friendName'])\">{{ decodeURI(query['friendName']) || '-' }}</span>\n        </div>\n      </Title>\n      <DiDiPayment v-if=\"query['id'] == $paymentId\" />\n      <ActivityAssistant v-if=\"query['id'] == actAssistantId\" />\n    </template>\n    <router-view v-else></router-view>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DiDiPayment from '../components/DiDi-Payment/DiDiPayment';\nimport ActivityAssistant from '../components/DiDi-Payment/ActivityAssistant';\nimport Title from './components/title.vue';\nimport { ActAssistantId } from \"@/utils/const\"\nexport default {\n  name: 'SingleRouterView',\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DiDiPayment,\n    ActivityAssistant,\n    Title\n  },\n  data() {\n    //这里存放数据\n    return {\n      actAssistantId:ActAssistantId\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    query() {\n      return this.$route.query;\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  // async mounted() {\n  // console.log(this.query);\n  // let uinfo = await window.vm\n  //   .$knex(\"t_contacts\")\n  //   .select()\n  //   .where(\"friend_id\", this.query.id);\n  // console.log(uinfo);\n  // },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"\">\n    <!-- DiDiPayment -->\n    <template v-if=\"query['id'] == $paymentId || query['id'] == actAssistantId\">\n      <Title>\n        <div style=\"display: flex; align-items: center; cursor: pointer\">\n          <label class=\"vlogo\">\n            <img src=\"../../../assets/images/vlogo.png\" />\n          </label>\n          <span class=\"group-name\" :title=\"decodeURI(query['friendName'])\">{{ decodeURI(query['friendName']) || '-' }}</span>\n        </div>\n      </Title>\n      <DiDiPayment v-if=\"query['id'] == $paymentId\" />\n      <ActivityAssistant v-if=\"query['id'] == actAssistantId\" />\n    </template>\n    <router-view v-else></router-view>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DiDiPayment from '../components/DiDi-Payment/DiDiPayment';\nimport ActivityAssistant from '../components/DiDi-Payment/ActivityAssistant';\nimport Title from './components/title.vue';\nimport { ActAssistantId } from \"@/utils/const\"\nexport default {\n  name: 'SingleRouterView',\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DiDiPayment,\n    ActivityAssistant,\n    Title\n  },\n  data() {\n    //这里存放数据\n    return {\n      actAssistantId:ActAssistantId\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    query() {\n      return this.$route.query;\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  // async mounted() {\n  // console.log(this.query);\n  // let uinfo = await window.vm\n  //   .$knex(\"t_contacts\")\n  //   .select()\n  //   .where(\"friend_id\", this.query.id);\n  // console.log(uinfo);\n  // },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n</style>\n",
    "cssJson": [
      {}
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/discussion/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n</style>\n",
    "cssJson": [
      {}
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/manage/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"setting\">\n    <div class=\"setting-box\">\n      <Title :authStatus=\"authStatus\">{{ name }}</Title>\n      <div class=\"setting-info flex flex-direction\">\n        <p class=\"tip\">基础设置</p>\n        <div class=\"chat-top flex justify-between\">\n          <span style=\"margin-top: 10px\">消息保存时长</span>\n          <span>\n            <el-select v-model=\"group.saveTime\">\n              <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n            </el-select>\n          </span>\n        </div>\n      </div>\n      <div class=\"setting-info\">\n        <p class=\"tip\">成员权限<span>全体成员权限（非管理员）</span></p>\n        <div class=\"chat-top flex justify-between\">\n          <span>截屏提醒</span>\n          <span>\n            <el-switch v-model=\"group.screenshotsReminderStatus\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"> </el-switch>\n          </span>\n        </div>\n        <div class=\"chat-top flex justify-between\">\n          <span>社区成员禁言</span>\n          <span>\n            <el-switch v-model=\"group.forbiddenWordsStatus\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"> </el-switch>\n          </span>\n        </div>\n        <div class=\"chat-top flex justify-between\">\n          <span>禁止成员单聊</span>\n          <span>\n            <el-switch v-model=\"group.memberSingleChatStatus\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"> </el-switch>\n          </span>\n        </div>\n        <div class=\"chat-top flex justify-between\">\n          <span>禁止成员发送图片和视频</span>\n          <span>\n            <el-switch v-model=\"group.sendPicturesStatus\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"> </el-switch>\n          </span>\n        </div>\n        <div class=\"chat-top flex justify-between\">\n          <span>禁止成员发送链接</span>\n          <span>\n            <el-switch v-model=\"group.sendConnectionStatus\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"></el-switch>\n          </span>\n        </div>\n        <div class=\"chat-top flex justify-between\">\n          <span>禁止成员复制</span>\n          <span>\n            <el-switch v-model=\"group.copyMessagesStauts\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"></el-switch>\n          </span>\n        </div>\n      </div>\n      <div class=\"setting-info\">\n        <div class=\"chat-top flex justify-between\" style=\"margin: 0; padding: 0\">\n          <span style=\"padding-top: 10px\">其他</span>\n          <span>\n            <el-button type=\"danger\" @click=\"releaseGroup()\">解散社区</el-button>\n          </span>\n        </div>\n      </div>\n      <div class=\"setting-footer flex justify-center\">\n        <el-button style=\"width: 320px\" type=\"info\" @click=\"gotoChat()\">取消</el-button>\n        <el-button style=\"width: 320px\" type=\"primary\" @click=\"setGroupBase()\">保存</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//社群设置\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Title from '../components/title.vue';\nimport { setGroupBase, releaseGroup, queryGroupByGroupId } from './server';\nimport { contGrpSize } from '@/utils';\nimport { mapMutations } from 'vuex';\nimport { CLEAR_CHAT } from '@/store/types';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title\n  },\n  data() {\n    //这里存放数据\n    return {\n      relategroup: [\n        {\n          name: '社区1',\n          id: '1',\n          avater: 'http://didiimg.oss-ap-southeast-1.aliyuncs.com/default.png'\n        },\n        {\n          name: '社区2',\n          id: '2',\n          avater: 'http://didiimg.oss-ap-southeast-1.aliyuncs.com/default.png'\n        },\n        {\n          name: '社区3',\n          id: '3',\n          avater: 'http://didiimg.oss-ap-southeast-1.aliyuncs.com/default.png'\n        },\n        {\n          name: '社区4',\n          id: '4',\n          avater: 'http://didiimg.oss-ap-southeast-1.aliyuncs.com/default.png'\n        }\n      ],\n      name: '社区管理',\n      group: {\n        saveTime: 168,\n        screenshotsReminderStatus: 0, //截屏提醒\n        forbiddenWordsStatus: 0, //0关闭禁言1开启禁言\n        memberSingleChatStatus: 0, //0禁止成员单聊1允许成员单聊\n        sendPicturesStatus: 0, //0禁止发送图片1允许发送图片\n        sendConnectionStatus: 0, //0禁止发送链接1允许发送链接\n        copyMessagesStauts: 0, //\t0禁止复制消息1允许复制消息\n        sendRedpacketStatus: 0, //\t0禁止发送红包1允许发送红包\n        id: sessionStorage.getItem('groupId')\n      },\n\n      value0: false,\n      value1: false,\n      value2: false,\n      value11: 0,\n      options: [\n        {\n          value: 1,\n          label: '1小时'\n        },\n        {\n          value: 3,\n          label: '3小时'\n        },\n        {\n          value: 12,\n          label: '12小时'\n        },\n        {\n          value: 24,\n          label: '24小时'\n        },\n        {\n          value: 72,\n          label: '3天'\n        },\n        {\n          value: 120,\n          label: '5天'\n        },\n        {\n          value: 168,\n          label: '7天'\n        }\n      ],\n      authStatus: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    gotoChat() {\n      let current = {\n        targetId: sessionStorage.getItem('groupId'),\n        uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\n      };\n      this.CLEAR_CHAT();\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          targetId: sessionStorage.getItem('groupId'),\n          timer: new Date().getTime(),\n          friendName: this.group.groupName,\n          uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\n        }\n      });\n    },\n    queryGroupByGroupId() {\n      queryGroupByGroupId({\n        groupId: sessionStorage.getItem('groupId')\n      }).then(res => {\n        if (res.code == 200) {\n          // var newobj={}\n          // for(let key in res.data){\n          //       newobj.key=res.data[key]===1?true:false\n          // }\n          this.group.screenshotsReminderStatus = res.data.screenshotsReminderStatus == 1 ? true : false; //截屏提醒\n          this.group.forbiddenWordsStatus = res.data.forbiddenWordsStatus == 1 ? true : false; //0关闭禁言1开启禁言\n          this.group.memberSingleChatStatus = res.data.memberSingleChatStatus == 1 ? true : false; //0禁止成员单聊1允许成员单聊\n          this.group.sendPicturesStatus = res.data.sendPicturesStatus == 1 ? true : false; //0禁止发送图片1允许发送图片\n          this.group.sendConnectionStatus = res.data.sendConnectionStatus == 1 ? true : false; //0禁止发送链接1允许发送链接\n          this.group.copyMessagesStauts = res.data.copyMessagesStauts == 1 ? true : false;\n          this.group.sendRedpacketStatus = res.data.sendRedpacketStatus == 1 ? true : false;\n          this.group.groupName = res.data.groupName;\n          this.group.saveTime = res.data.saveTime;\n        }\n      });\n    },\n    releaseGroup() {\n      this.$confirm('确定要解散社区吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          releaseGroup({\n            gId: this.$route.query.id\n          }).then(res => {\n            if (res.code == 200) {\n              this.$message.success(`你已成功解散社区${this.group.groupName}`);\n              let groupEncode = 'GROUP@' + sessionStorage.getItem('groupId') + '_messageList';\n              localStorage.setItem(groupEncode, '');\n              this.$router.push({ path: '/app/chat' });\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消操作'\n          });\n        });\n    },\n    setGroupBase() {\n      setGroupBase({\n        saveTime: this.group.saveTime,\n        screenshotsReminderStatus: this.group.screenshotsReminderStatus ? 1 : 0, //截屏提醒\n        forbiddenWordsStatus: this.group.forbiddenWordsStatus ? 1 : 0, //0关闭禁言1开启禁言\n        memberSingleChatStatus: this.group.memberSingleChatStatus ? 1 : 0, //0禁止成员单聊1允许成员单聊\n        sendPicturesStatus: this.group.sendPicturesStatus ? 1 : 0, //0禁止发送图片1允许发送图片\n        sendConnectionStatus: this.group.sendConnectionStatus ? 1 : 0, //0禁止发送链接1允许发送链接\n        copyMessagesStauts: this.group.copyMessagesStauts ? 1 : 0, //\t0禁止复制消息1允许复制消息\n        sendRedpacketStatus: this.group.sendRedpacketStatus ? 1 : 0, //0禁止发送红包1允许发送红包\n        id: sessionStorage.getItem('groupId')\n      }).then(res => {\n        if (res.code == 200) {\n          this.$message.success(res.msg);\n          this.queryGroupByGroupId();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.queryGroupByGroupId();\n    this.authStatus = sessionStorage.getItem('authStatus');\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"setting\">\n    <div class=\"setting-box\">\n      <Title :authStatus=\"authStatus\">{{ name }}</Title>\n      <div class=\"setting-info flex flex-direction\">\n        <p class=\"tip\">基础设置</p>\n        <div class=\"chat-top flex justify-between\">\n          <span style=\"margin-top: 10px\">消息保存时长</span>\n          <span>\n            <el-select v-model=\"group.saveTime\">\n              <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n            </el-select>\n          </span>\n        </div>\n      </div>\n      <div class=\"setting-info\">\n        <p class=\"tip\">成员权限<span>全体成员权限（非管理员）</span></p>\n        <div class=\"chat-top flex justify-between\">\n          <span>截屏提醒</span>\n          <span>\n            <el-switch v-model=\"group.screenshotsReminderStatus\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"> </el-switch>\n          </span>\n        </div>\n        <div class=\"chat-top flex justify-between\">\n          <span>社区成员禁言</span>\n          <span>\n            <el-switch v-model=\"group.forbiddenWordsStatus\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"> </el-switch>\n          </span>\n        </div>\n        <div class=\"chat-top flex justify-between\">\n          <span>禁止成员单聊</span>\n          <span>\n            <el-switch v-model=\"group.memberSingleChatStatus\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"> </el-switch>\n          </span>\n        </div>\n        <div class=\"chat-top flex justify-between\">\n          <span>禁止成员发送图片和视频</span>\n          <span>\n            <el-switch v-model=\"group.sendPicturesStatus\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"> </el-switch>\n          </span>\n        </div>\n        <div class=\"chat-top flex justify-between\">\n          <span>禁止成员发送链接</span>\n          <span>\n            <el-switch v-model=\"group.sendConnectionStatus\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"></el-switch>\n          </span>\n        </div>\n        <div class=\"chat-top flex justify-between\">\n          <span>禁止成员复制</span>\n          <span>\n            <el-switch v-model=\"group.copyMessagesStauts\" active-color=\"#13ce66\" inactive-color=\"#D8D8D8\"></el-switch>\n          </span>\n        </div>\n      </div>\n      <div class=\"setting-info\">\n        <div class=\"chat-top flex justify-between\" style=\"margin: 0; padding: 0\">\n          <span style=\"padding-top: 10px\">其他</span>\n          <span>\n            <el-button type=\"danger\" @click=\"releaseGroup()\">解散社区</el-button>\n          </span>\n        </div>\n      </div>\n      <div class=\"setting-footer flex justify-center\">\n        <el-button style=\"width: 320px\" type=\"info\" @click=\"gotoChat()\">取消</el-button>\n        <el-button style=\"width: 320px\" type=\"primary\" @click=\"setGroupBase()\">保存</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//社群设置\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Title from '../components/title.vue';\nimport { setGroupBase, releaseGroup, queryGroupByGroupId } from './server';\nimport { contGrpSize } from '@/utils';\nimport { mapMutations } from 'vuex';\nimport { CLEAR_CHAT } from '@/store/types';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title\n  },\n  data() {\n    //这里存放数据\n    return {\n      relategroup: [\n        {\n          name: '社区1',\n          id: '1',\n          avater: 'http://didiimg.oss-ap-southeast-1.aliyuncs.com/default.png'\n        },\n        {\n          name: '社区2',\n          id: '2',\n          avater: 'http://didiimg.oss-ap-southeast-1.aliyuncs.com/default.png'\n        },\n        {\n          name: '社区3',\n          id: '3',\n          avater: 'http://didiimg.oss-ap-southeast-1.aliyuncs.com/default.png'\n        },\n        {\n          name: '社区4',\n          id: '4',\n          avater: 'http://didiimg.oss-ap-southeast-1.aliyuncs.com/default.png'\n        }\n      ],\n      name: '社区管理',\n      group: {\n        saveTime: 168,\n        screenshotsReminderStatus: 0, //截屏提醒\n        forbiddenWordsStatus: 0, //0关闭禁言1开启禁言\n        memberSingleChatStatus: 0, //0禁止成员单聊1允许成员单聊\n        sendPicturesStatus: 0, //0禁止发送图片1允许发送图片\n        sendConnectionStatus: 0, //0禁止发送链接1允许发送链接\n        copyMessagesStauts: 0, //\t0禁止复制消息1允许复制消息\n        sendRedpacketStatus: 0, //\t0禁止发送红包1允许发送红包\n        id: sessionStorage.getItem('groupId')\n      },\n\n      value0: false,\n      value1: false,\n      value2: false,\n      value11: 0,\n      options: [\n        {\n          value: 1,\n          label: '1小时'\n        },\n        {\n          value: 3,\n          label: '3小时'\n        },\n        {\n          value: 12,\n          label: '12小时'\n        },\n        {\n          value: 24,\n          label: '24小时'\n        },\n        {\n          value: 72,\n          label: '3天'\n        },\n        {\n          value: 120,\n          label: '5天'\n        },\n        {\n          value: 168,\n          label: '7天'\n        }\n      ],\n      authStatus: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    gotoChat() {\n      let current = {\n        targetId: sessionStorage.getItem('groupId'),\n        uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\n      };\n      this.CLEAR_CHAT();\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          targetId: sessionStorage.getItem('groupId'),\n          timer: new Date().getTime(),\n          friendName: this.group.groupName,\n          uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\n        }\n      });\n    },\n    queryGroupByGroupId() {\n      queryGroupByGroupId({\n        groupId: sessionStorage.getItem('groupId')\n      }).then(res => {\n        if (res.code == 200) {\n          // var newobj={}\n          // for(let key in res.data){\n          //       newobj.key=res.data[key]===1?true:false\n          // }\n          this.group.screenshotsReminderStatus = res.data.screenshotsReminderStatus == 1 ? true : false; //截屏提醒\n          this.group.forbiddenWordsStatus = res.data.forbiddenWordsStatus == 1 ? true : false; //0关闭禁言1开启禁言\n          this.group.memberSingleChatStatus = res.data.memberSingleChatStatus == 1 ? true : false; //0禁止成员单聊1允许成员单聊\n          this.group.sendPicturesStatus = res.data.sendPicturesStatus == 1 ? true : false; //0禁止发送图片1允许发送图片\n          this.group.sendConnectionStatus = res.data.sendConnectionStatus == 1 ? true : false; //0禁止发送链接1允许发送链接\n          this.group.copyMessagesStauts = res.data.copyMessagesStauts == 1 ? true : false;\n          this.group.sendRedpacketStatus = res.data.sendRedpacketStatus == 1 ? true : false;\n          this.group.groupName = res.data.groupName;\n          this.group.saveTime = res.data.saveTime;\n        }\n      });\n    },\n    releaseGroup() {\n      this.$confirm('确定要解散社区吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          releaseGroup({\n            gId: this.$route.query.id\n          }).then(res => {\n            if (res.code == 200) {\n              this.$message.success(`你已成功解散社区${this.group.groupName}`);\n              let groupEncode = 'GROUP@' + sessionStorage.getItem('groupId') + '_messageList';\n              localStorage.setItem(groupEncode, '');\n              this.$router.push({ path: '/app/chat' });\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消操作'\n          });\n        });\n    },\n    setGroupBase() {\n      setGroupBase({\n        saveTime: this.group.saveTime,\n        screenshotsReminderStatus: this.group.screenshotsReminderStatus ? 1 : 0, //截屏提醒\n        forbiddenWordsStatus: this.group.forbiddenWordsStatus ? 1 : 0, //0关闭禁言1开启禁言\n        memberSingleChatStatus: this.group.memberSingleChatStatus ? 1 : 0, //0禁止成员单聊1允许成员单聊\n        sendPicturesStatus: this.group.sendPicturesStatus ? 1 : 0, //0禁止发送图片1允许发送图片\n        sendConnectionStatus: this.group.sendConnectionStatus ? 1 : 0, //0禁止发送链接1允许发送链接\n        copyMessagesStauts: this.group.copyMessagesStauts ? 1 : 0, //\t0禁止复制消息1允许复制消息\n        sendRedpacketStatus: this.group.sendRedpacketStatus ? 1 : 0, //0禁止发送红包1允许发送红包\n        id: sessionStorage.getItem('groupId')\n      }).then(res => {\n        if (res.code == 200) {\n          this.$message.success(res.msg);\n          this.queryGroupByGroupId();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.queryGroupByGroupId();\n    this.authStatus = sessionStorage.getItem('authStatus');\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.mess-header {\n  height: 38px;\n  background: #fff;\n  padding: 0 20px;\n  box-sizing: border-box;\n  border-bottom: 1px solid #dddddd;\n  span {\n    height: 20px;\n    line-height: 20px;\n    &:nth-child(2) {\n      margin: 0 12px;\n    }\n  }\n  .mess-nav span {\n    cursor: pointer;\n  }\n  .mess-nav img {\n    width: 20px;\n    height: 20px;\n  }\n  .mess-name {\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n}\n\n.setting {\n  padding-bottom: 20px;\n  .setting-user {\n    width: 100%;\n    height: 84px;\n    background: #fff;\n    padding: 0 20px;\n  }\n  .user-info {\n    width: 40px;\n  }\n  .user-head {\n    height: 40px;\n    width: 40px;\n    background: #ccc;\n    border-radius: 50%;\n    display: inline-block;\n  }\n  .user-name {\n    font-size: 14px;\n\n    font-weight: 400;\n    color: #191f25;\n    line-height: 30px;\n  }\n  .add {\n    padding: 0 0 28px 40px;\n  }\n  .setting-info {\n    width: 100%;\n    background: #fff;\n    margin-top: 10px;\n    padding: 20px;\n    box-sizing: border-box;\n    .tip {\n      font-weight: 700;\n      button {\n        margin-left: 20px;\n      }\n      span {\n        font-size: 14px;\n        color: #666;\n        padding-left: 20px;\n        font-weight: 400;\n      }\n    }\n    .cancellink {\n      padding-top: 10px;\n      label {\n        color: #2f54eb;\n        cursor: pointer;\n      }\n    }\n    .updown {\n      padding-top: 10px;\n      img {\n        cursor: pointer;\n      }\n    }\n    .grouppic {\n      width: 40px;\n      height: 40px;\n      border-radius: 20px;\n      border: #ddd solid 1px;\n    }\n    .leftside {\n      img,\n      label {\n        vertical-align: middle;\n        margin-right: 10px;\n      }\n    }\n    .grouprelate div.chat-top {\n      border-bottom: #ddd solid 1px;\n    }\n  }\n  .chat-top {\n    padding: 0 0 15px 0;\n    border-bottom: 1px solid #dddddd;\n    margin: 15px 0;\n    &:last-child {\n      border: none;\n      margin: 15px 0 0 0;\n    }\n    span {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n      line-height: 20px;\n    }\n    .shuoming {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgb(153, 153, 153);\n      line-height: 30px;\n    }\n  }\n  .setting-info2 {\n    width: 100%;\n    height: 102px;\n    background: #fff;\n    margin-top: 10px;\n    padding: 20px;\n    box-sizing: border-box;\n    span {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n      line-height: 20px;\n    }\n  }\n  .el-slider {\n    width: 100%;\n  }\n  .setting-info3 {\n    width: 100%;\n    background: #fff;\n    margin-top: 10px;\n    padding: 20px;\n    box-sizing: border-box;\n  }\n  .setting-footer {\n    margin: 30px 0 0 0;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".mess-header": {
          "height": "38px",
          "background": "#fff",
          "padding": "0 20px",
          "box-sizing": "border-box",
          "border-bottom": "1px solid #dddddd",
          "span": {
            "height": "20px",
            "line-height": "20px",
            "&:nth-child(2)": {
              "margin": "0 12px"
            }
          },
          ".mess-nav span": {
            "cursor": "pointer"
          },
          ".mess-nav img": {
            "width": "20px",
            "height": "20px"
          },
          ".mess-name": {
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          }
        },
        ".setting": {
          "padding-bottom": "20px",
          ".setting-user": {
            "width": "100%",
            "height": "84px",
            "background": "#fff",
            "padding": "0 20px"
          },
          ".user-info": {
            "width": "40px"
          },
          ".user-head": {
            "height": "40px",
            "width": "40px",
            "background": "#ccc",
            "border-radius": "50%",
            "display": "inline-block"
          },
          ".user-name": {
            "font-size": "14px",
            "font-weight": "400",
            "color": "#191f25",
            "line-height": "30px"
          },
          ".add": {
            "padding": "0 0 28px 40px"
          },
          ".setting-info": {
            "width": "100%",
            "background": "#fff",
            "margin-top": "10px",
            "padding": "20px",
            "box-sizing": "border-box",
            ".tip": {
              "font-weight": "700",
              "button": {
                "margin-left": "20px"
              },
              "span": {
                "font-size": "14px",
                "color": "#666",
                "padding-left": "20px",
                "font-weight": "400"
              }
            },
            ".cancellink": {
              "padding-top": "10px",
              "label": {
                "color": "#2f54eb",
                "cursor": "pointer"
              }
            },
            ".updown": {
              "padding-top": "10px",
              "img": {
                "cursor": "pointer"
              }
            },
            ".grouppic": {
              "width": "40px",
              "height": "40px",
              "border-radius": "20px",
              "border": "#ddd solid 1px"
            },
            ".leftside": {
              "img,      label": {
                "vertical-align": "middle",
                "margin-right": "10px"
              }
            },
            ".grouprelate div.chat-top": {
              "border-bottom": "#ddd solid 1px"
            }
          },
          ".chat-top": {
            "padding": "0 0 15px 0",
            "border-bottom": "1px solid #dddddd",
            "margin": "15px 0",
            "&:last-child": {
              "border": "none",
              "margin": "15px 0 0 0"
            },
            "span": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)",
              "line-height": "20px"
            },
            ".shuoming": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgb(153, 153, 153)",
              "line-height": "30px"
            }
          },
          ".setting-info2": {
            "width": "100%",
            "height": "102px",
            "background": "#fff",
            "margin-top": "10px",
            "padding": "20px",
            "box-sizing": "border-box",
            "span": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)",
              "line-height": "20px"
            }
          },
          ".el-slider": {
            "width": "100%"
          },
          ".setting-info3": {
            "width": "100%",
            "background": "#fff",
            "margin-top": "10px",
            "padding": "20px",
            "box-sizing": "border-box"
          },
          ".setting-footer": {
            "margin": "30px 0 0 0"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n</style>\n",
    "cssJson": [
      {}
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/information/setInfo.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"setting\" v-loading=\"uploadLoading\">\n    <div class=\"setting-box\">\n      <Title>编辑社区信息</Title>\n      <!-- <div class=\"mess-header flex align-center justify-between\">\n        <div class=\"flex align-center\">\n          <div class=\"mess-name\">群信息</div>\n          <div class=\"mess-set\" @click=\"setInfo=!setInfo\">编辑资料</div>\n        </div>\n        <div class=\"mess-nav flex align-center\">\n          <span @click=\"goMessage\">消息</span>\n          <span>搜寻</span>\n          <span>文件</span>\n          <span>公告</span>\n          <span>\n            <img src=\"../../../../assets/images/set.png\" alt />\n          </span>\n        </div>\n      </div> -->\n      <div>\n        <div class=\"information-qunhead flex align-center justify-between\">\n          <span class=\"information-head\">\n            <img :src=\"imgBox[0].file.src\" alt=\"\" v-if=\"imgBox.length != 0\" />\n            <img :src=\"groupData.groupAvatar\" alt=\"\" v-if=\"groupData.groupAvatar && imgBox.length == 0\" />\n            <img v-if=\"!groupData.groupAvatar && imgBox.length == 0\" src=\"../../../../assets/images/group.png\" alt=\"\" />\n          </span>\n          <span class=\"information-upload\" @click=\"fileClick\">\n            上传\n            <input\n              type=\"file\"\n              multiple=\"true\"\n              accept=\"image/jpeg,image/jpg, image/png\"\n              @change=\"changeHand($event)\"\n              ref=\"files\"\n              style=\"display: none\"\n            />\n          </span>\n        </div>\n        <div class=\"setting-info\">\n          <div class=\"chat-top flex justify-between\">\n            <span>社区ID</span>\n            <span>{{ groupData.groupCode }}</span>\n          </div>\n          <div class=\"chat-top flex justify-between\">\n            <span>社区名称</span>\n            <el-input\n              style=\"\n                border: none;\n                width: 200px;\n                font-size: 14px;\n                text-align: right;\n              \"\n              type=\"text\"\n              placeholder=\"请输入社区名称\"\n              v-model=\"groupData.groupName\"\n              maxlength=\"30\"\n              :rules=\"[\n                {\n                  min: 5,\n                  max: 200,\n                  message: '最多输入30个字符',\n                  trigger: 'blur'\n                }\n              ]\"\n              show-word-limit\n            />\n          </div>\n          <!-- <div class=\"chat-top flex justify-between\">\n            <span>群等级</span>\n            <span style=\"height:22px\">V{{groupData.groupLevel == null ? 1 : groupData.groupLevel}}</span>\n          </div> -->\n          <div class=\"chat-top flex justify-between\">\n            <span>社区类型</span>\n            <span>\n              <el-radio v-model=\"groupData.groupStatus\" :label=\"1\" @change=\"changeNum()\">公开社区</el-radio>\n              <el-radio v-model=\"groupData.groupStatus\" :label=\"2\" @change=\"changeNum()\">私密社区</el-radio>\n            </span>\n          </div>\n          <div class=\"qun-type flex flex-direction\">\n            <span style=\"margin: 0 0 10px 0\">社区简介</span>\n            <el-input\n              type=\"textarea\"\n              placeholder=\"请输入社区简介\"\n              :rows=\"6\"\n              v-model=\"groupData.groupProfile\"\n              maxlength=\"500\"\n              :rules=\"[{ max: 500, message: '最多输入500个字符', trigger: 'blur' }]\"\n              show-word-limit\n            ></el-input>\n          </div>\n        </div>\n      </div>\n      <div class=\"setting-footer flex justify-center\">\n        <el-button style=\"width: 320px\" type=\"info\" @click=\"cacel\">取消</el-button>\n        <el-button style=\"width: 320px\" type=\"primary\" @click=\"save\">保存</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Title from '../components/title.vue';\nimport { ser_group_infoById, set_group_avatar } from './server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title\n  },\n  data() {\n    //这里存放数据\n    return {\n      uploadLoading: false,\n      radio: '1',\n      setInfo: true,\n      groupId: sessionStorage.groupId,\n      authStatus: sessionStorage.authStatus,\n      groupData: {},\n      imgBox: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    changeNum() {},\n    //   上传头像\n    fileClick() {\n      this.$refs.files.click();\n    },\n    changeHand(e) {\n      this.groupData.avatorFile = e.target.files[0];\n\n      if (!e.target.files[0].size) return;\n      this.fileList(e.target);\n      e.target.value = '';\n    },\n    fileList(fileList) {\n      // 获取文件\n      let files = fileList.files;\n      for (let i = 0; i < files.length; i++) {\n        //判断是否为文件夹\n        if (files[i].type != '') {\n          this.fileAdd(files[i]);\n        }\n      }\n    },\n    fileAdd(file) {\n      this.imgBox = [];\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        file.src = reader.result;\n        this.imgBox.push({\n          file\n        });\n      };\n    },\n    cacel() {\n      this.$router.go(-1);\n    },\n    async save() {\n      this.uploadLoading = true;\n      let formData = new FormData();\n      //\n      formData.append('avatorFile', this.groupData.avatorFile);\n      let res = await set_group_avatar(\n        {\n          id: this.groupId,\n          groupProfile: this.groupData.groupProfile,\n          groupName: this.groupData.groupName,\n          groupStatus: this.groupData.groupStatus\n        },\n        formData\n      );\n      if (res.code == 200) {\n        this.$message.success(res.msg);\n        this.$store.dispatch('GET_LAST_MSG_LIST', {\n          userId: localStorage.userId,\n          lastTime: 0\n        });\n        this.$router.go(-1);\n        this.uploadLoading = false;\n      } else {\n        this.$message.error(res.msg);\n        this.uploadLoading = false;\n      }\n    },\n    goMessage() {\n      this.$router.push('/app/chat');\n    },\n    async getGroupInfo() {\n      let res = await ser_group_infoById({\n        groupId: this.groupId\n      });\n      this.groupData = res.data;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getGroupInfo();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"setting\" v-loading=\"uploadLoading\">\n    <div class=\"setting-box\">\n      <Title>编辑社区信息</Title>\n      <!-- <div class=\"mess-header flex align-center justify-between\">\n        <div class=\"flex align-center\">\n          <div class=\"mess-name\">群信息</div>\n          <div class=\"mess-set\" @click=\"setInfo=!setInfo\">编辑资料</div>\n        </div>\n        <div class=\"mess-nav flex align-center\">\n          <span @click=\"goMessage\">消息</span>\n          <span>搜寻</span>\n          <span>文件</span>\n          <span>公告</span>\n          <span>\n            <img src=\"../../../../assets/images/set.png\" alt />\n          </span>\n        </div>\n      </div> -->\n      <div>\n        <div class=\"information-qunhead flex align-center justify-between\">\n          <span class=\"information-head\">\n            <img :src=\"imgBox[0].file.src\" alt=\"\" v-if=\"imgBox.length != 0\" />\n            <img :src=\"groupData.groupAvatar\" alt=\"\" v-if=\"groupData.groupAvatar && imgBox.length == 0\" />\n            <img v-if=\"!groupData.groupAvatar && imgBox.length == 0\" src=\"../../../../assets/images/group.png\" alt=\"\" />\n          </span>\n          <span class=\"information-upload\" @click=\"fileClick\">\n            上传\n            <input\n              type=\"file\"\n              multiple=\"true\"\n              accept=\"image/jpeg,image/jpg, image/png\"\n              @change=\"changeHand($event)\"\n              ref=\"files\"\n              style=\"display: none\"\n            />\n          </span>\n        </div>\n        <div class=\"setting-info\">\n          <div class=\"chat-top flex justify-between\">\n            <span>社区ID</span>\n            <span>{{ groupData.groupCode }}</span>\n          </div>\n          <div class=\"chat-top flex justify-between\">\n            <span>社区名称</span>\n            <el-input\n              style=\"\n                border: none;\n                width: 200px;\n                font-size: 14px;\n                text-align: right;\n              \"\n              type=\"text\"\n              placeholder=\"请输入社区名称\"\n              v-model=\"groupData.groupName\"\n              maxlength=\"30\"\n              :rules=\"[\n                {\n                  min: 5,\n                  max: 200,\n                  message: '最多输入30个字符',\n                  trigger: 'blur'\n                }\n              ]\"\n              show-word-limit\n            />\n          </div>\n          <!-- <div class=\"chat-top flex justify-between\">\n            <span>群等级</span>\n            <span style=\"height:22px\">V{{groupData.groupLevel == null ? 1 : groupData.groupLevel}}</span>\n          </div> -->\n          <div class=\"chat-top flex justify-between\">\n            <span>社区类型</span>\n            <span>\n              <el-radio v-model=\"groupData.groupStatus\" :label=\"1\" @change=\"changeNum()\">公开社区</el-radio>\n              <el-radio v-model=\"groupData.groupStatus\" :label=\"2\" @change=\"changeNum()\">私密社区</el-radio>\n            </span>\n          </div>\n          <div class=\"qun-type flex flex-direction\">\n            <span style=\"margin: 0 0 10px 0\">社区简介</span>\n            <el-input\n              type=\"textarea\"\n              placeholder=\"请输入社区简介\"\n              :rows=\"6\"\n              v-model=\"groupData.groupProfile\"\n              maxlength=\"500\"\n              :rules=\"[{ max: 500, message: '最多输入500个字符', trigger: 'blur' }]\"\n              show-word-limit\n            ></el-input>\n          </div>\n        </div>\n      </div>\n      <div class=\"setting-footer flex justify-center\">\n        <el-button style=\"width: 320px\" type=\"info\" @click=\"cacel\">取消</el-button>\n        <el-button style=\"width: 320px\" type=\"primary\" @click=\"save\">保存</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Title from '../components/title.vue';\nimport { ser_group_infoById, set_group_avatar } from './server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title\n  },\n  data() {\n    //这里存放数据\n    return {\n      uploadLoading: false,\n      radio: '1',\n      setInfo: true,\n      groupId: sessionStorage.groupId,\n      authStatus: sessionStorage.authStatus,\n      groupData: {},\n      imgBox: []\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    changeNum() {},\n    //   上传头像\n    fileClick() {\n      this.$refs.files.click();\n    },\n    changeHand(e) {\n      this.groupData.avatorFile = e.target.files[0];\n\n      if (!e.target.files[0].size) return;\n      this.fileList(e.target);\n      e.target.value = '';\n    },\n    fileList(fileList) {\n      // 获取文件\n      let files = fileList.files;\n      for (let i = 0; i < files.length; i++) {\n        //判断是否为文件夹\n        if (files[i].type != '') {\n          this.fileAdd(files[i]);\n        }\n      }\n    },\n    fileAdd(file) {\n      this.imgBox = [];\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        file.src = reader.result;\n        this.imgBox.push({\n          file\n        });\n      };\n    },\n    cacel() {\n      this.$router.go(-1);\n    },\n    async save() {\n      this.uploadLoading = true;\n      let formData = new FormData();\n      //\n      formData.append('avatorFile', this.groupData.avatorFile);\n      let res = await set_group_avatar(\n        {\n          id: this.groupId,\n          groupProfile: this.groupData.groupProfile,\n          groupName: this.groupData.groupName,\n          groupStatus: this.groupData.groupStatus\n        },\n        formData\n      );\n      if (res.code == 200) {\n        this.$message.success(res.msg);\n        this.$store.dispatch('GET_LAST_MSG_LIST', {\n          userId: localStorage.userId,\n          lastTime: 0\n        });\n        this.$router.go(-1);\n        this.uploadLoading = false;\n      } else {\n        this.$message.error(res.msg);\n        this.uploadLoading = false;\n      }\n    },\n    goMessage() {\n      this.$router.push('/app/chat');\n    },\n    async getGroupInfo() {\n      let res = await ser_group_infoById({\n        groupId: this.groupId\n      });\n      this.groupData = res.data;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getGroupInfo();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.mess-header {\n  height: 38px;\n  background: #fff;\n  padding: 0 20px;\n  box-sizing: border-box;\n  border-bottom: 1px solid #dddddd;\n  -webkit-app-region: drag;\n  span {\n    height: 20px;\n    line-height: 20px;\n    &:nth-child(2) {\n      margin: 0 12px;\n    }\n    &:nth-child(4) {\n      margin: 0 12px;\n    }\n  }\n  .mess-nav span {\n    cursor: pointer;\n  }\n  .mess-nav img {\n    width: 20px;\n    height: 20px;\n  }\n  .mess-name {\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n}\n\n.setting {\n  .setting-user {\n    width: 100%;\n    height: 84px;\n    background: #fff;\n    padding: 0 20px;\n  }\n  .user-info {\n    width: 40px;\n  }\n  .user-head {\n    height: 40px;\n    width: 40px;\n    background: #ccc;\n    border-radius: 50%;\n    display: inline-block;\n  }\n  .user-name {\n    font-size: 14px;\n\n    font-weight: 400;\n    color: #191f25;\n    line-height: 30px;\n  }\n  .add {\n    padding: 0 0 28px 40px;\n  }\n  .setting-info {\n    width: 100%;\n    height: 380px;\n    background: #fff;\n    margin-top: 10px;\n    padding: 20px;\n    box-sizing: border-box;\n  }\n  .chat-top {\n    padding: 0 0 15px 0;\n    border-bottom: 1px solid #dddddd;\n    &:nth-child(2) {\n      margin: 15px 0;\n    }\n    &:nth-child(3) {\n      margin: 15px 0;\n    }\n    span {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n      line-height: 20px;\n    }\n    .shuoming {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgb(153, 153, 153);\n      line-height: 30px;\n    }\n  }\n  .setting-info2 {\n    width: 100%;\n    height: 102px;\n    background: #fff;\n    margin-top: 10px;\n    padding: 20px;\n    box-sizing: border-box;\n    span {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n      line-height: 20px;\n    }\n  }\n  .el-slider {\n    width: 100%;\n  }\n  .setting-info3 {\n    width: 100%;\n    height: 190px;\n    background: #fff;\n    margin-top: 10px;\n    padding: 20px;\n    box-sizing: border-box;\n  }\n  .setting-footer {\n    margin: 30px 0 0 0;\n  }\n  .qun-type {\n    margin: 15px 0;\n    span:nth-child(1) {\n      font-size: 15px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n      line-height: 20px;\n    }\n    span:nth-child(2) {\n      font-size: 15px;\n\n      font-weight: 400;\n      color: rgba(153, 153, 153, 1);\n      line-height: 20px;\n      margin-top: 15px;\n    }\n    textarea {\n      width: 700px;\n      font-size: 14px;\n      height: 100px;\n      border-radius: 5px;\n      border: 1px solid #ccc;\n      word-break: break-all;\n    }\n  }\n  .information-qunhead {\n    width: 100%;\n    height: 80px;\n    background: #fff;\n    margin: 0 0 10px 0;\n  }\n  .information-head {\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n    background: #ccc;\n    display: inline-block;\n    margin: 0 0 0 20px;\n    img {\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n    }\n  }\n  .mess-set {\n    font-size: 15px;\n    cursor: pointer;\n\n    font-weight: 400;\n    color: rgba(47, 84, 235, 1);\n    line-height: 20px;\n    margin-left: 20px;\n  }\n  .setting-footer {\n    margin: 30px 0 0 0;\n  }\n  .information-upload {\n    width: 80px;\n    height: 40px;\n    background: rgba(47, 84, 235, 1);\n    border-radius: 4px;\n    margin: 0 20px 0 0;\n    text-align: center;\n    cursor: pointer;\n    line-height: 40px;\n    color: #fff;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".mess-header": {
          "height": "38px",
          "background": "#fff",
          "padding": "0 20px",
          "box-sizing": "border-box",
          "border-bottom": "1px solid #dddddd",
          "-webkit-app-region": "drag",
          "span": {
            "height": "20px",
            "line-height": "20px",
            "&:nth-child(2)": {
              "margin": "0 12px"
            },
            "&:nth-child(4)": {
              "margin": "0 12px"
            }
          },
          ".mess-nav span": {
            "cursor": "pointer"
          },
          ".mess-nav img": {
            "width": "20px",
            "height": "20px"
          },
          ".mess-name": {
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          }
        },
        ".setting": {
          ".setting-user": {
            "width": "100%",
            "height": "84px",
            "background": "#fff",
            "padding": "0 20px"
          },
          ".user-info": {
            "width": "40px"
          },
          ".user-head": {
            "height": "40px",
            "width": "40px",
            "background": "#ccc",
            "border-radius": "50%",
            "display": "inline-block"
          },
          ".user-name": {
            "font-size": "14px",
            "font-weight": "400",
            "color": "#191f25",
            "line-height": "30px"
          },
          ".add": {
            "padding": "0 0 28px 40px"
          },
          ".setting-info": {
            "width": "100%",
            "height": "380px",
            "background": "#fff",
            "margin-top": "10px",
            "padding": "20px",
            "box-sizing": "border-box"
          },
          ".chat-top": {
            "padding": "0 0 15px 0",
            "border-bottom": "1px solid #dddddd",
            "&:nth-child(2)": {
              "margin": "15px 0"
            },
            "&:nth-child(3)": {
              "margin": "15px 0"
            },
            "span": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)",
              "line-height": "20px"
            },
            ".shuoming": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgb(153, 153, 153)",
              "line-height": "30px"
            }
          },
          ".setting-info2": {
            "width": "100%",
            "height": "102px",
            "background": "#fff",
            "margin-top": "10px",
            "padding": "20px",
            "box-sizing": "border-box",
            "span": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)",
              "line-height": "20px"
            }
          },
          ".el-slider": {
            "width": "100%"
          },
          ".setting-info3": {
            "width": "100%",
            "height": "190px",
            "background": "#fff",
            "margin-top": "10px",
            "padding": "20px",
            "box-sizing": "border-box"
          },
          ".setting-footer": {
            "margin": "30px 0 0 0"
          },
          ".qun-type": {
            "margin": "15px 0",
            "span:nth-child(1)": {
              "font-size": "15px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)",
              "line-height": "20px"
            },
            "span:nth-child(2)": {
              "font-size": "15px",
              "font-weight": "400",
              "color": "rgba(153, 153, 153, 1)",
              "line-height": "20px",
              "margin-top": "15px"
            },
            "textarea": {
              "width": "700px",
              "font-size": "14px",
              "height": "100px",
              "border-radius": "5px",
              "border": "1px solid #ccc",
              "word-break": "break-all"
            }
          },
          ".information-qunhead": {
            "width": "100%",
            "height": "80px",
            "background": "#fff",
            "margin": "0 0 10px 0"
          },
          ".information-head": {
            "width": "48px",
            "height": "48px",
            "border-radius": "50%",
            "background": "#ccc",
            "display": "inline-block",
            "margin": "0 0 0 20px",
            "img": {
              "width": "48px",
              "height": "48px",
              "border-radius": "50%"
            }
          },
          ".mess-set": {
            "font-size": "15px",
            "cursor": "pointer",
            "font-weight": "400",
            "color": "rgba(47, 84, 235, 1)",
            "line-height": "20px",
            "margin-left": "20px"
          },
          ".information-upload": {
            "width": "80px",
            "height": "40px",
            "background": "rgba(47, 84, 235, 1)",
            "border-radius": "4px",
            "margin": "0 20px 0 0",
            "text-align": "center",
            "cursor": "pointer",
            "line-height": "40px",
            "color": "#fff"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/information/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"setting\">\n    <div class=\"setting-box\">\n      <Title :authStatus=\"authStatus\">社区信息</Title>\n      <!-- <div class=\"mess-header flex align-center justify-between\">\n        <div class=\"flex align-center\">\n          <div class=\"mess-name\">群信息</div>\n          <div class=\"mess-set\" @click=\"setInfo=!setInfo\">编辑资料</div>\n        </div>\n        <div class=\"mess-nav flex align-center\">\n          <span @click=\"goMessage\">消息</span>\n          <span>搜寻</span>\n          <span>文件</span>\n          <span>公告</span>\n          <span>\n            <img src=\"../../../../assets/images/set.png\" alt />\n          </span>\n        </div>\n      </div> -->\n      <div v-if=\"setInfo\">\n        <div class=\"information-qunhead flex align-center\">\n          <div class=\"information-head\">\n            <img v-if=\"groupData.groupAvatar\" :src=\"groupData.groupAvatar\" alt=\"\" />\n            <img v-else src=\"../../../../assets/images/group.png\" alt=\"\" />\n          </div>\n          <el-button type=\"primary\" v-if=\"authStatus == 1 || authStatus == 2\" @click=\"toEdit\">编辑资料</el-button>\n        </div>\n        <div class=\"setting-info\">\n          <div class=\"chat-top flex justify-between\">\n            <span>社区ID</span>\n            <span>{{ groupData.groupCode }}</span>\n          </div>\n          <div class=\"chat-top flex justify-between\">\n            <span>社区名称</span>\n            <span>{{ groupData.groupName }}</span>\n          </div>\n          <!-- <div class=\"chat-top flex justify-between\">\n            <span>社区等级</span>\n            <span style=\"height:22px\">V{{groupData.groupLevel == null ? 1 : groupData.groupLevel}}</span>\n          </div> -->\n          <div class=\"chat-top flex justify-between\">\n            <span>社区类型</span>\n            <span v-if=\"groupData.groupStatus == 1\">公开</span>\n            <span v-if=\"groupData.groupStatus == 2\">私密</span>\n          </div>\n          <div class=\"qun-type flex flex-direction\">\n            <span>社区简介</span>\n            <span>{{ groupData.groupProfile }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Title from '../components/title.vue';\nimport { ser_group_infoById } from './server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title\n  },\n  data() {\n    //这里存放数据\n    return {\n      radio: '1',\n      setInfo: true,\n      groupId: sessionStorage.groupId,\n      authStatus: sessionStorage.authStatus,\n      groupData: {}\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    preview(item) {\n      // 预览图片\n      let arrImg = [];\n      arrImg.push(item);\n      this.$imagePreview({\n        images: arrImg,\n        index: 0\n      });\n    },\n    goMessage() {\n      this.$router.push('/app/chat');\n    },\n    async getGroupInfo() {\n      let res = await ser_group_infoById({\n        groupId: this.groupId\n      });\n      this.groupData = res.data;\n    },\n    toEdit() {\n      this.$router.push('/app/chat/group/setGroupInfo');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getGroupInfo();\n    this.authStatus = sessionStorage.getItem('authStatus');\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"setting\">\n    <div class=\"setting-box\">\n      <Title :authStatus=\"authStatus\">社区信息</Title>\n      <!-- <div class=\"mess-header flex align-center justify-between\">\n        <div class=\"flex align-center\">\n          <div class=\"mess-name\">群信息</div>\n          <div class=\"mess-set\" @click=\"setInfo=!setInfo\">编辑资料</div>\n        </div>\n        <div class=\"mess-nav flex align-center\">\n          <span @click=\"goMessage\">消息</span>\n          <span>搜寻</span>\n          <span>文件</span>\n          <span>公告</span>\n          <span>\n            <img src=\"../../../../assets/images/set.png\" alt />\n          </span>\n        </div>\n      </div> -->\n      <div v-if=\"setInfo\">\n        <div class=\"information-qunhead flex align-center\">\n          <div class=\"information-head\">\n            <img v-if=\"groupData.groupAvatar\" :src=\"groupData.groupAvatar\" alt=\"\" />\n            <img v-else src=\"../../../../assets/images/group.png\" alt=\"\" />\n          </div>\n          <el-button type=\"primary\" v-if=\"authStatus == 1 || authStatus == 2\" @click=\"toEdit\">编辑资料</el-button>\n        </div>\n        <div class=\"setting-info\">\n          <div class=\"chat-top flex justify-between\">\n            <span>社区ID</span>\n            <span>{{ groupData.groupCode }}</span>\n          </div>\n          <div class=\"chat-top flex justify-between\">\n            <span>社区名称</span>\n            <span>{{ groupData.groupName }}</span>\n          </div>\n          <!-- <div class=\"chat-top flex justify-between\">\n            <span>社区等级</span>\n            <span style=\"height:22px\">V{{groupData.groupLevel == null ? 1 : groupData.groupLevel}}</span>\n          </div> -->\n          <div class=\"chat-top flex justify-between\">\n            <span>社区类型</span>\n            <span v-if=\"groupData.groupStatus == 1\">公开</span>\n            <span v-if=\"groupData.groupStatus == 2\">私密</span>\n          </div>\n          <div class=\"qun-type flex flex-direction\">\n            <span>社区简介</span>\n            <span>{{ groupData.groupProfile }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Title from '../components/title.vue';\nimport { ser_group_infoById } from './server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title\n  },\n  data() {\n    //这里存放数据\n    return {\n      radio: '1',\n      setInfo: true,\n      groupId: sessionStorage.groupId,\n      authStatus: sessionStorage.authStatus,\n      groupData: {}\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    preview(item) {\n      // 预览图片\n      let arrImg = [];\n      arrImg.push(item);\n      this.$imagePreview({\n        images: arrImg,\n        index: 0\n      });\n    },\n    goMessage() {\n      this.$router.push('/app/chat');\n    },\n    async getGroupInfo() {\n      let res = await ser_group_infoById({\n        groupId: this.groupId\n      });\n      this.groupData = res.data;\n    },\n    toEdit() {\n      this.$router.push('/app/chat/group/setGroupInfo');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getGroupInfo();\n    this.authStatus = sessionStorage.getItem('authStatus');\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.mess-header {\n  height: 38px;\n  background: #fff;\n  -webkit-app-region: drag;\n  padding: 0 20px;\n  box-sizing: border-box;\n  border-bottom: 1px solid #dddddd;\n  span {\n    height: 20px;\n    line-height: 20px;\n    &:nth-child(2) {\n      margin: 0 12px;\n    }\n    &:nth-child(4) {\n      margin: 0 12px;\n    }\n  }\n  .mess-nav span {\n    cursor: pointer;\n  }\n  .mess-nav img {\n    width: 20px;\n    height: 20px;\n  }\n  .mess-name {\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n}\n\n.setting {\n  .setting-user {\n    width: 100%;\n    height: 84px;\n    background: #fff;\n    padding: 0 20px;\n  }\n  .user-info {\n    width: 40px;\n  }\n  .user-head {\n    height: 40px;\n    width: 40px;\n    background: #ccc;\n    border-radius: 50%;\n    display: inline-block;\n  }\n  .user-name {\n    font-size: 14px;\n\n    font-weight: 400;\n    color: #191f25;\n    line-height: 30px;\n  }\n  .add {\n    padding: 0 0 28px 40px;\n  }\n  .setting-info {\n    width: 100%;\n    background: #fff;\n    margin-top: 10px;\n    padding: 20px;\n    box-sizing: border-box;\n  }\n  .chat-top {\n    padding: 0 0 15px 0;\n    border-bottom: 1px solid #dddddd;\n    &:nth-child(2) {\n      margin: 15px 0;\n    }\n    &:nth-child(3) {\n      margin: 15px 0;\n    }\n    span {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n      line-height: 20px;\n    }\n    .shuoming {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgb(153, 153, 153);\n      line-height: 30px;\n    }\n  }\n  .setting-info2 {\n    width: 100%;\n    height: 102px;\n    background: #fff;\n    margin-top: 10px;\n    padding: 20px;\n    box-sizing: border-box;\n    span {\n      font-size: 14px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n      line-height: 20px;\n    }\n  }\n  .el-slider {\n    width: 100%;\n  }\n  .setting-info3 {\n    width: 100%;\n    height: 190px;\n    background: #fff;\n    margin-top: 10px;\n    padding: 20px;\n    box-sizing: border-box;\n  }\n  .setting-footer {\n    margin: 30px 0 0 0;\n  }\n  .qun-type {\n    margin: 15px 0;\n    span:nth-child(1) {\n      font-size: 15px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n      line-height: 20px;\n    }\n    span:nth-child(2) {\n      font-size: 15px;\n\n      font-weight: 400;\n      color: rgba(153, 153, 153, 1);\n      line-height: 20px;\n      margin-top: 15px;\n    }\n    textarea {\n      width: 700px;\n      font-size: 14px;\n      height: 100px;\n      border-radius: 5px;\n      border: 1px solid #ccc;\n      word-break: break-all;\n    }\n  }\n  .information-qunhead {\n    width: 100%;\n    height: 80px;\n    background: #fff;\n    box-sizing: border-box;\n    margin: 0 0 10px 0;\n    padding: 0 20px;\n    justify-content: space-between;\n  }\n  .information-head {\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n    background: #ccc;\n    display: inline-block;\n    img {\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n    }\n  }\n  .mess-set {\n    font-size: 15px;\n    cursor: pointer;\n\n    font-weight: 400;\n    color: rgba(47, 84, 235, 1);\n    line-height: 20px;\n    margin-left: 20px;\n  }\n  .setting-footer {\n    margin: 30px 0 0 0;\n  }\n  .information-upload {\n    width: 80px;\n    height: 40px;\n    background: rgba(47, 84, 235, 1);\n    border-radius: 4px;\n    margin: 0 20px 0 0;\n    text-align: center;\n    cursor: pointer;\n    line-height: 40px;\n    color: #fff;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".mess-header": {
          "height": "38px",
          "background": "#fff",
          "-webkit-app-region": "drag",
          "padding": "0 20px",
          "box-sizing": "border-box",
          "border-bottom": "1px solid #dddddd",
          "span": {
            "height": "20px",
            "line-height": "20px",
            "&:nth-child(2)": {
              "margin": "0 12px"
            },
            "&:nth-child(4)": {
              "margin": "0 12px"
            }
          },
          ".mess-nav span": {
            "cursor": "pointer"
          },
          ".mess-nav img": {
            "width": "20px",
            "height": "20px"
          },
          ".mess-name": {
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          }
        },
        ".setting": {
          ".setting-user": {
            "width": "100%",
            "height": "84px",
            "background": "#fff",
            "padding": "0 20px"
          },
          ".user-info": {
            "width": "40px"
          },
          ".user-head": {
            "height": "40px",
            "width": "40px",
            "background": "#ccc",
            "border-radius": "50%",
            "display": "inline-block"
          },
          ".user-name": {
            "font-size": "14px",
            "font-weight": "400",
            "color": "#191f25",
            "line-height": "30px"
          },
          ".add": {
            "padding": "0 0 28px 40px"
          },
          ".setting-info": {
            "width": "100%",
            "background": "#fff",
            "margin-top": "10px",
            "padding": "20px",
            "box-sizing": "border-box"
          },
          ".chat-top": {
            "padding": "0 0 15px 0",
            "border-bottom": "1px solid #dddddd",
            "&:nth-child(2)": {
              "margin": "15px 0"
            },
            "&:nth-child(3)": {
              "margin": "15px 0"
            },
            "span": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)",
              "line-height": "20px"
            },
            ".shuoming": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgb(153, 153, 153)",
              "line-height": "30px"
            }
          },
          ".setting-info2": {
            "width": "100%",
            "height": "102px",
            "background": "#fff",
            "margin-top": "10px",
            "padding": "20px",
            "box-sizing": "border-box",
            "span": {
              "font-size": "14px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)",
              "line-height": "20px"
            }
          },
          ".el-slider": {
            "width": "100%"
          },
          ".setting-info3": {
            "width": "100%",
            "height": "190px",
            "background": "#fff",
            "margin-top": "10px",
            "padding": "20px",
            "box-sizing": "border-box"
          },
          ".setting-footer": {
            "margin": "30px 0 0 0"
          },
          ".qun-type": {
            "margin": "15px 0",
            "span:nth-child(1)": {
              "font-size": "15px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)",
              "line-height": "20px"
            },
            "span:nth-child(2)": {
              "font-size": "15px",
              "font-weight": "400",
              "color": "rgba(153, 153, 153, 1)",
              "line-height": "20px",
              "margin-top": "15px"
            },
            "textarea": {
              "width": "700px",
              "font-size": "14px",
              "height": "100px",
              "border-radius": "5px",
              "border": "1px solid #ccc",
              "word-break": "break-all"
            }
          },
          ".information-qunhead": {
            "width": "100%",
            "height": "80px",
            "background": "#fff",
            "box-sizing": "border-box",
            "margin": "0 0 10px 0",
            "padding": "0 20px",
            "justify-content": "space-between"
          },
          ".information-head": {
            "width": "48px",
            "height": "48px",
            "border-radius": "50%",
            "background": "#ccc",
            "display": "inline-block",
            "img": {
              "width": "48px",
              "height": "48px",
              "border-radius": "50%"
            }
          },
          ".mess-set": {
            "font-size": "15px",
            "cursor": "pointer",
            "font-weight": "400",
            "color": "rgba(47, 84, 235, 1)",
            "line-height": "20px",
            "margin-left": "20px"
          },
          ".information-upload": {
            "width": "80px",
            "height": "40px",
            "background": "rgba(47, 84, 235, 1)",
            "border-radius": "4px",
            "margin": "0 20px 0 0",
            "text-align": "center",
            "cursor": "pointer",
            "line-height": "40px",
            "color": "#fff"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/files/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"files\">\n    <Title>社区文件</Title>\n    <div class=\"files-main\">\n      <h3>共35个文件</h3>\n      <div class=\"files-info\">\n        <ul>\n          <li class=\"files-detail-title flex justify-between\">\n            <span>文件</span>\n            <span>更新时间</span>\n            <span>大小</span>\n            <span>发布者</span>\n            <span>操作</span>\n          </li>\n        </ul>\n        <ul class=\"files-list\">\n          <li class=\"files-detail-info flex justify-between\">\n            <span class=\"flex align-center\">\n              <img width=\"22\" src=\"../../../../assets/images/file_ppt.png\" alt />\n              <span style=\"margin: 0 0 0 5px\">Type something</span>\n            </span>\n            <span>1977-10-17 07:00:00</span>\n            <span>12.3kb</span>\n            <span>John Gomez</span>\n            <span class=\"flex align-center\">\n              <img width=\"26\" src=\"../../../../assets/images/file_xiazai.png\" alt />\n            </span>\n          </li>\n          <li class=\"files-detail-info flex justify-between\">\n            <span class=\"flex align-center\">\n              <img width=\"22\" src=\"../../../../assets/images/file_ppt.png\" alt />\n              <span style=\"margin: 0 0 0 5px\">Type something</span>\n            </span>\n            <span>1977-10-17 07:00:00</span>\n            <span>12.3kb</span>\n            <span>John Gomez</span>\n            <span class=\"flex align-center\">\n              <img width=\"26\" src=\"../../../../assets/images/file_xiazai.png\" alt />\n            </span>\n          </li>\n          <li class=\"files-detail-info flex justify-between\">\n            <span class=\"flex align-center\">\n              <img width=\"22\" src=\"../../../../assets/images/file_ppt.png\" alt />\n              <span style=\"margin: 0 0 0 5px\">Type something</span>\n            </span>\n            <span>1977-10-17 07:00:00</span>\n            <span>12.3kb</span>\n            <span>John Gomez</span>\n            <span class=\"flex align-center\">\n              <img width=\"26\" src=\"../../../../assets/images/file_xiazai.png\" alt />\n            </span>\n          </li>\n          <li class=\"files-detail-info flex justify-between\">\n            <span class=\"flex align-center\">\n              <img width=\"22\" src=\"../../../../assets/images/file_ppt.png\" alt />\n              <span style=\"margin: 0 0 0 5px\">Type something</span>\n            </span>\n            <span>1977-10-17 07:00:00</span>\n            <span>12.3kb</span>\n            <span>John Gomez</span>\n            <span class=\"flex align-center\">\n              <img width=\"26\" src=\"../../../../assets/images/file_xiazai.png\" alt />\n            </span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Title from '../components/title.vue';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { Title },\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"files\">\n    <Title>社区文件</Title>\n    <div class=\"files-main\">\n      <h3>共35个文件</h3>\n      <div class=\"files-info\">\n        <ul>\n          <li class=\"files-detail-title flex justify-between\">\n            <span>文件</span>\n            <span>更新时间</span>\n            <span>大小</span>\n            <span>发布者</span>\n            <span>操作</span>\n          </li>\n        </ul>\n        <ul class=\"files-list\">\n          <li class=\"files-detail-info flex justify-between\">\n            <span class=\"flex align-center\">\n              <img width=\"22\" src=\"../../../../assets/images/file_ppt.png\" alt />\n              <span style=\"margin: 0 0 0 5px\">Type something</span>\n            </span>\n            <span>1977-10-17 07:00:00</span>\n            <span>12.3kb</span>\n            <span>John Gomez</span>\n            <span class=\"flex align-center\">\n              <img width=\"26\" src=\"../../../../assets/images/file_xiazai.png\" alt />\n            </span>\n          </li>\n          <li class=\"files-detail-info flex justify-between\">\n            <span class=\"flex align-center\">\n              <img width=\"22\" src=\"../../../../assets/images/file_ppt.png\" alt />\n              <span style=\"margin: 0 0 0 5px\">Type something</span>\n            </span>\n            <span>1977-10-17 07:00:00</span>\n            <span>12.3kb</span>\n            <span>John Gomez</span>\n            <span class=\"flex align-center\">\n              <img width=\"26\" src=\"../../../../assets/images/file_xiazai.png\" alt />\n            </span>\n          </li>\n          <li class=\"files-detail-info flex justify-between\">\n            <span class=\"flex align-center\">\n              <img width=\"22\" src=\"../../../../assets/images/file_ppt.png\" alt />\n              <span style=\"margin: 0 0 0 5px\">Type something</span>\n            </span>\n            <span>1977-10-17 07:00:00</span>\n            <span>12.3kb</span>\n            <span>John Gomez</span>\n            <span class=\"flex align-center\">\n              <img width=\"26\" src=\"../../../../assets/images/file_xiazai.png\" alt />\n            </span>\n          </li>\n          <li class=\"files-detail-info flex justify-between\">\n            <span class=\"flex align-center\">\n              <img width=\"22\" src=\"../../../../assets/images/file_ppt.png\" alt />\n              <span style=\"margin: 0 0 0 5px\">Type something</span>\n            </span>\n            <span>1977-10-17 07:00:00</span>\n            <span>12.3kb</span>\n            <span>John Gomez</span>\n            <span class=\"flex align-center\">\n              <img width=\"26\" src=\"../../../../assets/images/file_xiazai.png\" alt />\n            </span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Title from '../components/title.vue';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { Title },\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.files-main {\n  width: 100%;\n  background: #fff;\n  height: 850px;\n  h3 {\n    font-size: 15px;\n\n    font-weight: 400;\n    color: rgba(51, 51, 51, 1);\n    line-height: 20px;\n    padding: 20px;\n  }\n  .files-detail-title {\n    background: #9297a3;\n    font-size: 15px;\n\n    font-weight: 400;\n    color: rgba(255, 255, 255, 1);\n    line-height: 30px;\n    padding: 0 20px;\n    span {\n      width: 150px;\n      height: 30px;\n      &:nth-child(1) {\n        width: 200px;\n      }\n      &:nth-child(2) {\n        width: 200px;\n      }\n    }\n  }\n  .files-detail-info {\n    background: #fff;\n    font-size: 15px;\n\n    font-weight: 400;\n    color: #333;\n    line-height: 60px;\n    padding: 0 20px;\n    span {\n      width: 150px;\n      height: 60px;\n      &:nth-child(1) {\n        width: 200px;\n      }\n      &:nth-child(2) {\n        width: 200px;\n      }\n    }\n  }\n  .files-list {\n    li {\n      span:nth-child(1) {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n    li:nth-child(even) {\n      background: #f7f7fa;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".files-main": {
          "width": "100%",
          "background": "#fff",
          "height": "850px",
          "h3": {
            "font-size": "15px",
            "font-weight": "400",
            "color": "rgba(51, 51, 51, 1)",
            "line-height": "20px",
            "padding": "20px"
          },
          ".files-detail-title": {
            "background": "#9297a3",
            "font-size": "15px",
            "font-weight": "400",
            "color": "rgba(255, 255, 255, 1)",
            "line-height": "30px",
            "padding": "0 20px",
            "span": {
              "width": "150px",
              "height": "30px",
              "&:nth-child(1)": {
                "width": "200px"
              },
              "&:nth-child(2)": {
                "width": "200px"
              }
            }
          },
          ".files-detail-info": {
            "background": "#fff",
            "font-size": "15px",
            "font-weight": "400",
            "color": "#333",
            "line-height": "60px",
            "padding": "0 20px",
            "span": {
              "width": "150px",
              "height": "60px",
              "&:nth-child(1)": {
                "width": "200px"
              },
              "&:nth-child(2)": {
                "width": "200px"
              }
            }
          },
          ".files-list": {
            "li": {
              "span:nth-child(1)": {
                "text-overflow": "ellipsis",
                "overflow": "hidden",
                "white-space": "nowrap"
              }
            },
            "li:nth-child(even)": {
              "background": "#f7f7fa"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/member/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\">",
      "1": "<style lang=\"less\" scoped>",
      "2": "<style lang=\"less\">"
    },
    "importInfo": {},
    "keepContent": "<!-- 群成员 -->\n<template>\n  <el-row v-loading=\"loading\" element-loading-spinner=\"el-icon-loading\" :element-loading-text=\"$t('Universal_0025')\">\n    <el-col :span=\"24\" class=\"gruop-members-wrap flex flex-direction\">\n      <div class=\"title\">\n        <el-select size=\"medium\" v-model=\"AllMember\" @change=\"changeSec\" placeholder=\"\" class=\"conditionSelec\">\n          <el-option v-for=\"item in memberSelect\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n        </el-select>\n        <i class=\"el-icon-close close-i\" @click=\"handleClose\"></i>\n      </div>\n    <div class=\"serach\">\n      <el-input\n        class=\"serach-input\"\n        @input=\"search\"\n        v-model=\"SeachInput\"\n        :placeholder=\"$t('Universal_0058')\"\n        prefix-icon=\"el-icon-search\"\n        clearable\n        id=\"groupSearch\"\n        :code=\"groupSystemAbleMem\"\n        @blur=\"removeFun\"\n      ></el-input>\n      <img @click=\"inviteMemHand\" class=\"invite-mem\" src=\"../../../../assets/images/invite.png\" alt />\n    </div>\n    <div class=\"gruop-members-con flex-sub flex-direction flex\" >\n      <ul \n        class=\"gruop-members-list\"\n        v-infinite-scroll=\"loadMore\"\n        infinite-scroll-disabled=\"false\"\n        infinite-scroll-distance=\"20\"\n        id=\"scrollBox\"\n      >\n        <li\n          v-for=\"(item, index) in items\"\n          :key=\"item.userId\"\n          @contextmenu.prevent=\"rightClick($event, item)\"\n          @mouseover=\"onMouseover(index)\"\n          :id=\"item.inviteCode\"\n          :class=\"{ active: index === currentIndex ,active2:index == indexAt}\"\n        >\n          <div :id=\"'popoverShow' + item.userId\" class=\"gruop-members-name\" @click=\"lookCard(item.userId)\">\n            <MemberIcon\n              :image=\"item.userHeadImg || item.friendHeadImg\"\n              :auth-status=\"'' + item.authStatus\"\n              :userRank=\"item.userRank\"\n              :vipType=\"item.vipType\"\n            />\n          </div>\n          <div style=\"width:125px\">\n            <div class=\"flex flex-direction name-notes-id group-members-name\">\n              <div class=\"name-wrap\" :title=\"item.groupMemberName\">\n                <span>{{ item.groupMemberName }}</span>\n              </div>\n              <!-- <div\n                class=\"name-wrap\"\n                v-show=\"item.showNickName && SeachInput\"\n                :title=\"item.nickName\"\n              >\n                <span>{{ item.nickName }}</span>\n              </div> -->\n              <LevelIcon\n                :inviteCode=\"item.inviteCode\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n              />\n            </div>\n            <div style=\"padding-top: 2px\">\n              <LuckIdIcon\n                :inviteCode=\"item.inviteCode\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n                :listFlag=\"false\"\n              />\n            </div>\n          </div>\n          <div class=\"gruop-members-manster\">\n            <img src=\"../../../../assets/images/nowords.png\" alt class=\"tips img_16\"\n                 v-if=\"item.authStatus == 3 && item.forbiddenWordsStatus == 1\"/>\n          </div>\n        </li>\n        <div v-show=\"(!items.length > 0 && !loading)\" class=\"no-results\">\n          <img src=\"../../../../assets/images/web.png\" class=\"img_search\" />\n          <p>{{ $t('Universal_0173') }}</p>\n        </div>\n      </ul>\n    </div>\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardDialogUserId\"\n      :groupId=\"groupId\"\n      :authStatus=\"authStatus\"\n      ref=\"cardOther\"\n      @handleclosecard=\"handleclosecard\"\n    ></member-card-other>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport store from '@/store';\nimport RightRule from './rightRule';\nimport MemberCardOther from '@/components/memberCard/MemberCardOther';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport { remote } from 'electron';\nimport fileOperational from '@/services/fileOperational';\nimport { update_person_info,  removeGroupMember } from './server';\nimport { convertToPinyin } from '@/utils/pinyin';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport { getSelfUserId } from '@/utils/const';\nexport default {\n  name:\"Member\",\n  components: {\n    MemberCardOther,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  data() {\n    return {\n      indexAt:0,\n      currentItem:{},//上下键选中的item\n      arr: [],\n      dialogVisible: false,\n      diaTitle: this.$t('chat_comm_invite_0001'),\n      // groupId: sessionStorage.getItem('groupId'),\n      userId: this.currentUserId(),\n      allMemb: 1,\n      myStatus: 1,\n      SeachInput: '',\n      changeValueV: {},\n      popoverVisible: false,\n      remarkVisible: true,\n      items: [],\n      allItems: [],\n      getMember: 1,\n      memberSelect: [\n        {\n          value: '0', //、全部成员\n          label: ''\n        },\n        {\n          value: '1', //禁言成员\n          label: ''\n        }\n      ],\n      AllMember: '',\n      forbiddenMemb: [],\n      dataMemb: [],\n      cardDialogVisible: false,\n      cardDialogUserId: '',\n      members: [],\n      currentIndex: 0,\n      currnetManagerNum: 0, //当前管理员数量\n      maxManagerNum: 0, //最大管理员数量\n      loading: false,\n    };\n  },\n  props: {\n    dialogMember: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    groupSystemAbleMem: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    groupId: {\n      type: String,\n      required: true\n    },\n    maxPeople: {\n      type: Number,\n      default() {\n        return 2000;\n      }\n    },\n    people: {\n      // type: String\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '3';\n      }\n    },\n    memberSingleChatStatus: {\n      type: String,\n      default() {\n        return \"0\";\n      },\n    },\n    showAppealClosureNotice: {\n      type: Boolean,\n      default() {\n        return false;\n      },\n    },\n    //父组件来源（群聊或讨论组）\n    groupMemberFrom: {\n      type: String,\n      default: () => {\n        return '';\n      }\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    groupSystemAbleMem(val){\n      if(!val){\n        document.removeEventListener('keydown', this.keyMove2)\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    loadMore() {\n      this.items = [...this.items, ...this.allItems.slice(0, 20)];\n      this.allItems.splice(0,20);\n      console.log(\"items ======= \", this.items.length, this.allItems.length);\n    },\n    async handleclosecard() {\n      this.cardDialogVisible = false;\n      await this.restoreMemberNotes(this.cardDialogUserId);\n    },\n    transferSuccess() {\n      this.cardDialogVisible = false;\n    },\n    onMouseover(index) {\n      this.currentIndex = index;\n    },\n    async lookCard(id) {\n      this.$nextTick(() => {\n        if(this.showAppealClosureNotice){\n          let message = this.groupMemberFrom === 'group' ? this.$t('appeal_0013') : this.$t('appeal_0014');\n          this.$message.error(message);\n          return;\n        } else if (\n          this.memberSingleChatStatus == 0 &&\n          this.authStatus == 3 &&\n          id != this.userId\n        ) {\n          this.$message.warning(this.$t('chat_comm_manage_0035'));\n          return;\n        } \n        this.cardDialogVisible = true;\n        this.cardDialogUserId = id;\n        this.$refs.cardOther.onCardShow();\n      });\n    },\n    // 禁言\n    async forbidden(item, num) {\n      const params = {\n        groupId: this.groupId,\n        userId: item.userId,\n        forbiddenWordsStatus: num\n      };\n      let res = await update_person_info(params);\n      if (res.code == 200) {\n        this.$message.success(res.msg);\n        console.log('禁言 ========= ', num, params);\n        await SQLUtils.updateGroupsMemberForbiddenWordsStatus(params);\n        this.init();\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    // 移出群聊\n    async getOut(item) {\n      // this.$confirm('将 ' + item.groupMemberName + ' 从本社区删除？确认后将该用户从本社区删除，是否确定？', '提示', {\n      this.$confirm(this.$t('chat_0054', {member: item.groupMemberName}),\n        this.$t('Universal_0059'),\n        {\n          confirmButtonText: this.$t('Universal_0062'),\n          cancelButtonText: this.$t('Universal_0063'),\n          type: 'warning',\n          customClass: 'pre-dialog'\n        })\n        .then(async () => {\n          let res = await removeGroupMember({\n            gId: this.groupId,\n            beQuitUserId: item.userId\n          });\n          if (res.code == '200') {\n            this.$message.success(res.msg);\n            await SQLUtils.deleteGroupsMemberById(this.groupId, item.userId);\n            //await SQLUtils.deleteGroupsPeople(this.groupId);\n            this.init();\n            this.$emit('searchGroupMembersAndInfo');\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        })\n        .catch(() => {});\n    },\n    removeMemberFromList(memberId) {\n      this.items = this.items.filter(item => item.id != memberId);\n    },\n    //触发子组内部\n    onCardShow() {\n      // this.$nextTick(v=>{\n      //   this.$refs.CardFun[0].onCardShow()\n      // })\n      //this.$refs.CardFun.zz\n    },\n    //搜索\n    async search() {\n      this.indexAt = 0;\n      if (!this.SeachInput) {\n        if (this.AllMember.indexOf(this.$t('chat_comm_set_0025')) >= 0 || this.AllMember == '0') {\n          this.changeSec(0);\n        } else {\n          this.changeSec(1);\n        }\n        this.allItems = this.arr.slice(0);\n        this.items = this.allItems.slice(0, 20);\n        this.allItems.splice(0, 20);\n        this.$forceUpdate();\n      } else {\n        let keyword = this.SeachInput.toLowerCase();\n        console.log('keyword', keyword);\n        this.allItems = this.arr.filter(item => {\n          return (\n            (item.nickName || '').toLowerCase().indexOf(keyword) > -1 ||\n            (item.nickName_pinyin  || '').toLowerCase().indexOf(keyword) > -1 ||\n            (item.friendNotes  || '').toLowerCase().indexOf(keyword) > -1 ||\n            (item.friendNotes_pinyin || '').toLowerCase().indexOf(keyword) > -1 ||\n            (item.memberNotes || '').toLowerCase().indexOf(keyword) > -1 ||\n            (item.memberNotes_pinyin || '').toLowerCase().indexOf(keyword) > -1\n          );\n        });\n        this.items = this.allItems.slice(0, 20);\n        this.allItems.splice(0, 20);\n        this.needShowNickName();\n      }\n      this.currentIndex = 0;\n      await this.chooseSearch();\n    },\n    chooseSearch(){\n      this.indexAt = 0;\n      document.removeEventListener('keydown', this.keyMove2)\n      document.getElementById('scrollBox').scrollTop = 0\n      document.addEventListener('keydown',this.keyMove2)\n    },\n    removeFun(){\n      // document.removeEventListener('keydown',this.keyMove2)\n    },\n    move(){\n      if( document.getElementById('scrollBox')){\n        console.log(document.getElementById('scrollBox').offsetTop,'位移')\n        document.getElementById('scrollBox').scrollTop = document.getElementsByClassName('active2')[0].offsetTop-200\n      }\n    },\n    keyMove2(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n          console.log(this.indexAt,'--')\n        }else{\n          this.indexAt = 0;\n        }\n        this.move()\n      }else if(e.keyCode == 40){ //下键\n        console.log(this.indexAt,'down2222')\n        if(this.indexAt < (this.items.length-1)){\n          this.indexAt++;\n          console.log(this.indexAt,'++')\n        }else if(this.indexAt == this.items.length){\n          this.indexAt = this.indexAt-1 ;\n          console.log(this.indexAt,'-1后')\n        }\n        this.move()\n      }\n      else if(e.keyCode == 13){\n        console.log(document.getElementsByClassName('active2')[0],'wswwwww')\n        let currentId=''\n        if(document.getElementsByClassName('active2')[0]){\n          currentId = document.getElementsByClassName('active2')[0].getAttribute(\"id\")\n        }\n        this.currentItem = this.items.filter((item) => {\n          return item.inviteCode == currentId\n        })\n        console.log(this.currentItem,'currentItem','展示名片')\n        this.lookCard(this.currentItem[0].userId)\n      }\n      \n    },\n    needShowNickName() {\n      if (this.SeachInput) {\n        let key = this.SeachInput.toLowerCase();\n        this.items.map(item => {\n          item.showNickName = false;\n          if (item.nickName.toLowerCase().indexOf(key) != -1 || item.nickName_pinyin.toLowerCase().indexOf(key) != -1) {\n            if (item.groupMemberName.indexOf(item.nickName) < 0) {\n              item.showNickName = true;\n            }\n          }\n        });\n      }\n      this.items.sort((a, b) => {\n        return a.nickName_pinyin.localeCompare(b.nickName_pinyin);\n      });\n    },\n    // 举报\n    tipOff(id) {\n      this.$router.push({\n        path: '/app/chat/tipoffs',\n        query: {\n          impeachType: 1,\n          othersId: id\n        }\n      });\n    },\n    handleClose() {\n      this.items = [];\n      this.SeachInput = '';\n      this.$emit('closeDialog');\n    },\n    rightClick(e, item) {\n      this.changeValueV = item;\n      if (this.myStatus == 3) {\n        e.preventDefault();\n        return;\n      } else {\n        e.preventDefault();\n        this.addClick();\n      }\n    },\n    addClick() {\n      const menu = RightRule(this.myStatus, this.changeValueV, this);\n      // if (menu.length == 0) {\n      //   return;\n      // }\n      return this.$RightClick(menu).popup({\n        window: remote.getCurrentWindow()\n      });\n    },\n    confirmDialogHand() {},\n    cancelDialogHand() {\n      this.dialogVisible = false;\n      this.init();\n    },\n    inviteMemHand() {\n      this.SeachInput = '';\n      this.changeSec(0);\n      // 邀请成员\n      //this.$refs.groupInvite.groupfriendlist();\n      this.$emit('ShowGroupInvite');\n    },\n    async setMagHand(obj, num) {\n      if (num !== 3 && this.currnetManagerNum == this.maxManagerNum) {\n        return this.$message.error(this.$t('book_friend_0016'));\n      }\n      let message = this.$t('chat_comm_manage_0030', {member: obj.groupMemberName});\n      if (num == 3) {\n        message = this.$t('chat_comm_manage_0031', {member: obj.groupMemberName});\n      }\n      this.$confirm(message, this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('Universal_0062'),\n        cancelButtonText: this.$t('Universal_0063'),\n        type: 'warning'\n      })\n        .then(async () => {\n          let res = await update_person_info({\n            authStatus: num,\n            groupId: this.groupId,\n            userId: obj.userId\n          });\n          if (res.code == 200) {\n            this.$message.success(res.msg);\n            await window.vm\n              .$knex('t_groups_member')\n              .where('id', '=', obj.userId)\n              .where('group_id', '=', this.groupId)\n              .update({ auth_status: num });\n            this.init();\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        })\n        .catch(() => {});\n    },\n    changeGroupName(arr) {\n      this.forbiddenMemb = [];\n      return arr.map(a => {\n        a = {\n          additionalStatus: a.additionalStatus,\n          authStatus: a.auth_status,\n          forbiddenWordsStatus: a.forbiddenWordsStatus,\n          friendNotes: a.friend_friendNotes || '',\n          friendNotes_pinyin: a.friend_friendNotes_pinyin || '',\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name || '',\n          friendNickNamePinyin: a.friend_nick_name_pinyin || '',\n          groupId: a.group_id,\n          groupMemberName: this.authStatus == '3' ? a.group_member_friend_name : a.group_member_name,\n          id: a.id,\n          userId: a.userId,\n          is_show: a.is_show,\n          memberNotes: a?.member_notes || '',\n          memberNotes_pinyin: a.member_notes_pinyin || '',\n          muteNotifications: a.muteNotifications,\n          mutedStatus: a.mutedStatus,\n          nickName: a.nick_name,\n          nickName_pinyin: convertToPinyin(a.nick_name),\n          stickyStatus: a.stickyStatus,\n          userHeadImg: a.user_head_img,\n          inviteCode: a.inviteCode,\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank,\n          joinTime: Date.now(a.joinTime)\n        };\n        if (a.forbiddenWordsStatus == 1 && a.authStatus == 3) {\n          this.forbiddenMemb.push(a);\n        }\n        if (a.id == this.userId) {\n          this.myStatus = a.authStatus;\n        }\n        return a;\n      });\n    },\n    async getList() {\n      await store.dispatch('GET_MEM_LIST', this.groupId);\n      this.members = store.state.search.membList.filter(item => item.is_show == 'true');\n      this.arr = this.changeGroupName(this.members);\n\n      this.allMemb = this.arr.length;\n      this.memberSelect[0].label = `${this.$t('chat_comm_set_0025')}(${this.people}/${this.maxPeople ? this.maxPeople : '2000'})`;\n      this.memberSelect[1].label = `${this.$t('chat_comm_set_0026')}(${this.forbiddenMemb.length})`;\n      this.AllMember = this.memberSelect[0].label;\n\n      this.dataMemb[0] = this.arr;\n      this.dataMemb[1] = this.forbiddenMemb;\n      //this.items = this.arr;\n      this.allItems = this.arr.slice(0);\n      this.items = this.allItems.slice(0, 20);\n      this.allItems.splice(0, 20);\n      this.currnetManagerNum = this.items.filter(x => x.authStatus !== 3).length;\n      this.maxManagerNum = Number(this.maxPeople / 100);\n      this.currentIndex = 0;\n      // this.$emit('updatePeopleInGroup', this.allMemb);\n      await this.$store.dispatch('GET_LAST_MSG_LIST');\n      this.$forceUpdate();\n    },\n    async restoreMemberNotes(memberUserId) {\n      if (memberUserId) {\n        const memberItem = {\n          fromId: memberUserId,\n          targetId: this.groupId\n        };\n        const groupMemberItem = await SQLUtils.findGroupMemberName(memberItem);\n        await store.dispatch('GET_MEM_LIST', this.groupId);\n        this.members = await store.state.search.membList;\n        this.items.map(item => {\n          if (item.id == memberUserId) {\n            item.nickName_pinyin = convertToPinyin(groupMemberItem.nickName);\n            item.friendNotes = groupMemberItem.friendFriendNotes || '';\n            item.friendNotes_pinyin = convertToPinyin(item.friendNotes);\n            item.memberNotes = groupMemberItem.memberNotes || '';\n            item.memberNotes_pinyin = convertToPinyin(item.memberNotes);\n            item.groupMemberName = this.memberName(item);\n            item.vipType = groupMemberItem.vipType;\n            item.inviteCodeType = groupMemberItem.inviteCodeType;\n            item.userRank = groupMemberItem.userRank;\n            item.inviteCode = groupMemberItem.inviteCode;\n          }\n        });\n        this.$forceUpdate();\n      }\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    memberFriendNotes(item) {\n      let userInfo = this.members.find(m => m.id == item.userId);\n      if (userInfo && userInfo.friend_friendNotes) {\n        return userInfo.friend_friendNotes ? userInfo.friend_friendNotes : '';\n      }\n      return '';\n    },\n    memberName(item) {\n      if (this.myStatus == 3) {\n        return item.friendNotes || item.nickName;\n      }\n      let userInfo = this.members.find(m => m.id == item.userId);\n      if (userInfo && userInfo.group_member_name) {\n        return userInfo.group_member_name;\n      }\n      return '';\n      // let memberNotes = item.memberNotes ? '['.concat(item.memberNotes).concat(']') : '';\n      // let friendNotes = item.friendNotes || '';\n      // let nickName = item.nickName;\n      // let names = [\n      //   memberNotes.concat(friendNotes),\n      //   memberNotes.concat(nickName),\n      //   friendNotes,\n      //   nickName\n      // ];\n      // if (this.authStatus != 3) {\n      //   if (friendNotes) {\n      //     return names[0];\n      //   } else {\n      //     return names[1];\n      //   }\n      // } else {\n      //   if (friendNotes) {\n      //     return names[2];\n      //   } else {\n      //     return names[3];\n      //   }\n      // }\n    },\n    async init() {\n      // this.items = [];\n      // this.dataMemb = [];\n      // this.forbiddenMemb = [];\n      // this.AllMember = '';\n      this.SeachInput = '';\n      await this.getList();\n      this.loading = false\n    },\n    changeSec(val) {\n      this.SeachInput = '';\n      this.arr = this.dataMemb[val];\n      this.items = this.dataMemb[val];\n      this.allItems = this.arr.slice(0);\n      this.items = this.allItems.slice(0, 20);\n      this.allItems.splice(0, 20);\n      this.currentIndex = 0;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    async onMemberOpen() {\n      // this.items = [];\n      // this.dataMemb = [];\n      // this.forbiddenMemb = [];\n      // this.AllMember = '';\n      // this.SeachInput = '';\n      this.loading = true\n      await this.init();\n    },\n    onMemberClose() {\n      // this.items = [];\n      // this.dataMemb = [];\n      // this.forbiddenMemb = [];\n      // this.AllMember = '';\n      this.SeachInput = '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.onMemberOpen()\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.keyMove2)\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 群成员 -->\n<template>\n  <el-row v-loading=\"loading\" element-loading-spinner=\"el-icon-loading\" :element-loading-text=\"$t('Universal_0025')\">\n    <el-col :span=\"24\" class=\"gruop-members-wrap flex flex-direction\">\n      <div class=\"title\">\n        <el-select size=\"medium\" v-model=\"AllMember\" @change=\"changeSec\" placeholder=\"\" class=\"conditionSelec\">\n          <el-option v-for=\"item in memberSelect\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n        </el-select>\n        <i class=\"el-icon-close close-i\" @click=\"handleClose\"></i>\n      </div>\n    <div class=\"serach\">\n      <el-input\n        class=\"serach-input\"\n        @input=\"search\"\n        v-model=\"SeachInput\"\n        :placeholder=\"$t('Universal_0058')\"\n        prefix-icon=\"el-icon-search\"\n        clearable\n        id=\"groupSearch\"\n        :code=\"groupSystemAbleMem\"\n        @blur=\"removeFun\"\n      ></el-input>\n      <img @click=\"inviteMemHand\" class=\"invite-mem\" src=\"../../../../assets/images/invite.png\" alt />\n    </div>\n    <div class=\"gruop-members-con flex-sub flex-direction flex\" >\n      <ul \n        class=\"gruop-members-list\"\n        v-infinite-scroll=\"loadMore\"\n        infinite-scroll-disabled=\"false\"\n        infinite-scroll-distance=\"20\"\n        id=\"scrollBox\"\n      >\n        <li\n          v-for=\"(item, index) in items\"\n          :key=\"item.userId\"\n          @contextmenu.prevent=\"rightClick($event, item)\"\n          @mouseover=\"onMouseover(index)\"\n          :id=\"item.inviteCode\"\n          :class=\"{ active: index === currentIndex ,active2:index == indexAt}\"\n        >\n          <div :id=\"'popoverShow' + item.userId\" class=\"gruop-members-name\" @click=\"lookCard(item.userId)\">\n            <MemberIcon\n              :image=\"item.userHeadImg || item.friendHeadImg\"\n              :auth-status=\"'' + item.authStatus\"\n              :userRank=\"item.userRank\"\n              :vipType=\"item.vipType\"\n            />\n          </div>\n          <div style=\"width:125px\">\n            <div class=\"flex flex-direction name-notes-id group-members-name\">\n              <div class=\"name-wrap\" :title=\"item.groupMemberName\">\n                <span>{{ item.groupMemberName }}</span>\n              </div>\n              <!-- <div\n                class=\"name-wrap\"\n                v-show=\"item.showNickName && SeachInput\"\n                :title=\"item.nickName\"\n              >\n                <span>{{ item.nickName }}</span>\n              </div> -->\n              <LevelIcon\n                :inviteCode=\"item.inviteCode\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n              />\n            </div>\n            <div style=\"padding-top: 2px\">\n              <LuckIdIcon\n                :inviteCode=\"item.inviteCode\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n                :listFlag=\"false\"\n              />\n            </div>\n          </div>\n          <div class=\"gruop-members-manster\">\n            <img src=\"../../../../assets/images/nowords.png\" alt class=\"tips img_16\"\n                 v-if=\"item.authStatus == 3 && item.forbiddenWordsStatus == 1\"/>\n          </div>\n        </li>\n        <div v-show=\"(!items.length > 0 && !loading)\" class=\"no-results\">\n          <img src=\"../../../../assets/images/web.png\" class=\"img_search\" />\n          <p>{{ $t('Universal_0173') }}</p>\n        </div>\n      </ul>\n    </div>\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardDialogUserId\"\n      :groupId=\"groupId\"\n      :authStatus=\"authStatus\"\n      ref=\"cardOther\"\n      @handleclosecard=\"handleclosecard\"\n    ></member-card-other>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport store from '@/store';\nimport RightRule from './rightRule';\nimport MemberCardOther from '@/components/memberCard/MemberCardOther';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport { remote } from 'electron';\nimport fileOperational from '@/services/fileOperational';\nimport { update_person_info,  removeGroupMember } from './server';\nimport { convertToPinyin } from '@/utils/pinyin';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport { getSelfUserId } from '@/utils/const';\nexport default {\n  name:\"Member\",\n  components: {\n    MemberCardOther,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  data() {\n    return {\n      indexAt:0,\n      currentItem:{},//上下键选中的item\n      arr: [],\n      dialogVisible: false,\n      diaTitle: this.$t('chat_comm_invite_0001'),\n      // groupId: sessionStorage.getItem('groupId'),\n      userId: this.currentUserId(),\n      allMemb: 1,\n      myStatus: 1,\n      SeachInput: '',\n      changeValueV: {},\n      popoverVisible: false,\n      remarkVisible: true,\n      items: [],\n      allItems: [],\n      getMember: 1,\n      memberSelect: [\n        {\n          value: '0', //、全部成员\n          label: ''\n        },\n        {\n          value: '1', //禁言成员\n          label: ''\n        }\n      ],\n      AllMember: '',\n      forbiddenMemb: [],\n      dataMemb: [],\n      cardDialogVisible: false,\n      cardDialogUserId: '',\n      members: [],\n      currentIndex: 0,\n      currnetManagerNum: 0, //当前管理员数量\n      maxManagerNum: 0, //最大管理员数量\n      loading: false,\n    };\n  },\n  props: {\n    dialogMember: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    groupSystemAbleMem: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    groupId: {\n      type: String,\n      required: true\n    },\n    maxPeople: {\n      type: Number,\n      default() {\n        return 2000;\n      }\n    },\n    people: {\n      // type: String\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '3';\n      }\n    },\n    memberSingleChatStatus: {\n      type: String,\n      default() {\n        return \"0\";\n      },\n    },\n    showAppealClosureNotice: {\n      type: Boolean,\n      default() {\n        return false;\n      },\n    },\n    //父组件来源（群聊或讨论组）\n    groupMemberFrom: {\n      type: String,\n      default: () => {\n        return '';\n      }\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    groupSystemAbleMem(val){\n      if(!val){\n        document.removeEventListener('keydown', this.keyMove2)\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    loadMore() {\n      this.items = [...this.items, ...this.allItems.slice(0, 20)];\n      this.allItems.splice(0,20);\n      console.log(\"items ======= \", this.items.length, this.allItems.length);\n    },\n    async handleclosecard() {\n      this.cardDialogVisible = false;\n      await this.restoreMemberNotes(this.cardDialogUserId);\n    },\n    transferSuccess() {\n      this.cardDialogVisible = false;\n    },\n    onMouseover(index) {\n      this.currentIndex = index;\n    },\n    async lookCard(id) {\n      this.$nextTick(() => {\n        if(this.showAppealClosureNotice){\n          let message = this.groupMemberFrom === 'group' ? this.$t('appeal_0013') : this.$t('appeal_0014');\n          this.$message.error(message);\n          return;\n        } else if (\n          this.memberSingleChatStatus == 0 &&\n          this.authStatus == 3 &&\n          id != this.userId\n        ) {\n          this.$message.warning(this.$t('chat_comm_manage_0035'));\n          return;\n        } \n        this.cardDialogVisible = true;\n        this.cardDialogUserId = id;\n        this.$refs.cardOther.onCardShow();\n      });\n    },\n    // 禁言\n    async forbidden(item, num) {\n      const params = {\n        groupId: this.groupId,\n        userId: item.userId,\n        forbiddenWordsStatus: num\n      };\n      let res = await update_person_info(params);\n      if (res.code == 200) {\n        this.$message.success(res.msg);\n        console.log('禁言 ========= ', num, params);\n        await SQLUtils.updateGroupsMemberForbiddenWordsStatus(params);\n        this.init();\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    // 移出群聊\n    async getOut(item) {\n      // this.$confirm('将 ' + item.groupMemberName + ' 从本社区删除？确认后将该用户从本社区删除，是否确定？', '提示', {\n      this.$confirm(this.$t('chat_0054', {member: item.groupMemberName}),\n        this.$t('Universal_0059'),\n        {\n          confirmButtonText: this.$t('Universal_0062'),\n          cancelButtonText: this.$t('Universal_0063'),\n          type: 'warning',\n          customClass: 'pre-dialog'\n        })\n        .then(async () => {\n          let res = await removeGroupMember({\n            gId: this.groupId,\n            beQuitUserId: item.userId\n          });\n          if (res.code == '200') {\n            this.$message.success(res.msg);\n            await SQLUtils.deleteGroupsMemberById(this.groupId, item.userId);\n            //await SQLUtils.deleteGroupsPeople(this.groupId);\n            this.init();\n            this.$emit('searchGroupMembersAndInfo');\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        })\n        .catch(() => {});\n    },\n    removeMemberFromList(memberId) {\n      this.items = this.items.filter(item => item.id != memberId);\n    },\n    //触发子组内部\n    onCardShow() {\n      // this.$nextTick(v=>{\n      //   this.$refs.CardFun[0].onCardShow()\n      // })\n      //this.$refs.CardFun.zz\n    },\n    //搜索\n    async search() {\n      this.indexAt = 0;\n      if (!this.SeachInput) {\n        if (this.AllMember.indexOf(this.$t('chat_comm_set_0025')) >= 0 || this.AllMember == '0') {\n          this.changeSec(0);\n        } else {\n          this.changeSec(1);\n        }\n        this.allItems = this.arr.slice(0);\n        this.items = this.allItems.slice(0, 20);\n        this.allItems.splice(0, 20);\n        this.$forceUpdate();\n      } else {\n        let keyword = this.SeachInput.toLowerCase();\n        console.log('keyword', keyword);\n        this.allItems = this.arr.filter(item => {\n          return (\n            (item.nickName || '').toLowerCase().indexOf(keyword) > -1 ||\n            (item.nickName_pinyin  || '').toLowerCase().indexOf(keyword) > -1 ||\n            (item.friendNotes  || '').toLowerCase().indexOf(keyword) > -1 ||\n            (item.friendNotes_pinyin || '').toLowerCase().indexOf(keyword) > -1 ||\n            (item.memberNotes || '').toLowerCase().indexOf(keyword) > -1 ||\n            (item.memberNotes_pinyin || '').toLowerCase().indexOf(keyword) > -1\n          );\n        });\n        this.items = this.allItems.slice(0, 20);\n        this.allItems.splice(0, 20);\n        this.needShowNickName();\n      }\n      this.currentIndex = 0;\n      await this.chooseSearch();\n    },\n    chooseSearch(){\n      this.indexAt = 0;\n      document.removeEventListener('keydown', this.keyMove2)\n      document.getElementById('scrollBox').scrollTop = 0\n      document.addEventListener('keydown',this.keyMove2)\n    },\n    removeFun(){\n      // document.removeEventListener('keydown',this.keyMove2)\n    },\n    move(){\n      if( document.getElementById('scrollBox')){\n        console.log(document.getElementById('scrollBox').offsetTop,'位移')\n        document.getElementById('scrollBox').scrollTop = document.getElementsByClassName('active2')[0].offsetTop-200\n      }\n    },\n    keyMove2(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n          console.log(this.indexAt,'--')\n        }else{\n          this.indexAt = 0;\n        }\n        this.move()\n      }else if(e.keyCode == 40){ //下键\n        console.log(this.indexAt,'down2222')\n        if(this.indexAt < (this.items.length-1)){\n          this.indexAt++;\n          console.log(this.indexAt,'++')\n        }else if(this.indexAt == this.items.length){\n          this.indexAt = this.indexAt-1 ;\n          console.log(this.indexAt,'-1后')\n        }\n        this.move()\n      }\n      else if(e.keyCode == 13){\n        console.log(document.getElementsByClassName('active2')[0],'wswwwww')\n        let currentId=''\n        if(document.getElementsByClassName('active2')[0]){\n          currentId = document.getElementsByClassName('active2')[0].getAttribute(\"id\")\n        }\n        this.currentItem = this.items.filter((item) => {\n          return item.inviteCode == currentId\n        })\n        console.log(this.currentItem,'currentItem','展示名片')\n        this.lookCard(this.currentItem[0].userId)\n      }\n      \n    },\n    needShowNickName() {\n      if (this.SeachInput) {\n        let key = this.SeachInput.toLowerCase();\n        this.items.map(item => {\n          item.showNickName = false;\n          if (item.nickName.toLowerCase().indexOf(key) != -1 || item.nickName_pinyin.toLowerCase().indexOf(key) != -1) {\n            if (item.groupMemberName.indexOf(item.nickName) < 0) {\n              item.showNickName = true;\n            }\n          }\n        });\n      }\n      this.items.sort((a, b) => {\n        return a.nickName_pinyin.localeCompare(b.nickName_pinyin);\n      });\n    },\n    // 举报\n    tipOff(id) {\n      this.$router.push({\n        path: '/app/chat/tipoffs',\n        query: {\n          impeachType: 1,\n          othersId: id\n        }\n      });\n    },\n    handleClose() {\n      this.items = [];\n      this.SeachInput = '';\n      this.$emit('closeDialog');\n    },\n    rightClick(e, item) {\n      this.changeValueV = item;\n      if (this.myStatus == 3) {\n        e.preventDefault();\n        return;\n      } else {\n        e.preventDefault();\n        this.addClick();\n      }\n    },\n    addClick() {\n      const menu = RightRule(this.myStatus, this.changeValueV, this);\n      // if (menu.length == 0) {\n      //   return;\n      // }\n      return this.$RightClick(menu).popup({\n        window: remote.getCurrentWindow()\n      });\n    },\n    confirmDialogHand() {},\n    cancelDialogHand() {\n      this.dialogVisible = false;\n      this.init();\n    },\n    inviteMemHand() {\n      this.SeachInput = '';\n      this.changeSec(0);\n      // 邀请成员\n      //this.$refs.groupInvite.groupfriendlist();\n      this.$emit('ShowGroupInvite');\n    },\n    async setMagHand(obj, num) {\n      if (num !== 3 && this.currnetManagerNum == this.maxManagerNum) {\n        return this.$message.error(this.$t('book_friend_0016'));\n      }\n      let message = this.$t('chat_comm_manage_0030', {member: obj.groupMemberName});\n      if (num == 3) {\n        message = this.$t('chat_comm_manage_0031', {member: obj.groupMemberName});\n      }\n      this.$confirm(message, this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('Universal_0062'),\n        cancelButtonText: this.$t('Universal_0063'),\n        type: 'warning'\n      })\n        .then(async () => {\n          let res = await update_person_info({\n            authStatus: num,\n            groupId: this.groupId,\n            userId: obj.userId\n          });\n          if (res.code == 200) {\n            this.$message.success(res.msg);\n            await window.vm\n              .$knex('t_groups_member')\n              .where('id', '=', obj.userId)\n              .where('group_id', '=', this.groupId)\n              .update({ auth_status: num });\n            this.init();\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        })\n        .catch(() => {});\n    },\n    changeGroupName(arr) {\n      this.forbiddenMemb = [];\n      return arr.map(a => {\n        a = {\n          additionalStatus: a.additionalStatus,\n          authStatus: a.auth_status,\n          forbiddenWordsStatus: a.forbiddenWordsStatus,\n          friendNotes: a.friend_friendNotes || '',\n          friendNotes_pinyin: a.friend_friendNotes_pinyin || '',\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name || '',\n          friendNickNamePinyin: a.friend_nick_name_pinyin || '',\n          groupId: a.group_id,\n          groupMemberName: this.authStatus == '3' ? a.group_member_friend_name : a.group_member_name,\n          id: a.id,\n          userId: a.userId,\n          is_show: a.is_show,\n          memberNotes: a?.member_notes || '',\n          memberNotes_pinyin: a.member_notes_pinyin || '',\n          muteNotifications: a.muteNotifications,\n          mutedStatus: a.mutedStatus,\n          nickName: a.nick_name,\n          nickName_pinyin: convertToPinyin(a.nick_name),\n          stickyStatus: a.stickyStatus,\n          userHeadImg: a.user_head_img,\n          inviteCode: a.inviteCode,\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank,\n          joinTime: Date.now(a.joinTime)\n        };\n        if (a.forbiddenWordsStatus == 1 && a.authStatus == 3) {\n          this.forbiddenMemb.push(a);\n        }\n        if (a.id == this.userId) {\n          this.myStatus = a.authStatus;\n        }\n        return a;\n      });\n    },\n    async getList() {\n      await store.dispatch('GET_MEM_LIST', this.groupId);\n      this.members = store.state.search.membList.filter(item => item.is_show == 'true');\n      this.arr = this.changeGroupName(this.members);\n\n      this.allMemb = this.arr.length;\n      this.memberSelect[0].label = `${this.$t('chat_comm_set_0025')}(${this.people}/${this.maxPeople ? this.maxPeople : '2000'})`;\n      this.memberSelect[1].label = `${this.$t('chat_comm_set_0026')}(${this.forbiddenMemb.length})`;\n      this.AllMember = this.memberSelect[0].label;\n\n      this.dataMemb[0] = this.arr;\n      this.dataMemb[1] = this.forbiddenMemb;\n      //this.items = this.arr;\n      this.allItems = this.arr.slice(0);\n      this.items = this.allItems.slice(0, 20);\n      this.allItems.splice(0, 20);\n      this.currnetManagerNum = this.items.filter(x => x.authStatus !== 3).length;\n      this.maxManagerNum = Number(this.maxPeople / 100);\n      this.currentIndex = 0;\n      // this.$emit('updatePeopleInGroup', this.allMemb);\n      await this.$store.dispatch('GET_LAST_MSG_LIST');\n      this.$forceUpdate();\n    },\n    async restoreMemberNotes(memberUserId) {\n      if (memberUserId) {\n        const memberItem = {\n          fromId: memberUserId,\n          targetId: this.groupId\n        };\n        const groupMemberItem = await SQLUtils.findGroupMemberName(memberItem);\n        await store.dispatch('GET_MEM_LIST', this.groupId);\n        this.members = await store.state.search.membList;\n        this.items.map(item => {\n          if (item.id == memberUserId) {\n            item.nickName_pinyin = convertToPinyin(groupMemberItem.nickName);\n            item.friendNotes = groupMemberItem.friendFriendNotes || '';\n            item.friendNotes_pinyin = convertToPinyin(item.friendNotes);\n            item.memberNotes = groupMemberItem.memberNotes || '';\n            item.memberNotes_pinyin = convertToPinyin(item.memberNotes);\n            item.groupMemberName = this.memberName(item);\n            item.vipType = groupMemberItem.vipType;\n            item.inviteCodeType = groupMemberItem.inviteCodeType;\n            item.userRank = groupMemberItem.userRank;\n            item.inviteCode = groupMemberItem.inviteCode;\n          }\n        });\n        this.$forceUpdate();\n      }\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    memberFriendNotes(item) {\n      let userInfo = this.members.find(m => m.id == item.userId);\n      if (userInfo && userInfo.friend_friendNotes) {\n        return userInfo.friend_friendNotes ? userInfo.friend_friendNotes : '';\n      }\n      return '';\n    },\n    memberName(item) {\n      if (this.myStatus == 3) {\n        return item.friendNotes || item.nickName;\n      }\n      let userInfo = this.members.find(m => m.id == item.userId);\n      if (userInfo && userInfo.group_member_name) {\n        return userInfo.group_member_name;\n      }\n      return '';\n      // let memberNotes = item.memberNotes ? '['.concat(item.memberNotes).concat(']') : '';\n      // let friendNotes = item.friendNotes || '';\n      // let nickName = item.nickName;\n      // let names = [\n      //   memberNotes.concat(friendNotes),\n      //   memberNotes.concat(nickName),\n      //   friendNotes,\n      //   nickName\n      // ];\n      // if (this.authStatus != 3) {\n      //   if (friendNotes) {\n      //     return names[0];\n      //   } else {\n      //     return names[1];\n      //   }\n      // } else {\n      //   if (friendNotes) {\n      //     return names[2];\n      //   } else {\n      //     return names[3];\n      //   }\n      // }\n    },\n    async init() {\n      // this.items = [];\n      // this.dataMemb = [];\n      // this.forbiddenMemb = [];\n      // this.AllMember = '';\n      this.SeachInput = '';\n      await this.getList();\n      this.loading = false\n    },\n    changeSec(val) {\n      this.SeachInput = '';\n      this.arr = this.dataMemb[val];\n      this.items = this.dataMemb[val];\n      this.allItems = this.arr.slice(0);\n      this.items = this.allItems.slice(0, 20);\n      this.allItems.splice(0, 20);\n      this.currentIndex = 0;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    async onMemberOpen() {\n      // this.items = [];\n      // this.dataMemb = [];\n      // this.forbiddenMemb = [];\n      // this.AllMember = '';\n      // this.SeachInput = '';\n      this.loading = true\n      await this.init();\n    },\n    onMemberClose() {\n      // this.items = [];\n      // this.dataMemb = [];\n      // this.forbiddenMemb = [];\n      // this.AllMember = '';\n      this.SeachInput = '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.onMemberOpen()\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.keyMove2)\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\">\n.set-member-operator {\n  li {\n    line-height: 20px;\n  }\n}\n\n.serach-input {\n  .el-input__prefix,\n  .el-input__suffix {\n    .el-input__icon {\n      line-height: 26px;\n    }\n  }\n}\n.serach-input input.el-input__inner {\n  font-size: 12px;\n  color: #555;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.gruop-members-wrap {\n  //   overflow-y: hidden;\n  min-height: 90vh;\n\n  .title {\n    font-size: 14px;\n    display: inline-flex;\n    padding: 0 10px;\n    line-height: 47px;\n    // background:#fff;\n    background: #fbfbfb;\n\n    .conditionSelec {\n      flex: auto;\n      min-width: 100px;\n      max-width: 200px;\n      // background: turquoise;\n\n      /deep/ .el-input__inner {\n        max-width: 200px;\n        background: transparent;\n        border: 0px solid red;\n        padding-left: 2px;\n      }\n\n      // /deep/ .el-input--small .el-input__inner{\n      //   min-width: 150px;\n      // }\n    }\n\n    .close-i {\n      flex: 0 0 18px;\n      width: 18px;\n      margin-left: auto;\n      margin-right: -5px;\n      line-height: 47px;\n      font-size: 18px;\n      cursor: pointer;\n    }\n  }\n  .no-results {\n    text-align: center;\n    color: #999;\n    font-size: 14px;\n    margin-top: 40px;\n  }\n  .serach {\n    padding: 10px 10px 15px;\n    display: flex;\n    align-items: center;\n    .serach-input {\n      width: 85%;\n      border-radius: 20px;\n      height: 26px;\n      line-height: 26px;\n      border: 1px solid #ddd;\n      background: #fff;\n      .el-input__inner {\n        height: 26px;\n        line-height: 26px;\n      }\n      //  /deep/ .el-input__prefix{\n      //    top: -6px;\n      //  }\n      //  /deep/ .el-input__suffix{\n      //    top: -6px;\n      //  }\n    }\n    img {\n      width: 20px;\n      height: 21px;\n    }\n  }\n  .invite-mem {\n    vertical-align: middle;\n    margin-left: auto;\n    margin-right: 0px;\n  }\n  .gruop-members-con {\n    height: 100%;\n    .gruop-members-title {\n      padding: 0 20px;\n      height: 30px;\n      line-height: 30px;\n      background-color: #9297a3;\n      font-size: 14px;\n      color: #fff;\n    }\n    .gruop-members-list {\n      height: 100vh;\n      overflow-y: scroll;\n      background-color: #fff;\n      align-items: center;\n\n      .active {\n        background-color: #f7f7fa;\n      }\n      .active2{\n        background-color: #eee;\n      }\n      li {\n        display: flex;\n        padding: 0 10px 0 12px;\n        // height: 60px;\n        // line-height: 58px;\n        height: 50px;\n        /*line-height: 48px;*/\n        /*&:nth-child(2n) {*/\n        /*  background-color: #f7f7fa;*/\n        /*}*/\n        img {\n          vertical-align: middle;\n          border-radius: 50%;\n        }\n      }\n      .gruop-members-manster {\n        margin-right: 10px;\n        line-height: 32px;\n        margin-left: 5px;\n        // margin-top: -2px;\n      }\n      .gruop-members-name {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        padding-right: 15px;\n        position: relative;\n        display: flex;\n        align-items: center;\n        .tips {\n          position: absolute;\n          left: 30px;\n          top: 5px;\n        }\n      }\n      .gruop-members-opera img {\n        vertical-align: middle;\n      }\n      .group-members-name {\n        font-size: 12px;\n        // max-width: 26%;\n      }\n      .name-wrap {\n        padding-right: 2px;\n        // max-width: 50%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: pre;\n        .levelbox {\n          padding: 0;\n        }\n      }\n      .name-notes-id {\n        height: 20px;\n        justify-content:baseline;\n        flex-direction: row;\n        margin-top: 5px;\n        align-items: center;\n        max-width: 150px;\n      }\n    }\n  }\n}\n\n</style>\n<style lang=\"less\">\n.el-message-box__wrapper {\n  .el-message-box {\n    &.pre-dialog {\n      .el-message-box__message {\n        p {\n          white-space: pre-wrap !important;\n        }\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".set-member-operator": {
          "li": {
            "line-height": "20px"
          }
        },
        ".serach-input": {
          ".el-input__prefix,  .el-input__suffix": {
            ".el-input__icon": {
              "line-height": "26px"
            }
          }
        },
        ".serach-input input.el-input__inner": {
          "font-size": "12px",
          "color": "#555"
        }
      },
      {
        ".gruop-members-wrap": {
          "min-height": "90vh",
          ".title": {
            "font-size": "14px",
            "display": "inline-flex",
            "padding": "0 10px",
            "line-height": "47px",
            "background": "#fbfbfb",
            ".conditionSelec": {
              "flex": "auto",
              "min-width": "100px",
              "max-width": "200px",
              "/deep/ .el-input__inner": {
                "max-width": "200px",
                "background": "transparent",
                "border": "0px solid red",
                "padding-left": "2px"
              }
            },
            ".close-i": {
              "flex": "0 0 18px",
              "width": "18px",
              "margin-left": "auto",
              "margin-right": "-5px",
              "line-height": "47px",
              "font-size": "18px",
              "cursor": "pointer"
            }
          },
          ".no-results": {
            "text-align": "center",
            "color": "#999",
            "font-size": "14px",
            "margin-top": "40px"
          },
          ".serach": {
            "padding": "10px 10px 15px",
            "display": "flex",
            "align-items": "center",
            ".serach-input": {
              "width": "85%",
              "border-radius": "20px",
              "height": "26px",
              "line-height": "26px",
              "border": "1px solid #ddd",
              "background": "#fff",
              ".el-input__inner": {
                "height": "26px",
                "line-height": "26px"
              }
            },
            "img": {
              "width": "20px",
              "height": "21px"
            }
          },
          ".invite-mem": {
            "vertical-align": "middle",
            "margin-left": "auto",
            "margin-right": "0px"
          },
          ".gruop-members-con": {
            "height": "100%",
            ".gruop-members-title": {
              "padding": "0 20px",
              "height": "30px",
              "line-height": "30px",
              "background-color": "#9297a3",
              "font-size": "14px",
              "color": "#fff"
            },
            ".gruop-members-list": {
              "height": "100vh",
              "overflow-y": "scroll",
              "background-color": "#fff",
              "align-items": "center",
              ".active": {
                "background-color": "#f7f7fa"
              },
              ".active2": {
                "background-color": "#eee"
              },
              "li": {
                "display": "flex",
                "padding": "0 10px 0 12px",
                "height": "50px",
                "img": {
                  "vertical-align": "middle",
                  "border-radius": "50%"
                }
              },
              ".gruop-members-manster": {
                "margin-right": "10px",
                "line-height": "32px",
                "margin-left": "5px"
              },
              ".gruop-members-name": {
                "overflow": "hidden",
                "white-space": "nowrap",
                "text-overflow": "ellipsis",
                "padding-right": "15px",
                "position": "relative",
                "display": "flex",
                "align-items": "center",
                ".tips": {
                  "position": "absolute",
                  "left": "30px",
                  "top": "5px"
                }
              },
              ".gruop-members-opera img": {
                "vertical-align": "middle"
              },
              ".group-members-name": {
                "font-size": "12px"
              },
              ".name-wrap": {
                "padding-right": "2px",
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "white-space": "pre",
                ".levelbox": {
                  "padding": "0"
                }
              },
              ".name-notes-id": {
                "height": "20px",
                "justify-content": "baseline",
                "flex-direction": "row",
                "margin-top": "5px",
                "align-items": "center",
                "max-width": "150px"
              }
            }
          }
        }
      },
      {
        ".el-message-box__wrapper": {
          ".el-message-box": {
            "&.pre-dialog": {
              ".el-message-box__message": {
                "p": {
                  "white-space": "pre-wrap !important"
                }
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/login/syncdata.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"sync-data flex flex-direction align-center\">\n    <div class=\"sync-pic flex align-center\">\n      <div id=\"main-img\" style=\"width:100%;height:100%\"></div>\n    </div>\n    <span class=\"sync-tip\">{{updateText}}</span>\n    <div class=\"sync-progress flex flex-direction align-center\">\n      <el-progress :percentage=\"syncDataProgress\"\n                   :stroke-width=\"8\"\n                   :show-text=\"false\"></el-progress>\n      <span class=\"progress-text\">{{syncDataProgress}}%</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport { LOGIN_FINISHED, IS_IN_SYNCDATA_PAGE, IS_SHOW_CLOSE_SYNCDATA } from '@/store/types';\nimport SVGA from 'svgaplayer-didi'\nimport Ws, { handleRecievedQueueMsgs } from '@/utils/ws';\nimport { startSync } from '@/services/syncInfos'\nexport default {\n  components: {},\n  data() {\n    return {\n      // percentage: 50\n      updateText: ''\n    };\n  },\n  computed:{\n    ...mapGetters(['syncDataProgress']),\n  },\n  watch: {\n  },\n  methods: {\n    ...mapActions([LOGIN_FINISHED]),\n    syncFinished(){\n      console.log('ok');\n      handleRecievedQueueMsgs();\n      setTimeout(()=>{\n        this.LOGIN_FINISHED();\n        this.$store.commit(IS_IN_SYNCDATA_PAGE, false);\n      }, 500);\n      // this.LOGIN_FINISHED()\n    },\n    syncError(e){\n      console.log(e)\n    },\n    startSync(){\n      startSync(this.syncFinished, this.syncError);\n    },\n    setUpdateText(){\n      const texts = [\n        this.$t('login_register_0044'),\n        this.$t('login_register_0045'),\n        this.$t('login_register_0046'),\n        this.$t('login_register_0047')\n      ];\n      let count = 0;\n      this.timmerText = setInterval(()=>{\n        this.updateText = texts[count++];\n        if(count===4){\n          clearInterval(this.timmerText);\n        }\n      },750)\n    },\n    setClose(){\n      this.timmerClose = setTimeout(()=>{\n        this.$store.commit(IS_SHOW_CLOSE_SYNCDATA, true);\n      },30000)\n    }\n  },\n  created() {\n    this.$store.commit(IS_IN_SYNCDATA_PAGE, true);\n    Ws.init(this.startSync);\n    // setTimeout(this.LOGIN_FINISHED, 5000)\n    //eslint-disable-next-line\n    this.b64 = '';\n  },\n  mounted(){\n    this.$nextTick(()=>{\n\n      console.log(SVGA)\n      const player = new SVGA.Player('#main-img');\n      const parser = new SVGA.Parser('#main-img'); // Must Provide same selector eg:#demoCanvas IF support IE6+\n\n      \n\n      parser.load(`data:svga/2.0;base64,${this.b64}`, function(videoItem) {\n        player.setVideoItem(videoItem);\n        player.startAnimation();\n      })\n\n      this.setUpdateText();\n      this.setClose();\n    })\n  },\n  beforeDestroy() {\n    this.timmerText && clearInterval(this.timmerText);\n    this.timmerClose && clearTimeout(this.timmerClose);\n  }\n};\n</script>",
    "originData": "<template>\n  <div class=\"sync-data flex flex-direction align-center\">\n    <div class=\"sync-pic flex align-center\">\n      <div id=\"main-img\" style=\"width:100%;height:100%\"></div>\n    </div>\n    <span class=\"sync-tip\">{{updateText}}</span>\n    <div class=\"sync-progress flex flex-direction align-center\">\n      <el-progress :percentage=\"syncDataProgress\"\n                   :stroke-width=\"8\"\n                   :show-text=\"false\"></el-progress>\n      <span class=\"progress-text\">{{syncDataProgress}}%</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport { LOGIN_FINISHED, IS_IN_SYNCDATA_PAGE, IS_SHOW_CLOSE_SYNCDATA } from '@/store/types';\nimport SVGA from 'svgaplayer-didi'\nimport Ws, { handleRecievedQueueMsgs } from '@/utils/ws';\nimport { startSync } from '@/services/syncInfos'\nexport default {\n  components: {},\n  data() {\n    return {\n      // percentage: 50\n      updateText: ''\n    };\n  },\n  computed:{\n    ...mapGetters(['syncDataProgress']),\n  },\n  watch: {\n  },\n  methods: {\n    ...mapActions([LOGIN_FINISHED]),\n    syncFinished(){\n      console.log('ok');\n      handleRecievedQueueMsgs();\n      setTimeout(()=>{\n        this.LOGIN_FINISHED();\n        this.$store.commit(IS_IN_SYNCDATA_PAGE, false);\n      }, 500);\n      // this.LOGIN_FINISHED()\n    },\n    syncError(e){\n      console.log(e)\n    },\n    startSync(){\n      startSync(this.syncFinished, this.syncError);\n    },\n    setUpdateText(){\n      const texts = [\n        this.$t('login_register_0044'),\n        this.$t('login_register_0045'),\n        this.$t('login_register_0046'),\n        this.$t('login_register_0047')\n      ];\n      let count = 0;\n      this.timmerText = setInterval(()=>{\n        this.updateText = texts[count++];\n        if(count===4){\n          clearInterval(this.timmerText);\n        }\n      },750)\n    },\n    setClose(){\n      this.timmerClose = setTimeout(()=>{\n        this.$store.commit(IS_SHOW_CLOSE_SYNCDATA, true);\n      },30000)\n    }\n  },\n  created() {\n    this.$store.commit(IS_IN_SYNCDATA_PAGE, true);\n    Ws.init(this.startSync);\n    // setTimeout(this.LOGIN_FINISHED, 5000)\n    //eslint-disable-next-line\n    this.b64 = '';\n  },\n  mounted(){\n    this.$nextTick(()=>{\n\n      console.log(SVGA)\n      const player = new SVGA.Player('#main-img');\n      const parser = new SVGA.Parser('#main-img'); // Must Provide same selector eg:#demoCanvas IF support IE6+\n\n      \n\n      parser.load(`data:svga/2.0;base64,${this.b64}`, function(videoItem) {\n        player.setVideoItem(videoItem);\n        player.startAnimation();\n      })\n\n      this.setUpdateText();\n      this.setClose();\n    })\n  },\n  beforeDestroy() {\n    this.timmerText && clearInterval(this.timmerText);\n    this.timmerClose && clearTimeout(this.timmerClose);\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n\n// .main-login {\n//   width: 400px;\n//   // height: 530px;\n//   height: 440px;\n//   padding: 60px;\n//   box-sizing: border-box;\n//   box-shadow: 0px 4px 8px 0px rgba(5, 36, 163, 0.1);\n//   border-radius: 4px;\n//   text-align: center;\n\n// }\n.sync-data{\n  margin-top:30px;\n  font-family: 'PingFangSC-Regular';\n  .sync-pic{\n    width: 180px;\n    height: 180px;\n\n  }\n  .sync-tip{\n    font-size: 14px;\n    font-weight: 400;\n    text-align: center;\n    color: #333333;\n    line-height: 20px;\n  }\n  .sync-progress{\n    margin-top: 50px;\n    .el-progress{\n      width: 265px;\n      /deep/ .el-progress-bar__outer{\n        background: #f0f0f0;\n        border-radius: 4px;\n        .el-progress-bar__inner{\n          background: linear-gradient(90deg,#5c8df7, #2f54eb 98%);\n          border-radius: 4px;\n        }\n      }\n      \n    }\n\n    .progress-text{\n      margin-top: 7px;\n      font-size: 12px;\n      font-weight: 400;\n      text-align: center;\n      color: #3055ec;\n      line-height: 17px;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".sync-data": {
          "margin-top": "30px",
          "font-family": "'PingFangSC-Regular'",
          ".sync-pic": {
            "width": "180px",
            "height": "180px"
          },
          ".sync-tip": {
            "font-size": "14px",
            "font-weight": "400",
            "text-align": "center",
            "color": "#333333",
            "line-height": "20px"
          },
          ".sync-progress": {
            "margin-top": "50px",
            ".el-progress": {
              "width": "265px",
              "/deep/ .el-progress-bar__outer": {
                "background": "#f0f0f0",
                "border-radius": "4px",
                ".el-progress-bar__inner": {
                  "background": "linear-gradient(90deg,#5c8df7, #2f54eb 98%)",
                  "border-radius": "4px"
                }
              }
            },
            ".progress-text": {
              "margin-top": "7px",
              "font-size": "12px",
              "font-weight": "400",
              "text-align": "center",
              "color": "#3055ec",
              "line-height": "17px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/discussion/message/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>",
      "1": "<style lang=\"less\" scoped>",
      "2": "<style lang=\"less\">",
      "3": "<style>"
    },
    "importInfo": {},
    "keepContent": "<!-- 讨论组会话框 -->\n<template>\n  <div class=\"message\" v-loading=\"uploadLoading\" id=\"messageBox\" @click=\"AtonBlur\">\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardUserId\"\n      :groupId=\"groupId\"\n      ref=\"cardOther\"\n      @handleclosecard=\"handleclosecard\"\n      @toAppeal=\"toAppeal('single')\"\n    ></member-card-other>\n    <div class=\"message-box\">\n      <Title :authStatus=\"authStatus\" @goSetting=\"goSetting\" ref=\"menuTit\">\n        <div style=\"display: flex; align-items: center; cursor: pointer\" class=\"noDrag\">\n          <span class=\"group-name\" :title=\"groupName\" @click=\"showGroup()\">\n            <i class=\"iconfont icon-laba\"></i>\n            {{ groupName }}\n          </span>\n          <span class=\"group-people\" v-if=\"groupInfo.people\">({{ groupInfo.people }})</span>\n          <img src=\"../../../../assets/images/edit.png\" @click=\"onEditDiscussionName\" class=\"group-edit-icon img_17\" alt />\n        </div>\n      </Title>\n      <div>\n        <div id=\"resizeBox\">\n          <!-- eslint-disable-next-line -->\n          <div class=\"appealContainer\" v-if=\"!isNetOff && !isReconn && (showAppealWarnNotice||showAppealClosureNotice)\" @click=\"toAppeal('discussion')\">\n            <div class=\"appealNotice\" v-show=\"showAppealWarnNotice\">\n              {{ $t('appeal_0011') }}\n            </div>\n            <div class=\"appealNotice\" v-show=\"showAppealClosureNotice\">\n              {{ $t('appeal_0010') }}\n            </div>\n            <i class=\"el-icon-arrow-right\"></i>\n          </div>\n          <div class=\"maskVisible\" v-show=\"maskVisible\"></div>\n          <div class=\"mess-talk custom-scrollbar\" ref=\"talkGroup\" id=\"talk\">\n            <div class=\"loadmore\" v-if=\"hasMore\" v-loading=\"listLoading\" element-loading-spinner=\"el-icon-loading\" @click=\"loadmorelist()\">\n              {{ $t('Universal_0361') }}\n            </div>\n            <div class=\"loadmore2 nomore\"\n              v-if=\"!hasMore && chatlistFlag\"\n              element-loading-spinner=\"el-icon-loading\"> <!-- && noMoreShowFlg-->\n              <div class=\"chatInfo\">\n                  <DiscussionIcon :name=\"groupInfo.groupName\" iconType=\"large2\" style=\"margin:0 auto;width:60px;-webkit-user-drag:none;\"/>\n                  <p class=\"pre\">{{groupInfo.groupName}}</p><!--groupInfo.groupName-->\n                  <span>\n                    {{ $t('chat_0001', {saveTime}) }}\n                  </span>\n                  <div\n                    @click=\"ShowGroupInvite\"\n                    class=\"invitebtn\"\n                    v-if=\"groupInfo.people < groupInfo.maxPeople && groupValidationActive != 2\">\n                    {{ $t('chat_0036') }}\n                  </div>\n              </div>\n            </div>\n            <!-- 图片查看 -->\n            <viewer :images=\"imglsit\" class=\"viewer\" ref=\"viewer\" @inited=\"inited\">\n              <img v-for=\"src in imglsit\" :src=\"src.url\" :key=\"src.msgId\" alt style=\"display: none\" />\n            </viewer>\n            <div class=\"mess-talk-self\">\n              <!-- ########## 在线消息  别人发送的############# -->\n              <!-- 多选实时消息 -->\n              <el-checkbox-group v-if=\"mutiChooseTag\" v-model=\"checkList2\" class=\"talkcheck\">\n                <el-checkbox\n                  v-for=\"(item, index) in chatList\"\n                  v-if=\"item.msgType != '14'\"\n                  :label=\"item\"\n                  :key=\"`${item._id}${index}`\"\n                  :disabled=\"item.disabled || item.sendStatus == 1 || item.sendStatus == -1\"\n                  data-list=\"chatList\"\n                  :id=\"item['msgId']\"\n                  :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                  :class=\"\n                    item.fromType == '408' ||\n                    item.fromType == '409' ||\n                    item.fromType == '410' ||\n                    item.fromType == '201' ||\n                    item.fromType == '215' ||\n                    item.fromType == '212'\n                      ? 'hidden'\n                      : item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1]) && item.disabled\n                      ? 'disabledWithTime'\n                      : item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\n                      ? 'higher'\n                      : item.disabled\n                      ? 'disabled'\n                      : ''\n                  \"\n                  :value=\"item.checked\"\n                  @change=\"multiSelectValidation(item)\"\n                  :checked=\"item.checked\"\n                >\n                  <div class=\"infotime\" v-if=\"item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                    {{ item.timestamp | diffTimeHand }}\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType != '4' &&\n                        item.msgType != '7' &&\n                        item.msgType != '44' &&\n                        item.msgType != '26' &&\n                        item.msgType != '13' &&\n                        item.msgType != '24' &&\n                        item.msgType != '14' &&\n                        item.msgType != '61'\n                    \"\n                  >\n                    <div class=\"mess-detail flex\" v-if=\"item.fromId != userId\">\n                      <span @click=\"lookMemberCard(item.fromId)\" @contextmenu.prevent=\"rightClick($event, item)\" class=\"member-icon-class\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                      <span class=\"mess-words other-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ showGroupMemberName(item) }}\n                          <LuckIdIcon\n                            v-if=\"showGroupMemberLevel(item).inviteCodeType == 1\"\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                          />\n                        </p>\n                        <div id=\"talkbubble\" :class=\"[getPopperClassName(item, 0),maxWidth(item),imgBubble(item)]\">\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :imglsit=\"imglsit\"\n                            :isShowRight=\"false\"\n                            :showAppealClosureNotice=\"showAppealClosureNotice\"\n                            :fromGroupType=\"fromGroupType\"\n                            :groupAuthByUser=\"groupAuthByUser\"\n                            :friendId=\"groupInfo.id\"\n                            @delMsg=\"delMsg\"\n                            @mutiChoose=\"mutiChoose\"\n                            @withdrawMessage=\"withdrawMessage(item)\"\n                            @transferQuote=\"transferQuote\"\n                            @toAppeal=\"toAppeal('single')\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                        </div>\n                        <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                      </span>\n                    </div>\n\n                    <!--在线消息 自己发送的 -->\n                    <div\n                      class=\"mess-detail-self flex justify-end\"\n                      v-if=\"\n                        item.fromId == userId &&\n                          item.msgType != '4' &&\n                          item.msgType != '7' &&\n                          item.msgType != '44' &&\n                          item.msgType != '26' &&\n                          item.msgType != '24' &&\n                          item.msgType != '14' &&\n                          item.msgType != '61'\n                      \"\n                    >\n                      <span class=\"mess-words self-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ item.nickName }}\n                          <LuckIdIcon\n                            v-if=\"item.inviteCodeType == 1\"\n                            :inviteCode=\"item.inviteCode\"\n                            :userRank=\"item.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"item.vipType\"\n                            :inviteCodeType=\"item.inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"myInfo.inviteCode\"\n                            :userRank=\"myInfo.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"myInfo.vipType\"\n                            :inviteCodeType=\"myInfo.inviteCodeType\"\n                          />\n                        </p>\n                        <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                          <MessageSendStauts\n                            v-bind:item=\"item\"\n                            :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                            @handSendImg=\"handSendImg\"\n                            @resendMsgs=\"sendQuill(item)\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <div id=\"talkbubblee\" :class=\"[getPopperClassName(item, 1),maxWidth(item),imgBubble(item)]\">\n                            <MessageFormatOnline\n                              v-bind:item=\"item\"\n                              :imglsit=\"imglsit\"\n                              :isShowRight=\"false\"\n                              :showAppealClosureNotice=\"showAppealClosureNotice\"\n                              :fromGroupType=\"fromGroupType\"\n                              :groupAuthByUser=\"groupAuthByUser\"\n                              :friendId=\"groupInfo.id\"\n                              @delMsg=\"delMsg\"\n                              @mutiChoose=\"mutiChoose\"\n                              @withdrawMessage=\"withdrawMessage(item)\"\n                              @transferQuote=\"transferQuote\"\n                              @toAppeal=\"toAppeal('single')\"\n                              @handSendImg=\"handSendImg\"\n                              @reHandSendVideo=\"reHandSendVideo\"\n                              @reHandSendFile=\"reHandSendFile\"\n                            />\n                          </div>\n                        </div>\n                        <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                      </span>\n                      <span @click=\"lookMemberCard(item.fromId)\" style=\"width:42px;height:42px;margin-right:-10px;\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                    </div>\n                    <!-- 当前 的 通知类消息 -->\n                  </div>\n                  <div\n                    v-if=\"item.msgType == '4'||item.msgType == '7'||item.msgType == '26'||item.msgType == '44'||item.msgType == '61'\"\n                    class=\"notice-wrap\"\n                  >\n                    <MessageNotice v-bind:item=\"item\" :sender=\"showSenderName(item)\" :receiver=\"showReceiverName(item)\" />\n                  </div>\n                </el-checkbox>\n              </el-checkbox-group>\n              <!--实时无多选-->\n              <div v-if=\"!mutiChooseTag\">\n                <div\n                  v-for=\"(item, index) in chatList\"\n                  :label=\"item\"\n                  :key=\"`${item._id}${index}`\"\n                  :disabled=\"item.disabled || item.sendStatus == 1 || item.sendStatus == -1\"\n                  data-list=\"chatList\"\n                  :id=\"item['msgId']\"\n                  :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                  :class=\"\n                    item.fromType == '408' ||\n                    item.fromType == '409' ||\n                    item.fromType == '410' ||\n                    item.fromType == '201' ||\n                    item.fromType == '215' ||\n                    item.fromType == '212'\n                      ? 'hidden'\n                      : ''\n                  \"\n                >\n                  <div class=\"infotime\" v-if=\"item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                    {{ item.timestamp | diffTimeHand }}\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType != '4' &&\n                        item.msgType != '7' &&\n                        item.msgType != '44' &&\n                        item.msgType != '26' &&\n                        item.msgType != '13' &&\n                        item.msgType != '24' &&\n                        item.msgType != '14' &&\n                        item.msgType != '61'\n                    \"\n                  >\n                    <div class=\"mess-detail flex\" v-if=\"item.fromId != userId\">\n                      <span @click=\"lookMemberCard(item.fromId)\" @contextmenu.prevent=\"rightClick($event, item)\" class=\"member-icon-class\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                      <span class=\"mess-words other-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ showGroupMemberName(item) }}\n                          <LuckIdIcon\n                            v-if=\"showGroupMemberLevel(item).inviteCodeType == 1\"\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                          />\n                        </p>\n                        <div id=\"talkbubble\"\n                             @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                             :class=\"[getPopperClassName(item, 0), maxWidth(item),imgBubble(item)]\"\n                             class=\"voice-accept\">\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :imglsit=\"imglsit\"\n                            :groupAuthByUser=\"groupAuthByUser\"\n                            :soundUrlObj=\"soundUrlObj\"\n                            :friendId=\"groupInfo.id\"\n                            :showAppealClosureNotice=\"showAppealClosureNotice\"\n                            :fromGroupType=\"fromGroupType\"\n                            @handArm=\"handArm\"\n                            @acceptMessage=\"acceptMessage(item)\"\n                            @delMsg=\"delMsg\"\n                            @scrollBottom=\"scrollBottom\"\n                            @mutiChoose=\"mutiChoose\"\n                            @withdrawMessage=\"withdrawMessage(item)\"\n                            @transferQuote=\"transferQuote\"\n                            @toAppeal=\"toAppeal('single')\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <i class=\"iconfont icon-dian voice-icon\" v-if=\"item.msgType == '9' && item.msgBody.unreadMessage == true\"></i>\n                        </div>\n                        <QuotFormate\n                          v-if=\"item.msgType == 25\"\n                          :item=\"item\"\n                          :emojiList=\"emojiList\"\n                          @lookQuoteCard=\"lookQuoteCard\"\n                        ></QuotFormate>\n                      </span>\n                    </div>\n\n                    <!--在线消息 自己发送的 -->\n                    <div class=\"mess-detail-self flex justify-end\" v-if=\"item.fromId == userId\">\n                      <span class=\"mess-words self-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ item.nickName }}\n                          <LuckIdIcon\n                            v-if=\"item.inviteCodeType == 1\"\n                            :inviteCode=\"item.inviteCode\"\n                            :userRank=\"item.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"item.vipType\"\n                            :inviteCodeType=\"item.inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"myInfo.inviteCode\"\n                            :userRank=\"myInfo.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"myInfo.vipType\"\n                            :inviteCodeType=\"myInfo.inviteCodeType\"\n                          />\n                        </p>\n                        <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                          <MessageSendStauts\n                            v-bind:item=\"item\"\n                            :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                            @handSendImg=\"handSendImg\"\n                            @resendMsgs=\"sendQuill(item)\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <div id=\"talkbubblee\"\n                               @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                               :class=\"[getPopperClassName(item, 1), maxWidth(item),imgBubble(item)]\"\n                          >\n                            <MessageFormatOnline\n                              v-bind:item=\"item\"\n                              :imglsit=\"imglsit\"\n                              :groupAuthByUser=\"groupAuthByUser\"\n                              :soundUrlObj=\"soundUrlObj\"\n                              :friendId=\"groupInfo.id\"\n                              :showAppealClosureNotice=\"showAppealClosureNotice\"\n                              :fromGroupType=\"fromGroupType\"\n                              @handArm=\"handArm\"\n                              @scrollBottom=\"scrollBottom\"\n                              @delMsg=\"delMsg\"\n                              @mutiChoose=\"mutiChoose\"\n                              @withdrawMessage=\"withdrawMessage(item)\"\n                              @transferQuote=\"transferQuote\"\n                              @toAppeal=\"toAppeal('single')\"\n                              @handSendImg=\"handSendImg\"\n                              @reHandSendVideo=\"reHandSendVideo\"\n                              @reHandSendFile=\"reHandSendFile\"                              \n                            />\n                          </div>\n                        </div>\n                        <QuotFormate\n                          v-if=\"item.msgType == 25\"\n                          :item=\"item\"\n                          :emojiList=\"emojiList\"\n                          @lookQuoteCard=\"lookQuoteCard\"\n                        ></QuotFormate>\n                      </span>\n                      <span @click=\"lookMemberCard(item.fromId)\" style=\"width:42px;height:42px;margin-right:-10px;\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                    </div>\n                    <!-- 当前 的 通知类消息 -->\n                  </div>\n                  <div\n                    v-if=\"item.msgType == '4' || item.msgType == '7' || item.msgType == '26'\n                    || item.msgType == '14' || item.msgType == '44' || item.msgType == '61'\"\n                    class=\"notice-wrap\"\n                  >\n                    <MessageNotice :item=\"item\" :sender=\"showSenderName(item)\" :receiver=\"showReceiverName(item)\" @reEditMsg=\"reEditMsg\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 工具栏-->\n          <div id=\"resize\" v-if=\"!silentMaskShow\" @mousedown=\"resizeChange\"></div>\n          <div v-else style=\"height: 6px\"></div>\n          <div id=\"down\" class=\"mess-footer align-center\" ref=\"down\">\n            <div class=\"chatother\">\n              <el-popover placement=\"top-start\" width=\"424\" trigger=\"click\" v-model=\"emojiVisible\">\n                <div class=\"emojList\">\n                  <span v-for=\"item in emojiList\" :key=\"item.id\">\n                    <img style :title=\"item.tag\" :src=\"`/resources/emoji/${item.file}`\" @click=\"insertImg(item.file, item.tag)\" />\n                  </span>\n                </div>\n                <span slot=\"reference\" class=\"emojIcon\">\n                  <img draggable='false' src=\"../../../../assets/images/send_msg_emoj.png\" />\n                </span>\n              </el-popover>\n              <span class=\"add\" @click=\"handUpload()\">\n                <img draggable='false' src=\"../../../../assets/images/send_msg_folder.png\" />\n                <input type=\"file\" :multiple=\"multiple\" @change=\"changeHand($event)\" ref=\"files\" style=\"display: none\" />\n              </span>\n              <img draggable='false' src=\"../../../../assets/images/send_msg_screenshot.png\" @click=\"captureScreen\" />\n              <el-popover\n                ref=\"screenShot\"\n                trigger=\"click\"\n                placement=\"bottom\"\n                visible-arrow=\"false\"\n                v-model=\"screenShotVisible\"\n                popper-class=\"screen-select-class\"\n              >\n                <div>\n                  <el-checkbox v-model=\"screenSelect\" class=\"screenSelectClass\" @change=\"screenSelectChange\">\n                    {{ $t('chat_comm_set_0022') }}\n                  </el-checkbox>\n                </div>\n                <i slot=\"reference\" v-popover:screenShot class=\"el-icon-caret-bottom captureScreenClass\"></i>\n              </el-popover>\n            </div>\n            <!-- <span class=\"wordNumber\">{{TiLength}}/1500</span> -->\n            <div class=\"mess-square\" id=\"mess-squareId\" @contextmenu.prevent=\"_quillRightClick($event)\">\n              <quill-editor\n                class=\"ql-editor\"\n                v-model=\"texthtml\"\n                ref=\"myQuillEditor\"\n                :options=\"editorOption\"\n                @keydown.ctrl.enter.native=\"editorWrap()\"\n                @keydown.alt.enter.native=\"editorWrap()\"\n                @keydown.meta.enter.native=\"editorWrap()\"\n                @paste.native=\"pasteMe($event)\"\n                @ready=\"onEditorReady($event)\"\n                @blur=\"onEditorBlur($event)\"\n                @change=\"onEditorChange($event, decimalNum)\"\n              ></quill-editor>\n              <!-- @keyup.shift.50.native=\"getAtUserList()\"\n                @keypress.shift.50.native=\"getAtUserList()\"\n                @keydown.shift.50.native=\"getAtUserList()\" -->\n            </div>\n            <div class=\"mess-send\">\n              <el-tag closable type=\"info\" @close=\"closeQuote()\" effect=\"dark\" v-show=\"quoteVisible\" class=\"quote\"\n                ><span ref=\"quoteMsgs\">{{ quoteMsg }}</span></el-tag\n              >\n              <button class=\"send-btn\" @click=\"sendQuillByThrottle\" :disabled=\"sendBtnDisabled\">\n                {{ $t('Universal_0046') }}\n              </button>\n            </div>\n\n            <SilentMask\n              v-show=\"silentMaskShow\"\n              :fromType=\"fromType\"\n              class=\"popContainer\"\n              ref=\"silentMask\"\n              :style=\"{ height: silentMaskHeight }\"\n            ></SilentMask>\n          </div>\n        </div>\n        <div v-show=\"isSomebodyAtYou\" class=\"by-at\" @click.stop=\"_at_handleScrollToCurrentAt\">\n          {{ $t('chat_0041') }}\n          <i class=\"el-icon-close\" @click.stop=\"_at_handleCloseAtTips\"></i>\n        </div>\n        <!-- 消息提示按钮 -->\n        <div v-show=\"isShowMoreList\" class=\"by-more-list\" @click=\"scrollBottom\">\n          <el-button v-if=\"newMsgLength > 0\" class=\"by-more-list\" icon=\"el-icon-arrow-down\"> \n          {{ $t('chat_0128', {value: newMsgLength}) }}</el-button>\n          <el-button v-else class=\"by-more-list\" icon=\"el-icon-arrow-down\" ></el-button>\n        </div>\n        <div v-if=\"!rightStatus\" id=\"checklist\" class=\"mess-checklist\">\n          <ul>\n            <li class=\"liMenu\" :class=\"idx == index ? 'hover' : ''\" @click=\"son(item, idx)\" v-for=\"(item, idx) in menu\" :key=\"idx\">\n              {{ item }}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <!--多选操作面板-->\n    <el-drawer\n      title\n      :visible.sync=\"mutiPanel\"\n      :direction=\"'btt'\"\n      :with-header=\"true\"\n      :modal=\"false\"\n      :wrapperClosable=\"false\"\n      :show-close=\"true\"\n      class=\"mutiPanel\"\n      id=\"mutiPanel\"\n      @close=\"closeMutiPnel()\"\n    >\n      <span @click=\"multiRelay(false)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_relay.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0033') }}</p>\n      </span>\n      <span @click=\"multiRelay(true)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_merge.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0034') }}</p>\n      </span>\n      <span @click=\"batchDelMsg()\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_delete.png\" /><br />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0032') }}</p>\n      </span>\n    </el-drawer>\n    <!--群设置弹框 groupSystemAble-->\n    <el-drawer\n      title=\"我是标题\"\n      :visible.sync=\"groupSystemAble\"\n      :direction=\"'rtl'\"\n      :with-header=\"false\"\n      :modal=\"false\"\n      \n      @close=\"closeDialog\"\n      size=\"310px\"\n      style=\"margin-top: -53px\"\n    >\n    <template v-if=\"groupSystemAble\">\n      <GroupInfo\n        :groupInfo=\"groupInfo\"\n        :authStatus=\"authStatus\"\n        @closeDialog=\"closeDialog\"\n        v-show=\"groupSystemAbleInfo\"\n        @refreshGroupInfo=\"refreshGroupInfo\"\n        ref=\"groupDetailsInfo\"\n      ></GroupInfo>\n\n      <div class=\"groupSystemBox\" v-if=\"groupSystemAbleSet\">\n        <div class=\"top\">\n          <span>{{ $t('Universal_0065') }}</span>\n          <i class=\"el-icon-close\" @click=\"groupSystemAble = false;groupSystemAbleSet=false\"></i>\n        </div>\n        <div class=\"content\" style=\"margin-top: 50px\">\n          <ul>\n            <li>\n              <span>{{ $t('Universal_0362') }}</span>\n              <el-switch\n                v-model=\"groupSystemObj.msgTopValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"groupSystemObj.msgTopClick\"\n                @change=\"stickyChange\"\n              ></el-switch>\n            </li>\n            <li>\n              <span>{{ $t('chat_0057') }}</span>\n              <el-switch\n                v-model=\"groupSystemObj.msgOutlineValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"groupSystemObj.msgOutlineClick\"\n                @change=\"NotifyChange\"\n              ></el-switch>\n            </li>\n            <li @click=\"historyVisible = true\">\n              <span>{{ $t('chat_0059') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n            <li @click=\"tipOff()\">\n              <span>{{ $t('report_0001') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n            <li @click=\"messageSaveTime\" v-if=\"authStatus == 1\">\n              <span>{{ $t('chat_0058') }}</span>\n              <span class=\"many-select\">\n                {{ saveTime }}\n                <i class=\"el-icon-arrow-right\"></i>\n              </span>\n            </li>\n          </ul>\n        </div>\n        <div slot=\"footer\" class=\"drawer-footer upgradeGroup\" v-if=\"authStatus == 1\">\n          <span @click=\"upgradeGroup\">{{ $t('book_group_0007') }}</span>\n          <span @click=\"releaseGroup\">{{ $t('book_group_0010') }}</span>\n        </div>\n        <div slot=\"footer\" class=\"drawer-footer outGroup\" v-else>\n          <span @click=\"quitGroup\">{{ $t('book_group_0008') }}</span>\n        </div>\n      </div>\n      <GroupMember\n        v-bind:dialogMember=\"dialogMember\"\n        groupMemberFrom=\"discussion\"\n        :groupId=\"groupInfo.id\"\n        :maxPeople=\"groupInfo.maxPeople\"\n        :groupSystemAbleMem=\"groupSystemAbleMem\"\n        :authStatus=\"this.authStatus\"\n        :memberSingleChatStatus=\"groupSystemObj.chatSingle\"\n        :showAppealClosureNotice=\"showAppealClosureNotice\"\n       \n        @closeDialog=\"closeDialog\"\n        @ShowGroupInvite=\"ShowGroupInvite\"\n        @ShowRemark=\"ShowRemark\"\n        @updatePeopleInGroup=\"updatePeopleInGroup\"\n        v-if=\"groupSystemAbleMem\"\n        ref=\"groupmember\"\n      />\n    </template>\n    </el-drawer>\n    <!--清除聊天记录-->\n    <el-dialog :title=\"$t('chat_0059')\" :visible.sync=\"historyVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <span>{{ $t('chat_0060') }}</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"historyVisible = false\">{{ $t('Universal_0063') }}</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"clearLocal\">{{ $t('Universal_0062') }}</el-button>\n      </span>\n    </el-dialog>\n    <!--消息保存时长-->\n    <el-dialog :title=\"$t('chat_0058')\" :visible.sync=\"saveTimeVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <ul class=\"selectItem\">\n        <li\n          v-for=\"(item, index) in saveTimeArr\"\n          :key=\"index\"\n          :class=\"saveTimeActive == index ? 'active' : ''\"\n          @click=\"saveTimeSelected(item, index)\"\n        >\n          {{ item.label }}\n          <i class=\"el-icon-check\"></i>\n        </li>\n      </ul>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelsaveExpireTime()\">{{ $t('Universal_0063') }}</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveExpireTime(saveTimeActive)\">{{ $t('Universal_0062') }}</el-button>\n      </span>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"Comtit\"\n      from=\"discussion\"\n      :authStatus=\"authStatus\"\n      :groupId=\"groupInfo.id\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      :mergeTransfer=\"merge\"\n      :mergeTransferName=\"mergeTransferName\"\n      :showAppealClosureNotice=\"showAppealClosureNotice\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @upgradeGroup=\"upgradeGroup\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :groupId=\"groupInfo.id\"\n      :groupInfo=\"groupInfo\"\n      :appealInfo=\"appealInfo\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :groupId=\"groupInfo.id\"\n      :groupInfo=\"groupInfo\"\n      :appealInfo=\"appealInfo\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n    <DialogAddFriendVisible\n      ref=\"myordernum\"\n      :dialogAddFriendsVisible=\"dialogAddFriendsVisible\"\n      @handCancelFriDialog=\"handCancelFriDialog\"\n      @handConfirmFriDialog=\"handConfirmFriDialog\"\n      :friendData=\"friendData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <DialogAddGroupVisible\n      :dialogAddGroupsVisible=\"dialogAddGroupsVisible\"\n      @handConfirmGroupDialog=\"handConfirmGroupDialog\"\n      @handCloseAddGroups=\"handCancelGroupDialog\"\n      :groupData=\"groupData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <GroupCard :groupInfo=\"groupCardInfo\" ref=\"groupCard\" @toAppeal=\"toAppeal('single')\"></GroupCard>\n    <GroupUpgrade :info=\"groupInfo\" ref=\"groupUpgrade\" />\n    <DiscussionNameEdit\n      :name=\"groupInfo.groupName\"\n      :group-id=\"groupInfo.id\"\n      @refreshGroupInfo=\"refreshGroupInfo\"\n      ref=\"discussionNameEdit\"\n    />\n    <el-dialog\n      :title=\"$t('chat_select_chat_0007')\"\n      :visible.sync=\"sendFile\"\n      width=\"320px\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"cancelSendFile\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"sendFile\">\n        <DiscussionIcon :name=\"groupInfo.groupName\" />\n        <span>{{ this.groupInfo.groupName }}</span>\n      </div>\n      <el-input type=\"textarea\" class=\"sendFileInput\" :rows=\"2\" resize=\"none\" :disabled=\"true\" v-model=\"fileName\" size=\"small\"></el-input>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"(sendFile = false), cancelSendFile()\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"(sendFile = false), sendFileConfirm($event)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import { ipcRenderer } from \"electron\";\nimport Title from \"../components/title.vue\";\n// import DialogAddGroupVisible from \"@/view/add-friends-group/dialog/add-groups\";\n\n// import DialogAddFriendVisible from \"@/view/add-friends-group/dialog/add-friends\";\n\n// import MemberCardOther from \"@/components/memberCard/MemberCardOther\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\n// import MemberIcon from \"@/components/memberIcon/MemberIcon\";\n// import LevelIcon from \"@/components/memberIcon/LevelIcon\";\n// import LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\n// import {\n//   diffTimeInChat,\n// } from \"@/utils\";\nimport { mapState } from \"vuex\";\nimport bus from \"@/utils/eventbus\";\n// import {\n//   uploadPicture,\n// } from \"./server\";\n\n// import QuotFormate from \"@/view/chat/components/common/QuotFormate\";\n// import emojiList from \"@/utils/emoji.js\";\n// import GroupAndInviteChat from \"@/components/chat/GroupAndInviteChat\";\n// import AppealsDialog from \"@/view/chat/appeals\";\n// import ImpeachDialog from \"@/view/chat/impeach\";\n// import MessageSendStauts from \"@/view/chat/components/common/MessageSendStatus\";\nimport GroupMember from \"@/view/chat/discussion/member\";\nimport GroupInfo from \"../components/GroupInfo\";\nimport GroupUpgrade from \"../components/GroupUpgrade\";\nimport DiscussionNameEdit from \"../components/DiscussionNameEdit\";\nimport SilentMask from \"../components/SilentMask\";\nimport GroupCard from \"../components/GroupCard\";\n// import MessageFormatOnline from \"@/view/chat/components/common/MessageFormatOnline\";\n// import MessageNotice from \"../../group/message/MessageNotice\";\n// import FileUpload from \"@/utils/fileUpload\";\n\n// import defaultImg from '@/view/chat/images/default.png';\nimport defaultImg from '@/assets/images/default.png';\n\nimport mixins from '../../mixin/mixin';\nimport groupMixin from '../../mixin/groupMixin';\nimport SQLUtils from '@/components/db/sqlite.js';\n\nexport default {\n  name: 'Discussion',\n  mixins: [mixins, groupMixin],\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title,\n    GroupMember, //群成员\n    GroupInfo,\n    SilentMask,\n    GroupCard,\n    GroupUpgrade,\n    DiscussionNameEdit,\n    DiscussionIcon\n  },\n\n  data() {\n    let thisVueInstance=this;\n    //这里存放数据\n    return {\n      fromGroupType:'discussion',\n      // membList: [],\n      editorOption: {\n        placeholder: this.$t('chat_0002'),\n        theme: \"bubble\", // or 'bubble'\n        formats: [\"image\", \"alt\", \"height\", \"width\", \"mention\"],\n        modules: {\n          toolbar:[],\n          clipboard: {\n            matchers: [\n            ]\n          },\n          mention: {\n            mentionDenotationChars: [\"@\"],\n            positioningStrategy: \"fixed\",\n            allowedChars:/^[a-zA-Z0-9_\\s\\u4e00-\\u9fa5]*$/,\n            defaultMenuOrientation:\"top\",\n            spaceAfterInsert:true,\n            mentionContainerClass:\"atBox\",\n            listItemClass:\"atInput\",\n            dataAttributes:['id',\"value\",'denotationChar', 'link', 'target','disabled',\"image\",\n              \"nickName\",\"nick_name\",\"nick_name_pinyin\",\"member_notes\",\n              \"member_notes_pinyin\",\"friendNotes\",\"friendNotes_pinyin\"],\n            renderItem: (data) => {\n              return `\n                  <div style='width:100%;overflow:hidden;'>\n                    <img src=\"${data['image']||require('../../../../assets/images/defalut@.png')}\"\n                    onerror=\"javascript:this.src='${defaultImg}';\" />\n                    <span>${data['nickName']}</span>\n                  </div>\n                `\n            },\n            onSelect:(item, insertItem)=>{\n              insertItem(item,true)\n              // console.log(item)\n            },\n            source: async function(searchTerm, renderList, mentionChar) {\n              let values;\n              if (mentionChar == \"@\") {\n                values = await SQLUtils.getALLAtUserList(thisVueInstance.groupId,thisVueInstance.authStatus);\n              }\n              // console.log(values,searchTerm)\n              if (searchTerm.length === 0) {\n                renderList(values, searchTerm);\n              } else {\n                const matches = [],str=searchTerm.toLowerCase();\n                for (let i = 0,item; i < values.length; i++){\n                  item=values[i];\n                  if (\n                    //  输入框 输入@搜索用户 过滤条件\n                    item.nick_name && item.nick_name.toLowerCase().indexOf(str) > -1 ||\n                    item.nick_name_pinyin && item.nick_name_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.friendNotes && item.friendNotes.toLowerCase().indexOf(str) > -1 ||\n                    item.friendNotes_pinyin && item.friendNotes_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.member_notes && item.member_notes.toLowerCase().indexOf(str) > -1 ||\n                    item.member_notes_pinyin && item.member_notes_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.inviteCode && item.inviteCode.toLowerCase().indexOf(str) > -1\n                  ){\n                    matches.push(values[i]);\n                  }\n                }\n                renderList(matches, searchTerm);\n              }\n            }\n          }\n        },\n      },     \n      // at 相关\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      membList: state => {\n        return state.search.membList;\n      },\n    }),\n  },\n  //监控data中的数据变化\n  watch: {\n    async $route() {\n      await this.init();\n      await this.inCurrentGroup();\n      this.stopVideo();\n    },\n    chatList(val) {\n      if (localStorage.getItem('specailChat') == 'true') {\n        localStorage.setItem('specailChat', false);\n      } else {\n        // this.scrollBottom();\n      }\n      if (val && val.length > 0) {\n        let msgType = val[val.length - 1].msgType;\n        if (msgType == '4' || msgType == '7') {\n          this.searchGroupMembersAndInfo();\n        } else if (\n          msgType == '1' ||\n          msgType == '2' ||\n          msgType == '6' ||\n          msgType == '9' ||\n          msgType == '10' ||\n          msgType == '15' ||\n          msgType == '25' ||\n          msgType == '40'\n        ) {\n          if (val[val.length - 1].fromIcon == undefined) {\n            val[val.length - 1].fromIcon = this.memberImg[val[val.length - 1].fromId];\n          }\n        }\n      }\n    },\n    getNetStatus(val) {\n      this.isNetOff = val == 'offline' ? true : false;\n    },\n    getSocketStatus(val) {\n      this.isReconn = val == 'online' ? false : true;\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.initFlag = true;\n    if (this.$route.query.item && this.$route.query.item['groupAuthByUser']) {\n      this.groupAuthByUser = this.$route.query.item['groupAuthByUser'];\n    }\n    this.item = this.$route.query.item;\n    bus.$on('closeMemberinfo',this.closeMember);\n    // this.GET_LAST_MSG_LIST();\n  },\n  //方法集合\n  methods: {\n    closeMember(){\n      this.groupSystemAble = false\n    },\n    async upgradeGroup() {\n      if(this.showAppealClosureNotice) return this.$message.error(this.$t('appeal_0014'));\n      this.GroupInviteVisible = false;\n      this.onUpgradeGroup();\n    },\n\n    onUpgradeGroup() {\n      this.$nextTick(async () => {\n        this.$refs.groupUpgrade.onPop();\n      });\n    },\n\n    showSenderName(item) {\n      let unknownName = item.refMsgBody.users ? item.refMsgBody.users[0].nickName : '';\n      if (item.fromId == this.userId && item.msgType == '26') {\n        if(item.msgBody.userId != this.userId){\n          item.fromName2 = this.memberFriendName[item.msgBody.userId];\n        }\n        return this.$t('Universal_0036');\n      } else if (this.authStatus == 3) {\n        // return this.memberFriendName[item.fromId] || item.friendFriendNotes || item.nickName || unknownName || '';\n        return item.nickName || unknownName || '';\n      } else {\n        // return this.memberAdminName[item.fromId] || unknownName || '';\n        return item.fromName || item.nickName || unknownName || '';\n      }\n    },\n\n    onEditDiscussionName() {\n      this.$nextTick(async () => {\n        this.$refs.discussionNameEdit.onPop();\n      });\n    },\n\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.init();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {\n    // this.scrollBottom();\n  }, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeRouteUpdate(to, from, next) {\n    this.initDraft(from);\n    this.chatlistFlag=false;\n    next();\n  },\n\n  beforeRouteLeave(to, from, next) {\n    if (to.path !== \"/app/chat\") {\n      this.initDraft(from);\n      this.chatlistFlag = false;\n    }\n    next();\n  },\n  destroyed() {\n    bus.$off('closeMemberinfo',this.closeMember);\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "\n<!-- 讨论组会话框 -->\n<template>\n  <div class=\"message\" v-loading=\"uploadLoading\" id=\"messageBox\" @click=\"AtonBlur\">\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardUserId\"\n      :groupId=\"groupId\"\n      ref=\"cardOther\"\n      @handleclosecard=\"handleclosecard\"\n      @toAppeal=\"toAppeal('single')\"\n    ></member-card-other>\n    <div class=\"message-box\">\n      <Title :authStatus=\"authStatus\" @goSetting=\"goSetting\" ref=\"menuTit\">\n        <div style=\"display: flex; align-items: center; cursor: pointer\" class=\"noDrag\">\n          <span class=\"group-name\" :title=\"groupName\" @click=\"showGroup()\">\n            <i class=\"iconfont icon-laba\"></i>\n            {{ groupName }}\n          </span>\n          <span class=\"group-people\" v-if=\"groupInfo.people\">({{ groupInfo.people }})</span>\n          <img src=\"../../../../assets/images/edit.png\" @click=\"onEditDiscussionName\" class=\"group-edit-icon img_17\" alt />\n        </div>\n      </Title>\n      <div>\n        <div id=\"resizeBox\">\n          <!-- eslint-disable-next-line -->\n          <div class=\"appealContainer\" v-if=\"!isNetOff && !isReconn && (showAppealWarnNotice||showAppealClosureNotice)\" @click=\"toAppeal('discussion')\">\n            <div class=\"appealNotice\" v-show=\"showAppealWarnNotice\">\n              {{ $t('appeal_0011') }}\n            </div>\n            <div class=\"appealNotice\" v-show=\"showAppealClosureNotice\">\n              {{ $t('appeal_0010') }}\n            </div>\n            <i class=\"el-icon-arrow-right\"></i>\n          </div>\n          <div class=\"maskVisible\" v-show=\"maskVisible\"></div>\n          <div class=\"mess-talk custom-scrollbar\" ref=\"talkGroup\" id=\"talk\">\n            <div class=\"loadmore\" v-if=\"hasMore\" v-loading=\"listLoading\" element-loading-spinner=\"el-icon-loading\" @click=\"loadmorelist()\">\n              {{ $t('Universal_0361') }}\n            </div>\n            <div class=\"loadmore2 nomore\"\n              v-if=\"!hasMore && chatlistFlag\"\n              element-loading-spinner=\"el-icon-loading\"> <!-- && noMoreShowFlg-->\n              <div class=\"chatInfo\">\n                  <DiscussionIcon :name=\"groupInfo.groupName\" iconType=\"large2\" style=\"margin:0 auto;width:60px;-webkit-user-drag:none;\"/>\n                  <p class=\"pre\">{{groupInfo.groupName}}</p><!--groupInfo.groupName-->\n                  <span>\n                    {{ $t('chat_0001', {saveTime}) }}\n                  </span>\n                  <div\n                    @click=\"ShowGroupInvite\"\n                    class=\"invitebtn\"\n                    v-if=\"groupInfo.people < groupInfo.maxPeople && groupValidationActive != 2\">\n                    {{ $t('chat_0036') }}\n                  </div>\n              </div>\n            </div>\n            <!-- 图片查看 -->\n            <viewer :images=\"imglsit\" class=\"viewer\" ref=\"viewer\" @inited=\"inited\">\n              <img v-for=\"src in imglsit\" :src=\"src.url\" :key=\"src.msgId\" alt style=\"display: none\" />\n            </viewer>\n            <div class=\"mess-talk-self\">\n              <!-- ########## 在线消息  别人发送的############# -->\n              <!-- 多选实时消息 -->\n              <el-checkbox-group v-if=\"mutiChooseTag\" v-model=\"checkList2\" class=\"talkcheck\">\n                <el-checkbox\n                  v-for=\"(item, index) in chatList\"\n                  v-if=\"item.msgType != '14'\"\n                  :label=\"item\"\n                  :key=\"`${item._id}${index}`\"\n                  :disabled=\"item.disabled || item.sendStatus == 1 || item.sendStatus == -1\"\n                  data-list=\"chatList\"\n                  :id=\"item['msgId']\"\n                  :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                  :class=\"\n                    item.fromType == '408' ||\n                    item.fromType == '409' ||\n                    item.fromType == '410' ||\n                    item.fromType == '201' ||\n                    item.fromType == '215' ||\n                    item.fromType == '212'\n                      ? 'hidden'\n                      : item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1]) && item.disabled\n                      ? 'disabledWithTime'\n                      : item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\n                      ? 'higher'\n                      : item.disabled\n                      ? 'disabled'\n                      : ''\n                  \"\n                  :value=\"item.checked\"\n                  @change=\"multiSelectValidation(item)\"\n                  :checked=\"item.checked\"\n                >\n                  <div class=\"infotime\" v-if=\"item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                    {{ item.timestamp | diffTimeHand }}\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType != '4' &&\n                        item.msgType != '7' &&\n                        item.msgType != '44' &&\n                        item.msgType != '26' &&\n                        item.msgType != '13' &&\n                        item.msgType != '24' &&\n                        item.msgType != '14' &&\n                        item.msgType != '61'\n                    \"\n                  >\n                    <div class=\"mess-detail flex\" v-if=\"item.fromId != userId\">\n                      <span @click=\"lookMemberCard(item.fromId)\" @contextmenu.prevent=\"rightClick($event, item)\" class=\"member-icon-class\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                      <span class=\"mess-words other-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ showGroupMemberName(item) }}\n                          <LuckIdIcon\n                            v-if=\"showGroupMemberLevel(item).inviteCodeType == 1\"\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                          />\n                        </p>\n                        <div id=\"talkbubble\" :class=\"[getPopperClassName(item, 0),maxWidth(item),imgBubble(item)]\">\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :imglsit=\"imglsit\"\n                            :isShowRight=\"false\"\n                            :showAppealClosureNotice=\"showAppealClosureNotice\"\n                            :fromGroupType=\"fromGroupType\"\n                            :groupAuthByUser=\"groupAuthByUser\"\n                            :friendId=\"groupInfo.id\"\n                            @delMsg=\"delMsg\"\n                            @mutiChoose=\"mutiChoose\"\n                            @withdrawMessage=\"withdrawMessage(item)\"\n                            @transferQuote=\"transferQuote\"\n                            @toAppeal=\"toAppeal('single')\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                        </div>\n                        <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                      </span>\n                    </div>\n\n                    <!--在线消息 自己发送的 -->\n                    <div\n                      class=\"mess-detail-self flex justify-end\"\n                      v-if=\"\n                        item.fromId == userId &&\n                          item.msgType != '4' &&\n                          item.msgType != '7' &&\n                          item.msgType != '44' &&\n                          item.msgType != '26' &&\n                          item.msgType != '24' &&\n                          item.msgType != '14' &&\n                          item.msgType != '61'\n                      \"\n                    >\n                      <span class=\"mess-words self-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ item.nickName }}\n                          <LuckIdIcon\n                            v-if=\"item.inviteCodeType == 1\"\n                            :inviteCode=\"item.inviteCode\"\n                            :userRank=\"item.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"item.vipType\"\n                            :inviteCodeType=\"item.inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"myInfo.inviteCode\"\n                            :userRank=\"myInfo.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"myInfo.vipType\"\n                            :inviteCodeType=\"myInfo.inviteCodeType\"\n                          />\n                        </p>\n                        <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                          <MessageSendStauts\n                            v-bind:item=\"item\"\n                            :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                            @handSendImg=\"handSendImg\"\n                            @resendMsgs=\"sendQuill(item)\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <div id=\"talkbubblee\" :class=\"[getPopperClassName(item, 1),maxWidth(item),imgBubble(item)]\">\n                            <MessageFormatOnline\n                              v-bind:item=\"item\"\n                              :imglsit=\"imglsit\"\n                              :isShowRight=\"false\"\n                              :showAppealClosureNotice=\"showAppealClosureNotice\"\n                              :fromGroupType=\"fromGroupType\"\n                              :groupAuthByUser=\"groupAuthByUser\"\n                              :friendId=\"groupInfo.id\"\n                              @delMsg=\"delMsg\"\n                              @mutiChoose=\"mutiChoose\"\n                              @withdrawMessage=\"withdrawMessage(item)\"\n                              @transferQuote=\"transferQuote\"\n                              @toAppeal=\"toAppeal('single')\"\n                              @handSendImg=\"handSendImg\"\n                              @reHandSendVideo=\"reHandSendVideo\"\n                              @reHandSendFile=\"reHandSendFile\"\n                            />\n                          </div>\n                        </div>\n                        <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                      </span>\n                      <span @click=\"lookMemberCard(item.fromId)\" style=\"width:42px;height:42px;margin-right:-10px;\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                    </div>\n                    <!-- 当前 的 通知类消息 -->\n                  </div>\n                  <div\n                    v-if=\"item.msgType == '4'||item.msgType == '7'||item.msgType == '26'||item.msgType == '44'||item.msgType == '61'\"\n                    class=\"notice-wrap\"\n                  >\n                    <MessageNotice v-bind:item=\"item\" :sender=\"showSenderName(item)\" :receiver=\"showReceiverName(item)\" />\n                  </div>\n                </el-checkbox>\n              </el-checkbox-group>\n              <!--实时无多选-->\n              <div v-if=\"!mutiChooseTag\">\n                <div\n                  v-for=\"(item, index) in chatList\"\n                  :label=\"item\"\n                  :key=\"`${item._id}${index}`\"\n                  :disabled=\"item.disabled || item.sendStatus == 1 || item.sendStatus == -1\"\n                  data-list=\"chatList\"\n                  :id=\"item['msgId']\"\n                  :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                  :class=\"\n                    item.fromType == '408' ||\n                    item.fromType == '409' ||\n                    item.fromType == '410' ||\n                    item.fromType == '201' ||\n                    item.fromType == '215' ||\n                    item.fromType == '212'\n                      ? 'hidden'\n                      : ''\n                  \"\n                >\n                  <div class=\"infotime\" v-if=\"item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                    {{ item.timestamp | diffTimeHand }}\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType != '4' &&\n                        item.msgType != '7' &&\n                        item.msgType != '44' &&\n                        item.msgType != '26' &&\n                        item.msgType != '13' &&\n                        item.msgType != '24' &&\n                        item.msgType != '14' &&\n                        item.msgType != '61'\n                    \"\n                  >\n                    <div class=\"mess-detail flex\" v-if=\"item.fromId != userId\">\n                      <span @click=\"lookMemberCard(item.fromId)\" @contextmenu.prevent=\"rightClick($event, item)\" class=\"member-icon-class\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                      <span class=\"mess-words other-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ showGroupMemberName(item) }}\n                          <LuckIdIcon\n                            v-if=\"showGroupMemberLevel(item).inviteCodeType == 1\"\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                          />\n                        </p>\n                        <div id=\"talkbubble\"\n                             @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                             :class=\"[getPopperClassName(item, 0), maxWidth(item),imgBubble(item)]\"\n                             class=\"voice-accept\">\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :imglsit=\"imglsit\"\n                            :groupAuthByUser=\"groupAuthByUser\"\n                            :soundUrlObj=\"soundUrlObj\"\n                            :friendId=\"groupInfo.id\"\n                            :showAppealClosureNotice=\"showAppealClosureNotice\"\n                            :fromGroupType=\"fromGroupType\"\n                            @handArm=\"handArm\"\n                            @acceptMessage=\"acceptMessage(item)\"\n                            @delMsg=\"delMsg\"\n                            @scrollBottom=\"scrollBottom\"\n                            @mutiChoose=\"mutiChoose\"\n                            @withdrawMessage=\"withdrawMessage(item)\"\n                            @transferQuote=\"transferQuote\"\n                            @toAppeal=\"toAppeal('single')\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <i class=\"iconfont icon-dian voice-icon\" v-if=\"item.msgType == '9' && item.msgBody.unreadMessage == true\"></i>\n                        </div>\n                        <QuotFormate\n                          v-if=\"item.msgType == 25\"\n                          :item=\"item\"\n                          :emojiList=\"emojiList\"\n                          @lookQuoteCard=\"lookQuoteCard\"\n                        ></QuotFormate>\n                      </span>\n                    </div>\n\n                    <!--在线消息 自己发送的 -->\n                    <div class=\"mess-detail-self flex justify-end\" v-if=\"item.fromId == userId\">\n                      <span class=\"mess-words self-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ item.nickName }}\n                          <LuckIdIcon\n                            v-if=\"item.inviteCodeType == 1\"\n                            :inviteCode=\"item.inviteCode\"\n                            :userRank=\"item.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"item.vipType\"\n                            :inviteCodeType=\"item.inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"myInfo.inviteCode\"\n                            :userRank=\"myInfo.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"myInfo.vipType\"\n                            :inviteCodeType=\"myInfo.inviteCodeType\"\n                          />\n                        </p>\n                        <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                          <MessageSendStauts\n                            v-bind:item=\"item\"\n                            :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                            @handSendImg=\"handSendImg\"\n                            @resendMsgs=\"sendQuill(item)\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <div id=\"talkbubblee\"\n                               @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                               :class=\"[getPopperClassName(item, 1), maxWidth(item),imgBubble(item)]\"\n                          >\n                            <MessageFormatOnline\n                              v-bind:item=\"item\"\n                              :imglsit=\"imglsit\"\n                              :groupAuthByUser=\"groupAuthByUser\"\n                              :soundUrlObj=\"soundUrlObj\"\n                              :friendId=\"groupInfo.id\"\n                              :showAppealClosureNotice=\"showAppealClosureNotice\"\n                              :fromGroupType=\"fromGroupType\"\n                              @handArm=\"handArm\"\n                              @scrollBottom=\"scrollBottom\"\n                              @delMsg=\"delMsg\"\n                              @mutiChoose=\"mutiChoose\"\n                              @withdrawMessage=\"withdrawMessage(item)\"\n                              @transferQuote=\"transferQuote\"\n                              @toAppeal=\"toAppeal('single')\"\n                              @handSendImg=\"handSendImg\"\n                              @reHandSendVideo=\"reHandSendVideo\"\n                              @reHandSendFile=\"reHandSendFile\"                              \n                            />\n                          </div>\n                        </div>\n                        <QuotFormate\n                          v-if=\"item.msgType == 25\"\n                          :item=\"item\"\n                          :emojiList=\"emojiList\"\n                          @lookQuoteCard=\"lookQuoteCard\"\n                        ></QuotFormate>\n                      </span>\n                      <span @click=\"lookMemberCard(item.fromId)\" style=\"width:42px;height:42px;margin-right:-10px;\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                    </div>\n                    <!-- 当前 的 通知类消息 -->\n                  </div>\n                  <div\n                    v-if=\"item.msgType == '4' || item.msgType == '7' || item.msgType == '26'\n                    || item.msgType == '14' || item.msgType == '44' || item.msgType == '61'\"\n                    class=\"notice-wrap\"\n                  >\n                    <MessageNotice :item=\"item\" :sender=\"showSenderName(item)\" :receiver=\"showReceiverName(item)\" @reEditMsg=\"reEditMsg\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 工具栏-->\n          <div id=\"resize\" v-if=\"!silentMaskShow\" @mousedown=\"resizeChange\"></div>\n          <div v-else style=\"height: 6px\"></div>\n          <div id=\"down\" class=\"mess-footer align-center\" ref=\"down\">\n            <div class=\"chatother\">\n              <el-popover placement=\"top-start\" width=\"424\" trigger=\"click\" v-model=\"emojiVisible\">\n                <div class=\"emojList\">\n                  <span v-for=\"item in emojiList\" :key=\"item.id\">\n                    <img style :title=\"item.tag\" :src=\"`/resources/emoji/${item.file}`\" @click=\"insertImg(item.file, item.tag)\" />\n                  </span>\n                </div>\n                <span slot=\"reference\" class=\"emojIcon\">\n                  <img draggable='false' src=\"../../../../assets/images/send_msg_emoj.png\" />\n                </span>\n              </el-popover>\n              <span class=\"add\" @click=\"handUpload()\">\n                <img draggable='false' src=\"../../../../assets/images/send_msg_folder.png\" />\n                <input type=\"file\" :multiple=\"multiple\" @change=\"changeHand($event)\" ref=\"files\" style=\"display: none\" />\n              </span>\n              <img draggable='false' src=\"../../../../assets/images/send_msg_screenshot.png\" @click=\"captureScreen\" />\n              <el-popover\n                ref=\"screenShot\"\n                trigger=\"click\"\n                placement=\"bottom\"\n                visible-arrow=\"false\"\n                v-model=\"screenShotVisible\"\n                popper-class=\"screen-select-class\"\n              >\n                <div>\n                  <el-checkbox v-model=\"screenSelect\" class=\"screenSelectClass\" @change=\"screenSelectChange\">\n                    {{ $t('chat_comm_set_0022') }}\n                  </el-checkbox>\n                </div>\n                <i slot=\"reference\" v-popover:screenShot class=\"el-icon-caret-bottom captureScreenClass\"></i>\n              </el-popover>\n            </div>\n            <!-- <span class=\"wordNumber\">{{TiLength}}/1500</span> -->\n            <div class=\"mess-square\" id=\"mess-squareId\" @contextmenu.prevent=\"_quillRightClick($event)\">\n              <quill-editor\n                class=\"ql-editor\"\n                v-model=\"texthtml\"\n                ref=\"myQuillEditor\"\n                :options=\"editorOption\"\n                @keydown.ctrl.enter.native=\"editorWrap()\"\n                @keydown.alt.enter.native=\"editorWrap()\"\n                @keydown.meta.enter.native=\"editorWrap()\"\n                @paste.native=\"pasteMe($event)\"\n                @ready=\"onEditorReady($event)\"\n                @blur=\"onEditorBlur($event)\"\n                @change=\"onEditorChange($event, decimalNum)\"\n              ></quill-editor>\n              <!-- @keyup.shift.50.native=\"getAtUserList()\"\n                @keypress.shift.50.native=\"getAtUserList()\"\n                @keydown.shift.50.native=\"getAtUserList()\" -->\n            </div>\n            <div class=\"mess-send\">\n              <el-tag closable type=\"info\" @close=\"closeQuote()\" effect=\"dark\" v-show=\"quoteVisible\" class=\"quote\"\n                ><span ref=\"quoteMsgs\">{{ quoteMsg }}</span></el-tag\n              >\n              <button class=\"send-btn\" @click=\"sendQuillByThrottle\" :disabled=\"sendBtnDisabled\">\n                {{ $t('Universal_0046') }}\n              </button>\n            </div>\n\n            <SilentMask\n              v-show=\"silentMaskShow\"\n              :fromType=\"fromType\"\n              class=\"popContainer\"\n              ref=\"silentMask\"\n              :style=\"{ height: silentMaskHeight }\"\n            ></SilentMask>\n          </div>\n        </div>\n        <div v-show=\"isSomebodyAtYou\" class=\"by-at\" @click.stop=\"_at_handleScrollToCurrentAt\">\n          {{ $t('chat_0041') }}\n          <i class=\"el-icon-close\" @click.stop=\"_at_handleCloseAtTips\"></i>\n        </div>\n        <!-- 消息提示按钮 -->\n        <div v-show=\"isShowMoreList\" class=\"by-more-list\" @click=\"scrollBottom\">\n          <el-button v-if=\"newMsgLength > 0\" class=\"by-more-list\" icon=\"el-icon-arrow-down\"> \n          {{ $t('chat_0128', {value: newMsgLength}) }}</el-button>\n          <el-button v-else class=\"by-more-list\" icon=\"el-icon-arrow-down\" ></el-button>\n        </div>\n        <div v-if=\"!rightStatus\" id=\"checklist\" class=\"mess-checklist\">\n          <ul>\n            <li class=\"liMenu\" :class=\"idx == index ? 'hover' : ''\" @click=\"son(item, idx)\" v-for=\"(item, idx) in menu\" :key=\"idx\">\n              {{ item }}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <!--多选操作面板-->\n    <el-drawer\n      title\n      :visible.sync=\"mutiPanel\"\n      :direction=\"'btt'\"\n      :with-header=\"true\"\n      :modal=\"false\"\n      :wrapperClosable=\"false\"\n      :show-close=\"true\"\n      class=\"mutiPanel\"\n      id=\"mutiPanel\"\n      @close=\"closeMutiPnel()\"\n    >\n      <span @click=\"multiRelay(false)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_relay.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0033') }}</p>\n      </span>\n      <span @click=\"multiRelay(true)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_merge.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0034') }}</p>\n      </span>\n      <span @click=\"batchDelMsg()\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_delete.png\" /><br />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0032') }}</p>\n      </span>\n    </el-drawer>\n    <!--群设置弹框 groupSystemAble-->\n    <el-drawer\n      title=\"我是标题\"\n      :visible.sync=\"groupSystemAble\"\n      :direction=\"'rtl'\"\n      :with-header=\"false\"\n      :modal=\"false\"\n      \n      @close=\"closeDialog\"\n      size=\"310px\"\n      style=\"margin-top: -53px\"\n    >\n    <template v-if=\"groupSystemAble\">\n      <GroupInfo\n        :groupInfo=\"groupInfo\"\n        :authStatus=\"authStatus\"\n        @closeDialog=\"closeDialog\"\n        v-show=\"groupSystemAbleInfo\"\n        @refreshGroupInfo=\"refreshGroupInfo\"\n        ref=\"groupDetailsInfo\"\n      ></GroupInfo>\n\n      <div class=\"groupSystemBox\" v-if=\"groupSystemAbleSet\">\n        <div class=\"top\">\n          <span>{{ $t('Universal_0065') }}</span>\n          <i class=\"el-icon-close\" @click=\"groupSystemAble = false;groupSystemAbleSet=false\"></i>\n        </div>\n        <div class=\"content\" style=\"margin-top: 50px\">\n          <ul>\n            <li>\n              <span>{{ $t('Universal_0362') }}</span>\n              <el-switch\n                v-model=\"groupSystemObj.msgTopValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"groupSystemObj.msgTopClick\"\n                @change=\"stickyChange\"\n              ></el-switch>\n            </li>\n            <li>\n              <span>{{ $t('chat_0057') }}</span>\n              <el-switch\n                v-model=\"groupSystemObj.msgOutlineValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"groupSystemObj.msgOutlineClick\"\n                @change=\"NotifyChange\"\n              ></el-switch>\n            </li>\n            <li @click=\"historyVisible = true\">\n              <span>{{ $t('chat_0059') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n            <li @click=\"tipOff()\">\n              <span>{{ $t('report_0001') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n            <li @click=\"messageSaveTime\" v-if=\"authStatus == 1\">\n              <span>{{ $t('chat_0058') }}</span>\n              <span class=\"many-select\">\n                {{ saveTime }}\n                <i class=\"el-icon-arrow-right\"></i>\n              </span>\n            </li>\n          </ul>\n        </div>\n        <div slot=\"footer\" class=\"drawer-footer upgradeGroup\" v-if=\"authStatus == 1\">\n          <span @click=\"upgradeGroup\">{{ $t('book_group_0007') }}</span>\n          <span @click=\"releaseGroup\">{{ $t('book_group_0010') }}</span>\n        </div>\n        <div slot=\"footer\" class=\"drawer-footer outGroup\" v-else>\n          <span @click=\"quitGroup\">{{ $t('book_group_0008') }}</span>\n        </div>\n      </div>\n      <GroupMember\n        v-bind:dialogMember=\"dialogMember\"\n        groupMemberFrom=\"discussion\"\n        :groupId=\"groupInfo.id\"\n        :maxPeople=\"groupInfo.maxPeople\"\n        :groupSystemAbleMem=\"groupSystemAbleMem\"\n        :authStatus=\"this.authStatus\"\n        :memberSingleChatStatus=\"groupSystemObj.chatSingle\"\n        :showAppealClosureNotice=\"showAppealClosureNotice\"\n       \n        @closeDialog=\"closeDialog\"\n        @ShowGroupInvite=\"ShowGroupInvite\"\n        @ShowRemark=\"ShowRemark\"\n        @updatePeopleInGroup=\"updatePeopleInGroup\"\n        v-if=\"groupSystemAbleMem\"\n        ref=\"groupmember\"\n      />\n    </template>\n    </el-drawer>\n    <!--清除聊天记录-->\n    <el-dialog :title=\"$t('chat_0059')\" :visible.sync=\"historyVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <span>{{ $t('chat_0060') }}</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"historyVisible = false\">{{ $t('Universal_0063') }}</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"clearLocal\">{{ $t('Universal_0062') }}</el-button>\n      </span>\n    </el-dialog>\n    <!--消息保存时长-->\n    <el-dialog :title=\"$t('chat_0058')\" :visible.sync=\"saveTimeVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <ul class=\"selectItem\">\n        <li\n          v-for=\"(item, index) in saveTimeArr\"\n          :key=\"index\"\n          :class=\"saveTimeActive == index ? 'active' : ''\"\n          @click=\"saveTimeSelected(item, index)\"\n        >\n          {{ item.label }}\n          <i class=\"el-icon-check\"></i>\n        </li>\n      </ul>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelsaveExpireTime()\">{{ $t('Universal_0063') }}</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveExpireTime(saveTimeActive)\">{{ $t('Universal_0062') }}</el-button>\n      </span>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"Comtit\"\n      from=\"discussion\"\n      :authStatus=\"authStatus\"\n      :groupId=\"groupInfo.id\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      :mergeTransfer=\"merge\"\n      :mergeTransferName=\"mergeTransferName\"\n      :showAppealClosureNotice=\"showAppealClosureNotice\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @upgradeGroup=\"upgradeGroup\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :groupId=\"groupInfo.id\"\n      :groupInfo=\"groupInfo\"\n      :appealInfo=\"appealInfo\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :groupId=\"groupInfo.id\"\n      :groupInfo=\"groupInfo\"\n      :appealInfo=\"appealInfo\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n    <DialogAddFriendVisible\n      ref=\"myordernum\"\n      :dialogAddFriendsVisible=\"dialogAddFriendsVisible\"\n      @handCancelFriDialog=\"handCancelFriDialog\"\n      @handConfirmFriDialog=\"handConfirmFriDialog\"\n      :friendData=\"friendData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <DialogAddGroupVisible\n      :dialogAddGroupsVisible=\"dialogAddGroupsVisible\"\n      @handConfirmGroupDialog=\"handConfirmGroupDialog\"\n      @handCloseAddGroups=\"handCancelGroupDialog\"\n      :groupData=\"groupData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <GroupCard :groupInfo=\"groupCardInfo\" ref=\"groupCard\" @toAppeal=\"toAppeal('single')\"></GroupCard>\n    <GroupUpgrade :info=\"groupInfo\" ref=\"groupUpgrade\" />\n    <DiscussionNameEdit\n      :name=\"groupInfo.groupName\"\n      :group-id=\"groupInfo.id\"\n      @refreshGroupInfo=\"refreshGroupInfo\"\n      ref=\"discussionNameEdit\"\n    />\n    <el-dialog\n      :title=\"$t('chat_select_chat_0007')\"\n      :visible.sync=\"sendFile\"\n      width=\"320px\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"cancelSendFile\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"sendFile\">\n        <DiscussionIcon :name=\"groupInfo.groupName\" />\n        <span>{{ this.groupInfo.groupName }}</span>\n      </div>\n      <el-input type=\"textarea\" class=\"sendFileInput\" :rows=\"2\" resize=\"none\" :disabled=\"true\" v-model=\"fileName\" size=\"small\"></el-input>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"(sendFile = false), cancelSendFile()\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"(sendFile = false), sendFileConfirm($event)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import { ipcRenderer } from \"electron\";\nimport Title from \"../components/title.vue\";\n// import DialogAddGroupVisible from \"@/view/add-friends-group/dialog/add-groups\";\n\n// import DialogAddFriendVisible from \"@/view/add-friends-group/dialog/add-friends\";\n\n// import MemberCardOther from \"@/components/memberCard/MemberCardOther\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\n// import MemberIcon from \"@/components/memberIcon/MemberIcon\";\n// import LevelIcon from \"@/components/memberIcon/LevelIcon\";\n// import LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\n// import {\n//   diffTimeInChat,\n// } from \"@/utils\";\nimport { mapState } from \"vuex\";\nimport bus from \"@/utils/eventbus\";\n// import {\n//   uploadPicture,\n// } from \"./server\";\n\n// import QuotFormate from \"@/view/chat/components/common/QuotFormate\";\n// import emojiList from \"@/utils/emoji.js\";\n// import GroupAndInviteChat from \"@/components/chat/GroupAndInviteChat\";\n// import AppealsDialog from \"@/view/chat/appeals\";\n// import ImpeachDialog from \"@/view/chat/impeach\";\n// import MessageSendStauts from \"@/view/chat/components/common/MessageSendStatus\";\nimport GroupMember from \"@/view/chat/discussion/member\";\nimport GroupInfo from \"../components/GroupInfo\";\nimport GroupUpgrade from \"../components/GroupUpgrade\";\nimport DiscussionNameEdit from \"../components/DiscussionNameEdit\";\nimport SilentMask from \"../components/SilentMask\";\nimport GroupCard from \"../components/GroupCard\";\n// import MessageFormatOnline from \"@/view/chat/components/common/MessageFormatOnline\";\n// import MessageNotice from \"../../group/message/MessageNotice\";\n// import FileUpload from \"@/utils/fileUpload\";\n\n// import defaultImg from '@/view/chat/images/default.png';\nimport defaultImg from '@/assets/images/default.png';\n\nimport mixins from '../../mixin/mixin';\nimport groupMixin from '../../mixin/groupMixin';\nimport SQLUtils from '@/components/db/sqlite.js';\n\nexport default {\n  name: 'Discussion',\n  mixins: [mixins, groupMixin],\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title,\n    GroupMember, //群成员\n    GroupInfo,\n    SilentMask,\n    GroupCard,\n    GroupUpgrade,\n    DiscussionNameEdit,\n    DiscussionIcon\n  },\n\n  data() {\n    let thisVueInstance=this;\n    //这里存放数据\n    return {\n      fromGroupType:'discussion',\n      // membList: [],\n      editorOption: {\n        placeholder: this.$t('chat_0002'),\n        theme: \"bubble\", // or 'bubble'\n        formats: [\"image\", \"alt\", \"height\", \"width\", \"mention\"],\n        modules: {\n          toolbar:[],\n          clipboard: {\n            matchers: [\n            ]\n          },\n          mention: {\n            mentionDenotationChars: [\"@\"],\n            positioningStrategy: \"fixed\",\n            allowedChars:/^[a-zA-Z0-9_\\s\\u4e00-\\u9fa5]*$/,\n            defaultMenuOrientation:\"top\",\n            spaceAfterInsert:true,\n            mentionContainerClass:\"atBox\",\n            listItemClass:\"atInput\",\n            dataAttributes:['id',\"value\",'denotationChar', 'link', 'target','disabled',\"image\",\n              \"nickName\",\"nick_name\",\"nick_name_pinyin\",\"member_notes\",\n              \"member_notes_pinyin\",\"friendNotes\",\"friendNotes_pinyin\"],\n            renderItem: (data) => {\n              return `\n                  <div style='width:100%;overflow:hidden;'>\n                    <img src=\"${data['image']||require('../../../../assets/images/defalut@.png')}\"\n                    onerror=\"javascript:this.src='${defaultImg}';\" />\n                    <span>${data['nickName']}</span>\n                  </div>\n                `\n            },\n            onSelect:(item, insertItem)=>{\n              insertItem(item,true)\n              // console.log(item)\n            },\n            source: async function(searchTerm, renderList, mentionChar) {\n              let values;\n              if (mentionChar == \"@\") {\n                values = await SQLUtils.getALLAtUserList(thisVueInstance.groupId,thisVueInstance.authStatus);\n              }\n              // console.log(values,searchTerm)\n              if (searchTerm.length === 0) {\n                renderList(values, searchTerm);\n              } else {\n                const matches = [],str=searchTerm.toLowerCase();\n                for (let i = 0,item; i < values.length; i++){\n                  item=values[i];\n                  if (\n                    //  输入框 输入@搜索用户 过滤条件\n                    item.nick_name && item.nick_name.toLowerCase().indexOf(str) > -1 ||\n                    item.nick_name_pinyin && item.nick_name_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.friendNotes && item.friendNotes.toLowerCase().indexOf(str) > -1 ||\n                    item.friendNotes_pinyin && item.friendNotes_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.member_notes && item.member_notes.toLowerCase().indexOf(str) > -1 ||\n                    item.member_notes_pinyin && item.member_notes_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.inviteCode && item.inviteCode.toLowerCase().indexOf(str) > -1\n                  ){\n                    matches.push(values[i]);\n                  }\n                }\n                renderList(matches, searchTerm);\n              }\n            }\n          }\n        },\n      },     \n      // at 相关\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      membList: state => {\n        return state.search.membList;\n      },\n    }),\n  },\n  //监控data中的数据变化\n  watch: {\n    async $route() {\n      await this.init();\n      await this.inCurrentGroup();\n      this.stopVideo();\n    },\n    chatList(val) {\n      if (localStorage.getItem('specailChat') == 'true') {\n        localStorage.setItem('specailChat', false);\n      } else {\n        // this.scrollBottom();\n      }\n      if (val && val.length > 0) {\n        let msgType = val[val.length - 1].msgType;\n        if (msgType == '4' || msgType == '7') {\n          this.searchGroupMembersAndInfo();\n        } else if (\n          msgType == '1' ||\n          msgType == '2' ||\n          msgType == '6' ||\n          msgType == '9' ||\n          msgType == '10' ||\n          msgType == '15' ||\n          msgType == '25' ||\n          msgType == '40'\n        ) {\n          if (val[val.length - 1].fromIcon == undefined) {\n            val[val.length - 1].fromIcon = this.memberImg[val[val.length - 1].fromId];\n          }\n        }\n      }\n    },\n    getNetStatus(val) {\n      this.isNetOff = val == 'offline' ? true : false;\n    },\n    getSocketStatus(val) {\n      this.isReconn = val == 'online' ? false : true;\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.initFlag = true;\n    if (this.$route.query.item && this.$route.query.item['groupAuthByUser']) {\n      this.groupAuthByUser = this.$route.query.item['groupAuthByUser'];\n    }\n    this.item = this.$route.query.item;\n    bus.$on('closeMemberinfo',this.closeMember);\n    // this.GET_LAST_MSG_LIST();\n  },\n  //方法集合\n  methods: {\n    closeMember(){\n      this.groupSystemAble = false\n    },\n    async upgradeGroup() {\n      if(this.showAppealClosureNotice) return this.$message.error(this.$t('appeal_0014'));\n      this.GroupInviteVisible = false;\n      this.onUpgradeGroup();\n    },\n\n    onUpgradeGroup() {\n      this.$nextTick(async () => {\n        this.$refs.groupUpgrade.onPop();\n      });\n    },\n\n    showSenderName(item) {\n      let unknownName = item.refMsgBody.users ? item.refMsgBody.users[0].nickName : '';\n      if (item.fromId == this.userId && item.msgType == '26') {\n        if(item.msgBody.userId != this.userId){\n          item.fromName2 = this.memberFriendName[item.msgBody.userId];\n        }\n        return this.$t('Universal_0036');\n      } else if (this.authStatus == 3) {\n        // return this.memberFriendName[item.fromId] || item.friendFriendNotes || item.nickName || unknownName || '';\n        return item.nickName || unknownName || '';\n      } else {\n        // return this.memberAdminName[item.fromId] || unknownName || '';\n        return item.fromName || item.nickName || unknownName || '';\n      }\n    },\n\n    onEditDiscussionName() {\n      this.$nextTick(async () => {\n        this.$refs.discussionNameEdit.onPop();\n      });\n    },\n\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.init();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {\n    // this.scrollBottom();\n  }, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeRouteUpdate(to, from, next) {\n    this.initDraft(from);\n    this.chatlistFlag=false;\n    next();\n  },\n\n  beforeRouteLeave(to, from, next) {\n    if (to.path !== \"/app/chat\") {\n      this.initDraft(from);\n      this.chatlistFlag = false;\n    }\n    next();\n  },\n  destroyed() {\n    bus.$off('closeMemberinfo',this.closeMember);\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n\n<style lang=\"less\" scoped>\n.mutiPanel {\n  /deep/ .el-drawer__body {\n    display: flex;\n    justify-content: center;\n    span {\n      width: 90px;\n      margin: 0 10px;\n    }\n    img {\n      margin-top: 0;\n    }\n  }\n}\n.group-member-name-class {\n  color: #999999;\n  font-size: 12px;\n  margin: 0px 10px 0px 10px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  white-space: pre;\n  div {\n    padding-right: 2px;\n  }\n}\n\n.member-icon-class {\n  display: flex;\n  align-items: flex-start;\n  width: 42px;\n  height: 42px;\n  // border: 1px solid red;\n}\n\n.list {\n  display: flex;\n}\n\n.el-checkbox {\n  display: flex;\n  margin-right: 0;\n}\n\n.emojList {\n  span img {\n    width: 22px;\n    height: 22px;\n    padding: 3px;\n\n    &:hover {\n      box-shadow: 2px 2px 3px #888888;\n    }\n  }\n}\n\n.msgStatus {\n  position: absolute;\n  top: 35%;\n  left: 22px;\n}\n\n.mess-words {\n  position: relative;\n  width: 100%;\n\n  // p {\n  // font-size: 12px !important;\n  // margin-bottom: 3px !important;\n  // }\n}\n\n.other-msg {\n  top: -2px;\n}\n\n.self-msg {\n  left: 0;\n}\n\n.loadmore {\n  font-size: 12px;\n  text-align: center;\n  color: #2f54eb;\n  cursor: pointer;\n}\n.loadmore2 {\n  font-size: 12px;\n  text-align: center;\n  color: #2f54eb;\n}\n.nomore {\n  color: #666;\n}\n\n.el-loading-spinner {\n  margin-top: -7px;\n}\n\n.groupSystemBox {\n  box-sizing: border-box;\n  font-size: 14px;\n  width: 100%;\n  height: 100vh;\n  overflow-y: scroll;\n\n  .outGroup {\n    box-sizing: border-box;\n    text-align: center;\n    color: #eb552f;\n    height: 50px;\n    line-height: 50px;\n    width: 100%;\n    background-color: #fbfbfb;\n    position: absolute;\n    bottom: 0;\n    border-top: 1px solid #e1e1e1;\n\n    span {\n      cursor: pointer;\n    }\n  }\n\n  .upgradeGroup {\n    box-sizing: border-box;\n    text-align: center;\n    color: #eb552f;\n    height: 100px;\n    line-height: 50px;\n    width: 100%;\n    background-color: #fbfbfb;\n    position: absolute;\n    bottom: 0;\n    border-top: 1px solid #e1e1e1;\n\n    span:first-child {\n      color: #2f54eb;\n    }\n\n    span {\n      font-size: 13px;\n      cursor: pointer;\n      display: block;\n    }\n  }\n\n  .top:first-child {\n    position: absolute;\n    z-index: 1;\n  }\n\n  .top {\n    width: 100%;\n    height: 50px;\n    background-color: #fbfbfb;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 10px;\n\n    span {\n      // font-weight: 500;\n      font-weight: 600;\n      font-size: 15px;\n      color: #333;\n    }\n\n    .el-icon-close {\n      font-size: 14px;\n    }\n\n    .el-icon-right {\n      font-size: 20px;\n    }\n  }\n\n  .content {\n    box-sizing: border-box;\n    width: 100%;\n    background-color: #fff;\n    font-size: 14px;\n    color: #333;\n    padding: 0 10px;\n\n    & > ul {\n      li {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        margin: 12px 0;\n        cursor: pointer;\n        span {\n          &:first-child {\n            margin-right: 10px;\n          }\n          &:last-child {\n            display: flex;\n            align-items: center;\n            max-width: 90px;\n          }\n        }\n      }\n\n      & > .authorityOpen {\n        li {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 100%;\n          // height: 48px;\n          height: 35px;\n          padding: 0 20px;\n          box-sizing: border-box;\n        }\n      }\n\n      .many-select {\n        font-size: 12px;\n        font-weight: 400;\n        color: #666;\n      }\n\n      .el-icon-arrow-right {\n        color: #000;\n        font-size: 12px;\n      }\n    }\n  }\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  margin: 0 auto;\n\n  /deep/ .dialog-footer {\n    width: 80%;\n  }\n\n  /deep/ .el-button--mini,\n  .el-button--small {\n    width: 84px;\n    height: 28px;\n    font-size: 13px;\n  }\n\n  /deep/ .el-button--default .el-button--mini {\n    color: #333;\n    font-size: 13px;\n  }\n}\n\n.selectItem {\n  width: 85%;\n  margin: 0 auto;\n\n  li {\n    margin: 10px 0;\n    width: 100%;\n    line-height: 25px;\n    background-color: #f3f3f3;\n    color: #696969;\n    font-size: 13px;\n    text-align: center;\n    position: relative;\n\n    .el-icon-check {\n      display: none;\n    }\n  }\n\n  li:hover {\n    background-color: #d6deff;\n  }\n\n  .active {\n    .el-icon-check {\n      display: inline-block;\n      font-size: 14px;\n      color: #2f54eb;\n      top: 6px;\n      position: absolute;\n      right: 6px;\n    }\n  }\n}\n\n.sendFile {\n  div {\n    display: inline-block;\n  }\n\n  span {\n    max-width: 80%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    display: inline-block;\n    padding-left: 5px;\n  }\n\n  padding-bottom: 10px;\n}\n\n.sendFileInput {\n  border: #d7d7d7 solid 1px;\n}\n\n.sendFileInput textarea {\n  cursor: default;\n}\n// .atBoxActive,.atInput.selected{\n//   background-color: #D6DEFF;\n// }\n// .atBoxHover {\n//   background: #f7f7f7;\n// }\n// .atBox {\n//   position: absolute;\n//   overflow: scroll;\n//   width: 170px;\n//   max-height: 184px;\n//   // bottom: 25px;\n//   background: #fff;\n//   border: 1px solid #dddddd;\n//   border-radius: 4px;\n//   box-shadow: 0px 2px 8px 0px #888888;\n//   ul {\n//     overflow: hidden;\n//     li {\n//       display: flex;\n//       align-items: center;\n//       padding: 0 5px;\n//       cursor: pointer;\n//       img {\n//         margin: 5px 2px;\n//       }\n//       span {\n//         -ms-text-overflow: ellipsis;\n//         text-overflow: ellipsis;\n//         overflow: hidden;\n//         white-space: nowrap;\n//         max-width: 110px;\n//         display: inline-block;\n//       }\n//     }\n//   }\n// }\n// .atInput {\n//   max-width: 170px;\n//   max-height: 183px;\n//   overflow: scroll;\n//   ul {\n//     li {\n//       text-overflow: ellipsis;\n//       &:first-child {\n//         padding-left: 19px;\n//       }\n//     }\n//   }\n//   img {\n//     display: inline-block;\n//     width: 25px;\n//     height: 25px;\n//     border-radius: 15px;\n//     &:not([src]) {\n//       opacity: 0;\n//     }\n//   }\n//   span,\n//   img {\n//     vertical-align: middle;\n//     margin: 0 5px;\n//   }\n// }\n//@import url(); 引入公共css类\n.chatother {\n  img {\n    // padding: 5px 10px;\n    width: 18px;\n    padding: 10px 10px 5px;\n    cursor: pointer;\n    height: 18px;\n  }\n\n  .emojIcon {\n    margin-left: 10px;\n  }\n}\n\n.el-drawer__wrapper {\n  top: 114px;\n}\n\n#resize {\n  height: 5px;\n  width: 100%;\n  cursor: n-resize;\n  border-bottom: #e4e4e4 solid 1px;\n}\n\n.message {\n  width: 100%;\n  background: #f6f6f6;\n\n  .mess-header {\n    height: 38px;\n    background: #fff;\n    padding: 0 20px;\n    box-sizing: border-box;\n    border-bottom: 1px solid #dddddd;\n    -webkit-app-region: drag;\n\n    span {\n      height: 20px;\n      line-height: 20px;\n\n      &:nth-child(2) {\n        margin: 0 12px;\n      }\n\n      &:nth-child(4) {\n        margin: 0 12px;\n      }\n    }\n\n    .mess-nav span {\n      cursor: pointer;\n    }\n\n    .mess-nav img {\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  .mess-detail {\n    width: 100%;\n    // padding: 20px 20px 0 20px;\n    padding: 10px 20px;\n    box-sizing: border-box;\n  }\n\n  .mess-detail-self {\n    width: 100%;\n    // padding: 20px 20px 0 20px;\n    padding: 10px 20px;\n    box-sizing: border-box;\n  }\n\n  .infotime {\n    text-align: center;\n    color: rgb(153, 153, 153);\n    margin-top: 10px;\n    font-size: 12px;\n  }\n\n  .mess-head {\n    width: 44px;\n    height: 44px;\n    background: #ccc;\n    display: inline-block;\n    border-radius: 50%;\n    margin-top: 8px;\n\n    img {\n      width: 100%;\n      height: 100%;\n      display: block;\n      border-radius: 50%;\n    }\n  }\n\n  .mess-name {\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n\n  .mess-owner {\n    width: 36px;\n    height: 16px;\n    background: rgba(221, 51, 51, 1);\n    border-radius: 3px;\n    display: inline-block;\n    font-size: 10px;\n    color: #fff;\n    text-align: center;\n    line-height: 16px;\n    margin: 0 0 2px 5px;\n  }\n\n  .words {\n    display: flex;\n    min-height: 23px;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    word-break: break-all;\n    font-size: 14px;\n\n    font-weight: 400;\n    color: rgba(0, 0, 0, 1);\n  }\n\n  #resizeBox {\n    position: relative;\n    height: calc(100vh - 61px);\n  }\n\n  .message-box {\n    height: calc(100vh - 23px);\n    overflow: hidden;\n  }\n\n  .mess-talk {\n    // height: 80vh;\n    overflow: auto;\n    height: calc(100vh - 228px);\n\n    &:nth-last-child(2) {\n      padding-bottom: 20px;\n    }\n  }\n\n  .by-at {\n    position: fixed;\n    bottom: 170px;\n    right: 20px;\n    width: 145px;\n    height: 37px;\n    line-height: 37px;\n    opacity: 0.98;\n    background: #e6e6e6;\n    border-radius: 4px;\n    box-shadow: 0px 0px 6px 0px #b0b0b0;\n    color: #333;\n    font-size: 13px;\n    padding: 0 10px;\n    .el-icon-close {\n      cursor: pointer;\n      float: right;\n      line-height: 37px;\n    }\n  }\n\n .by-more-list {\n    position: fixed;\n    bottom: 170px;\n    right: 20px;\n    height: 37px;\n    line-height: 37px;\n    opacity: 0.98;\n    background: #e6e6e6;\n    border-radius: 4px;\n    box-shadow: 0px 0px 6px 0px #b0b0b0;\n    color: #333;\n    font-size: 13px;\n    padding: 0 10px;\n    /deep/.el-icon-arrow-down {\n      font-weight: 600; \n      color: #000;\n    }\n  }\n\n  .mess-footer {\n    position: relative;\n    height: 161px;\n    background: #f6f6f6;\n    box-sizing: border-box;\n  }\n\n  .mess-square {\n    width: 100%;\n    // height: 55%;\n    height: calc( 100% - 80px );\n    input {\n      width: 100%;\n      height: 42px;\n      border: none;\n      background: rgba(243, 243, 243, 1);\n      border-radius: 8px;\n    }\n\n    /deep/ .ql-container .ql-editor span {\n      background: none !important;\n      color: black !important;\n    }\n  }\n\n  // .mess-send {\n  //   width: 160px;\n  //   flex: 1;\n  //   box-sizing: border-box;\n  //   height: 34px;\n  //   span {\n  //     cursor: pointer;\n  //   }\n  // }\n  .mess-send {\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n    right: 10px;\n    box-sizing: border-box;\n    height: 34px;\n\n    span {\n      cursor: pointer;\n    }\n\n    /deep/ .el-button--mini,\n    .el-button--small {\n      width: 66px;\n      height: 28px;\n      margin: 0 10px 3px 0;\n\n      span {\n        font-size: 14px;\n\n        font-weight: 400;\n        letter-spacing: 2px;\n      }\n    }\n  }\n\n  .send {\n    color: #fff;\n    position: absolute;\n    right: 0px;\n    bottom: 0px;\n  }\n\n  .quote {\n    max-width: 80%;\n    position: absolute;\n    left: 20px;\n    bottom: 6px;\n\n    span {\n      display: inline-block;\n      width: 100%;\n      overflow: hidden;\n      white-space: pre;\n      text-overflow: ellipsis;\n    }\n  }\n\n  .bq {\n    display: contents;\n  }\n\n  .add {\n    display: contents;\n  }\n\n  .mess-member {\n    width: 100%;\n    background: rgba(255, 255, 255, 1);\n    padding: 8px;\n  }\n\n  .mumber-header {\n    .add-blue {\n      background: blue;\n      width: 50px;\n      height: 24px;\n      border-radius: 5px;\n      display: inline-block;\n      text-align: center;\n    }\n\n    .mumber-number {\n      height: 24px;\n      font-size: 15px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n    }\n  }\n\n  .member-member {\n    overflow: scroll;\n    max-height: calc(100vh - 220px);\n    margin: 20px 0 0 0;\n\n    ul li {\n      margin: 6px 0 0 0;\n    }\n  }\n\n  .member-head {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background: #ccc;\n    display: inline-block;\n\n    img {\n      width: 32px;\n      height: 32px;\n      display: block;\n      border-radius: 50%;\n    }\n  }\n\n  .member-name {\n    font-size: 15px;\n    width: 125px;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    margin: 0 5px;\n  }\n\n  .remarkStatus {\n    .tit {\n      display: flex;\n      align-items: center;\n\n      img {\n        // width: 44px;\n        // height: 44px;\n        width: 32px;\n        height: 32px;\n        margin-right: 10px;\n        border-radius: 50%;\n      }\n    }\n\n    textarea {\n      height: 60px;\n      margin: 15px 0;\n    }\n\n    .member-notes {\n      margin: 10px 0;\n\n      /deep/ .el-input--small {\n        height: 55px;\n      }\n\n      /deep/ .el-textarea__inner {\n        height: 54px;\n        background: transparent;\n        border: 1px solid #d7d7d7;\n      }\n\n      /deep/ .el-input__count {\n        font-size: 12px;\n        color: #666;\n      }\n    }\n  }\n\n  .mess-checklist {\n    width: 200px;\n    background: rgba(255, 255, 255, 1);\n    border: 1px solid rgba(221, 221, 221, 1);\n  }\n\n  .liMenu {\n    cursor: pointer;\n    text-align: center;\n    height: 35px;\n    line-height: 35px;\n    font-size: 15px;\n  }\n\n  .liMenu.hover {\n    color: #fff;\n    background: #2f54eb;\n  }\n\n  .tip-msg {\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n.audio-wrap img {\n  width: 30px;\n  vertical-align: middle;\n  padding-right: 4px;\n}\n\n.group-name {\n  color: #333333;\n  font-size: 14px;\n  font-weight: 500;\n  max-width: 220px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: pre;\n  .iconfont {\n    font-size: 12px;\n  }\n}\n\n.group-people {\n  color: #333333;\n  font-size: 14px;\n  font-weight: 500;\n}\n.appealContainer{\n  width: 100%;\n  padding: 7px 20px 8px 14px;\n  box-sizing: border-box;\n  background: #fef4e5;\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  z-index: 1;\n  .appealNotice{\n    width: 100%;\n    font-size: 12px;\n    font-weight: 400;\n    text-align: left;\n    color: #f7931a;\n    line-height: 17px;\n  }\n  .el-icon-arrow-right {\n    font-size: 14px;\n    color: #f7931a;\n  }\n}\n</style>\n\n<style lang=\"less\" scoped>\n.popupmsg {\n  /deep/ .el-dialog__header {\n    padding-top: 10px;\n  }\n\n  /deep/ .el-dialog__title {\n    font-size: 14px;\n\n    // font-weight:500;\n    font-weight: 600;\n    color: #333;\n    line-height: 20px;\n  }\n\n  /deep/ .el-dialog__headerbtn {\n    top: 10px;\n  }\n\n  /deep/ .el-dialog__body span {\n    font-size: 13px;\n\n    font-weight: 400;\n    color: #666;\n    line-height: 17px;\n  }\n}\n\n.note-member {\n  /deep/ .el-dialog__body {\n    padding: 0 25px;\n    color: #333;\n    height: 170px;\n\n    span {\n      line-height: 15px;\n    }\n  }\n\n  /deep/ .dialog-footer {\n    width: 90%;\n    margin: 30px auto 20px;\n  }\n\n  /deep/ .el-button--primary {\n    color: #fff !important;\n  }\n\n  .cancelBtn {\n    border: none;\n    background: #d8d8d8;\n    color: #333;\n    font-size: 13px;\n  }\n\n  .sureBtn {\n    background: #2f54eb;\n    color: #fff !important;\n    font-size: 13px;\n\n    /deep/ span {\n      color: #fff;\n      line-height: 10px;\n    }\n  }\n}\n\n.voice-accept {\n  position: relative;\n}\n.voice-icon {\n  display: flex;\n  justify-content: flex-start;\n  color: #ff0000;\n  font-size: 18px;\n  position: absolute;\n  top: 8px;\n  right: -18px;\n}\n#talkbubblee {\n  &.fullOfEmoji {\n    max-width: 61%;\n  }\n  &.samllFullOfEmoji {\n    max-width: 60%;\n  }\n}\n#talkbubble {\n  &.fullOfEmoji {\n    max-width: 62%;\n  }\n  &.samllFullOfEmoji {\n    max-width: 61%;\n  }\n  &.fileBox {\n    max-width: none;\n    width: 250px !important;\n  }\n}\n#talkbubble,#talkbubblee{\n  &.imgTopSpace{\n    padding: 0 10px;\n  }\n  &.fileBox {\n    max-width: none;\n    width: 250px !important;\n  }\n}\n.pre {\n  white-space: pre;\n}\n</style>\n\n<style lang=\"less\">\n.el-tag--dark.el-tag--info {\n  background-color: #e7e7e7;\n  border: none;\n  color: #727272;\n}\n\n.el-tag--dark.el-tag--info .el-tag__close {\n  color: #666;\n}\n\n.ql-container {\n  height: 100%;\n  overflow-y: scroll;\n  width: 100%;\n  background: #f6f6f6;\n}\n\n.ql-toolbar.ql-snow + .ql-container.ql-snow {\n  border: none;\n  // padding-top: 5px;\n}\n\n.ql-toolbar.ql-snow {\n  border: none;\n  padding-top: 0;\n}\n\n.ql-toolbar {\n  display: none;\n}\n\n.ql-tooltip {\n  display: none;\n}\n\n.ql-editor {\n  padding: 0;\n  line-height: 0px;\n  .mention{\n    background: transparent ;\n    > span {\n      margin: 0;\n    }\n  }\n\n}\n\n.ql-editor .ql-editor {\n  padding: 0 10px 10px;\n  line-height: 20px;\n}\n\n.ql-editor img {\n  max-width: 150px !important;\n  vertical-align: text-bottom;\n  margin: 0 1px;\n}\n\n.quoteBubble {\n  min-width: 60px;\n  // max-width: 110px;\n\n  background: #e7e7e7;\n  padding: 8px 10px;\n  border-radius: 5px;\n  color: #727272;\n  margin-top: 13px;\n  font-size: 12px;\n  width: fit-content;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  .quotImg {\n    display: inline-block;\n    cursor: pointer;\n\n    img {\n      height: 30px;\n    }\n  }\n}\n\n#talkbubble {\n  line-height: 23px;\n  font-size: 14px;\n  // min-width: 60px;\n  // max-width: 500px;\n  min-width: 30px;\n  // max-width: 300px;\n  // max-width: 65%;\n  max-width: 62%;\n  min-height: 23px;\n  // background: #fff;\n  position: relative;\n  // border-radius: 10px;\n  margin-left: 10px;\n  padding: 7px 10px;\n}\n\n// #talkbubble:before {\n//   content: \"\";\n//   position: absolute;\n//   right: 100%;\n//   // top: 18px;\n//   top:13px;\n//   border-top: 6px solid transparent;\n//   border-right: 10px solid #fff;\n//   border-bottom: 6px solid transparent;\n// }\n\n#talkbubblee {\n  line-height: 23px;\n  font-size: 14px;\n  // min-width: 60px;\n  // min-width: 30px;\n  min-width: 30px;\n  // max-width: 300px;\n  // max-width: 65%;\n  max-width: 63%;\n  min-height: 23px;\n  // background: #cfe1ff;\n  position: relative;\n  // border-radius: 10px;\n  margin-right: 10px;\n  padding: 7px 10px;\n}\n\n#talkbubblee .flex-sub p,\n#talkbubble .flex-sub p {\n  font-size: 14px;\n  color: #000;\n  margin-right: 10px;\n}\n\n#talkbubblee .flex-sub p:last-child,\n#talkbubble {\n  color: #000;\n}\n\n#talkbubblee .load-border,\n#talkbubble .load-border {\n  border-top: 1px solid #ddd;\n  margin-top: 5px;\n  padding: 5px 0 0;\n  font-size: 12px;\n  color: #000;\n}\n\n#talkbubblee .load-border span,\n#talkbubble .load-border span {\n  display: inline-block;\n  margin-left: 14px;\n}\n\n// #talkbubblee:before {\n//   content: \"\";\n//   position: absolute;\n//   left: 100%;\n//   // top: 18px;\n//   top: 13px;\n//   border-top: 6px solid transparent;\n//   border-left: 10px solid #cfe1ff;\n//   border-bottom: 6px solid transparent;\n// }\n\n#talkbubble .flex-direction p {\n  width: 88%;\n}\n\n.drawerbox {\n  width: 250px !important;\n}\n\n.message-box-class {\n  width: 280px;\n  .el-message-box__headerbtn {\n    display: none;\n  }\n}\n\n.popContainer {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  z-index: 999;\n  width: 100%;\n  background: #ddd;\n  opacity: 0.5;\n}\n\n.group-edit-icon {\n  margin-left: 10px;\n}\n\n.send-btn {\n  height: 28px;\n  width: 68px;\n  background: #2f54eb;\n  box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  border-radius: 4px;\n  color: #fff;\n  font-size: 13px;\n  border: none;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  position: absolute;\n  right: 0;\n  bottom: 6px;\n}\n\n.captureScreenClass {\n  font-size: 9px;\n  position: absolute;\n  top: 10px;\n  margin-left: -8px;\n  padding: 4px;\n  cursor: pointer;\n}\n\n.screenSelectDivClass {\n  background: #ffffff;\n  width: 160px;\n  height: 20px;\n  line-height: 20px;\n}\n\n.screenSelectClass {\n  margin-top: 3px;\n  margin-left: 4px;\n  margin-right: -2px;\n}\n</style>\n<style>\n.screen-select-class {\n  /*top: 61px !important;*/\n  padding: 0 4px 4px 0;\n}\n\n.screen-select-class .popper__arrow {\n  display: none;\n}\n\n.screen-select-class .el-checkbox__input {\n  margin-top: 3px;\n  margin-left: 4px;\n  margin-right: -2px;\n}\n.notice-wrap {\n  max-width: 60%;\n  margin: 5px auto;\n  text-align: center;\n  font-size: 12px;\n  color: #999;\n  padding: 10px 0;\n  word-break: break-all;\n}\n</style>\n",
    "cssJson": [
      {
        ".mutiPanel": {
          "/deep/ .el-drawer__body": {
            "display": "flex",
            "justify-content": "center",
            "span": {
              "width": "90px",
              "margin": "0 10px"
            },
            "img": {
              "margin-top": "0"
            }
          }
        },
        ".group-member-name-class": {
          "color": "#999999",
          "font-size": "12px",
          "margin": "0px 10px 0px 10px",
          "display": "flex",
          "align-items": "center",
          "width": "100%",
          "white-space": "pre",
          "div": {
            "padding-right": "2px"
          }
        },
        ".member-icon-class": {
          "display": "flex",
          "align-items": "flex-start",
          "width": "42px",
          "height": "42px"
        },
        ".list": {
          "display": "flex"
        },
        ".el-checkbox": {
          "display": "flex",
          "margin-right": "0"
        },
        ".emojList": {
          "span img": {
            "width": "22px",
            "height": "22px",
            "padding": "3px",
            "&:hover": {
              "box-shadow": "2px 2px 3px #888888"
            }
          }
        },
        ".msgStatus": {
          "position": "absolute",
          "top": "35%",
          "left": "22px"
        },
        ".mess-words": {
          "position": "relative",
          "width": "100%"
        },
        ".other-msg": {
          "top": "-2px"
        },
        ".self-msg": {
          "left": "0"
        },
        ".loadmore": {
          "font-size": "12px",
          "text-align": "center",
          "color": "#2f54eb",
          "cursor": "pointer"
        },
        ".loadmore2": {
          "font-size": "12px",
          "text-align": "center",
          "color": "#2f54eb"
        },
        ".nomore": {
          "color": "#666"
        },
        ".el-loading-spinner": {
          "margin-top": "-7px"
        },
        ".groupSystemBox": {
          "box-sizing": "border-box",
          "font-size": "14px",
          "width": "100%",
          "height": "100vh",
          "overflow-y": "scroll",
          ".outGroup": {
            "box-sizing": "border-box",
            "text-align": "center",
            "color": "#eb552f",
            "height": "50px",
            "line-height": "50px",
            "width": "100%",
            "background-color": "#fbfbfb",
            "position": "absolute",
            "bottom": "0",
            "border-top": "1px solid #e1e1e1",
            "span": {
              "cursor": "pointer"
            }
          },
          ".upgradeGroup": {
            "box-sizing": "border-box",
            "text-align": "center",
            "color": "#eb552f",
            "height": "100px",
            "line-height": "50px",
            "width": "100%",
            "background-color": "#fbfbfb",
            "position": "absolute",
            "bottom": "0",
            "border-top": "1px solid #e1e1e1",
            "span:first-child": {
              "color": "#2f54eb"
            },
            "span": {
              "font-size": "13px",
              "cursor": "pointer",
              "display": "block"
            }
          },
          ".top:first-child": {
            "position": "absolute",
            "z-index": "1"
          },
          ".top": {
            "width": "100%",
            "height": "50px",
            "background-color": "#fbfbfb",
            "display": "flex",
            "justify-content": "space-between",
            "align-items": "center",
            "box-sizing": "border-box",
            "padding": "0 10px",
            "span": {
              "font-weight": "600",
              "font-size": "15px",
              "color": "#333"
            },
            ".el-icon-close": {
              "font-size": "14px"
            },
            ".el-icon-right": {
              "font-size": "20px"
            }
          },
          ".content": {
            "box-sizing": "border-box",
            "width": "100%",
            "background-color": "#fff",
            "font-size": "14px",
            "color": "#333",
            "padding": "0 10px",
            "& > ul": {
              "li": {
                "display": "flex",
                "justify-content": "space-between",
                "align-items": "center",
                "width": "100%",
                "margin": "12px 0",
                "cursor": "pointer",
                "span": {
                  "&:first-child": {
                    "margin-right": "10px"
                  },
                  "&:last-child": {
                    "display": "flex",
                    "align-items": "center",
                    "max-width": "90px"
                  }
                }
              },
              "& > .authorityOpen": {
                "li": {
                  "display": "flex",
                  "justify-content": "space-between",
                  "align-items": "center",
                  "width": "100%",
                  "height": "35px",
                  "padding": "0 20px",
                  "box-sizing": "border-box"
                }
              },
              ".many-select": {
                "font-size": "12px",
                "font-weight": "400",
                "color": "#666"
              },
              ".el-icon-arrow-right": {
                "color": "#000",
                "font-size": "12px"
              }
            }
          }
        },
        ".dialog-footer": {
          "display": "flex",
          "justify-content": "space-between",
          "width": "80%",
          "margin": "0 auto",
          "/deep/ .dialog-footer": {
            "width": "80%"
          },
          "/deep/ .el-button--mini,  .el-button--small": {
            "width": "84px",
            "height": "28px",
            "font-size": "13px"
          },
          "/deep/ .el-button--default .el-button--mini": {
            "color": "#333",
            "font-size": "13px"
          }
        },
        ".selectItem": {
          "width": "85%",
          "margin": "0 auto",
          "li": {
            "margin": "10px 0",
            "width": "100%",
            "line-height": "25px",
            "background-color": "#f3f3f3",
            "color": "#696969",
            "font-size": "13px",
            "text-align": "center",
            "position": "relative",
            ".el-icon-check": {
              "display": "none"
            }
          },
          "li:hover": {
            "background-color": "#d6deff"
          },
          ".active": {
            ".el-icon-check": {
              "display": "inline-block",
              "font-size": "14px",
              "color": "#2f54eb",
              "top": "6px",
              "position": "absolute",
              "right": "6px"
            }
          }
        },
        ".sendFile": {
          "div": {
            "display": "inline-block"
          },
          "span": {
            "max-width": "80%",
            "overflow": "hidden",
            "text-overflow": "ellipsis",
            "white-space": "nowrap",
            "display": "inline-block",
            "padding-left": "5px"
          },
          "padding-bottom": "10px"
        },
        ".sendFileInput": {
          "border": "#d7d7d7 solid 1px"
        },
        ".sendFileInput textarea": {
          "cursor": "default"
        },
        ".chatother": {
          "img": {
            "width": "18px",
            "padding": "10px 10px 5px",
            "cursor": "pointer",
            "height": "18px"
          },
          ".emojIcon": {
            "margin-left": "10px"
          }
        },
        ".el-drawer__wrapper": {
          "top": "114px"
        },
        "#resize": {
          "height": "5px",
          "width": "100%",
          "cursor": "n-resize",
          "border-bottom": "#e4e4e4 solid 1px"
        },
        ".message": {
          "width": "100%",
          "background": "#f6f6f6",
          ".mess-header": {
            "height": "38px",
            "background": "#fff",
            "padding": "0 20px",
            "box-sizing": "border-box",
            "border-bottom": "1px solid #dddddd",
            "-webkit-app-region": "drag",
            "span": {
              "height": "20px",
              "line-height": "20px",
              "&:nth-child(2)": {
                "margin": "0 12px"
              },
              "&:nth-child(4)": {
                "margin": "0 12px"
              }
            },
            ".mess-nav span": {
              "cursor": "pointer"
            },
            ".mess-nav img": {
              "width": "20px",
              "height": "20px"
            }
          },
          ".mess-detail": {
            "width": "100%",
            "padding": "10px 20px",
            "box-sizing": "border-box"
          },
          ".mess-detail-self": {
            "width": "100%",
            "padding": "10px 20px",
            "box-sizing": "border-box"
          },
          ".infotime": {
            "text-align": "center",
            "color": "rgb(153, 153, 153)",
            "margin-top": "10px",
            "font-size": "12px"
          },
          ".mess-head": {
            "width": "44px",
            "height": "44px",
            "background": "#ccc",
            "display": "inline-block",
            "border-radius": "50%",
            "margin-top": "8px",
            "img": {
              "width": "100%",
              "height": "100%",
              "display": "block",
              "border-radius": "50%"
            }
          },
          ".mess-name": {
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".mess-owner": {
            "width": "36px",
            "height": "16px",
            "background": "rgba(221, 51, 51, 1)",
            "border-radius": "3px",
            "display": "inline-block",
            "font-size": "10px",
            "color": "#fff",
            "text-align": "center",
            "line-height": "16px",
            "margin": "0 0 2px 5px"
          },
          ".words": {
            "display": "flex",
            "min-height": "23px",
            "align-items": "center",
            "justify-content": "center",
            "flex-wrap": "wrap",
            "word-break": "break-all",
            "font-size": "14px",
            "font-weight": "400",
            "color": "rgba(0, 0, 0, 1)"
          },
          "#resizeBox": {
            "position": "relative",
            "height": "calc(100vh - 61px)"
          },
          ".message-box": {
            "height": "calc(100vh - 23px)",
            "overflow": "hidden"
          },
          ".mess-talk": {
            "overflow": "auto",
            "height": "calc(100vh - 228px)",
            "&:nth-last-child(2)": {
              "padding-bottom": "20px"
            }
          },
          ".by-at": {
            "position": "fixed",
            "bottom": "170px",
            "right": "20px",
            "width": "145px",
            "height": "37px",
            "line-height": "37px",
            "opacity": "0.98",
            "background": "#e6e6e6",
            "border-radius": "4px",
            "box-shadow": "0px 0px 6px 0px #b0b0b0",
            "color": "#333",
            "font-size": "13px",
            "padding": "0 10px",
            ".el-icon-close": {
              "cursor": "pointer",
              "float": "right",
              "line-height": "37px"
            }
          },
          ".by-more-list": {
            "position": "fixed",
            "bottom": "170px",
            "right": "20px",
            "height": "37px",
            "line-height": "37px",
            "opacity": "0.98",
            "background": "#e6e6e6",
            "border-radius": "4px",
            "box-shadow": "0px 0px 6px 0px #b0b0b0",
            "color": "#333",
            "font-size": "13px",
            "padding": "0 10px",
            "/deep/.el-icon-arrow-down": {
              "font-weight": "600",
              "color": "#000"
            }
          },
          ".mess-footer": {
            "position": "relative",
            "height": "161px",
            "background": "#f6f6f6",
            "box-sizing": "border-box"
          },
          ".mess-square": {
            "width": "100%",
            "height": "calc( 100% - 80px )",
            "input": {
              "width": "100%",
              "height": "42px",
              "border": "none",
              "background": "rgba(243, 243, 243, 1)",
              "border-radius": "8px"
            },
            "/deep/ .ql-container .ql-editor span": {
              "background": "none !important",
              "color": "black !important"
            }
          },
          ".mess-send": {
            "width": "100%",
            "position": "absolute",
            "bottom": "0",
            "right": "10px",
            "box-sizing": "border-box",
            "height": "34px",
            "span": {
              "cursor": "pointer"
            },
            "/deep/ .el-button--mini,    .el-button--small": {
              "width": "66px",
              "height": "28px",
              "margin": "0 10px 3px 0",
              "span": {
                "font-size": "14px",
                "font-weight": "400",
                "letter-spacing": "2px"
              }
            }
          },
          ".send": {
            "color": "#fff",
            "position": "absolute",
            "right": "0px",
            "bottom": "0px"
          },
          ".quote": {
            "max-width": "80%",
            "position": "absolute",
            "left": "20px",
            "bottom": "6px",
            "span": {
              "display": "inline-block",
              "width": "100%",
              "overflow": "hidden",
              "white-space": "pre",
              "text-overflow": "ellipsis"
            }
          },
          ".bq": {
            "display": "contents"
          },
          ".add": {
            "display": "contents"
          },
          ".mess-member": {
            "width": "100%",
            "background": "rgba(255, 255, 255, 1)",
            "padding": "8px"
          },
          ".mumber-header": {
            ".add-blue": {
              "background": "blue",
              "width": "50px",
              "height": "24px",
              "border-radius": "5px",
              "display": "inline-block",
              "text-align": "center"
            },
            ".mumber-number": {
              "height": "24px",
              "font-size": "15px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)"
            }
          },
          ".member-member": {
            "overflow": "scroll",
            "max-height": "calc(100vh - 220px)",
            "margin": "20px 0 0 0",
            "ul li": {
              "margin": "6px 0 0 0"
            }
          },
          ".member-head": {
            "width": "32px",
            "height": "32px",
            "border-radius": "50%",
            "background": "#ccc",
            "display": "inline-block",
            "img": {
              "width": "32px",
              "height": "32px",
              "display": "block",
              "border-radius": "50%"
            }
          },
          ".member-name": {
            "font-size": "15px",
            "width": "125px",
            "text-overflow": "ellipsis",
            "overflow": "hidden",
            "white-space": "nowrap",
            "margin": "0 5px"
          },
          ".remarkStatus": {
            ".tit": {
              "display": "flex",
              "align-items": "center",
              "img": {
                "width": "32px",
                "height": "32px",
                "margin-right": "10px",
                "border-radius": "50%"
              }
            },
            "textarea": {
              "height": "60px",
              "margin": "15px 0"
            },
            ".member-notes": {
              "margin": "10px 0",
              "/deep/ .el-input--small": {
                "height": "55px"
              },
              "/deep/ .el-textarea__inner": {
                "height": "54px",
                "background": "transparent",
                "border": "1px solid #d7d7d7"
              },
              "/deep/ .el-input__count": {
                "font-size": "12px",
                "color": "#666"
              }
            }
          },
          ".mess-checklist": {
            "width": "200px",
            "background": "rgba(255, 255, 255, 1)",
            "border": "1px solid rgba(221, 221, 221, 1)"
          },
          ".liMenu": {
            "cursor": "pointer",
            "text-align": "center",
            "height": "35px",
            "line-height": "35px",
            "font-size": "15px"
          },
          ".liMenu.hover": {
            "color": "#fff",
            "background": "#2f54eb"
          },
          ".tip-msg": {
            "height": "100%",
            "align-items": "center",
            "justify-content": "center"
          }
        },
        ".audio-wrap img": {
          "width": "30px",
          "vertical-align": "middle",
          "padding-right": "4px"
        },
        ".group-name": {
          "color": "#333333",
          "font-size": "14px",
          "font-weight": "500",
          "max-width": "220px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "pre",
          ".iconfont": {
            "font-size": "12px"
          }
        },
        ".group-people": {
          "color": "#333333",
          "font-size": "14px",
          "font-weight": "500"
        },
        ".appealContainer": {
          "width": "100%",
          "padding": "7px 20px 8px 14px",
          "box-sizing": "border-box",
          "background": "#fef4e5",
          "display": "flex",
          "justify-content": "space-between",
          "position": "absolute",
          "z-index": "1",
          ".appealNotice": {
            "width": "100%",
            "font-size": "12px",
            "font-weight": "400",
            "text-align": "left",
            "color": "#f7931a",
            "line-height": "17px"
          },
          ".el-icon-arrow-right": {
            "font-size": "14px",
            "color": "#f7931a"
          }
        }
      },
      {
        ".popupmsg": {
          "/deep/ .el-dialog__header": {
            "padding-top": "10px"
          },
          "/deep/ .el-dialog__title": {
            "font-size": "14px",
            "font-weight": "600",
            "color": "#333",
            "line-height": "20px"
          },
          "/deep/ .el-dialog__headerbtn": {
            "top": "10px"
          },
          "/deep/ .el-dialog__body span": {
            "font-size": "13px",
            "font-weight": "400",
            "color": "#666",
            "line-height": "17px"
          }
        },
        ".note-member": {
          "/deep/ .el-dialog__body": {
            "padding": "0 25px",
            "color": "#333",
            "height": "170px",
            "span": {
              "line-height": "15px"
            }
          },
          "/deep/ .dialog-footer": {
            "width": "90%",
            "margin": "30px auto 20px"
          },
          "/deep/ .el-button--primary": {
            "color": "#fff !important"
          },
          ".cancelBtn": {
            "border": "none",
            "background": "#d8d8d8",
            "color": "#333",
            "font-size": "13px"
          },
          ".sureBtn": {
            "background": "#2f54eb",
            "color": "#fff !important",
            "font-size": "13px",
            "/deep/ span": {
              "color": "#fff",
              "line-height": "10px"
            }
          }
        },
        ".voice-accept": {
          "position": "relative"
        },
        ".voice-icon": {
          "display": "flex",
          "justify-content": "flex-start",
          "color": "#ff0000",
          "font-size": "18px",
          "position": "absolute",
          "top": "8px",
          "right": "-18px"
        },
        "#talkbubblee": {
          "&.fullOfEmoji": {
            "max-width": "61%"
          },
          "&.samllFullOfEmoji": {
            "max-width": "60%"
          }
        },
        "#talkbubble": {
          "&.fullOfEmoji": {
            "max-width": "62%"
          },
          "&.samllFullOfEmoji": {
            "max-width": "61%"
          },
          "&.fileBox": {
            "max-width": "none",
            "width": "250px !important"
          }
        },
        "#talkbubble,#talkbubblee": {
          "&.imgTopSpace": {
            "padding": "0 10px"
          },
          "&.fileBox": {
            "max-width": "none",
            "width": "250px !important"
          }
        },
        ".pre": {
          "white-space": "pre"
        }
      },
      {
        ".el-tag--dark.el-tag--info": {
          "background-color": "#e7e7e7",
          "border": "none",
          "color": "#727272"
        },
        ".el-tag--dark.el-tag--info .el-tag__close": {
          "color": "#666"
        },
        ".ql-container": {
          "height": "100%",
          "overflow-y": "scroll",
          "width": "100%",
          "background": "#f6f6f6"
        },
        ".ql-toolbar.ql-snow + .ql-container.ql-snow": {
          "border": "none"
        },
        ".ql-toolbar.ql-snow": {
          "border": "none",
          "padding-top": "0"
        },
        ".ql-toolbar": {
          "display": "none"
        },
        ".ql-tooltip": {
          "display": "none"
        },
        ".ql-editor": {
          "padding": "0",
          "line-height": "0px",
          ".mention": {
            "background": "transparent",
            "> span": {
              "margin": "0"
            }
          }
        },
        ".ql-editor .ql-editor": {
          "padding": "0 10px 10px",
          "line-height": "20px"
        },
        ".ql-editor img": {
          "max-width": "150px !important",
          "vertical-align": "text-bottom",
          "margin": "0 1px"
        },
        ".quoteBubble": {
          "min-width": "60px",
          "background": "#e7e7e7",
          "padding": "8px 10px",
          "border-radius": "5px",
          "color": "#727272",
          "margin-top": "13px",
          "font-size": "12px",
          "width": "fit-content",
          "overflow": "hidden",
          "white-space": "nowrap",
          "text-overflow": "ellipsis",
          ".quotImg": {
            "display": "inline-block",
            "cursor": "pointer",
            "img": {
              "height": "30px"
            }
          }
        },
        "#talkbubble": {
          "line-height": "23px",
          "font-size": "14px",
          "min-width": "30px",
          "max-width": "62%",
          "min-height": "23px",
          "position": "relative",
          "margin-left": "10px",
          "padding": "7px 10px"
        },
        "#talkbubblee": {
          "line-height": "23px",
          "font-size": "14px",
          "min-width": "30px",
          "max-width": "63%",
          "min-height": "23px",
          "position": "relative",
          "margin-right": "10px",
          "padding": "7px 10px"
        },
        "#talkbubblee .flex-sub p,#talkbubble .flex-sub p": {
          "font-size": "14px",
          "color": "#000",
          "margin-right": "10px"
        },
        "#talkbubblee .flex-sub p:last-child,#talkbubble": {
          "color": "#000"
        },
        "#talkbubblee .load-border,#talkbubble .load-border": {
          "border-top": "1px solid #ddd",
          "margin-top": "5px",
          "padding": "5px 0 0",
          "font-size": "12px",
          "color": "#000"
        },
        "#talkbubblee .load-border span,#talkbubble .load-border span": {
          "display": "inline-block",
          "margin-left": "14px"
        },
        "#talkbubble .flex-direction p": {
          "width": "88%"
        },
        ".drawerbox": {
          "width": "250px !important"
        },
        ".message-box-class": {
          "width": "280px",
          ".el-message-box__headerbtn": {
            "display": "none"
          }
        },
        ".popContainer": {
          "position": "absolute",
          "right": "0",
          "bottom": "0",
          "z-index": "999",
          "width": "100%",
          "background": "#ddd",
          "opacity": "0.5"
        },
        ".group-edit-icon": {
          "margin-left": "10px"
        },
        ".send-btn": {
          "height": "28px",
          "width": "68px",
          "background": "#2f54eb",
          "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
          "border-radius": "4px",
          "color": "#fff",
          "font-size": "13px",
          "border": "none",
          "user-select": "none",
          "outline": "none",
          "cursor": "pointer",
          "position": "absolute",
          "right": "0",
          "bottom": "6px"
        },
        ".captureScreenClass": {
          "font-size": "9px",
          "position": "absolute",
          "top": "10px",
          "margin-left": "-8px",
          "padding": "4px",
          "cursor": "pointer"
        },
        ".screenSelectDivClass": {
          "background": "#ffffff",
          "width": "160px",
          "height": "20px",
          "line-height": "20px"
        },
        ".screenSelectClass": {
          "margin-top": "3px",
          "margin-left": "4px",
          "margin-right": "-2px"
        }
      },
      {
        ".screen-select-class": {
          "padding": "0 4px 4px 0"
        },
        ".screen-select-class .popper__arrow": {
          "display": "none"
        },
        ".screen-select-class .el-checkbox__input": {
          "margin-top": "3px",
          "margin-left": "4px",
          "margin-right": "-2px"
        },
        ".notice-wrap": {
          "max-width": "60%",
          "margin": "5px auto",
          "text-align": "center",
          "font-size": "12px",
          "color": "#999",
          "padding": "10px 0",
          "word-break": "break-all"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/components/header.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <el-header class=\"flex align-center justify-between\" style=\"-webkit-app-region: drag\">\n    <div class=\"flex align-center\">\n      <img v-if=\"$route.name == 'register'\" width=\"34\" height=\"26\" style=\"padding: 0 6px 0 0\" src=\"../../../assets/images/di2.png\" alt />\n      <div v-if=\"$route.name == 'register'\" class=\"words\">\n        <div>数字经济新生活</div>\n        <div>全球化服务</div>\n      </div>\n    </div>\n    <span style=\"color: #999999;position:absolute;left: 145px;\">DiDimessage</span>\n    <div class=\"flex align-center justify-end\" style=\"-webkit-app-region: no-drag\">\n      <LangChange v-if=\"!isInSyncDataPage\" style=\"-webkit-app-region: no-drag; cursor: pointer; margin-right: 10px\" />\n      <span class=\"header-login flex align-center\" style=\"-webkit-app-region: no-drag\">\n        <!-- <router-link to=\"/user/login/pass\">\n          <span class=\"header-blue\">{{$t('login.login')}}</span>\n        </router-link>\n        <span class=\"header-line\"></span>\n        <router-link to=\"/user/ordinaryRegister\">\n          <span class=\"header-blue\">{{$t('login.register')}}</span>\n        </router-link>-->\n      </span>\n      <!-- <LangChange />\n      <span class=\"app\">\n        <el-popover placement=\"bottom\" width=\"135\" trigger=\"click\">\n          <img\n            width=\"135\"\n            src=\"http://didiimg.oss-ap-southeast-1.aliyuncs.com/pc/user/u75%402x.png\"\n            alt\n          />\n          <span slot=\"reference\">APP</span>\n        </el-popover>\n      </span>\n      <span class=\"app\" v-on:click=\"close\">CLOSE</span>\n      <span class=\"app\" v-on:click=\"captureScreen\">截屏</span> -->\n\n      <i class=\"el-icon-close\"\n        v-if=\"(platform != 'darwin' && !isInSyncDataPage)||(isInSyncDataPage&&isShowCloseSyncData)\"\n        v-on:click=\"close\"></i>\n    </div>\n  </el-header>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import { langMap } from \"@/map\";\nimport LangChange from '@/components/LangChange';\nimport { mapGetters, mapActions } from 'vuex';\nimport { LOGIN_FINISHED } from '@/store/types';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    LangChange\n  },\n  data() {\n    //这里存放数据\n    return {\n      platform: process.platform\n      // langMap\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters(['isInSyncDataPage', 'isShowCloseSyncData']),\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([LOGIN_FINISHED]),\n    close() {\n      if(this.isInSyncDataPage){\n        // 关闭同步数据页面\n        console.log('同步数据页面')\n        this.LOGIN_FINISHED();\n      } else {\n        this.ipcRenderer.send('quit-win');\n      }\n\n    },\n    captureScreen() {\n      this.ipcRenderer.send('capture-screen');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    if (process.env.IS_ELECTRON) {\n      const { ipcRenderer } = require('electron');\n      this.ipcRenderer = ipcRenderer;\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <el-header class=\"flex align-center justify-between\" style=\"-webkit-app-region: drag\">\n    <div class=\"flex align-center\">\n      <img v-if=\"$route.name == 'register'\" width=\"34\" height=\"26\" style=\"padding: 0 6px 0 0\" src=\"../../../assets/images/di2.png\" alt />\n      <div v-if=\"$route.name == 'register'\" class=\"words\">\n        <div>数字经济新生活</div>\n        <div>全球化服务</div>\n      </div>\n    </div>\n    <span style=\"color: #999999;position:absolute;left: 145px;\">DiDimessage</span>\n    <div class=\"flex align-center justify-end\" style=\"-webkit-app-region: no-drag\">\n      <LangChange v-if=\"!isInSyncDataPage\" style=\"-webkit-app-region: no-drag; cursor: pointer; margin-right: 10px\" />\n      <span class=\"header-login flex align-center\" style=\"-webkit-app-region: no-drag\">\n        <!-- <router-link to=\"/user/login/pass\">\n          <span class=\"header-blue\">{{$t('login.login')}}</span>\n        </router-link>\n        <span class=\"header-line\"></span>\n        <router-link to=\"/user/ordinaryRegister\">\n          <span class=\"header-blue\">{{$t('login.register')}}</span>\n        </router-link>-->\n      </span>\n      <!-- <LangChange />\n      <span class=\"app\">\n        <el-popover placement=\"bottom\" width=\"135\" trigger=\"click\">\n          <img\n            width=\"135\"\n            src=\"http://didiimg.oss-ap-southeast-1.aliyuncs.com/pc/user/u75%402x.png\"\n            alt\n          />\n          <span slot=\"reference\">APP</span>\n        </el-popover>\n      </span>\n      <span class=\"app\" v-on:click=\"close\">CLOSE</span>\n      <span class=\"app\" v-on:click=\"captureScreen\">截屏</span> -->\n\n      <i class=\"el-icon-close\"\n        v-if=\"(platform != 'darwin' && !isInSyncDataPage)||(isInSyncDataPage&&isShowCloseSyncData)\"\n        v-on:click=\"close\"></i>\n    </div>\n  </el-header>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import { langMap } from \"@/map\";\nimport LangChange from '@/components/LangChange';\nimport { mapGetters, mapActions } from 'vuex';\nimport { LOGIN_FINISHED } from '@/store/types';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    LangChange\n  },\n  data() {\n    //这里存放数据\n    return {\n      platform: process.platform\n      // langMap\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters(['isInSyncDataPage', 'isShowCloseSyncData']),\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([LOGIN_FINISHED]),\n    close() {\n      if(this.isInSyncDataPage){\n        // 关闭同步数据页面\n        console.log('同步数据页面')\n        this.LOGIN_FINISHED();\n      } else {\n        this.ipcRenderer.send('quit-win');\n      }\n\n    },\n    captureScreen() {\n      this.ipcRenderer.send('capture-screen');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    if (process.env.IS_ELECTRON) {\n      const { ipcRenderer } = require('electron');\n      this.ipcRenderer = ipcRenderer;\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n/deep/.el-dropdown-link {\n  border: none;\n  outline: none;\n}\n.register .el-header {\n  height: 50px;\n  background: rgba(255, 255, 255, 1);\n  box-shadow: 0px 0px 2px 0px rgba(34, 84, 49, 0.35);\n}\n.el-header {\n  font-size: 14px;\n  .el-icon-close {\n    cursor: pointer;\n  }\n  .header-blue {\n    font-size: 14px;\n\n    font-weight: 400;\n    color: rgba(47, 84, 235, 1);\n    cursor: pointer;\n  }\n  .header-line {\n    width: 1px;\n    height: 10px;\n    background: rgba(47, 84, 235, 1);\n    border-radius: 10px;\n    display: block;\n    margin: rgb(4, 6, 12);\n  }\n  .app {\n    cursor: pointer;\n    margin-right: 20px;\n    color: #333;\n  }\n  .words {\n    font-size: 11px;\n\n    font-weight: 500;\n    color: rgba(47, 84, 235, 1);\n    opacity: 0.5;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        "/deep/.el-dropdown-link": {
          "border": "none",
          "outline": "none"
        },
        ".register .el-header": {
          "height": "50px",
          "background": "rgba(255, 255, 255, 1)",
          "box-shadow": "0px 0px 2px 0px rgba(34, 84, 49, 0.35)"
        },
        ".el-header": {
          "font-size": "14px",
          ".el-icon-close": {
            "cursor": "pointer"
          },
          ".header-blue": {
            "font-size": "14px",
            "font-weight": "400",
            "color": "rgba(47, 84, 235, 1)",
            "cursor": "pointer"
          },
          ".header-line": {
            "width": "1px",
            "height": "10px",
            "background": "rgba(47, 84, 235, 1)",
            "border-radius": "10px",
            "display": "block",
            "margin": "rgb(4, 6, 12)"
          },
          ".app": {
            "cursor": "pointer",
            "margin-right": "20px",
            "color": "#333"
          },
          ".words": {
            "font-size": "11px",
            "font-weight": "500",
            "color": "rgba(47, 84, 235, 1)",
            "opacity": "0.5"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/components/footer.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <el-footer class=\"flex justify-around\">\n    <!-- <div class=\"footer-left\">\n      <span>@2019 XXX公司版权所有</span>\n      <span>关于我们</span>\n      <span>隐私协议</span>\n    </div>\n    <div class=\"footer-right\">\n      <span>联系我们:</span>\n      <span>Instagram</span>\n      <span>Facebook</span>\n      <span>WeChat</span>\n      <span>Email</span>\n      <span>Youtube</span>\n      <span>Twitter</span>\n    </div> -->\n  </el-footer>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <el-footer class=\"flex justify-around\">\n    <!-- <div class=\"footer-left\">\n      <span>@2019 XXX公司版权所有</span>\n      <span>关于我们</span>\n      <span>隐私协议</span>\n    </div>\n    <div class=\"footer-right\">\n      <span>联系我们:</span>\n      <span>Instagram</span>\n      <span>Facebook</span>\n      <span>WeChat</span>\n      <span>Email</span>\n      <span>Youtube</span>\n      <span>Twitter</span>\n    </div> -->\n  </el-footer>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.el-footer {\n  // background-color: #b3c0d1;\n  color: #333;\n  text-align: center;\n  line-height: 60px;\n  font-size: 15px;\n  .footer-left {\n    span:nth-child(2) {\n      margin: 0 30px;\n      cursor: pointer;\n    }\n    span:nth-child(3) {\n      cursor: pointer;\n    }\n  }\n  .footer-right {\n    span {\n      margin: 0 10px;\n      cursor: pointer;\n    }\n    span:nth-child(1) {\n      margin: 0;\n      cursor: auto;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".el-footer": {
          "color": "#333",
          "text-align": "center",
          "line-height": "60px",
          "font-size": "15px",
          ".footer-left": {
            "span:nth-child(2)": {
              "margin": "0 30px",
              "cursor": "pointer"
            },
            "span:nth-child(3)": {
              "cursor": "pointer"
            }
          },
          ".footer-right": {
            "span": {
              "margin": "0 10px",
              "cursor": "pointer"
            },
            "span:nth-child(1)": {
              "margin": "0",
              "cursor": "auto"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/register/step1.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- step1 -->\n<template>\n  <div class=\"step1 flex flex-direction align-center\">\n    <div class=\"step1-login\">\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"right\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input placeholder=\"请输入邮箱地址\" v-model=\"form.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"validCode\" class=\"fix\">\n          <el-input placeholder=\"请输入验证码\" v-model=\"form.validCode\"></el-input>\n          <span class=\"toget\" @click=\"post_user_send_email\" v-if=\"countDown == 0\">点击获取</span>\n          <span class=\"toget\" v-else>{{ countDown }}</span>\n        </el-form-item>\n        <div class=\"step1-privacy\">\n          点击“下一步”即代表同意\n          <span><a href=\"http://m.didimessage.com/#/staticpage/privacy\" target=\"_blank\">《隐私政策与注册协议》</a></span>\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%; font-size: 16px\" type=\"primary\" @click=\"submitForm('ruleForm')\">下一步</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { user_send_email } from '@/server';\nimport { md5 } from '@/utils';\nimport { mapActions } from 'vuex';\nimport { WEB_CODE_LOGIN } from '@/store/types';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      countDown: 0,\n      form: {\n        email: '',\n        validCode: ''\n      },\n      rules: {\n        email: [{ type: 'email', required: true, message: '请输入邮箱' }],\n        validCode: [{ required: true, min: 6, max: 6, message: '请输入6位验证码' }]\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([WEB_CODE_LOGIN]),\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.post_user_web_code_login();\n        }\n      });\n    },\n    async post_user_send_email() {\n      this.countDown = 120;\n      let countDown = setInterval(() => {\n        this.countDown--;\n        if (this.countDown == 0) {\n          clearInterval(countDown);\n        }\n      }, 1000);\n      const res = await user_send_email({\n        email: this.form.email,\n        templateCode: 'user_7'\n      });\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: '发送成功'\n        });\n      }\n    },\n    async post_user_web_code_login() {\n      let now = Date.now();\n      let sign = md5(\n        `timestamp=${now}&userName=${this.form.email}\n        &validCode=${this.form.validCode}&validCodeType=email&key=4yUbWtGLevMv9GVH`\n      );\n\n      this.WEB_CODE_LOGIN({\n        timestamp: now,\n        loginName: this.form.email,\n        userName: this.form.email,\n        email: this.form.email,\n        validCode: this.form.validCode,\n        validCodeType: 'email',\n        templateCode: 'user_7',\n        sign,\n        isRegister: true\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- step1 -->\n<template>\n  <div class=\"step1 flex flex-direction align-center\">\n    <div class=\"step1-login\">\n      <el-form ref=\"ruleForm\" :rules=\"rules\" label-position=\"right\" label-width=\"80px\" :model=\"form\">\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input placeholder=\"请输入邮箱地址\" v-model=\"form.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"validCode\" class=\"fix\">\n          <el-input placeholder=\"请输入验证码\" v-model=\"form.validCode\"></el-input>\n          <span class=\"toget\" @click=\"post_user_send_email\" v-if=\"countDown == 0\">点击获取</span>\n          <span class=\"toget\" v-else>{{ countDown }}</span>\n        </el-form-item>\n        <div class=\"step1-privacy\">\n          点击“下一步”即代表同意\n          <span><a href=\"http://m.didimessage.com/#/staticpage/privacy\" target=\"_blank\">《隐私政策与注册协议》</a></span>\n        </div>\n        <el-form-item>\n          <el-button style=\"width: 100%; font-size: 16px\" type=\"primary\" @click=\"submitForm('ruleForm')\">下一步</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { user_send_email } from '@/server';\nimport { md5 } from '@/utils';\nimport { mapActions } from 'vuex';\nimport { WEB_CODE_LOGIN } from '@/store/types';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      countDown: 0,\n      form: {\n        email: '',\n        validCode: ''\n      },\n      rules: {\n        email: [{ type: 'email', required: true, message: '请输入邮箱' }],\n        validCode: [{ required: true, min: 6, max: 6, message: '请输入6位验证码' }]\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions([WEB_CODE_LOGIN]),\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.post_user_web_code_login();\n        }\n      });\n    },\n    async post_user_send_email() {\n      this.countDown = 120;\n      let countDown = setInterval(() => {\n        this.countDown--;\n        if (this.countDown == 0) {\n          clearInterval(countDown);\n        }\n      }, 1000);\n      const res = await user_send_email({\n        email: this.form.email,\n        templateCode: 'user_7'\n      });\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: '发送成功'\n        });\n      }\n    },\n    async post_user_web_code_login() {\n      let now = Date.now();\n      let sign = md5(\n        `timestamp=${now}&userName=${this.form.email}\n        &validCode=${this.form.validCode}&validCodeType=email&key=4yUbWtGLevMv9GVH`\n      );\n\n      this.WEB_CODE_LOGIN({\n        timestamp: now,\n        loginName: this.form.email,\n        userName: this.form.email,\n        email: this.form.email,\n        validCode: this.form.validCode,\n        validCodeType: 'email',\n        templateCode: 'user_7',\n        sign,\n        isRegister: true\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.step1 {\n  width: 1000px;\n  .step1-login {\n    width: 40%;\n    margin: 40px 20px 0 0;\n  }\n  .toget {\n    font-size: 14px;\n\n    font-weight: 500;\n    color: rgba(47, 84, 235, 1);\n    cursor: pointer;\n    position: absolute;\n    right: 10px;\n  }\n  .fix {\n    position: relative;\n  }\n  .step1-privacy {\n    margin: 320px 0px 20px 0;\n    text-align: right;\n    width: 100%;\n    font-size: 13px;\n    span {\n      font-size: 13px;\n\n      font-weight: 400;\n      color: #2f54eb;\n      cursor: pointer;\n      margin-right: 10px;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".step1": {
          "width": "1000px",
          ".step1-login": {
            "width": "40%",
            "margin": "40px 20px 0 0"
          },
          ".toget": {
            "font-size": "14px",
            "font-weight": "500",
            "color": "rgba(47, 84, 235, 1)",
            "cursor": "pointer",
            "position": "absolute",
            "right": "10px"
          },
          ".fix": {
            "position": "relative"
          },
          ".step1-privacy": {
            "margin": "320px 0px 20px 0",
            "text-align": "right",
            "width": "100%",
            "font-size": "13px",
            "span": {
              "font-size": "13px",
              "font-weight": "400",
              "color": "#2f54eb",
              "cursor": "pointer",
              "margin-right": "10px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/register/step2.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- step2 -->\n<template>\n  <div class=\"step2 flex\" v-loading=\"loading\">\n    <div class=\"step2-left flex flex-direction align-center\">\n      <el-upload class=\"upload-demo\" :action=\"action\" :show-file-list=\"false\" :on-success=\"handleUploadSuccess\" :limit=\"1\">\n        <el-avatar :size=\"64\" fit=\"contain\" :src=\"coinLogo\"></el-avatar>\n        <div class=\"step2-left-words\">上传</div>\n      </el-upload>\n    </div>\n    <div class=\"step2-right\">\n      <div class=\"step2-right-info\">\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n          <el-form-item label=\"联系人\" prop=\"contactPerson\">\n            <el-input v-model=\"ruleForm.contactPerson\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"联系手机\" prop=\"contactPhone\">\n            <el-input v-model=\"ruleForm.contactPhone\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"国家\" prop=\"country\">\n            <el-select v-model=\"ruleForm.country\" clearable filterable placeholder=\"请选择活动区域\">\n              <el-option :label=\"item.name\" :value=\"item.code\" v-for=\"item in countryList\" :key=\"item.code\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"团队名称\" prop=\"teamName\">\n            <el-input v-model=\"ruleForm.teamName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"客服邮箱\" prop=\"serviceEmail\">\n            <el-input v-model=\"ruleForm.serviceEmail\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"链\" prop=\"chain\">\n            <el-radio-group v-model=\"ruleForm.chain\" size=\"medium\" class=\"chain-list\">\n              <el-row :gutter=\"12\">\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"ETH\">以太坊</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"EOS\">柚子</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"TRON\">波场</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"STEEM\">STEEM</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"IOST\">IOST</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"ONT\">本体</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"KLAYTN\">KLAYTN</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-input v-model=\"ruleForm.chain\" placeholder=\"请输入\"></el-input>\n                </el-col>\n              </el-row>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"币种简称\" prop=\"shortCurrency\">\n            <el-input v-model=\"ruleForm.shortCurrency\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"币种全称\" prop=\"currency\">\n            <el-input v-model=\"ruleForm.currency\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"发行时间\" required>\n            <el-col :span=\"11\">\n              <el-form-item prop=\"releaseTime\">\n                <el-date-picker\n                  type=\"date\"\n                  placeholder=\"选择日期\"\n                  value-format=\"yyyy-MM-dd\"\n                  v-model=\"ruleForm.releaseTime\"\n                  style=\"width: 100%\"\n                ></el-date-picker>\n              </el-form-item>\n            </el-col>\n          </el-form-item>\n          <el-form-item label=\"发行总量\" prop=\"releaseTotal\">\n            <el-input v-model=\"ruleForm.releaseTotal\" type=\"number\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"官网地址\" prop=\"officialUrl\">\n            <el-input v-model=\"ruleForm.officialUrl\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"白皮书地址\" prop=\"whiteUrl\">\n            <el-input v-model=\"ruleForm.whiteUrl\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"简介\" prop=\"introduction\">\n            <el-input :autosize=\"{ minRows: 4, maxRows: 10 }\" type=\"textarea\" v-model=\"ruleForm.introduction\"></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div class=\"step2-right-media flex flex-direction align-center\">\n        <!-- <h3>社交媒体</h3>\n        <ul class=\"flex\">\n          <li>\n            <img src=\"../../../assets/images/register_facebook.png\" alt />Facebook\n          </li>\n          <li>\n            <img src=\"../../../assets/images/register_github.png\" alt />Github\n          </li>\n        </ul>\n        <ul class=\"flex\">\n          <li>\n            <img src=\"../../../assets/images/register_twitter.png\" alt />Twitter\n          </li>\n          <li>\n            <img src=\"../../../assets/images/register_telegram.png\" alt />Telegram\n          </li>\n        </ul>\n        <ul class=\"flex\">\n          <li>\n            <img src=\"../../../assets/images/register_youtube.png\" alt />Youtube\n          </li>\n          <li>\n            <img src=\"../../../assets/images/register_instagram.png\" alt />Instatram\n          </li>\n        </ul>\n        <ul class=\"flex\">\n          <li>\n            <img src=\"../../../assets/images/register_reddit.png\" alt />Reddit\n          </li>\n          <li>\n            <img src=\"../../../assets/images/register_discord.png\" alt />Discord\n          </li>\n        </ul>\n        <ul class=\"flex\">\n          <li>\n            <img src=\"../../../assets/images/register_medium.png\" alt />Medium\n          </li>\n          <li>\n            <img src=\"../../../assets/images/register_wechat.png\" alt />Wechat\n          </li>\n        </ul>-->\n        <span class=\"step2-right-contact\">提交后无法修改，如需修改，请联系客服</span>\n        <button @click=\"submitForm('ruleForm')\">提交</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { user_set_team_info, user_get_team_info, upload_images } from './server';\nimport { base_country_list } from '@/server.js';\nimport { mapGetters } from 'vuex';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      action: upload_images(),\n      coinLogo: '',\n      loading: false,\n      countryList: [],\n      ruleForm: {\n        contactPerson: '',\n        contactPhone: '',\n        country: '',\n        teamName: '',\n        serviceEmail: this.$route.query.email,\n        chain: '',\n        shortCurrency: '',\n        currency: '',\n        releaseTime: '',\n        releaseTotal: null,\n        officialUrl: '',\n        whiteUrl: '',\n        introduction: ''\n      },\n      rules: {\n        contactPerson: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          {\n            min: 1,\n            max: 50,\n            message: '请输入1到50位',\n            trigger: 'blur'\n          }\n        ],\n        contactPhone: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          {\n            min: 7,\n            max: 12,\n            message: '请输入7到12位数字',\n            trigger: 'blur'\n          }\n        ],\n        country: [{ required: true, message: '请选择', trigger: 'change' }],\n        teamName: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          {\n            min: 1,\n            max: 50,\n            message: '请输入1到50位',\n            trigger: 'blur'\n          }\n        ],\n        serviceEmail: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱', trigger: 'blur' }\n        ],\n        chain: [{ required: true, message: '请选择', trigger: 'change' }],\n        shortCurrency: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          {\n            min: 1,\n            max: 10,\n            message: '请输入1到10位',\n            trigger: 'blur'\n          }\n        ],\n        currency: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          {\n            min: 1,\n            max: 25,\n            message: '请输入1到25位',\n            trigger: 'blur'\n          }\n        ],\n        releaseTime: [{ required: true, message: '请选择', trigger: 'change' }],\n        releaseTotal: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          { min: 1, max: 12, message: '请输入12位数字以内', trigger: 'blur' }\n        ],\n        officialUrl: [\n          {\n            required: true,\n            type: 'url',\n            message: '请输入正确网址',\n            trigger: 'blur'\n          }\n        ],\n        whiteUrl: [\n          {\n            required: true,\n            type: 'url',\n            message: '请输入正确网址',\n            trigger: 'blur'\n          }\n        ],\n        introduction: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          { min: 1, max: 500, message: '不得超过500字', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  props: {\n    callback: {\n      type: Function\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo'\n    })\n  },\n  //监控data中的数据变化\n  //方法集合\n  methods: {\n    async post_base_country_list() {\n      let res = await base_country_list();\n      this.countryList = res.data;\n    },\n    async post_user_set_team_info() {\n      try {\n        this.loading = true;\n        let res = await user_set_team_info({\n          coinLogo: this.coinLogo,\n          ...this.$route.query,\n          ...this.ruleForm\n        });\n        this.loading = false;\n        if (typeof this.callback === 'function') {\n          this.callback();\n          return true;\n        }\n        if (res.code == '200') {\n          this.$router.push({\n            path: '',\n            query: {\n              step: 3\n            }\n          });\n        }\n      } catch (err) {\n        this.loading = false;\n        throw new Error(err);\n      }\n    },\n    async post_user_get_team_info() {\n      try {\n        this.loading = true;\n        let res = await user_get_team_info({\n          tempAccess: this.$route.query.tempAccess\n        });\n        this.loading = false;\n        if (!res.data) return;\n        this.ruleForm = res.data;\n      } catch (err) {\n        this.$message.error('提交失败，请重试！');\n        this.loading = false;\n        throw new Error(err);\n      }\n    },\n    handleUploadSuccess(res) {\n      this.coinLogo = res.data.path;\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (!this.coinLogo) {\n            this.$message.warning('请上传logo');\n            return;\n          }\n          this.post_user_set_team_info();\n        }\n      });\n    },\n    // 获取用户的审核状态，如果非专业用户时才进行查询\n    async getAccountInfo() {\n      if (this.userInfo.userType === 5) {\n        this.$message.error('您已经是专业用户，不需要进行账户升级！');\n        this.$router.back();\n        return false;\n      }\n      try {\n        let { data } = await user_get_team_info();\n        if (data) {\n          this.ruleForm = data;\n        }\n      } catch (err) {\n        throw new Error(err);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.post_base_country_list();\n    this.post_user_get_team_info();\n    this.getAccountInfo();\n  }\n};\n</script>",
    "originData": "<!-- step2 -->\n<template>\n  <div class=\"step2 flex\" v-loading=\"loading\">\n    <div class=\"step2-left flex flex-direction align-center\">\n      <el-upload class=\"upload-demo\" :action=\"action\" :show-file-list=\"false\" :on-success=\"handleUploadSuccess\" :limit=\"1\">\n        <el-avatar :size=\"64\" fit=\"contain\" :src=\"coinLogo\"></el-avatar>\n        <div class=\"step2-left-words\">上传</div>\n      </el-upload>\n    </div>\n    <div class=\"step2-right\">\n      <div class=\"step2-right-info\">\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n          <el-form-item label=\"联系人\" prop=\"contactPerson\">\n            <el-input v-model=\"ruleForm.contactPerson\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"联系手机\" prop=\"contactPhone\">\n            <el-input v-model=\"ruleForm.contactPhone\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"国家\" prop=\"country\">\n            <el-select v-model=\"ruleForm.country\" clearable filterable placeholder=\"请选择活动区域\">\n              <el-option :label=\"item.name\" :value=\"item.code\" v-for=\"item in countryList\" :key=\"item.code\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"团队名称\" prop=\"teamName\">\n            <el-input v-model=\"ruleForm.teamName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"客服邮箱\" prop=\"serviceEmail\">\n            <el-input v-model=\"ruleForm.serviceEmail\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"链\" prop=\"chain\">\n            <el-radio-group v-model=\"ruleForm.chain\" size=\"medium\" class=\"chain-list\">\n              <el-row :gutter=\"12\">\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"ETH\">以太坊</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"EOS\">柚子</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"TRON\">波场</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"STEEM\">STEEM</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"IOST\">IOST</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"ONT\">本体</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-radio-button label=\"KLAYTN\">KLAYTN</el-radio-button>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-input v-model=\"ruleForm.chain\" placeholder=\"请输入\"></el-input>\n                </el-col>\n              </el-row>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"币种简称\" prop=\"shortCurrency\">\n            <el-input v-model=\"ruleForm.shortCurrency\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"币种全称\" prop=\"currency\">\n            <el-input v-model=\"ruleForm.currency\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"发行时间\" required>\n            <el-col :span=\"11\">\n              <el-form-item prop=\"releaseTime\">\n                <el-date-picker\n                  type=\"date\"\n                  placeholder=\"选择日期\"\n                  value-format=\"yyyy-MM-dd\"\n                  v-model=\"ruleForm.releaseTime\"\n                  style=\"width: 100%\"\n                ></el-date-picker>\n              </el-form-item>\n            </el-col>\n          </el-form-item>\n          <el-form-item label=\"发行总量\" prop=\"releaseTotal\">\n            <el-input v-model=\"ruleForm.releaseTotal\" type=\"number\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"官网地址\" prop=\"officialUrl\">\n            <el-input v-model=\"ruleForm.officialUrl\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"白皮书地址\" prop=\"whiteUrl\">\n            <el-input v-model=\"ruleForm.whiteUrl\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"简介\" prop=\"introduction\">\n            <el-input :autosize=\"{ minRows: 4, maxRows: 10 }\" type=\"textarea\" v-model=\"ruleForm.introduction\"></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div class=\"step2-right-media flex flex-direction align-center\">\n        <!-- <h3>社交媒体</h3>\n        <ul class=\"flex\">\n          <li>\n            <img src=\"../../../assets/images/register_facebook.png\" alt />Facebook\n          </li>\n          <li>\n            <img src=\"../../../assets/images/register_github.png\" alt />Github\n          </li>\n        </ul>\n        <ul class=\"flex\">\n          <li>\n            <img src=\"../../../assets/images/register_twitter.png\" alt />Twitter\n          </li>\n          <li>\n            <img src=\"../../../assets/images/register_telegram.png\" alt />Telegram\n          </li>\n        </ul>\n        <ul class=\"flex\">\n          <li>\n            <img src=\"../../../assets/images/register_youtube.png\" alt />Youtube\n          </li>\n          <li>\n            <img src=\"../../../assets/images/register_instagram.png\" alt />Instatram\n          </li>\n        </ul>\n        <ul class=\"flex\">\n          <li>\n            <img src=\"../../../assets/images/register_reddit.png\" alt />Reddit\n          </li>\n          <li>\n            <img src=\"../../../assets/images/register_discord.png\" alt />Discord\n          </li>\n        </ul>\n        <ul class=\"flex\">\n          <li>\n            <img src=\"../../../assets/images/register_medium.png\" alt />Medium\n          </li>\n          <li>\n            <img src=\"../../../assets/images/register_wechat.png\" alt />Wechat\n          </li>\n        </ul>-->\n        <span class=\"step2-right-contact\">提交后无法修改，如需修改，请联系客服</span>\n        <button @click=\"submitForm('ruleForm')\">提交</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { user_set_team_info, user_get_team_info, upload_images } from './server';\nimport { base_country_list } from '@/server.js';\nimport { mapGetters } from 'vuex';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      action: upload_images(),\n      coinLogo: '',\n      loading: false,\n      countryList: [],\n      ruleForm: {\n        contactPerson: '',\n        contactPhone: '',\n        country: '',\n        teamName: '',\n        serviceEmail: this.$route.query.email,\n        chain: '',\n        shortCurrency: '',\n        currency: '',\n        releaseTime: '',\n        releaseTotal: null,\n        officialUrl: '',\n        whiteUrl: '',\n        introduction: ''\n      },\n      rules: {\n        contactPerson: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          {\n            min: 1,\n            max: 50,\n            message: '请输入1到50位',\n            trigger: 'blur'\n          }\n        ],\n        contactPhone: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          {\n            min: 7,\n            max: 12,\n            message: '请输入7到12位数字',\n            trigger: 'blur'\n          }\n        ],\n        country: [{ required: true, message: '请选择', trigger: 'change' }],\n        teamName: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          {\n            min: 1,\n            max: 50,\n            message: '请输入1到50位',\n            trigger: 'blur'\n          }\n        ],\n        serviceEmail: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱', trigger: 'blur' }\n        ],\n        chain: [{ required: true, message: '请选择', trigger: 'change' }],\n        shortCurrency: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          {\n            min: 1,\n            max: 10,\n            message: '请输入1到10位',\n            trigger: 'blur'\n          }\n        ],\n        currency: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          {\n            min: 1,\n            max: 25,\n            message: '请输入1到25位',\n            trigger: 'blur'\n          }\n        ],\n        releaseTime: [{ required: true, message: '请选择', trigger: 'change' }],\n        releaseTotal: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          { min: 1, max: 12, message: '请输入12位数字以内', trigger: 'blur' }\n        ],\n        officialUrl: [\n          {\n            required: true,\n            type: 'url',\n            message: '请输入正确网址',\n            trigger: 'blur'\n          }\n        ],\n        whiteUrl: [\n          {\n            required: true,\n            type: 'url',\n            message: '请输入正确网址',\n            trigger: 'blur'\n          }\n        ],\n        introduction: [\n          { required: true, message: '请输入', trigger: 'blur' },\n          { min: 1, max: 500, message: '不得超过500字', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  props: {\n    callback: {\n      type: Function\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo'\n    })\n  },\n  //监控data中的数据变化\n  //方法集合\n  methods: {\n    async post_base_country_list() {\n      let res = await base_country_list();\n      this.countryList = res.data;\n    },\n    async post_user_set_team_info() {\n      try {\n        this.loading = true;\n        let res = await user_set_team_info({\n          coinLogo: this.coinLogo,\n          ...this.$route.query,\n          ...this.ruleForm\n        });\n        this.loading = false;\n        if (typeof this.callback === 'function') {\n          this.callback();\n          return true;\n        }\n        if (res.code == '200') {\n          this.$router.push({\n            path: '',\n            query: {\n              step: 3\n            }\n          });\n        }\n      } catch (err) {\n        this.loading = false;\n        throw new Error(err);\n      }\n    },\n    async post_user_get_team_info() {\n      try {\n        this.loading = true;\n        let res = await user_get_team_info({\n          tempAccess: this.$route.query.tempAccess\n        });\n        this.loading = false;\n        if (!res.data) return;\n        this.ruleForm = res.data;\n      } catch (err) {\n        this.$message.error('提交失败，请重试！');\n        this.loading = false;\n        throw new Error(err);\n      }\n    },\n    handleUploadSuccess(res) {\n      this.coinLogo = res.data.path;\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (!this.coinLogo) {\n            this.$message.warning('请上传logo');\n            return;\n          }\n          this.post_user_set_team_info();\n        }\n      });\n    },\n    // 获取用户的审核状态，如果非专业用户时才进行查询\n    async getAccountInfo() {\n      if (this.userInfo.userType === 5) {\n        this.$message.error('您已经是专业用户，不需要进行账户升级！');\n        this.$router.back();\n        return false;\n      }\n      try {\n        let { data } = await user_get_team_info();\n        if (data) {\n          this.ruleForm = data;\n        }\n      } catch (err) {\n        throw new Error(err);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.post_base_country_list();\n    this.post_user_get_team_info();\n    this.getAccountInfo();\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.step2 {\n  width: 760px;\n  margin: 30px 0;\n  .step2-left {\n    width: 10%;\n    .step2-left-head {\n      width: 70px;\n      height: 70px;\n      background: #ccc;\n      border-radius: 50%;\n    }\n    .step2-left-coin {\n      margin: 5px 0 15px 0;\n      font-size: 14px;\n\n      font-weight: 500;\n      color: rgba(51, 51, 51, 1);\n    }\n    .step2-left-words {\n      font-size: 14px;\n\n      font-weight: 500;\n      color: rgba(47, 84, 235, 1);\n      cursor: pointer;\n    }\n  }\n  .step2-right {\n    width: 90%;\n    padding: 0 20px;\n    .step2-right-info {\n      width: 100%;\n    }\n    .step2-right-media {\n      width: 100%;\n      h3 {\n        font-size: 14px;\n\n        font-weight: 500;\n        color: rgba(47, 84, 235, 1);\n        line-height: 36px;\n        width: 100%;\n        text-align: left;\n      }\n      ul {\n        width: 100%;\n        height: 50px;\n        box-sizing: border-box;\n        font-size: 12px;\n\n        font-weight: 500;\n        color: rgba(153, 153, 153, 1);\n        li:nth-child(1) {\n          width: 50%;\n          height: 45px;\n          background: rgba(247, 247, 250, 1);\n          border-radius: 4px;\n          margin: 0 5px 5px 0;\n          display: flex;\n          align-items: center;\n          padding: 0 0 0 10px;\n          box-sizing: border-box;\n          img {\n            margin: 0 10px 0 0;\n          }\n        }\n        li:nth-child(2) {\n          width: 50%;\n          height: 45px;\n          background: rgba(247, 247, 250, 1);\n          border-radius: 4px;\n          box-sizing: border-box;\n          display: flex;\n          align-items: center;\n          padding: 0 0 0 10px;\n          box-sizing: border-box;\n          img {\n            margin: 0 10px 0 0;\n          }\n        }\n      }\n      .step2-right-contact {\n        width: 100%;\n        text-align: center;\n        display: block;\n        margin-top: 10px;\n        font-size: 14px;\n\n        font-weight: 500;\n        color: rgba(47, 84, 235, 1);\n      }\n      button {\n        width: 300px;\n        height: 40px;\n        background: rgba(47, 84, 235, 1);\n        border-radius: 5px;\n        border: none;\n        margin-top: 20px;\n        font-size: 16px;\n\n        font-weight: 500;\n        color: rgba(255, 255, 255, 1);\n      }\n    }\n  }\n  .chain-list {\n    .el-col {\n      padding-bottom: 10px;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".step2": {
          "width": "760px",
          "margin": "30px 0",
          ".step2-left": {
            "width": "10%",
            ".step2-left-head": {
              "width": "70px",
              "height": "70px",
              "background": "#ccc",
              "border-radius": "50%"
            },
            ".step2-left-coin": {
              "margin": "5px 0 15px 0",
              "font-size": "14px",
              "font-weight": "500",
              "color": "rgba(51, 51, 51, 1)"
            },
            ".step2-left-words": {
              "font-size": "14px",
              "font-weight": "500",
              "color": "rgba(47, 84, 235, 1)",
              "cursor": "pointer"
            }
          },
          ".step2-right": {
            "width": "90%",
            "padding": "0 20px",
            ".step2-right-info": {
              "width": "100%"
            },
            ".step2-right-media": {
              "width": "100%",
              "h3": {
                "font-size": "14px",
                "font-weight": "500",
                "color": "rgba(47, 84, 235, 1)",
                "line-height": "36px",
                "width": "100%",
                "text-align": "left"
              },
              "ul": {
                "width": "100%",
                "height": "50px",
                "box-sizing": "border-box",
                "font-size": "12px",
                "font-weight": "500",
                "color": "rgba(153, 153, 153, 1)",
                "li:nth-child(1)": {
                  "width": "50%",
                  "height": "45px",
                  "background": "rgba(247, 247, 250, 1)",
                  "border-radius": "4px",
                  "margin": "0 5px 5px 0",
                  "display": "flex",
                  "align-items": "center",
                  "padding": "0 0 0 10px",
                  "box-sizing": "border-box",
                  "img": {
                    "margin": "0 10px 0 0"
                  }
                },
                "li:nth-child(2)": {
                  "width": "50%",
                  "height": "45px",
                  "background": "rgba(247, 247, 250, 1)",
                  "border-radius": "4px",
                  "box-sizing": "border-box",
                  "display": "flex",
                  "align-items": "center",
                  "padding": "0 0 0 10px",
                  "img": {
                    "margin": "0 10px 0 0"
                  }
                }
              },
              ".step2-right-contact": {
                "width": "100%",
                "text-align": "center",
                "display": "block",
                "margin-top": "10px",
                "font-size": "14px",
                "font-weight": "500",
                "color": "rgba(47, 84, 235, 1)"
              },
              "button": {
                "width": "300px",
                "height": "40px",
                "background": "rgba(47, 84, 235, 1)",
                "border-radius": "5px",
                "border": "none",
                "margin-top": "20px",
                "font-size": "16px",
                "font-weight": "500",
                "color": "rgba(255, 255, 255, 1)"
              }
            }
          },
          ".chain-list": {
            ".el-col": {
              "padding-bottom": "10px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/layouts/user/register/step3.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- step3 -->\n<template>\n  <div class=\"step3\">\n    <div class=\"step3-success flex flex-direction align-center\">\n      <div class=\"step3-one\">\n        <img src=\"../../../assets/images/right.png\" alt />\n      </div>\n      <div class=\"step3-two\">操作成功</div>\n      <div class=\"step3-three\">\n        预计X个工作日内审核完成，审核通过后我们将在APP通知您！\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- step3 -->\n<template>\n  <div class=\"step3\">\n    <div class=\"step3-success flex flex-direction align-center\">\n      <div class=\"step3-one\">\n        <img src=\"../../../assets/images/right.png\" alt />\n      </div>\n      <div class=\"step3-two\">操作成功</div>\n      <div class=\"step3-three\">\n        预计X个工作日内审核完成，审核通过后我们将在APP通知您！\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.step3-one {\n  margin-top: 100px;\n}\n.step3-two {\n  margin: 20px 0 30px 0;\n\n  font-weight: 500;\n  color: rgba(51, 51, 51, 1);\n  font-size: 16px;\n}\n.step3-three {\n  font-size: 14px;\n\n  font-weight: 400;\n  color: rgba(51, 51, 51, 1);\n}\n</style>\n",
    "cssJson": [
      {
        ".step3-one": {
          "margin-top": "100px"
        },
        ".step3-two": {
          "margin": "20px 0 30px 0",
          "font-weight": "500",
          "color": "rgba(51, 51, 51, 1)",
          "font-size": "16px"
        },
        ".step3-three": {
          "font-size": "14px",
          "font-weight": "400",
          "color": "rgba(51, 51, 51, 1)"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberIcon/DiscussionIcon.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div ref=\"domToIcon\">\n    <div :class=\"iconType ? iconType + ' discussion-icon' : 'discussion-icon'\">\n      <span>{{ showIconName }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'DiscussionIcon',\n  props: {\n    name: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    iconType: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  computed: {\n    showIconName() {\n      let nameArray = this.name.split('、');\n      if (nameArray.length > 1) {\n        return (Array.from(nameArray[0]).length > 0 ? Array.from(nameArray[0])[0] : '').concat(\n          Array.from(nameArray[1]).length > 0 ? Array.from(nameArray[1])[0] : ''\n        );\n      } else {\n        if (Array.from(nameArray[0]).length > 1) {\n          return Array.from(nameArray[0])[0].concat(Array.from(nameArray[0])[1]);\n        } else {\n          return Array.from(nameArray[0])[0];\n        }\n      }\n    }\n  },\n  mounted() {\n    // if (process.platform !== 'darwin') {\n    //   const fs = require('fs'), path = require('path');\n    //   let that=this;\n    //   let filePath=path.join(that.$remote.app.getPath('userData'),'images', `${that.showIconName||'default'}.png`)\n    //   if (!fs.existsSync(filePath)) {\n    //     let domtoimage = require('dom-to-image');\n    //     domtoimage\n    //       .toPng(that.$refs.domToIcon, { width: 40, height: 40, bgcolor: \"#6d7998\" })\n    //       .then(function (dataUrl) {\n    //         fs.writeFile(\n    //           filePath,\n    //           Buffer.from(\n    //             dataUrl.replace(/^data:image\\/\\w+;base64,/, \"\"),\n    //             \"base64\"\n    //           ),\n    //           function (err) {\n    //             if (err) {\n    //               console.log('特殊字符:',err);\n    //             // } else {\n    //             //   console.log(\"讨论组字体图片保存成功！\");\n    //             }\n    //           }\n    //         );\n    //       })\n    //       .catch(function (error) {\n    //         console.error(\"oops, something went wrong!\", error);\n    //       });\n    //   // }else{\n    //   //   console.log('存在:',filePath)\n    //   }\n    // }\n  }\n};\n</script>",
    "originData": "<template>\n  <div ref=\"domToIcon\">\n    <div :class=\"iconType ? iconType + ' discussion-icon' : 'discussion-icon'\">\n      <span>{{ showIconName }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'DiscussionIcon',\n  props: {\n    name: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    iconType: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  computed: {\n    showIconName() {\n      let nameArray = this.name.split('、');\n      if (nameArray.length > 1) {\n        return (Array.from(nameArray[0]).length > 0 ? Array.from(nameArray[0])[0] : '').concat(\n          Array.from(nameArray[1]).length > 0 ? Array.from(nameArray[1])[0] : ''\n        );\n      } else {\n        if (Array.from(nameArray[0]).length > 1) {\n          return Array.from(nameArray[0])[0].concat(Array.from(nameArray[0])[1]);\n        } else {\n          return Array.from(nameArray[0])[0];\n        }\n      }\n    }\n  },\n  mounted() {\n    // if (process.platform !== 'darwin') {\n    //   const fs = require('fs'), path = require('path');\n    //   let that=this;\n    //   let filePath=path.join(that.$remote.app.getPath('userData'),'images', `${that.showIconName||'default'}.png`)\n    //   if (!fs.existsSync(filePath)) {\n    //     let domtoimage = require('dom-to-image');\n    //     domtoimage\n    //       .toPng(that.$refs.domToIcon, { width: 40, height: 40, bgcolor: \"#6d7998\" })\n    //       .then(function (dataUrl) {\n    //         fs.writeFile(\n    //           filePath,\n    //           Buffer.from(\n    //             dataUrl.replace(/^data:image\\/\\w+;base64,/, \"\"),\n    //             \"base64\"\n    //           ),\n    //           function (err) {\n    //             if (err) {\n    //               console.log('特殊字符:',err);\n    //             // } else {\n    //             //   console.log(\"讨论组字体图片保存成功！\");\n    //             }\n    //           }\n    //         );\n    //       })\n    //       .catch(function (error) {\n    //         console.error(\"oops, something went wrong!\", error);\n    //       });\n    //   // }else{\n    //   //   console.log('存在:',filePath)\n    //   }\n    // }\n  }\n};\n</script>\n\n<style scoped>\n.discussion-icon {\n  width: 38px;\n  height: 38px;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: #6d7998;\n}\n.discussion-icon span {\n  font-size: 13px;\n  color: #ffffff;\n}\n.huge {\n  width: 72px;\n  height: 72px;\n}\n.huge span {\n  font-size: 20px;\n}\n.large2 {\n  width: 60px;\n  height: 60px;\n}\n.large2 span {\n  font-size: 18px;\n}\n.large {\n  width: 50px;\n  height: 50px;\n}\n.large span {\n  font-size: 16px;\n}\n.medium {\n  width: 40px;\n  height: 40px;\n}\n.medium span {\n  font-size: 14px;\n}\n.mini {\n  width: 38px;\n  /* height: 38px; */\n}\n.mini span {\n  font-size: 12px;\n}\n.super-mini {\n  width: 32px;\n  height: 32px;\n}\n</style>\n",
    "cssJson": [
      {
        ".discussion-icon": {
          "width": "38px",
          "height": "38px",
          "border-radius": "50%",
          "display": "flex",
          "flex-direction": "column",
          "justify-content": "center",
          "align-items": "center",
          "background": "#6d7998"
        },
        ".discussion-icon span": {
          "font-size": "13px",
          "color": "#ffffff"
        },
        ".huge": {
          "width": "72px",
          "height": "72px"
        },
        ".huge span": {
          "font-size": "20px"
        },
        ".large2": {
          "width": "60px",
          "height": "60px"
        },
        ".large2 span": {
          "font-size": "18px"
        },
        ".large": {
          "width": "50px",
          "height": "50px"
        },
        ".large span": {
          "font-size": "16px"
        },
        ".medium": {
          "width": "40px",
          "height": "40px"
        },
        ".medium span": {
          "font-size": "14px"
        },
        ".mini": {
          "width": "38px"
        },
        ".mini span": {
          "font-size": "12px"
        },
        ".super-mini": {
          "width": "32px",
          "height": "32px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/single/message/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>",
      "1": "<style lang=\"less\">",
      "2": "<style lang=\"less\" scoped>",
      "3": "<style>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"message\" v-loading=\"uploadLoading\" id=\"messageBox\">\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardUserId\"\n      ref=\"cardOther\"\n      @handleclosecard=\"handleclosecard\"\n    ></member-card-other>\n    <GroupCard :groupInfo=\"groupInfo\" ref=\"groupCard\"></GroupCard>\n    <div class=\"message-box\">\n      <Title @goMessage=\"goMessage\" @goSetting=\"goSetting\">\n        <div\n          style=\"display: flex; align-items: center; cursor: pointer\"\n          @click=\"id == '1008455862495526912' || id == '1032384035881537536' ? null : showInfo()\"\n        >\n          <label class=\"vlogo\" v-if=\"id == '1008455862495526912' || id == '1032384035881537536'\">\n            <img src=\"../../../../assets/images/vlogo.png\" />\n          </label>\n          <span class=\"group-name\" :title=\"userInfo.userNickName\">\n            <i class=\"iconfont icon-user\" v-if=\"id != '1008455862495526912' &&  id != '1032384035881537536'\"></i>\n            {{ userInfo.userNickName }}\n          </span>\n        </div>\n      </Title>\n\n      <div id=\"resizeBox\">\n        <div class=\"maskVisible\" v-show=\"maskVisible\"></div>\n        <div class=\"mess-talk custom-scrollbar\" ref=\"talk\" id=\"talk\" >\n\n          <div class=\"loadmore\" v-if=\"hasMore\" v-loading=\"listLoading\" element-loading-spinner=\"el-icon-loading\" @click=\"loadmorelist()\">\n            {{ $t('Universal_0361') }}\n          </div>\n          <div class=\"loadmore2 nomore\"\n            v-if=\"!hasMore && notDiDiService(userInfo) && chatlistFlag\" element-loading-spinner=\"el-icon-loading\">\n            <div class=\"chatInfo\">\n              <img \n                class=\"avater\" \n                :src=\"findImage(userInfo.imgUrl)\" \n                @click=\"openImgView\" \n                @error=\"replaceImg\" \n                style=\"-webkit-user-drag:none;\" \n              />\n              <p>{{ userInfo.userNickName || userInfo.friendNickName}}</p>\n              <span>{{ $t('chat_0001',{saveTime}) }}</span>\n            </div>\n          </div>\n          <!-- 图片查看 -->\n          <viewer :images=\"imglsit\" class=\"viewer\" ref=\"viewer\" @inited=\"inited\">\n            <img v-for=\"src in imglsit\" :src=\"src.url\" :key=\"src.reqId\" alt style=\"display: none\" />\n          </viewer>\n          <!-- ###### 实时消息 ###### -->\n          <div class=\"mess-talk-self\">\n            <!-- 多选实时消息 -->\n            <el-checkbox-group v-if=\"mutiChooseTag\" v-model=\"checkList2\" class=\"talkcheck\">\n              <el-checkbox\n                v-for=\"(item, index) in chatList\"\n                v-if=\"item.msgType != '14'\"\n                :label=\"item.msgType == 24 ? '' : item\"\n                :key=\"`${item._id}${index}`\"\n                :disabled=\"item.disabled || item.sendStatus == 1 || item.sendStatus == -1\"\n                :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                :class=\"\n                  item.fromType == '408' ||\n                  item.fromType == '409' ||\n                  item.fromType == '201' ||\n                  item.fromType == '215' ||\n                  item.fromType == '212'\n                    ? 'hidden'\n                    : item.msgType != '24' && item.msgType != '13' && getShowTimestamp(item.timestamp,chatList[index-1]) && item.disabled\n                    ? 'disabledWithTime'\n                    : item.msgType != '24' && item.msgType != '13' && getShowTimestamp(item.timestamp,chatList[index-1])\n                    ? 'higher'\n                    : item.disabled\n                    ? 'disabled'\n                    : ''\n                \"\n                :value=\"item.checked\"\n                @change=\"multiSelectValidation(item)\"\n                :checked=\"item.checked\"\n              >\n                <div class=\"infotime\" v-if=\"item.msgType != '24' && item.msgType != '13' \n                && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                  {{ item.timestamp | diffTimeHand }}\n                </div>\n                <div\n                  v-if=\"\n                    item.msgType != '4' &&\n                      item.msgType != '7' &&\n                      item.msgType != '24' &&\n                      item.msgType != '44' &&\n                      item.msgType != '13' &&\n                      item.msgType != '26' &&\n                      item.msgType != '14' &&\n                      item.msgType != '31' &&\n                      item.msgType != '8'  &&\n                      item.msgType != '61'\n                  \"\n                >\n                  <!-- 别人发送的消息 -->\n                  <div class=\"mess-detail flex\" v-if=\"item.fromId != userId\">\n                    <span class=\"mess-head\" v-if=\"item.msgType != '26'\" @click=\"showUserInfo(item.fromId)\">\n                      <ServiceIcon v-if=\"item.fromId == '1032384035881537536' || item.fromId == '1008455862495526912'\" :image=\"imgUrl\" />\n                      <MemberIcon v-else :image=\"imgUrl\" auth-status=\"3\" :userRank=\"userInfo.userRank\" :vipType=\"userInfo.vipType\" />\n                    </span>\n                    <span class=\"mess-words others-msg\">\n                      <p class=\"group-member-name-class\">\n                        {{ userInfo.friend_friendNotes || userInfo.friendNickName }}\n                        <LuckIdIcon\n                          :inviteCode=\"userInfo.invite_code\"\n                          :userRank=\"userInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"userInfo.vipType\"\n                          :inviteCodeType=\"userInfo.inviteCodeType\"\n                          v-if=\"userInfo.inviteCodeType == 1\"\n                        />\n                        <LevelIcon\n                          :inviteCode=\"userInfo.invite_code\"\n                          :userRank=\"userInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"userInfo.vipType\"\n                          :inviteCodeType=\"userInfo.inviteCodeType\"\n                        />\n                      </p>\n                      <div v-if=\"isMessage(item)\" id=\"talkbubble\" :class=\"[getPopperClassName(item, 0),maxWidth(item),imgBubble(item)]\">\n                        <MessageFormatOnline\n                          v-bind:item=\"item\"\n                          :userInfo=\"userInfo\"\n                          :isShowRight=\"false\"\n                          :imglsit=\"imglsit\"\n                          :friend-id=\"userInfo.id\"\n                          @toAppeal=\"toAppeal('single')\"\n                          @handSendImg=\"handSendImg\"\n                          @reHandSendVideo=\"reHandSendVideo\"\n                          @reHandSendFile=\"reHandSendFile\"\n                          :key=\"item.msgId\"\n                        />\n                      </div>\n                      <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                    </span>\n                  </div>\n                  <!-- 自己发送的消息 -->\n                  <div class=\"mess-detail-self flex justify-end\" v-if=\"item.fromId == userId && isMessage(item)\">\n                    <span class=\"mess-words self-msg\">\n                      <p class=\"group-member-name-class\">\n                        {{ myInfo.nickName }}\n                        <LuckIdIcon\n                          :inviteCode=\"myInfo.inviteCode\"\n                          :userRank=\"myInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"myInfo.vipType\"\n                          :inviteCodeType=\"myInfo.inviteCodeType\"\n                          v-if=\"myInfo.inviteCodeType == 1\"\n                        />\n                        <LevelIcon\n                          :inviteCode=\"myInfo.inviteCode\"\n                          :userRank=\"myInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"myInfo.vipType\"\n                          :inviteCodeType=\"myInfo.inviteCodeType\"\n                        />\n                      </p>\n\n                      <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                        <MessageSendStauts\n                          v-bind:item=\"item\"\n                          :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                          @handSendImg=\"handSendImg\"\n                          @reHandSendVideo=\"reHandSendVideo\"\n                          @reHandSendFile=\"reHandSendFile\"\n                        />\n                        <div id=\"talkbubblee\" :class=\"[getPopperClassName(item, 1),maxWidth(item),imgBubble(item)]\">\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :userInfo=\"userInfo\"\n                            :isShowRight=\"false\"\n                            :imglsit=\"imglsit\"\n                            :friend-id=\"userInfo.id\"\n                            @toAppeal=\"toAppeal('single')\"\n                            :key=\"item.msgId\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                        </div>\n                      </div>\n                      <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                    </span>\n                    <span class=\"mess-head\" style=\"margin:0 -10px 0 10px;\" @click=\"showUserInfo(item.fromId)\">\n                      <MemberIcon :image=\"myInfo.headImg\" auth-status=\"3\" :userRank=\"myInfo.userRank\" :vipType=\"myInfo.vipType\" />\n                    </span>\n                  </div>\n                </div>\n                <Notice v-if=\"item.msgType != '24'\" :item=\"item\" :getFriendName=\"userInfo.userNickName\" />\n              </el-checkbox>\n            </el-checkbox-group>\n            <!--非多选实时-->\n            <div v-if=\"!mutiChooseTag\">\n              <div\n                v-for=\"(item, index) in chatList\"\n                :label=\"item\"\n                :key=\"`${item._id}${index}`\"\n                :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                data-list=\"chatList\"\n              >\n                <div class=\"infotime\" v-if=\"item.msgType != '24' && item.msgType != '13' \n                && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                  {{ item.timestamp | diffTimeHand }}\n                </div>\n                <div\n                  v-if=\"\n                    item.msgType != '4' &&\n                      item.msgType != '7' &&\n                      item.msgType != '44' &&\n                      item.msgType != '24' &&\n                      item.msgType != '13' &&\n                      item.msgType != '26' &&\n                      item.msgType != '14' &&\n                      item.msgType != '31' &&\n                      item.msgType != '8'  &&\n                      item.msgType != '61'\n                  \"\n                >\n                  <!-- 别人发送的消息 -->\n                  <div class=\"mess-detail flex\" v-if=\"item.fromId != userId && isMessage(item)\">\n                    <span class=\"mess-head\" @click=\"showUserInfo(item.fromId)\">\n                      <ServiceIcon v-if=\"item.fromId == '1032384035881537536' || item.fromId == '1008455862495526912'\" :image=\"imgUrl\" />\n                      <MemberIcon v-else :image=\"imgUrl\" auth-status=\"3\" :userRank=\"userInfo.userRank\" :vipType=\"userInfo.vipType\" />\n                    </span>\n                    <span class=\"mess-words others-msg\">\n                      <p class=\"group-member-name-class\">\n                        {{ userInfo.userNickName || userInfo.friendNickName }}\n                        <LuckIdIcon\n                          :inviteCode=\"userInfo.invite_code\"\n                          :userRank=\"userInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"userInfo.vipType\"\n                          :inviteCodeType=\"userInfo.inviteCodeType\"\n                          :listFlag=\"true\"\n                        />\n                        <LevelIcon\n                          :inviteCode=\"userInfo.invite_code\"\n                          :userRank=\"userInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"userInfo.vipType\"\n                          :inviteCodeType=\"userInfo.inviteCodeType\"\n                        />\n                      </p>\n                      <div\n                        v-if=\"isMessage(item)\"\n                        id=\"talkbubble\"\n                        @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                        :class=\"[getPopperClassName(item, 0), maxWidth(item),imgBubble(item)]\"\n                        class=\"voice-accept\"\n                      >\n                        <MessageFormatOnline\n                          v-bind:item=\"item\"\n                          :imglsit=\"imglsit\"\n                          :soundUrlObj=\"soundUrlObj\"\n                          :friend-id=\"userInfo.id\"\n                          :userInfo=\"userInfo\"\n                          @delMsg=\"delMsg\"\n                          @handArm=\"handArm\"\n                          @acceptMessage=\"acceptMessage(item)\"\n                          @mutiChoose=\"mutiChoose\"\n                          @transferQuote=\"transferQuote\"\n                          @scrollBottom=\"scrollBottom\"\n                          @withdrawMessage=\"withdrawMessage(item)\"\n                          @toAppeal=\"toAppeal('single')\"\n                          @handSendImg=\"handSendImg\"\n                          @reHandSendVideo=\"reHandSendVideo\"\n                          @reHandSendFile=\"reHandSendFile\"                         \n                          :key=\"item.msgId\"\n                        />\n                        <i class=\"iconfont icon-dian voice-icon\" v-if=\"item.msgType == '9' && item.msgBody.unreadMessage == true\"></i>\n                      </div>\n\n                      <QuotFormate\n                        v-if=\"item.msgType == 25\"\n                        :item=\"item\"\n                        :emojiList=\"emojiList\"\n                        @lookQuoteCard=\"lookQuoteCard\"\n                      ></QuotFormate>\n                    </span>\n                  </div>\n                  <!-- 自己发送的消息 -->\n                  <div class=\"mess-detail-self flex justify-end\" v-if=\"item.fromId == userId && isMessage(item)\">\n                    <span class=\"mess-words self-msg\">\n                      <p class=\"group-member-name-class\">\n                        {{ myInfo.nickName }}\n                        <LuckIdIcon\n                          v-if=\"myInfo.inviteCodeType == 1\"\n                          :inviteCode=\"myInfo.inviteCode\"\n                          :userRank=\"myInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"myInfo.vipType\"\n                          :inviteCodeType=\"myInfo.inviteCodeType\"\n                          :listFlag=\"true\"\n                        />\n                        <LevelIcon\n                          :inviteCode=\"myInfo.inviteCode\"\n                          :userRank=\"myInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"myInfo.vipType\"\n                          :inviteCodeType=\"myInfo.inviteCodeType\"\n                        />\n                      </p>\n                      <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                        <MessageSendStauts\n                          @handSendImg=\"handSendImg\"\n                          v-bind:item=\"item\"\n                          :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                          @resendMsgs=\"sendQuill(item)\"\n                          @reHandSendVideo=\"reHandSendVideo\"\n                          @reHandSendFile=\"reHandSendFile\"\n                        />\n                        <div id=\"talkbubblee\"\n                             @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                             :class=\"[getPopperClassName(item, 1), maxWidth(item),imgBubble(item)]\"\n                        >\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :imglsit=\"imglsit\"\n                            :soundUrlObj=\"soundUrlObj\"\n                            :friend-id=\"userInfo.id\"\n                            :userInfo=\"userInfo\"\n                            @delMsg=\"delMsg\"\n                            @handArm=\"handArm\"\n                            @mutiChoose=\"mutiChoose\"\n                            @transferQuote=\"transferQuote\"\n                            @withdrawMessage=\"withdrawMessage(item)\"\n                            @scrollBottom=\"scrollBottom\"\n                            @toAppeal=\"toAppeal('single')\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"                           \n                            :key=\"item.msgId\"\n                          />\n                        </div>\n                      </div>\n                      <QuotFormate\n                        v-if=\"item.msgType == 25\"\n                        :item=\"item\"\n                        :emojiList=\"emojiList\"\n                        @lookQuoteCard=\"lookQuoteCard\"\n                      ></QuotFormate>\n                    </span>\n                    <span class=\"mess-head\" style=\"margin:0 -10px 0 10px;\" @click=\"showUserInfo(item.fromId)\">\n                      <MemberIcon :image=\"myInfo.headImg\" auth-status=\"3\" :userRank=\"myInfo.userRank\" :vipType=\"myInfo.vipType\" />\n                    </span>\n                  </div>\n                </div>\n                <Notice @reEditMsg=\"reEditMsg\" v-if=\"item.msgType != '24'\" :item=\"item\" :getFriendName=\"userInfo.userNickName\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 工具栏 -->\n        <div id=\"resize\" @mousedown=\"resizeChange\"></div>\n\n        <div id=\"down\" class=\"mess-footer align-center\">\n          <div class=\"chatother\" id=\"chatother\">\n            <el-popover placement=\"top-start\" width=\"424\" trigger=\"click\" v-model=\"emojiVisible\">\n              <div class=\"emojList\">\n                <span v-for=\"item in emojiList\" :key=\"item.id\">\n                  <img style :title=\"item.tag\" :src=\"`/resources/emoji/${item.file}`\" @click=\"insertImg(item.file, item.tag)\" />\n                </span>\n              </div>\n\n              <span slot=\"reference\" class=\"emojIcon\">\n                <img draggable='false' src=\"../../../../assets/images/send_msg_emoj.png\" />\n              </span>\n            </el-popover>\n            <span class=\"add\" @click=\"handUpload()\">\n              <img draggable='false' src=\"../../../../assets/images/send_msg_folder.png\" />\n              <input type=\"file\" :multiple=\"multiple\" @change=\"changeHand($event)\" ref=\"files\" style=\"display: none\" />\n            </span>\n            <img draggable='false' src=\"../../../../assets/images/send_msg_screenshot.png\" v-on:click=\"captureScreen\" />\n            <el-popover\n              ref=\"screenShot\"\n              trigger=\"click\"\n              placement=\"bottom\"\n              visible-arrow=\"false\"\n              v-model=\"screenShotVisible\"\n              popper-class=\"screen-select-class\"\n            >\n              <div>\n                <el-checkbox v-model=\"screenSelect\" class=\"screenSelectClass\" @change=\"screenSelectChange\">\n                  {{ $t('chat_comm_set_0022') }}\n                </el-checkbox>\n              </div>\n              <i slot=\"reference\" v-popover:screenShot class=\"el-icon-caret-bottom captureScreenClass\"></i>\n            </el-popover>\n            <!-- <div\n              class=\"audioClass\"\n              v-if=\"userInfo.id != '1032384035881537536' && userInfo.id != '1008455862495526912' && userInfo.id != $paymentId\"\n            >\n              <img src=\"../../../../assets/images/media_phone.png\" @click=\"callAudio\" alt />\n              <img src=\"../../../../assets/images/media_video.png\" class=\"video-icon-class\" @click=\"callVideo\" v-if=\"false\" alt />\n            </div> -->\n          </div>\n          <div class=\"mess-square\" @contextmenu.prevent=\"_quillRightClick($event)\">\n            <quill-editor\n              class=\"ql-editor\"\n              v-model=\"texthtml\"\n              ref=\"myQuillEditor\"\n              :options=\"editorOption\"\n              @keydown.ctrl.enter.native=\"editorWrap()\"\n              @keydown.alt.enter.native=\"editorWrap()\"\n              @keydown.meta.enter.native=\"editorWrap()\"\n              @paste.native.prevent=\"pasteMe($event)\"\n              @ready=\"onEditorReady($event)\"\n              @change=\"onEditorChange($event, decimalNum)\"\n            ></quill-editor>\n          </div>\n\n          <div v-show=\"isShowMoreList && !isSomebodyAtYou\" class=\"by-more-list\" @click=\"scrollBottom\">\n            <el-button  v-if=\"newMsgLength > 0\" class=\"by-more-list\" icon=\"el-icon-arrow-down\"> \n              {{ $t('chat_0128', {value: newMsgLength}) }}</el-button>\n            <el-button v-else class=\"by-more-list\" icon=\"el-icon-arrow-down\"></el-button>\n          </div>\n\n          <div class=\"mess-send align-center justify-around\">\n            <!-- <span class=\"send\" @click=\"send('1')\">发送</span> -->\n            <el-tag closable type=\"info\" @close=\"closeQuote()\" effect=\"dark\" v-show=\"quoteVisible\" class=\"quote\"\n              ><span ref=\"quoteMsgs\">{{ quoteMsg }}</span></el-tag\n            >\n            <button class=\"send-btn\" @click=\"sendQuillByThrottle\" :disabled=\"sendBtnDisabled\">\n              {{ $t('Universal_0046') }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--多选操作面板-->\n    <el-drawer\n      title\n      :visible.sync=\"mutiPanel\"\n      :direction=\"'btt'\"\n      :with-header=\"true\"\n      :modal=\"false\"\n      :wrapperClosable=\"false\"\n      :show-close=\"true\"\n      class=\"mutiPanel\"\n      id=\"mutiPanel\"\n      @close=\"closeMutiPnel()\"\n    >\n      <span @click=\"multiRelay(false)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_relay.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0033') }}</p>\n      </span>\n      <span @click=\"multiRelay(true)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_merge.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0034') }}</p>\n      </span>\n      <span @click=\"batchDelMsg()\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_delete.png\" /><br />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0032') }}</p>\n      </span>\n    </el-drawer>\n    <!--个人设置弹框 friendSystemAble-->\n    <el-drawer\n      title=\"我是标题\"\n      :visible.sync=\"friendSystemAble\"\n      :direction=\"'rtl'\"\n      :with-header=\"false\"\n      :modal=\"false\"\n      size=\"230px\"\n      style=\"margin-top: 60px\"\n    >\n     <template v-if=\"friendSystemAble\">\n      <div class=\"friendSystemBox\">\n        <div class=\"top\">\n          <span>{{ $t('Universal_0065') }}</span>\n          <i class=\"el-icon-close\" @click=\"friendSystemAble = false\"></i>\n        </div>\n        <div class=\"content\" style=\"margin-top: 50px\">\n          <div class=\"addDiscussin\">\n            <div class=\"userInfoClass\" @click=\"showInfo()\">\n              <MemberIcon\n                :image=\"imgUrl\"\n                iconType=\"small\"\n                :userRank=\"userInfo.userRank\"\n                :vipType=\"userInfo.vipType\"\n                style=\"margin-bottom: 10px\"\n              />\n              <p>{{ userInfo.userNickName }}</p>\n            </div>\n            <div @click=\"selectDiscussionMembers\" class=\"pointer\">\n              <!-- <img width=\"40\" height=\"40\" src=\"../images/tianjia.png\" alt /> -->\n              <img width=\"40\" height=\"40\" src=\"../../../../assets/images/start_discussion.png\" alt />\n              <p>{{ $t('book_friend_0024') }}</p>\n            </div>\n          </div>\n          <ul>\n            <li>\n              <span>{{ $t('Universal_0362') }}</span>\n              <el-switch\n                v-model=\"friendSystemObj.msgTopValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"friendSystemObj.msgTopClick\"\n                @change=\"stickyChange\"\n              ></el-switch>\n            </li>\n            <li>\n              <span>{{ $t('chat_0057') }}</span>\n              <el-switch\n                v-model=\"friendSystemObj.msgOutlineValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"friendSystemObj.msgOutlineClick\"\n                @change=\"NotifyChange\"\n              ></el-switch>\n            </li>\n            <li @click=\"historyVisible = true\">\n              <span>{{ $t('chat_0059') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n            <li @click=\"messageSaveTime\">\n              <span>{{ $t('chat_0058') }}</span>\n              <span class=\"many-select\">\n                {{ saveTime }}\n                <i class=\"el-icon-arrow-right\"></i>\n              </span>\n            </li>\n            <li @click=\"tipOff()\">\n              <span>{{ $t('report_0001') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n          </ul>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <div slot=\"footer\" class=\"drawer-footer outGroup\">\n          <span></span>\n        </div>\n      </div>\n     </template>\n    </el-drawer>\n    <!--清除聊天记录-->\n    <el-dialog :title=\"$t('chat_0059')\" :visible.sync=\"historyVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <template v-if=\"historyVisible\">\n      <span>{{ $t('chat_0060') }}</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"historyVisible = false\">{{ $t('Universal_0063') }}</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"clearMessageHistory\">{{ $t('Universal_0062') }}</el-button>\n      </span>\n      </template>\n    </el-dialog>\n    <!--消息保存时长-->\n    <el-dialog :title=\"$t('chat_0058')\" :visible.sync=\"saveTimeVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <template v-if=\"saveTimeVisible\" >\n      <ul class=\"selectItem\">\n        <li\n          v-for=\"(item, index) in saveTimeArr\"\n          :key=\"index\"\n          :class=\"saveTimeActive == index ? 'active' : ''\"\n          @click=\"saveTimeSelected(item, index)\"\n        >\n          {{ item.label }}\n          <i class=\"el-icon-check\"></i>\n        </li>\n      </ul>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelsaveExpireTime()\">{{ $t('Universal_0063') }}</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveExpireTime(saveTimeActive)\">{{ $t('Universal_0062') }}</el-button>\n      </span>\n      </template>\n    </el-dialog>\n\n    <!-- 好友申请 -->\n    <DialogAddFriendVisible\n      ref=\"myordernum\"\n      :dialogAddFriendsVisible=\"dialogAddFriendsVisible\"\n      @handCancelFriDialog=\"handCancelFriDialog\"\n      @handConfirmFriDialog=\"handConfirmFriDialog\"\n      :friendData=\"userInfo\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"Comtit\"\n      from=\"single\"\n      :discussionFriendId=\"userInfo.id\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      :mergeTransfer=\"merge\"\n      :mergeTransferName=\"mergeTransferName\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n    <el-dialog\n      :title=\"$t('chat_select_chat_0007')\"\n      :visible.sync=\"sendFile\"\n      width=\"320px\"\n      class=\"popupmsg\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"cancelSendFile\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"sendFile\">\n        <img style=\"width: 38px; height: 38px; border-radius: 50%\" :src=\"userInfo.friend_head_img\" />\n        <span>{{ this.userInfo.userNickName }}</span>\n      </div>\n      <el-input type=\"textarea\" class=\"sendFileInput\" :rows=\"3\" resize=\"none\" :disabled=\"true\" v-model=\"fileName\" size=\"small\"></el-input>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"(sendFile = false), cancelSendFile()\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"(sendFile = false), sendFileConfirm($event)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { findIndex} from \"lodash\";\nimport emojiList from \"@/utils/emoji.js\";\nimport Title from \"../components/title.vue\";\nimport MemberCardOther from \"@/components/memberCard/MemberCardOther\";\n// import MemberIcon from \"@/components/memberIcon/MemberIcon\";\n// import LevelIcon from \"@/components/memberIcon/LevelIcon\";\n// import LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nimport ServiceIcon from \"@/components/memberIcon/ServiceIcon\";\nimport Notice from \"./notice\";\n// import DialogAddFriendVisible from \"@/view/add-friends-group/dialog/add-friends\";\n// import GroupAndInviteChat from \"@/components/chat/GroupAndInviteChat\";\n// import AppealsDialog from \"@/view/chat/appeals\";\n// import ImpeachDialog from \"@/view/chat/impeach\";\n// import { ipcRenderer } from \"electron\";\nimport {\n  contFriSize,\n} from \"@/utils\";\n// import MessageSendStauts from \"@/view/chat/components/common/MessageSendStatus\";\nimport { parseUniqueCode } from \"@/utils/const\";\nimport { mapMutations, mapActions } from \"vuex\";\nimport SQLUtils from \"@/components/db/sqlite.js\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport fileOperational from \"@/services/fileOperational\";\nimport GroupCard from \"../../group/components/GroupCard\";\nimport { usersession_update, createGroup } from \"./server\";\nimport { queryGroupByGroupId } from '../../server';\nimport { sqliteQueryBySQL } from '@/services/sqliteDao';\nimport { v4 as uuidv4 } from \"uuid\";\n// import QuotFormate from \"@/view/chat/components/common/QuotFormate\";\n// import MessageFormatOnline from \"@/view/chat/components/common/MessageFormatOnline\";\nimport { setTimeout } from \"timers\";\nimport Message from \"@/services/message\";\nimport {\n  SET_CHAT,\n  CLEAR_CHAT,\n  CHAT_REST_SEND,\n  UPDATE_CHAT_RECORD,\n  GET_LAST_MSG_LIST,\n  SET_CHAT_LIST,\n  SEND_READ_MESSAGE,\n  GO_MESSAGE_PAGE,\n} from \"@/store/types\";\nimport { deleteSessionsWithoutDraft } from \"@/services/rightClickByDB\";\nimport {convertToPinyin} from \"@/utils/pinyin\";\n\nimport mixins from '../../mixin/mixin';\nimport  { imgView } from '@/utils/util.js'\n\nexport default {\n  name: 'Single',\n  mixins: [mixins],\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title,\n    Notice,\n    MemberCardOther,\n    GroupCard,\n    ServiceIcon,\n  },\n  // directives: {\n  //   clickDown: {\n  //     inserted(el) {\n  //       el.onmousedown = function() {\n  //         this.resizeChange();\n  //       };\n  //     }\n  //   }\n  // },\n  data() {\n    //这里存放数据\n    return {\n      fromGroupType:'single',\n      friendSystemObj: {\n        msgTopValue: '0',\n        msgTopClick: false,\n        msgOutlineValue: '0',\n        msgOutlineClick: false\n      },\n      friendSystemAble: false,\n      userSettingData: {},\n      saveTimeActive: '6',\n      texthtml: '',\n      emojiList: [],\n      userId: localStorage.userId,\n      text: '',\n      mesType: '1',\n      limit: 9,\n      topMsgOrder: 0, //记录当前位置\n      multiple: true,\n      uploadLoading: false,\n      msgBody: {},\n      publickKey: '',\n      publickKeyVersion: '',\n      friendName: decodeURIComponent(this.$route.query.friendName),\n      id: this.$route.query.id, //好友id\n      viewers: '',\n      dialogRelayVisible: false,\n      editorOption: {\n        placeholder: this.$t('chat_0002'),\n        // placeholder: this.encrypted || this.$t('chat_0002'),\n        // placeholder: '该消息已加密',\n        theme: 'bubble', // or 'bubble'\n        formats: ['image', 'alt', 'height', 'width'],\n        modules: {\n          toolbar:[],\n          clipboard: {\n            matchers: [\n            ]\n          }\n        }\n      },\n      emojiVisible:false,\n      initFlag: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    notDiDiService() {\n      return item => {\n        return (\n          item.id != '1008455862495526912' && item.id != '1032384035881537536' && item.id != this.$paymentId\n        );\n      };\n    },\n    winActive(){\n      return this.$store.state.common.winActive;\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    // $route: \"changeRoute\",\n    async $route() {\n      await this.init();\n      this.stopVideo();\n      this.getDraft();\n    },\n    async chatList(val) {\n      if (localStorage.getItem('specailChat') == 'true') {\n        localStorage.setItem('specailChat', false);\n      } else {\n        // this.scrollBottom();\n      }      \n      if (val && val.length > 0) {\n        let msgType = val[val.length - 1].msgType;\n        if (msgType == 14) {\n          console.log('ssssssRRRRR', msgType);\n        }\n        if (msgType == '13') {\n          this.getPublickey();\n        }\n        if (val[val.length - 1].fromIcon == undefined) {\n          val[val.length - 1].fromIcon = this.userInfo.imgUrl;\n        }\n      }\n      if(this.friendSystemAble){\n        await this.getImg();\n        this.getUserSessionList();\n      }\n    },\n    '$i18n.locale': {\n      deep: 'true',\n      immediate: true,\n      handler: function (v) {\n        console.log('$i18n.locale-- ',v)\n        /*this.$set(this.editorOption, 'placeholder',this.$t('chat_0002'))\n        this.$forceUpdate();\n        console.log('this.editorOption.placeholder-- ', this.editorOption.placeholder)*/\n      }\n    },\n    winActive(current, prev){\n      console.log(current, prev)\n      if(current){\n        this.getlist(true);\n      }\n    }\n  },\n  filters: {\n    // formatFileSize(size) {\n    //   let value = Number(size);\n    //   if (size && !isNaN(value)) {\n    //     const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB', 'BB'];\n    //     let index = 0;\n    //     let k = value;\n    //     if (value >= 1024) {\n    //       while (k > 1024) {\n    //         k = k / 1024;\n    //         index++;\n    //       }\n    //     }\n    //     return `${k.toFixed(2)}${units[index]}`;\n    //   }\n    //   return '';\n    // },\n    // diffTimeHand(val) {\n    //   return diffTimeInChat(val);\n    // }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    // await this.getDraft()\n    this.initFlag = true;\n    this.item = this.$route.query.item;\n  },\n\n  //方法集合\n  methods: {\n\n    ...mapActions([CHAT_REST_SEND, GET_LAST_MSG_LIST]),\n    ...mapMutations([\n      SET_CHAT,\n      CLEAR_CHAT,\n      UPDATE_CHAT_RECORD,\n      GO_MESSAGE_PAGE,\n    ]),\n    // 打开图片查看器\n    openImgView () {\n      console.log('图片查看器=userInfo=', this.userInfo)\n      imgView(this.userInfo.imgUrl, this.userInfo.id)\n    },\n    async queryGroupInfo(groupId) {\n      //查询群名片信息\n      let param = { groupId: groupId };\n      let res = await queryGroupByGroupId(param);\n      this.groupInfo = {};\n      if (res.code == '200' && res.data) {\n        this.groupInfo = res.data;\n        if (this.groupInfo && this.groupInfo.country && this.groupInfo.city) {\n          this.groupInfo.countryName = await SQLUtils.getTAreaCountryOrCityName(this.groupInfo.country);\n          this.groupInfo.cityName = await SQLUtils.getTAreaCountryOrCityName(this.groupInfo.city);\n          this.groupInfo.region = this.groupInfo.countryName + '-' + this.groupInfo.cityName;\n        } else {\n          this.groupInfo.region = '';\n          this.groupInfo.country = '';\n          this.groupInfo.city = '';\n        }\n      }\n    },\n    // 是否做为MESSAGE显示，包括是否显示的消息\n    isMessage(item) {\n      return (\n        item.msgType != '61' &&  // 矿\n        item.msgType != '4' && //\t通知\n        item.msgType != '13' && //红包\n        item.msgType != '26' && //撤销消息（消息状态）\n        item.msgType != '24' && //\t撤销执行消息（发送）\n        item.msgType != '7' && //密钥变更\n        this.isShowMessage(item)\n      ); //不显示的Message 必定不作为正文显示\n    },\n    //消息是否显示\n    isShowMessage() {\n      return true;\n    },\n\n    async confirmBatchDelMsgs(list) {\n      let message = '';\n      if (list[0].fromId == localStorage.userId) {\n        //是自己发送的消息\n        message = new Message(list[0].targetId);\n      } else {\n        message = new Message(list[0].fromId);\n      }\n      localStorage.setItem('specailChat', true);\n      let j = this.chatList.length;\n      if (j == 1) {\n        //当即时消息只有一条时，清空此时这个回话最新一条消息\n        await message.deleteMessageByMsgId(list[0].msgId); //从表里删除\n        this.$store.commit('DEL_LAST_MSG_LIST', list[0]);\n      } else {\n        //删除多条\n        let msgIds = '';\n        list.map(item => {\n          msgIds = msgIds.concat(item.msgId).concat(',');\n        });\n        msgIds = msgIds.substr(0, msgIds.length - 1);\n        await message.deleteMessageByMsgIds(msgIds);\n        await this.init();\n        this.$store.dispatch('GET_LAST_MSG_LIST');\n      }\n      this.chatList = this.chatList.map(obj => {\n        list.forEach(item => {\n          if (obj.msgType == '25' && obj.quotemsgObj && item.msgId == obj.quotemsgObj.msgId) {\n            obj.quotemsgObj = null;\n          }\n        });\n        return obj;\n      });\n    },\n\n    async delMsg(a, item) {\n      //删除一条消息\n      let message = '';\n      if (item.fromId == localStorage.userId) {\n        //是自己发送的消息\n        message = new Message(item.targetId);\n      } else {\n        message = new Message(item.fromId);\n      }\n      await message.deleteMessageByReqId(item.reqId); //从表里删除\n      let j = this.chatList.length;\n      if (j == 1) {\n        //当即时消息只有一条时，清空此时这个回话最新一条消息\n        item.delFlag = true;\n        this.$store.commit('DEL_LAST_MSG_LIST', item);\n        console.log(this.$store.state.chat.lastMsgList);\n      } else if (this.chatList[j - 1].reqId == item.reqId) {\n        //删的是即时消息中最后一条\n        this.$store.dispatch('ADD_LAST_MSG_LIST', {\n          ...this.chatList[j - 2],\n          id: this.$route.query.id,\n          updateSource: 'SOURCE_DEL_MSG'\n        });\n      }\n      await this.$nextTick();\n      this.$store.dispatch('GET_LAST_MSG_LIST')\n      this.chatList = this.chatList.filter(obj => {\n        localStorage.setItem('specailChat', true); //为了删除消息是不让滚动条滚到底部。停留在当前删除的位置\n        return item.reqId != obj.reqId;\n      });\n      this.chatList = this.chatList.map(obj => {\n        if (obj.msgType == '25' && obj.quotemsgObj && item.msgId == obj.quotemsgObj.msgId) {\n          obj.quotemsgObj = null;\n        }\n        return obj;\n      });\n    },\n\n    async lookcard(item) {\n      let msgBody;\n      if (item.msgBody instanceof Object) {\n        msgBody = item.msgBody;\n      } else {\n        msgBody = JSON.parse(item.msgBody);\n      }\n      if (msgBody.type == 1) {\n        //个人名片\n        if (msgBody.id != '1032384035881537536' && msgBody.id != '1008455862495526912') {\n          this.cardDialogVisible = true;\n          this.cardUserId = msgBody.id;\n          this.$nextTick(() => {\n            this.$refs.cardOther.onCardShow();\n          });\n        }\n      } else {\n        await this.queryGroupInfo(msgBody.id);\n        if (this.groupInfo && this.groupInfo.id) {\n          this.$refs.groupCard.onPop();\n        } else {\n          const msg = this.$t('chat_0076');\n          this.openMessage(msg);\n        }\n      }\n    },\n\n    async lookQuoteCard(quotemsgObj) {\n      let msgBody;\n      if (quotemsgObj.msg_body instanceof Object) {\n        msgBody = quotemsgObj.msg_body;\n      } else {\n        msgBody = JSON.parse(quotemsgObj.msg_body);\n      }\n      if (msgBody.type == 1) {\n        //个人名片\n        if (msgBody.id != '1032384035881537536' && msgBody.id != '1008455862495526912') {\n          this.cardDialogVisible = true;\n          this.cardUserId = msgBody.id;\n          this.$nextTick(() => {\n            this.$refs.cardOther.onCardShow();\n          });\n        }\n      } else {\n        //群名片\n        await this.queryGroupInfo(msgBody.id);\n        if (this.groupInfo && this.groupInfo.id) {\n          this.$refs.groupCard.onPop();\n        } else {\n          const msg = this.$t('chat_0076');\n          this.openMessage(msg);\n        }\n      }\n    },\n\n    showInfo() {\n      if (this.userInfo.id != '1032384035881537536' && this.userInfo.id != '1008455862495526912') {\n        this.cardDialogVisible = true;\n        this.cardUserId = this.userInfo.id;\n        this.$nextTick(() => {\n          this.$refs.cardOther.onCardShow();\n        });\n      }\n    },\n\n    showUserInfo(id) {\n      if (id != '1032384035881537536' && id != '1008455862495526912') {\n        this.cardDialogVisible = true;\n        this.cardUserId = id;\n        this.$nextTick(() => {\n          this.$refs.cardOther.onCardShow();\n        });\n      }\n    },\n\n    // 讨论组 选择联系人\n    selectDiscussionMembers() {\n      if(this.personalAppealInfo.endTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('book_group_0019'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.toAppeal('single');\n        }).catch(() => {\n        });\n        return;\n      }\n      this.Comtit = this.$t('chat_select_chat_0002');\n      this.GroupInviteVisible = true;\n    },\n\n    confirmDialogHand(list) {\n      if (this.Comtit == this.$t('Universal_0202')) {\n        // 转发\n        this.GroupInviteVisible = false;\n        this.mutiChooseTag = false; //隐藏多选按钮\n        this.mutiPanel = false;\n      } else if (this.Comtit == this.$t('chat_select_chat_0002')) {\n        // 发起讨论组\n        let nameArrayString = `${this.$store.state.common.userInfo.nickName}、${this.userInfo.friendNickName}`;\n        let userIdArrayString = `${localStorage.getItem('userId')},${this.userInfo.id}`;\n        list.forEach(item => {\n          nameArrayString = `${nameArrayString}、${item.friendNickName}`;\n          userIdArrayString = `${userIdArrayString},${item.friendId}`;\n        });\n        let params = {};\n        params.groupName = nameArrayString.substring(0, 30);\n        params.groupUserId = userIdArrayString;\n        params.groupStatus = 2;\n        params.groupType = 0;\n        createGroup(params).then(async res => {\n          if (res.code == 200) {\n            this.$message.success(this.$t('Universal_0109'));\n            let data = res.data;\n            const groupInfo = data.groupBase[0];\n            const groupMemberList = data.groupMember;\n            const memberAuthList = data.memberAuth;\n            this.createGroupInfo(groupInfo);\n            this.createGroupMember(groupMemberList);\n            this.createGroupAuth(memberAuthList);\n            this.createGroupAppealInfo(groupInfo),\n            this.createGroupExceedInfo(groupInfo),\n            this.createGroupToUpdateVersion([\n              {\n                name: 'gtmcn',\n                version: data.gtmcn\n              },\n              {\n                name: 'gtmn',\n                version: data.gtmn\n              },\n              {\n                name: 'gtn',\n                version: data.gtn\n              }\n            ]);\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        });\n        this.GroupInviteVisible = false;\n        this.mutiChooseTag = false;\n        this.mutiPanel = false;\n      }\n    },\n\n    async createGroupInfo(item) {\n      const obj = {\n        group_id: item.id,\n        group_name: item.groupName,\n        group_status: item.groupStatus,\n        group_profile: item.groupProfile,\n        group_avatar: item.groupAvatar,\n        group_avatar_local: '',\n        add_check: item.addCheck,\n        invite_auth: item.inviteAuth,\n        country: item.country,\n        city: item.city,\n        screenshotsReminderStatus: item.screenshotsReminderStatus,\n        forbiddenWordsStatus: item.forbiddenWordsStatus,\n        memberSingleChatStatus: item.memberSingleChatStatus,\n        sendPicturesStatus: item.sendPicturesStatus,\n        sendConnectionStatus: item.sendConnectionStatus,\n        copyMessagesStauts: item.copyMessagesStauts,\n        sendRedpacketStatus: item.sendRedpacketStatus,\n        create_time: item.createdOn,\n        save_time: item.saveTime,\n        people: item.people,\n        member_level_status: item.memberLevelStatus,\n        group_level: item.groupLevel,\n        updatedOn: item.updatedOn,\n        code: '',\n        group_name_pinyin: convertToPinyin(item.groupName),\n        is_show: 'true',\n        group_code: item.groupCode,\n        group_type: item.groupType,\n        groupTab: item.groupTab\n      };\n      this._groupInfo = obj;\n      return await window.vm.$knex('t_groups').insert(obj);\n    },\n\n    async createGroupMember(memberList) {\n      const list = [];\n      for (let item of memberList) {\n        list.push({\n          id: item.userId,\n          group_id: item.groupId,\n          auth_status: item.authStatus,\n          nick_name: item.nickName,\n          user_head_img: item.userHeadImg,\n          user_head_img_local: '',\n          member_notes: item.memberNotes,\n          member_notes_pinyin: item.memberNotes == undefined ? '' : convertToPinyin(item.memberNotes),\n          is_show: 'true',\n          forbiddenWordsStatus: 0,\n          muteNotifications: 0,\n          additionalStatus: 0,\n          mutedStatus: 0,\n          stickyStatus: 0,\n          vipType: item.vipType,\n          inviteCodeType: item.inviteCodeType,\n          userRank: item.userRank,\n          inviteCode: item.inviteCode\n        });\n      }\n      const cc = await window.vm.$knex.batchInsert('t_groups_member', list, 10);\n      return cc;\n    },\n\n    async createGroupAuth(memberAuthList) {\n      console.log('createGroupAuth');\n      const list = [];\n      for (let item of memberAuthList) {\n        list.push({\n          group_id: item.groupId,\n          user_id: item.userId,\n          member_leval: item.memberLeval,\n          muted_status: item.mutedStatus,\n          additional_status: item.additionalStatus,\n          mute_notifications: item.muteNotifications,\n          forbidden_words_status: item.forbiddenWordsStatus,\n          sticky_status: item.stickyStatus,\n          user_level: item.userLevel\n        });\n      }\n      console.log('list', list);\n      const cc = await window.vm.$knex.batchInsert('t_groups_member_auth', list, 10);\n      console.log(cc);\n      return cc;\n    },\n    async createGroupAppealInfo(item) {\n      const obj = {\n        group_id: item.id,\n        closure_create_time: '',\n        closure_end_time: '',\n        closure_impeach_reason: '',\n        closure_limit_day: 0,\n        closure_limit_type:0,\n        show_appeal_closure_notice: 0,\n        warn_create_time: '',\n        warn_end_time: '',\n        warn_impeach_reason: '',\n        warn_limit_day: 0,\n        warn_limit_type:0,\n        show_appeal_warn_notice: 0\n      }\n      return await window.vm.$knex('t_groups_appeal').insert(obj);\n    },\n    async createGroupExceedInfo(item) {\n      const obj = {\n        group_id: item.id,\n        exceed_num: 0,\n        show_exceed_notice: 0,\n      }\n      return await window.vm.$knex('t_groups_exceed').insert(obj);\n    },\n    async createGroupToUpdateVersion(versionlist) {\n      const q = [];\n      for (let item of versionlist) {\n        q.push(\n          window.vm\n            .$knex('t_news_version')\n            .where({ name: item.name })\n            .update({ version: item.version })\n        );\n      }\n      const cc = await Promise.all(q);\n      return cc;\n    },\n\n    async getImg() {\n      let id = this.$route.query?.fromId||this.$route.query.id; //friend id\n      if(!id){\n        console.warn('$route.query',id);\n        return\n      }\n      let uinfo = await window.vm\n        .$knex('t_contacts')\n        .select()\n        .where('friend_id', id);\n      if (uinfo.length > 0) {\n        let d = uinfo[0];\n        this.imgUrl = d.friend_head_img;\n        this.nick_name = d.friend_friendNotes || d.friend_nick_name;\n        d.imgUrl = d.friend_head_img;\n        d.userNickName = d.friend_friendNotes || d.friend_nick_name;\n        d.id = d.friend_id;\n        d.friendNickName = d.friend_nick_name;\n        this.userInfo = d;\n        console.log('this.userInfo ======== ', this.userInfo);\n      } else {\n        //TODO 从服务器更新\n        console.error('无法获取好友信息', id);\n      }\n    },\n\n    goSetting(val) {\n      console.log(val);\n      this.friendSystemAble = true;\n      this.initSetting(); //初始化设置\n    },\n\n    async sendQuill() {\n      this.sendBtnDisabled = false;\n      const textList = [];\n      let j = 0;\n      if (!this.quill.editor.delta.ops.length) {\n        return;\n      }\n      for (let _delta of this.quill.editor.delta.ops) {\n        if (typeof _delta.insert != 'string') {\n          if (_delta.insert.image && !_delta.attributes) {\n            let reqId = uuidv4();\n            const blob = this.dataURItoBlob(_delta.insert.image);\n            const filePath = await fileOperational.saveImageToFile(_delta.insert.image, reqId + '.png');\n            _delta.insert.path = filePath;\n            _delta.insert.size = blob.size;\n            _delta.insert.fromId = UserInfoUtils.getCurrentUserId();\n            _delta.insert.friendId = this.userInfo.id;\n            _delta.insert.fileType = '2';\n            this.sendImageLocal(_delta.insert, reqId);\n          }\n        }\n      }\n      const textcontent = this.texthtml; //临时存消息体，防止字数超过时置空了\n      this.texthtml = '';\n      console.log(this.quill.editor.delta.ops, 'this.quill.editor.delta.ops');\n      for (let _delta of this.quill.editor.delta.ops) {\n        if (typeof _delta.insert == 'string') {\n          let text1 = _delta.insert;\n          // text1 = text1.replace(/(^\\s*)|(\\s*$)/g, \"\");\n          if (text1) {\n            textList.push({ text: text1, type: 'text', j: j++ });\n          }\n        } else {\n          if (\n            //表情图\n            _delta.insert.image &&\n            _delta.attributes &&\n            _delta.attributes.alt\n          ) {\n            let ret = emojiList.find(x => x.tag == _delta.attributes.alt);\n            if (ret) {\n              textList.push({\n                text: _delta.attributes.alt,\n                type: 'text',\n                j: j++\n              });\n              // this.text += _delta.attributes.alt;\n            }\n          } else if (this.isUrl(_delta.insert.image)) {\n            textList.push({\n              image: _delta.insert.image,\n              type: 'image',\n              j: j++\n            });\n          } else {\n            this.quoteVisible = false;\n            textList.push({\n              content: _delta.insert,\n              type: 'image',\n              j: j++\n            });\n          }\n        }\n      }\n      const sendList = [];\n      for (let i = 0; i < textList.length; i++) {\n        if (i === 0) {\n          sendList.push(textList[i]);\n        }\n        if (i > 0) {\n          if (textList[i].type === 'text') {\n            if (sendList[sendList.length - 1].type === 'image') {\n              sendList.push(textList[i]);\n            } else {\n              sendList[sendList.length - 1].text = sendList[sendList.length - 1].text += textList[i].text;\n            }\n          } else {\n            sendList.push(textList[i]);\n          }\n        }\n      }\n      let friendId = this.$route.query.id;\n      for (let ele of sendList) {\n        let msgBody = {};\n        let text = '';\n        let sum = 0;\n        if (ele.type === 'text') {\n          text = ele.text;\n          if (text.split('')[text.length - 1] == '\\n') {\n            let arr = text.split('');\n            arr.pop();\n            text = arr.join('');\n            text = text.replace(/^\\s+|\\s+$/g, '');\n          }\n          sum = sum + text.length;\n          if (this.quoteVisible) {\n            msgBody = {\n              quoteFromName: this.quoteFromName,\n              msgs: [{ msgId: this.quoteMsgId, reqId: this.quoteReqId }],\n              text: text\n            };\n          } else {\n            msgBody = {\n              text: text\n            };\n          }\n          this.mesType = '1';\n          if (sum > 1500) {\n            this.$message.error(this.$t('Universal_0238', {value: 1500}));\n            this.texthtml = textcontent;\n            return;\n          } else if (!text.trim()) {\n            continue;\n          } else {\n            this.POST_chat_rest_send(msgBody, text, friendId);\n          }\n        }\n        if (ele.type === 'image') {\n          this.mesType = '2';\n          this.fileReqId = ele.reqId;\n          this.handSendImg(ele.content);\n          // this.POST_chat_rest_send(ele.image, \"\", friendId);\n        }\n      }\n      this.text = '';\n      this.texthtml = '';\n      return;\n    },\n\n    async POST_chat_rest_send(msgBody, textOrigin, friendId) {\n      let pararms = {\n        id: friendId,\n        reqId: msgBody.reqId ? msgBody.reqId : uuidv4(),\n        targetType: '1', // 单聊1 群聊2\n        targetId: friendId,\n        uniqueCode: contFriSize(friendId, this.userId),\n        fromType: '999',\n        fromId: msgBody.fromId ? msgBody.fromId : this.userId,\n        msgType: this.quoteVisible ? '25' : this.mesType, // 1文本\n        msgBody: msgBody,\n        msgHeader: {\n          pubKey: '', //this.publickKey,\n          version: this.publickKeyVersion,\n          msgSeqNo: 1,\n          msgSeqTotal: 1,\n          effectiveTime: -1,\n          sourceSite: null,\n          language: this.$i18n.locale,\n          sign: null,\n          signType: null,\n          Authorization: localStorage.accessToken\n        },\n        refMsgBody: {\n          fromName: JSON.parse(localStorage.userInfo).nickName,\n          fromIcon: JSON.parse(localStorage.userInfo).headImg\n        }\n      };\n      if (msgBody.reqId) {\n        await SQLUtils.insertFileChatContent(pararms);\n      }\n      //\n      const single = {\n        msgBody: {\n          originTypePsw: false,\n          ...msgBody,\n          text: textOrigin\n        }\n      };\n      const option = {\n        ...pararms,\n        refMsgBody: {\n          ...pararms.refMsgBody\n        },\n        single: JSON.stringify(single)\n      };\n      if (textOrigin) {\n        option.textOrigin = textOrigin;\n      }\n\n      await this.CHAT_REST_SEND(option);\n\n      this.quoteVisible = false;\n      this.quoteMsgId = '';\n      setTimeout(() => {\n        this.$nextTick(() => {\n          if (this.$refs.talk) {\n            this.$refs.talk.scrollTop = this.$refs.talk.scrollHeight;\n          }\n        });\n      }, 600);\n    },\n\n    async getPublickey() {\n      let friendId = this.$route.query.id;\n      if (friendId == undefined || friendId == '') {\n        throw this.$t('chat_0094');\n      }\n      return;\n      //如果不需要加密，那么不取公钥\n      // if (!ChatListUtils.needCrypto(this.userId, friendId, 1)) {\n      //   return;\n      // }\n      // //从数据库中取\n      // let pubKeyData = await window.vm\n      //   .$knex(\"t_contacts_pubkey\")\n      //   .select()\n      //   .where(\"user_id\", friendId);\n\n      // if (pubKeyData.length == 0) {\n      //   let res = await get_use_rsa({\n      //     userIds: friendId,\n      //   });\n      //   pubKeyData = res.data;\n      //   if (pubKeyData[0]) {\n      //     this.publickKey = pubKeyData[0].rsaPub;\n      //   } else {\n      //     console.error(\"无法获取好友的公钥\", friendId);\n      //   }\n      // } else {\n      //   this.publickKey = pubKeyData[0].rsa_pub;\n      //   this.publickKeyVersion = pubKeyData[0].rsa_pub_version;\n      // }\n    },\n\n    goMessage() {\n      // this.$router.push(\"/app/chat\");\n      this.$router.push({\n        path: this.$route.path,\n        query: {\n          ...this.$route.query,\n          timer: new Date().getTime()\n        }\n      });\n    },\n\n    async init() {\n      this.noMoreShowFlg = false; //避免同一个path情况下，出现‘没有更多消息’\n      this.friendName = decodeURIComponent(this.$route.query.friendName || '');\n      this.texthtml = '';\n      this.id = this.$route.query.id;\n      this.text = '';\n      this.mutiChooseTag = false;\n      this.mutiPanel = false;\n      await this.getlist();\n      await this.getFriendInfo();\n      let current = {\n        id: this.id,\n        sessionName: this.friendName,\n        sessionIcon: this.imgUrl,\n        targetType: 1, //单聊\n        uniqueCode: contFriSize(this.id, UserInfoUtils.getCurrentUserId())\n      };\n      this.$store.commit('SET_CURRENT_CHAT', current);\n      this.$nextTick(() => {\n        this.chatlistFlag = true;//展示消息框顶部的头像信息，确保在chatlist拿到数据以后显示\n      });\n    },\n\n    async getFriendInfo() {\n      await this.getImg();\n      // this.getPublickey();\n      this.quoteVisible = false;\n      this.item = this.$route.query.item || {};\n      this.amr = '';\n      this.getUserSessionList();\n      this.$forceUpdate();\n    },\n\n    async getUserSessionList() {\n      const msgExpireTimeIndex = findIndex(this.saveTimeArr, ele => {\n        return ele.value == this.userInfo['msgExpireTime'];\n      });\n      this.saveTime = this.saveTimeArr[msgExpireTimeIndex]?.label;\n      this.saveTimeActive = msgExpireTimeIndex;\n    },\n\n    async getlist(isForce) {\n      this.hasMore = false;\n      // console.log(this.$route.query.fromId);\n      const list = await SQLUtils.selectSingleChatList(this.$route.query?.fromId||this.$route.query.id, '');\n      const chats = await this.handlelist(list);\n      const lastChat = chats.length > 1 ? chats[chats.length - 1] : null;\n      if ((this.$route.query.unread && lastChat && \n      lastChat.fromId != UserInfoUtils.getCurrentUserId() && this.winActive) || (isForce && lastChat)) {\n        this.$store.dispatch(SEND_READ_MESSAGE, {\n          ...lastChat,\n          id: parseUniqueCode(lastChat.uniqueCode, lastChat.targetType)\n        });\n      }\n      this.$store.commit(SET_CHAT_LIST, chats);\n      if (chats.length >= 30) {\n        this.hasMore = true;\n      }\n      // this.scrollBottom();\n    },\n\n    //清除历史记录\n    async clearMessageHistory() {\n      await deleteSessionsWithoutDraft(this.userInfo.id);\n      this.$message.success(this.$t('chat_0059'));\n      this.GET_LAST_MSG_LIST();\n      this.historyVisible = false;\n      this.$router.replace('/app/chat'); //删除成功后返回聊天列表页面\n    },\n\n    async saveExpireTime(index) {\n      this.saveTimeVisible = false;\n      const params = {\n        friendId: this.$route.query?.fromId||this.$route.query.id,\n        userId: UserInfoUtils.getCurrentUserId(),\n        msgExpireTime: this.saveTimeArr[index].value\n      };\n      await usersession_update(params);\n      await window.vm\n        .$knex('t_contacts')\n        .where({ friend_id: this.$route.query?.fromId||this.$route.query.id })\n        .update({\n          msgExpireTime: this.saveTimeArr[index].value\n        });\n      this.saveTime = this.saveTimeArr[index].label;\n    },\n    async checkoutReadStatus() {\n      // this.id\n      const hasTable = await window.vm.$knex.schema.hasTable(`m_${this.id}`);\n      if (hasTable) {\n        const last410 = await sqliteQueryBySQL(`SELECT max(msg_order) as maxOrder from m_${this.id} where from_type=410 `);\n        console.log('-=-=-=-=', last410, this.id);\n        if (last410 && last410.length) {\n          await sqliteQueryBySQL(`update m_${this.id} set status=3 where msg_order<${last410[0].maxOrder} and status=2 and from_type=410 `)\n        }\n      }\n      await this.init()\n      this.inited();\n      this.getDraft(); //读取未发出去的消息\n    }\n  },\n\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.checkoutReadStatus();\n    // this.init()\n    // this.inited();\n    // this.getDraft(); //读取未发出去的消息\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {\n    // this.scrollBottom();\n  }, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeRouteUpdate(to, from, next) {\n    this.initDraft(from);\n    this.chatlistFlag=false;\n    next();\n  },\n  beforeRouteLeave(to, from, next) {\n    if (to.path !== \"/app/chat\") {\n      this.initDraft(from);\n      this.chatlistFlag = false;\n    }\n    next();\n  },\n  destroyed() {\n    this.CLEAR_CHAT();\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "\n<template>\n  <div class=\"message\" v-loading=\"uploadLoading\" id=\"messageBox\">\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardUserId\"\n      ref=\"cardOther\"\n      @handleclosecard=\"handleclosecard\"\n    ></member-card-other>\n    <GroupCard :groupInfo=\"groupInfo\" ref=\"groupCard\"></GroupCard>\n    <div class=\"message-box\">\n      <Title @goMessage=\"goMessage\" @goSetting=\"goSetting\">\n        <div\n          style=\"display: flex; align-items: center; cursor: pointer\"\n          @click=\"id == '1008455862495526912' || id == '1032384035881537536' ? null : showInfo()\"\n        >\n          <label class=\"vlogo\" v-if=\"id == '1008455862495526912' || id == '1032384035881537536'\">\n            <img src=\"../../../../assets/images/vlogo.png\" />\n          </label>\n          <span class=\"group-name\" :title=\"userInfo.userNickName\">\n            <i class=\"iconfont icon-user\" v-if=\"id != '1008455862495526912' &&  id != '1032384035881537536'\"></i>\n            {{ userInfo.userNickName }}\n          </span>\n        </div>\n      </Title>\n\n      <div id=\"resizeBox\">\n        <div class=\"maskVisible\" v-show=\"maskVisible\"></div>\n        <div class=\"mess-talk custom-scrollbar\" ref=\"talk\" id=\"talk\" >\n\n          <div class=\"loadmore\" v-if=\"hasMore\" v-loading=\"listLoading\" element-loading-spinner=\"el-icon-loading\" @click=\"loadmorelist()\">\n            {{ $t('Universal_0361') }}\n          </div>\n          <div class=\"loadmore2 nomore\"\n            v-if=\"!hasMore && notDiDiService(userInfo) && chatlistFlag\" element-loading-spinner=\"el-icon-loading\">\n            <div class=\"chatInfo\">\n              <img \n                class=\"avater\" \n                :src=\"findImage(userInfo.imgUrl)\" \n                @click=\"openImgView\" \n                @error=\"replaceImg\" \n                style=\"-webkit-user-drag:none;\" \n              />\n              <p>{{ userInfo.userNickName || userInfo.friendNickName}}</p>\n              <span>{{ $t('chat_0001',{saveTime}) }}</span>\n            </div>\n          </div>\n          <!-- 图片查看 -->\n          <viewer :images=\"imglsit\" class=\"viewer\" ref=\"viewer\" @inited=\"inited\">\n            <img v-for=\"src in imglsit\" :src=\"src.url\" :key=\"src.reqId\" alt style=\"display: none\" />\n          </viewer>\n          <!-- ###### 实时消息 ###### -->\n          <div class=\"mess-talk-self\">\n            <!-- 多选实时消息 -->\n            <el-checkbox-group v-if=\"mutiChooseTag\" v-model=\"checkList2\" class=\"talkcheck\">\n              <el-checkbox\n                v-for=\"(item, index) in chatList\"\n                v-if=\"item.msgType != '14'\"\n                :label=\"item.msgType == 24 ? '' : item\"\n                :key=\"`${item._id}${index}`\"\n                :disabled=\"item.disabled || item.sendStatus == 1 || item.sendStatus == -1\"\n                :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                :class=\"\n                  item.fromType == '408' ||\n                  item.fromType == '409' ||\n                  item.fromType == '201' ||\n                  item.fromType == '215' ||\n                  item.fromType == '212'\n                    ? 'hidden'\n                    : item.msgType != '24' && item.msgType != '13' && getShowTimestamp(item.timestamp,chatList[index-1]) && item.disabled\n                    ? 'disabledWithTime'\n                    : item.msgType != '24' && item.msgType != '13' && getShowTimestamp(item.timestamp,chatList[index-1])\n                    ? 'higher'\n                    : item.disabled\n                    ? 'disabled'\n                    : ''\n                \"\n                :value=\"item.checked\"\n                @change=\"multiSelectValidation(item)\"\n                :checked=\"item.checked\"\n              >\n                <div class=\"infotime\" v-if=\"item.msgType != '24' && item.msgType != '13' \n                && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                  {{ item.timestamp | diffTimeHand }}\n                </div>\n                <div\n                  v-if=\"\n                    item.msgType != '4' &&\n                      item.msgType != '7' &&\n                      item.msgType != '24' &&\n                      item.msgType != '44' &&\n                      item.msgType != '13' &&\n                      item.msgType != '26' &&\n                      item.msgType != '14' &&\n                      item.msgType != '31' &&\n                      item.msgType != '8'  &&\n                      item.msgType != '61'\n                  \"\n                >\n                  <!-- 别人发送的消息 -->\n                  <div class=\"mess-detail flex\" v-if=\"item.fromId != userId\">\n                    <span class=\"mess-head\" v-if=\"item.msgType != '26'\" @click=\"showUserInfo(item.fromId)\">\n                      <ServiceIcon v-if=\"item.fromId == '1032384035881537536' || item.fromId == '1008455862495526912'\" :image=\"imgUrl\" />\n                      <MemberIcon v-else :image=\"imgUrl\" auth-status=\"3\" :userRank=\"userInfo.userRank\" :vipType=\"userInfo.vipType\" />\n                    </span>\n                    <span class=\"mess-words others-msg\">\n                      <p class=\"group-member-name-class\">\n                        {{ userInfo.friend_friendNotes || userInfo.friendNickName }}\n                        <LuckIdIcon\n                          :inviteCode=\"userInfo.invite_code\"\n                          :userRank=\"userInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"userInfo.vipType\"\n                          :inviteCodeType=\"userInfo.inviteCodeType\"\n                          v-if=\"userInfo.inviteCodeType == 1\"\n                        />\n                        <LevelIcon\n                          :inviteCode=\"userInfo.invite_code\"\n                          :userRank=\"userInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"userInfo.vipType\"\n                          :inviteCodeType=\"userInfo.inviteCodeType\"\n                        />\n                      </p>\n                      <div v-if=\"isMessage(item)\" id=\"talkbubble\" :class=\"[getPopperClassName(item, 0),maxWidth(item),imgBubble(item)]\">\n                        <MessageFormatOnline\n                          v-bind:item=\"item\"\n                          :userInfo=\"userInfo\"\n                          :isShowRight=\"false\"\n                          :imglsit=\"imglsit\"\n                          :friend-id=\"userInfo.id\"\n                          @toAppeal=\"toAppeal('single')\"\n                          @handSendImg=\"handSendImg\"\n                          @reHandSendVideo=\"reHandSendVideo\"\n                          @reHandSendFile=\"reHandSendFile\"\n                          :key=\"item.msgId\"\n                        />\n                      </div>\n                      <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                    </span>\n                  </div>\n                  <!-- 自己发送的消息 -->\n                  <div class=\"mess-detail-self flex justify-end\" v-if=\"item.fromId == userId && isMessage(item)\">\n                    <span class=\"mess-words self-msg\">\n                      <p class=\"group-member-name-class\">\n                        {{ myInfo.nickName }}\n                        <LuckIdIcon\n                          :inviteCode=\"myInfo.inviteCode\"\n                          :userRank=\"myInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"myInfo.vipType\"\n                          :inviteCodeType=\"myInfo.inviteCodeType\"\n                          v-if=\"myInfo.inviteCodeType == 1\"\n                        />\n                        <LevelIcon\n                          :inviteCode=\"myInfo.inviteCode\"\n                          :userRank=\"myInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"myInfo.vipType\"\n                          :inviteCodeType=\"myInfo.inviteCodeType\"\n                        />\n                      </p>\n\n                      <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                        <MessageSendStauts\n                          v-bind:item=\"item\"\n                          :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                          @handSendImg=\"handSendImg\"\n                          @reHandSendVideo=\"reHandSendVideo\"\n                          @reHandSendFile=\"reHandSendFile\"\n                        />\n                        <div id=\"talkbubblee\" :class=\"[getPopperClassName(item, 1),maxWidth(item),imgBubble(item)]\">\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :userInfo=\"userInfo\"\n                            :isShowRight=\"false\"\n                            :imglsit=\"imglsit\"\n                            :friend-id=\"userInfo.id\"\n                            @toAppeal=\"toAppeal('single')\"\n                            :key=\"item.msgId\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                        </div>\n                      </div>\n                      <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                    </span>\n                    <span class=\"mess-head\" style=\"margin:0 -10px 0 10px;\" @click=\"showUserInfo(item.fromId)\">\n                      <MemberIcon :image=\"myInfo.headImg\" auth-status=\"3\" :userRank=\"myInfo.userRank\" :vipType=\"myInfo.vipType\" />\n                    </span>\n                  </div>\n                </div>\n                <Notice v-if=\"item.msgType != '24'\" :item=\"item\" :getFriendName=\"userInfo.userNickName\" />\n              </el-checkbox>\n            </el-checkbox-group>\n            <!--非多选实时-->\n            <div v-if=\"!mutiChooseTag\">\n              <div\n                v-for=\"(item, index) in chatList\"\n                :label=\"item\"\n                :key=\"`${item._id}${index}`\"\n                :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                data-list=\"chatList\"\n              >\n                <div class=\"infotime\" v-if=\"item.msgType != '24' && item.msgType != '13' \n                && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                  {{ item.timestamp | diffTimeHand }}\n                </div>\n                <div\n                  v-if=\"\n                    item.msgType != '4' &&\n                      item.msgType != '7' &&\n                      item.msgType != '44' &&\n                      item.msgType != '24' &&\n                      item.msgType != '13' &&\n                      item.msgType != '26' &&\n                      item.msgType != '14' &&\n                      item.msgType != '31' &&\n                      item.msgType != '8'  &&\n                      item.msgType != '61'\n                  \"\n                >\n                  <!-- 别人发送的消息 -->\n                  <div class=\"mess-detail flex\" v-if=\"item.fromId != userId && isMessage(item)\">\n                    <span class=\"mess-head\" @click=\"showUserInfo(item.fromId)\">\n                      <ServiceIcon v-if=\"item.fromId == '1032384035881537536' || item.fromId == '1008455862495526912'\" :image=\"imgUrl\" />\n                      <MemberIcon v-else :image=\"imgUrl\" auth-status=\"3\" :userRank=\"userInfo.userRank\" :vipType=\"userInfo.vipType\" />\n                    </span>\n                    <span class=\"mess-words others-msg\">\n                      <p class=\"group-member-name-class\">\n                        {{ userInfo.userNickName || userInfo.friendNickName }}\n                        <LuckIdIcon\n                          :inviteCode=\"userInfo.invite_code\"\n                          :userRank=\"userInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"userInfo.vipType\"\n                          :inviteCodeType=\"userInfo.inviteCodeType\"\n                          :listFlag=\"true\"\n                        />\n                        <LevelIcon\n                          :inviteCode=\"userInfo.invite_code\"\n                          :userRank=\"userInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"userInfo.vipType\"\n                          :inviteCodeType=\"userInfo.inviteCodeType\"\n                        />\n                      </p>\n                      <div\n                        v-if=\"isMessage(item)\"\n                        id=\"talkbubble\"\n                        @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                        :class=\"[getPopperClassName(item, 0), maxWidth(item),imgBubble(item)]\"\n                        class=\"voice-accept\"\n                      >\n                        <MessageFormatOnline\n                          v-bind:item=\"item\"\n                          :imglsit=\"imglsit\"\n                          :soundUrlObj=\"soundUrlObj\"\n                          :friend-id=\"userInfo.id\"\n                          :userInfo=\"userInfo\"\n                          @delMsg=\"delMsg\"\n                          @handArm=\"handArm\"\n                          @acceptMessage=\"acceptMessage(item)\"\n                          @mutiChoose=\"mutiChoose\"\n                          @transferQuote=\"transferQuote\"\n                          @scrollBottom=\"scrollBottom\"\n                          @withdrawMessage=\"withdrawMessage(item)\"\n                          @toAppeal=\"toAppeal('single')\"\n                          @handSendImg=\"handSendImg\"\n                          @reHandSendVideo=\"reHandSendVideo\"\n                          @reHandSendFile=\"reHandSendFile\"                         \n                          :key=\"item.msgId\"\n                        />\n                        <i class=\"iconfont icon-dian voice-icon\" v-if=\"item.msgType == '9' && item.msgBody.unreadMessage == true\"></i>\n                      </div>\n\n                      <QuotFormate\n                        v-if=\"item.msgType == 25\"\n                        :item=\"item\"\n                        :emojiList=\"emojiList\"\n                        @lookQuoteCard=\"lookQuoteCard\"\n                      ></QuotFormate>\n                    </span>\n                  </div>\n                  <!-- 自己发送的消息 -->\n                  <div class=\"mess-detail-self flex justify-end\" v-if=\"item.fromId == userId && isMessage(item)\">\n                    <span class=\"mess-words self-msg\">\n                      <p class=\"group-member-name-class\">\n                        {{ myInfo.nickName }}\n                        <LuckIdIcon\n                          v-if=\"myInfo.inviteCodeType == 1\"\n                          :inviteCode=\"myInfo.inviteCode\"\n                          :userRank=\"myInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"myInfo.vipType\"\n                          :inviteCodeType=\"myInfo.inviteCodeType\"\n                          :listFlag=\"true\"\n                        />\n                        <LevelIcon\n                          :inviteCode=\"myInfo.inviteCode\"\n                          :userRank=\"myInfo.userRank\"\n                          iconType=\"medium\"\n                          :vipType=\"myInfo.vipType\"\n                          :inviteCodeType=\"myInfo.inviteCodeType\"\n                        />\n                      </p>\n                      <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                        <MessageSendStauts\n                          @handSendImg=\"handSendImg\"\n                          v-bind:item=\"item\"\n                          :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                          @resendMsgs=\"sendQuill(item)\"\n                          @reHandSendVideo=\"reHandSendVideo\"\n                          @reHandSendFile=\"reHandSendFile\"\n                        />\n                        <div id=\"talkbubblee\"\n                             @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                             :class=\"[getPopperClassName(item, 1), maxWidth(item),imgBubble(item)]\"\n                        >\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :imglsit=\"imglsit\"\n                            :soundUrlObj=\"soundUrlObj\"\n                            :friend-id=\"userInfo.id\"\n                            :userInfo=\"userInfo\"\n                            @delMsg=\"delMsg\"\n                            @handArm=\"handArm\"\n                            @mutiChoose=\"mutiChoose\"\n                            @transferQuote=\"transferQuote\"\n                            @withdrawMessage=\"withdrawMessage(item)\"\n                            @scrollBottom=\"scrollBottom\"\n                            @toAppeal=\"toAppeal('single')\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"                           \n                            :key=\"item.msgId\"\n                          />\n                        </div>\n                      </div>\n                      <QuotFormate\n                        v-if=\"item.msgType == 25\"\n                        :item=\"item\"\n                        :emojiList=\"emojiList\"\n                        @lookQuoteCard=\"lookQuoteCard\"\n                      ></QuotFormate>\n                    </span>\n                    <span class=\"mess-head\" style=\"margin:0 -10px 0 10px;\" @click=\"showUserInfo(item.fromId)\">\n                      <MemberIcon :image=\"myInfo.headImg\" auth-status=\"3\" :userRank=\"myInfo.userRank\" :vipType=\"myInfo.vipType\" />\n                    </span>\n                  </div>\n                </div>\n                <Notice @reEditMsg=\"reEditMsg\" v-if=\"item.msgType != '24'\" :item=\"item\" :getFriendName=\"userInfo.userNickName\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 工具栏 -->\n        <div id=\"resize\" @mousedown=\"resizeChange\"></div>\n\n        <div id=\"down\" class=\"mess-footer align-center\">\n          <div class=\"chatother\" id=\"chatother\">\n            <el-popover placement=\"top-start\" width=\"424\" trigger=\"click\" v-model=\"emojiVisible\">\n              <div class=\"emojList\">\n                <span v-for=\"item in emojiList\" :key=\"item.id\">\n                  <img style :title=\"item.tag\" :src=\"`/resources/emoji/${item.file}`\" @click=\"insertImg(item.file, item.tag)\" />\n                </span>\n              </div>\n\n              <span slot=\"reference\" class=\"emojIcon\">\n                <img draggable='false' src=\"../../../../assets/images/send_msg_emoj.png\" />\n              </span>\n            </el-popover>\n            <span class=\"add\" @click=\"handUpload()\">\n              <img draggable='false' src=\"../../../../assets/images/send_msg_folder.png\" />\n              <input type=\"file\" :multiple=\"multiple\" @change=\"changeHand($event)\" ref=\"files\" style=\"display: none\" />\n            </span>\n            <img draggable='false' src=\"../../../../assets/images/send_msg_screenshot.png\" v-on:click=\"captureScreen\" />\n            <el-popover\n              ref=\"screenShot\"\n              trigger=\"click\"\n              placement=\"bottom\"\n              visible-arrow=\"false\"\n              v-model=\"screenShotVisible\"\n              popper-class=\"screen-select-class\"\n            >\n              <div>\n                <el-checkbox v-model=\"screenSelect\" class=\"screenSelectClass\" @change=\"screenSelectChange\">\n                  {{ $t('chat_comm_set_0022') }}\n                </el-checkbox>\n              </div>\n              <i slot=\"reference\" v-popover:screenShot class=\"el-icon-caret-bottom captureScreenClass\"></i>\n            </el-popover>\n            <!-- <div\n              class=\"audioClass\"\n              v-if=\"userInfo.id != '1032384035881537536' && userInfo.id != '1008455862495526912' && userInfo.id != $paymentId\"\n            >\n              <img src=\"../../../../assets/images/media_phone.png\" @click=\"callAudio\" alt />\n              <img src=\"../../../../assets/images/media_video.png\" class=\"video-icon-class\" @click=\"callVideo\" v-if=\"false\" alt />\n            </div> -->\n          </div>\n          <div class=\"mess-square\" @contextmenu.prevent=\"_quillRightClick($event)\">\n            <quill-editor\n              class=\"ql-editor\"\n              v-model=\"texthtml\"\n              ref=\"myQuillEditor\"\n              :options=\"editorOption\"\n              @keydown.ctrl.enter.native=\"editorWrap()\"\n              @keydown.alt.enter.native=\"editorWrap()\"\n              @keydown.meta.enter.native=\"editorWrap()\"\n              @paste.native.prevent=\"pasteMe($event)\"\n              @ready=\"onEditorReady($event)\"\n              @change=\"onEditorChange($event, decimalNum)\"\n            ></quill-editor>\n          </div>\n\n          <div v-show=\"isShowMoreList && !isSomebodyAtYou\" class=\"by-more-list\" @click=\"scrollBottom\">\n            <el-button  v-if=\"newMsgLength > 0\" class=\"by-more-list\" icon=\"el-icon-arrow-down\"> \n              {{ $t('chat_0128', {value: newMsgLength}) }}</el-button>\n            <el-button v-else class=\"by-more-list\" icon=\"el-icon-arrow-down\"></el-button>\n          </div>\n\n          <div class=\"mess-send align-center justify-around\">\n            <!-- <span class=\"send\" @click=\"send('1')\">发送</span> -->\n            <el-tag closable type=\"info\" @close=\"closeQuote()\" effect=\"dark\" v-show=\"quoteVisible\" class=\"quote\"\n              ><span ref=\"quoteMsgs\">{{ quoteMsg }}</span></el-tag\n            >\n            <button class=\"send-btn\" @click=\"sendQuillByThrottle\" :disabled=\"sendBtnDisabled\">\n              {{ $t('Universal_0046') }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--多选操作面板-->\n    <el-drawer\n      title\n      :visible.sync=\"mutiPanel\"\n      :direction=\"'btt'\"\n      :with-header=\"true\"\n      :modal=\"false\"\n      :wrapperClosable=\"false\"\n      :show-close=\"true\"\n      class=\"mutiPanel\"\n      id=\"mutiPanel\"\n      @close=\"closeMutiPnel()\"\n    >\n      <span @click=\"multiRelay(false)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_relay.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0033') }}</p>\n      </span>\n      <span @click=\"multiRelay(true)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_merge.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0034') }}</p>\n      </span>\n      <span @click=\"batchDelMsg()\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_delete.png\" /><br />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0032') }}</p>\n      </span>\n    </el-drawer>\n    <!--个人设置弹框 friendSystemAble-->\n    <el-drawer\n      title=\"我是标题\"\n      :visible.sync=\"friendSystemAble\"\n      :direction=\"'rtl'\"\n      :with-header=\"false\"\n      :modal=\"false\"\n      size=\"230px\"\n      style=\"margin-top: 60px\"\n    >\n     <template v-if=\"friendSystemAble\">\n      <div class=\"friendSystemBox\">\n        <div class=\"top\">\n          <span>{{ $t('Universal_0065') }}</span>\n          <i class=\"el-icon-close\" @click=\"friendSystemAble = false\"></i>\n        </div>\n        <div class=\"content\" style=\"margin-top: 50px\">\n          <div class=\"addDiscussin\">\n            <div class=\"userInfoClass\" @click=\"showInfo()\">\n              <MemberIcon\n                :image=\"imgUrl\"\n                iconType=\"small\"\n                :userRank=\"userInfo.userRank\"\n                :vipType=\"userInfo.vipType\"\n                style=\"margin-bottom: 10px\"\n              />\n              <p>{{ userInfo.userNickName }}</p>\n            </div>\n            <div @click=\"selectDiscussionMembers\" class=\"pointer\">\n              <!-- <img width=\"40\" height=\"40\" src=\"../images/tianjia.png\" alt /> -->\n              <img width=\"40\" height=\"40\" src=\"../../../../assets/images/start_discussion.png\" alt />\n              <p>{{ $t('book_friend_0024') }}</p>\n            </div>\n          </div>\n          <ul>\n            <li>\n              <span>{{ $t('Universal_0362') }}</span>\n              <el-switch\n                v-model=\"friendSystemObj.msgTopValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"friendSystemObj.msgTopClick\"\n                @change=\"stickyChange\"\n              ></el-switch>\n            </li>\n            <li>\n              <span>{{ $t('chat_0057') }}</span>\n              <el-switch\n                v-model=\"friendSystemObj.msgOutlineValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"friendSystemObj.msgOutlineClick\"\n                @change=\"NotifyChange\"\n              ></el-switch>\n            </li>\n            <li @click=\"historyVisible = true\">\n              <span>{{ $t('chat_0059') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n            <li @click=\"messageSaveTime\">\n              <span>{{ $t('chat_0058') }}</span>\n              <span class=\"many-select\">\n                {{ saveTime }}\n                <i class=\"el-icon-arrow-right\"></i>\n              </span>\n            </li>\n            <li @click=\"tipOff()\">\n              <span>{{ $t('report_0001') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n          </ul>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <div slot=\"footer\" class=\"drawer-footer outGroup\">\n          <span></span>\n        </div>\n      </div>\n     </template>\n    </el-drawer>\n    <!--清除聊天记录-->\n    <el-dialog :title=\"$t('chat_0059')\" :visible.sync=\"historyVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <template v-if=\"historyVisible\">\n      <span>{{ $t('chat_0060') }}</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"historyVisible = false\">{{ $t('Universal_0063') }}</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"clearMessageHistory\">{{ $t('Universal_0062') }}</el-button>\n      </span>\n      </template>\n    </el-dialog>\n    <!--消息保存时长-->\n    <el-dialog :title=\"$t('chat_0058')\" :visible.sync=\"saveTimeVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <template v-if=\"saveTimeVisible\" >\n      <ul class=\"selectItem\">\n        <li\n          v-for=\"(item, index) in saveTimeArr\"\n          :key=\"index\"\n          :class=\"saveTimeActive == index ? 'active' : ''\"\n          @click=\"saveTimeSelected(item, index)\"\n        >\n          {{ item.label }}\n          <i class=\"el-icon-check\"></i>\n        </li>\n      </ul>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelsaveExpireTime()\">{{ $t('Universal_0063') }}</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveExpireTime(saveTimeActive)\">{{ $t('Universal_0062') }}</el-button>\n      </span>\n      </template>\n    </el-dialog>\n\n    <!-- 好友申请 -->\n    <DialogAddFriendVisible\n      ref=\"myordernum\"\n      :dialogAddFriendsVisible=\"dialogAddFriendsVisible\"\n      @handCancelFriDialog=\"handCancelFriDialog\"\n      @handConfirmFriDialog=\"handConfirmFriDialog\"\n      :friendData=\"userInfo\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"Comtit\"\n      from=\"single\"\n      :discussionFriendId=\"userInfo.id\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      :mergeTransfer=\"merge\"\n      :mergeTransferName=\"mergeTransferName\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n    <el-dialog\n      :title=\"$t('chat_select_chat_0007')\"\n      :visible.sync=\"sendFile\"\n      width=\"320px\"\n      class=\"popupmsg\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"cancelSendFile\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"sendFile\">\n        <img style=\"width: 38px; height: 38px; border-radius: 50%\" :src=\"userInfo.friend_head_img\" />\n        <span>{{ this.userInfo.userNickName }}</span>\n      </div>\n      <el-input type=\"textarea\" class=\"sendFileInput\" :rows=\"3\" resize=\"none\" :disabled=\"true\" v-model=\"fileName\" size=\"small\"></el-input>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"(sendFile = false), cancelSendFile()\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"(sendFile = false), sendFileConfirm($event)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { findIndex} from \"lodash\";\nimport emojiList from \"@/utils/emoji.js\";\nimport Title from \"../components/title.vue\";\nimport MemberCardOther from \"@/components/memberCard/MemberCardOther\";\n// import MemberIcon from \"@/components/memberIcon/MemberIcon\";\n// import LevelIcon from \"@/components/memberIcon/LevelIcon\";\n// import LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nimport ServiceIcon from \"@/components/memberIcon/ServiceIcon\";\nimport Notice from \"./notice\";\n// import DialogAddFriendVisible from \"@/view/add-friends-group/dialog/add-friends\";\n// import GroupAndInviteChat from \"@/components/chat/GroupAndInviteChat\";\n// import AppealsDialog from \"@/view/chat/appeals\";\n// import ImpeachDialog from \"@/view/chat/impeach\";\n// import { ipcRenderer } from \"electron\";\nimport {\n  contFriSize,\n} from \"@/utils\";\n// import MessageSendStauts from \"@/view/chat/components/common/MessageSendStatus\";\nimport { parseUniqueCode } from \"@/utils/const\";\nimport { mapMutations, mapActions } from \"vuex\";\nimport SQLUtils from \"@/components/db/sqlite.js\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport fileOperational from \"@/services/fileOperational\";\nimport GroupCard from \"../../group/components/GroupCard\";\nimport { usersession_update, createGroup } from \"./server\";\nimport { queryGroupByGroupId } from '../../server';\nimport { sqliteQueryBySQL } from '@/services/sqliteDao';\nimport { v4 as uuidv4 } from \"uuid\";\n// import QuotFormate from \"@/view/chat/components/common/QuotFormate\";\n// import MessageFormatOnline from \"@/view/chat/components/common/MessageFormatOnline\";\nimport { setTimeout } from \"timers\";\nimport Message from \"@/services/message\";\nimport {\n  SET_CHAT,\n  CLEAR_CHAT,\n  CHAT_REST_SEND,\n  UPDATE_CHAT_RECORD,\n  GET_LAST_MSG_LIST,\n  SET_CHAT_LIST,\n  SEND_READ_MESSAGE,\n  GO_MESSAGE_PAGE,\n} from \"@/store/types\";\nimport { deleteSessionsWithoutDraft } from \"@/services/rightClickByDB\";\nimport {convertToPinyin} from \"@/utils/pinyin\";\n\nimport mixins from '../../mixin/mixin';\nimport  { imgView } from '@/utils/util.js'\n\nexport default {\n  name: 'Single',\n  mixins: [mixins],\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title,\n    Notice,\n    MemberCardOther,\n    GroupCard,\n    ServiceIcon,\n  },\n  // directives: {\n  //   clickDown: {\n  //     inserted(el) {\n  //       el.onmousedown = function() {\n  //         this.resizeChange();\n  //       };\n  //     }\n  //   }\n  // },\n  data() {\n    //这里存放数据\n    return {\n      fromGroupType:'single',\n      friendSystemObj: {\n        msgTopValue: '0',\n        msgTopClick: false,\n        msgOutlineValue: '0',\n        msgOutlineClick: false\n      },\n      friendSystemAble: false,\n      userSettingData: {},\n      saveTimeActive: '6',\n      texthtml: '',\n      emojiList: [],\n      userId: localStorage.userId,\n      text: '',\n      mesType: '1',\n      limit: 9,\n      topMsgOrder: 0, //记录当前位置\n      multiple: true,\n      uploadLoading: false,\n      msgBody: {},\n      publickKey: '',\n      publickKeyVersion: '',\n      friendName: decodeURIComponent(this.$route.query.friendName),\n      id: this.$route.query.id, //好友id\n      viewers: '',\n      dialogRelayVisible: false,\n      editorOption: {\n        placeholder: this.$t('chat_0002'),\n        // placeholder: this.encrypted || this.$t('chat_0002'),\n        // placeholder: '该消息已加密',\n        theme: 'bubble', // or 'bubble'\n        formats: ['image', 'alt', 'height', 'width'],\n        modules: {\n          toolbar:[],\n          clipboard: {\n            matchers: [\n            ]\n          }\n        }\n      },\n      emojiVisible:false,\n      initFlag: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    notDiDiService() {\n      return item => {\n        return (\n          item.id != '1008455862495526912' && item.id != '1032384035881537536' && item.id != this.$paymentId\n        );\n      };\n    },\n    winActive(){\n      return this.$store.state.common.winActive;\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    // $route: \"changeRoute\",\n    async $route() {\n      await this.init();\n      this.stopVideo();\n      this.getDraft();\n    },\n    async chatList(val) {\n      if (localStorage.getItem('specailChat') == 'true') {\n        localStorage.setItem('specailChat', false);\n      } else {\n        // this.scrollBottom();\n      }      \n      if (val && val.length > 0) {\n        let msgType = val[val.length - 1].msgType;\n        if (msgType == 14) {\n          console.log('ssssssRRRRR', msgType);\n        }\n        if (msgType == '13') {\n          this.getPublickey();\n        }\n        if (val[val.length - 1].fromIcon == undefined) {\n          val[val.length - 1].fromIcon = this.userInfo.imgUrl;\n        }\n      }\n      if(this.friendSystemAble){\n        await this.getImg();\n        this.getUserSessionList();\n      }\n    },\n    '$i18n.locale': {\n      deep: 'true',\n      immediate: true,\n      handler: function (v) {\n        console.log('$i18n.locale-- ',v)\n        /*this.$set(this.editorOption, 'placeholder',this.$t('chat_0002'))\n        this.$forceUpdate();\n        console.log('this.editorOption.placeholder-- ', this.editorOption.placeholder)*/\n      }\n    },\n    winActive(current, prev){\n      console.log(current, prev)\n      if(current){\n        this.getlist(true);\n      }\n    }\n  },\n  filters: {\n    // formatFileSize(size) {\n    //   let value = Number(size);\n    //   if (size && !isNaN(value)) {\n    //     const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB', 'BB'];\n    //     let index = 0;\n    //     let k = value;\n    //     if (value >= 1024) {\n    //       while (k > 1024) {\n    //         k = k / 1024;\n    //         index++;\n    //       }\n    //     }\n    //     return `${k.toFixed(2)}${units[index]}`;\n    //   }\n    //   return '';\n    // },\n    // diffTimeHand(val) {\n    //   return diffTimeInChat(val);\n    // }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    // await this.getDraft()\n    this.initFlag = true;\n    this.item = this.$route.query.item;\n  },\n\n  //方法集合\n  methods: {\n\n    ...mapActions([CHAT_REST_SEND, GET_LAST_MSG_LIST]),\n    ...mapMutations([\n      SET_CHAT,\n      CLEAR_CHAT,\n      UPDATE_CHAT_RECORD,\n      GO_MESSAGE_PAGE,\n    ]),\n    // 打开图片查看器\n    openImgView () {\n      console.log('图片查看器=userInfo=', this.userInfo)\n      imgView(this.userInfo.imgUrl, this.userInfo.id)\n    },\n    async queryGroupInfo(groupId) {\n      //查询群名片信息\n      let param = { groupId: groupId };\n      let res = await queryGroupByGroupId(param);\n      this.groupInfo = {};\n      if (res.code == '200' && res.data) {\n        this.groupInfo = res.data;\n        if (this.groupInfo && this.groupInfo.country && this.groupInfo.city) {\n          this.groupInfo.countryName = await SQLUtils.getTAreaCountryOrCityName(this.groupInfo.country);\n          this.groupInfo.cityName = await SQLUtils.getTAreaCountryOrCityName(this.groupInfo.city);\n          this.groupInfo.region = this.groupInfo.countryName + '-' + this.groupInfo.cityName;\n        } else {\n          this.groupInfo.region = '';\n          this.groupInfo.country = '';\n          this.groupInfo.city = '';\n        }\n      }\n    },\n    // 是否做为MESSAGE显示，包括是否显示的消息\n    isMessage(item) {\n      return (\n        item.msgType != '61' &&  // 矿\n        item.msgType != '4' && //\t通知\n        item.msgType != '13' && //红包\n        item.msgType != '26' && //撤销消息（消息状态）\n        item.msgType != '24' && //\t撤销执行消息（发送）\n        item.msgType != '7' && //密钥变更\n        this.isShowMessage(item)\n      ); //不显示的Message 必定不作为正文显示\n    },\n    //消息是否显示\n    isShowMessage() {\n      return true;\n    },\n\n    async confirmBatchDelMsgs(list) {\n      let message = '';\n      if (list[0].fromId == localStorage.userId) {\n        //是自己发送的消息\n        message = new Message(list[0].targetId);\n      } else {\n        message = new Message(list[0].fromId);\n      }\n      localStorage.setItem('specailChat', true);\n      let j = this.chatList.length;\n      if (j == 1) {\n        //当即时消息只有一条时，清空此时这个回话最新一条消息\n        await message.deleteMessageByMsgId(list[0].msgId); //从表里删除\n        this.$store.commit('DEL_LAST_MSG_LIST', list[0]);\n      } else {\n        //删除多条\n        let msgIds = '';\n        list.map(item => {\n          msgIds = msgIds.concat(item.msgId).concat(',');\n        });\n        msgIds = msgIds.substr(0, msgIds.length - 1);\n        await message.deleteMessageByMsgIds(msgIds);\n        await this.init();\n        this.$store.dispatch('GET_LAST_MSG_LIST');\n      }\n      this.chatList = this.chatList.map(obj => {\n        list.forEach(item => {\n          if (obj.msgType == '25' && obj.quotemsgObj && item.msgId == obj.quotemsgObj.msgId) {\n            obj.quotemsgObj = null;\n          }\n        });\n        return obj;\n      });\n    },\n\n    async delMsg(a, item) {\n      //删除一条消息\n      let message = '';\n      if (item.fromId == localStorage.userId) {\n        //是自己发送的消息\n        message = new Message(item.targetId);\n      } else {\n        message = new Message(item.fromId);\n      }\n      await message.deleteMessageByReqId(item.reqId); //从表里删除\n      let j = this.chatList.length;\n      if (j == 1) {\n        //当即时消息只有一条时，清空此时这个回话最新一条消息\n        item.delFlag = true;\n        this.$store.commit('DEL_LAST_MSG_LIST', item);\n        console.log(this.$store.state.chat.lastMsgList);\n      } else if (this.chatList[j - 1].reqId == item.reqId) {\n        //删的是即时消息中最后一条\n        this.$store.dispatch('ADD_LAST_MSG_LIST', {\n          ...this.chatList[j - 2],\n          id: this.$route.query.id,\n          updateSource: 'SOURCE_DEL_MSG'\n        });\n      }\n      await this.$nextTick();\n      this.$store.dispatch('GET_LAST_MSG_LIST')\n      this.chatList = this.chatList.filter(obj => {\n        localStorage.setItem('specailChat', true); //为了删除消息是不让滚动条滚到底部。停留在当前删除的位置\n        return item.reqId != obj.reqId;\n      });\n      this.chatList = this.chatList.map(obj => {\n        if (obj.msgType == '25' && obj.quotemsgObj && item.msgId == obj.quotemsgObj.msgId) {\n          obj.quotemsgObj = null;\n        }\n        return obj;\n      });\n    },\n\n    async lookcard(item) {\n      let msgBody;\n      if (item.msgBody instanceof Object) {\n        msgBody = item.msgBody;\n      } else {\n        msgBody = JSON.parse(item.msgBody);\n      }\n      if (msgBody.type == 1) {\n        //个人名片\n        if (msgBody.id != '1032384035881537536' && msgBody.id != '1008455862495526912') {\n          this.cardDialogVisible = true;\n          this.cardUserId = msgBody.id;\n          this.$nextTick(() => {\n            this.$refs.cardOther.onCardShow();\n          });\n        }\n      } else {\n        await this.queryGroupInfo(msgBody.id);\n        if (this.groupInfo && this.groupInfo.id) {\n          this.$refs.groupCard.onPop();\n        } else {\n          const msg = this.$t('chat_0076');\n          this.openMessage(msg);\n        }\n      }\n    },\n\n    async lookQuoteCard(quotemsgObj) {\n      let msgBody;\n      if (quotemsgObj.msg_body instanceof Object) {\n        msgBody = quotemsgObj.msg_body;\n      } else {\n        msgBody = JSON.parse(quotemsgObj.msg_body);\n      }\n      if (msgBody.type == 1) {\n        //个人名片\n        if (msgBody.id != '1032384035881537536' && msgBody.id != '1008455862495526912') {\n          this.cardDialogVisible = true;\n          this.cardUserId = msgBody.id;\n          this.$nextTick(() => {\n            this.$refs.cardOther.onCardShow();\n          });\n        }\n      } else {\n        //群名片\n        await this.queryGroupInfo(msgBody.id);\n        if (this.groupInfo && this.groupInfo.id) {\n          this.$refs.groupCard.onPop();\n        } else {\n          const msg = this.$t('chat_0076');\n          this.openMessage(msg);\n        }\n      }\n    },\n\n    showInfo() {\n      if (this.userInfo.id != '1032384035881537536' && this.userInfo.id != '1008455862495526912') {\n        this.cardDialogVisible = true;\n        this.cardUserId = this.userInfo.id;\n        this.$nextTick(() => {\n          this.$refs.cardOther.onCardShow();\n        });\n      }\n    },\n\n    showUserInfo(id) {\n      if (id != '1032384035881537536' && id != '1008455862495526912') {\n        this.cardDialogVisible = true;\n        this.cardUserId = id;\n        this.$nextTick(() => {\n          this.$refs.cardOther.onCardShow();\n        });\n      }\n    },\n\n    // 讨论组 选择联系人\n    selectDiscussionMembers() {\n      if(this.personalAppealInfo.endTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('book_group_0019'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.toAppeal('single');\n        }).catch(() => {\n        });\n        return;\n      }\n      this.Comtit = this.$t('chat_select_chat_0002');\n      this.GroupInviteVisible = true;\n    },\n\n    confirmDialogHand(list) {\n      if (this.Comtit == this.$t('Universal_0202')) {\n        // 转发\n        this.GroupInviteVisible = false;\n        this.mutiChooseTag = false; //隐藏多选按钮\n        this.mutiPanel = false;\n      } else if (this.Comtit == this.$t('chat_select_chat_0002')) {\n        // 发起讨论组\n        let nameArrayString = `${this.$store.state.common.userInfo.nickName}、${this.userInfo.friendNickName}`;\n        let userIdArrayString = `${localStorage.getItem('userId')},${this.userInfo.id}`;\n        list.forEach(item => {\n          nameArrayString = `${nameArrayString}、${item.friendNickName}`;\n          userIdArrayString = `${userIdArrayString},${item.friendId}`;\n        });\n        let params = {};\n        params.groupName = nameArrayString.substring(0, 30);\n        params.groupUserId = userIdArrayString;\n        params.groupStatus = 2;\n        params.groupType = 0;\n        createGroup(params).then(async res => {\n          if (res.code == 200) {\n            this.$message.success(this.$t('Universal_0109'));\n            let data = res.data;\n            const groupInfo = data.groupBase[0];\n            const groupMemberList = data.groupMember;\n            const memberAuthList = data.memberAuth;\n            this.createGroupInfo(groupInfo);\n            this.createGroupMember(groupMemberList);\n            this.createGroupAuth(memberAuthList);\n            this.createGroupAppealInfo(groupInfo),\n            this.createGroupExceedInfo(groupInfo),\n            this.createGroupToUpdateVersion([\n              {\n                name: 'gtmcn',\n                version: data.gtmcn\n              },\n              {\n                name: 'gtmn',\n                version: data.gtmn\n              },\n              {\n                name: 'gtn',\n                version: data.gtn\n              }\n            ]);\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        });\n        this.GroupInviteVisible = false;\n        this.mutiChooseTag = false;\n        this.mutiPanel = false;\n      }\n    },\n\n    async createGroupInfo(item) {\n      const obj = {\n        group_id: item.id,\n        group_name: item.groupName,\n        group_status: item.groupStatus,\n        group_profile: item.groupProfile,\n        group_avatar: item.groupAvatar,\n        group_avatar_local: '',\n        add_check: item.addCheck,\n        invite_auth: item.inviteAuth,\n        country: item.country,\n        city: item.city,\n        screenshotsReminderStatus: item.screenshotsReminderStatus,\n        forbiddenWordsStatus: item.forbiddenWordsStatus,\n        memberSingleChatStatus: item.memberSingleChatStatus,\n        sendPicturesStatus: item.sendPicturesStatus,\n        sendConnectionStatus: item.sendConnectionStatus,\n        copyMessagesStauts: item.copyMessagesStauts,\n        sendRedpacketStatus: item.sendRedpacketStatus,\n        create_time: item.createdOn,\n        save_time: item.saveTime,\n        people: item.people,\n        member_level_status: item.memberLevelStatus,\n        group_level: item.groupLevel,\n        updatedOn: item.updatedOn,\n        code: '',\n        group_name_pinyin: convertToPinyin(item.groupName),\n        is_show: 'true',\n        group_code: item.groupCode,\n        group_type: item.groupType,\n        groupTab: item.groupTab\n      };\n      this._groupInfo = obj;\n      return await window.vm.$knex('t_groups').insert(obj);\n    },\n\n    async createGroupMember(memberList) {\n      const list = [];\n      for (let item of memberList) {\n        list.push({\n          id: item.userId,\n          group_id: item.groupId,\n          auth_status: item.authStatus,\n          nick_name: item.nickName,\n          user_head_img: item.userHeadImg,\n          user_head_img_local: '',\n          member_notes: item.memberNotes,\n          member_notes_pinyin: item.memberNotes == undefined ? '' : convertToPinyin(item.memberNotes),\n          is_show: 'true',\n          forbiddenWordsStatus: 0,\n          muteNotifications: 0,\n          additionalStatus: 0,\n          mutedStatus: 0,\n          stickyStatus: 0,\n          vipType: item.vipType,\n          inviteCodeType: item.inviteCodeType,\n          userRank: item.userRank,\n          inviteCode: item.inviteCode\n        });\n      }\n      const cc = await window.vm.$knex.batchInsert('t_groups_member', list, 10);\n      return cc;\n    },\n\n    async createGroupAuth(memberAuthList) {\n      console.log('createGroupAuth');\n      const list = [];\n      for (let item of memberAuthList) {\n        list.push({\n          group_id: item.groupId,\n          user_id: item.userId,\n          member_leval: item.memberLeval,\n          muted_status: item.mutedStatus,\n          additional_status: item.additionalStatus,\n          mute_notifications: item.muteNotifications,\n          forbidden_words_status: item.forbiddenWordsStatus,\n          sticky_status: item.stickyStatus,\n          user_level: item.userLevel\n        });\n      }\n      console.log('list', list);\n      const cc = await window.vm.$knex.batchInsert('t_groups_member_auth', list, 10);\n      console.log(cc);\n      return cc;\n    },\n    async createGroupAppealInfo(item) {\n      const obj = {\n        group_id: item.id,\n        closure_create_time: '',\n        closure_end_time: '',\n        closure_impeach_reason: '',\n        closure_limit_day: 0,\n        closure_limit_type:0,\n        show_appeal_closure_notice: 0,\n        warn_create_time: '',\n        warn_end_time: '',\n        warn_impeach_reason: '',\n        warn_limit_day: 0,\n        warn_limit_type:0,\n        show_appeal_warn_notice: 0\n      }\n      return await window.vm.$knex('t_groups_appeal').insert(obj);\n    },\n    async createGroupExceedInfo(item) {\n      const obj = {\n        group_id: item.id,\n        exceed_num: 0,\n        show_exceed_notice: 0,\n      }\n      return await window.vm.$knex('t_groups_exceed').insert(obj);\n    },\n    async createGroupToUpdateVersion(versionlist) {\n      const q = [];\n      for (let item of versionlist) {\n        q.push(\n          window.vm\n            .$knex('t_news_version')\n            .where({ name: item.name })\n            .update({ version: item.version })\n        );\n      }\n      const cc = await Promise.all(q);\n      return cc;\n    },\n\n    async getImg() {\n      let id = this.$route.query?.fromId||this.$route.query.id; //friend id\n      if(!id){\n        console.warn('$route.query',id);\n        return\n      }\n      let uinfo = await window.vm\n        .$knex('t_contacts')\n        .select()\n        .where('friend_id', id);\n      if (uinfo.length > 0) {\n        let d = uinfo[0];\n        this.imgUrl = d.friend_head_img;\n        this.nick_name = d.friend_friendNotes || d.friend_nick_name;\n        d.imgUrl = d.friend_head_img;\n        d.userNickName = d.friend_friendNotes || d.friend_nick_name;\n        d.id = d.friend_id;\n        d.friendNickName = d.friend_nick_name;\n        this.userInfo = d;\n        console.log('this.userInfo ======== ', this.userInfo);\n      } else {\n        //TODO 从服务器更新\n        console.error('无法获取好友信息', id);\n      }\n    },\n\n    goSetting(val) {\n      console.log(val);\n      this.friendSystemAble = true;\n      this.initSetting(); //初始化设置\n    },\n\n    async sendQuill() {\n      this.sendBtnDisabled = false;\n      const textList = [];\n      let j = 0;\n      if (!this.quill.editor.delta.ops.length) {\n        return;\n      }\n      for (let _delta of this.quill.editor.delta.ops) {\n        if (typeof _delta.insert != 'string') {\n          if (_delta.insert.image && !_delta.attributes) {\n            let reqId = uuidv4();\n            const blob = this.dataURItoBlob(_delta.insert.image);\n            const filePath = await fileOperational.saveImageToFile(_delta.insert.image, reqId + '.png');\n            _delta.insert.path = filePath;\n            _delta.insert.size = blob.size;\n            _delta.insert.fromId = UserInfoUtils.getCurrentUserId();\n            _delta.insert.friendId = this.userInfo.id;\n            _delta.insert.fileType = '2';\n            this.sendImageLocal(_delta.insert, reqId);\n          }\n        }\n      }\n      const textcontent = this.texthtml; //临时存消息体，防止字数超过时置空了\n      this.texthtml = '';\n      console.log(this.quill.editor.delta.ops, 'this.quill.editor.delta.ops');\n      for (let _delta of this.quill.editor.delta.ops) {\n        if (typeof _delta.insert == 'string') {\n          let text1 = _delta.insert;\n          // text1 = text1.replace(/(^\\s*)|(\\s*$)/g, \"\");\n          if (text1) {\n            textList.push({ text: text1, type: 'text', j: j++ });\n          }\n        } else {\n          if (\n            //表情图\n            _delta.insert.image &&\n            _delta.attributes &&\n            _delta.attributes.alt\n          ) {\n            let ret = emojiList.find(x => x.tag == _delta.attributes.alt);\n            if (ret) {\n              textList.push({\n                text: _delta.attributes.alt,\n                type: 'text',\n                j: j++\n              });\n              // this.text += _delta.attributes.alt;\n            }\n          } else if (this.isUrl(_delta.insert.image)) {\n            textList.push({\n              image: _delta.insert.image,\n              type: 'image',\n              j: j++\n            });\n          } else {\n            this.quoteVisible = false;\n            textList.push({\n              content: _delta.insert,\n              type: 'image',\n              j: j++\n            });\n          }\n        }\n      }\n      const sendList = [];\n      for (let i = 0; i < textList.length; i++) {\n        if (i === 0) {\n          sendList.push(textList[i]);\n        }\n        if (i > 0) {\n          if (textList[i].type === 'text') {\n            if (sendList[sendList.length - 1].type === 'image') {\n              sendList.push(textList[i]);\n            } else {\n              sendList[sendList.length - 1].text = sendList[sendList.length - 1].text += textList[i].text;\n            }\n          } else {\n            sendList.push(textList[i]);\n          }\n        }\n      }\n      let friendId = this.$route.query.id;\n      for (let ele of sendList) {\n        let msgBody = {};\n        let text = '';\n        let sum = 0;\n        if (ele.type === 'text') {\n          text = ele.text;\n          if (text.split('')[text.length - 1] == '\\n') {\n            let arr = text.split('');\n            arr.pop();\n            text = arr.join('');\n            text = text.replace(/^\\s+|\\s+$/g, '');\n          }\n          sum = sum + text.length;\n          if (this.quoteVisible) {\n            msgBody = {\n              quoteFromName: this.quoteFromName,\n              msgs: [{ msgId: this.quoteMsgId, reqId: this.quoteReqId }],\n              text: text\n            };\n          } else {\n            msgBody = {\n              text: text\n            };\n          }\n          this.mesType = '1';\n          if (sum > 1500) {\n            this.$message.error(this.$t('Universal_0238', {value: 1500}));\n            this.texthtml = textcontent;\n            return;\n          } else if (!text.trim()) {\n            continue;\n          } else {\n            this.POST_chat_rest_send(msgBody, text, friendId);\n          }\n        }\n        if (ele.type === 'image') {\n          this.mesType = '2';\n          this.fileReqId = ele.reqId;\n          this.handSendImg(ele.content);\n          // this.POST_chat_rest_send(ele.image, \"\", friendId);\n        }\n      }\n      this.text = '';\n      this.texthtml = '';\n      return;\n    },\n\n    async POST_chat_rest_send(msgBody, textOrigin, friendId) {\n      let pararms = {\n        id: friendId,\n        reqId: msgBody.reqId ? msgBody.reqId : uuidv4(),\n        targetType: '1', // 单聊1 群聊2\n        targetId: friendId,\n        uniqueCode: contFriSize(friendId, this.userId),\n        fromType: '999',\n        fromId: msgBody.fromId ? msgBody.fromId : this.userId,\n        msgType: this.quoteVisible ? '25' : this.mesType, // 1文本\n        msgBody: msgBody,\n        msgHeader: {\n          pubKey: '', //this.publickKey,\n          version: this.publickKeyVersion,\n          msgSeqNo: 1,\n          msgSeqTotal: 1,\n          effectiveTime: -1,\n          sourceSite: null,\n          language: this.$i18n.locale,\n          sign: null,\n          signType: null,\n          Authorization: localStorage.accessToken\n        },\n        refMsgBody: {\n          fromName: JSON.parse(localStorage.userInfo).nickName,\n          fromIcon: JSON.parse(localStorage.userInfo).headImg\n        }\n      };\n      if (msgBody.reqId) {\n        await SQLUtils.insertFileChatContent(pararms);\n      }\n      //\n      const single = {\n        msgBody: {\n          originTypePsw: false,\n          ...msgBody,\n          text: textOrigin\n        }\n      };\n      const option = {\n        ...pararms,\n        refMsgBody: {\n          ...pararms.refMsgBody\n        },\n        single: JSON.stringify(single)\n      };\n      if (textOrigin) {\n        option.textOrigin = textOrigin;\n      }\n\n      await this.CHAT_REST_SEND(option);\n\n      this.quoteVisible = false;\n      this.quoteMsgId = '';\n      setTimeout(() => {\n        this.$nextTick(() => {\n          if (this.$refs.talk) {\n            this.$refs.talk.scrollTop = this.$refs.talk.scrollHeight;\n          }\n        });\n      }, 600);\n    },\n\n    async getPublickey() {\n      let friendId = this.$route.query.id;\n      if (friendId == undefined || friendId == '') {\n        throw this.$t('chat_0094');\n      }\n      return;\n      //如果不需要加密，那么不取公钥\n      // if (!ChatListUtils.needCrypto(this.userId, friendId, 1)) {\n      //   return;\n      // }\n      // //从数据库中取\n      // let pubKeyData = await window.vm\n      //   .$knex(\"t_contacts_pubkey\")\n      //   .select()\n      //   .where(\"user_id\", friendId);\n\n      // if (pubKeyData.length == 0) {\n      //   let res = await get_use_rsa({\n      //     userIds: friendId,\n      //   });\n      //   pubKeyData = res.data;\n      //   if (pubKeyData[0]) {\n      //     this.publickKey = pubKeyData[0].rsaPub;\n      //   } else {\n      //     console.error(\"无法获取好友的公钥\", friendId);\n      //   }\n      // } else {\n      //   this.publickKey = pubKeyData[0].rsa_pub;\n      //   this.publickKeyVersion = pubKeyData[0].rsa_pub_version;\n      // }\n    },\n\n    goMessage() {\n      // this.$router.push(\"/app/chat\");\n      this.$router.push({\n        path: this.$route.path,\n        query: {\n          ...this.$route.query,\n          timer: new Date().getTime()\n        }\n      });\n    },\n\n    async init() {\n      this.noMoreShowFlg = false; //避免同一个path情况下，出现‘没有更多消息’\n      this.friendName = decodeURIComponent(this.$route.query.friendName || '');\n      this.texthtml = '';\n      this.id = this.$route.query.id;\n      this.text = '';\n      this.mutiChooseTag = false;\n      this.mutiPanel = false;\n      await this.getlist();\n      await this.getFriendInfo();\n      let current = {\n        id: this.id,\n        sessionName: this.friendName,\n        sessionIcon: this.imgUrl,\n        targetType: 1, //单聊\n        uniqueCode: contFriSize(this.id, UserInfoUtils.getCurrentUserId())\n      };\n      this.$store.commit('SET_CURRENT_CHAT', current);\n      this.$nextTick(() => {\n        this.chatlistFlag = true;//展示消息框顶部的头像信息，确保在chatlist拿到数据以后显示\n      });\n    },\n\n    async getFriendInfo() {\n      await this.getImg();\n      // this.getPublickey();\n      this.quoteVisible = false;\n      this.item = this.$route.query.item || {};\n      this.amr = '';\n      this.getUserSessionList();\n      this.$forceUpdate();\n    },\n\n    async getUserSessionList() {\n      const msgExpireTimeIndex = findIndex(this.saveTimeArr, ele => {\n        return ele.value == this.userInfo['msgExpireTime'];\n      });\n      this.saveTime = this.saveTimeArr[msgExpireTimeIndex]?.label;\n      this.saveTimeActive = msgExpireTimeIndex;\n    },\n\n    async getlist(isForce) {\n      this.hasMore = false;\n      // console.log(this.$route.query.fromId);\n      const list = await SQLUtils.selectSingleChatList(this.$route.query?.fromId||this.$route.query.id, '');\n      const chats = await this.handlelist(list);\n      const lastChat = chats.length > 1 ? chats[chats.length - 1] : null;\n      if ((this.$route.query.unread && lastChat && \n      lastChat.fromId != UserInfoUtils.getCurrentUserId() && this.winActive) || (isForce && lastChat)) {\n        this.$store.dispatch(SEND_READ_MESSAGE, {\n          ...lastChat,\n          id: parseUniqueCode(lastChat.uniqueCode, lastChat.targetType)\n        });\n      }\n      this.$store.commit(SET_CHAT_LIST, chats);\n      if (chats.length >= 30) {\n        this.hasMore = true;\n      }\n      // this.scrollBottom();\n    },\n\n    //清除历史记录\n    async clearMessageHistory() {\n      await deleteSessionsWithoutDraft(this.userInfo.id);\n      this.$message.success(this.$t('chat_0059'));\n      this.GET_LAST_MSG_LIST();\n      this.historyVisible = false;\n      this.$router.replace('/app/chat'); //删除成功后返回聊天列表页面\n    },\n\n    async saveExpireTime(index) {\n      this.saveTimeVisible = false;\n      const params = {\n        friendId: this.$route.query?.fromId||this.$route.query.id,\n        userId: UserInfoUtils.getCurrentUserId(),\n        msgExpireTime: this.saveTimeArr[index].value\n      };\n      await usersession_update(params);\n      await window.vm\n        .$knex('t_contacts')\n        .where({ friend_id: this.$route.query?.fromId||this.$route.query.id })\n        .update({\n          msgExpireTime: this.saveTimeArr[index].value\n        });\n      this.saveTime = this.saveTimeArr[index].label;\n    },\n    async checkoutReadStatus() {\n      // this.id\n      const hasTable = await window.vm.$knex.schema.hasTable(`m_${this.id}`);\n      if (hasTable) {\n        const last410 = await sqliteQueryBySQL(`SELECT max(msg_order) as maxOrder from m_${this.id} where from_type=410 `);\n        console.log('-=-=-=-=', last410, this.id);\n        if (last410 && last410.length) {\n          await sqliteQueryBySQL(`update m_${this.id} set status=3 where msg_order<${last410[0].maxOrder} and status=2 and from_type=410 `)\n        }\n      }\n      await this.init()\n      this.inited();\n      this.getDraft(); //读取未发出去的消息\n    }\n  },\n\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.checkoutReadStatus();\n    // this.init()\n    // this.inited();\n    // this.getDraft(); //读取未发出去的消息\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {\n    // this.scrollBottom();\n  }, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeRouteUpdate(to, from, next) {\n    this.initDraft(from);\n    this.chatlistFlag=false;\n    next();\n  },\n  beforeRouteLeave(to, from, next) {\n    if (to.path !== \"/app/chat\") {\n      this.initDraft(from);\n      this.chatlistFlag = false;\n    }\n    next();\n  },\n  destroyed() {\n    this.CLEAR_CHAT();\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n\n<style lang=\"less\" scoped>\n.mutiPanel {\n  /deep/ .el-drawer__body {\n    display: flex;\n    justify-content: center;\n    span {\n      width: 90px;\n      margin: 0 10px;\n    }\n    img {\n      margin-top: 0;\n    }\n  }\n}\n.group-member-name-class {\n  color: #999999;\n  font-size: 12px;\n  margin: 0px 10px 0px 10px;\n  display: flex;\n  align-items: center;\n  white-space: pre;\n  div {\n    padding-right: 2px;\n  }\n}\n.audioClass {\n  float: right;\n  padding: 0 10px;\n  .video-icon-class {\n    width: 18px;\n    height: 12px;\n    margin-bottom: 4px;\n  }\n}\n.addDiscussin {\n  padding: 10px 0 20px;\n  display: flex;\n  flex: 1;\n  font-size: 12px;\n  // justify-content: space-around;\n  align-items: center;\n  text-align: center;\n\n  .userInfoClass {\n    margin-right: 20px;\n    text-align: -webkit-center;\n    /*img {*/\n    /*  width: 40px;*/\n    /*  height: 40px;*/\n    /*  border-radius: 20px;*/\n    /*}*/\n\n    p {\n      width: 50px;\n      text-overflow: ellipsis;\n      white-space: pre;\n      overflow: hidden;\n    }\n  }\n}\n\n.el-tag--dark.el-tag--info {\n  background-color: #e7e7e7;\n  border: none;\n  color: #727272;\n}\n\n.el-tag--dark.el-tag--info .el-tag__close {\n  color: #666;\n}\n\n.list {\n  display: flex;\n}\n\n.el-checkbox {\n  display: flex;\n  margin-right: 0;\n}\n\n.emojList {\n  // max-height: 400px;\n  // overflow: auto;\n  span img {\n    width: 22px;\n    height: 22px;\n    padding: 3px;\n\n    &:hover {\n      box-shadow: 2px 2px 3px #888888;\n    }\n  }\n}\n\n.msgStatus {\n  position: absolute;\n  top: 35%;\n  left: -18px;\n}\n\n.mess-words {\n  position: relative;\n  width: 100%;\n}\n\n.others-msg {\n  left: 0;\n}\n\n.self-msg {\n  left: 10px;\n}\n\n.loadmore {\n  font-size: 12px;\n  text-align: center;\n  color: #2f54eb;\n  cursor: pointer;\n}\n.loadmore2 {\n  font-size: 12px;\n  text-align: center;\n  color: #2f54eb;\n}\n.nomore {\n  color: #666;\n}\n\n.el-loading-spinner {\n  margin-top: -7px;\n}\n\n.friendSystemBox {\n  font-size: 14px;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100vh;\n  overflow-y: scroll;\n\n  .top:first-child {\n    position: absolute;\n    z-index: 1;\n  }\n\n  .top {\n    width: 100%;\n    height: 50px;\n    background-color: #fbfbfb;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 10px;\n\n    span {\n      font-weight: 600;\n      font-size: 15px;\n      color: #333;\n    }\n\n    .el-icon-close {\n      font-size: 14px;\n    }\n\n    .el-icon-right {\n      font-size: 20px;\n    }\n  }\n\n  .content {\n    box-sizing: border-box;\n    width: 100%;\n    background-color: #fff;\n    font-size: 14px;\n    color: #333;\n    padding: 0 10px;\n\n    & > ul {\n      li {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        // height: 45px;\n        height: 38px;\n      }\n\n      .many-select {\n        font-size: 14px;\n\n        font-weight: 400;\n        color: #666;\n      }\n\n      .el-icon-arrow-right {\n        color: #000;\n        font-size: 14px;\n      }\n    }\n  }\n}\n\n .by-more-list {\n    position: fixed;\n    bottom: 170px;\n    right: 20px;\n    height: 37px;\n    line-height: 37px;\n    opacity: 0.98;\n    background: #e6e6e6;\n    border-radius: 4px;\n    box-shadow: 0px 0px 6px 0px #b0b0b0;\n    color: #333;\n    font-size: 13px;\n    padding: 0 10px;\n    /deep/.el-icon-arrow-down {\n      font-weight: 600; \n      color: #000;\n    }\n  }\n\n.sendFile {\n  img,\n  span {\n    vertical-align: middle;\n    margin-right: 10px;\n  }\n\n  padding-bottom: 10px;\n}\n\n.sendFileInput {\n  border: #d7d7d7 solid 1px;\n}\n\n.sendFileInput textarea {\n  cursor: default;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: space-between;\n  width: 70%;\n  margin: 0 auto;\n\n  /deep/ .dialog-footer {\n    width: 80%;\n  }\n\n  /deep/ .el-button--mini,\n  .el-button--small {\n    width: 84px;\n    height: 28px;\n    font-size: 13px;\n  }\n\n  /deep/ .el-button--default .el-button--mini {\n    color: #333;\n    font-size: 13px;\n  }\n}\n\n.selectItem {\n  width: 85%;\n  margin: 0 auto;\n\n  li {\n    margin: 10px 0;\n    width: 100%;\n    height: 25px;\n    line-height: 25px;\n    background-color: #f3f3f3;\n    font-size: 13px;\n    color: #696969;\n    text-align: center;\n    position: relative;\n\n    .el-icon-check {\n      display: none;\n    }\n  }\n\n  li:hover {\n    background-color: #d6deff;\n  }\n\n  .active {\n    .el-icon-check {\n      display: inline-block;\n      font-size: 14px;\n      color: #409eff;\n      top: 6px;\n      position: absolute;\n      right: 6px;\n    }\n  }\n}\n\n//@import url(); 引入公共css类\n.chatother {\n  user-select: none;\n\n  img {\n    // padding: 5px 10px;\n    width: 18px;\n    padding: 10px 10px 5px;\n    cursor: pointer;\n    height: 18px;\n  }\n\n  .emojIcon {\n    margin-left: 10px;\n  }\n}\n\n.message {\n  width: 100%;\n  background: #f6f6f6;\n  position: relative;\n\n  .mess-header {\n    height: 38px;\n    background: rgba(243, 243, 243, 1);\n    padding: 0 20px;\n    box-sizing: border-box;\n    border-bottom: 1px solid #dddddd;\n    -webkit-app-region: drag;\n\n    span {\n      height: 20px;\n      line-height: 20px;\n\n      &:nth-child(2) {\n        margin: 0 12px;\n      }\n    }\n\n    .mess-nav span {\n      cursor: pointer;\n    }\n\n    .mess-nav img {\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  .mess-detail {\n    width: 100%;\n    // padding: 20px 20px 0 20px;\n    padding: 10px 20px 0 20px;\n    box-sizing: border-box;\n  }\n\n  .mess-detail-self {\n    width: 100%;\n    // padding: 20px 20px 0 20px;\n    padding: 10px 20px 0 20px;\n    box-sizing: border-box;\n  }\n\n  .notify {\n    text-align: center;\n    font-size: 12px;\n    color: #999;\n  }\n\n  .mess-name {\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n\n  .words {\n    display: flex;\n    min-height: 23px;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    word-break: break-all;\n    font-size: 14px;\n\n    font-weight: 400;\n    color: rgba(0, 0, 0, 1);\n  }\n\n  #resize {\n    height: 5px;\n    width: 100%;\n    cursor: n-resize;\n    border-bottom: #e4e4e4 solid 1px;\n  }\n\n  #resizeBox {\n    position: relative;\n    height: calc(100vh - 61px);\n    z-index: 1000;\n  }\n\n  .message-box {\n    height: calc(100vh - 23px);\n    overflow: hidden;\n  }\n\n  .mess-talk {\n    // height: 80vh;\n    overflow: auto;\n    height: calc(100vh - 228px);\n\n    &:nth-last-child(2) {\n      padding-bottom: 20px;\n    }\n  }\n\n  .mess-footer {\n    position: relative;\n    height: 161px;\n    background: #f6f6f6;\n    box-sizing: border-box;\n  }\n\n  .mess-square {\n    width: 100%;\n    // height: 55%;\n    height: calc( 100% - 80px );\n    input {\n      width: 100%;\n      height: 42px;\n      border: none;\n      background: rgba(243, 243, 243, 1);\n      border-radius: 8px;\n    }\n\n    /deep/ .ql-container .ql-editor span {\n      background: none !important;\n      color: black !important;\n    }\n  }\n\n  .mess-send {\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n    right: 10px;\n    box-sizing: border-box;\n    height: 34px;\n\n    span {\n      cursor: pointer;\n    }\n\n    /deep/ .el-button--mini,\n    .el-button--small {\n      width: 66px;\n      height: 28px;\n      margin: 0 10px 3px 0;\n\n      span {\n        font-size: 14px;\n\n        font-weight: 400;\n        letter-spacing: 2px;\n      }\n    }\n  }\n\n  .send {\n    color: #fff;\n    position: absolute;\n    right: 0px;\n    bottom: 0px;\n  }\n\n  .quote {\n    max-width: 80%;\n    position: absolute;\n    left: 20px;\n    bottom: 6px;\n\n    span {\n      display: inline-block;\n      width: 100%;\n      overflow: hidden;\n      white-space: pre;\n      text-overflow: ellipsis;\n    }\n  }\n\n  .bq {\n    display: contents;\n  }\n\n  .add {\n    display: contents;\n  }\n\n  .tip-msg {\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .audio-wrap {\n    vertical-align: middle;\n    padding-right: 10px;\n\n    img {\n      width: 30px;\n      vertical-align: middle;\n      padding-right: 4px;\n    }\n  }\n}\n\n.btn {\n  cursor: pointer;\n  border: none;\n  padding: 10px 0;\n  width: 80%;\n  /* height: 30px; */\n  background: #2f54eb;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #ffffff;\n}\n\n.infotime {\n  text-align: center;\n  color: rgb(153, 153, 153);\n  margin-top: 10px;\n  font-size: 12px;\n  font-size: 12px;\n}\n</style>\n\n<style lang=\"less\">\n.ql-container {\n  height: 100%;\n  overflow-y: scroll;\n  width: 100%;\n  background: #f6f6f6;\n}\n\n.ql-toolbar.ql-snow + .ql-container.ql-snow {\n  border: none;\n  padding-top: 5px;\n}\n\n.ql-toolbar {\n  display: none;\n}\n\n.ql-tooltip {\n  display: none;\n}\n\n.ql-editor {\n  height: 100%;\n  padding: 0;\n  line-height: 0px;\n}\n\n.ql-editor .ql-editor {\n  padding: 0 10px 10px;\n  line-height: 20px;\n}\n\n.ql-editor img {\n  max-width: 150px !important;\n  vertical-align: text-bottom;\n  margin: 0 1px;\n}\n\n.quoteBubble {\n  min-width: 60px;\n  // max-width: 110px;\n  background: #e7e7e7;\n  padding: 8px 10px;\n  border-radius: 5px;\n  color: #727272;\n  margin-top: 13px;\n  font-size: 12px;\n  width: fit-content;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  .quotImg {\n    display: inline-block;\n    cursor: pointer;\n\n    img {\n      height: 30px;\n    }\n  }\n}\n\n#talkbubble {\n  line-height: 23px;\n  font-size: 14px;\n  min-width: 30px;\n  // max-width: 300px;\n  // max-width: 65%;\n  max-width: 62%;\n  min-height: 23px;\n  // background: #fff;\n  position: relative;\n  // border-radius: 10px;\n  margin-left: 10px;\n  padding: 7px 10px;\n}\n\n// #talkbubble:before {\n//   content: \"\";\n//   position: absolute;\n//   right: 100%;\n//   // top: 18px;\n//   top:13px;\n//   border-top: 6px solid transparent;\n//   border-right: 10px solid #fff;\n//   border-bottom: 6px solid transparent;\n// }\n\n#talkbubblee {\n  line-height: 23px;\n  font-size: 14px;\n  // min-width: 30px;\n  min-width: 30px;\n  // max-width: 300px;\n  // max-width: 65%;\n  max-width: 62%;\n  min-height: 23px;\n  // background: #cfe1ff;\n  position: relative;\n  // border-radius: 10px;\n  margin-right: 10px;\n  padding: 7px 10px;\n}\n\n#talkbubblee .flex-sub p,\n#talkbubble .flex-sub p {\n  font-size: 14px;\n  color: #000;\n  margin-right: 10px;\n}\n\n#talkbubblee .flex-sub p:last-child,\n#talkbubble {\n  color: #000;\n}\n\n#talkbubblee .load-border,\n#talkbubble .load-border {\n  border-top: 1px solid #ddd;\n  margin-top: 5px;\n  padding: 5px 0 0;\n  font-size: 12px;\n  color: #000;\n}\n\n\n#talkbubblee .load-border span,\n#talkbubble .load-border span {\n  display: inline-block;\n  margin-left: 14px;\n}\n\n// #talkbubblee:before {\n//   content: \"\";\n//   position: absolute;\n//   left: 100%;\n//   // top: 18px;\n//   top:13px;\n//   border-top: 6px solid transparent;\n//   border-left: 10px solid #cfe1ff;\n//   border-bottom: 6px solid transparent;\n// }\n\n#talkbubble .flex-direction p {\n  width: 88%;\n}\n\n.group-name {\n  color: #333333;\n  font-size: 14px;\n  font-weight: 500;\n\n  max-width: 190px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: pre;\n  .iconfont {\n    font-size: 12px;\n  }\n}\n\n.message-box-class {\n  width: 280px;\n  .el-message-box__headerbtn {\n    display: none;\n  }\n}\n</style>\n\n<style lang=\"less\" scoped>\n.popupmsg {\n  /deep/ .el-dialog__header {\n    padding-top: 10px;\n  }\n\n  /deep/ .el-dialog__title {\n    font-size: 14px;\n    font-weight: 600;\n    color: #333;\n    line-height: 20px;\n  }\n\n  /deep/ .el-dialog__headerbtn {\n    top: 10px;\n  }\n\n  /deep/ .el-dialog__body span {\n    font-size: 13px;\n\n    font-weight: 400;\n    color: #666;\n    line-height: 17px;\n  }\n}\n\n.send-btn {\n  height: 28px;\n  width: 68px;\n  background: #2f54eb;\n  box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  border-radius: 4px;\n  color: #fff;\n  font-size: 13px;\n  border: none;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  position: absolute;\n  right: 0;\n  bottom: 6px;\n}\n\n.captureScreenClass {\n  font-size: 9px;\n  position: absolute;\n  top: 10px;\n  margin-left: -8px;\n  padding: 4px;\n  cursor: pointer;\n}\n\n.screenSelectDivClass {\n  background: #ffffff;\n  width: 160px;\n  height: 20px;\n  line-height: 20px;\n}\n\n.screenSelectClass {\n  margin-top: 3px;\n  margin-left: 4px;\n  margin-right: -2px;\n}\n\n.voice-accept {\n  position: relative;\n}\n.voice-icon {\n  display: flex;\n  justify-content: flex-start;\n  color: #ff0000;\n  font-size: 18px;\n  position: absolute;\n  top: 8px;\n  right: -18px;\n}\n#talkbubble {\n  &.fileBox {\n    max-width: none;\n    width: 250px !important;\n  }\n}\n#talkbubblee {\n  &.fullOfEmoji {\n    max-width: 62%;\n  }\n  &.imgTopSpace{\n    padding: 0 10px;\n  }\n  &.fileBox {\n    max-width: none;\n    width: 250px !important;\n  }\n}\n</style>\n<style>\n.screen-select-class {\n  /*top: 61px !important;*/\n  padding: 0 4px 4px 0;\n}\n\n.screen-select-class .popper__arrow {\n  display: none;\n}\n\n.screen-select-class .el-checkbox__input {\n  margin-top: 3px;\n  margin-left: 4px;\n  margin-right: -2px;\n}\n</style>\n",
    "cssJson": [
      {
        ".mutiPanel": {
          "/deep/ .el-drawer__body": {
            "display": "flex",
            "justify-content": "center",
            "span": {
              "width": "90px",
              "margin": "0 10px"
            },
            "img": {
              "margin-top": "0"
            }
          }
        },
        ".group-member-name-class": {
          "color": "#999999",
          "font-size": "12px",
          "margin": "0px 10px 0px 10px",
          "display": "flex",
          "align-items": "center",
          "white-space": "pre",
          "div": {
            "padding-right": "2px"
          }
        },
        ".audioClass": {
          "float": "right",
          "padding": "0 10px",
          ".video-icon-class": {
            "width": "18px",
            "height": "12px",
            "margin-bottom": "4px"
          }
        },
        ".addDiscussin": {
          "padding": "10px 0 20px",
          "display": "flex",
          "flex": "1",
          "font-size": "12px",
          "align-items": "center",
          "text-align": "center",
          ".userInfoClass": {
            "margin-right": "20px",
            "text-align": "-webkit-center",
            "p": {
              "width": "50px",
              "text-overflow": "ellipsis",
              "white-space": "pre",
              "overflow": "hidden"
            }
          }
        },
        ".el-tag--dark.el-tag--info": {
          "background-color": "#e7e7e7",
          "border": "none",
          "color": "#727272"
        },
        ".el-tag--dark.el-tag--info .el-tag__close": {
          "color": "#666"
        },
        ".list": {
          "display": "flex"
        },
        ".el-checkbox": {
          "display": "flex",
          "margin-right": "0"
        },
        ".emojList": {
          "span img": {
            "width": "22px",
            "height": "22px",
            "padding": "3px",
            "&:hover": {
              "box-shadow": "2px 2px 3px #888888"
            }
          }
        },
        ".msgStatus": {
          "position": "absolute",
          "top": "35%",
          "left": "-18px"
        },
        ".mess-words": {
          "position": "relative",
          "width": "100%"
        },
        ".others-msg": {
          "left": "0"
        },
        ".self-msg": {
          "left": "10px"
        },
        ".loadmore": {
          "font-size": "12px",
          "text-align": "center",
          "color": "#2f54eb",
          "cursor": "pointer"
        },
        ".loadmore2": {
          "font-size": "12px",
          "text-align": "center",
          "color": "#2f54eb"
        },
        ".nomore": {
          "color": "#666"
        },
        ".el-loading-spinner": {
          "margin-top": "-7px"
        },
        ".friendSystemBox": {
          "font-size": "14px",
          "box-sizing": "border-box",
          "width": "100%",
          "height": "100vh",
          "overflow-y": "scroll",
          ".top:first-child": {
            "position": "absolute",
            "z-index": "1"
          },
          ".top": {
            "width": "100%",
            "height": "50px",
            "background-color": "#fbfbfb",
            "display": "flex",
            "justify-content": "space-between",
            "align-items": "center",
            "box-sizing": "border-box",
            "padding": "0 10px",
            "span": {
              "font-weight": "600",
              "font-size": "15px",
              "color": "#333"
            },
            ".el-icon-close": {
              "font-size": "14px"
            },
            ".el-icon-right": {
              "font-size": "20px"
            }
          },
          ".content": {
            "box-sizing": "border-box",
            "width": "100%",
            "background-color": "#fff",
            "font-size": "14px",
            "color": "#333",
            "padding": "0 10px",
            "& > ul": {
              "li": {
                "display": "flex",
                "justify-content": "space-between",
                "align-items": "center",
                "width": "100%",
                "height": "38px"
              },
              ".many-select": {
                "font-size": "14px",
                "font-weight": "400",
                "color": "#666"
              },
              ".el-icon-arrow-right": {
                "color": "#000",
                "font-size": "14px"
              }
            }
          }
        },
        ".by-more-list": {
          "position": "fixed",
          "bottom": "170px",
          "right": "20px",
          "height": "37px",
          "line-height": "37px",
          "opacity": "0.98",
          "background": "#e6e6e6",
          "border-radius": "4px",
          "box-shadow": "0px 0px 6px 0px #b0b0b0",
          "color": "#333",
          "font-size": "13px",
          "padding": "0 10px",
          "/deep/.el-icon-arrow-down": {
            "font-weight": "600",
            "color": "#000"
          }
        },
        ".sendFile": {
          "img,  span": {
            "vertical-align": "middle",
            "margin-right": "10px"
          },
          "padding-bottom": "10px"
        },
        ".sendFileInput": {
          "border": "#d7d7d7 solid 1px"
        },
        ".sendFileInput textarea": {
          "cursor": "default",
          "overflow": "hidden",
          "text-overflow": "ellipsis"
        },
        ".dialog-footer": {
          "display": "flex",
          "justify-content": "space-between",
          "width": "70%",
          "margin": "0 auto",
          "/deep/ .dialog-footer": {
            "width": "80%"
          },
          "/deep/ .el-button--mini,  .el-button--small": {
            "width": "84px",
            "height": "28px",
            "font-size": "13px"
          },
          "/deep/ .el-button--default .el-button--mini": {
            "color": "#333",
            "font-size": "13px"
          }
        },
        ".selectItem": {
          "width": "85%",
          "margin": "0 auto",
          "li": {
            "margin": "10px 0",
            "width": "100%",
            "height": "25px",
            "line-height": "25px",
            "background-color": "#f3f3f3",
            "font-size": "13px",
            "color": "#696969",
            "text-align": "center",
            "position": "relative",
            ".el-icon-check": {
              "display": "none"
            }
          },
          "li:hover": {
            "background-color": "#d6deff"
          },
          ".active": {
            ".el-icon-check": {
              "display": "inline-block",
              "font-size": "14px",
              "color": "#409eff",
              "top": "6px",
              "position": "absolute",
              "right": "6px"
            }
          }
        },
        ".chatother": {
          "user-select": "none",
          "img": {
            "width": "18px",
            "padding": "10px 10px 5px",
            "cursor": "pointer",
            "height": "18px"
          },
          ".emojIcon": {
            "margin-left": "10px"
          }
        },
        ".message": {
          "width": "100%",
          "background": "#f6f6f6",
          "position": "relative",
          ".mess-header": {
            "height": "38px",
            "background": "rgba(243, 243, 243, 1)",
            "padding": "0 20px",
            "box-sizing": "border-box",
            "border-bottom": "1px solid #dddddd",
            "-webkit-app-region": "drag",
            "span": {
              "height": "20px",
              "line-height": "20px",
              "&:nth-child(2)": {
                "margin": "0 12px"
              }
            },
            ".mess-nav span": {
              "cursor": "pointer"
            },
            ".mess-nav img": {
              "width": "20px",
              "height": "20px"
            }
          },
          ".mess-detail": {
            "width": "100%",
            "padding": "10px 20px 0 20px",
            "box-sizing": "border-box"
          },
          ".mess-detail-self": {
            "width": "100%",
            "padding": "10px 20px 0 20px",
            "box-sizing": "border-box"
          },
          ".notify": {
            "text-align": "center",
            "font-size": "12px",
            "color": "#999"
          },
          ".mess-name": {
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".words": {
            "display": "flex",
            "min-height": "23px",
            "align-items": "center",
            "justify-content": "center",
            "flex-wrap": "wrap",
            "word-break": "break-all",
            "font-size": "14px",
            "font-weight": "400",
            "color": "rgba(0, 0, 0, 1)"
          },
          "#resize": {
            "height": "5px",
            "width": "100%",
            "cursor": "n-resize",
            "border-bottom": "#e4e4e4 solid 1px"
          },
          "#resizeBox": {
            "position": "relative",
            "height": "calc(100vh - 61px)",
            "z-index": "1000"
          },
          ".message-box": {
            "height": "calc(100vh - 23px)",
            "overflow": "hidden"
          },
          ".mess-talk": {
            "overflow": "auto",
            "height": "calc(100vh - 228px)",
            "&:nth-last-child(2)": {
              "padding-bottom": "20px"
            }
          },
          ".mess-footer": {
            "position": "relative",
            "height": "161px",
            "background": "#f6f6f6",
            "box-sizing": "border-box"
          },
          ".mess-square": {
            "width": "100%",
            "height": "calc( 100% - 80px )",
            "input": {
              "width": "100%",
              "height": "42px",
              "border": "none",
              "background": "rgba(243, 243, 243, 1)",
              "border-radius": "8px"
            },
            "/deep/ .ql-container .ql-editor span": {
              "background": "none !important",
              "color": "black !important"
            }
          },
          ".mess-send": {
            "width": "100%",
            "position": "absolute",
            "bottom": "0",
            "right": "10px",
            "box-sizing": "border-box",
            "height": "34px",
            "span": {
              "cursor": "pointer"
            },
            "/deep/ .el-button--mini,    .el-button--small": {
              "width": "66px",
              "height": "28px",
              "margin": "0 10px 3px 0",
              "span": {
                "font-size": "14px",
                "font-weight": "400",
                "letter-spacing": "2px"
              }
            }
          },
          ".send": {
            "color": "#fff",
            "position": "absolute",
            "right": "0px",
            "bottom": "0px"
          },
          ".quote": {
            "max-width": "80%",
            "position": "absolute",
            "left": "20px",
            "bottom": "6px",
            "span": {
              "display": "inline-block",
              "width": "100%",
              "overflow": "hidden",
              "white-space": "pre",
              "text-overflow": "ellipsis"
            }
          },
          ".bq": {
            "display": "contents"
          },
          ".add": {
            "display": "contents"
          },
          ".tip-msg": {
            "height": "100%",
            "align-items": "center",
            "justify-content": "center"
          },
          ".audio-wrap": {
            "vertical-align": "middle",
            "padding-right": "10px",
            "img": {
              "width": "30px",
              "vertical-align": "middle",
              "padding-right": "4px"
            }
          }
        },
        ".btn": {
          "cursor": "pointer",
          "border": "none",
          "padding": "10px 0",
          "width": "80%",
          "background": "#2f54eb",
          "border-radius": "6px",
          "font-size": "14px",
          "font-weight": "500",
          "color": "#ffffff"
        },
        ".infotime": {
          "text-align": "center",
          "color": "rgb(153, 153, 153)",
          "margin-top": "10px",
          "font-size": "12px"
        }
      },
      {
        ".ql-container": {
          "height": "100%",
          "overflow-y": "scroll",
          "width": "100%",
          "background": "#f6f6f6"
        },
        ".ql-toolbar.ql-snow + .ql-container.ql-snow": {
          "border": "none",
          "padding-top": "5px"
        },
        ".ql-toolbar": {
          "display": "none"
        },
        ".ql-tooltip": {
          "display": "none"
        },
        ".ql-editor": {
          "height": "100%",
          "padding": "0",
          "line-height": "0px"
        },
        ".ql-editor .ql-editor": {
          "padding": "0 10px 10px",
          "line-height": "20px"
        },
        ".ql-editor img": {
          "max-width": "150px !important",
          "vertical-align": "text-bottom",
          "margin": "0 1px"
        },
        ".quoteBubble": {
          "min-width": "60px",
          "background": "#e7e7e7",
          "padding": "8px 10px",
          "border-radius": "5px",
          "color": "#727272",
          "margin-top": "13px",
          "font-size": "12px",
          "width": "fit-content",
          "overflow": "hidden",
          "white-space": "nowrap",
          "text-overflow": "ellipsis",
          ".quotImg": {
            "display": "inline-block",
            "cursor": "pointer",
            "img": {
              "height": "30px"
            }
          }
        },
        "#talkbubble": {
          "line-height": "23px",
          "font-size": "14px",
          "min-width": "30px",
          "max-width": "62%",
          "min-height": "23px",
          "position": "relative",
          "margin-left": "10px",
          "padding": "7px 10px"
        },
        "#talkbubblee": {
          "line-height": "23px",
          "font-size": "14px",
          "min-width": "30px",
          "max-width": "62%",
          "min-height": "23px",
          "position": "relative",
          "margin-right": "10px",
          "padding": "7px 10px"
        },
        "#talkbubblee .flex-sub p,#talkbubble .flex-sub p": {
          "font-size": "14px",
          "color": "#000",
          "margin-right": "10px"
        },
        "#talkbubblee .flex-sub p:last-child,#talkbubble": {
          "color": "#000"
        },
        "#talkbubblee .load-border,#talkbubble .load-border": {
          "border-top": "1px solid #ddd",
          "margin-top": "5px",
          "padding": "5px 0 0",
          "font-size": "12px",
          "color": "#000"
        },
        "#talkbubblee .load-border span,#talkbubble .load-border span": {
          "display": "inline-block",
          "margin-left": "14px"
        },
        "#talkbubble .flex-direction p": {
          "width": "88%"
        },
        ".group-name": {
          "color": "#333333",
          "font-size": "14px",
          "font-weight": "500",
          "max-width": "190px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "pre",
          ".iconfont": {
            "font-size": "12px"
          }
        },
        ".message-box-class": {
          "width": "280px",
          ".el-message-box__headerbtn": {
            "display": "none"
          }
        }
      },
      {
        ".popupmsg": {
          "/deep/ .el-dialog__header": {
            "padding-top": "10px"
          },
          "/deep/ .el-dialog__title": {
            "font-size": "14px",
            "font-weight": "600",
            "color": "#333",
            "line-height": "20px"
          },
          "/deep/ .el-dialog__headerbtn": {
            "top": "10px"
          },
          "/deep/ .el-dialog__body span": {
            "font-size": "13px",
            "font-weight": "400",
            "color": "#666",
            "line-height": "17px"
          }
        },
        ".send-btn": {
          "height": "28px",
          "width": "68px",
          "background": "#2f54eb",
          "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
          "border-radius": "4px",
          "color": "#fff",
          "font-size": "13px",
          "border": "none",
          "user-select": "none",
          "outline": "none",
          "cursor": "pointer",
          "position": "absolute",
          "right": "0",
          "bottom": "6px"
        },
        ".captureScreenClass": {
          "font-size": "9px",
          "position": "absolute",
          "top": "10px",
          "margin-left": "-8px",
          "padding": "4px",
          "cursor": "pointer"
        },
        ".screenSelectDivClass": {
          "background": "#ffffff",
          "width": "160px",
          "height": "20px",
          "line-height": "20px"
        },
        ".screenSelectClass": {
          "margin-top": "3px",
          "margin-left": "4px",
          "margin-right": "-2px"
        },
        ".voice-accept": {
          "position": "relative"
        },
        ".voice-icon": {
          "display": "flex",
          "justify-content": "flex-start",
          "color": "#ff0000",
          "font-size": "18px",
          "position": "absolute",
          "top": "8px",
          "right": "-18px"
        },
        "#talkbubble": {
          "&.fileBox": {
            "max-width": "none",
            "width": "250px !important"
          }
        },
        "#talkbubblee": {
          "&.fullOfEmoji": {
            "max-width": "62%"
          },
          "&.imgTopSpace": {
            "padding": "0 10px"
          },
          "&.fileBox": {
            "max-width": "none",
            "width": "250px !important"
          }
        }
      },
      {
        ".screen-select-class": {
          "padding": "0 4px 4px 0"
        },
        ".screen-select-class .popper__arrow": {
          "display": "none"
        },
        ".screen-select-class .el-checkbox__input": {
          "margin-top": "3px",
          "margin-left": "4px",
          "margin-right": "-2px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/message/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>",
      "1": "<style lang=\"less\" scoped>",
      "2": "<style lang=\"less\">",
      "3": "<style>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"message\" v-loading=\"uploadLoading\" id=\"messageBox\" @click=\"AtonBlur\">\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardUserId\"\n      :groupId=\"groupId\"\n      :authStatus=\"authStatus\"\n      ref=\"cardOther\"\n      @handleclosecard=\"handleclosecard\"\n      @toAppeal=\"toAppeal('single')\"\n    ></member-card-other>\n    <div class=\"message-box\">\n      <Title :authStatus=\"authStatus\" @goSetting=\"goSetting\" ref=\"menuTit\">\n        <div style=\"display: flex; align-items: center; cursor: pointer\" class=\"noDrag\">\n          <span class=\"group-name\" :title=\"groupName\" @click=\"showGroup()\">\n            <i class=\"iconfont icon-user-group-Fill\"></i>\n            {{ groupName }}\n          </span>\n          <span class=\"group-people\" v-if=\"groupInfo.people\">({{ groupInfo.people }})</span>\n          <img\n            src=\"../../../../assets/images/edit.png\"\n            v-show=\"authStatus == '1' || authStatus == '2'\"\n            @click=\"onEditGroupInfo\"\n            class=\"group-edit-icon img_17\"\n            alt\n          />\n        </div>\n      </Title>\n      <div>\n        <div id=\"resizeBox\">\n          <!-- 注释掉：社区容量达到上限后，前端的聊天窗口页面不应该显示：社区容量已占100%，点击升级社区容量 这条消息bug39284 -->\n          <!-- <div class=\"noticeContainer\" v-show=\"!isNetOff && !isReconn && showUpGroupNotice && authStatus !== '3'\">\n            <div class=\"upGroupNotice\">\n              {{ $t('chat_comm_set_0027', {exceedNum: this.groupExceedInfo.exceedNum}) }}\n            </div>\n            <i class=\"el-icon-close\" @click=\"closeUpGroupNotice\"></i>\n          </div> -->\n          <div class=\"appealContainer\"\n            v-if=\"!isNetOff && !isReconn && (showAppealWarnNotice||showAppealClosureNotice)\"\n            @click=\"toAppeal('group')\">\n            <div class=\"appealNotice\" v-show=\"showAppealWarnNotice\">\n              {{ $t('appeal_0011') }}\n            </div>\n            <div class=\"appealNotice\" v-show=\"showAppealClosureNotice\">\n              {{ $t('appeal_0009') }}\n            </div>\n            <i class=\"el-icon-arrow-right\"></i>\n          </div>\n          <div class=\"maskVisible\" v-show=\"maskVisible\"></div>\n          <div class=\"mess-talk custom-scrollbar\" ref=\"talkGroup\" id=\"talk\">\n\n            <div class=\"loadmore\" v-if=\"hasMore\" v-loading=\"listLoading\" element-loading-spinner=\"el-icon-loading\" @click=\"loadmorelist()\">\n              {{ $t('Universal_0361') }}\n            </div>\n            <div class=\"loadmore2 nomore\"\n              v-if=\"!hasMore && chatlistFlag\"\n              element-loading-spinner=\"el-icon-loading\"> <!-- && noMoreShowFlg-->\n              <div class=\"chatInfo\">\n                  <img \n                    class=\"avater\" \n                    :src=\"findImage(groupInfo.groupAvatar)\"\n                    @click=\"openImgView\"\n                    @error=\"replaceImg\" \n                    style=\"-webkit-user-drag:none;\" \n                  />\n\n                  <p class=\"pre\">{{groupInfo.groupName}}</p><!--groupInfo.groupName-->\n                  <span>{{ $t('chat_0001', {saveTime}) }}</span>\n                  <div\n                    @click=\"ShowGroupInvite\"\n                    class=\"invitebtn\"\n                    v-if=\"groupInfo.people < groupInfo.maxPeople && groupValidationActive != 2\">\n                    {{ $t('chat_0036')}}\n                  </div>\n              </div>\n            </div>\n            <!-- 图片查看 -->\n            <viewer :images=\"imglsit\" class=\"viewer\" ref=\"viewer\" @inited=\"inited\">\n              <img v-for=\"src in imglsit\" :src=\"src.url\" :key=\"src.msgId\" alt style=\"display: none\" />\n            </viewer>\n            <div class=\"mess-talk-self\">\n              <!-- ########## 在线消息  别人发送的############# -->\n              <!-- 多选实时消息 -->\n              <el-checkbox-group v-if=\"mutiChooseTag\" v-model=\"checkList2\" class=\"talkcheck\">\n                <el-checkbox\n                  v-for=\"(item, index) in chatList\"\n                  v-if=\"item.msgType != '14'\"\n                  :label=\"item\"\n                  :key=\"`${item._id}${index}`\"\n                  :disabled=\"item.disabled || item.sendStatus == 1 || item.sendStatus == -1\"\n                  data-list=\"chatList\"\n                  :id=\"item['msgId']\"\n                  :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                  :class=\"\n                    item.fromType == '408' ||\n                    item.fromType == '409' ||\n                    item.fromType == '410' ||\n                    item.fromType == '201' ||\n                    item.fromType == '215' ||\n                    item.fromType == '212'\n                      ? 'hidden'\n                      : item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1]) && item.disabled\n                      ? 'disabledWithTime'\n                      : item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\n                      ? 'higher'\n                      : item.disabled\n                      ? 'disabled'\n                      : ''\n                  \"\n                  :value=\"item.checked\"\n                  @change=\"multiSelectValidation(item)\"\n                  :checked=\"item.checked\"\n                >\n                  <div class=\"infotime\" v-if=\"item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                    {{ item.timestamp | diffTimeHand }}\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType != '4' &&\n                        item.msgType != '7' &&\n                        item.msgType != '44' &&\n                        item.msgType != '26' &&\n                        item.msgType != '13' &&\n                        item.msgType != '24' &&\n                        item.msgType != '14' &&\n                        item.msgType != '8' &&\n                        item.msgType != '31' &&\n                        item.msgType != '61'\n                    \"\n                  >\n                    <div class=\"mess-detail flex\" v-if=\"item.fromId != userId\">\n                      <span @click=\"lookMemberCard(item.fromId)\" @contextmenu.prevent=\"rightClick($event, item)\" class=\"member-icon-class\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                      <span class=\"mess-words other-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ showGroupMemberName(item) }}\n                          <LuckIdIcon\n                            v-if=\"showGroupMemberLevel(item).inviteCodeType == 1\"\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                          />\n                        </p>\n                        <div id=\"talkbubble\" :class=\"[getPopperClassName(item, 0),maxWidth(item),imgBubble(item)]\">\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :imglsit=\"imglsit\"\n                            :isShowRight=\"false\"\n                            :showAppealClosureNotice=\"showAppealClosureNotice\"\n                            :fromGroupType=\"fromGroupType\"\n                            :groupAuthByUser=\"groupAuthByUser\"\n                            :friendId=\"groupInfo.id\"\n                            @delMsg=\"delMsg\"\n                            @mutiChoose=\"mutiChoose\"\n                            @withdrawMessage=\"withdrawMessage(item)\"\n                            @transferQuote=\"transferQuote\"\n                            @toAppeal=\"toAppeal('single')\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                        </div>\n                        <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                      </span>\n                    </div>\n\n                    <!--在线消息 自己发送的 -->\n                    <div\n                      class=\"mess-detail-self flex justify-end\"\n                      v-if=\"\n                        item.fromId == userId &&\n                          item.msgType != '4' &&\n                          item.msgType != '7' &&\n                          item.msgType != '44' &&\n                          item.msgType != '26' &&\n                          item.msgType != '24' &&\n                          item.msgType != '8' &&\n                          item.msgType != '31' &&\n                          item.msgType != '61'\n                      \"\n                    >\n                      <span class=\"mess-words self-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ item.nickName }}\n                          <LuckIdIcon\n                            v-if=\"item.inviteCodeType == 1\"\n                            :inviteCode=\"item.inviteCode\"\n                            :userRank=\"item.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"item.vipType\"\n                            :inviteCodeType=\"item.inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"myInfo.inviteCode\"\n                            :userRank=\"myInfo.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"myInfo.vipType\"\n                            :inviteCodeType=\"myInfo.inviteCodeType\"\n                          />\n                        </p>\n                        <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                          <MessageSendStauts\n                            v-bind:item=\"item\"\n                            :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                            @handSendImg=\"handSendImg\"\n                            @resendMsgs=\"sendQuill(item)\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <div id=\"talkbubblee\" :class=\"[getPopperClassName(item, 1),maxWidth(item),imgBubble(item)]\">\n                            <MessageFormatOnline\n                              v-bind:item=\"item\"\n                              :imglsit=\"imglsit\"\n                              :isShowRight=\"false\"\n                              :showAppealClosureNotice=\"showAppealClosureNotice\"\n                              :fromGroupType=\"fromGroupType\"\n                              :groupAuthByUser=\"groupAuthByUser\"\n                              :friendId=\"groupInfo.id\"\n                              @delMsg=\"delMsg\"\n                              @mutiChoose=\"mutiChoose\"\n                              @withdrawMessage=\"withdrawMessage(item)\"\n                              @transferQuote=\"transferQuote\"\n                              @toAppeal=\"toAppeal('single')\"\n                              @handSendImg=\"handSendImg\"\n                              @reHandSendVideo=\"reHandSendVideo\"\n                              @reHandSendFile=\"reHandSendFile\"\n                            />\n                          </div>\n                        </div>\n                        <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                      </span>\n                      <span @click=\"lookMemberCard(item.fromId)\" style=\"width:42px;height:42px;margin-right:-10px;\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                    </div>\n                    <!-- 当前 的 通知类消息 -->\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType == '4' ||\n                        item.msgType == '7' ||\n                        item.msgType == '44' ||\n                        item.msgType == '26' ||\n                        item.msgType == '14' ||\n                        item.msgType == '8' ||\n                        item.msgType == '31' ||\n                        item.msgType == '61'\n                    \"\n                    class=\"notice-wrap\"\n                  >\n                    <MessageNotice v-bind:item=\"item\" :sender=\"showSenderName(item)\" :receiver=\"showReceiverName(item)\" />\n                  </div>\n                </el-checkbox>\n              </el-checkbox-group>\n              <!--实时无多选-->\n              <div v-if=\"!mutiChooseTag\">\n                <div\n                  v-for=\"(item, index) in chatList\"\n                  :label=\"item\"\n                  :key=\"`${item._id}${index}`\"\n                  :disabled=\"item.disabled || item.sendStatus == 1 || item.sendStatus == -1\"\n                  data-list=\"chatList\"\n                  :id=\"item['msgId']\"\n                  :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                  :class=\"\n                    item.fromType == '408' ||\n                    item.fromType == '409' ||\n                    item.fromType == '410' ||\n                    item.fromType == '201' ||\n                    item.fromType == '215' ||\n                    item.fromType == '212'\n                      ? 'hidden'\n                      : ''\n                  \"\n                >\n                  <div class=\"infotime\" v-if=\"item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                    {{ item.timestamp | diffTimeHand }}\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType != '4' &&\n                        item.msgType != '7' &&\n                        item.msgType != '44' &&\n                        item.msgType != '26' &&\n                        item.msgType != '13' &&\n                        item.msgType != '24' &&\n                        item.msgType != '14' &&\n                        item.msgType != '8' &&\n                        item.msgType != '31' &&\n                        item.msgType != '61'\n                    \"\n                  >\n                    <div class=\"mess-detail flex\" v-if=\"item.fromId != userId\">\n                      <span @click=\"lookMemberCard(item.fromId)\" @contextmenu.prevent=\"rightClick($event, item)\" class=\"member-icon-class\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                      <span class=\"mess-words other-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ showGroupMemberName(item) }}\n                          <LuckIdIcon\n                            v-if=\"showGroupMemberLevel(item).inviteCodeType == 1\"\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                          />\n                        </p>\n                        <div\n                          id=\"talkbubble\"\n                          @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                          :class=\"[getPopperClassName(item, 0), maxWidth(item),imgBubble(item)]\"\n                          class=\"voice-accept\"\n                        >\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :imglsit=\"imglsit\"\n                            :groupAuthByUser=\"groupAuthByUser\"\n                            :soundUrlObj=\"soundUrlObj\"\n                            :friendId=\"groupInfo.id\"\n                            :showAppealClosureNotice=\"showAppealClosureNotice\"\n                            :fromGroupType=\"fromGroupType\"\n                            @handArm=\"handArm\"\n                            @acceptMessage=\"acceptMessage(item)\"\n                            @delMsg=\"delMsg\"\n                            @scrollBottom=\"scrollBottom\"\n                            @mutiChoose=\"mutiChoose\"\n                            @withdrawMessage=\"withdrawMessage(item)\"\n                            @transferQuote=\"transferQuote\"\n                            @toAppeal=\"toAppeal('single')\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <i class=\"iconfont icon-dian voice-icon\" v-if=\"item.msgType == '9' && item.msgBody.unreadMessage == true\"></i>\n                        </div>\n                        <QuotFormate\n                          v-if=\"item.msgType == 25\"\n                          :item=\"item\"\n                          :emojiList=\"emojiList\"\n                          @lookQuoteCard=\"lookQuoteCard\"\n                        ></QuotFormate>\n                      </span>\n                    </div>\n\n                    <!--在线消息 自己发送的 -->\n                    <div class=\"mess-detail-self flex justify-end\" v-if=\"item.fromId == userId\">\n                      <span class=\"mess-words self-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ item.nickName }}\n                          <LuckIdIcon\n                            v-if=\"item.inviteCodeType == 1\"\n                            :inviteCode=\"item.inviteCode\"\n                            :userRank=\"item.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"item.vipType\"\n                            :inviteCodeType=\"item.inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"myInfo.inviteCode\"\n                            :userRank=\"myInfo.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"myInfo.vipType\"\n                            :inviteCodeType=\"myInfo.inviteCodeType\"\n                          />\n                        </p>\n                        <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                          <MessageSendStauts\n                            v-bind:item=\"item\"\n                            :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                            @handSendImg=\"handSendImg\"\n                            @resendMsgs=\"sendQuill(item)\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <div id=\"talkbubblee\"\n                               @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                               :class=\"[getPopperClassName(item, 1), maxWidth(item),imgBubble(item)]\"\n                          >\n                            <MessageFormatOnline\n                              v-bind:item=\"item\"\n                              :imglsit=\"imglsit\"\n                              :groupAuthByUser=\"groupAuthByUser\"\n                              :soundUrlObj=\"soundUrlObj\"\n                              :friendId=\"groupInfo.id\"\n                              :showAppealClosureNotice=\"showAppealClosureNotice\"\n                              :fromGroupType=\"fromGroupType\"\n                              @handArm=\"handArm\"\n                              @scrollBottom=\"scrollBottom\"\n                              @delMsg=\"delMsg\"\n                              @mutiChoose=\"mutiChoose\"\n                              @withdrawMessage=\"withdrawMessage(item)\"\n                              @transferQuote=\"transferQuote\"\n                              @toAppeal=\"toAppeal('single')\"\n                              @handSendImg=\"handSendImg\"\n                              @reHandSendVideo=\"reHandSendVideo\"\n                              @reHandSendFile=\"reHandSendFile\"\n                            />\n                          </div>\n                        </div>\n                        <QuotFormate\n                          v-if=\"item.msgType == 25\"\n                          :item=\"item\"\n                          :emojiList=\"emojiList\"\n                          @lookQuoteCard=\"lookQuoteCard\"\n                        ></QuotFormate>\n                      </span>\n                      <span @click=\"lookMemberCard(item.fromId)\" style=\"width:42px;height:42px;margin-right:-10px;\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                    </div>\n                    <!-- 当前 的 通知类消息 -->\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType == '4' ||\n                        item.msgType == '7' ||\n                        item.msgType == '44' ||\n                        item.msgType == '26' ||\n                        item.msgType == '14' ||\n                        item.msgType == '8' ||\n                        item.msgType == '31' ||\n                        item.msgType == '61'\n                    \"\n                    class=\"notice-wrap\"\n                  >\n                    <MessageNotice :item=\"item\" :sender=\"showSenderName(item)\" :receiver=\"showReceiverName(item)\" @reEditMsg=\"reEditMsg\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 工具栏-->\n          <div id=\"resize\" v-if=\"!silentMaskShow\" @mousedown=\"resizeChange\"></div>\n          <div v-else style=\"height: 6px\"></div>\n          <div id=\"down\" class=\"mess-footer align-center\" ref=\"down\">\n            <div class=\"chatother\">\n              <el-popover placement=\"top-start\" width=\"424\" trigger=\"click\" v-model=\"emojiVisible\">\n                <div class=\"emojList\">\n                  <span v-for=\"item in emojiList\" :key=\"item.id\">\n                    <img style :title=\"item.tag\" :src=\"`/resources/emoji/${item.file}`\" @click=\"insertImg(item.file, item.tag)\" />\n                  </span>\n                </div>\n                <span slot=\"reference\" class=\"emojIcon\">\n                  <img draggable='false' src=\"../../../../assets/images/send_msg_emoj.png\" />\n                </span>\n              </el-popover>\n              <span class=\"add\" @click=\"handUpload()\">\n                <img draggable='false' src=\"../../../../assets/images/send_msg_folder.png\" />\n                <input type=\"file\" :multiple=\"multiple\" @change=\"changeHand($event)\" ref=\"files\" style=\"display: none\" />\n              </span>\n              <img draggable='false' src=\"../../../../assets/images/send_msg_screenshot.png\" @click=\"captureScreen\" />\n              <el-popover\n                ref=\"screenShot\"\n                trigger=\"click\"\n                placement=\"bottom\"\n                visible-arrow=\"false\"\n                v-model=\"screenShotVisible\"\n                popper-class=\"screen-select-class\"\n              >\n                <div>\n                  <el-checkbox v-model=\"screenSelect\" class=\"screenSelectClass\" @change=\"screenSelectChange\">\n                    {{ $t('chat_comm_set_0022') }}\n                  </el-checkbox>\n                </div>\n                <i slot=\"reference\" v-popover:screenShot class=\"el-icon-caret-bottom captureScreenClass\"></i>\n              </el-popover>\n            </div>\n            <!-- <span class=\"wordNumber\">{{TiLength}}/1500</span> -->\n            <div class=\"mess-square\" id=\"mess-squareId\" @contextmenu.prevent=\"_quillRightClick($event)\">\n              <quill-editor\n                class=\"ql-editor\"\n                v-model=\"texthtml\"\n                ref=\"myQuillEditor\"\n                :options=\"editorOption\"\n                @keydown.ctrl.enter.native=\"editorWrap()\"\n                @keydown.alt.enter.native=\"editorWrap()\"\n                @keydown.meta.enter.native=\"editorWrap()\"\n                @paste.native=\"pasteMe($event)\"\n                @ready=\"onEditorReady($event)\"\n                @blur=\"onEditorBlur($event)\"\n                @change=\"onEditorChange($event, decimalNum)\"\n              ></quill-editor>\n              <!-- @keyup.shift.50.native=\"getAtUserList()\"\n                @keypress.shift.50.native=\"getAtUserList()\"\n                @keydown.shift.50.native=\"getAtUserList()\" -->\n            </div>\n            <div class=\"mess-send\">\n              <el-tag closable type=\"info\" @close=\"closeQuote()\" effect=\"dark\" v-show=\"quoteVisible\" class=\"quote\"\n                ><span ref=\"quoteMsgs\">{{ quoteMsg }}</span></el-tag\n              >\n              <button class=\"send-btn\" @click=\"sendQuillByThrottle\" :disabled=\"sendBtnDisabled\">\n                {{ $t('Universal_0046') }}\n              </button>\n            </div>\n\n            <SilentMask\n              v-show=\"silentMaskShow\"\n              :fromType=\"fromType\"\n              class=\"popContainer\"\n              ref=\"silentMask\"\n              :style=\"{ height: silentMaskHeight }\"\n            ></SilentMask>\n          </div>\n        </div>\n        <div v-show=\"isSomebodyAtYou\" class=\"by-at\" @click.stop=\"_at_handleScrollToCurrentAt\"\n          :style=\"{width: atWidth}\">\n          {{ $t('chat_0041') }}\n          <i class=\"el-icon-close\" @click.stop=\"_at_handleCloseAtTips\"></i>\n        </div>\n        <!-- 消息提示按钮 -->\n        <div v-show=\"isShowMoreList && !isSomebodyAtYou\" class=\"by-more-list\" @click=\"scrollBottom\">\n          <el-button  v-if=\"newMsgLength > 0\" class=\"by-more-list\" icon=\"el-icon-arrow-down\"> \n            {{ $t('chat_0128', {value: newMsgLength}) }}</el-button>\n          <el-button v-else class=\"by-more-list\" icon=\"el-icon-arrow-down\"></el-button>\n        </div>\n        <div v-if=\"!rightStatus\" id=\"checklist\" class=\"mess-checklist\">\n          <ul>\n            <li class=\"liMenu\" :class=\"idx == index ? 'hover' : ''\" @click=\"son(item, idx)\" v-for=\"(item, idx) in menu\" :key=\"idx\">\n              {{ item }}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <!--多选操作面板-->\n    <el-drawer\n      title\n      :visible.sync=\"mutiPanel\"\n      :direction=\"'btt'\"\n      :with-header=\"true\"\n      :modal=\"false\"\n      :wrapperClosable=\"false\"\n      :show-close=\"true\"\n      class=\"mutiPanel\"\n      style=\"height: 180px\"\n      id=\"mutiPanel\"\n      @close=\"closeMutiPnel()\"\n    >\n      <span @click=\"multiRelay(false)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_relay.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0033') }}</p>\n      </span>\n      <span @click=\"multiRelay(true)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_merge.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0034') }}</p>\n      </span>\n      <span @click=\"batchDelMsg()\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_delete.png\" /><br />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0032') }}</p>\n      </span>\n    </el-drawer>\n    <!--群设置弹框 groupSystemAble-->\n    <el-drawer\n      title=\"我是标题\"\n      :visible.sync=\"groupSystemAble\"\n      :wrapperClosable=\"true\"\n      :direction=\"'rtl'\"\n      :close-on-click-modal=\"false\"\n      :with-header=\"false\"\n      :modal=\"false\"\n     \n      @close=\"closeDialog\"\n      size=\"310px\"\n      style=\"margin-top: -53px\"\n    >\n    <template v-if=\"groupSystemAble\">\n      <GroupInfo\n        :groupInfo=\"groupInfo\"\n        :authStatus=\"authStatus\"\n        :showAppealClosureNotice=\"showAppealClosureNotice\"\n        @closeDialog=\"closeDialog\"\n        v-if=\"groupSystemAbleInfo\"\n        @refreshGroupInfo=\"refreshGroupInfo\"\n        @toAppeal=\"toAppeal('single')\"\n        ref=\"groupDetailsInfo\"\n      ></GroupInfo>\n\n      <div class=\"groupSystemBox\" v-if=\"groupSystemAbleSet\">\n        <div class=\"top\">\n          <span>{{ $t('Universal_0065') }}</span>\n          <i class=\"el-icon-close\" @click=\"groupSystemAble = false;groupSystemAbleSet=false\"></i>\n        </div>\n        <div class=\"content\" style=\"margin-top: 50px\">\n          <ul>\n            <li>\n              <span>{{ $t('Universal_0362') }}</span>\n              <el-switch\n                v-model=\"groupSystemObj.msgTopValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"groupSystemObj.msgTopClick\"\n                @change=\"stickyChange\"\n              ></el-switch>\n            </li>\n            <li>\n              <span>{{ $t('chat_0057') }}</span>\n              <el-switch\n                v-model=\"groupSystemObj.msgOutlineValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"groupSystemObj.msgOutlineClick\"\n                @change=\"NotifyChange\"\n              ></el-switch>\n            </li>\n            <li @click=\"historyVisible = true\">\n              <span>{{ $t('chat_0059') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n            <li @click=\"tipOff()\">\n              <span>{{ $t('report_0001') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n          </ul>\n        </div>\n        <div class=\"top\" v-show=\"authStatus != 3\">\n          <span>{{ $t('chat_comm_manage_0001') }}</span>\n        </div>\n        <div class=\"content\" v-show=\"authStatus != 3\">\n          <ul>\n            <li @click=\"groupTypeVisible = true\">\n              <span>{{ $t('chat_createcommunity_0006') }}</span>\n              <span class=\"many-select\">\n                {{ groupType }}\n                <i class=\"el-icon-arrow-right\"></i>\n              </span>\n            </li>\n            <li @click=\"groupValidationVisible = true\">\n              <span>{{ $t('chat_comm_manage_0002') }}</span>\n              <span class=\"many-select\" style=\"text-align: right\">\n                {{ groupValidation }}\n                <i class=\"el-icon-arrow-right\"></i>\n              </span>\n            </li>\n            <li @click=\"authorityOpen = !authorityOpen\">\n              <span>{{ $t('chat_comm_manage_0022') }}</span>\n              <span>\n                <i :class=\"!authorityOpen ? 'el-icon-arrow-right' : 'el-icon-arrow-down'\"></i>\n              </span>\n            </li>\n            <ul class=\"authorityOpen\" v-if=\"authorityOpen\">\n              <!--              <li>-->\n              <!--                <span>截屏提醒</span>-->\n              <!--                <el-switch-->\n              <!--                  v-model=\"groupSystemObj.screenNotice\"-->\n              <!--                  active-color=\"#2F54EB\"-->\n              <!--                  inactive-color=\"#EDEDED\"-->\n              <!--                  active-value=\"1\"-->\n              <!--                  inactive-value=\"0\"-->\n              <!--                  :disabled=\"groupSystemObj.screenNoticeClick\"-->\n              <!--                  @change=\"screenshotsReminder\"-->\n              <!--                ></el-switch>-->\n              <!--              </li>-->\n              <li>\n                <span>{{ $t('chat_comm_manage_0024') }}</span>\n                <el-switch\n                  v-model=\"groupSystemObj.forbiddenWordsStatus\"\n                  active-color=\"#2F54EB\"\n                  inactive-color=\"#EDEDED\"\n                  active-value=\"1\"\n                  inactive-value=\"0\"\n                  :disabled=\"groupSystemObj.forbiddenWordsStatusClick\"\n                  @change=\"forbiddenWords\"\n                ></el-switch>\n              </li>\n              <li>\n                <span>{{ $t('chat_comm_manage_0025') }}</span>\n                <el-switch\n                  v-model=\"groupSystemObj.chatSingle\"\n                  active-color=\"#2F54EB\"\n                  inactive-color=\"#EDEDED\"\n                  active-value=\"1\"\n                  inactive-value=\"0\"\n                  :disabled=\"groupSystemObj.chatSingleClick\"\n                  @change=\"memberSingleChat\"\n                ></el-switch>\n              </li>\n              <li>\n                <span>{{ $t('chat_comm_manage_0026') }}</span>\n                <el-switch\n                  v-model=\"groupSystemObj.sendFile\"\n                  active-color=\"#2F54EB\"\n                  inactive-color=\"#EDEDED\"\n                  active-value=\"1\"\n                  inactive-value=\"0\"\n                  :disabled=\"groupSystemObj.sendFileClick\"\n                  @change=\"sendPictures\"\n                ></el-switch>\n              </li>\n              <li>\n                <span>{{ $t('chat_comm_manage_0027') }}</span>\n                <el-switch\n                  v-model=\"groupSystemObj.sendUrl\"\n                  active-color=\"#2F54EB\"\n                  inactive-color=\"#EDEDED\"\n                  active-value=\"1\"\n                  inactive-value=\"0\"\n                  :disabled=\"groupSystemObj.sendUrlClick\"\n                  @change=\"sendConnection\"\n                ></el-switch>\n              </li>\n              <li>\n                <span>{{ $t('chat_comm_manage_0029') }}</span>\n                <el-switch\n                  v-model=\"groupSystemObj.sendRedpacketStatus\"\n                  active-color=\"#2F54EB\"\n                  inactive-color=\"#EDEDED\"\n                  active-value=\"1\"\n                  inactive-value=\"0\"\n                  :disabled=\"groupSystemObj.sendRedpacketStatusClick\"\n                  @change=\"sendRedpacket\"\n                ></el-switch>\n              </li>\n            </ul>\n            <li @click=\"messageSaveTime\">\n              <span>{{ $t('chat_0058') }}</span>\n              <span class=\"many-select\">\n                {{ saveTime }}\n                <i class=\"el-icon-arrow-right\"></i>\n              </span>\n            </li>\n          </ul>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <div slot=\"footer\" class=\"drawer-footer outGroup\">\n          <span v-if=\"authStatus == 1\" @click=\"releaseGroup()\">\n            {{ $t('chat_comm_set_0004') }}\n          </span>\n          <span v-else @click=\"quitGroup()\">\n            {{ $t('chat_comm_set_0006') }}\n          </span>\n        </div>\n      </div>\n      <GroupMember\n        v-bind:dialogMember=\"dialogMember\"\n        groupMemberFrom=\"group\"\n        :groupId=\"groupInfo.id\"\n        :people=\"groupInfo.people\"\n        :maxPeople=\"groupInfo.maxPeople\"\n        :groupSystemAbleMem=\"groupSystemAbleMem\"\n        :authStatus=\"this.authStatus\"\n        :memberSingleChatStatus=\"groupSystemObj.chatSingle\"\n        :showAppealClosureNotice=\"showAppealClosureNotice\"\n        \n        @closeDialog=\"closeDialog\"\n        @ShowGroupInvite=\"ShowGroupInvite\"\n        @ShowRemark=\"ShowRemark\"\n        @updatePeopleInGroup=\"updatePeopleInGroup\"\n        v-if=\"groupSystemAbleMem\"\n        ref=\"groupmember\"\n      />\n    </template>\n    </el-drawer>\n    <!--清除聊天记录-->\n    <el-dialog :title=\"$t('chat_0059')\" :visible.sync=\"historyVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <span>{{ $t('chat_0060') }}</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"historyVisible = false\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"clearLocal\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n    <!--消息保存时长-->\n    <el-dialog :title=\"$t('chat_0058')\" :visible.sync=\"saveTimeVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <ul class=\"selectItem\">\n        <li\n          v-for=\"(item, index) in saveTimeArr\"\n          :key=\"index\"\n          :class=\"saveTimeActive == index ? 'active' : ''\"\n          @click=\"saveTimeSelected(item, index)\"\n        >\n          {{ item.label }}\n          <i class=\"el-icon-check\"></i>\n        </li>\n      </ul>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelsaveExpireTime()\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveExpireTime(saveTimeActive)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n    <!--设置群类型-->\n    <el-dialog :title=\"$t('chat_createcommunity_0006')\" :visible.sync=\"groupTypeVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <ul class=\"selectItem\">\n        <li\n          v-for=\"(item, index) in groupTypeArr\"\n          :key=\"index\"\n          :class=\"groupTypeActive == item.value ? 'active' : ''\"\n          @click=\"groupTypeSelected(item, index)\"\n        >\n          {{ item.label }}\n          <i class=\"el-icon-check\"></i>\n        </li>\n      </ul>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelSaveGroupType()\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveGroupType(groupTypeSelect)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n    <!--设置群成员备注-->\n    <el-dialog\n      :title=\"$t('book_friend_0014')\"\n      :visible.sync=\"remarkVisible\"\n      width=\"270px\"\n      :center=\"true\"\n      class=\"popupmsg note-member\"\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"remarkStatus\">\n        <div class=\"tit\">\n          <img :src=\"changeValueV.userHeadImg\" alt />\n          {{ changeValueV.userNameAndId }}\n        </div>\n        <div class=\"member-notes\">\n          <el-input show-word-limit type=\"textarea\" :maxlength=\"6\" :rows=\"2\" v-model=\"memberNotes\" size=\"small\"></el-input>\n        </div>\n        <div class=\"dialog-footer\">\n          <el-button size=\"mini\" class=\"cancelBtn\" @click=\"remarkVisible = false\">\n            {{ $t('Universal_0063') }}\n          </el-button>\n          <el-button size=\"mini\" class=\"sureBtn\" type=\"primary\" @click=\"saveRemark\">\n            {{ $t('Universal_0062') }}\n          </el-button>\n        </div>\n      </div>\n    </el-dialog>\n    <!--加群验证-->\n    <el-dialog\n        :title=\"$t('chat_comm_manage_0002')\"\n        :visible.sync=\"groupValidationVisible\"\n        width=\"340px\"\n        :center=\"true\"\n        class=\"popupmsg\">\n      <ul class=\"selectItem\">\n        <li\n          v-for=\"(item, index) in groupValidationArr\"\n          :key=\"index\"\n          :class=\"groupValidationActive == item.value ? 'active' : ''\"\n          @click=\"groupValidationSelected(item, index)\"\n        >\n          <span>{{ item.label }}</span>\n          <i class=\"el-icon-check\"></i>\n        </li>\n      </ul>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelSaveGroupValidationgroup(groupValidationActive)\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveGroupValidation(groupValidationActive)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"Comtit\"\n      from=\"group\"\n      :groupId=\"groupInfo.id\"\n      :groupInfo=\"groupInfo\"\n      :authStatus=\"authStatus\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      :mergeTransfer=\"merge\"\n      :mergeTransferName=\"mergeTransferName\"\n      :showAppealClosureNotice=\"showAppealClosureNotice\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :groupId=\"groupInfo.id\"\n      :groupInfo=\"groupInfo\"\n      :appealInfo=\"appealInfo\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :impeachFromtype=\"impeachFromtype\"\n      :groupId=\"groupInfo.id\"\n      :groupInfo=\"groupInfo\"\n      :appealInfo=\"appealInfo\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n    <DialogAddFriendVisible\n      ref=\"myordernum\"\n      :dialogAddFriendsVisible=\"dialogAddFriendsVisible\"\n      @handCancelFriDialog=\"handCancelFriDialog\"\n      @handConfirmFriDialog=\"handConfirmFriDialog\"\n      :friendData=\"friendData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <DialogAddGroupVisible\n      :dialogAddGroupsVisible=\"dialogAddGroupsVisible\"\n      @handConfirmGroupDialog=\"handConfirmGroupDialog\"\n      @handCloseAddGroups=\"handCancelGroupDialog\"\n      :groupData=\"groupData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <GroupCard :groupInfo=\"groupCardInfo\" ref=\"groupCard\" @toAppeal=\"toAppeal('single')\"></GroupCard>\n    <GroupInfoEdit :info=\"groupInfo\" ref=\"groupInfoEdit\" />\n    <el-dialog\n      :title=\"$t('chat_select_chat_0007')\"\n      :visible.sync=\"sendFile\"\n      width=\"320px\"\n      class=\"popupmsg\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"cancelSendFile\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"sendFile\">\n        <img style=\"width: 38px; height: 38px; border-radius: 50%\" :src=\"groupInfo.groupAvatar\" />\n        <span>{{ this.groupInfo.groupName }}</span>\n      </div>\n      <el-input type=\"textarea\" class=\"sendFileInput\" :rows=\"2\" resize=\"none\" :disabled=\"true\" v-model=\"fileName\" size=\"small\"></el-input>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"(sendFile = false), cancelSendFile()\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"(sendFile = false), sendFileConfirm($event)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import { ipcRenderer } from \"electron\";\nimport Title from \"../components/title.vue\";\n// import DialogAddGroupVisible from \"@/view/add-friends-group/dialog/add-groups\";\n// import DialogAddFriendVisible from \"@/view/add-friends-group/dialog/add-friends\";\n\n// import MemberCardOther from \"@/components/memberCard/MemberCardOther\";\n// import MemberIcon from \"@/components/memberIcon/MemberIcon\";\n// import { diffTimeInChat} from \"@/utils\";\nimport { mapState } from \"vuex\";\nimport bus from \"@/utils/eventbus\";\n// import { uploadPicture} from \"./server\";\nimport { setGroupBase } from '../../server';\n// import QuotFormate from '@/view/chat/components/common/QuotFormate';\n// import emojiList from '@/utils/emoji.js';\n// import GroupAndInviteChat from \"@/components/chat/GroupAndInviteChat\";\n// import AppealsDialog from \"@/view/chat/appeals\";\n// import ImpeachDialog from \"@/view/chat/impeach\";\n// import MessageSendStauts from \"@/view/chat/components/common/MessageSendStatus\";\nimport GroupMember from \"@/view/chat/group/member\";\nimport GroupInfo from \"../components/GroupInfo\";\nimport GroupInfoEdit from \"../components/GroupInfoEdit\";\nimport SilentMask from \"../components/SilentMask\";\nimport GroupCard from \"../components/GroupCard\";\n// import MessageFormatOnline from \"@/view/chat/components/common/MessageFormatOnline\";\n// import MessageNotice from \"./MessageNotice\";\nimport { update_person_info } from \"../member/server\";\nimport { convertToPinyin } from \"@/utils/pinyin\";\n// import LevelIcon from \"@/components/memberIcon/LevelIcon\";\n// import LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\n\n// import defaultImg from '@/view/chat/images/default.png';\nimport defaultImg from '@/assets/images/default.png';\n\nimport mixins from '../../mixin/mixin';\nimport groupMixin from '../../mixin/groupMixin';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport  { imgView } from '@/utils/util.js'\n\nexport default {\n  name: 'Group',\n  mixins: [mixins, groupMixin],\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title,\n    GroupMember, //群成员\n    GroupInfo,\n    SilentMask,\n    GroupCard,\n    GroupInfoEdit,\n  },\n  data() {\n    let thisVueInstance=this;\n    //这里存放数据\n    return {\n      fromGroupType:'group',\n      memberPopverVisible: true,\n      isAt: false,\n      // membList: [],\n      editorOption: {\n        placeholder: this.$t('chat_0002'),\n        theme: \"bubble\", // or 'bubble'\n        formats: [\"image\", \"alt\", \"height\", \"width\", \"background\", \"color\",\"mention\"],\n        modules: {\n          toolbar:[],\n          clipboard: {\n            matchers: [\n            ]\n          },\n          mention: {\n            mentionDenotationChars: [\"@\"],\n            positioningStrategy: \"fixed\",\n            allowedChars:/^[a-zA-Z0-9_\\s\\u4e00-\\u9fa5]*$/,\n            defaultMenuOrientation:\"top\",\n            spaceAfterInsert:true,\n            mentionContainerClass:\"atBox\",\n            listItemClass:\"atInput\",\n            dataAttributes:['id',\"value\",'denotationChar', 'link',\n              'target','disabled',\"image\", \"nickName\",\"nick_name\",\"nick_name_pinyin\",\n              \"member_notes\", \"member_notes_pinyin\",\"friendNotes\",\"friendNotes_pinyin\"],\n            renderItem: (data) => {\n              return `\n                  <div style='width:100%;overflow:hidden;'>\n                    <img src=\"${data['image']||require('../../../../assets/images/defalut@.png')}\"\n                    onerror=\"javascript:this.src='${defaultImg}';\" />\n                    <span>${data['nickName']}</span>\n                  </div>\n                `\n            },\n            onSelect:(item, insertItem)=>{\n              insertItem(item,true)\n              // console.log(item)\n            },\n            source: async function(searchTerm, renderList, mentionChar) {\n              let values;\n              if (mentionChar == \"@\") {\n                values = await SQLUtils.getALLAtUserList(thisVueInstance.groupId,thisVueInstance.authStatus);\n              }\n              // console.log(values,searchTerm)\n              if (searchTerm.length === 0) {\n                renderList(values, searchTerm);\n              } else {\n                const matches = [],str=searchTerm.toLowerCase();\n                for (let i = 0,item; i < values.length; i++){\n                  item=values[i];\n                  if (\n                    //  输入框 输入@搜索用户 过滤条件\n                    item.nick_name && item.nick_name.toLowerCase().indexOf(str) > -1 ||\n                    item.nick_name_pinyin && item.nick_name_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.friendNotes && item.friendNotes.toLowerCase().indexOf(str) > -1 ||\n                    item.friendNotes_pinyin && item.friendNotes_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.member_notes && item.member_notes.toLowerCase().indexOf(str) > -1 ||\n                    item.member_notes_pinyin && item.member_notes_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.inviteCode && item.inviteCode.toLowerCase().indexOf(str) > -1\n                  ){\n                    matches.push(values[i]);\n                  }\n                }\n                renderList(matches, searchTerm);\n              }\n            }\n          }\n        }\n      },\n      memberNickName:{},\n      msgboddy: '',\n      // at 相关\n      atUserList2: false\n    };\n  },\n\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      membList: state => {\n        return state.search.membList;\n      },\n    }),\n    atWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '100px';\n      } else {\n        return '150px';\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    async $route() {\n      await this.init();\n      await this.inCurrentGroup();\n      this.stopVideo();\n    },\n    chatList(val) {\n      if (localStorage.getItem('specailChat') == 'true') {\n        localStorage.setItem('specailChat', false);\n      } else {\n        // this.scrollBottom();\n      }\n      console.log('val ====>',val);\n      if (val && val.length > 0) {\n        let msgType = val[val.length - 1].msgType;\n        if (msgType == '4' || msgType == '7') {\n          this.searchGroupMembersAndInfo();\n        } else if (\n          msgType == '1' ||\n          msgType == '2' ||\n          msgType == '6' ||\n          msgType == '9' ||\n          msgType == '10' ||\n          msgType == '15' ||\n          msgType == '25' ||\n          msgType == '40' ||\n          msgType == '61'\n        ) {\n          if (val[val.length - 1].fromIcon == undefined) {\n            val[val.length - 1].fromIcon = this.memberImg[val[val.length - 1].fromId];\n          }\n        }\n      }\n    },\n    getNetStatus(val) {\n      this.isNetOff = val == 'offline' ? true : false;\n    },\n    getSocketStatus(val) {\n      this.isReconn = val == 'online' ? false : true;\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.initFlag = true;\n    if (this.$route.query.item && this.$route.query.item['groupAuthByUser']) {\n      this.groupAuthByUser = this.$route.query.item['groupAuthByUser'];\n    }\n    this.item = this.$route.query.item;\n    bus.$on('closeMemberinfo',this.closeMember);\n  },\n  //方法集合\n  methods: {\n    // 打开图片查看器\n    openImgView () {\n      console.log('图片查看器=groupInfo=', this.groupInfo)\n      imgView(this.groupInfo.groupAvatar, this.groupInfo.id)\n    },\n    closeMember(){\n      this.groupSystemAble = false\n    },\n    //设置发送链接\n    async sendConnection() {\n      setGroupBase({\n        id: this.groupId,\n        sendConnectionStatus: this.groupSystemObj.sendUrl\n      }).then(async res => {\n        this.showResponseMessages(res);\n        if (res.code == '200') {\n          await this.updateGroupInfo({\n            sendConnectionStatus: this.groupSystemObj.sendUrl\n          });\n        }\n      });\n    },\n\n    //群成员备注\n    async saveRemark() {\n      let params = {\n        groupId: this.groupId,\n        userId: this.changeValueV.userId,\n        memberNotes: this.memberNotes.trim()\n      };\n      let res = await update_person_info(params);\n      if (res.code == '200') {\n        this.remarkVisible = false;\n        this.$message.success(res.msg);\n        await window.vm\n          .$knex('t_groups_member')\n          .where('group_id', '=', params.groupId)\n          .where('id', '=', params.userId)\n          .update({\n            member_notes: params.memberNotes,\n            member_notes_pinyin: convertToPinyin(params.memberNotes)\n          });\n        await this.queryMember();\n        if (this.$refs.groupmember) {\n          this.$nextTick(async () => {\n            if (this.groupSystemAble == true) {\n              await this.$refs.groupmember.onMemberOpen();\n            }\n          });\n        }\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n\n    //设置发送文件\n    sendPictures() {\n      setGroupBase({\n        id: this.groupId,\n        sendPicturesStatus: this.groupSystemObj.sendFile\n      }).then(async res => {\n        this.showResponseMessages(res);\n        if (res.code == '200') {\n          await this.updateGroupInfo({\n            sendPicturesStatus: this.groupSystemObj.sendFile\n          });\n        }\n      });\n    },\n\n    async updateGroupInfo(item) {\n      await window.vm\n        .$knex('t_groups')\n        .where({ group_id: this.groupId })\n        .update(item);\n    },\n\n    //群成员单聊\n    memberSingleChat() {\n      setGroupBase({\n        id: this.groupId,\n        memberSingleChatStatus: this.groupSystemObj.chatSingle\n      }).then(async res => {\n        this.showResponseMessages(res);\n        if (res.code == '200') {\n          await this.updateGroupInfo({\n            memberSingleChatStatus: this.groupSystemObj.chatSingle\n          });\n        }\n      });\n    },\n\n    //群成员禁言\n    forbiddenWords() {\n      setGroupBase({\n        id: this.groupId,\n        forbiddenWordsStatus: this.groupSystemObj.forbiddenWordsStatus\n      }).then(async res => {\n        if (res.code == '200') {\n          this.showResponseMessages(res);\n          await this.updateGroupInfo({\n            forbiddenWordsStatus: this.groupSystemObj.forbiddenWordsStatus\n          });\n        }\n      });\n    },\n\n    //群成员发送红包\n    sendRedpacket() {\n      setGroupBase({\n        id: this.groupId,\n        sendRedpacketStatus: this.groupSystemObj.sendRedpacketStatus\n      }).then(async res => {\n        this.showResponseMessages(res);\n        if (res.code == '200') {\n          await this.updateGroupInfo({\n            sendRedpacketStatus: this.groupSystemObj.sendRedpacketStatus\n          });\n        }\n      });\n    },\n\n    cancelSaveGroupType() {\n      //\n      const originIndex = this.groupTypeArr.findIndex(item => {\n        return item.label == this.groupType;\n      });\n      this.groupTypeActive = this.groupTypeArr[originIndex].value;\n      this.groupTypeVisible = false;\n    },\n\n    //设置群类型\n    saveGroupType(index) {\n      this.groupTypeVisible = false;\n      const item = this.groupTypeArr[index];\n      return setGroupBase({\n        id: this.groupId,\n        groupStatus: item.value\n      }).then(async res => {\n        if (res.code == '200') {\n          this.$message({\n            type: 'success',\n            message: res.msg\n          });\n          this.groupType = item.label;\n          this.groupTypeVisible = false; //成功\n          await SQLUtils.updateGroupsInfo(this.groupInfo);\n          // this.init();\n        }\n      });\n    },\n\n    //设置群类型\n    async groupTypeSelected(item, index) {\n      this.groupTypeActive = item.value;\n      this.groupTypeSelect = index;\n      // this.groupType = item.label;\n    },\n\n    showSenderName(item) {\n      let unknownName = item.refMsgBody.users ? item.refMsgBody.users[0].nickName : '';\n      let auth_status = this.getAuthStatusInGroup(item.fromId)\n      if (item.fromId == this.userId && item.msgType == '26') {\n        console.log(item.msgBody,'item.msgBody666')\n        if(item.msgBody.userId != this.userId){\n          item.fromName2 = this.memberNickName[item.msgBody.userId]\n        }\n        return this.$t('Universal_0036');\n      }else if ( (item.authStatus == 2 || item.authStatus == 1 ||  auth_status == 1 || auth_status == 2) &&\n          item.msgType == '26' && item.fromId != this.userId && item.fromId != item.msgBody.userId) {\n        if(item.fromId != item.msgBody.userId){\n          item.widthDrawFlag =true\n        }else{\n          item.widthDrawFlag =false\n        }\n        item.nickName = this.memberNickName[item.msgBody.userId]\n        return this.$t('chat_comm_member_0005');\n      }else if (this.authStatus == 3 && item.msgType == '26') {\n        return this.memberNickName[item.fromId] || item.nickName || unknownName || '';\n      }else if (this.authStatus == 3 && item.msgType != '26') {\n        // return this.memberFriendName[item.fromId] || item.friendFriendNotes || item.nickName || unknownName || '';\n        return item.nickName || unknownName || '';\n      }else {\n        return this.memberNickName[item.fromId] || this.memberAdminName[item.fromId] || unknownName || '';\n      }\n    },\n\n\n\n    cancelSaveGroupValidationgroup() {\n      const originIndex = this.groupValidationArr.findIndex(item => {\n        return item.name == this.groupValidation;\n      });\n      this.groupValidationActive = originIndex;\n      this.groupValidationVisible = false;\n    },\n\n    //加群验证\n    async saveGroupValidation(index) {\n      const item = this.groupValidationArr[index];\n      return setGroupBase({\n        id: this.groupId,\n        addCheck: item.value\n      }).then(async res => {\n        this.groupValidationActive = item.value;\n        this.groupValidation = item.name;\n        await window.vm\n          .$knex('t_groups')\n          .update('add_check', item.value)\n          .where('group_id', this.groupId);\n        this.showResponseMessages(res);\n        this.groupValidationVisible = false;\n        await this.init();\n      });\n    },\n\n    groupValidationSelected(item, index) {\n      this.groupValidationActive = index;\n    },\n\n\n    async onEditGroupInfo() {\n      this.$nextTick(async () => {\n        await this.$refs.groupInfoEdit.onPop();\n      });\n    },\n\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.init()\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {\n    // this.scrollBottom();\n  }, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeRouteUpdate(to, from, next) {\n    this.initDraft(from);\n    this.chatlistFlag=false;\n    next();\n  },\n\n  beforeRouteLeave(to, from, next) {\n    if (to.path !== \"/app/chat\") {\n      this.initDraft(from);\n      this.chatlistFlag = false;\n    }\n    next();\n  },\n  destroyed() {\n    bus.$off('closeMemberinfo',this.closeMember);\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "\n<template>\n  <div class=\"message\" v-loading=\"uploadLoading\" id=\"messageBox\" @click=\"AtonBlur\">\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardUserId\"\n      :groupId=\"groupId\"\n      :authStatus=\"authStatus\"\n      ref=\"cardOther\"\n      @handleclosecard=\"handleclosecard\"\n      @toAppeal=\"toAppeal('single')\"\n    ></member-card-other>\n    <div class=\"message-box\">\n      <Title :authStatus=\"authStatus\" @goSetting=\"goSetting\" ref=\"menuTit\">\n        <div style=\"display: flex; align-items: center; cursor: pointer\" class=\"noDrag\">\n          <span class=\"group-name\" :title=\"groupName\" @click=\"showGroup()\">\n            <i class=\"iconfont icon-user-group-Fill\"></i>\n            {{ groupName }}\n          </span>\n          <span class=\"group-people\" v-if=\"groupInfo.people\">({{ groupInfo.people }})</span>\n          <img\n            src=\"../../../../assets/images/edit.png\"\n            v-show=\"authStatus == '1' || authStatus == '2'\"\n            @click=\"onEditGroupInfo\"\n            class=\"group-edit-icon img_17\"\n            alt\n          />\n        </div>\n      </Title>\n      <div>\n        <div id=\"resizeBox\">\n          <!-- 注释掉：社区容量达到上限后，前端的聊天窗口页面不应该显示：社区容量已占100%，点击升级社区容量 这条消息bug39284 -->\n          <!-- <div class=\"noticeContainer\" v-show=\"!isNetOff && !isReconn && showUpGroupNotice && authStatus !== '3'\">\n            <div class=\"upGroupNotice\">\n              {{ $t('chat_comm_set_0027', {exceedNum: this.groupExceedInfo.exceedNum}) }}\n            </div>\n            <i class=\"el-icon-close\" @click=\"closeUpGroupNotice\"></i>\n          </div> -->\n          <div class=\"appealContainer\"\n            v-if=\"!isNetOff && !isReconn && (showAppealWarnNotice||showAppealClosureNotice)\"\n            @click=\"toAppeal('group')\">\n            <div class=\"appealNotice\" v-show=\"showAppealWarnNotice\">\n              {{ $t('appeal_0011') }}\n            </div>\n            <div class=\"appealNotice\" v-show=\"showAppealClosureNotice\">\n              {{ $t('appeal_0009') }}\n            </div>\n            <i class=\"el-icon-arrow-right\"></i>\n          </div>\n          <div class=\"maskVisible\" v-show=\"maskVisible\"></div>\n          <div class=\"mess-talk custom-scrollbar\" ref=\"talkGroup\" id=\"talk\">\n\n            <div class=\"loadmore\" v-if=\"hasMore\" v-loading=\"listLoading\" element-loading-spinner=\"el-icon-loading\" @click=\"loadmorelist()\">\n              {{ $t('Universal_0361') }}\n            </div>\n            <div class=\"loadmore2 nomore\"\n              v-if=\"!hasMore && chatlistFlag\"\n              element-loading-spinner=\"el-icon-loading\"> <!-- && noMoreShowFlg-->\n              <div class=\"chatInfo\">\n                  <img \n                    class=\"avater\" \n                    :src=\"findImage(groupInfo.groupAvatar)\"\n                    @click=\"openImgView\"\n                    @error=\"replaceImg\" \n                    style=\"-webkit-user-drag:none;\" \n                  />\n\n                  <p class=\"pre\">{{groupInfo.groupName}}</p><!--groupInfo.groupName-->\n                  <span>{{ $t('chat_0001', {saveTime}) }}</span>\n                  <div\n                    @click=\"ShowGroupInvite\"\n                    class=\"invitebtn\"\n                    v-if=\"groupInfo.people < groupInfo.maxPeople && groupValidationActive != 2\">\n                    {{ $t('chat_0036')}}\n                  </div>\n              </div>\n            </div>\n            <!-- 图片查看 -->\n            <viewer :images=\"imglsit\" class=\"viewer\" ref=\"viewer\" @inited=\"inited\">\n              <img v-for=\"src in imglsit\" :src=\"src.url\" :key=\"src.msgId\" alt style=\"display: none\" />\n            </viewer>\n            <div class=\"mess-talk-self\">\n              <!-- ########## 在线消息  别人发送的############# -->\n              <!-- 多选实时消息 -->\n              <el-checkbox-group v-if=\"mutiChooseTag\" v-model=\"checkList2\" class=\"talkcheck\">\n                <el-checkbox\n                  v-for=\"(item, index) in chatList\"\n                  v-if=\"item.msgType != '14'\"\n                  :label=\"item\"\n                  :key=\"`${item._id}${index}`\"\n                  :disabled=\"item.disabled || item.sendStatus == 1 || item.sendStatus == -1\"\n                  data-list=\"chatList\"\n                  :id=\"item['msgId']\"\n                  :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                  :class=\"\n                    item.fromType == '408' ||\n                    item.fromType == '409' ||\n                    item.fromType == '410' ||\n                    item.fromType == '201' ||\n                    item.fromType == '215' ||\n                    item.fromType == '212'\n                      ? 'hidden'\n                      : item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1]) && item.disabled\n                      ? 'disabledWithTime'\n                      : item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\n                      ? 'higher'\n                      : item.disabled\n                      ? 'disabled'\n                      : ''\n                  \"\n                  :value=\"item.checked\"\n                  @change=\"multiSelectValidation(item)\"\n                  :checked=\"item.checked\"\n                >\n                  <div class=\"infotime\" v-if=\"item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                    {{ item.timestamp | diffTimeHand }}\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType != '4' &&\n                        item.msgType != '7' &&\n                        item.msgType != '44' &&\n                        item.msgType != '26' &&\n                        item.msgType != '13' &&\n                        item.msgType != '24' &&\n                        item.msgType != '14' &&\n                        item.msgType != '8' &&\n                        item.msgType != '31' &&\n                        item.msgType != '61'\n                    \"\n                  >\n                    <div class=\"mess-detail flex\" v-if=\"item.fromId != userId\">\n                      <span @click=\"lookMemberCard(item.fromId)\" @contextmenu.prevent=\"rightClick($event, item)\" class=\"member-icon-class\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                      <span class=\"mess-words other-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ showGroupMemberName(item) }}\n                          <LuckIdIcon\n                            v-if=\"showGroupMemberLevel(item).inviteCodeType == 1\"\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                          />\n                        </p>\n                        <div id=\"talkbubble\" :class=\"[getPopperClassName(item, 0),maxWidth(item),imgBubble(item)]\">\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :imglsit=\"imglsit\"\n                            :isShowRight=\"false\"\n                            :showAppealClosureNotice=\"showAppealClosureNotice\"\n                            :fromGroupType=\"fromGroupType\"\n                            :groupAuthByUser=\"groupAuthByUser\"\n                            :friendId=\"groupInfo.id\"\n                            @delMsg=\"delMsg\"\n                            @mutiChoose=\"mutiChoose\"\n                            @withdrawMessage=\"withdrawMessage(item)\"\n                            @transferQuote=\"transferQuote\"\n                            @toAppeal=\"toAppeal('single')\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                        </div>\n                        <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                      </span>\n                    </div>\n\n                    <!--在线消息 自己发送的 -->\n                    <div\n                      class=\"mess-detail-self flex justify-end\"\n                      v-if=\"\n                        item.fromId == userId &&\n                          item.msgType != '4' &&\n                          item.msgType != '7' &&\n                          item.msgType != '44' &&\n                          item.msgType != '26' &&\n                          item.msgType != '24' &&\n                          item.msgType != '8' &&\n                          item.msgType != '31' &&\n                          item.msgType != '61'\n                      \"\n                    >\n                      <span class=\"mess-words self-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ item.nickName }}\n                          <LuckIdIcon\n                            v-if=\"item.inviteCodeType == 1\"\n                            :inviteCode=\"item.inviteCode\"\n                            :userRank=\"item.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"item.vipType\"\n                            :inviteCodeType=\"item.inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"myInfo.inviteCode\"\n                            :userRank=\"myInfo.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"myInfo.vipType\"\n                            :inviteCodeType=\"myInfo.inviteCodeType\"\n                          />\n                        </p>\n                        <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                          <MessageSendStauts\n                            v-bind:item=\"item\"\n                            :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                            @handSendImg=\"handSendImg\"\n                            @resendMsgs=\"sendQuill(item)\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <div id=\"talkbubblee\" :class=\"[getPopperClassName(item, 1),maxWidth(item),imgBubble(item)]\">\n                            <MessageFormatOnline\n                              v-bind:item=\"item\"\n                              :imglsit=\"imglsit\"\n                              :isShowRight=\"false\"\n                              :showAppealClosureNotice=\"showAppealClosureNotice\"\n                              :fromGroupType=\"fromGroupType\"\n                              :groupAuthByUser=\"groupAuthByUser\"\n                              :friendId=\"groupInfo.id\"\n                              @delMsg=\"delMsg\"\n                              @mutiChoose=\"mutiChoose\"\n                              @withdrawMessage=\"withdrawMessage(item)\"\n                              @transferQuote=\"transferQuote\"\n                              @toAppeal=\"toAppeal('single')\"\n                              @handSendImg=\"handSendImg\"\n                              @reHandSendVideo=\"reHandSendVideo\"\n                              @reHandSendFile=\"reHandSendFile\"\n                            />\n                          </div>\n                        </div>\n                        <QuotFormate v-if=\"item.msgType == 25\" :item=\"item\" :emojiList=\"emojiList\"></QuotFormate>\n                      </span>\n                      <span @click=\"lookMemberCard(item.fromId)\" style=\"width:42px;height:42px;margin-right:-10px;\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                    </div>\n                    <!-- 当前 的 通知类消息 -->\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType == '4' ||\n                        item.msgType == '7' ||\n                        item.msgType == '44' ||\n                        item.msgType == '26' ||\n                        item.msgType == '14' ||\n                        item.msgType == '8' ||\n                        item.msgType == '31' ||\n                        item.msgType == '61'\n                    \"\n                    class=\"notice-wrap\"\n                  >\n                    <MessageNotice v-bind:item=\"item\" :sender=\"showSenderName(item)\" :receiver=\"showReceiverName(item)\" />\n                  </div>\n                </el-checkbox>\n              </el-checkbox-group>\n              <!--实时无多选-->\n              <div v-if=\"!mutiChooseTag\">\n                <div\n                  v-for=\"(item, index) in chatList\"\n                  :label=\"item\"\n                  :key=\"`${item._id}${index}`\"\n                  :disabled=\"item.disabled || item.sendStatus == 1 || item.sendStatus == -1\"\n                  data-list=\"chatList\"\n                  :id=\"item['msgId']\"\n                  :ref=\"topMsgOrder == item.msgOrder ? 'activeRef' : ''\"\n                  :class=\"\n                    item.fromType == '408' ||\n                    item.fromType == '409' ||\n                    item.fromType == '410' ||\n                    item.fromType == '201' ||\n                    item.fromType == '215' ||\n                    item.fromType == '212'\n                      ? 'hidden'\n                      : ''\n                  \"\n                >\n                  <div class=\"infotime\" v-if=\"item.msgType != '24' && getShowTimestamp(item.timestamp,chatList[index-1])\">\n                    {{ item.timestamp | diffTimeHand }}\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType != '4' &&\n                        item.msgType != '7' &&\n                        item.msgType != '44' &&\n                        item.msgType != '26' &&\n                        item.msgType != '13' &&\n                        item.msgType != '24' &&\n                        item.msgType != '14' &&\n                        item.msgType != '8' &&\n                        item.msgType != '31' &&\n                        item.msgType != '61'\n                    \"\n                  >\n                    <div class=\"mess-detail flex\" v-if=\"item.fromId != userId\">\n                      <span @click=\"lookMemberCard(item.fromId)\" @contextmenu.prevent=\"rightClick($event, item)\" class=\"member-icon-class\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                      <span class=\"mess-words other-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ showGroupMemberName(item) }}\n                          <LuckIdIcon\n                            v-if=\"showGroupMemberLevel(item).inviteCodeType == 1\"\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"showGroupMemberLevel(item).inviteCode\"\n                            :userRank=\"showGroupMemberLevel(item).userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"showGroupMemberLevel(item).vipType\"\n                            :inviteCodeType=\"showGroupMemberLevel(item).inviteCodeType\"\n                          />\n                        </p>\n                        <div\n                          id=\"talkbubble\"\n                          @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                          :class=\"[getPopperClassName(item, 0), maxWidth(item),imgBubble(item)]\"\n                          class=\"voice-accept\"\n                        >\n                          <MessageFormatOnline\n                            v-bind:item=\"item\"\n                            :imglsit=\"imglsit\"\n                            :groupAuthByUser=\"groupAuthByUser\"\n                            :soundUrlObj=\"soundUrlObj\"\n                            :friendId=\"groupInfo.id\"\n                            :showAppealClosureNotice=\"showAppealClosureNotice\"\n                            :fromGroupType=\"fromGroupType\"\n                            @handArm=\"handArm\"\n                            @acceptMessage=\"acceptMessage(item)\"\n                            @delMsg=\"delMsg\"\n                            @scrollBottom=\"scrollBottom\"\n                            @mutiChoose=\"mutiChoose\"\n                            @withdrawMessage=\"withdrawMessage(item)\"\n                            @transferQuote=\"transferQuote\"\n                            @toAppeal=\"toAppeal('single')\"\n                            @handSendImg=\"handSendImg\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <i class=\"iconfont icon-dian voice-icon\" v-if=\"item.msgType == '9' && item.msgBody.unreadMessage == true\"></i>\n                        </div>\n                        <QuotFormate\n                          v-if=\"item.msgType == 25\"\n                          :item=\"item\"\n                          :emojiList=\"emojiList\"\n                          @lookQuoteCard=\"lookQuoteCard\"\n                        ></QuotFormate>\n                      </span>\n                    </div>\n\n                    <!--在线消息 自己发送的 -->\n                    <div class=\"mess-detail-self flex justify-end\" v-if=\"item.fromId == userId\">\n                      <span class=\"mess-words self-msg\">\n                        <p class=\"group-member-name-class\">\n                          {{ item.nickName }}\n                          <LuckIdIcon\n                            v-if=\"item.inviteCodeType == 1\"\n                            :inviteCode=\"item.inviteCode\"\n                            :userRank=\"item.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"item.vipType\"\n                            :inviteCodeType=\"item.inviteCodeType\"\n                            :listFlag=\"true\"\n                          />\n                          <LevelIcon\n                            :inviteCode=\"myInfo.inviteCode\"\n                            :userRank=\"myInfo.userRank\"\n                            iconType=\"medium\"\n                            :vipType=\"myInfo.vipType\"\n                            :inviteCodeType=\"myInfo.inviteCodeType\"\n                          />\n                        </p>\n                        <div class=\"flex\" style=\"justify-content: flex-end;align-items:flex-end; width:100%\">\n                          <MessageSendStauts\n                            v-bind:item=\"item\"\n                            :class=\"item.msgType == '25' ? 'specialStatus' : ''\"\n                            @handSendImg=\"handSendImg\"\n                            @resendMsgs=\"sendQuill(item)\"\n                            @reHandSendVideo=\"reHandSendVideo\"\n                            @reHandSendFile=\"reHandSendFile\"\n                          />\n                          <div id=\"talkbubblee\"\n                               @click=\"item.msgType == '15' ? lookcard(item) : null\"\n                               :class=\"[getPopperClassName(item, 1), maxWidth(item),imgBubble(item)]\"\n                          >\n                            <MessageFormatOnline\n                              v-bind:item=\"item\"\n                              :imglsit=\"imglsit\"\n                              :groupAuthByUser=\"groupAuthByUser\"\n                              :soundUrlObj=\"soundUrlObj\"\n                              :friendId=\"groupInfo.id\"\n                              :showAppealClosureNotice=\"showAppealClosureNotice\"\n                              :fromGroupType=\"fromGroupType\"\n                              @handArm=\"handArm\"\n                              @scrollBottom=\"scrollBottom\"\n                              @delMsg=\"delMsg\"\n                              @mutiChoose=\"mutiChoose\"\n                              @withdrawMessage=\"withdrawMessage(item)\"\n                              @transferQuote=\"transferQuote\"\n                              @toAppeal=\"toAppeal('single')\"\n                              @handSendImg=\"handSendImg\"\n                              @reHandSendVideo=\"reHandSendVideo\"\n                              @reHandSendFile=\"reHandSendFile\"\n                            />\n                          </div>\n                        </div>\n                        <QuotFormate\n                          v-if=\"item.msgType == 25\"\n                          :item=\"item\"\n                          :emojiList=\"emojiList\"\n                          @lookQuoteCard=\"lookQuoteCard\"\n                        ></QuotFormate>\n                      </span>\n                      <span @click=\"lookMemberCard(item.fromId)\" style=\"width:42px;height:42px;margin-right:-10px;\">\n                        <MemberIcon\n                          :image=\"showGroupMemberIcon(item)\"\n                          :auth-status=\"getAuthStatusInGroup(item.fromId)\"\n                          :userRank=\"showGroupMemberLevel(item).userRank\"\n                          :vipType=\"showGroupMemberLevel(item).vipType\"\n                        />\n                      </span>\n                    </div>\n                    <!-- 当前 的 通知类消息 -->\n                  </div>\n                  <div\n                    v-if=\"\n                      item.msgType == '4' ||\n                        item.msgType == '7' ||\n                        item.msgType == '44' ||\n                        item.msgType == '26' ||\n                        item.msgType == '14' ||\n                        item.msgType == '8' ||\n                        item.msgType == '31' ||\n                        item.msgType == '61'\n                    \"\n                    class=\"notice-wrap\"\n                  >\n                    <MessageNotice :item=\"item\" :sender=\"showSenderName(item)\" :receiver=\"showReceiverName(item)\" @reEditMsg=\"reEditMsg\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 工具栏-->\n          <div id=\"resize\" v-if=\"!silentMaskShow\" @mousedown=\"resizeChange\"></div>\n          <div v-else style=\"height: 6px\"></div>\n          <div id=\"down\" class=\"mess-footer align-center\" ref=\"down\">\n            <div class=\"chatother\">\n              <el-popover placement=\"top-start\" width=\"424\" trigger=\"click\" v-model=\"emojiVisible\">\n                <div class=\"emojList\">\n                  <span v-for=\"item in emojiList\" :key=\"item.id\">\n                    <img style :title=\"item.tag\" :src=\"`/resources/emoji/${item.file}`\" @click=\"insertImg(item.file, item.tag)\" />\n                  </span>\n                </div>\n                <span slot=\"reference\" class=\"emojIcon\">\n                  <img draggable='false' src=\"../../../../assets/images/send_msg_emoj.png\" />\n                </span>\n              </el-popover>\n              <span class=\"add\" @click=\"handUpload()\">\n                <img draggable='false' src=\"../../../../assets/images/send_msg_folder.png\" />\n                <input type=\"file\" :multiple=\"multiple\" @change=\"changeHand($event)\" ref=\"files\" style=\"display: none\" />\n              </span>\n              <img draggable='false' src=\"../../../../assets/images/send_msg_screenshot.png\" @click=\"captureScreen\" />\n              <el-popover\n                ref=\"screenShot\"\n                trigger=\"click\"\n                placement=\"bottom\"\n                visible-arrow=\"false\"\n                v-model=\"screenShotVisible\"\n                popper-class=\"screen-select-class\"\n              >\n                <div>\n                  <el-checkbox v-model=\"screenSelect\" class=\"screenSelectClass\" @change=\"screenSelectChange\">\n                    {{ $t('chat_comm_set_0022') }}\n                  </el-checkbox>\n                </div>\n                <i slot=\"reference\" v-popover:screenShot class=\"el-icon-caret-bottom captureScreenClass\"></i>\n              </el-popover>\n            </div>\n            <!-- <span class=\"wordNumber\">{{TiLength}}/1500</span> -->\n            <div class=\"mess-square\" id=\"mess-squareId\" @contextmenu.prevent=\"_quillRightClick($event)\">\n              <quill-editor\n                class=\"ql-editor\"\n                v-model=\"texthtml\"\n                ref=\"myQuillEditor\"\n                :options=\"editorOption\"\n                @keydown.ctrl.enter.native=\"editorWrap()\"\n                @keydown.alt.enter.native=\"editorWrap()\"\n                @keydown.meta.enter.native=\"editorWrap()\"\n                @paste.native=\"pasteMe($event)\"\n                @ready=\"onEditorReady($event)\"\n                @blur=\"onEditorBlur($event)\"\n                @change=\"onEditorChange($event, decimalNum)\"\n              ></quill-editor>\n              <!-- @keyup.shift.50.native=\"getAtUserList()\"\n                @keypress.shift.50.native=\"getAtUserList()\"\n                @keydown.shift.50.native=\"getAtUserList()\" -->\n            </div>\n            <div class=\"mess-send\">\n              <el-tag closable type=\"info\" @close=\"closeQuote()\" effect=\"dark\" v-show=\"quoteVisible\" class=\"quote\"\n                ><span ref=\"quoteMsgs\">{{ quoteMsg }}</span></el-tag\n              >\n              <button class=\"send-btn\" @click=\"sendQuillByThrottle\" :disabled=\"sendBtnDisabled\">\n                {{ $t('Universal_0046') }}\n              </button>\n            </div>\n\n            <SilentMask\n              v-show=\"silentMaskShow\"\n              :fromType=\"fromType\"\n              class=\"popContainer\"\n              ref=\"silentMask\"\n              :style=\"{ height: silentMaskHeight }\"\n            ></SilentMask>\n          </div>\n        </div>\n        <div v-show=\"isSomebodyAtYou\" class=\"by-at\" @click.stop=\"_at_handleScrollToCurrentAt\"\n          :style=\"{width: atWidth}\">\n          {{ $t('chat_0041') }}\n          <i class=\"el-icon-close\" @click.stop=\"_at_handleCloseAtTips\"></i>\n        </div>\n        <!-- 消息提示按钮 -->\n        <div v-show=\"isShowMoreList && !isSomebodyAtYou\" class=\"by-more-list\" @click=\"scrollBottom\">\n          <el-button  v-if=\"newMsgLength > 0\" class=\"by-more-list\" icon=\"el-icon-arrow-down\"> \n            {{ $t('chat_0128', {value: newMsgLength}) }}</el-button>\n          <el-button v-else class=\"by-more-list\" icon=\"el-icon-arrow-down\"></el-button>\n        </div>\n        <div v-if=\"!rightStatus\" id=\"checklist\" class=\"mess-checklist\">\n          <ul>\n            <li class=\"liMenu\" :class=\"idx == index ? 'hover' : ''\" @click=\"son(item, idx)\" v-for=\"(item, idx) in menu\" :key=\"idx\">\n              {{ item }}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <!--多选操作面板-->\n    <el-drawer\n      title\n      :visible.sync=\"mutiPanel\"\n      :direction=\"'btt'\"\n      :with-header=\"true\"\n      :modal=\"false\"\n      :wrapperClosable=\"false\"\n      :show-close=\"true\"\n      class=\"mutiPanel\"\n      style=\"height: 180px\"\n      id=\"mutiPanel\"\n      @close=\"closeMutiPnel()\"\n    >\n      <span @click=\"multiRelay(false)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_relay.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0033') }}</p>\n      </span>\n      <span @click=\"multiRelay(true)\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_merge.png\" />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0034') }}</p>\n      </span>\n      <span @click=\"batchDelMsg()\">\n        <img class=\"img_42\" src=\"../../../../assets/images/trans_delete.png\" /><br />\n        <p style=\"color: #666; font-size: 12px\">{{ $t('chat_0032') }}</p>\n      </span>\n    </el-drawer>\n    <!--群设置弹框 groupSystemAble-->\n    <el-drawer\n      title=\"我是标题\"\n      :visible.sync=\"groupSystemAble\"\n      :wrapperClosable=\"true\"\n      :direction=\"'rtl'\"\n      :close-on-click-modal=\"false\"\n      :with-header=\"false\"\n      :modal=\"false\"\n     \n      @close=\"closeDialog\"\n      size=\"310px\"\n      style=\"margin-top: -53px\"\n    >\n    <template v-if=\"groupSystemAble\">\n      <GroupInfo\n        :groupInfo=\"groupInfo\"\n        :authStatus=\"authStatus\"\n        :showAppealClosureNotice=\"showAppealClosureNotice\"\n        @closeDialog=\"closeDialog\"\n        v-if=\"groupSystemAbleInfo\"\n        @refreshGroupInfo=\"refreshGroupInfo\"\n        @toAppeal=\"toAppeal('single')\"\n        ref=\"groupDetailsInfo\"\n      ></GroupInfo>\n\n      <div class=\"groupSystemBox\" v-if=\"groupSystemAbleSet\">\n        <div class=\"top\">\n          <span>{{ $t('Universal_0065') }}</span>\n          <i class=\"el-icon-close\" @click=\"groupSystemAble = false;groupSystemAbleSet=false\"></i>\n        </div>\n        <div class=\"content\" style=\"margin-top: 50px\">\n          <ul>\n            <li>\n              <span>{{ $t('Universal_0362') }}</span>\n              <el-switch\n                v-model=\"groupSystemObj.msgTopValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"groupSystemObj.msgTopClick\"\n                @change=\"stickyChange\"\n              ></el-switch>\n            </li>\n            <li>\n              <span>{{ $t('chat_0057') }}</span>\n              <el-switch\n                v-model=\"groupSystemObj.msgOutlineValue\"\n                active-color=\"#2F54EB\"\n                inactive-color=\"#EDEDED\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n                :disabled=\"groupSystemObj.msgOutlineClick\"\n                @change=\"NotifyChange\"\n              ></el-switch>\n            </li>\n            <li @click=\"historyVisible = true\">\n              <span>{{ $t('chat_0059') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n            <li @click=\"tipOff()\">\n              <span>{{ $t('report_0001') }}</span>\n              <i class=\"el-icon-arrow-right\"></i>\n            </li>\n          </ul>\n        </div>\n        <div class=\"top\" v-show=\"authStatus != 3\">\n          <span>{{ $t('chat_comm_manage_0001') }}</span>\n        </div>\n        <div class=\"content\" v-show=\"authStatus != 3\">\n          <ul>\n            <li @click=\"groupTypeVisible = true\">\n              <span>{{ $t('chat_createcommunity_0006') }}</span>\n              <span class=\"many-select\">\n                {{ groupType }}\n                <i class=\"el-icon-arrow-right\"></i>\n              </span>\n            </li>\n            <li @click=\"groupValidationVisible = true\">\n              <span>{{ $t('chat_comm_manage_0002') }}</span>\n              <span class=\"many-select\" style=\"text-align: right\">\n                {{ groupValidation }}\n                <i class=\"el-icon-arrow-right\"></i>\n              </span>\n            </li>\n            <li @click=\"authorityOpen = !authorityOpen\">\n              <span>{{ $t('chat_comm_manage_0022') }}</span>\n              <span>\n                <i :class=\"!authorityOpen ? 'el-icon-arrow-right' : 'el-icon-arrow-down'\"></i>\n              </span>\n            </li>\n            <ul class=\"authorityOpen\" v-if=\"authorityOpen\">\n              <!--              <li>-->\n              <!--                <span>截屏提醒</span>-->\n              <!--                <el-switch-->\n              <!--                  v-model=\"groupSystemObj.screenNotice\"-->\n              <!--                  active-color=\"#2F54EB\"-->\n              <!--                  inactive-color=\"#EDEDED\"-->\n              <!--                  active-value=\"1\"-->\n              <!--                  inactive-value=\"0\"-->\n              <!--                  :disabled=\"groupSystemObj.screenNoticeClick\"-->\n              <!--                  @change=\"screenshotsReminder\"-->\n              <!--                ></el-switch>-->\n              <!--              </li>-->\n              <li>\n                <span>{{ $t('chat_comm_manage_0024') }}</span>\n                <el-switch\n                  v-model=\"groupSystemObj.forbiddenWordsStatus\"\n                  active-color=\"#2F54EB\"\n                  inactive-color=\"#EDEDED\"\n                  active-value=\"1\"\n                  inactive-value=\"0\"\n                  :disabled=\"groupSystemObj.forbiddenWordsStatusClick\"\n                  @change=\"forbiddenWords\"\n                ></el-switch>\n              </li>\n              <li>\n                <span>{{ $t('chat_comm_manage_0025') }}</span>\n                <el-switch\n                  v-model=\"groupSystemObj.chatSingle\"\n                  active-color=\"#2F54EB\"\n                  inactive-color=\"#EDEDED\"\n                  active-value=\"1\"\n                  inactive-value=\"0\"\n                  :disabled=\"groupSystemObj.chatSingleClick\"\n                  @change=\"memberSingleChat\"\n                ></el-switch>\n              </li>\n              <li>\n                <span>{{ $t('chat_comm_manage_0026') }}</span>\n                <el-switch\n                  v-model=\"groupSystemObj.sendFile\"\n                  active-color=\"#2F54EB\"\n                  inactive-color=\"#EDEDED\"\n                  active-value=\"1\"\n                  inactive-value=\"0\"\n                  :disabled=\"groupSystemObj.sendFileClick\"\n                  @change=\"sendPictures\"\n                ></el-switch>\n              </li>\n              <li>\n                <span>{{ $t('chat_comm_manage_0027') }}</span>\n                <el-switch\n                  v-model=\"groupSystemObj.sendUrl\"\n                  active-color=\"#2F54EB\"\n                  inactive-color=\"#EDEDED\"\n                  active-value=\"1\"\n                  inactive-value=\"0\"\n                  :disabled=\"groupSystemObj.sendUrlClick\"\n                  @change=\"sendConnection\"\n                ></el-switch>\n              </li>\n              <li>\n                <span>{{ $t('chat_comm_manage_0029') }}</span>\n                <el-switch\n                  v-model=\"groupSystemObj.sendRedpacketStatus\"\n                  active-color=\"#2F54EB\"\n                  inactive-color=\"#EDEDED\"\n                  active-value=\"1\"\n                  inactive-value=\"0\"\n                  :disabled=\"groupSystemObj.sendRedpacketStatusClick\"\n                  @change=\"sendRedpacket\"\n                ></el-switch>\n              </li>\n            </ul>\n            <li @click=\"messageSaveTime\">\n              <span>{{ $t('chat_0058') }}</span>\n              <span class=\"many-select\">\n                {{ saveTime }}\n                <i class=\"el-icon-arrow-right\"></i>\n              </span>\n            </li>\n          </ul>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <div slot=\"footer\" class=\"drawer-footer outGroup\">\n          <span v-if=\"authStatus == 1\" @click=\"releaseGroup()\">\n            {{ $t('chat_comm_set_0004') }}\n          </span>\n          <span v-else @click=\"quitGroup()\">\n            {{ $t('chat_comm_set_0006') }}\n          </span>\n        </div>\n      </div>\n      <GroupMember\n        v-bind:dialogMember=\"dialogMember\"\n        groupMemberFrom=\"group\"\n        :groupId=\"groupInfo.id\"\n        :people=\"groupInfo.people\"\n        :maxPeople=\"groupInfo.maxPeople\"\n        :groupSystemAbleMem=\"groupSystemAbleMem\"\n        :authStatus=\"this.authStatus\"\n        :memberSingleChatStatus=\"groupSystemObj.chatSingle\"\n        :showAppealClosureNotice=\"showAppealClosureNotice\"\n        \n        @closeDialog=\"closeDialog\"\n        @ShowGroupInvite=\"ShowGroupInvite\"\n        @ShowRemark=\"ShowRemark\"\n        @updatePeopleInGroup=\"updatePeopleInGroup\"\n        v-if=\"groupSystemAbleMem\"\n        ref=\"groupmember\"\n      />\n    </template>\n    </el-drawer>\n    <!--清除聊天记录-->\n    <el-dialog :title=\"$t('chat_0059')\" :visible.sync=\"historyVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <span>{{ $t('chat_0060') }}</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"historyVisible = false\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"clearLocal\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n    <!--消息保存时长-->\n    <el-dialog :title=\"$t('chat_0058')\" :visible.sync=\"saveTimeVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <ul class=\"selectItem\">\n        <li\n          v-for=\"(item, index) in saveTimeArr\"\n          :key=\"index\"\n          :class=\"saveTimeActive == index ? 'active' : ''\"\n          @click=\"saveTimeSelected(item, index)\"\n        >\n          {{ item.label }}\n          <i class=\"el-icon-check\"></i>\n        </li>\n      </ul>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelsaveExpireTime()\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveExpireTime(saveTimeActive)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n    <!--设置群类型-->\n    <el-dialog :title=\"$t('chat_createcommunity_0006')\" :visible.sync=\"groupTypeVisible\" width=\"270px\" :center=\"true\" class=\"popupmsg\">\n      <ul class=\"selectItem\">\n        <li\n          v-for=\"(item, index) in groupTypeArr\"\n          :key=\"index\"\n          :class=\"groupTypeActive == item.value ? 'active' : ''\"\n          @click=\"groupTypeSelected(item, index)\"\n        >\n          {{ item.label }}\n          <i class=\"el-icon-check\"></i>\n        </li>\n      </ul>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelSaveGroupType()\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveGroupType(groupTypeSelect)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n    <!--设置群成员备注-->\n    <el-dialog\n      :title=\"$t('book_friend_0014')\"\n      :visible.sync=\"remarkVisible\"\n      width=\"270px\"\n      :center=\"true\"\n      class=\"popupmsg note-member\"\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"remarkStatus\">\n        <div class=\"tit\">\n          <img :src=\"changeValueV.userHeadImg\" alt />\n          {{ changeValueV.userNameAndId }}\n        </div>\n        <div class=\"member-notes\">\n          <el-input show-word-limit type=\"textarea\" :maxlength=\"6\" :rows=\"2\" v-model=\"memberNotes\" size=\"small\"></el-input>\n        </div>\n        <div class=\"dialog-footer\">\n          <el-button size=\"mini\" class=\"cancelBtn\" @click=\"remarkVisible = false\">\n            {{ $t('Universal_0063') }}\n          </el-button>\n          <el-button size=\"mini\" class=\"sureBtn\" type=\"primary\" @click=\"saveRemark\">\n            {{ $t('Universal_0062') }}\n          </el-button>\n        </div>\n      </div>\n    </el-dialog>\n    <!--加群验证-->\n    <el-dialog\n        :title=\"$t('chat_comm_manage_0002')\"\n        :visible.sync=\"groupValidationVisible\"\n        width=\"340px\"\n        :center=\"true\"\n        class=\"popupmsg\">\n      <ul class=\"selectItem\">\n        <li\n          v-for=\"(item, index) in groupValidationArr\"\n          :key=\"index\"\n          :class=\"groupValidationActive == item.value ? 'active' : ''\"\n          @click=\"groupValidationSelected(item, index)\"\n        >\n          <span>{{ item.label }}</span>\n          <i class=\"el-icon-check\"></i>\n        </li>\n      </ul>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"cancelSaveGroupValidationgroup(groupValidationActive)\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveGroupValidation(groupValidationActive)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"Comtit\"\n      from=\"group\"\n      :groupId=\"groupInfo.id\"\n      :groupInfo=\"groupInfo\"\n      :authStatus=\"authStatus\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      :mergeTransfer=\"merge\"\n      :mergeTransferName=\"mergeTransferName\"\n      :showAppealClosureNotice=\"showAppealClosureNotice\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :groupId=\"groupInfo.id\"\n      :groupInfo=\"groupInfo\"\n      :appealInfo=\"appealInfo\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :impeachFromtype=\"impeachFromtype\"\n      :groupId=\"groupInfo.id\"\n      :groupInfo=\"groupInfo\"\n      :appealInfo=\"appealInfo\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n    <DialogAddFriendVisible\n      ref=\"myordernum\"\n      :dialogAddFriendsVisible=\"dialogAddFriendsVisible\"\n      @handCancelFriDialog=\"handCancelFriDialog\"\n      @handConfirmFriDialog=\"handConfirmFriDialog\"\n      :friendData=\"friendData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <DialogAddGroupVisible\n      :dialogAddGroupsVisible=\"dialogAddGroupsVisible\"\n      @handConfirmGroupDialog=\"handConfirmGroupDialog\"\n      @handCloseAddGroups=\"handCancelGroupDialog\"\n      :groupData=\"groupData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <GroupCard :groupInfo=\"groupCardInfo\" ref=\"groupCard\" @toAppeal=\"toAppeal('single')\"></GroupCard>\n    <GroupInfoEdit :info=\"groupInfo\" ref=\"groupInfoEdit\" />\n    <el-dialog\n      :title=\"$t('chat_select_chat_0007')\"\n      :visible.sync=\"sendFile\"\n      width=\"320px\"\n      class=\"popupmsg\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"cancelSendFile\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"sendFile\">\n        <img style=\"width: 38px; height: 38px; border-radius: 50%\" :src=\"groupInfo.groupAvatar\" />\n        <span>{{ this.groupInfo.groupName }}</span>\n      </div>\n      <el-input type=\"textarea\" class=\"sendFileInput\" :rows=\"2\" resize=\"none\" :disabled=\"true\" v-model=\"fileName\" size=\"small\"></el-input>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"(sendFile = false), cancelSendFile()\">\n          {{ $t('Universal_0063') }}\n        </el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"(sendFile = false), sendFileConfirm($event)\">\n          {{ $t('Universal_0062') }}\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import { ipcRenderer } from \"electron\";\nimport Title from \"../components/title.vue\";\n// import DialogAddGroupVisible from \"@/view/add-friends-group/dialog/add-groups\";\n// import DialogAddFriendVisible from \"@/view/add-friends-group/dialog/add-friends\";\n\n// import MemberCardOther from \"@/components/memberCard/MemberCardOther\";\n// import MemberIcon from \"@/components/memberIcon/MemberIcon\";\n// import { diffTimeInChat} from \"@/utils\";\nimport { mapState } from \"vuex\";\nimport bus from \"@/utils/eventbus\";\n// import { uploadPicture} from \"./server\";\nimport { setGroupBase } from '../../server';\n// import QuotFormate from '@/view/chat/components/common/QuotFormate';\n// import emojiList from '@/utils/emoji.js';\n// import GroupAndInviteChat from \"@/components/chat/GroupAndInviteChat\";\n// import AppealsDialog from \"@/view/chat/appeals\";\n// import ImpeachDialog from \"@/view/chat/impeach\";\n// import MessageSendStauts from \"@/view/chat/components/common/MessageSendStatus\";\nimport GroupMember from \"@/view/chat/group/member\";\nimport GroupInfo from \"../components/GroupInfo\";\nimport GroupInfoEdit from \"../components/GroupInfoEdit\";\nimport SilentMask from \"../components/SilentMask\";\nimport GroupCard from \"../components/GroupCard\";\n// import MessageFormatOnline from \"@/view/chat/components/common/MessageFormatOnline\";\n// import MessageNotice from \"./MessageNotice\";\nimport { update_person_info } from \"../member/server\";\nimport { convertToPinyin } from \"@/utils/pinyin\";\n// import LevelIcon from \"@/components/memberIcon/LevelIcon\";\n// import LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\n\n// import defaultImg from '@/view/chat/images/default.png';\nimport defaultImg from '@/assets/images/default.png';\n\nimport mixins from '../../mixin/mixin';\nimport groupMixin from '../../mixin/groupMixin';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport  { imgView } from '@/utils/util.js'\n\nexport default {\n  name: 'Group',\n  mixins: [mixins, groupMixin],\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Title,\n    GroupMember, //群成员\n    GroupInfo,\n    SilentMask,\n    GroupCard,\n    GroupInfoEdit,\n  },\n  data() {\n    let thisVueInstance=this;\n    //这里存放数据\n    return {\n      fromGroupType:'group',\n      memberPopverVisible: true,\n      isAt: false,\n      // membList: [],\n      editorOption: {\n        placeholder: this.$t('chat_0002'),\n        theme: \"bubble\", // or 'bubble'\n        formats: [\"image\", \"alt\", \"height\", \"width\", \"background\", \"color\",\"mention\"],\n        modules: {\n          toolbar:[],\n          clipboard: {\n            matchers: [\n            ]\n          },\n          mention: {\n            mentionDenotationChars: [\"@\"],\n            positioningStrategy: \"fixed\",\n            allowedChars:/^[a-zA-Z0-9_\\s\\u4e00-\\u9fa5]*$/,\n            defaultMenuOrientation:\"top\",\n            spaceAfterInsert:true,\n            mentionContainerClass:\"atBox\",\n            listItemClass:\"atInput\",\n            dataAttributes:['id',\"value\",'denotationChar', 'link',\n              'target','disabled',\"image\", \"nickName\",\"nick_name\",\"nick_name_pinyin\",\n              \"member_notes\", \"member_notes_pinyin\",\"friendNotes\",\"friendNotes_pinyin\"],\n            renderItem: (data) => {\n              return `\n                  <div style='width:100%;overflow:hidden;'>\n                    <img src=\"${data['image']||require('../../../../assets/images/defalut@.png')}\"\n                    onerror=\"javascript:this.src='${defaultImg}';\" />\n                    <span>${data['nickName']}</span>\n                  </div>\n                `\n            },\n            onSelect:(item, insertItem)=>{\n              insertItem(item,true)\n              // console.log(item)\n            },\n            source: async function(searchTerm, renderList, mentionChar) {\n              let values;\n              if (mentionChar == \"@\") {\n                values = await SQLUtils.getALLAtUserList(thisVueInstance.groupId,thisVueInstance.authStatus);\n              }\n              // console.log(values,searchTerm)\n              if (searchTerm.length === 0) {\n                renderList(values, searchTerm);\n              } else {\n                const matches = [],str=searchTerm.toLowerCase();\n                for (let i = 0,item; i < values.length; i++){\n                  item=values[i];\n                  if (\n                    //  输入框 输入@搜索用户 过滤条件\n                    item.nick_name && item.nick_name.toLowerCase().indexOf(str) > -1 ||\n                    item.nick_name_pinyin && item.nick_name_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.friendNotes && item.friendNotes.toLowerCase().indexOf(str) > -1 ||\n                    item.friendNotes_pinyin && item.friendNotes_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.member_notes && item.member_notes.toLowerCase().indexOf(str) > -1 ||\n                    item.member_notes_pinyin && item.member_notes_pinyin.toLowerCase().indexOf(str) > -1 ||\n                    item.inviteCode && item.inviteCode.toLowerCase().indexOf(str) > -1\n                  ){\n                    matches.push(values[i]);\n                  }\n                }\n                renderList(matches, searchTerm);\n              }\n            }\n          }\n        }\n      },\n      memberNickName:{},\n      msgboddy: '',\n      // at 相关\n      atUserList2: false\n    };\n  },\n\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      membList: state => {\n        return state.search.membList;\n      },\n    }),\n    atWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '100px';\n      } else {\n        return '150px';\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    async $route() {\n      await this.init();\n      await this.inCurrentGroup();\n      this.stopVideo();\n    },\n    chatList(val) {\n      if (localStorage.getItem('specailChat') == 'true') {\n        localStorage.setItem('specailChat', false);\n      } else {\n        // this.scrollBottom();\n      }\n      console.log('val ====>',val);\n      if (val && val.length > 0) {\n        let msgType = val[val.length - 1].msgType;\n        if (msgType == '4' || msgType == '7') {\n          this.searchGroupMembersAndInfo();\n        } else if (\n          msgType == '1' ||\n          msgType == '2' ||\n          msgType == '6' ||\n          msgType == '9' ||\n          msgType == '10' ||\n          msgType == '15' ||\n          msgType == '25' ||\n          msgType == '40' ||\n          msgType == '61'\n        ) {\n          if (val[val.length - 1].fromIcon == undefined) {\n            val[val.length - 1].fromIcon = this.memberImg[val[val.length - 1].fromId];\n          }\n        }\n      }\n    },\n    getNetStatus(val) {\n      this.isNetOff = val == 'offline' ? true : false;\n    },\n    getSocketStatus(val) {\n      this.isReconn = val == 'online' ? false : true;\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.initFlag = true;\n    if (this.$route.query.item && this.$route.query.item['groupAuthByUser']) {\n      this.groupAuthByUser = this.$route.query.item['groupAuthByUser'];\n    }\n    this.item = this.$route.query.item;\n    bus.$on('closeMemberinfo',this.closeMember);\n  },\n  //方法集合\n  methods: {\n    // 打开图片查看器\n    openImgView () {\n      console.log('图片查看器=groupInfo=', this.groupInfo)\n      imgView(this.groupInfo.groupAvatar, this.groupInfo.id)\n    },\n    closeMember(){\n      this.groupSystemAble = false\n    },\n    //设置发送链接\n    async sendConnection() {\n      setGroupBase({\n        id: this.groupId,\n        sendConnectionStatus: this.groupSystemObj.sendUrl\n      }).then(async res => {\n        this.showResponseMessages(res);\n        if (res.code == '200') {\n          await this.updateGroupInfo({\n            sendConnectionStatus: this.groupSystemObj.sendUrl\n          });\n        }\n      });\n    },\n\n    //群成员备注\n    async saveRemark() {\n      let params = {\n        groupId: this.groupId,\n        userId: this.changeValueV.userId,\n        memberNotes: this.memberNotes.trim()\n      };\n      let res = await update_person_info(params);\n      if (res.code == '200') {\n        this.remarkVisible = false;\n        this.$message.success(res.msg);\n        await window.vm\n          .$knex('t_groups_member')\n          .where('group_id', '=', params.groupId)\n          .where('id', '=', params.userId)\n          .update({\n            member_notes: params.memberNotes,\n            member_notes_pinyin: convertToPinyin(params.memberNotes)\n          });\n        await this.queryMember();\n        if (this.$refs.groupmember) {\n          this.$nextTick(async () => {\n            if (this.groupSystemAble == true) {\n              await this.$refs.groupmember.onMemberOpen();\n            }\n          });\n        }\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n\n    //设置发送文件\n    sendPictures() {\n      setGroupBase({\n        id: this.groupId,\n        sendPicturesStatus: this.groupSystemObj.sendFile\n      }).then(async res => {\n        this.showResponseMessages(res);\n        if (res.code == '200') {\n          await this.updateGroupInfo({\n            sendPicturesStatus: this.groupSystemObj.sendFile\n          });\n        }\n      });\n    },\n\n    async updateGroupInfo(item) {\n      await window.vm\n        .$knex('t_groups')\n        .where({ group_id: this.groupId })\n        .update(item);\n    },\n\n    //群成员单聊\n    memberSingleChat() {\n      setGroupBase({\n        id: this.groupId,\n        memberSingleChatStatus: this.groupSystemObj.chatSingle\n      }).then(async res => {\n        this.showResponseMessages(res);\n        if (res.code == '200') {\n          await this.updateGroupInfo({\n            memberSingleChatStatus: this.groupSystemObj.chatSingle\n          });\n        }\n      });\n    },\n\n    //群成员禁言\n    forbiddenWords() {\n      setGroupBase({\n        id: this.groupId,\n        forbiddenWordsStatus: this.groupSystemObj.forbiddenWordsStatus\n      }).then(async res => {\n        if (res.code == '200') {\n          this.showResponseMessages(res);\n          await this.updateGroupInfo({\n            forbiddenWordsStatus: this.groupSystemObj.forbiddenWordsStatus\n          });\n        }\n      });\n    },\n\n    //群成员发送红包\n    sendRedpacket() {\n      setGroupBase({\n        id: this.groupId,\n        sendRedpacketStatus: this.groupSystemObj.sendRedpacketStatus\n      }).then(async res => {\n        this.showResponseMessages(res);\n        if (res.code == '200') {\n          await this.updateGroupInfo({\n            sendRedpacketStatus: this.groupSystemObj.sendRedpacketStatus\n          });\n        }\n      });\n    },\n\n    cancelSaveGroupType() {\n      //\n      const originIndex = this.groupTypeArr.findIndex(item => {\n        return item.label == this.groupType;\n      });\n      this.groupTypeActive = this.groupTypeArr[originIndex].value;\n      this.groupTypeVisible = false;\n    },\n\n    //设置群类型\n    saveGroupType(index) {\n      this.groupTypeVisible = false;\n      const item = this.groupTypeArr[index];\n      return setGroupBase({\n        id: this.groupId,\n        groupStatus: item.value\n      }).then(async res => {\n        if (res.code == '200') {\n          this.$message({\n            type: 'success',\n            message: res.msg\n          });\n          this.groupType = item.label;\n          this.groupTypeVisible = false; //成功\n          await SQLUtils.updateGroupsInfo(this.groupInfo);\n          // this.init();\n        }\n      });\n    },\n\n    //设置群类型\n    async groupTypeSelected(item, index) {\n      this.groupTypeActive = item.value;\n      this.groupTypeSelect = index;\n      // this.groupType = item.label;\n    },\n\n    showSenderName(item) {\n      let unknownName = item.refMsgBody.users ? item.refMsgBody.users[0].nickName : '';\n      let auth_status = this.getAuthStatusInGroup(item.fromId)\n      if (item.fromId == this.userId && item.msgType == '26') {\n        console.log(item.msgBody,'item.msgBody666')\n        if(item.msgBody.userId != this.userId){\n          item.fromName2 = this.memberNickName[item.msgBody.userId]\n        }\n        return this.$t('Universal_0036');\n      }else if ( (item.authStatus == 2 || item.authStatus == 1 ||  auth_status == 1 || auth_status == 2) &&\n          item.msgType == '26' && item.fromId != this.userId && item.fromId != item.msgBody.userId) {\n        if(item.fromId != item.msgBody.userId){\n          item.widthDrawFlag =true\n        }else{\n          item.widthDrawFlag =false\n        }\n        item.nickName = this.memberNickName[item.msgBody.userId]\n        return this.$t('chat_comm_member_0005');\n      }else if (this.authStatus == 3 && item.msgType == '26') {\n        return this.memberNickName[item.fromId] || item.nickName || unknownName || '';\n      }else if (this.authStatus == 3 && item.msgType != '26') {\n        // return this.memberFriendName[item.fromId] || item.friendFriendNotes || item.nickName || unknownName || '';\n        return item.nickName || unknownName || '';\n      }else {\n        return this.memberNickName[item.fromId] || this.memberAdminName[item.fromId] || unknownName || '';\n      }\n    },\n\n\n\n    cancelSaveGroupValidationgroup() {\n      const originIndex = this.groupValidationArr.findIndex(item => {\n        return item.name == this.groupValidation;\n      });\n      this.groupValidationActive = originIndex;\n      this.groupValidationVisible = false;\n    },\n\n    //加群验证\n    async saveGroupValidation(index) {\n      const item = this.groupValidationArr[index];\n      return setGroupBase({\n        id: this.groupId,\n        addCheck: item.value\n      }).then(async res => {\n        this.groupValidationActive = item.value;\n        this.groupValidation = item.name;\n        await window.vm\n          .$knex('t_groups')\n          .update('add_check', item.value)\n          .where('group_id', this.groupId);\n        this.showResponseMessages(res);\n        this.groupValidationVisible = false;\n        await this.init();\n      });\n    },\n\n    groupValidationSelected(item, index) {\n      this.groupValidationActive = index;\n    },\n\n\n    async onEditGroupInfo() {\n      this.$nextTick(async () => {\n        await this.$refs.groupInfoEdit.onPop();\n      });\n    },\n\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.init()\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {\n    // this.scrollBottom();\n  }, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeRouteUpdate(to, from, next) {\n    this.initDraft(from);\n    this.chatlistFlag=false;\n    next();\n  },\n\n  beforeRouteLeave(to, from, next) {\n    if (to.path !== \"/app/chat\") {\n      this.initDraft(from);\n      this.chatlistFlag = false;\n    }\n    next();\n  },\n  destroyed() {\n    bus.$off('closeMemberinfo',this.closeMember);\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n\n<style lang=\"less\" scoped>\n.box-card {\n  width: 150px;\n  position: absolute;\n  top: 10px;\n}\n.group-member-name-class {\n  color: #999999;\n  font-size: 12px;\n  margin: 0px 10px 0px 10px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  white-space: pre;\n  div {\n    padding-right: 2px;\n  }\n}\n.member-icon-class {\n  display: flex;\n  align-items: flex-start;\n  width: 42px;\n  height: 42px;\n  // border: 1px solid red;\n}\n.list {\n  display: flex;\n}\n.el-checkbox {\n  display: flex;\n  margin-right: 0;\n}\n.emojList {\n  span img {\n    width: 22px;\n    height: 22px;\n    padding: 3px;\n    &:hover {\n      box-shadow: 2px 2px 3px #888888;\n    }\n  }\n}\n.msgStatus {\n  position: absolute;\n  top: 35%;\n  left: 22px;\n}\n.mess-words {\n  position: relative;\n  width: 100%;\n\n  // p {\n  // font-size: 12px !important;\n  // margin-bottom: 3px !important;\n  // }\n}\n.other-msg {\n  top: -2px;\n}\n.self-msg {\n  left: 0;\n}\n\n.loadmore {\n  font-size: 12px;\n  text-align: center;\n  color: #2f54eb;\n  cursor: pointer;\n}\n.loadmore2 {\n  font-size: 12px;\n  text-align: center;\n  color: #2f54eb;\n}\n.nomore {\n  color: #666;\n}\n.el-loading-spinner {\n  margin-top: -7px;\n}\n.groupSystemBox {\n  box-sizing: border-box;\n  font-size: 14px;\n  width: 100%;\n  height: 100vh;\n  overflow-y: scroll;\n  .outGroup {\n    box-sizing: border-box;\n    text-align: center;\n    color: #eb552f;\n    height: 50px;\n    line-height: 50px;\n    width: 100%;\n    background-color: #fbfbfb;\n    position: absolute;\n    bottom: 0;\n    border-top: 1px solid #e1e1e1;\n    span {\n      cursor: pointer;\n    }\n  }\n  .top:first-child {\n    position: absolute;\n    z-index: 1;\n  }\n  .top {\n    width: 100%;\n    height: 50px;\n    background-color: #fbfbfb;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 10px;\n    span {\n      // font-weight: 500;\n      font-weight: 600;\n      font-size: 15px;\n      color: #333;\n    }\n    .el-icon-close {\n      font-size: 14px;\n    }\n    .el-icon-right {\n      font-size: 20px;\n    }\n  }\n\n  .content {\n    box-sizing: border-box;\n    width: 100%;\n    background-color: #fff;\n    font-size: 12px;\n    color: #333;\n    padding: 0 10px;\n    & > ul {\n      li {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        margin: 12px 0;\n        cursor: pointer;\n        span {\n          &:first-child {\n            margin-right: 10px;\n          }\n          &:last-child {\n            display: flex;\n            align-items: center;\n            max-width: 90px;\n          }\n        }\n      }\n      & > .authorityOpen {\n        li {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 100%;\n          padding: 0 20px;\n          box-sizing: border-box;\n        }\n      }\n\n      .many-select {\n        font-size: 12px;\n        font-weight: 400;\n        color: #666;\n      }\n\n      .el-icon-arrow-right {\n        color: #000;\n        font-size: 12px;\n      }\n    }\n  }\n}\n.dialog-footer {\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  margin: 0 auto;\n\n  /deep/ .dialog-footer {\n    width: 80%;\n  }\n  /deep/.el-button--mini,\n  .el-button--small {\n    width: 84px;\n    height: 28px;\n    font-size: 13px;\n  }\n  /deep/ .el-button--default .el-button--mini {\n    color: #333;\n    font-size: 13px;\n  }\n}\n.selectItem {\n  width: 100%;\n  margin: 0 auto;\n  li {\n    margin: 10px 0;\n    width: 100%;\n    line-height: 25px;\n    background-color: #f3f3f3;\n    color: #696969;\n    font-size: 13px;\n    text-align: center;\n    position: relative;\n    box-sizing: border-box;\n    position: relative;\n\n    .el-icon-check {\n      display: none;\n    }\n  }\n  li:hover {\n    background-color: #d6deff;\n  }\n  .active {\n    .el-icon-check {\n      display: inline-block;\n      font-size: 14px;\n      color: #2f54eb;\n      top: 6px;\n      position: absolute;\n      right: 6px;\n    }\n  }\n}\n//@import url(); 引入公共css类\n.chatother {\n  img {\n    // padding: 5px 10px;\n    width: 18px;\n    padding: 10px 10px 5px;\n    cursor: pointer;\n    height: 18px;\n  }\n\n  .emojIcon {\n    margin-left: 10px;\n  }\n}\n.el-drawer__wrapper {\n  top: 114px;\n}\n\n#resize {\n  height: 5px;\n  width: 100%;\n  cursor: n-resize;\n  border-bottom: #e4e4e4 solid 1px;\n}\n.message {\n  width: 100%;\n  background: #f6f6f6;\n  .mess-header {\n    height: 38px;\n    background: #fff;\n    padding: 0 20px;\n    box-sizing: border-box;\n    border-bottom: 1px solid #dddddd;\n    -webkit-app-region: drag;\n    span {\n      height: 20px;\n      line-height: 20px;\n      &:nth-child(2) {\n        margin: 0 12px;\n      }\n      &:nth-child(4) {\n        margin: 0 12px;\n      }\n    }\n    .mess-nav span {\n      cursor: pointer;\n    }\n    .mess-nav img {\n      width: 20px;\n      height: 20px;\n    }\n  }\n  .mess-detail {\n    width: 100%;\n    // padding: 20px 20px 0 20px;\n    padding: 10px 20px;\n    box-sizing: border-box;\n  }\n  .mess-detail-self {\n    width: 100%;\n    // padding: 20px 20px 0 20px;\n    padding: 10px 20px;\n    box-sizing: border-box;\n  }\n  .infotime {\n    text-align: center;\n    color: rgb(153, 153, 153);\n    margin-top: 10px;\n    font-size: 12px;\n  }\n  .mess-head {\n    width: 44px;\n    height: 44px;\n    background: #ccc;\n    display: inline-block;\n    border-radius: 50%;\n    margin-top: 8px;\n    img {\n      width: 100%;\n      height: 100%;\n      display: block;\n      border-radius: 50%;\n    }\n  }\n  .mess-name {\n    font-size: 18px;\n\n    font-weight: bold;\n    color: rgba(51, 51, 51, 1);\n  }\n  .mess-owner {\n    width: 36px;\n    height: 16px;\n    background: rgba(221, 51, 51, 1);\n    border-radius: 3px;\n    display: inline-block;\n    font-size: 10px;\n    color: #fff;\n    text-align: center;\n    line-height: 16px;\n    margin: 0 0 2px 5px;\n  }\n  .words {\n    display: flex;\n    min-height: 23px;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    word-break: break-all;\n    font-size: 14px;\n\n    font-weight: 400;\n    color: rgba(0, 0, 0, 1);\n  }\n  #resizeBox {\n    position: relative;\n    height: calc(100vh - 61px);\n  }\n  .message-box {\n    height: calc(100vh - 23px);\n    overflow: hidden;\n  }\n  .mess-talk {\n    // height: 80vh;\n    overflow: auto;\n    height: calc(100vh - 228px);\n    &:nth-last-child(2) {\n      padding-bottom: 20px;\n    }\n  }\n  .by-at {\n    position: fixed;\n    bottom: 170px;\n    right: 20px;\n    height: 37px;\n    line-height: 37px;\n    opacity: 0.98;\n    background: #e6e6e6;\n    border-radius: 4px;\n    box-shadow: 0px 0px 6px 0px #b0b0b0;\n    color: #333;\n    font-size: 13px;\n    padding: 0 10px;\n    .el-icon-close {\n      cursor: pointer;\n      float: right;\n      line-height: 37px;\n    }\n  }\n .by-more-list {\n    position: fixed;\n    bottom: 170px;\n    right: 20px;\n    height: 37px;\n    line-height: 37px;\n    opacity: 0.98;\n    background: #e6e6e6;\n    border-radius: 4px;\n    box-shadow: 0px 0px 6px 0px #b0b0b0;\n    color: #333;\n    font-size: 13px;\n    padding: 0 10px;\n    /deep/.el-icon-arrow-down {\n      font-weight: 600; \n      color: #000;\n    }\n  }\n\n  .mess-footer {\n    position: relative;\n    height: 161px;\n    background: #f6f6f6;\n    box-sizing: border-box;\n  }\n  .mess-square {\n    width: 100%;\n    // height: 55%;\n    height: calc( 100% - 80px );\n    input {\n      width: 100%;\n      height: 42px;\n      border: none;\n      background: rgba(243, 243, 243, 1);\n      border-radius: 8px;\n    }\n\n    // /deep/ .ql-container .ql-editor span {\n    //   background: none !important;\n    //   color: black !important;\n    // }\n  }\n  // .mess-send {\n  //   width: 160px;\n  //   flex: 1;\n  //   box-sizing: border-box;\n  //   height: 34px;\n  //   span {\n  //     cursor: pointer;\n  //   }\n  // }\n  .mess-send {\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n    right: 10px;\n    box-sizing: border-box;\n    height: 34px;\n    span {\n      cursor: pointer;\n    }\n\n    /deep/ .el-button--mini,\n    .el-button--small {\n      width: 66px;\n      height: 28px;\n      margin: 0 10px 3px 0;\n\n      span {\n        font-size: 14px;\n\n        font-weight: 400;\n        letter-spacing: 2px;\n      }\n    }\n  }\n  .send {\n    color: #fff;\n    position: absolute;\n    right: 0px;\n    bottom: 0px;\n  }\n  .quote {\n    max-width: 80%;\n    position: absolute;\n    left: 20px;\n    bottom: 6px;\n\n    span {\n      display: inline-block;\n      width: 100%;\n      overflow: hidden;\n      white-space: pre;\n      text-overflow: ellipsis;\n    }\n  }\n  .bq {\n    display: contents;\n  }\n  .add {\n    display: contents;\n  }\n\n  .mess-member {\n    width: 100%;\n    background: rgba(255, 255, 255, 1);\n    padding: 8px;\n  }\n  .mumber-header {\n    .add-blue {\n      background: blue;\n      width: 50px;\n      height: 24px;\n      border-radius: 5px;\n      display: inline-block;\n      text-align: center;\n    }\n    .mumber-number {\n      height: 24px;\n      font-size: 15px;\n\n      font-weight: 400;\n      color: rgba(51, 51, 51, 1);\n    }\n  }\n  .member-member {\n    overflow: scroll;\n    max-height: calc(100vh - 220px);\n    margin: 20px 0 0 0;\n    ul li {\n      margin: 6px 0 0 0;\n    }\n  }\n  .member-head {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background: #ccc;\n    display: inline-block;\n    img {\n      width: 32px;\n      height: 32px;\n      display: block;\n      border-radius: 50%;\n    }\n  }\n  .member-name {\n    font-size: 15px;\n    width: 125px;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    margin: 0 5px;\n  }\n  .remarkStatus {\n    .tit {\n      display: flex;\n      align-items: center;\n      img {\n        // width: 44px;\n        // height: 44px;\n        width: 32px;\n        height: 32px;\n        margin-right: 10px;\n        border-radius: 50%;\n      }\n    }\n    textarea {\n      height: 60px;\n      margin: 15px 0;\n    }\n    .member-notes {\n      margin: 10px 0;\n\n      /deep/ .el-input--small {\n        height: 55px;\n      }\n\n      /deep/ .el-textarea__inner {\n        height: 54px;\n        background: transparent;\n        border: 1px solid #d7d7d7;\n      }\n\n      /deep/ .el-input__count {\n        font-size: 12px;\n        color: #666;\n      }\n    }\n  }\n  .mess-checklist {\n    width: 200px;\n    background: rgba(255, 255, 255, 1);\n    border: 1px solid rgba(221, 221, 221, 1);\n  }\n  .liMenu {\n    cursor: pointer;\n    text-align: center;\n    height: 35px;\n    line-height: 35px;\n    font-size: 15px;\n  }\n  .liMenu.hover {\n    color: #fff;\n    background: #2f54eb;\n  }\n  .tip-msg {\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n  }\n}\n.audio-wrap img {\n  width: 30px;\n  vertical-align: middle;\n  padding-right: 4px;\n}\n.group-name {\n  color: #333333;\n  font-size: 14px;\n  font-weight: 500;\n  max-width: 190px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: pre;\n  .iconfont {\n    font-size: 12px;\n  }\n}\n.group-people {\n  color: #333333;\n  font-size: 14px;\n\n  font-weight: 500;\n}\n.noticeContainer {\n  width: 100%;\n  padding: 5px 11px 7px 11px;\n  box-sizing: border-box;\n  background: #fdf6ec;\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  z-index: 1;\n  .upGroupNotice {\n    width: 100%;\n    font-size: 12px;\n    font-weight: 400;\n    text-align: left;\n    color: #eda368;\n    line-height: 17px;\n  }\n  .el-icon-close {\n    width: 9px;\n    height: 9px;\n    font-size: 9px;\n    color: #eda368;\n  }\n}\n.appealContainer{\n  width: 100%;\n  padding: 7px 20px 8px 14px;\n  box-sizing: border-box;\n  background: #fef4e5;\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  z-index: 1;\n  .appealNotice{\n    width: 100%;\n    font-size: 12px;\n    font-weight: 400;\n    text-align: left;\n    color: #f7931a;\n    line-height: 17px;\n  }\n  .el-icon-arrow-right {\n    font-size: 14px;\n    color: #f7931a;\n  }\n}\n</style>\n\n<style lang=\"less\" scoped>\n.mutiPanel {\n  /deep/ .el-drawer__body {\n    display: flex;\n    justify-content: center;\n    span {\n      width: 90px;\n      margin: 0 10px;\n    }\n    img {\n      margin-top: 0;\n    }\n  }\n}\n.popupmsg {\n  /deep/ .el-dialog__header {\n    padding-top: 10px;\n  }\n  /deep/ .el-dialog__title {\n    font-size: 14px;\n\n    // font-weight:500;\n    font-weight: 600;\n    color: #333;\n    line-height: 20px;\n  }\n  /deep/ .el-dialog__headerbtn {\n    top: 10px;\n  }\n\n  /deep/ .el-dialog__body span {\n    font-size: 13px;\n\n    font-weight: 400;\n    color: #666;\n    line-height: 17px;\n  }\n}\n\n.note-member {\n  /deep/ .el-dialog__body {\n    padding: 0 25px;\n    color: #333;\n    height: 170px;\n\n    span {\n      line-height: 15px;\n    }\n  }\n\n  /deep/ .dialog-footer {\n    width: 90%;\n    margin: 30px auto 20px;\n  }\n\n  /deep/ .el-button--primary {\n    color: #fff !important;\n  }\n\n  .cancelBtn {\n    border: none;\n    background: #d8d8d8;\n    color: #333;\n    font-size: 13px;\n  }\n  .sureBtn {\n    background: #2f54eb;\n    color: #fff !important;\n    font-size: 13px;\n\n    /deep/ span {\n      color: #fff;\n      line-height: 10px;\n    }\n  }\n}\n\n.voice-accept {\n  position: relative;\n}\n.voice-icon {\n  display: flex;\n  justify-content: flex-start;\n  color: #ff0000;\n  font-size: 18px;\n  position: absolute;\n  top: 8px;\n  right: -18px;\n}\n#talkbubblee {\n  &.fullOfEmoji {\n    max-width: 61%;\n  }\n  &.samllFullOfEmoji {\n    max-width: 60%;\n  }\n}\n#talkbubble {\n  &.fullOfEmoji {\n    max-width: 62%;\n  }\n  &.samllFullOfEmoji {\n    max-width: 61%;\n  }\n  &.fileBox {\n    max-width: none ;\n  }\n}\n#talkbubble,#talkbubblee{\n  &.imgTopSpace{\n    padding: 0 10px;\n  }\n  &.fileBox {\n    max-width: none;\n    width: 250px !important;\n  }\n}\n</style>\n\n<style lang=\"less\">\n.el-tag--dark.el-tag--info {\n  background-color: #e7e7e7;\n  border: none;\n  color: #727272;\n}\n.el-tag--dark.el-tag--info .el-tag__close {\n  color: #666;\n}\n.ql-container {\n  height: 100%;\n  overflow-y: scroll;\n  width: 100%;\n  background: #f6f6f6;\n}\n.ql-toolbar.ql-snow + .ql-container.ql-snow {\n  border: none;\n  // padding-top: 5px;\n}\n.ql-toolbar.ql-snow {\n  border: none;\n  padding-top: 0;\n}\n.ql-toolbar {\n  display: none;\n}\n.ql-tooltip {\n  display: none;\n}\n.ql-editor {\n  padding: 0;\n  line-height: 0px;\n  .mention{\n    background: transparent ;\n    > span {\n      margin: 0;\n    }\n  }\n}\n.ql-editor .ql-editor {\n  padding: 0 10px 10px;\n  line-height: 20px;\n}\n.ql-editor img {\n  max-width: 150px !important;\n  vertical-align: text-bottom;\n  margin: 0 1px;\n}\n.quoteBubble {\n  min-width: 60px;\n  // max-width: 110px;\n\n  background: #e7e7e7;\n  padding: 8px 10px;\n  border-radius: 5px;\n  color: #727272;\n  margin-top: 13px;\n  font-size: 12px;\n  width: fit-content;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  .quotImg {\n    display: inline-block;\n    cursor: pointer;\n    img {\n      height: 30px;\n    }\n  }\n}\n#talkbubble {\n  // line-height: 30px;\n  line-height: 23px;\n  font-size: 14px;\n  min-width: 30px;\n  // max-width: 300px;\n  // max-width: 65%;\n  max-width: 62%;\n  // min-height: 30px;\n  min-height: 23px;\n  // background: #fff;\n  position: relative;\n  // border-radius: 10px;\n  margin-left: 10px;\n  padding: 7px 10px;\n}\n// #talkbubble:before {\n//   content: \"\";\n//   position: absolute;\n//   right: 100%;\n//   // top: 18px;\n//   top: 13px;\n//   border-top: 6px solid transparent;\n//   border-right: 10px solid #fff;\n//   border-bottom: 6px solid transparent;\n// }\n\n#talkbubblee {\n  line-height: 23px;\n  font-size: 14px;\n  // min-width: 30px;\n  min-width: 30px;\n  // max-width: 300px;\n  // max-width: 65%;\n  max-width: 63%;\n  // min-height: 30px;\n  min-height: 23px;\n  // background: #cfe1ff;\n  position: relative;\n  // border-radius: 10px;\n  margin-right: 10px;\n  padding: 7px 10px;\n}\n#talkbubblee .flex-sub p,\n#talkbubble .flex-sub p {\n  font-size: 14px;\n  color: #000;\n  margin-right: 10px;\n}\n#talkbubblee .flex-sub p:last-child,\n#talkbubble {\n  color: #000;\n}\n#talkbubblee .load-border,\n#talkbubble .load-border {\n  border-top: 1px solid #ddd;\n  margin-top: 5px;\n  padding: 5px 0 0;\n  font-size: 12px;\n  color: #000;\n}\n\n#talkbubblee .load-border span,\n#talkbubble .load-border span {\n  display: inline-block;\n  margin-left: 14px;\n}\n// #talkbubblee:before {\n//   content: \"\";\n//   position: absolute;\n//   left: 100%;\n//   // top: 18px;\n//   top: 13px;\n//   border-top: 6px solid transparent;\n//   border-left: 10px solid #cfe1ff;\n//   border-bottom: 6px solid transparent;\n// }\n#talkbubble .flex-direction p {\n  width: 88%;\n}\n.drawerbox {\n  width: 250px !important;\n}\n.message-box-class {\n  width: 280px;\n  .el-message-box__headerbtn {\n    display: none;\n  }\n}\n.popContainer {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  z-index: 999;\n  width: 100%;\n  background: #ddd;\n  opacity: 0.5;\n}\n.group-edit-icon {\n  margin-left: 10px;\n}\n.send-btn {\n  height: 28px;\n  width: 68px;\n  background: #2f54eb;\n  box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  border-radius: 4px;\n  color: #fff;\n  font-size: 13px;\n  border: none;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  position: absolute;\n  right: 0;\n  bottom: 6px;\n}\n.captureScreenClass {\n  font-size: 9px;\n  position: absolute;\n  top: 10px;\n  margin-left: -8px;\n  padding: 4px;\n  cursor: pointer;\n}\n.screenSelectDivClass {\n  background: #ffffff;\n  width: 160px;\n  height: 20px;\n  line-height: 20px;\n}\n.screenSelectClass {\n  margin-top: 3px;\n  margin-left: 4px;\n  margin-right: -2px;\n}\n.sendFile {\n  img,\n  span {\n    vertical-align: middle;\n    margin-right: 10px;\n  }\n  padding-bottom: 10px;\n}\n.sendFileInput {\n  border: #d7d7d7 solid 1px;\n}\n.sendFileInput textarea {\n  cursor: default;\n}\n// .atBoxActive,.atInput.selected{\n//   background-color: #D6DEFF;\n// }\n// .atBoxHover {\n//   background: #f7f7f7;\n// }\n// .atBox {\n//   position: absolute;\n//   overflow: scroll;\n//   width: 170px;\n//   max-height: 180px;\n//   // bottom: 25px;\n//   background: #fff;\n//   border: 1px solid #dddddd;\n//   border-radius: 4px;\n//   box-shadow: 0px 2px 8px 0px #888888;\n//   ul {\n//     overflow: hidden;\n//     li {\n//       display: flex;\n//       align-items: center;\n//       padding: 0 5px;\n//       /*text-overflow: ellipsis;\n//       overflow: hidden;\n//       text-overflow: ellipsis;\n//       display: -webkit-box;\n//       -webkit-line-clamp: 1;\n//       -webkit-box-orient: vertical;*/\n//       cursor: pointer;\n//       img {\n//         margin: 5px 2px;\n//       }\n//       span {\n//         -ms-text-overflow: ellipsis;\n//         text-overflow: ellipsis;\n//         overflow: hidden;\n//         white-space: nowrap;\n//         max-width: 110px;\n//         display: inline-block;\n//       }\n//     }\n//   }\n// }\n// .atInput {\n//   max-width: 170px;\n//   max-height: 183px;\n//   overflow: scroll;\n//   ul {\n//     li {\n//       text-overflow: ellipsis;\n//       &:first-child {\n//         padding-left: 19px;\n//       }\n//     }\n//   }\n//   img {\n//     display: inline-block;\n//     width: 25px;\n//     height: 25px;\n//     border-radius: 15px;\n//     &:not([src]) {\n//       opacity: 0;\n//     }\n//   }\n//   span,\n//   img {\n//     vertical-align: middle;\n//     margin: 0 5px;\n//   }\n// }\n</style>\n<style>\n.screen-select-class {\n  /*top: 61px !important;*/\n  padding: 0 4px 4px 0;\n}\n.screen-select-class .popper__arrow {\n  display: none;\n}\n.screen-select-class .el-checkbox__input {\n  margin-top: 3px;\n  margin-left: 4px;\n  margin-right: -2px;\n}\n.actives {\n  background-color: #f00;\n}\n.pre {\n  white-space: pre;\n}\n.notice-wrap {\n  max-width: 60%;\n  margin: 5px auto;\n  text-align: center;\n  font-size: 12px;\n  color: #999;\n  padding: 10px 0;\n  word-break: break-all;\n}\n</style>\n",
    "cssJson": [
      {
        ".box-card": {
          "width": "150px",
          "position": "absolute",
          "top": "10px"
        },
        ".group-member-name-class": {
          "color": "#999999",
          "font-size": "12px",
          "margin": "0px 10px 0px 10px",
          "display": "flex",
          "align-items": "center",
          "width": "100%",
          "white-space": "pre",
          "div": {
            "padding-right": "2px"
          }
        },
        ".member-icon-class": {
          "display": "flex",
          "align-items": "flex-start",
          "width": "42px",
          "height": "42px"
        },
        ".list": {
          "display": "flex"
        },
        ".el-checkbox": {
          "display": "flex",
          "margin-right": "0"
        },
        ".emojList": {
          "span img": {
            "width": "22px",
            "height": "22px",
            "padding": "3px",
            "&:hover": {
              "box-shadow": "2px 2px 3px #888888"
            }
          }
        },
        ".msgStatus": {
          "position": "absolute",
          "top": "35%",
          "left": "22px"
        },
        ".mess-words": {
          "position": "relative",
          "width": "100%"
        },
        ".other-msg": {
          "top": "-2px"
        },
        ".self-msg": {
          "left": "0"
        },
        ".loadmore": {
          "font-size": "12px",
          "text-align": "center",
          "color": "#2f54eb",
          "cursor": "pointer"
        },
        ".loadmore2": {
          "font-size": "12px",
          "text-align": "center",
          "color": "#2f54eb"
        },
        ".nomore": {
          "color": "#666"
        },
        ".el-loading-spinner": {
          "margin-top": "-7px"
        },
        ".groupSystemBox": {
          "box-sizing": "border-box",
          "font-size": "14px",
          "width": "100%",
          "height": "100vh",
          "overflow-y": "scroll",
          ".outGroup": {
            "box-sizing": "border-box",
            "text-align": "center",
            "color": "#eb552f",
            "height": "50px",
            "line-height": "50px",
            "width": "100%",
            "background-color": "#fbfbfb",
            "position": "absolute",
            "bottom": "0",
            "border-top": "1px solid #e1e1e1",
            "span": {
              "cursor": "pointer"
            }
          },
          ".top:first-child": {
            "position": "absolute",
            "z-index": "1"
          },
          ".top": {
            "width": "100%",
            "height": "50px",
            "background-color": "#fbfbfb",
            "display": "flex",
            "justify-content": "space-between",
            "align-items": "center",
            "box-sizing": "border-box",
            "padding": "0 10px",
            "span": {
              "font-weight": "600",
              "font-size": "15px",
              "color": "#333"
            },
            ".el-icon-close": {
              "font-size": "14px"
            },
            ".el-icon-right": {
              "font-size": "20px"
            }
          },
          ".content": {
            "box-sizing": "border-box",
            "width": "100%",
            "background-color": "#fff",
            "font-size": "12px",
            "color": "#333",
            "padding": "0 10px",
            "& > ul": {
              "li": {
                "display": "flex",
                "justify-content": "space-between",
                "align-items": "center",
                "width": "100%",
                "margin": "12px 0",
                "cursor": "pointer",
                "span": {
                  "&:first-child": {
                    "margin-right": "10px"
                  },
                  "&:last-child": {
                    "display": "flex",
                    "align-items": "center",
                    "max-width": "90px"
                  }
                }
              },
              "& > .authorityOpen": {
                "li": {
                  "display": "flex",
                  "justify-content": "space-between",
                  "align-items": "center",
                  "width": "100%",
                  "padding": "0 20px",
                  "box-sizing": "border-box"
                }
              },
              ".many-select": {
                "font-size": "12px",
                "font-weight": "400",
                "color": "#666"
              },
              ".el-icon-arrow-right": {
                "color": "#000",
                "font-size": "12px"
              }
            }
          }
        },
        ".dialog-footer": {
          "display": "flex",
          "justify-content": "space-between",
          "width": "80%",
          "margin": "0 auto",
          "/deep/ .dialog-footer": {
            "width": "80%"
          },
          "/deep/.el-button--mini,  .el-button--small": {
            "width": "84px",
            "height": "28px",
            "font-size": "13px"
          },
          "/deep/ .el-button--default .el-button--mini": {
            "color": "#333",
            "font-size": "13px"
          }
        },
        ".selectItem": {
          "width": "100%",
          "margin": "0 auto",
          "li": {
            "margin": "10px 0",
            "width": "100%",
            "line-height": "25px",
            "background-color": "#f3f3f3",
            "color": "#696969",
            "font-size": "13px",
            "text-align": "center",
            "position": "relative",
            "box-sizing": "border-box",
            ".el-icon-check": {
              "display": "none"
            }
          },
          "li:hover": {
            "background-color": "#d6deff"
          },
          ".active": {
            ".el-icon-check": {
              "display": "inline-block",
              "font-size": "14px",
              "color": "#2f54eb",
              "top": "6px",
              "position": "absolute",
              "right": "6px"
            }
          }
        },
        ".chatother": {
          "img": {
            "width": "18px",
            "padding": "10px 10px 5px",
            "cursor": "pointer",
            "height": "18px"
          },
          ".emojIcon": {
            "margin-left": "10px"
          }
        },
        ".el-drawer__wrapper": {
          "top": "114px"
        },
        "#resize": {
          "height": "5px",
          "width": "100%",
          "cursor": "n-resize",
          "border-bottom": "#e4e4e4 solid 1px"
        },
        ".message": {
          "width": "100%",
          "background": "#f6f6f6",
          ".mess-header": {
            "height": "38px",
            "background": "#fff",
            "padding": "0 20px",
            "box-sizing": "border-box",
            "border-bottom": "1px solid #dddddd",
            "-webkit-app-region": "drag",
            "span": {
              "height": "20px",
              "line-height": "20px",
              "&:nth-child(2)": {
                "margin": "0 12px"
              },
              "&:nth-child(4)": {
                "margin": "0 12px"
              }
            },
            ".mess-nav span": {
              "cursor": "pointer"
            },
            ".mess-nav img": {
              "width": "20px",
              "height": "20px"
            }
          },
          ".mess-detail": {
            "width": "100%",
            "padding": "10px 20px",
            "box-sizing": "border-box"
          },
          ".mess-detail-self": {
            "width": "100%",
            "padding": "10px 20px",
            "box-sizing": "border-box"
          },
          ".infotime": {
            "text-align": "center",
            "color": "rgb(153, 153, 153)",
            "margin-top": "10px",
            "font-size": "12px"
          },
          ".mess-head": {
            "width": "44px",
            "height": "44px",
            "background": "#ccc",
            "display": "inline-block",
            "border-radius": "50%",
            "margin-top": "8px",
            "img": {
              "width": "100%",
              "height": "100%",
              "display": "block",
              "border-radius": "50%"
            }
          },
          ".mess-name": {
            "font-size": "18px",
            "font-weight": "bold",
            "color": "rgba(51, 51, 51, 1)"
          },
          ".mess-owner": {
            "width": "36px",
            "height": "16px",
            "background": "rgba(221, 51, 51, 1)",
            "border-radius": "3px",
            "display": "inline-block",
            "font-size": "10px",
            "color": "#fff",
            "text-align": "center",
            "line-height": "16px",
            "margin": "0 0 2px 5px"
          },
          ".words": {
            "display": "flex",
            "min-height": "23px",
            "align-items": "center",
            "justify-content": "center",
            "flex-wrap": "wrap",
            "word-break": "break-all",
            "font-size": "14px",
            "font-weight": "400",
            "color": "rgba(0, 0, 0, 1)"
          },
          "#resizeBox": {
            "position": "relative",
            "height": "calc(100vh - 61px)"
          },
          ".message-box": {
            "height": "calc(100vh - 23px)",
            "overflow": "hidden"
          },
          ".mess-talk": {
            "overflow": "auto",
            "height": "calc(100vh - 228px)",
            "&:nth-last-child(2)": {
              "padding-bottom": "20px"
            }
          },
          ".by-at": {
            "position": "fixed",
            "bottom": "170px",
            "right": "20px",
            "height": "37px",
            "line-height": "37px",
            "opacity": "0.98",
            "background": "#e6e6e6",
            "border-radius": "4px",
            "box-shadow": "0px 0px 6px 0px #b0b0b0",
            "color": "#333",
            "font-size": "13px",
            "padding": "0 10px",
            ".el-icon-close": {
              "cursor": "pointer",
              "float": "right",
              "line-height": "37px"
            }
          },
          ".by-more-list": {
            "position": "fixed",
            "bottom": "170px",
            "right": "20px",
            "height": "37px",
            "line-height": "37px",
            "opacity": "0.98",
            "background": "#e6e6e6",
            "border-radius": "4px",
            "box-shadow": "0px 0px 6px 0px #b0b0b0",
            "color": "#333",
            "font-size": "13px",
            "padding": "0 10px",
            "/deep/.el-icon-arrow-down": {
              "font-weight": "600",
              "color": "#000"
            }
          },
          ".mess-footer": {
            "position": "relative",
            "height": "161px",
            "background": "#f6f6f6",
            "box-sizing": "border-box"
          },
          ".mess-square": {
            "width": "100%",
            "height": "calc( 100% - 80px )",
            "input": {
              "width": "100%",
              "height": "42px",
              "border": "none",
              "background": "rgba(243, 243, 243, 1)",
              "border-radius": "8px"
            }
          },
          ".mess-send": {
            "width": "100%",
            "position": "absolute",
            "bottom": "0",
            "right": "10px",
            "box-sizing": "border-box",
            "height": "34px",
            "span": {
              "cursor": "pointer"
            },
            "/deep/ .el-button--mini,    .el-button--small": {
              "width": "66px",
              "height": "28px",
              "margin": "0 10px 3px 0",
              "span": {
                "font-size": "14px",
                "font-weight": "400",
                "letter-spacing": "2px"
              }
            }
          },
          ".send": {
            "color": "#fff",
            "position": "absolute",
            "right": "0px",
            "bottom": "0px"
          },
          ".quote": {
            "max-width": "80%",
            "position": "absolute",
            "left": "20px",
            "bottom": "6px",
            "span": {
              "display": "inline-block",
              "width": "100%",
              "overflow": "hidden",
              "white-space": "pre",
              "text-overflow": "ellipsis"
            }
          },
          ".bq": {
            "display": "contents"
          },
          ".add": {
            "display": "contents"
          },
          ".mess-member": {
            "width": "100%",
            "background": "rgba(255, 255, 255, 1)",
            "padding": "8px"
          },
          ".mumber-header": {
            ".add-blue": {
              "background": "blue",
              "width": "50px",
              "height": "24px",
              "border-radius": "5px",
              "display": "inline-block",
              "text-align": "center"
            },
            ".mumber-number": {
              "height": "24px",
              "font-size": "15px",
              "font-weight": "400",
              "color": "rgba(51, 51, 51, 1)"
            }
          },
          ".member-member": {
            "overflow": "scroll",
            "max-height": "calc(100vh - 220px)",
            "margin": "20px 0 0 0",
            "ul li": {
              "margin": "6px 0 0 0"
            }
          },
          ".member-head": {
            "width": "32px",
            "height": "32px",
            "border-radius": "50%",
            "background": "#ccc",
            "display": "inline-block",
            "img": {
              "width": "32px",
              "height": "32px",
              "display": "block",
              "border-radius": "50%"
            }
          },
          ".member-name": {
            "font-size": "15px",
            "width": "125px",
            "text-overflow": "ellipsis",
            "overflow": "hidden",
            "white-space": "nowrap",
            "margin": "0 5px"
          },
          ".remarkStatus": {
            ".tit": {
              "display": "flex",
              "align-items": "center",
              "img": {
                "width": "32px",
                "height": "32px",
                "margin-right": "10px",
                "border-radius": "50%"
              }
            },
            "textarea": {
              "height": "60px",
              "margin": "15px 0"
            },
            ".member-notes": {
              "margin": "10px 0",
              "/deep/ .el-input--small": {
                "height": "55px"
              },
              "/deep/ .el-textarea__inner": {
                "height": "54px",
                "background": "transparent",
                "border": "1px solid #d7d7d7"
              },
              "/deep/ .el-input__count": {
                "font-size": "12px",
                "color": "#666"
              }
            }
          },
          ".mess-checklist": {
            "width": "200px",
            "background": "rgba(255, 255, 255, 1)",
            "border": "1px solid rgba(221, 221, 221, 1)"
          },
          ".liMenu": {
            "cursor": "pointer",
            "text-align": "center",
            "height": "35px",
            "line-height": "35px",
            "font-size": "15px"
          },
          ".liMenu.hover": {
            "color": "#fff",
            "background": "#2f54eb"
          },
          ".tip-msg": {
            "height": "100%",
            "align-items": "center",
            "justify-content": "center"
          }
        },
        ".audio-wrap img": {
          "width": "30px",
          "vertical-align": "middle",
          "padding-right": "4px"
        },
        ".group-name": {
          "color": "#333333",
          "font-size": "14px",
          "font-weight": "500",
          "max-width": "190px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "pre",
          ".iconfont": {
            "font-size": "12px"
          }
        },
        ".group-people": {
          "color": "#333333",
          "font-size": "14px",
          "font-weight": "500"
        },
        ".noticeContainer": {
          "width": "100%",
          "padding": "5px 11px 7px 11px",
          "box-sizing": "border-box",
          "background": "#fdf6ec",
          "display": "flex",
          "justify-content": "space-between",
          "position": "absolute",
          "z-index": "1",
          ".upGroupNotice": {
            "width": "100%",
            "font-size": "12px",
            "font-weight": "400",
            "text-align": "left",
            "color": "#eda368",
            "line-height": "17px"
          },
          ".el-icon-close": {
            "width": "9px",
            "height": "9px",
            "font-size": "9px",
            "color": "#eda368"
          }
        },
        ".appealContainer": {
          "width": "100%",
          "padding": "7px 20px 8px 14px",
          "box-sizing": "border-box",
          "background": "#fef4e5",
          "display": "flex",
          "justify-content": "space-between",
          "position": "absolute",
          "z-index": "1",
          ".appealNotice": {
            "width": "100%",
            "font-size": "12px",
            "font-weight": "400",
            "text-align": "left",
            "color": "#f7931a",
            "line-height": "17px"
          },
          ".el-icon-arrow-right": {
            "font-size": "14px",
            "color": "#f7931a"
          }
        }
      },
      {
        ".mutiPanel": {
          "/deep/ .el-drawer__body": {
            "display": "flex",
            "justify-content": "center",
            "span": {
              "width": "90px",
              "margin": "0 10px"
            },
            "img": {
              "margin-top": "0"
            }
          }
        },
        ".popupmsg": {
          "/deep/ .el-dialog__header": {
            "padding-top": "10px"
          },
          "/deep/ .el-dialog__title": {
            "font-size": "14px",
            "font-weight": "600",
            "color": "#333",
            "line-height": "20px"
          },
          "/deep/ .el-dialog__headerbtn": {
            "top": "10px"
          },
          "/deep/ .el-dialog__body span": {
            "font-size": "13px",
            "font-weight": "400",
            "color": "#666",
            "line-height": "17px"
          }
        },
        ".note-member": {
          "/deep/ .el-dialog__body": {
            "padding": "0 25px",
            "color": "#333",
            "height": "170px",
            "span": {
              "line-height": "15px"
            }
          },
          "/deep/ .dialog-footer": {
            "width": "90%",
            "margin": "30px auto 20px"
          },
          "/deep/ .el-button--primary": {
            "color": "#fff !important"
          },
          ".cancelBtn": {
            "border": "none",
            "background": "#d8d8d8",
            "color": "#333",
            "font-size": "13px"
          },
          ".sureBtn": {
            "background": "#2f54eb",
            "color": "#fff !important",
            "font-size": "13px",
            "/deep/ span": {
              "color": "#fff",
              "line-height": "10px"
            }
          }
        },
        ".voice-accept": {
          "position": "relative"
        },
        ".voice-icon": {
          "display": "flex",
          "justify-content": "flex-start",
          "color": "#ff0000",
          "font-size": "18px",
          "position": "absolute",
          "top": "8px",
          "right": "-18px"
        },
        "#talkbubblee": {
          "&.fullOfEmoji": {
            "max-width": "61%"
          },
          "&.samllFullOfEmoji": {
            "max-width": "60%"
          }
        },
        "#talkbubble": {
          "&.fullOfEmoji": {
            "max-width": "62%"
          },
          "&.samllFullOfEmoji": {
            "max-width": "61%"
          },
          "&.fileBox": {
            "max-width": "none"
          }
        },
        "#talkbubble,#talkbubblee": {
          "&.imgTopSpace": {
            "padding": "0 10px"
          },
          "&.fileBox": {
            "max-width": "none",
            "width": "250px !important"
          }
        }
      },
      {
        ".el-tag--dark.el-tag--info": {
          "background-color": "#e7e7e7",
          "border": "none",
          "color": "#727272"
        },
        ".el-tag--dark.el-tag--info .el-tag__close": {
          "color": "#666"
        },
        ".ql-container": {
          "height": "100%",
          "overflow-y": "scroll",
          "width": "100%",
          "background": "#f6f6f6"
        },
        ".ql-toolbar.ql-snow + .ql-container.ql-snow": {
          "border": "none"
        },
        ".ql-toolbar.ql-snow": {
          "border": "none",
          "padding-top": "0"
        },
        ".ql-toolbar": {
          "display": "none"
        },
        ".ql-tooltip": {
          "display": "none"
        },
        ".ql-editor": {
          "padding": "0",
          "line-height": "0px",
          ".mention": {
            "background": "transparent",
            "> span": {
              "margin": "0"
            }
          }
        },
        ".ql-editor .ql-editor": {
          "padding": "0 10px 10px",
          "line-height": "20px"
        },
        ".ql-editor img": {
          "max-width": "150px !important",
          "vertical-align": "text-bottom",
          "margin": "0 1px"
        },
        ".quoteBubble": {
          "min-width": "60px",
          "background": "#e7e7e7",
          "padding": "8px 10px",
          "border-radius": "5px",
          "color": "#727272",
          "margin-top": "13px",
          "font-size": "12px",
          "width": "fit-content",
          "overflow": "hidden",
          "white-space": "nowrap",
          "text-overflow": "ellipsis",
          ".quotImg": {
            "display": "inline-block",
            "cursor": "pointer",
            "img": {
              "height": "30px"
            }
          }
        },
        "#talkbubble": {
          "line-height": "23px",
          "font-size": "14px",
          "min-width": "30px",
          "max-width": "62%",
          "min-height": "23px",
          "position": "relative",
          "margin-left": "10px",
          "padding": "7px 10px"
        },
        "#talkbubblee": {
          "line-height": "23px",
          "font-size": "14px",
          "min-width": "30px",
          "max-width": "63%",
          "min-height": "23px",
          "position": "relative",
          "margin-right": "10px",
          "padding": "7px 10px"
        },
        "#talkbubblee .flex-sub p,#talkbubble .flex-sub p": {
          "font-size": "14px",
          "color": "#000",
          "margin-right": "10px"
        },
        "#talkbubblee .flex-sub p:last-child,#talkbubble": {
          "color": "#000"
        },
        "#talkbubblee .load-border,#talkbubble .load-border": {
          "border-top": "1px solid #ddd",
          "margin-top": "5px",
          "padding": "5px 0 0",
          "font-size": "12px",
          "color": "#000"
        },
        "#talkbubblee .load-border span,#talkbubble .load-border span": {
          "display": "inline-block",
          "margin-left": "14px"
        },
        "#talkbubble .flex-direction p": {
          "width": "88%"
        },
        ".drawerbox": {
          "width": "250px !important"
        },
        ".message-box-class": {
          "width": "280px",
          ".el-message-box__headerbtn": {
            "display": "none"
          }
        },
        ".popContainer": {
          "position": "absolute",
          "right": "0",
          "bottom": "0",
          "z-index": "999",
          "width": "100%",
          "background": "#ddd",
          "opacity": "0.5"
        },
        ".group-edit-icon": {
          "margin-left": "10px"
        },
        ".send-btn": {
          "height": "28px",
          "width": "68px",
          "background": "#2f54eb",
          "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
          "border-radius": "4px",
          "color": "#fff",
          "font-size": "13px",
          "border": "none",
          "user-select": "none",
          "outline": "none",
          "cursor": "pointer",
          "position": "absolute",
          "right": "0",
          "bottom": "6px"
        },
        ".captureScreenClass": {
          "font-size": "9px",
          "position": "absolute",
          "top": "10px",
          "margin-left": "-8px",
          "padding": "4px",
          "cursor": "pointer"
        },
        ".screenSelectDivClass": {
          "background": "#ffffff",
          "width": "160px",
          "height": "20px",
          "line-height": "20px"
        },
        ".screenSelectClass": {
          "margin-top": "3px",
          "margin-left": "4px",
          "margin-right": "-2px"
        },
        ".sendFile": {
          "img,  span": {
            "vertical-align": "middle",
            "margin-right": "10px"
          },
          "padding-bottom": "10px"
        },
        ".sendFileInput": {
          "border": "#d7d7d7 solid 1px"
        },
        ".sendFileInput textarea": {
          "cursor": "default"
        }
      },
      {
        ".screen-select-class": {
          "padding": "0 4px 4px 0"
        },
        ".screen-select-class .popper__arrow": {
          "display": "none"
        },
        ".screen-select-class .el-checkbox__input": {
          "margin-top": "3px",
          "margin-left": "4px",
          "margin-right": "-2px"
        },
        ".actives": {
          "background-color": "#f00"
        },
        ".pre": {
          "white-space": "pre"
        },
        ".notice-wrap": {
          "max-width": "60%",
          "margin": "5px auto",
          "text-align": "center",
          "font-size": "12px",
          "color": "#999",
          "padding": "10px 0",
          "word-break": "break-all"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/Tab.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- tab 切换 -->\n<template>\n  <div>\n    <ul class=\"commont-tab-wrap cf\" @click=\"tabHand\" ref=\"ul\">\n      <!-- <li :class=\"{active: index == 0}\" v-for=\"(item, index) in data\" :key=\"index\" :data-index ='index'>\n          {{item}}\n      </li> -->\n      <router-link :to=\"item.path\" tag=\"li\" v-for=\"(item, index) in data\" :key=\"index\" :data-index=\"index\">\n        {{ item.label }}\n      </router-link>\n      <!-- <li>邮箱验证</li>\n      <li>谷歌验证</li> -->\n    </ul>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    data: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    tabHand(e) {\n      if (e.target.nodeName.toLowerCase() === 'li') {\n        // let arrLi = [...this.$refs.ul.children];\n        // let arrLi = document.querySelectorAll(`#common-tab-wrap${this.data.length} li`);\n        // e.target.className = \"active\";\n        let activeIndex = e.target.getAttribute('data-index');\n        // arrLi.map((item, index) => {\n        //   if (activeIndex != index) {\n        //     item.classList.remove(\"active\");\n        //   }\n        // });\n        this.$emit('tabClickHand', this.data[activeIndex], activeIndex);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- tab 切换 -->\n<template>\n  <div>\n    <ul class=\"commont-tab-wrap cf\" @click=\"tabHand\" ref=\"ul\">\n      <!-- <li :class=\"{active: index == 0}\" v-for=\"(item, index) in data\" :key=\"index\" :data-index ='index'>\n          {{item}}\n      </li> -->\n      <router-link :to=\"item.path\" tag=\"li\" v-for=\"(item, index) in data\" :key=\"index\" :data-index=\"index\">\n        {{ item.label }}\n      </router-link>\n      <!-- <li>邮箱验证</li>\n      <li>谷歌验证</li> -->\n    </ul>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    data: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    tabHand(e) {\n      if (e.target.nodeName.toLowerCase() === 'li') {\n        // let arrLi = [...this.$refs.ul.children];\n        // let arrLi = document.querySelectorAll(`#common-tab-wrap${this.data.length} li`);\n        // e.target.className = \"active\";\n        let activeIndex = e.target.getAttribute('data-index');\n        // arrLi.map((item, index) => {\n        //   if (activeIndex != index) {\n        //     item.classList.remove(\"active\");\n        //   }\n        // });\n        this.$emit('tabClickHand', this.data[activeIndex], activeIndex);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n</style>\n",
    "cssJson": [
      {}
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/funds/tradepsd/from/EmailFormPass.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 邮箱验证 -->\n<template>\n  <div class=\"trade-email-wrap\">\n    <el-form :model=\"ruleEmailForm\" :rules=\"rules\" ref=\"ruleEmailForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n      <div v-if=\"comForm.email\">\n        <el-form-item label=\"当前邮箱\">\n          <!-- <el-input v-model=\"ruleEmailForm.email\" disabled></el-input> -->\n          <div style=\"color: #151F34\">{{ comForm.email }}</div>\n        </el-form-item>\n        <el-form-item label=\"请输入验证码\" prop=\"validCode\">\n          <el-input v-model=\"ruleEmailForm.validCode\" autocomplete=\"off\" maxlength=\"6\">\n            <span slot=\"suffix\" v-if=\"this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n              countdownNumber + 's'\n            }}</span>\n            <span\n              slot=\"suffix\"\n              v-if=\"!this.timer\"\n              style=\"\n                color: #2F54EB;\n                margin-right: 10px;\n                user-select: none;\n                cursor: pointer;\n              \"\n              @click=\"getCode\"\n              >获取验证码</span\n            >\n          </el-input>\n        </el-form-item>\n      </div>\n      <el-form-item label=\"请输入新密码\" prop=\"password\">\n        <el-input v-model=\"ruleEmailForm.password\" autocomplete=\"off\" :type=\"typeInput\" maxlength=\"16\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认新密码\" prop=\"checkPassword\">\n        <el-input v-model=\"ruleEmailForm.checkPassword\" autocomplete=\"off\" maxlength=\"16\" :type=\"typeInputSure\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item>\n        <button class=\"submit-btn\" @click.prevent=\"submitForm('ruleEmailForm')\">\n          确定\n        </button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport { send_code_email } from '../server';\n\nimport myMixin from '../mixin';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    comForm: {\n      type: Object,\n      dafault() {\n        return {};\n      }\n    }\n  },\n  data() {\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleEmailForm.checkPassword !== '') {\n          this.$refs.ruleEmailForm.validateField('checkPassword');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入确认交易密码'));\n      } else if (value !== this.ruleEmailForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    //这里存放数据\n    return {\n      labelWidth: '120px',\n      typeInput: 'password',\n      typeInputSure: 'password',\n      ruleEmailForm: {\n        validCode: '',\n        password: '',\n        checkPassword: ''\n      },\n      rules: {\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^[a-zA-Z0-9]{6,16}$/,\n            message: '密码为6-16位的数字或字母'\n          },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPassword: [\n          {\n            required: true,\n            pattern: /^[a-zA-Z0-9]{6,16}$/,\n            message: '密码为6-16位的数字或字母'\n          },\n          { required: true, validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      orShowSure: true,\n      timer: null,\n      countdownNumber: 120\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  mixins: [myMixin],\n  //方法集合\n  methods: {\n    parentHandleclick() {\n      if (this.$refs['ruleEmailForm'] != undefined) {\n        this.$refs['ruleEmailForm'].resetFields();\n      }\n    },\n    getCode() {\n      this.countdownNumber = 120;\n      this.timer = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.sendCodeHand();\n    },\n    countdown() {\n      // 倒计时\n      if (this.countdownNumber == 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.countdownNumber -= 1;\n    },\n    async sendCodeHand() {\n      let res = await send_code_email({ templateCode: 'user_15' });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.submitTradeForms(this.ruleEmailForm, 'email');\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n      this.typeInput = this.orShow ? 'password' : 'text';\n    },\n    tabPsdHandSure() {\n      this.orShowSure = !this.orShowSure;\n      this.typeInputSure = this.orShowSure ? 'password' : 'text';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getUserInfo();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {\n    clearInterval(this.timer);\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 邮箱验证 -->\n<template>\n  <div class=\"trade-email-wrap\">\n    <el-form :model=\"ruleEmailForm\" :rules=\"rules\" ref=\"ruleEmailForm\" :label-width=\"labelWidth\" class=\"demo-ruleEmailForm\">\n      <div v-if=\"comForm.email\">\n        <el-form-item label=\"当前邮箱\">\n          <!-- <el-input v-model=\"ruleEmailForm.email\" disabled></el-input> -->\n          <div style=\"color: #151F34\">{{ comForm.email }}</div>\n        </el-form-item>\n        <el-form-item label=\"请输入验证码\" prop=\"validCode\">\n          <el-input v-model=\"ruleEmailForm.validCode\" autocomplete=\"off\" maxlength=\"6\">\n            <span slot=\"suffix\" v-if=\"this.timer\" style=\"color: #2F54EB; margin-right: 10px; user-select: none\">{{\n              countdownNumber + 's'\n            }}</span>\n            <span\n              slot=\"suffix\"\n              v-if=\"!this.timer\"\n              style=\"\n                color: #2F54EB;\n                margin-right: 10px;\n                user-select: none;\n                cursor: pointer;\n              \"\n              @click=\"getCode\"\n              >获取验证码</span\n            >\n          </el-input>\n        </el-form-item>\n      </div>\n      <el-form-item label=\"请输入新密码\" prop=\"password\">\n        <el-input v-model=\"ruleEmailForm.password\" autocomplete=\"off\" :type=\"typeInput\" maxlength=\"16\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShow\"\n              @click=\"tabPsdHand\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"请确认新密码\" prop=\"checkPassword\">\n        <el-input v-model=\"ruleEmailForm.checkPassword\" autocomplete=\"off\" maxlength=\"16\" :type=\"typeInputSure\">\n          <span slot=\"suffix\" class style=\"color: #2F54EB; margin-right: 10px\">\n            <img\n              src=\"../../../../assets/images/close.png\"\n              v-show=\"orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n            <img\n              src=\"../../../../assets/images/open.png\"\n              v-show=\"!orShowSure\"\n              @click=\"tabPsdHandSure\"\n              width=\"20px\"\n              style=\"vertical-align: middle; cursor: pointer\"\n              alt\n            />\n          </span>\n        </el-input>\n      </el-form-item>\n      <el-form-item>\n        <button class=\"submit-btn\" @click.prevent=\"submitForm('ruleEmailForm')\">\n          确定\n        </button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport { send_code_email } from '../server';\n\nimport myMixin from '../mixin';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    comForm: {\n      type: Object,\n      dafault() {\n        return {};\n      }\n    }\n  },\n  data() {\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleEmailForm.checkPassword !== '') {\n          this.$refs.ruleEmailForm.validateField('checkPassword');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入确认交易密码'));\n      } else if (value !== this.ruleEmailForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    //这里存放数据\n    return {\n      labelWidth: '120px',\n      typeInput: 'password',\n      typeInputSure: 'password',\n      ruleEmailForm: {\n        validCode: '',\n        password: '',\n        checkPassword: ''\n      },\n      rules: {\n        validCode: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            pattern: /^[0-9]{6,6}$/,\n            message: '请输入6位数字'\n          }\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^[a-zA-Z0-9]{6,16}$/,\n            message: '密码为6-16位的数字或字母'\n          },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPassword: [\n          {\n            required: true,\n            pattern: /^[a-zA-Z0-9]{6,16}$/,\n            message: '密码为6-16位的数字或字母'\n          },\n          { required: true, validator: validatePass2, trigger: 'blur' }\n        ]\n      },\n      orShow: true,\n      orShowSure: true,\n      timer: null,\n      countdownNumber: 120\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  mixins: [myMixin],\n  //方法集合\n  methods: {\n    parentHandleclick() {\n      if (this.$refs['ruleEmailForm'] != undefined) {\n        this.$refs['ruleEmailForm'].resetFields();\n      }\n    },\n    getCode() {\n      this.countdownNumber = 120;\n      this.timer = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.sendCodeHand();\n    },\n    countdown() {\n      // 倒计时\n      if (this.countdownNumber == 0) {\n        clearInterval(this.timer);\n        this.timer = null;\n        return;\n      }\n      this.countdownNumber -= 1;\n    },\n    async sendCodeHand() {\n      let res = await send_code_email({ templateCode: 'user_15' });\n      if (res.data == true) {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.submitTradeForms(this.ruleEmailForm, 'email');\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tabPsdHand() {\n      this.orShow = !this.orShow;\n      this.typeInput = this.orShow ? 'password' : 'text';\n    },\n    tabPsdHandSure() {\n      this.orShowSure = !this.orShowSure;\n      this.typeInputSure = this.orShowSure ? 'password' : 'text';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.getUserInfo();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {\n    clearInterval(this.timer);\n  }, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.trade-email-wrap {\n  .submit-btn {\n    margin-top: 38px;\n    height: 40px;\n    background: #2f54eb;\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 100%;\n    outline: none;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    cursor: pointer;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".trade-email-wrap": {
          ".submit-btn": {
            "margin-top": "38px",
            "height": "40px",
            "background": "#2f54eb",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "100%",
            "outline": "none",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "cursor": "pointer"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/AudioLoading.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"audio-loading-main\">\n    <div class=\"loading\">{{ loading }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AudioLoading',\n  data() {\n    return {\n      loading: '',\n      showWindowTimer: 0,\n      count: 60\n    };\n  },\n  props: {\n    waiting: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  methods: {\n    main() {\n      setInterval(() => {\n        if (this.loading == '...') {\n          this.loading = '';\n        } else {\n          this.loading += '.';\n        }\n      }, 600);\n    }\n  },\n  mounted() {\n    this.main();\n  }\n};\n</script>",
    "originData": "<template>\n  <div class=\"audio-loading-main\">\n    <div class=\"loading\">{{ loading }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AudioLoading',\n  data() {\n    return {\n      loading: '',\n      showWindowTimer: 0,\n      count: 60\n    };\n  },\n  props: {\n    waiting: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  methods: {\n    main() {\n      setInterval(() => {\n        if (this.loading == '...') {\n          this.loading = '';\n        } else {\n          this.loading += '.';\n        }\n      }, 600);\n    }\n  },\n  mounted() {\n    this.main();\n  }\n};\n</script>\n\n<style scoped>\n.audio-loading-main {\n  width: 10px;\n}\n.loading {\n  color: white;\n}\n</style>\n",
    "cssJson": [
      {
        ".audio-loading-main": {
          "width": "10px"
        },
        ".loading": {
          "color": "white"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/components/title.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- member title -->\r\n<template>\r\n  <div style=\"background: #fff;height:38px\">\r\n    <div class=\"mess-header flex align-center justify-between drag\">\r\n      <div class=\"mess-name\">\r\n        <slot></slot>\r\n      </div>\r\n      <div class=\"mess-nav flex align-center noDrag setnav\">\r\n        <!-- <span\r\n            class=\"liMenu\"\r\n            @click=\"gourl(item,idx)\"\r\n            v-for=\"(item,idx) in menutop\"\r\n            :key=\"idx\"\r\n        >{{item}}</span>-->\r\n        <!-- <i class=\"el-icon-s-custom\" @click=\"showPerson()\"></i> -->\r\n        <!-- <el-popover placement=\"bottom\" width=\"180\" trigger=\"click\">\r\n          <ul>\r\n            <li\r\n              class=\"liMenu\"\r\n              @click=\"son(item,id)\"\r\n              v-for=\"(item,id) in menu\"\r\n              :key=\"id\"\r\n            >{{item.name}}</li>\r\n          </ul>\r\n          <el-button slot=\"reference\">click 激活</el-button>\r\n          <img src=\"../../../../assets/images/set.png\" slot=\"reference\" />\r\n        </el-popover> -->\r\n        <span @click=\"goInfo\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_info.png\" alt />\r\n        </span>\r\n        <span @click=\"goGroup\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_member.png\" alt />\r\n        </span>\r\n        <span @click=\"goSetting\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_config.png\" alt />\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <!-- <div v-if=\"!rightStatus\" id=\"checklist\" class=\"mess-checklist\"> -->\r\n\r\n    <!-- </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\r\n//例如：import 《组件名称》 from '《组件路径》';\r\nimport { contGrpSize } from '@/utils';\r\nexport default {\r\n  //import引入的组件需要注入到对象中才能使用\r\n  props: ['authStatus'],\r\n\r\n  components: {},\r\n  data() {\r\n    //这里存放数据\r\n    return {\r\n      drawer: false,\r\n      rightStatus: true,\r\n      menutop: ['消息'],\r\n      menu:\r\n        this.authStatus == 3\r\n          ? [\r\n            { id: '1', name: '查看社区信息' },\r\n            { id: '2', name: '查看社区成员' },\r\n            { id: '4', name: '设置' }\r\n          ]\r\n          : [\r\n            { id: '1', name: '查看社区信息' },\r\n            { id: '2', name: '查看社区成员' },\r\n            { id: '3', name: '社区管理' },\r\n            { id: '4', name: '设置' }\r\n          ]\r\n      // menu:[{id:'1',name:\"查看群信息\"}, {id:'2',name:\"查看群成员\"},{id:'4',name:\"设置\"}]\r\n    };\r\n  },\r\n  //监听属性 类似于data概念\r\n  computed: {},\r\n  //监控data中的数据变化\r\n  watch: {\r\n    authStatus(a) {\r\n      if (a == 3) {\r\n        this.menu = [\r\n          { id: '1', name: '查看社区信息' },\r\n          { id: '2', name: '查看社区成员' },\r\n          { id: '4', name: '设置' }\r\n        ];\r\n      } else {\r\n        this.menu = [\r\n          { id: '1', name: '查看社区信息' },\r\n          { id: '2', name: '查看社区成员' },\r\n          { id: '3', name: '社区管理' },\r\n          { id: '4', name: '设置' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  //方法集合\r\n  methods: {\r\n    goSetting() {\r\n      this.$emit('goSetting', 1);\r\n    },\r\n    goGroup() {\r\n      this.$emit('goSetting', 2);\r\n    },\r\n    goInfo() {\r\n      this.$emit('goSetting', 0);\r\n    },\r\n    showPerson() {},\r\n    setClick() {\r\n      this.rightStatus = true;\r\n    },\r\n    son(item) {\r\n      if (item.id == 4) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/setting',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 1) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/information',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 3) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/manage',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 2) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/member',\r\n          query: {\r\n            targetId: sessionStorage.getItem('groupId'),\r\n            timer: new Date().getTime()\r\n          }\r\n        });\r\n      }\r\n    },\r\n    gourl(item, idx) {\r\n      if (idx == 0) {\r\n        let current = {\r\n          targetId: sessionStorage.getItem('groupId'),\r\n          uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\r\n        };\r\n        this.$store.dispatch('SET_CURRENT_CHAT', current);\r\n        this.$router.push({\r\n          path: '/app/chat/group/message',\r\n          query: {\r\n            targetId: sessionStorage.getItem('groupId'),\r\n            timer: new Date().getTime(),\r\n            // friendName: encodeURI(this.groupobj.groupName),\r\n            friendName: null,\r\n            uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\r\n          }\r\n        });\r\n      } else if (idx == 1) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/files',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      }\r\n    }\r\n  },\r\n  //生命周期 - 创建完成（可以访问当前this实例）\r\n  created() {\r\n    /* console.log(\r\n      sessionStorage.authStatus,\r\n      \"sessionStorage.authStatussessionStorage.authStatus\"\r\n    ); */\r\n  },\r\n  //生命周期 - 挂载完成（可以访问DOM元素）\r\n  mounted() {},\r\n  beforeCreate() {}, //生命周期 - 创建之前\r\n  beforeMount() {}, //生命周期 - 挂载之前\r\n  beforeUpdate() {}, //生命周期 - 更新之前\r\n  updated() {}, //生命周期 - 更新之后\r\n  beforeDestroy() {}, //生命周期 - 销毁之前\r\n  destroyed() {}, //生命周期 - 销毁完成\r\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\r\n};\r\n</script>",
    "originData": "<!-- member title -->\r\n<template>\r\n  <div style=\"background: #fff;height:38px\">\r\n    <div class=\"mess-header flex align-center justify-between drag\">\r\n      <div class=\"mess-name\">\r\n        <slot></slot>\r\n      </div>\r\n      <div class=\"mess-nav flex align-center noDrag setnav\">\r\n        <!-- <span\r\n            class=\"liMenu\"\r\n            @click=\"gourl(item,idx)\"\r\n            v-for=\"(item,idx) in menutop\"\r\n            :key=\"idx\"\r\n        >{{item}}</span>-->\r\n        <!-- <i class=\"el-icon-s-custom\" @click=\"showPerson()\"></i> -->\r\n        <!-- <el-popover placement=\"bottom\" width=\"180\" trigger=\"click\">\r\n          <ul>\r\n            <li\r\n              class=\"liMenu\"\r\n              @click=\"son(item,id)\"\r\n              v-for=\"(item,id) in menu\"\r\n              :key=\"id\"\r\n            >{{item.name}}</li>\r\n          </ul>\r\n          <el-button slot=\"reference\">click 激活</el-button>\r\n          <img src=\"../../../../assets/images/set.png\" slot=\"reference\" />\r\n        </el-popover> -->\r\n        <span @click=\"goInfo\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_info.png\" alt />\r\n        </span>\r\n        <span @click=\"goGroup\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_member.png\" alt />\r\n        </span>\r\n        <span @click=\"goSetting\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_config.png\" alt />\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <!-- <div v-if=\"!rightStatus\" id=\"checklist\" class=\"mess-checklist\"> -->\r\n\r\n    <!-- </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\r\n//例如：import 《组件名称》 from '《组件路径》';\r\nimport { contGrpSize } from '@/utils';\r\nexport default {\r\n  //import引入的组件需要注入到对象中才能使用\r\n  props: ['authStatus'],\r\n\r\n  components: {},\r\n  data() {\r\n    //这里存放数据\r\n    return {\r\n      drawer: false,\r\n      rightStatus: true,\r\n      menutop: ['消息'],\r\n      menu:\r\n        this.authStatus == 3\r\n          ? [\r\n            { id: '1', name: '查看社区信息' },\r\n            { id: '2', name: '查看社区成员' },\r\n            { id: '4', name: '设置' }\r\n          ]\r\n          : [\r\n            { id: '1', name: '查看社区信息' },\r\n            { id: '2', name: '查看社区成员' },\r\n            { id: '3', name: '社区管理' },\r\n            { id: '4', name: '设置' }\r\n          ]\r\n      // menu:[{id:'1',name:\"查看群信息\"}, {id:'2',name:\"查看群成员\"},{id:'4',name:\"设置\"}]\r\n    };\r\n  },\r\n  //监听属性 类似于data概念\r\n  computed: {},\r\n  //监控data中的数据变化\r\n  watch: {\r\n    authStatus(a) {\r\n      if (a == 3) {\r\n        this.menu = [\r\n          { id: '1', name: '查看社区信息' },\r\n          { id: '2', name: '查看社区成员' },\r\n          { id: '4', name: '设置' }\r\n        ];\r\n      } else {\r\n        this.menu = [\r\n          { id: '1', name: '查看社区信息' },\r\n          { id: '2', name: '查看社区成员' },\r\n          { id: '3', name: '社区管理' },\r\n          { id: '4', name: '设置' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  //方法集合\r\n  methods: {\r\n    goSetting() {\r\n      this.$emit('goSetting', 1);\r\n    },\r\n    goGroup() {\r\n      this.$emit('goSetting', 2);\r\n    },\r\n    goInfo() {\r\n      this.$emit('goSetting', 0);\r\n    },\r\n    showPerson() {},\r\n    setClick() {\r\n      this.rightStatus = true;\r\n    },\r\n    son(item) {\r\n      if (item.id == 4) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/setting',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 1) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/information',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 3) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/manage',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 2) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/member',\r\n          query: {\r\n            targetId: sessionStorage.getItem('groupId'),\r\n            timer: new Date().getTime()\r\n          }\r\n        });\r\n      }\r\n    },\r\n    gourl(item, idx) {\r\n      if (idx == 0) {\r\n        let current = {\r\n          targetId: sessionStorage.getItem('groupId'),\r\n          uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\r\n        };\r\n        this.$store.dispatch('SET_CURRENT_CHAT', current);\r\n        this.$router.push({\r\n          path: '/app/chat/group/message',\r\n          query: {\r\n            targetId: sessionStorage.getItem('groupId'),\r\n            timer: new Date().getTime(),\r\n            // friendName: encodeURI(this.groupobj.groupName),\r\n            friendName: null,\r\n            uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\r\n          }\r\n        });\r\n      } else if (idx == 1) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/files',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      }\r\n    }\r\n  },\r\n  //生命周期 - 创建完成（可以访问当前this实例）\r\n  created() {\r\n    /* console.log(\r\n      sessionStorage.authStatus,\r\n      \"sessionStorage.authStatussessionStorage.authStatus\"\r\n    ); */\r\n  },\r\n  //生命周期 - 挂载完成（可以访问DOM元素）\r\n  mounted() {},\r\n  beforeCreate() {}, //生命周期 - 创建之前\r\n  beforeMount() {}, //生命周期 - 挂载之前\r\n  beforeUpdate() {}, //生命周期 - 更新之前\r\n  updated() {}, //生命周期 - 更新之后\r\n  beforeDestroy() {}, //生命周期 - 销毁之前\r\n  destroyed() {}, //生命周期 - 销毁完成\r\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n//@import url(); 引入公共css类\r\n.mess-header {\r\n  height: 38px;\r\n  background: #fff;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n  border-bottom: 1px solid #e4e4e4;\r\n  span {\r\n    height: 20px;\r\n    line-height: 20px;\r\n    &:nth-child(2) {\r\n      margin: 0 12px;\r\n    }\r\n    &:nth-child(4) {\r\n      margin: 0 12px;\r\n    }\r\n  }\r\n\r\n  .mess-nav span {\r\n    cursor: pointer;\r\n  }\r\n  .setnav span {\r\n    padding: 5px 3px !important;\r\n  }\r\n  .mess-nav img {\r\n    width: 23px;\r\n    height: 23px;\r\n  }\r\n  .mess-name {\r\n    font-weight: 600;\r\n  }\r\n}\r\n.mess-checklist {\r\n  position: absolute;\r\n  right: 0;\r\n  width: 200px;\r\n  background: rgba(255, 255, 255, 1);\r\n  border: 1px solid rgba(221, 221, 221, 1);\r\n  z-index: 10000;\r\n}\r\n.liMenu {\r\n  cursor: pointer;\r\n  text-align: center;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-size: 15px;\r\n}\r\n.liMenu:hover {\r\n  color: #fff;\r\n  background: #2f54eb;\r\n}\r\n</style>\r\n",
    "cssJson": [
      {
        ".mess-header": {
          "height": "38px",
          "background": "#fff",
          "padding": "0 20px",
          "box-sizing": "border-box",
          "border-bottom": "1px solid #e4e4e4",
          "span": {
            "height": "20px",
            "line-height": "20px",
            "&:nth-child(2)": {
              "margin": "0 12px"
            },
            "&:nth-child(4)": {
              "margin": "0 12px"
            }
          },
          ".mess-nav span": {
            "cursor": "pointer"
          },
          ".setnav span": {
            "padding": "5px 3px !important"
          },
          ".mess-nav img": {
            "width": "23px",
            "height": "23px"
          },
          ".mess-name": {
            "font-weight": "600"
          }
        },
        ".mess-checklist": {
          "position": "absolute",
          "right": "0",
          "width": "200px",
          "background": "rgba(255, 255, 255, 1)",
          "border": "1px solid rgba(221, 221, 221, 1)",
          "z-index": "10000"
        },
        ".liMenu": {
          "cursor": "pointer",
          "text-align": "center",
          "height": "40px",
          "line-height": "40px",
          "font-size": "15px"
        },
        ".liMenu:hover": {
          "color": "#fff",
          "background": "#2f54eb"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/contact/list.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 好友列表 -->\n<template>\n  <div class=\"contact-list-wrap\">\n    <search></search>\n    <ul class=\"flex text-center\">\n      <li\n        :class=\"activeIndex == index ? 'active' : ''\"\n        v-for=\"(item, index) in tabsArr\"\n        :key=\"index\"\n        @click=\"tabHand(index)\"\n      >\n        <i :class=\"item['iconClass']\"></i>\n        <span class=\"tab-item\" v-show=\"activeIndex == index\">{{\n          item[\"label\"]\n        }}</span>\n      </li>\n    </ul>\n    <div class=\"tab-list-item\">\n      <!-- <component\n        v-bind:is=\"getComponent['com']\"\n        ref=\"coms\"\n        :list=\"getComponent['list']\"\n        :availableScrollHeight=\"availableScrollHeight\"\n      ></component> -->\n      <Relation\n        v-show=\"activeIndex == 0\"\n        :list=\"friendsList\"\n        ref=\"coms0\"\n        :availableScrollHeight=\"availableScrollHeight\"\n      />\n      <Group\n        v-show=\"activeIndex == 1\"\n        :list=\"groupList\"\n        ref=\"coms1\"\n        :availableScrollHeight=\"availableScrollHeight\"\n      />\n      <Discussion\n        v-show=\"activeIndex == 2\"\n        :list=\"discussionList\"\n        ref=\"coms2\"\n        :availableScrollHeight=\"availableScrollHeight\"\n      />\n    </div>\n    <AddBtn />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Group from \"@/view/contact/group\";\nimport Relation from \"@/view/contact/relation\";\nimport Discussion from \"@/view/contact/discussion\";\nimport AddBtn from \"@/view/add-friends-group\";\nimport { GET_FRIENDS_LIST, GET_GROUP_LIST } from \"@/store/types/\";\nimport Search from \"@/components/search\";\nimport { mapGetters } from \"vuex\";\n// import { cloneDeep } from \"lodash\"\nconst LIHEIGHT = 67,\n  LITITLEHEIGHT = 34;\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Group,\n    Relation,\n    Discussion,\n    AddBtn,\n    Search,\n  },\n  data() {\n    return {\n      activeIndex: 0,\n    };\n  },\n  computed: {\n    ...mapGetters([\"discussionList\", \"groupList\", \"friendsList\"]),\n    tabsArr() {\n      return [\n        { label: this.$t(\"chat_search_0003\"), iconClass: \"iconfont icon-user\" },\n        {\n          label: this.$t(\"chat_search_0005\"),\n          iconClass: \"iconfont icon-user-group-Fill\",\n        },\n        { label: this.$t(\"chat_search_0007\"), iconClass: \"iconfont icon-laba\" },\n      ];\n    },\n    getComponent() {\n      switch (this.activeIndex) {\n      case 0:\n        return {\n          com: Relation,\n          list: this.friendsList,\n        };\n      case 1:\n        return {\n          com: Group,\n          list: this.groupList,\n        };\n      case 2:\n        return {\n          com: Discussion,\n          list: this.discussionList,\n        };\n      default:\n        return {\n          com: Relation,\n          list: this.friendsList,\n        };\n      }\n    },\n    availableScrollHeight() {\n      let {\n          joinList = [],\n          manageList = [],\n          ownerList = [],\n        } = this.groupList || {}, count = 0;\n      switch (this.activeIndex) {\n      case 0:\n        return ((this.friendsList?.length || 0) + 1) * LIHEIGHT;\n      case 1:\n        joinList.length && count++;\n        manageList.length && count++;\n        ownerList.length && count++;\n        return (\n          (manageList.length + ownerList.length + joinList.length) *\n              LIHEIGHT +\n            count * LITITLEHEIGHT\n        );\n      case 2:\n        return (this.discussionList?.length || 0) * LIHEIGHT;\n      default:\n        return 0;\n      }\n    },\n  },\n  watch: {\n    activeIndex(v) {\n      if (v == 0) {\n        // 联系人\n        this.$store.dispatch(GET_FRIENDS_LIST);\n      } else {\n        // 群聊列表、 讨论组列表\n        this.$store.dispatch(GET_GROUP_LIST);\n      }\n    },\n  },\n  methods: {\n    tabHand(i) {\n      this.activeIndex = i;\n    },\n    // win 拖拽之后 scollview 刷新\n    winResize() {\n      // let instance = this.$refs.coms;\n      let instance = this.$refs[`coms${this.activeIndex}`];\n      instance?.$refs?.scroll?.update?.();\n      instance?.$refs?.scroll?.handleScroll?.();\n      console.log(\"scroll ===> 滑动更新\",'如果有必要 一次性更新其他滚动条的状态');\n    },\n  },\n  created() {\n    // 联系人\n    this.$store.dispatch(GET_FRIENDS_LIST);\n  },\n  mounted() {\n    this.$remote.getCurrentWindow().addListener(\"resize\", this.winResize);\n  },\n  beforeDestroy() {\n    this.$remote.getCurrentWindow().removeListener(\"resize\", this.winResize);\n  },\n};\n</script>",
    "originData": "<!-- 好友列表 -->\n<template>\n  <div class=\"contact-list-wrap\">\n    <search></search>\n    <ul class=\"flex text-center\">\n      <li\n        :class=\"activeIndex == index ? 'active' : ''\"\n        v-for=\"(item, index) in tabsArr\"\n        :key=\"index\"\n        @click=\"tabHand(index)\"\n      >\n        <i :class=\"item['iconClass']\"></i>\n        <span class=\"tab-item\" v-show=\"activeIndex == index\">{{\n          item[\"label\"]\n        }}</span>\n      </li>\n    </ul>\n    <div class=\"tab-list-item\">\n      <!-- <component\n        v-bind:is=\"getComponent['com']\"\n        ref=\"coms\"\n        :list=\"getComponent['list']\"\n        :availableScrollHeight=\"availableScrollHeight\"\n      ></component> -->\n      <Relation\n        v-show=\"activeIndex == 0\"\n        :list=\"friendsList\"\n        ref=\"coms0\"\n        :availableScrollHeight=\"availableScrollHeight\"\n      />\n      <Group\n        v-show=\"activeIndex == 1\"\n        :list=\"groupList\"\n        ref=\"coms1\"\n        :availableScrollHeight=\"availableScrollHeight\"\n      />\n      <Discussion\n        v-show=\"activeIndex == 2\"\n        :list=\"discussionList\"\n        ref=\"coms2\"\n        :availableScrollHeight=\"availableScrollHeight\"\n      />\n    </div>\n    <AddBtn />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Group from \"@/view/contact/group\";\nimport Relation from \"@/view/contact/relation\";\nimport Discussion from \"@/view/contact/discussion\";\nimport AddBtn from \"@/view/add-friends-group\";\nimport { GET_FRIENDS_LIST, GET_GROUP_LIST } from \"@/store/types/\";\nimport Search from \"@/components/search\";\nimport { mapGetters } from \"vuex\";\n// import { cloneDeep } from \"lodash\"\nconst LIHEIGHT = 67,\n  LITITLEHEIGHT = 34;\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Group,\n    Relation,\n    Discussion,\n    AddBtn,\n    Search,\n  },\n  data() {\n    return {\n      activeIndex: 0,\n    };\n  },\n  computed: {\n    ...mapGetters([\"discussionList\", \"groupList\", \"friendsList\"]),\n    tabsArr() {\n      return [\n        { label: this.$t(\"chat_search_0003\"), iconClass: \"iconfont icon-user\" },\n        {\n          label: this.$t(\"chat_search_0005\"),\n          iconClass: \"iconfont icon-user-group-Fill\",\n        },\n        { label: this.$t(\"chat_search_0007\"), iconClass: \"iconfont icon-laba\" },\n      ];\n    },\n    getComponent() {\n      switch (this.activeIndex) {\n      case 0:\n        return {\n          com: Relation,\n          list: this.friendsList,\n        };\n      case 1:\n        return {\n          com: Group,\n          list: this.groupList,\n        };\n      case 2:\n        return {\n          com: Discussion,\n          list: this.discussionList,\n        };\n      default:\n        return {\n          com: Relation,\n          list: this.friendsList,\n        };\n      }\n    },\n    availableScrollHeight() {\n      let {\n          joinList = [],\n          manageList = [],\n          ownerList = [],\n        } = this.groupList || {}, count = 0;\n      switch (this.activeIndex) {\n      case 0:\n        return ((this.friendsList?.length || 0) + 1) * LIHEIGHT;\n      case 1:\n        joinList.length && count++;\n        manageList.length && count++;\n        ownerList.length && count++;\n        return (\n          (manageList.length + ownerList.length + joinList.length) *\n              LIHEIGHT +\n            count * LITITLEHEIGHT\n        );\n      case 2:\n        return (this.discussionList?.length || 0) * LIHEIGHT;\n      default:\n        return 0;\n      }\n    },\n  },\n  watch: {\n    activeIndex(v) {\n      if (v == 0) {\n        // 联系人\n        this.$store.dispatch(GET_FRIENDS_LIST);\n      } else {\n        // 群聊列表、 讨论组列表\n        this.$store.dispatch(GET_GROUP_LIST);\n      }\n    },\n  },\n  methods: {\n    tabHand(i) {\n      this.activeIndex = i;\n    },\n    // win 拖拽之后 scollview 刷新\n    winResize() {\n      // let instance = this.$refs.coms;\n      let instance = this.$refs[`coms${this.activeIndex}`];\n      instance?.$refs?.scroll?.update?.();\n      instance?.$refs?.scroll?.handleScroll?.();\n      console.log(\"scroll ===> 滑动更新\",'如果有必要 一次性更新其他滚动条的状态');\n    },\n  },\n  created() {\n    // 联系人\n    this.$store.dispatch(GET_FRIENDS_LIST);\n  },\n  mounted() {\n    this.$remote.getCurrentWindow().addListener(\"resize\", this.winResize);\n  },\n  beforeDestroy() {\n    this.$remote.getCurrentWindow().removeListener(\"resize\", this.winResize);\n  },\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.contact-list-wrap {\n  width: 270px;\n  position: relative;\n  ul {\n    height: 38px;\n    line-height: 40px;\n    border: 1px solid #e4e4e4;\n    border-right: none;\n    border-left: none;\n    justify-content: space-between;\n    li {\n      flex: 1;\n      cursor: pointer;\n      font-size: 14px;\n      color: #999;\n      padding: 0 2px;\n      margin: 0 10px;\n      .iconfont {\n        font-size: 18px;\n      }\n      .tab-item {\n        margin-left: 2px;\n      }\n      &:last-child {\n        border-right: none;\n      }\n      &.active {\n        color: #000;\n        border-bottom: 1px solid #333333;\n      }\n    }\n  }\n  .tab-list-item {\n    background-color: #fcfbfb;\n    height: calc(100vh - 100px);\n    overflow-y: scroll;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".contact-list-wrap": {
          "width": "270px",
          "position": "relative",
          "ul": {
            "height": "38px",
            "line-height": "40px",
            "border": "1px solid #e4e4e4",
            "border-right": "none",
            "border-left": "none",
            "justify-content": "space-between",
            "li": {
              "flex": "1",
              "cursor": "pointer",
              "font-size": "14px",
              "color": "#999",
              "padding": "0 2px",
              "margin": "0 10px",
              ".iconfont": {
                "font-size": "18px"
              },
              ".tab-item": {
                "margin-left": "2px"
              },
              "&:last-child": {
                "border-right": "none"
              },
              "&.active": {
                "color": "#000",
                "border-bottom": "1px solid #333333"
              }
            }
          },
          ".tab-list-item": {
            "background-color": "#fcfbfb",
            "height": "calc(100vh - 100px)",
            "overflow-y": "scroll"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberIcon/MemberIcon.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div :class=\"iconType ? iconType + ' member-icon' : 'member-icon'\">\n    <img class=\"auth-status\" v-if=\"authStatusImage\" :src=\"authStatusImage\" alt /><!--群主和管理员-->\n    <img :class=\"userImageClass\" :src=\"findImage(image)\" alt @error=\"replaceImg\" /><!--黄蓝边-->\n    <!--eslint max-len: [\"error\", { \"code\": 140 }]-->\n    <img v-if=\"vipType\" :class=\"[userLevelClass, userRank < 31 ? 'lowerVipIcon' : '']\" src=\"../../assets/images/vipCrown.png\" alt />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nimport UserInfoUtils from '@/utils/UserInfoUtils';\nexport default {\n  name: 'MemberIcon',\n  data() {\n    return {\n      imageSrc: ''\n    };\n  },\n  props: {\n    vipType: {\n      //vip类型：0:非会员，1：会员\n      type: Number,\n      default() {\n        return 0;\n      }\n    },\n    image: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    showMenu: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    iconType: {\n      type: String,\n      default() {\n        return 'mini';\n      }\n    },\n    userRank: {\n      type: Number,\n      default() {\n        return 1;\n      }\n    }\n  },\n  computed: {\n    authStatusImage() {\n      if (this.authStatus == '1') {\n        return require('../../assets/images/group_auth_leader.png');\n      } else if (this.authStatus == '2') {\n        return require('../../assets/images/group_auth_admin.png');\n      }\n      return '';\n    },\n    userImageClass() {\n      if (this.userRank > 30 && (this.iconType == 'mini' || this.iconType == 'small')) {\n        return 'user-image user-high-level-border';\n      } else if (this.userRank > 30 && (this.iconType == 'medium' || this.iconType == 'large')) {\n        return 'user-image user-high-level-2border';\n      } else if (this.userRank < 31 && (this.iconType == 'mini' || this.iconType == 'small')) {\n        return 'user-image user-low-level-border';\n      } else if (this.userRank < 31 && (this.iconType == 'medium' || this.iconType == 'large')) {\n        return 'user-image user-low-level-2border';\n      }\n      return 'user-image';\n    },\n    userLevelClass() {\n      if (this.iconType == 'mini') {\n        return 'miniVip';\n      } else if (this.iconType == 'medium') {\n        return 'mediumVip';\n      } else if (this.iconType == 'small') {\n        return 'smallVip';\n      } else {\n        return 'largeVip';\n      }\n    }\n  },\n  methods: {\n    findImage(image) {\n      this.imageSrc = image;\n      return fileOperational.getImage(this.imageSrc);\n    },\n    // 替换404图片\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'user');\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div :class=\"iconType ? iconType + ' member-icon' : 'member-icon'\">\n    <img class=\"auth-status\" v-if=\"authStatusImage\" :src=\"authStatusImage\" alt /><!--群主和管理员-->\n    <img :class=\"userImageClass\" :src=\"findImage(image)\" alt @error=\"replaceImg\" /><!--黄蓝边-->\n    <!--eslint max-len: [\"error\", { \"code\": 140 }]-->\n    <img v-if=\"vipType\" :class=\"[userLevelClass, userRank < 31 ? 'lowerVipIcon' : '']\" src=\"../../assets/images/vipCrown.png\" alt />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nimport UserInfoUtils from '@/utils/UserInfoUtils';\nexport default {\n  name: 'MemberIcon',\n  data() {\n    return {\n      imageSrc: ''\n    };\n  },\n  props: {\n    vipType: {\n      //vip类型：0:非会员，1：会员\n      type: Number,\n      default() {\n        return 0;\n      }\n    },\n    image: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    showMenu: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    iconType: {\n      type: String,\n      default() {\n        return 'mini';\n      }\n    },\n    userRank: {\n      type: Number,\n      default() {\n        return 1;\n      }\n    }\n  },\n  computed: {\n    authStatusImage() {\n      if (this.authStatus == '1') {\n        return require('../../assets/images/group_auth_leader.png');\n      } else if (this.authStatus == '2') {\n        return require('../../assets/images/group_auth_admin.png');\n      }\n      return '';\n    },\n    userImageClass() {\n      if (this.userRank > 30 && (this.iconType == 'mini' || this.iconType == 'small')) {\n        return 'user-image user-high-level-border';\n      } else if (this.userRank > 30 && (this.iconType == 'medium' || this.iconType == 'large')) {\n        return 'user-image user-high-level-2border';\n      } else if (this.userRank < 31 && (this.iconType == 'mini' || this.iconType == 'small')) {\n        return 'user-image user-low-level-border';\n      } else if (this.userRank < 31 && (this.iconType == 'medium' || this.iconType == 'large')) {\n        return 'user-image user-low-level-2border';\n      }\n      return 'user-image';\n    },\n    userLevelClass() {\n      if (this.iconType == 'mini') {\n        return 'miniVip';\n      } else if (this.iconType == 'medium') {\n        return 'mediumVip';\n      } else if (this.iconType == 'small') {\n        return 'smallVip';\n      } else {\n        return 'largeVip';\n      }\n    }\n  },\n  methods: {\n    findImage(image) {\n      this.imageSrc = image;\n      return fileOperational.getImage(this.imageSrc);\n    },\n    // 替换404图片\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'user');\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.member-icon {\n  position: relative;\n}\n.auth-status {\n  position: absolute;\n  left: 18px;top: -11px;\n  width: 35px;height: 35px;\n}\n.mini {\n  width: 32px;\n  // height: 32px;\n  .user-image {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n  }\n  .user-level-low {\n    position: absolute;\n    width: 13px;\n    height: 13px;\n    top: 18px;\n    left: -3px;\n  }\n  .user-level-high {\n    position: absolute;\n    width: 14px;\n    height: 14px;\n    top: 18px;\n    left: -3px;\n  }\n}\n\n.small {\n  width: 38px;\n  height: 38px;\n  .user-image {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n  }\n  .user-level-low {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 20px;\n    left: -5px;\n  }\n  .user-level-high {\n    position: absolute;\n    width: 18px;\n    height: 18px;\n    top: 20px;\n    left: -4px;\n  }\n}\n.medium {\n  width: 48px;\n  height: 48px;\n  .user-image {\n    width: 44px;\n    height: 44px;\n    border-radius: 50%;\n  }\n  .user-level-low {\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    top: 27px;\n    left: -4px;\n  }\n  .user-level-high {\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    top: 27px;\n    left: -4px;\n  }\n  .user-high-level-2border {\n    background-image: url(../../assets/images/wjt_highbg_93.png);\n    background-size: contain;\n    display: block;\n    padding: 7px !important;\n  }\n  .user-low-level-2border {\n    background-image: url(../../assets/images/wjt_lowbg_93.png);\n    background-size: contain;\n    display: block;\n    padding: 7px !important;\n  }\n}\n.large {\n  /*width: 72px;\n    height: 72px;*/\n  .user-image {\n    width: 44px;\n    height: 44px;\n    border-radius: 50%;\n  }\n  .user-level-low {\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    top: 42px;\n    left: -6px;\n  }\n  .user-level-high {\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    top: 41px;\n    left: -7px;\n  }\n  .user-high-level-2border {\n    background-image: url(../../assets/images/wjt_highbg_93.png);\n    background-size: contain;\n    display: block;\n    padding: 8px !important;\n  }\n  .user-low-level-2border {\n    background-image: url(../../assets/images/wjt_lowbg_93.png);\n    background-size: contain;\n    display: block;\n    padding: 10px !important;\n  }\n}\n.user-high-level-border {\n  // border: 2px solid #ECC143;\n  background-image: url(../../assets/images/wjt_highbg_93.png);\n  background-size: contain;\n  display: block;\n  padding: 6px;\n}\n.user-low-level-border {\n  // border: 2px solid #86B6FF;\n  background-image: url(../../assets/images/wjt_lowbg_93.png);\n  background-size: contain;\n  display: block;\n  padding: 6px;\n}\n.user-high-level-2border {\n  background-image: url(../../assets/images/wjt_highbg_93.png);\n  background-size: contain;\n  display: block;\n  padding: 6px;\n}\n.user-low-level-2border {\n  background-image: url(../../assets/images/wjt_lowbg_93.png);\n  background-size: contain;\n  display: block;\n  padding: 6px;\n}\n.largeVip {\n  height: auto !important;\n  position: absolute;\n  bottom: 3px;\n  left: 50%;\n  width: 31px;\n  margin-left: -15px;\n}\n.mediumVip {\n  width: 63%;\n  height: auto;\n  position: absolute;\n  bottom: -13%;\n  left: 28%;\n}\n.smallVip {\n  /*width: 65% !important;\n    height: auto !important;*/\n  position: absolute;\n  /*bottom: -8%;*/\n  left: 25%;\n  width: 22px !important;\n  height: 11px !important;\n  bottom: -4px;\n  &.lowerVipIcon {\n    bottom: -3px;\n  }\n}\n.miniVip {\n  width: 80%;\n  height: auto;\n  position: absolute;\n  bottom: 1px;\n  left: 26%;\n  &.lowerVipIcon {\n    bottom: 2px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".member-icon": {
          "position": "relative"
        },
        ".auth-status": {
          "position": "absolute",
          "left": "18px",
          "top": "-11px",
          "width": "35px",
          "height": "35px"
        },
        ".mini": {
          "width": "32px",
          ".user-image": {
            "width": "30px",
            "height": "30px",
            "border-radius": "50%"
          },
          ".user-level-low": {
            "position": "absolute",
            "width": "13px",
            "height": "13px",
            "top": "18px",
            "left": "-3px"
          },
          ".user-level-high": {
            "position": "absolute",
            "width": "14px",
            "height": "14px",
            "top": "18px",
            "left": "-3px"
          }
        },
        ".small": {
          "width": "38px",
          "height": "38px",
          ".user-image": {
            "width": "32px",
            "height": "32px",
            "border-radius": "50%"
          },
          ".user-level-low": {
            "position": "absolute",
            "width": "16px",
            "height": "16px",
            "top": "20px",
            "left": "-5px"
          },
          ".user-level-high": {
            "position": "absolute",
            "width": "18px",
            "height": "18px",
            "top": "20px",
            "left": "-4px"
          }
        },
        ".medium": {
          "width": "48px",
          "height": "48px",
          ".user-image": {
            "width": "44px",
            "height": "44px",
            "border-radius": "50%"
          },
          ".user-level-low": {
            "position": "absolute",
            "width": "20px",
            "height": "20px",
            "top": "27px",
            "left": "-4px"
          },
          ".user-level-high": {
            "position": "absolute",
            "width": "20px",
            "height": "20px",
            "top": "27px",
            "left": "-4px"
          },
          ".user-high-level-2border": {
            "background-image": "url(../../assets/images/wjt_highbg_93.png)",
            "background-size": "contain",
            "display": "block",
            "padding": "7px !important"
          },
          ".user-low-level-2border": {
            "background-image": "url(../../assets/images/wjt_lowbg_93.png)",
            "background-size": "contain",
            "display": "block",
            "padding": "7px !important"
          }
        },
        ".large": {
          ".user-image": {
            "width": "44px",
            "height": "44px",
            "border-radius": "50%"
          },
          ".user-level-low": {
            "position": "absolute",
            "width": "30px",
            "height": "30px",
            "top": "42px",
            "left": "-6px"
          },
          ".user-level-high": {
            "position": "absolute",
            "width": "30px",
            "height": "30px",
            "top": "41px",
            "left": "-7px"
          },
          ".user-high-level-2border": {
            "background-image": "url(../../assets/images/wjt_highbg_93.png)",
            "background-size": "contain",
            "display": "block",
            "padding": "8px !important"
          },
          ".user-low-level-2border": {
            "background-image": "url(../../assets/images/wjt_lowbg_93.png)",
            "background-size": "contain",
            "display": "block",
            "padding": "10px !important"
          }
        },
        ".user-high-level-border": {
          "background-image": "url(../../assets/images/wjt_highbg_93.png)",
          "background-size": "contain",
          "display": "block",
          "padding": "6px"
        },
        ".user-low-level-border": {
          "background-image": "url(../../assets/images/wjt_lowbg_93.png)",
          "background-size": "contain",
          "display": "block",
          "padding": "6px"
        },
        ".user-high-level-2border": {
          "background-image": "url(../../assets/images/wjt_highbg_93.png)",
          "background-size": "contain",
          "display": "block",
          "padding": "6px"
        },
        ".user-low-level-2border": {
          "background-image": "url(../../assets/images/wjt_lowbg_93.png)",
          "background-size": "contain",
          "display": "block",
          "padding": "6px"
        },
        ".largeVip": {
          "height": "auto !important",
          "position": "absolute",
          "bottom": "3px",
          "left": "50%",
          "width": "31px",
          "margin-left": "-15px"
        },
        ".mediumVip": {
          "width": "63%",
          "height": "auto",
          "position": "absolute",
          "bottom": "-13%",
          "left": "28%"
        },
        ".smallVip": {
          "position": "absolute",
          "left": "25%",
          "width": "22px !important",
          "height": "11px !important",
          "bottom": "-4px",
          "&.lowerVipIcon": {
            "bottom": "-3px"
          }
        },
        ".miniVip": {
          "width": "80%",
          "height": "auto",
          "position": "absolute",
          "bottom": "1px",
          "left": "26%",
          "&.lowerVipIcon": {
            "bottom": "2px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberIcon/LevelIcon.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div :class=\"iconType ? iconType + ' level-icon' : 'level-icon'\" v-if=\"inviteCode !== ''\">\n    <div :class=\"userRank > 30?'levelRight superBG':'levelRight2 starBG'\" >\n      <img src=\"../../assets/images/diamond.png\" />\n      <span>{{ userRank }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nexport default {\n  name: 'MemberIcon',\n  data() {\n    return {\n      imageSrc: '',\n      levelStart: '',\n      levelEnd: ''\n    };\n  },\n  props: {\n    listFlag: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    inviteCode: {\n      //邀请码\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    inviteCodeType: {\n      //邀请码类型[0-原始邀请码，1-靓号]\")\n      type: Number,\n      default() {\n        return 1;\n      }\n    },\n    vipType: {\n      //vip类型：0:非会员，1：会员\n      type: Number,\n      default() {\n        return 1;\n      }\n    },\n    iconType: {\n      type: String,\n      default() {\n        return 'small';\n      }\n    },\n    userRank: {\n      type: Number,\n      default() {\n        return 0;\n      }\n    }\n  },\n  watch: {\n    // userRank(val) {\n    //   debugger\n    //   if(val>30){\n    //     this.levelStart = val.slice(0,1)\n    //     this.levelEnd =  val.substr(0, val.length - 1)\n    //   }\n    // }\n  },\n  computed: {\n    getStart() {\n      if (this.userRank > 30) {\n        return (this.userRank + '').substr(0, 1);\n      }\n      return '';\n    },\n    getEnd() {\n      if (this.userRank > 30) {\n        return (this.userRank + '').substr(1, 1);\n      }\n      return '';\n    }\n  },\n  methods: {\n    findImage(image) {\n      this.imageSrc = image;\n      return fileOperational.getImage(this.imageSrc);\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div :class=\"iconType ? iconType + ' level-icon' : 'level-icon'\" v-if=\"inviteCode !== ''\">\n    <div :class=\"userRank > 30?'levelRight superBG':'levelRight2 starBG'\" >\n      <img src=\"../../assets/images/diamond.png\" />\n      <span>{{ userRank }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nexport default {\n  name: 'MemberIcon',\n  data() {\n    return {\n      imageSrc: '',\n      levelStart: '',\n      levelEnd: ''\n    };\n  },\n  props: {\n    listFlag: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    inviteCode: {\n      //邀请码\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    inviteCodeType: {\n      //邀请码类型[0-原始邀请码，1-靓号]\")\n      type: Number,\n      default() {\n        return 1;\n      }\n    },\n    vipType: {\n      //vip类型：0:非会员，1：会员\n      type: Number,\n      default() {\n        return 1;\n      }\n    },\n    iconType: {\n      type: String,\n      default() {\n        return 'small';\n      }\n    },\n    userRank: {\n      type: Number,\n      default() {\n        return 0;\n      }\n    }\n  },\n  watch: {\n    // userRank(val) {\n    //   debugger\n    //   if(val>30){\n    //     this.levelStart = val.slice(0,1)\n    //     this.levelEnd =  val.substr(0, val.length - 1)\n    //   }\n    // }\n  },\n  computed: {\n    getStart() {\n      if (this.userRank > 30) {\n        return (this.userRank + '').substr(0, 1);\n      }\n      return '';\n    },\n    getEnd() {\n      if (this.userRank > 30) {\n        return (this.userRank + '').substr(1, 1);\n      }\n      return '';\n    }\n  },\n  methods: {\n    findImage(image) {\n      this.imageSrc = image;\n      return fileOperational.getImage(this.imageSrc);\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.level-icon {\n  color: red;\n  display: flex;\n  align-items: center;\n  // margin-left: 5px;\n}\n@keyframes movesmall {\n  0% {\n    left: 0px;\n    opacity: 1;\n  }\n  80% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0;\n    left: 49px;\n  }\n}\n@keyframes movemedium {\n  0% {\n    left: 0px;\n    opacity: 1;\n  }\n  80% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0;\n    left: 50px;\n  }\n}\n@keyframes movelarge {\n  0% {\n    left: 0px;\n    opacity: 1;\n  }\n  80% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0;\n    left: 70px;\n  }\n}\n\n.highlight {\n  position: absolute;\n  top: 0;\n  left: -1px;\n}\n\n.levelbox {\n  display: flex;\n  align-items: center;\n  padding: 0 5px 0 4px;\n  color: #999;\n  position: relative;\n  img,\n  span {\n    display: inline-block;\n    vertical-align: middle;\n  }\n\n  &.goldenBg {\n    background: linear-gradient(to right, #f6d995, #dfa35d);\n    color: #333;\n    border-radius: 2px;\n  }\n}\n\n.levelRight {\n  // display: inline-block;\n  display: flex;\n  align-items: center;\n  color: #fff;\n  padding-right: 5px;\n  span {\n    font-weight: normal;\n  }\n}\n\n.levelRight2 {\n  display: flex;\n  align-items: center;\n  color: #fff;\n  padding-right: 5px;\n  span {\n    font-weight: normal;\n  }\n}\n\n.levelpos {\n  position: absolute;\n}\n\n.superBG {\n  position: relative;\n  background: linear-gradient(to right, #fdc008, #ff9800);\n  border-radius: 2px;\n}\n\n.starBG {\n  position: relative;\n  background: linear-gradient(to right, #2faef8, #0071b3);\n  border-radius: 2px;\n}\n\n.crown {\n  padding-right: 2px;\n}\n\n.large {\n  height: 18px;\n  font-size: 12px;\n  line-height: 18px;\n  .levelbox {\n    padding: 0 4px;\n  }\n  .highlight {\n    height: 19px;\n    width: 21px;\n    animation: movelarge 2s infinite;\n  }\n\n  .invitecode {\n    color: #543e24;\n    font-size: 10px;\n  }\n\n  .crown {\n    width: 12px;\n    height: 12px;\n  }\n\n  .levelIcon {\n    width: 14px;\n    height: 14px;\n    padding: 0 3px;\n    display: inline-block;\n  }\n\n  .levelRight {\n    // width: 39px;\n    height: 18px;\n    line-height: 18px;\n    margin-left: 5px;\n    img {\n      height: 16px;\n      // padding-top: 1px;\n    }\n    span {\n      font-size: 10px;\n      font-style: italic;\n    }\n  }\n\n  .levelRight2 {\n    height: 18px;\n    text-align: center;\n    line-height: 18px;\n    font-size: 11px;\n    margin-left: 5px;\n    //  transform:scale(0.8)\n    img {\n      height: 16px;\n      // padding-top: 1px;\n      // height: auto !important;\n    }\n    span {\n      font-size: 10px;\n      font-style: italic;\n    }\n  }\n\n  .levelAll {\n    width: 4px;\n    height: 5px;\n  }\n\n  .levelpos {\n    top: -5px;\n    left: 14px;\n  }\n}\n\n.medium {\n  height: 14px;\n  font-size: 10px;\n  line-height: 14px;\n\n  .highlight {\n    height: 13px;\n    width: 18px;\n    animation: movemedium 2s infinite;\n  }\n\n  .invitecode {\n    color: #543e24;\n    font-size: 8px;\n  }\n\n  .crown {\n    width: 10px;\n    height: 10px;\n    margin: 0;\n  }\n\n  .levelIcon {\n    width: 11px;\n    height: 11px;\n    padding: 0 2px;\n    display: inline-block;\n  }\n\n  .levelRight {\n    height: 14px;\n    line-height: 14px;\n    img {\n      height: 12px;\n      // padding-top: 1px;\n      // height: auto !important;\n    }\n    span {\n      font-size: 10px;\n      font-style: italic;\n    }\n  }\n\n  .levelRight2 {\n    height: 14px;\n    text-align: center;\n    line-height: 14px;\n    font-size: 9px;\n    img {\n      height: 12px;\n      // padding-top: 1px;\n      // height: auto !important;\n    }\n    span {\n      font-size: 10px;\n      font-style: italic;\n    }\n  }\n\n  .levelAll {\n    width: 4px;\n    height: 5px;\n  }\n\n  .levelpos {\n    top: -3px;\n    left: 11px;\n  }\n}\n\n.small {\n  height: 10px;\n  line-height: 10px;\n  font-size: 10px;\n  .highlight {\n    height: 10px;\n    width: 18px;\n    animation: movesmall 2s infinite;\n  }\n\n  .invitecode {\n    color: #543e24;\n    font-size: 6px;\n  }\n\n  .crown {\n    width: 8px;\n    height: 8px;\n    margin: 0;\n  }\n\n  .levelIcon {\n    width: 10px;\n    height: 10px;\n    padding: 0 2px;\n  }\n\n  .levelRight {\n    height: 13px;\n    line-height: 13px;\n    img {\n      width: 16px;\n      padding-top: 2px;\n    }\n    span {\n      font-size: 10px;\n      font-style: italic;\n    }\n  }\n\n  .levelRight2 {\n    height: 12px;\n    text-align: center;\n    line-height: 12px;\n    font-size: 8px;\n    img {\n      width: 13px;\n      padding-top: 1px;\n    }\n    span {\n      font-size: 10px;\n      font-style: italic;\n    }\n  }\n\n  .levelAll {\n    width: 3px;\n    height: 4px;\n  }\n\n  .levelpos {\n    top: -2px;\n    left: 10px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".level-icon": {
          "color": "red",
          "display": "flex",
          "align-items": "center"
        },
        "@keyframes movesmall": {
          "0%": {
            "left": "0px",
            "opacity": "1"
          },
          "80%": {
            "opacity": "0"
          },
          "100%": {
            "opacity": "0",
            "left": "49px"
          }
        },
        "@keyframes movemedium": {
          "0%": {
            "left": "0px",
            "opacity": "1"
          },
          "80%": {
            "opacity": "0"
          },
          "100%": {
            "opacity": "0",
            "left": "50px"
          }
        },
        "@keyframes movelarge": {
          "0%": {
            "left": "0px",
            "opacity": "1"
          },
          "80%": {
            "opacity": "0"
          },
          "100%": {
            "opacity": "0",
            "left": "70px"
          }
        },
        ".highlight": {
          "position": "absolute",
          "top": "0",
          "left": "-1px"
        },
        ".levelbox": {
          "display": "flex",
          "align-items": "center",
          "padding": "0 5px 0 4px",
          "color": "#999",
          "position": "relative",
          "img,  span": {
            "display": "inline-block",
            "vertical-align": "middle"
          },
          "&.goldenBg": {
            "background": "linear-gradient(to right, #f6d995, #dfa35d)",
            "color": "#333",
            "border-radius": "2px"
          }
        },
        ".levelRight": {
          "display": "flex",
          "align-items": "center",
          "color": "#fff",
          "padding-right": "5px",
          "span": {
            "font-weight": "normal"
          }
        },
        ".levelRight2": {
          "display": "flex",
          "align-items": "center",
          "color": "#fff",
          "padding-right": "5px",
          "span": {
            "font-weight": "normal"
          }
        },
        ".levelpos": {
          "position": "absolute"
        },
        ".superBG": {
          "position": "relative",
          "background": "linear-gradient(to right, #fdc008, #ff9800)",
          "border-radius": "2px"
        },
        ".starBG": {
          "position": "relative",
          "background": "linear-gradient(to right, #2faef8, #0071b3)",
          "border-radius": "2px"
        },
        ".crown": {
          "padding-right": "2px"
        },
        ".large": {
          "height": "18px",
          "font-size": "12px",
          "line-height": "18px",
          ".levelbox": {
            "padding": "0 4px"
          },
          ".highlight": {
            "height": "19px",
            "width": "21px",
            "animation": "movelarge 2s infinite"
          },
          ".invitecode": {
            "color": "#543e24",
            "font-size": "10px"
          },
          ".crown": {
            "width": "12px",
            "height": "12px"
          },
          ".levelIcon": {
            "width": "14px",
            "height": "14px",
            "padding": "0 3px",
            "display": "inline-block"
          },
          ".levelRight": {
            "height": "18px",
            "line-height": "18px",
            "margin-left": "5px",
            "img": {
              "height": "16px"
            },
            "span": {
              "font-size": "10px",
              "font-style": "italic"
            }
          },
          ".levelRight2": {
            "height": "18px",
            "text-align": "center",
            "line-height": "18px",
            "font-size": "11px",
            "margin-left": "5px",
            "img": {
              "height": "16px"
            },
            "span": {
              "font-size": "10px",
              "font-style": "italic"
            }
          },
          ".levelAll": {
            "width": "4px",
            "height": "5px"
          },
          ".levelpos": {
            "top": "-5px",
            "left": "14px"
          }
        },
        ".medium": {
          "height": "14px",
          "font-size": "10px",
          "line-height": "14px",
          ".highlight": {
            "height": "13px",
            "width": "18px",
            "animation": "movemedium 2s infinite"
          },
          ".invitecode": {
            "color": "#543e24",
            "font-size": "8px"
          },
          ".crown": {
            "width": "10px",
            "height": "10px",
            "margin": "0"
          },
          ".levelIcon": {
            "width": "11px",
            "height": "11px",
            "padding": "0 2px",
            "display": "inline-block"
          },
          ".levelRight": {
            "height": "14px",
            "line-height": "14px",
            "img": {
              "height": "12px"
            },
            "span": {
              "font-size": "10px",
              "font-style": "italic"
            }
          },
          ".levelRight2": {
            "height": "14px",
            "text-align": "center",
            "line-height": "14px",
            "font-size": "9px",
            "img": {
              "height": "12px"
            },
            "span": {
              "font-size": "10px",
              "font-style": "italic"
            }
          },
          ".levelAll": {
            "width": "4px",
            "height": "5px"
          },
          ".levelpos": {
            "top": "-3px",
            "left": "11px"
          }
        },
        ".small": {
          "height": "10px",
          "line-height": "10px",
          "font-size": "10px",
          ".highlight": {
            "height": "10px",
            "width": "18px",
            "animation": "movesmall 2s infinite"
          },
          ".invitecode": {
            "color": "#543e24",
            "font-size": "6px"
          },
          ".crown": {
            "width": "8px",
            "height": "8px",
            "margin": "0"
          },
          ".levelIcon": {
            "width": "10px",
            "height": "10px",
            "padding": "0 2px"
          },
          ".levelRight": {
            "height": "13px",
            "line-height": "13px",
            "img": {
              "width": "16px",
              "padding-top": "2px"
            },
            "span": {
              "font-size": "10px",
              "font-style": "italic"
            }
          },
          ".levelRight2": {
            "height": "12px",
            "text-align": "center",
            "line-height": "12px",
            "font-size": "8px",
            "img": {
              "width": "13px",
              "padding-top": "1px"
            },
            "span": {
              "font-size": "10px",
              "font-style": "italic"
            }
          },
          ".levelAll": {
            "width": "3px",
            "height": "4px"
          },
          ".levelpos": {
            "top": "-2px",
            "left": "10px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberIcon/luckIdIcon.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div :class=\"iconType ? iconType + ' level-icon' : 'level-icon'\" v-if=\"inviteCode !== '' && (inviteCodeType || !listFlag)\">\n    <div class=\"levelbox goldenBg\" v-if=\"inviteCodeType && inviteCode\">\n      <img class=\"highlight\" src=\"../../assets/images/highlight.png\" alt />\n      <span class=\"invitecode\">ID:{{ inviteCode }}</span>\n    </div>\n    <div v-if=\"!inviteCodeType && !listFlag && inviteCode\" class=\"levelbox\">\n      <span>ID:{{ inviteCode }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nexport default {\n  name: 'MemberIcon',\n  data() {\n    return {\n      imageSrc: '',\n      levelStart: '',\n      levelEnd: ''\n    };\n  },\n  props: {\n    listFlag: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    inviteCode: {\n      //邀请码\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    inviteCodeType: {\n      //邀请码类型[0-原始邀请码，1-靓号]\")\n      type: Number,\n      default() {\n        return 1;\n      }\n    },\n    vipType: {\n      //vip类型：0:非会员，1：会员\n      type: Number,\n      default() {\n        return 1;\n      }\n    },\n    iconType: {\n      type: String,\n      default() {\n        return 'small';\n      }\n    },\n    userRank: {\n      type: Number,\n      default() {\n        return 0;\n      }\n    }\n  },\n  watch: {\n    // userRank(val) {\n    //   debugger\n    //   if(val>30){\n    //     this.levelStart = val.slice(0,1)\n    //     this.levelEnd =  val.substr(0, val.length - 1)\n    //   }\n    // }\n  },\n  computed: {\n    getStart() {\n      if (this.userRank > 30) {\n        return (this.userRank + '').substr(0, 1);\n      }\n      return '';\n    },\n    getEnd() {\n      if (this.userRank > 30) {\n        return (this.userRank + '').substr(1, 1);\n      }\n      return '';\n    }\n  },\n  methods: {\n    findImage(image) {\n      this.imageSrc = image;\n      return fileOperational.getImage(this.imageSrc);\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div :class=\"iconType ? iconType + ' level-icon' : 'level-icon'\" v-if=\"inviteCode !== '' && (inviteCodeType || !listFlag)\">\n    <div class=\"levelbox goldenBg\" v-if=\"inviteCodeType && inviteCode\">\n      <img class=\"highlight\" src=\"../../assets/images/highlight.png\" alt />\n      <span class=\"invitecode\">ID:{{ inviteCode }}</span>\n    </div>\n    <div v-if=\"!inviteCodeType && !listFlag && inviteCode\" class=\"levelbox\">\n      <span>ID:{{ inviteCode }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nexport default {\n  name: 'MemberIcon',\n  data() {\n    return {\n      imageSrc: '',\n      levelStart: '',\n      levelEnd: ''\n    };\n  },\n  props: {\n    listFlag: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    inviteCode: {\n      //邀请码\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    inviteCodeType: {\n      //邀请码类型[0-原始邀请码，1-靓号]\")\n      type: Number,\n      default() {\n        return 1;\n      }\n    },\n    vipType: {\n      //vip类型：0:非会员，1：会员\n      type: Number,\n      default() {\n        return 1;\n      }\n    },\n    iconType: {\n      type: String,\n      default() {\n        return 'small';\n      }\n    },\n    userRank: {\n      type: Number,\n      default() {\n        return 0;\n      }\n    }\n  },\n  watch: {\n    // userRank(val) {\n    //   debugger\n    //   if(val>30){\n    //     this.levelStart = val.slice(0,1)\n    //     this.levelEnd =  val.substr(0, val.length - 1)\n    //   }\n    // }\n  },\n  computed: {\n    getStart() {\n      if (this.userRank > 30) {\n        return (this.userRank + '').substr(0, 1);\n      }\n      return '';\n    },\n    getEnd() {\n      if (this.userRank > 30) {\n        return (this.userRank + '').substr(1, 1);\n      }\n      return '';\n    }\n  },\n  methods: {\n    findImage(image) {\n      this.imageSrc = image;\n      return fileOperational.getImage(this.imageSrc);\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.level-icon {\n  display: flex;\n  align-items: center;\n}\n@keyframes movesmall {\n  0% {\n    left: 0px;\n    opacity: 1;\n  }\n  80% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0;\n    left: 49px;\n  }\n}\n@keyframes movemedium {\n  0% {\n    left: 0px;\n    opacity: 1;\n  }\n  80% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0;\n    left: 50px;\n  }\n}\n@keyframes movelarge {\n  0% {\n    left: 0px;\n    opacity: 1;\n  }\n  80% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0;\n    left: 70px;\n  }\n}\n\n.highlight {\n  position: absolute;\n  top: 0;\n  left: -1px;\n}\n\n.levelbox {\n  // display: flex;\n  // align-items: center;\n  padding: 0 5px 0 4px;\n  color: #999;\n  position: relative;\n\n  &.goldenBg {\n    background: linear-gradient(to right, #f6d995, #dfa35d);\n    color: #333;\n    border-radius: 2px;\n    img,\n    span {\n      display: inline-block;\n      vertical-align: middle;\n    }\n  }\n}\n\n.levelRight {\n  display: inline-block;\n}\n\n.levelRight2 {\n  display: inline-block;\n  color: #fff;\n}\n\n.levelpos {\n  position: absolute;\n}\n\n.crown {\n  padding-right: 2px;\n}\n\n.large {\n  height: 18px;\n  font-size: 12px;\n  line-height: 18px;\n  .levelbox {\n    overflow: hidden;\n    &.goldenBg {\n      padding: 0 4px;\n    }\n  }\n  .highlight {\n    height: 19px;\n    width: 21px;\n    animation: movelarge 2s infinite;\n  }\n\n  .invitecode {\n    color: #543e24;\n    font-size: 10px;\n  }\n\n  .crown {\n    width: 12px;\n    height: 12px;\n  }\n\n  .levelIcon {\n    width: 14px;\n    height: 14px;\n    padding: 0 3px;\n    display: inline-block;\n  }\n\n  .levelRight {\n    width: 39px;\n    height: 15px;\n  }\n\n  .levelRight2 {\n    width: 25px;\n    height: 24px;\n    text-align: center;\n    line-height: 24px;\n    font-size: 11px;\n    //  transform:scale(0.8)\n  }\n\n  .levelAll {\n    width: 4px;\n    height: 5px;\n  }\n\n  .levelpos {\n    top: -5px;\n    left: 14px;\n  }\n}\n\n.medium {\n  height: 14px;\n  font-size: 10px;\n  line-height: 14px;\n  .levelbox{\n    height: 14px;\n  }\n  .highlight {\n    height: 14px;\n    width: 18px;\n    animation: movemedium 2s infinite;\n  }\n\n  .invitecode {\n    color: #543e24;\n    font-size: 8px;\n  }\n\n  .crown {\n    width: 10px;\n    height: 10px;\n    margin: 0;\n  }\n\n  .levelIcon {\n    width: 11px;\n    height: 11px;\n    padding: 0 2px;\n    display: inline-block;\n  }\n\n  .levelRight {\n    width: 30px;\n    height: 12px;\n  }\n\n  .levelRight2 {\n    width: 19px;\n    height: 19px;\n    text-align: center;\n    line-height: 18px;\n    font-size: 9px;\n  }\n\n  .levelAll {\n    width: 4px;\n    height: 5px;\n  }\n\n  .levelpos {\n    top: -3px;\n    left: 11px;\n  }\n}\n\n.small {\n  height: 10px;\n  line-height: 10px;\n  font-size: 10px;\n  .highlight {\n    height: 10px;\n    width: 18px;\n    animation: movesmall 2s infinite;\n  }\n\n  .invitecode {\n    color: #543e24;\n    font-size: 6px;\n  }\n\n  .crown {\n    width: 8px;\n    height: 8px;\n    margin: 0;\n  }\n\n  .levelIcon {\n    width: 10px;\n    height: 10px;\n    padding: 0 2px;\n  }\n\n  .levelRight {\n    width: 28px;\n    height: 10px;\n  }\n\n  .levelRight2 {\n    width: 16px;\n    height: 16px;\n    text-align: center;\n    line-height: 16px;\n    font-size: 8px;\n  }\n\n  .levelAll {\n    width: 3px;\n    height: 4px;\n  }\n\n  .levelpos {\n    top: -2px;\n    left: 10px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".level-icon": {
          "display": "flex",
          "align-items": "center"
        },
        "@keyframes movesmall": {
          "0%": {
            "left": "0px",
            "opacity": "1"
          },
          "80%": {
            "opacity": "0"
          },
          "100%": {
            "opacity": "0",
            "left": "49px"
          }
        },
        "@keyframes movemedium": {
          "0%": {
            "left": "0px",
            "opacity": "1"
          },
          "80%": {
            "opacity": "0"
          },
          "100%": {
            "opacity": "0",
            "left": "50px"
          }
        },
        "@keyframes movelarge": {
          "0%": {
            "left": "0px",
            "opacity": "1"
          },
          "80%": {
            "opacity": "0"
          },
          "100%": {
            "opacity": "0",
            "left": "70px"
          }
        },
        ".highlight": {
          "position": "absolute",
          "top": "0",
          "left": "-1px"
        },
        ".levelbox": {
          "padding": "0 5px 0 4px",
          "color": "#999",
          "position": "relative",
          "&.goldenBg": {
            "background": "linear-gradient(to right, #f6d995, #dfa35d)",
            "color": "#333",
            "border-radius": "2px",
            "img,    span": {
              "display": "inline-block",
              "vertical-align": "middle"
            }
          }
        },
        ".levelRight": {
          "display": "inline-block"
        },
        ".levelRight2": {
          "display": "inline-block",
          "color": "#fff"
        },
        ".levelpos": {
          "position": "absolute"
        },
        ".crown": {
          "padding-right": "2px"
        },
        ".large": {
          "height": "18px",
          "font-size": "12px",
          "line-height": "18px",
          ".levelbox": {
            "overflow": "hidden",
            "&.goldenBg": {
              "padding": "0 4px"
            }
          },
          ".highlight": {
            "height": "19px",
            "width": "21px",
            "animation": "movelarge 2s infinite"
          },
          ".invitecode": {
            "color": "#543e24",
            "font-size": "10px"
          },
          ".crown": {
            "width": "12px",
            "height": "12px"
          },
          ".levelIcon": {
            "width": "14px",
            "height": "14px",
            "padding": "0 3px",
            "display": "inline-block"
          },
          ".levelRight": {
            "width": "39px",
            "height": "15px"
          },
          ".levelRight2": {
            "width": "25px",
            "height": "24px",
            "text-align": "center",
            "line-height": "24px",
            "font-size": "11px"
          },
          ".levelAll": {
            "width": "4px",
            "height": "5px"
          },
          ".levelpos": {
            "top": "-5px",
            "left": "14px"
          }
        },
        ".medium": {
          "height": "14px",
          "font-size": "10px",
          "line-height": "14px",
          ".levelbox": {
            "height": "14px"
          },
          ".highlight": {
            "height": "14px",
            "width": "18px",
            "animation": "movemedium 2s infinite"
          },
          ".invitecode": {
            "color": "#543e24",
            "font-size": "8px"
          },
          ".crown": {
            "width": "10px",
            "height": "10px",
            "margin": "0"
          },
          ".levelIcon": {
            "width": "11px",
            "height": "11px",
            "padding": "0 2px",
            "display": "inline-block"
          },
          ".levelRight": {
            "width": "30px",
            "height": "12px"
          },
          ".levelRight2": {
            "width": "19px",
            "height": "19px",
            "text-align": "center",
            "line-height": "18px",
            "font-size": "9px"
          },
          ".levelAll": {
            "width": "4px",
            "height": "5px"
          },
          ".levelpos": {
            "top": "-3px",
            "left": "11px"
          }
        },
        ".small": {
          "height": "10px",
          "line-height": "10px",
          "font-size": "10px",
          ".highlight": {
            "height": "10px",
            "width": "18px",
            "animation": "movesmall 2s infinite"
          },
          ".invitecode": {
            "color": "#543e24",
            "font-size": "6px"
          },
          ".crown": {
            "width": "8px",
            "height": "8px",
            "margin": "0"
          },
          ".levelIcon": {
            "width": "10px",
            "height": "10px",
            "padding": "0 2px"
          },
          ".levelRight": {
            "width": "28px",
            "height": "10px"
          },
          ".levelRight2": {
            "width": "16px",
            "height": "16px",
            "text-align": "center",
            "line-height": "16px",
            "font-size": "8px"
          },
          ".levelAll": {
            "width": "3px",
            "height": "4px"
          },
          ".levelpos": {
            "top": "-2px",
            "left": "10px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/publish/View.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 看法 -->\n<template>\n  <div class=\"view-wrap\">\n    <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\" label-position=\"top\">\n      <el-form-item label=\"摘要\" prop=\"content\">\n        <el-input\n          type=\"textarea\"\n          v-model=\"ruleFormData.content\"\n          :autosize=\"{ minRows: 10, maxRows: 40 }\"\n          maxlength=\"500\"\n          show-word-limit\n          placeholder=\"写下你的看点，分享你的心情\"\n        ></el-input>\n      </el-form-item>\n      <!-- <el-form-item>\n        <el-button type=\"primary\" >立即创建</el-button>\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n      </el-form-item>-->\n    </el-form>\n    <div>\n      <UpoadImg ref=\"UpoadImg\" :limit=\"limit\" :multiple=\"multiple\" :fileList=\"imgList\" :uoploadImgList=\"uoploadImgList\" />\n    </div>\n    <Btns @saveHand=\"saveHand\" @publishHand=\"publishHand\" />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport Btns from './Btns';\nimport UpoadImg from './UpoadImg';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { Btns, UpoadImg },\n  props: {\n    ruleForm: {\n      type: Object,\n      default() {\n        return {\n          content: '',\n          picShortObjs: [],\n          picObjs: []\n        };\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      rules: {\n        content: [{ required: true, message: '请填写摘要', trigger: 'blur' }]\n      },\n      limit: 9,\n      multiple: true,\n      imgList: [],\n      uoploadImgList: {\n        picShortObjs: [],\n        picObjs: []\n      },\n      ruleFormData: this.ruleForm\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    ruleForm(val) {\n      this.ruleFormData = val;\n    }\n  },\n  //方法集合\n  methods: {\n    saveHand() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.ruleFormData.picShortObjs = this.$refs.UpoadImg.uoploadImgList.picShortObjs;\n          this.ruleFormData.picObjs = this.$refs.UpoadImg.uoploadImgList.picObjs;\n          this.$emit('saveHand', this.ruleFormData, '0');\n        } else {\n          return false;\n        }\n      });\n    },\n    publishHand() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.ruleFormData.picShortObjs = this.$refs.UpoadImg.uoploadImgList.picShortObjs;\n          this.ruleFormData.picObjs = this.$refs.UpoadImg.uoploadImgList.picObjs;\n          this.$emit('publishHand', this.ruleFormData, '0');\n        } else {\n          return false;\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    if (this.$route.query.type && this.$route.query.type == 'edit') {\n      // 编辑\n      this.imgList = this.ruleFormData.picObjs;\n      this.uoploadImgList.picObjs = this.ruleFormData.picObjs;\n      this.uoploadImgList.picShortObjs = this.ruleFormData.picShortObjs;\n      //\n    }\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 看法 -->\n<template>\n  <div class=\"view-wrap\">\n    <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\" label-position=\"top\">\n      <el-form-item label=\"摘要\" prop=\"content\">\n        <el-input\n          type=\"textarea\"\n          v-model=\"ruleFormData.content\"\n          :autosize=\"{ minRows: 10, maxRows: 40 }\"\n          maxlength=\"500\"\n          show-word-limit\n          placeholder=\"写下你的看点，分享你的心情\"\n        ></el-input>\n      </el-form-item>\n      <!-- <el-form-item>\n        <el-button type=\"primary\" >立即创建</el-button>\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n      </el-form-item>-->\n    </el-form>\n    <div>\n      <UpoadImg ref=\"UpoadImg\" :limit=\"limit\" :multiple=\"multiple\" :fileList=\"imgList\" :uoploadImgList=\"uoploadImgList\" />\n    </div>\n    <Btns @saveHand=\"saveHand\" @publishHand=\"publishHand\" />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport Btns from './Btns';\nimport UpoadImg from './UpoadImg';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { Btns, UpoadImg },\n  props: {\n    ruleForm: {\n      type: Object,\n      default() {\n        return {\n          content: '',\n          picShortObjs: [],\n          picObjs: []\n        };\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      rules: {\n        content: [{ required: true, message: '请填写摘要', trigger: 'blur' }]\n      },\n      limit: 9,\n      multiple: true,\n      imgList: [],\n      uoploadImgList: {\n        picShortObjs: [],\n        picObjs: []\n      },\n      ruleFormData: this.ruleForm\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    ruleForm(val) {\n      this.ruleFormData = val;\n    }\n  },\n  //方法集合\n  methods: {\n    saveHand() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.ruleFormData.picShortObjs = this.$refs.UpoadImg.uoploadImgList.picShortObjs;\n          this.ruleFormData.picObjs = this.$refs.UpoadImg.uoploadImgList.picObjs;\n          this.$emit('saveHand', this.ruleFormData, '0');\n        } else {\n          return false;\n        }\n      });\n    },\n    publishHand() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.ruleFormData.picShortObjs = this.$refs.UpoadImg.uoploadImgList.picShortObjs;\n          this.ruleFormData.picObjs = this.$refs.UpoadImg.uoploadImgList.picObjs;\n          this.$emit('publishHand', this.ruleFormData, '0');\n        } else {\n          return false;\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    if (this.$route.query.type && this.$route.query.type == 'edit') {\n      // 编辑\n      this.imgList = this.ruleFormData.picObjs;\n      this.uoploadImgList.picObjs = this.ruleFormData.picObjs;\n      this.uoploadImgList.picShortObjs = this.ruleFormData.picShortObjs;\n      //\n    }\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n</style>\n",
    "cssJson": [
      {}
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/publish/Article.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {
      "0": "@import '../../../../node_modules/quill/dist/quill.snow.css';"
    },
    "keepContent": "<!-- 文章 -->\n<template>\n  <div class=\"publish-artice-wrap\" v-loading=\"uploadLoading\">\n    <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\" label-position=\"top\">\n      <el-form-item label=\"标题\" prop=\"title\">\n        <el-input v-model=\"ruleFormData.title\" type=\"text\" maxlength=\"100\" show-word-limit placeholder=\"请输入标题\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"来源\" prop=\"invitationSource\">\n        <el-input v-model=\"ruleFormData.invitationSource\" type=\"text\" maxlength=\"30\" show-word-limit placeholder=\"请输入来源\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"摘要\" prop=\"content\">\n        <el-input\n          type=\"textarea\"\n          v-model=\"ruleFormData.content\"\n          :autosize=\"{ minRows: 10, maxRows: 40 }\"\n          maxlength=\"500\"\n          show-word-limit\n          placeholder=\"写下你看点，分享你的心情\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"封面\" prop=\"upload\">\n        <div>\n          <el-upload\n            class=\"avatar-uploader\"\n            :action=\"actionUrl\"\n            :headers=\"headers\"\n            :show-file-list=\"false\"\n            :on-success=\"handleAvatarSuccess\"\n            :before-upload=\"beforeAvatarUpload\"\n          >\n            <img v-if=\"articleImg\" :src=\"articleImg\" class=\"avatar\" />\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n          </el-upload>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"文章内容\" prop=\"articleContent\">\n        <div>\n          <el-upload\n            class=\"avatar-uploaders\"\n            :action=\"actionUrl\"\n            :headers=\"headers\"\n            :show-file-list=\"false\"\n            :on-success=\"uploadSuccess\"\n            :on-error=\"uploadError\"\n            :before-upload=\"beforeUpload\"\n          ></el-upload>\n          <quill-editor\n            class=\"ql-editor\"\n            v-model=\"ruleFormData.articleContent\"\n            ref=\"myQuillEditor\"\n            :options=\"editorOption\"\n            @blur=\"onEditorBlur($event)\"\n            @focus=\"onEditorFocus($event)\"\n            @change=\"onEditorChange($event)\"\n          ></quill-editor>\n        </div>\n      </el-form-item>\n      <!-- <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">立即创建</el-button>\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n      </el-form-item>-->\n    </el-form>\n    <Btns @saveHand=\"saveHand\" @publishHand=\"publishHand\" class=\"btn\" />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { uploadPicture } from './server';\nimport { addQuillTitle } from './quill';\nimport Btns from './Btns';\nconst toolbarOptions = [\n  ['bold', 'italic', 'underline', 'strike'], //加粗，斜体，下划线，删除线\n  ['blockquote'], //引用，代码块\n\n  [{ header: 1 }, { header: 2 }], // 标题，键值对的形式；1、2表示字体大小\n  [{ list: 'ordered' }, { list: 'bullet' }], //列表\n  [{ script: 'sub' }, { script: 'super' }], // 上下标\n  [{ indent: '-1' }, { indent: '+1' }], // 缩进\n  [{ direction: 'rtl' }], // 文本方向\n  [{ size: ['small', false, 'large', 'huge'] }], // 字体大小\n  [{ header: [1, 2, 3, 4, 5, 6, false] }], //几级标题\n  [{ color: [] }, { background: [] }], // 字体颜色，字体背景颜色\n  [{ font: [] }], //字体\n  [{ align: [] }], //对齐方式\n\n  ['clean'], //清除字体样式\n  ['link', 'image'] //上传图片、上传视频\n];\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { Btns },\n  props: {\n    ruleForm: {\n      type: Object,\n      default() {\n        return {\n          title: '',\n          content: '',\n          invitationSource: '',\n          picShortObjs: [],\n          picObjs: [],\n          articleContent: '',\n          articleImg: ''\n        };\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      ruleFormData: this.ruleForm,\n      uploadLoading: false, // 根据图片上传状态来确定是否显示loading动画，刚开始是false,不显示\n      editorOption: {\n        placeholder: '',\n        theme: 'snow', // or 'bubble'\n        modules: {\n          toolbar: {\n            container: toolbarOptions,\n            handlers: {\n              image: function(value) {\n                if (value) {\n                  // 触发input框选择图片文件\n                  document.querySelector('.avatar-uploaders input').click();\n                } else {\n                  this.quill.format('image', false);\n                }\n              }\n            }\n          }\n        }\n      },\n      // ruleForm: {\n      //   title: \"\",\n      //   content: \"\",\n      //   summary: ''\n      // },\n      rules: {\n        title: [{ required: true, message: '请输入标题', trigger: 'blur' }],\n        invitationSource: [{ required: true, message: '请输入来源', trigger: 'blur' }],\n        content: [{ required: true, message: '请输入摘要', trigger: 'blur' }],\n        articleContent: [{ required: true, message: '请输入文章内容', trigger: 'blur' }]\n      },\n      imageUrl: '',\n      imgList: [],\n      limit: 1,\n      multiple: false,\n      actionUrl: uploadPicture(),\n      articleImg: '',\n      headers: {\n        Authorization: localStorage.getItem('accessToken')\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    editor() {\n      return this.$refs.vueQuillEditor.quill;\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    ruleForm(val) {\n      this.ruleFormData = val;\n    }\n  },\n  //方法集合\n  methods: {\n    handleAvatarSuccess(res, file) {\n      // console.log(file,909090)\n      this.articleImg = file.response.data.jaPicShortArra[0].url;\n      this.uploadLoading = false;\n    },\n    beforeAvatarUpload(file) {\n      const isLt2M = file.size / 1024 / 1024 < 3;\n      const textArr = file.name.split('.');\n      const isPng = textArr[textArr.length - 1].toLowerCase();\n      if (isPng.toLocaleLowerCase() == 'jpg' || isPng.toLocaleLowerCase() == 'png') {\n        if (!isLt2M) {\n          this.$message.error('单个文件不可超过3 MB!');\n          return false;\n        }\n      } else {\n        this.$message('仅支持上传png、jpg格式的文件');\n        return false;\n      }\n      this.uploadLoading = true;\n    },\n    saveHand() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.ruleFormData.articleImg = this.articleImg;\n          // this.$emit('saveHand', this.ruleFormData, '0')\n          // this.ruleFormData.articleImg = this.$refs.UpoadImg.uoploadImgList.picShortObjs[0].url;\n          // console.log(this.ruleFormData,989889)\n          //\n          this.$emit('saveHand', this.ruleFormData, '1');\n        } else {\n          return false;\n        }\n      });\n    },\n    publishHand() {\n      //\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.ruleFormData.articleImg = this.articleImg;\n          // this.$emit('publishHand', this.ruleFormData, '1')\n          // this.ruleFormData.articleImg = this.$refs.UpoadImg.uoploadImgList.picShortObjs[0].url;\n          // this.ruleFormData.picObjs = this.$refs.UpoadImg.uoploadImgList.picObjs;\n\n          this.$emit('publishHand', this.ruleFormData, '1');\n        } else {\n          return false;\n        }\n      });\n    },\n    onEditorReady() {\n      // 准备编辑器\n    },\n    onEditorBlur() {}, // 失去焦点事件\n    onEditorFocus() {}, // 获得焦点事件\n    onEditorChange({ html }) {\n      // console.log(\"---内容改变事件---\")\n      this.ruleFormData.articleContent = html;\n      // console.log(html)\n    }, // 内容改变事件\n    beforeUpload() {\n      // 显示loading动画\n      this.uploadLoading = true;\n    },\n    uploadSuccess(res) {\n      // res为图片服务器返回的数据\n      // 获取富文本组件实例\n      // console.log(res,999999);\n      let quill = this.$refs.myQuillEditor.quill;\n      // 如果上传成功\n      if (res.code == 200) {\n        // 获取光标所在位置\n        let length = quill.getSelection().index;\n        // 插入图片  res.url为服务器返回的图片地址\n        quill.insertEmbed(length, 'image', res.data.jaPicShortArra[0].url);\n        // 调整光标到最后\n        quill.setSelection(length + 1);\n      } else {\n        this.$message.error('图片插入失败');\n      }\n      // loading动画消失\n      this.uploadLoading = false;\n    },\n    // 富文本图片上传失败\n    uploadError() {\n      // loading动画消失\n      this.uploadLoading = false;\n      this.$message.error('图片插入失败');\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    if (this.$route.query.type && this.$route.query.type == 'edit') {\n      // 编辑\n      this.articleImg = this.ruleFormData.articleImg || '';\n\n      // this.imgList = this.ruleFormData.picObjs;\n      //\n    }\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    addQuillTitle();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 文章 -->\n<template>\n  <div class=\"publish-artice-wrap\" v-loading=\"uploadLoading\">\n    <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\" label-position=\"top\">\n      <el-form-item label=\"标题\" prop=\"title\">\n        <el-input v-model=\"ruleFormData.title\" type=\"text\" maxlength=\"100\" show-word-limit placeholder=\"请输入标题\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"来源\" prop=\"invitationSource\">\n        <el-input v-model=\"ruleFormData.invitationSource\" type=\"text\" maxlength=\"30\" show-word-limit placeholder=\"请输入来源\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"摘要\" prop=\"content\">\n        <el-input\n          type=\"textarea\"\n          v-model=\"ruleFormData.content\"\n          :autosize=\"{ minRows: 10, maxRows: 40 }\"\n          maxlength=\"500\"\n          show-word-limit\n          placeholder=\"写下你看点，分享你的心情\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"封面\" prop=\"upload\">\n        <div>\n          <el-upload\n            class=\"avatar-uploader\"\n            :action=\"actionUrl\"\n            :headers=\"headers\"\n            :show-file-list=\"false\"\n            :on-success=\"handleAvatarSuccess\"\n            :before-upload=\"beforeAvatarUpload\"\n          >\n            <img v-if=\"articleImg\" :src=\"articleImg\" class=\"avatar\" />\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n          </el-upload>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"文章内容\" prop=\"articleContent\">\n        <div>\n          <el-upload\n            class=\"avatar-uploaders\"\n            :action=\"actionUrl\"\n            :headers=\"headers\"\n            :show-file-list=\"false\"\n            :on-success=\"uploadSuccess\"\n            :on-error=\"uploadError\"\n            :before-upload=\"beforeUpload\"\n          ></el-upload>\n          <quill-editor\n            class=\"ql-editor\"\n            v-model=\"ruleFormData.articleContent\"\n            ref=\"myQuillEditor\"\n            :options=\"editorOption\"\n            @blur=\"onEditorBlur($event)\"\n            @focus=\"onEditorFocus($event)\"\n            @change=\"onEditorChange($event)\"\n          ></quill-editor>\n        </div>\n      </el-form-item>\n      <!-- <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">立即创建</el-button>\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n      </el-form-item>-->\n    </el-form>\n    <Btns @saveHand=\"saveHand\" @publishHand=\"publishHand\" class=\"btn\" />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { uploadPicture } from './server';\nimport { addQuillTitle } from './quill';\nimport Btns from './Btns';\nconst toolbarOptions = [\n  ['bold', 'italic', 'underline', 'strike'], //加粗，斜体，下划线，删除线\n  ['blockquote'], //引用，代码块\n\n  [{ header: 1 }, { header: 2 }], // 标题，键值对的形式；1、2表示字体大小\n  [{ list: 'ordered' }, { list: 'bullet' }], //列表\n  [{ script: 'sub' }, { script: 'super' }], // 上下标\n  [{ indent: '-1' }, { indent: '+1' }], // 缩进\n  [{ direction: 'rtl' }], // 文本方向\n  [{ size: ['small', false, 'large', 'huge'] }], // 字体大小\n  [{ header: [1, 2, 3, 4, 5, 6, false] }], //几级标题\n  [{ color: [] }, { background: [] }], // 字体颜色，字体背景颜色\n  [{ font: [] }], //字体\n  [{ align: [] }], //对齐方式\n\n  ['clean'], //清除字体样式\n  ['link', 'image'] //上传图片、上传视频\n];\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { Btns },\n  props: {\n    ruleForm: {\n      type: Object,\n      default() {\n        return {\n          title: '',\n          content: '',\n          invitationSource: '',\n          picShortObjs: [],\n          picObjs: [],\n          articleContent: '',\n          articleImg: ''\n        };\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      ruleFormData: this.ruleForm,\n      uploadLoading: false, // 根据图片上传状态来确定是否显示loading动画，刚开始是false,不显示\n      editorOption: {\n        placeholder: '',\n        theme: 'snow', // or 'bubble'\n        modules: {\n          toolbar: {\n            container: toolbarOptions,\n            handlers: {\n              image: function(value) {\n                if (value) {\n                  // 触发input框选择图片文件\n                  document.querySelector('.avatar-uploaders input').click();\n                } else {\n                  this.quill.format('image', false);\n                }\n              }\n            }\n          }\n        }\n      },\n      // ruleForm: {\n      //   title: \"\",\n      //   content: \"\",\n      //   summary: ''\n      // },\n      rules: {\n        title: [{ required: true, message: '请输入标题', trigger: 'blur' }],\n        invitationSource: [{ required: true, message: '请输入来源', trigger: 'blur' }],\n        content: [{ required: true, message: '请输入摘要', trigger: 'blur' }],\n        articleContent: [{ required: true, message: '请输入文章内容', trigger: 'blur' }]\n      },\n      imageUrl: '',\n      imgList: [],\n      limit: 1,\n      multiple: false,\n      actionUrl: uploadPicture(),\n      articleImg: '',\n      headers: {\n        Authorization: localStorage.getItem('accessToken')\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    editor() {\n      return this.$refs.vueQuillEditor.quill;\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    ruleForm(val) {\n      this.ruleFormData = val;\n    }\n  },\n  //方法集合\n  methods: {\n    handleAvatarSuccess(res, file) {\n      // console.log(file,909090)\n      this.articleImg = file.response.data.jaPicShortArra[0].url;\n      this.uploadLoading = false;\n    },\n    beforeAvatarUpload(file) {\n      const isLt2M = file.size / 1024 / 1024 < 3;\n      const textArr = file.name.split('.');\n      const isPng = textArr[textArr.length - 1].toLowerCase();\n      if (isPng.toLocaleLowerCase() == 'jpg' || isPng.toLocaleLowerCase() == 'png') {\n        if (!isLt2M) {\n          this.$message.error('单个文件不可超过3 MB!');\n          return false;\n        }\n      } else {\n        this.$message('仅支持上传png、jpg格式的文件');\n        return false;\n      }\n      this.uploadLoading = true;\n    },\n    saveHand() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.ruleFormData.articleImg = this.articleImg;\n          // this.$emit('saveHand', this.ruleFormData, '0')\n          // this.ruleFormData.articleImg = this.$refs.UpoadImg.uoploadImgList.picShortObjs[0].url;\n          // console.log(this.ruleFormData,989889)\n          //\n          this.$emit('saveHand', this.ruleFormData, '1');\n        } else {\n          return false;\n        }\n      });\n    },\n    publishHand() {\n      //\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.ruleFormData.articleImg = this.articleImg;\n          // this.$emit('publishHand', this.ruleFormData, '1')\n          // this.ruleFormData.articleImg = this.$refs.UpoadImg.uoploadImgList.picShortObjs[0].url;\n          // this.ruleFormData.picObjs = this.$refs.UpoadImg.uoploadImgList.picObjs;\n\n          this.$emit('publishHand', this.ruleFormData, '1');\n        } else {\n          return false;\n        }\n      });\n    },\n    onEditorReady() {\n      // 准备编辑器\n    },\n    onEditorBlur() {}, // 失去焦点事件\n    onEditorFocus() {}, // 获得焦点事件\n    onEditorChange({ html }) {\n      // console.log(\"---内容改变事件---\")\n      this.ruleFormData.articleContent = html;\n      // console.log(html)\n    }, // 内容改变事件\n    beforeUpload() {\n      // 显示loading动画\n      this.uploadLoading = true;\n    },\n    uploadSuccess(res) {\n      // res为图片服务器返回的数据\n      // 获取富文本组件实例\n      // console.log(res,999999);\n      let quill = this.$refs.myQuillEditor.quill;\n      // 如果上传成功\n      if (res.code == 200) {\n        // 获取光标所在位置\n        let length = quill.getSelection().index;\n        // 插入图片  res.url为服务器返回的图片地址\n        quill.insertEmbed(length, 'image', res.data.jaPicShortArra[0].url);\n        // 调整光标到最后\n        quill.setSelection(length + 1);\n      } else {\n        this.$message.error('图片插入失败');\n      }\n      // loading动画消失\n      this.uploadLoading = false;\n    },\n    // 富文本图片上传失败\n    uploadError() {\n      // loading动画消失\n      this.uploadLoading = false;\n      this.$message.error('图片插入失败');\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    if (this.$route.query.type && this.$route.query.type == 'edit') {\n      // 编辑\n      this.articleImg = this.ruleFormData.articleImg || '';\n\n      // this.imgList = this.ruleFormData.picObjs;\n      //\n    }\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    addQuillTitle();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n@import '../../../../node_modules/quill/dist/quill.snow.css';\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n.ql-container {\n  height: 250px;\n}\n.publish-artice-wrap .avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.publish-artice-wrap .avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n.publish-artice-wrap .avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.publish-artice-wrap .avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n\n/* 字体大小 */\n.ql-snow .ql-picker.ql-size .ql-picker-label::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item::before {\n  content: '默认' !important;\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='small']::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='small']::before {\n  content: '小号' !important;\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='large']::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='large']::before {\n  content: '大号' !important;\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='huge']::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='huge']::before {\n  content: '特大号' !important;\n}\n\n/* 标题 */\n.ql-snow .ql-picker.ql-header .ql-picker-label::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item::before {\n  content: '默认' !important;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='1']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='1']::before {\n  content: '标题1' !important;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='2']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='2']::before {\n  content: '标题2' !important;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='3']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='3']::before {\n  content: '标题3' !important;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='4']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='4']::before {\n  content: '标题4' !important;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='5']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='5']::before {\n  content: '标题5' !important;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value='6']::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='6']::before {\n  content: '标题6' !important;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.publish-artice-wrap {\n  .avatar-uploader {\n    display: inline-block;\n    margin-right: 10px;\n  }\n}\n.btn {\n  margin-bottom: 30px;\n}\n</style>\n",
    "cssJson": [
      {
        ".avatar-uploader .el-upload": {
          "border": "1px dashed #d9d9d9",
          "border-radius": "6px",
          "cursor": "pointer",
          "position": "relative",
          "overflow": "hidden"
        },
        ".avatar-uploader .el-upload:hover": {
          "border-color": "#409eff"
        },
        ".avatar-uploader-icon": {
          "font-size": "28px",
          "color": "#8c939d",
          "width": "178px",
          "height": "178px",
          "line-height": "178px",
          "text-align": "center"
        },
        ".avatar": {
          "width": "178px",
          "height": "178px",
          "display": "block"
        },
        ".ql-container": {
          "height": "250px"
        },
        ".publish-artice-wrap .avatar-uploader .el-upload": {
          "border": "1px dashed #d9d9d9",
          "border-radius": "6px",
          "cursor": "pointer",
          "position": "relative",
          "overflow": "hidden"
        },
        ".publish-artice-wrap .avatar-uploader .el-upload:hover": {
          "border-color": "#409eff"
        },
        ".publish-artice-wrap .avatar-uploader-icon": {
          "font-size": "28px",
          "color": "#8c939d",
          "width": "178px",
          "height": "178px",
          "line-height": "178px",
          "text-align": "center"
        },
        ".publish-artice-wrap .avatar": {
          "width": "178px",
          "height": "178px",
          "display": "block"
        },
        ".ql-snow .ql-picker.ql-size .ql-picker-label::before,.ql-snow .ql-picker.ql-size .ql-picker-item::before": {
          "content": "'默认' !important"
        },
        ".ql-snow .ql-picker.ql-size .ql-picker-label[data-value='small']::before,.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='small']::before": {
          "content": "'小号' !important"
        },
        ".ql-snow .ql-picker.ql-size .ql-picker-label[data-value='large']::before,.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='large']::before": {
          "content": "'大号' !important"
        },
        ".ql-snow .ql-picker.ql-size .ql-picker-label[data-value='huge']::before,.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='huge']::before": {
          "content": "'特大号' !important"
        },
        ".ql-snow .ql-picker.ql-header .ql-picker-label::before,.ql-snow .ql-picker.ql-header .ql-picker-item::before": {
          "content": "'默认' !important"
        },
        ".ql-snow .ql-picker.ql-header .ql-picker-label[data-value='1']::before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='1']::before": {
          "content": "'标题1' !important"
        },
        ".ql-snow .ql-picker.ql-header .ql-picker-label[data-value='2']::before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='2']::before": {
          "content": "'标题2' !important"
        },
        ".ql-snow .ql-picker.ql-header .ql-picker-label[data-value='3']::before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='3']::before": {
          "content": "'标题3' !important"
        },
        ".ql-snow .ql-picker.ql-header .ql-picker-label[data-value='4']::before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='4']::before": {
          "content": "'标题4' !important"
        },
        ".ql-snow .ql-picker.ql-header .ql-picker-label[data-value='5']::before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='5']::before": {
          "content": "'标题5' !important"
        },
        ".ql-snow .ql-picker.ql-header .ql-picker-label[data-value='6']::before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-value='6']::before": {
          "content": "'标题6' !important"
        }
      },
      {
        ".publish-artice-wrap": {
          ".avatar-uploader": {
            "display": "inline-block",
            "margin-right": "10px"
          }
        },
        ".btn": {
          "margin-bottom": "30px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/head/head.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"tophead\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"11\" :offset=\"5\" align=\"right\">\n        <div class=\"sumlist-L\">\n          <el-badge :is-dot=\"!commentFlag\" class=\"item\"><span @click=\"goUrl(1)\">评论我的</span></el-badge>\n          <el-badge :is-dot=\"!sharedFlag\" class=\"item\"><span @click=\"goUrl(2)\">分享我的</span></el-badge>\n          <el-badge :is-dot=\"!pointFlag\" class=\"item\"><span @click=\"goUrl(3)\">点赞我的</span></el-badge>\n          <el-button type=\"primary\" @click=\"goPublishHand()\">发布看点</el-button>\n        </div>\n      </el-col>\n      <el-col :span=\"8\">\n        <ul class=\"sumlist-R\">\n          <li>\n            <span>{{ focusObj.attention }}</span>\n            <p>关注</p>\n          </li>\n          <li>\n            <span>{{ focusObj.beAttention }}</span>\n            <p>粉丝</p>\n          </li>\n          <li>\n            <span>{{ total }}</span>\n            <p>看点</p>\n          </li>\n        </ul>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { findNoticeFlag, focusCount, myInvitationCount } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      total: 0,\n      sharedFlag: true,\n      commentFlag: true,\n      pointFlag: true,\n      focusObj: {\n        beAttention: '0',\n        attention: '0',\n        invitationCount: '0'\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    myInvitationCount() {\n      myInvitationCount({\n        userId: localStorage.getItem('userId')\n      }).then(res => {\n        if (res.code == '200') {\n          this.total = res.data;\n        }\n      });\n    },\n    goUrl(a) {\n      switch (a) {\n      case 1:\n        this.$router.push({ path: '/app/comment' });\n        break;\n      case 2:\n        this.$router.push({ path: '/app/share' });\n        break;\n      case 3:\n        this.$router.push({ path: '/app/thumbsup' });\n        break;\n      }\n    },\n    comInit() {\n      this.findNoticeFlag();\n      this.focusCount();\n      this.myInvitationCount();\n    },\n    focusCount() {\n      focusCount({}).then(res => {\n        if (res.code == '200') {\n          if (res.data != null) {\n            this.focusObj = res.data;\n          }\n        }\n      });\n    },\n    findNoticeFlag() {\n      findNoticeFlag({}).then(res => {\n        if (res.code == '200') {\n          if (res.data != null) {\n            this.sharedFlag = res.data.sharedFlag;\n            this.commentFlag = res.data.commentFlag;\n            this.pointFlag = res.data.pointFlag;\n          }\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    goPublishHand() {\n      this.$router.push({ path: '/app/publish' });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"tophead\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"11\" :offset=\"5\" align=\"right\">\n        <div class=\"sumlist-L\">\n          <el-badge :is-dot=\"!commentFlag\" class=\"item\"><span @click=\"goUrl(1)\">评论我的</span></el-badge>\n          <el-badge :is-dot=\"!sharedFlag\" class=\"item\"><span @click=\"goUrl(2)\">分享我的</span></el-badge>\n          <el-badge :is-dot=\"!pointFlag\" class=\"item\"><span @click=\"goUrl(3)\">点赞我的</span></el-badge>\n          <el-button type=\"primary\" @click=\"goPublishHand()\">发布看点</el-button>\n        </div>\n      </el-col>\n      <el-col :span=\"8\">\n        <ul class=\"sumlist-R\">\n          <li>\n            <span>{{ focusObj.attention }}</span>\n            <p>关注</p>\n          </li>\n          <li>\n            <span>{{ focusObj.beAttention }}</span>\n            <p>粉丝</p>\n          </li>\n          <li>\n            <span>{{ total }}</span>\n            <p>看点</p>\n          </li>\n        </ul>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { findNoticeFlag, focusCount, myInvitationCount } from '../server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      total: 0,\n      sharedFlag: true,\n      commentFlag: true,\n      pointFlag: true,\n      focusObj: {\n        beAttention: '0',\n        attention: '0',\n        invitationCount: '0'\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    myInvitationCount() {\n      myInvitationCount({\n        userId: localStorage.getItem('userId')\n      }).then(res => {\n        if (res.code == '200') {\n          this.total = res.data;\n        }\n      });\n    },\n    goUrl(a) {\n      switch (a) {\n      case 1:\n        this.$router.push({ path: '/app/comment' });\n        break;\n      case 2:\n        this.$router.push({ path: '/app/share' });\n        break;\n      case 3:\n        this.$router.push({ path: '/app/thumbsup' });\n        break;\n      }\n    },\n    comInit() {\n      this.findNoticeFlag();\n      this.focusCount();\n      this.myInvitationCount();\n    },\n    focusCount() {\n      focusCount({}).then(res => {\n        if (res.code == '200') {\n          if (res.data != null) {\n            this.focusObj = res.data;\n          }\n        }\n      });\n    },\n    findNoticeFlag() {\n      findNoticeFlag({}).then(res => {\n        if (res.code == '200') {\n          if (res.data != null) {\n            this.sharedFlag = res.data.sharedFlag;\n            this.commentFlag = res.data.commentFlag;\n            this.pointFlag = res.data.pointFlag;\n          }\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    goPublishHand() {\n      this.$router.push({ path: '/app/publish' });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.tophead {\n  background: #fff;\n  font-size: 14px;\n  margin-bottom: 20px;\n  .el-badge {\n    margin-left: 35px;\n    cursor: pointer;\n  }\n}\n.sumlist-L {\n  margin-top: 25px;\n  span {\n    cursor: pointer;\n    label {\n      font-size: 12px;\n      color: #666;\n    }\n  }\n  button {\n    background: #f57d00;\n    border: #f57d00;\n    padding: 12px 30px;\n    margin-left: 35px;\n  }\n}\n.sumlist-R {\n  background: #f7f7fa;\n  padding: 25px 15px;\n  border-radius: 6px;\n  overflow: hidden;\n  display: flex;\n  li {\n    flex: 1;\n    border-right: #2d53eb solid 1px;\n    padding: 0 25px;\n    text-align: center;\n    p {\n      margin-top: 5px;\n    }\n    &:last-child {\n      border: 0;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".tophead": {
          "background": "#fff",
          "font-size": "14px",
          "margin-bottom": "20px",
          ".el-badge": {
            "margin-left": "35px",
            "cursor": "pointer"
          }
        },
        ".sumlist-L": {
          "margin-top": "25px",
          "span": {
            "cursor": "pointer",
            "label": {
              "font-size": "12px",
              "color": "#666"
            }
          },
          "button": {
            "background": "#f57d00",
            "border": "#f57d00",
            "padding": "12px 30px",
            "margin-left": "35px"
          }
        },
        ".sumlist-R": {
          "background": "#f7f7fa",
          "padding": "25px 15px",
          "border-radius": "6px",
          "overflow": "hidden",
          "display": "flex",
          "li": {
            "flex": "1",
            "border-right": "#2d53eb solid 1px",
            "padding": "0 25px",
            "text-align": "center",
            "p": {
              "margin-top": "5px"
            },
            "&:last-child": {
              "border": "0"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/elImageViewer.vue",
    "tagInfo": {
      "0": "<style scoped lang=\"less\">"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <transition name=\"viewer-fade\">\n    <div\n      tabindex=\"-1\"\n      ref=\"el-image-viewer__wrapper\"\n      class=\"el-image-viewer__wrapper image-box\"\n      :style=\"{ 'z-index': zIndex }\"\n    >\n      <template v-if=\"!errorImg\">\n        <div\n          class=\"el-image-viewer__mask\"\n          :class=\"\n            theme === 'system'\n              ? 'el-image-mask-system'\n              : theme === 'light'\n              ? 'el-image-mask-light'\n              : 'el-image-mask-drak'\n          \"\n        ></div>\n      </template>\n      <template v-else>\n        <div class=\"el-image-viewer__mask\"></div>\n      </template>\n      <!-- CLOSE -->\n      <!--      <span class=\"el-image-viewer__btn el-image-viewer__close\" @click=\"hide\">-->\n      <!--        <i class=\"el-icon-circle-close\"></i>-->\n      <!--      </span>-->\n      <!-- ARROW -->\n      <template v-if=\"!isSingle\">\n        <div\n          class=\"el-image-viewer__btn el-image-viewer-left\"\n          @click=\"prev\"\n          v-show=\"index !== 0\"\n        >\n          <span class=\"el-image-viewer__btn el-image-viewer__prev left\">\n            <i class=\"el-icon-arrow-left\" />\n          </span>\n        </div>\n        <div\n          class=\"el-image-viewer__btn el-image-viewer-left\"\n          v-show=\"index === 0\"\n        >\n          <span\n            class=\"\n              el-image-viewer__btn el-image-viewer__prev\n              disabled-arrow\n              left\n            \"\n            v-show=\"index === 0\"\n            :title=\"$t('Universal_0440')\"\n          >\n            <i class=\"el-icon-arrow-left\" />\n          </span>\n        </div>\n\n        <div\n          class=\"el-image-viewer__btn el-image-viewer-right\"\n          @click=\"next\"\n          v-show=\"index !== urlList.length - 1\"\n        >\n          <span class=\"el-image-viewer__btn el-image-viewer__next right\">\n            <i class=\"el-icon-arrow-right\" />\n          </span>\n        </div>\n        <div\n          class=\"el-image-viewer__btn el-image-viewer-right\"\n          v-show=\"index === urlList.length - 1\"\n        >\n          <span\n            class=\"\n              el-image-viewer__btn el-image-viewer__next\n              disabled-arrow\n              right\n            \"\n            v-show=\"index === urlList.length - 1\"\n            :title=\"$t('Universal_0441')\"\n          >\n            <i class=\"el-icon-arrow-right\" />\n          </span>\n        </div>\n      </template>\n      <!-- ACTIONS -->\n      <div\n        v-if=\"!errorImg\"\n        class=\"el-image-viewer__btn el-image-viewer__actions\"\n      >\n        <div class=\"el-image-viewer__actions__inner\">\n          <i class=\"el-icon-zoom-out\" @click=\"handleActions('zoomOut')\"></i>\n          <i class=\"el-icon-zoom-in\" @click=\"handleActions('zoomIn')\"></i>\n          <i class=\"el-image-viewer__actions__divider\"></i>\n          <i :class=\"mode.icon\" @click=\"toggleMode\"></i>\n          <i class=\"el-image-viewer__actions__divider\"></i>\n          <i\n            class=\"el-icon-refresh-left\"\n            @click=\"handleActions('anticlocelise')\"\n          ></i>\n          <i\n            class=\"el-icon-refresh-right\"\n            @click=\"handleActions('clocelise')\"\n          ></i>\n          <i\n            class=\"el-icon-download\"\n            @click=\"saveImages(index)\"\n            style=\"cursor: pointer\"\n          ></i>\n        </div>\n      </div>\n      <!-- CANVAS -->\n      <div v-if=\"!errorImg\" class=\"el-image-viewer__canvas image\">\n        <img\n          v-for=\"(url, i) in urlList\"\n          v-if=\"i === index\"\n          ref=\"img\"\n          class=\"el-image-viewer__img\"\n          :key=\"url\"\n          :src=\"currentImg\"\n          :style=\"imgStyle\"\n          @load=\"handleImgLoad\"\n          @error=\"handleImgError\"\n          @mousedown=\"handleMouseDown\"\n        />\n      </div>\n      <div v-else class=\"image__error\">\n        <i class=\"el-icon-picture-outline i__error\"></i>\n        <span>\n          {{ $t(\"Universal_0089\") }}\n        </span>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport { on, off } from \"element-ui/src/utils/dom\";\nimport { rafThrottle, isFirefox } from \"element-ui/src/utils/util\";\nimport fs from \"fs\";\nimport path from \"path\";\nconst dialog = window.vm.$remote.dialog;\nimport request from \"request\";\nimport bus from \"@/utils/eventbus\";\nimport { checkkArrProps } from \"@/utils\";\nconst Mode = {\n  CONTAIN: {\n    name: \"contain\",\n    icon: \"el-icon-full-screen\",\n  },\n  ORIGINAL: {\n    name: \"original\",\n    icon: \"el-icon-c-scale-to-original\",\n  },\n};\n\nconst mousewheelEventName = isFirefox() ? \"DOMMouseScroll\" : \"mousewheel\";\n\nexport default {\n  name: \"elImageViewer\",\n  props: {\n    urlList: {\n      type: Array,\n      default: () => [],\n    },\n    zIndex: {\n      type: Number,\n      default: 2000,\n    },\n    onSwitch: {\n      type: Function,\n      default: () => {},\n    },\n    onClose: {\n      type: Function,\n      default: () => {},\n    },\n    initialIndex: {\n      type: Number,\n      default: 0,\n    },\n    urlData: {\n      type: Array,\n      default: () => [],\n    },\n    agrs: {\n      type: Object,\n      default: () => {},\n    },\n    theme: {\n      type: String,\n      default: \"system\",\n    },\n  },\n\n  data() {\n    return {\n      index: this.initialIndex,\n      isShow: false,\n      infinite: true,\n      loading: false,\n      // mode: Mode.CONTAIN,\n      mode: {\n        name: Mode.ORIGINAL.name,\n        icon: Mode.ORIGINAL.icon,\n      },\n      transform: {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false,\n        clickNum: 0, // 点击次数  放大16 缩小16\n        clickMax: 16,\n        clickMin: -16,\n      },\n      contain: {}, // transform 对象\n      width: 0,\n      height: 0,\n      errorImg: false, // 错误提示\n    };\n  },\n  computed: {\n    isSingle() {\n      return this.urlList.length <= 1;\n    },\n    isFirst() {\n      return this.index === 0;\n    },\n    isLast() {\n      return this.index === this.urlList.length - 1;\n    },\n    currentImg() {\n      return this.urlList[this.index];\n    },\n    imgStyle() {\n      const { scale, deg, offsetX, offsetY, enableTransition } = this.transform;\n      const style = {\n        transform: `scale(${scale}) rotate(${deg}deg)`,\n        transition: enableTransition ? \"transform .3s\" : \"\",\n        \"margin-left\": `${offsetX}px`,\n        \"margin-top\": `${offsetY}px`,\n        width: `${this.width || this.agrs.imgList[this.index].msgBody.width}px`,\n        height: `${\n          this.height || this.agrs.imgList[this.index].msgBody.height\n        }px`,\n      };\n      if (this.mode == Mode.CONTAIN) {\n        style.maxWidth = style.maxHeight = \"100%\";\n      }\n      return style;\n    },\n\n    currentItem() {\n      return this.urlData[this.index];\n    },\n  },\n  watch: {\n    initialIndex(val) {\n      this.index = val;\n    },\n    index: {\n      handler: function (val) {\n        // 这里需要把 transform 重置\n        this.contain = this.transform;\n        this.onSwitch(val);\n        this.reset();\n        console.log(\"imageTap ===== 222222\", this.theme);\n        bus.$emit(\"imageTap\", val);\n      },\n    },\n    currentImg() {\n      console.log('urlList===', this.urlList)\n      console.log(\"index ====>\", this.index);\n      console.log(\"currentImg ====>\", this.currentImg);\n      this.reset();\n      // this.contain = this.transform\n      this.$nextTick(() => {\n        const $img = this.$refs.img[0];\n        if (!$img) {\n          this.index = 0;\n        }\n      });\n    },\n  },\n  methods: {\n    changeImg(index) {\n      this.currentImg = this.urlList[index];\n    },\n    saveImages(id) {\n      console.log(id, this.urlList[id]);\n\n      let msgBody = this.urlData[id].msgBody;\n      // let urlAdr = this.urlList[id];\n      let urlAdr = msgBody[\"mediaId\"] || this.urlList[id];\n      let reg = /(http|https):\\/\\/([\\w.]+\\/?)\\S*/;\n      if (urlAdr.match(reg)) {\n        console.log(\"网络地址\");\n        this.downloadImageAs(msgBody);\n      } else {\n        console.log(\"本地地址\");\n        this.saveImageAs(msgBody);\n      }\n    },\n    saveImageAs(fileItem) {\n      if (!fileItem.localId) return;\n      let filePath = fileItem.localId.replace(\"\\\\\", \"/\");\n      filePath = path.join(\"\", filePath);\n      filePath = filePath.substring(6);\n      fileItem.filePath = filePath;\n      // fileItem.fname = `${fileItem.fileNo}${filePath.substr(\n      //   filePath.length - 4\n      // )}`;\n      // fileItem.fname = `${this.timestamp()}${filePath.format}`;\n      fileItem.fname = `${this.timestamp()}${filePath.substr(\n        filePath.length - 4\n      )}`;\n      try {\n        const stats = fs.statSync(filePath);\n        console.log(\"stats\", stats, stats.size);\n        if (stats.size === 0) {\n          // this.$message.error(\"文件不存在\");\n          return false;\n        } else {\n          const { ipcRenderer } = require(\"electron\");\n          this.ipcRenderer = ipcRenderer;\n          this.ipcRenderer.send(\"saveAsImages\", fileItem);\n        }\n      } catch (err) {\n        console.error(\"err\", err);\n      }\n    },\n    downloadImageAs(fileItem) {\n      let filePath = fileItem.mediaId;\n      let suffix = filePath.split(\".\").reverse()[0]; //文件后缀\n      // let fname=`${this.timestamp()}${filePath.substr(filePath.length - 4)}`;\n      let fname = this.timestamp();\n      try {\n        dialog\n          .showSaveDialog({\n            title: this.$t(\"Universal_0077\"),\n            buttonLabel: this.$t(\"Universal_0052\"),\n            defaultPath: fname,\n          })\n          .then((result) => {\n            const req = request({\n              method: \"GET\",\n              uri: filePath,\n              strictSSL: false,\n            });\n            if (!result.filePath) {\n              return;\n            }\n            // console.log(suffix,result,result.filePath,`${result.filePath}.${suffix}`);\n            // let writeStream = fs.createWriteStream(result.filePath);\n            let writeStream = fs.createWriteStream(\n              `${result.filePath}.${suffix}`\n            );\n            req.pipe(writeStream);\n            req.on(\"end\", function (response) {\n              //文件写入成功\n              console.log(\"response\", response);\n            });\n            writeStream.on(\"finish\", function () {\n              writeStream.end();\n            });\n          });\n      } catch (err) {\n        console.error(\"err\", err);\n      }\n    },\n    timestamp() {\n      // 时间戳：年月日时分秒毫秒（202012161508230098）\n      let date, currentTime;\n      date = new Date();\n      this.year = date.getFullYear();\n      this.month = date.getMonth() + 1;\n      this.date = date.getDate();\n      this.hour =\n        date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\n      this.minute =\n        date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n      this.second =\n        date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\n      this.milliSeconds = date.getMilliseconds();\n      currentTime = `${this.year}${this.month}${this.date}${this.hour}${this.minute}${this.second}${this.milliSeconds}`;\n      return currentTime;\n    },\n    hide() {\n      this.deviceSupportUninstall();\n      this.onClose();\n    },\n    deviceSupportInstall() {\n      this._keyDownHandler = rafThrottle((e) => {\n        const keyCode = e.keyCode;\n        switch (keyCode) {\n        // ESC\n        case 27:\n          this.hide();\n          break;\n          // SPACE\n        case 32:\n          this.toggleMode();\n          break;\n          // LEFT_ARROW\n        case 37:\n          this.prev();\n          break;\n          // UP_ARROW\n        case 38:\n          console.log(\"缩小 ====>\");\n          this.handleActions(\"zoomIn\");\n          break;\n          // RIGHT_ARROW\n        case 39:\n          this.next();\n          break;\n          // DOWN_ARROW\n        case 40:\n          console.log(\"放大 ====>\");\n          this.handleActions(\"zoomOut\");\n          break;\n        }\n      });\n      this._mouseWheelHandler = rafThrottle((e) => {\n        const delta = e.wheelDelta ? e.wheelDelta : -e.detail;\n        console.log(\"鼠标滚轮 放大 或 缩小\");\n        if (delta > 0) {\n          this.handleMouseWheelHandler(\"zoomIn\", {\n            zoomRate: 0.9,\n            enableTransition: false,\n          });\n          // this.handleActions('zoomIn', {\n          //   zoomRate: 0.9,\n          //   enableTransition: false\n          // });\n        } else {\n          this.handleMouseWheelHandler(\"zoomOut\", {\n            zoomRate: 0.9,\n            enableTransition: false,\n          });\n          // this.handleActions('zoomOut', {\n          //   zoomRate: 0.9,\n          //   enableTransition: false\n          // });\n        }\n      });\n      on(document, \"keydown\", this._keyDownHandler);\n      on(document, mousewheelEventName, this._mouseWheelHandler);\n    },\n    deviceSupportUninstall() {\n      off(document, \"keydown\", this._keyDownHandler);\n      off(document, mousewheelEventName, this._mouseWheelHandler);\n      this._keyDownHandler = null;\n      this._mouseWheelHandler = null;\n    },\n    handleImgLoad() {\n      console.log('图片加载成功了')\n      this.loading = false;\n      this.errorImg = false;\n    },\n    handleImgError(e) {\n      console.log('图片加载失败了-----------')\n      this.loading = false;\n      e.target.alt = this.$t(\"Universal_0089\");\n      this.errorImg = true;\n    },\n    handleMouseDown(e) {\n      if (this.loading || e.button !== 0) return;\n\n      const { offsetX, offsetY } = this.transform;\n      const startX = e.pageX;\n      const startY = e.pageY;\n      this._dragHandler = rafThrottle((ev) => {\n        this.transform.offsetX = offsetX + ev.pageX - startX;\n        this.transform.offsetY = offsetY + ev.pageY - startY;\n      });\n      on(document, \"mousemove\", this._dragHandler);\n      on(document, \"mouseup\", () => {\n        off(document, \"mousemove\", this._dragHandler);\n      });\n\n      e.preventDefault();\n    },\n\n    reset() {\n      this.transform = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false,\n        clickNum: 0, // 点击次数  放大16 缩小16\n        clickMax: 16,\n        clickMin: -16,\n      };\n      this.width = 0;\n      this.height = 0;\n      this.mode = {\n        name: Mode.ORIGINAL.name,\n        icon: Mode.ORIGINAL.icon,\n      };\n      // 要将设置图片加载失败变量重置，不然一直无法显示下一张正常图片\n      this.errorImg = false\n      // this.contain = this.transform\n      // console.log('contain ===>', this.contain);\n    },\n    toggleMode() {\n      if (this.loading) return;\n\n      // const modeNames = Object.keys(Mode);\n      // const modeValues = Object.values(Mode);\n      // const index = modeValues.indexOf(this.mode);\n      // const nextIndex = (index + 1) % modeNames.length;\n      // this.mode = Mode[modeNames[nextIndex]];\n      // if (this.transform.scale !== 1 || (this.mode.name !== 'contain' && isNaN(this.contain.scale))) {\n      //   this.reset();\n      //   this.mode = {\n      //     name: Mode.ORIGINAL.name,\n      //     icon: Mode.ORIGINAL.icon\n      //   }\n      // }else {\n      //   this.transform = this.contain\n      //   this.mode = {\n      //     name: Mode.CONTAIN.name,\n      //     icon: Mode.CONTAIN.icon\n      //   }\n      // }\n      if (this.mode.name === \"original\") {\n        this.width = this.agrs.imgList[this.index].msgBody.orgWidth;\n        this.height = this.agrs.imgList[this.index].msgBody.orgHeight;\n        this.mode = {\n          name: Mode.CONTAIN.name,\n          icon: Mode.CONTAIN.icon,\n        };\n        this.transform.scale = 1;\n      } else {\n        this.width = this.agrs.imgList[this.index].msgBody.width;\n        this.height = this.agrs.imgList[this.index].msgBody.height;\n        this.mode = {\n          name: Mode.ORIGINAL.name,\n          icon: Mode.ORIGINAL.icon,\n        };\n      }\n\n      console.log(\"this.transform ===> \", this.transform);\n\n      console.log(\"width 11111 ====> height 11111 \", this.width, this.height);\n    },\n    prev() {\n      if (this.isFirst && !this.infinite) return;\n      const len = this.urlList.length;\n      this.index = (this.index - 1 + len) % len;\n      const browserWindow = window.vm.$remote.getCurrentWindow();\n      // 图片大小需要跟查看器大小比较  由大变小 图片查看器不变 由小变大 图片查看器变大\n      if (\n        this.agrs.imgList[this.index].msgBody.width >\n          browserWindow.getSize()[0] - 20 ||\n        this.agrs.imgList[this.index].msgBody.height >\n          browserWindow.getSize()[1] - 86\n      ) {\n        this.changeImageWindow();\n      }\n    },\n    next() {\n      if (this.isLast && !this.infinite) return;\n      const len = this.urlList.length;\n      this.index = (this.index + 1) % len;\n\n      // 图片大小需要跟查看器大小比较  由大变小 图片查看器不变 由小变大 图片查看器变大\n      // 获取当前窗口大小\n      const browserWindow = window.vm.$remote.getCurrentWindow();\n      console.log(\n        \"this.agrs.imgList[this.index].width ===>\",\n        this.agrs.imgList[this.index].msgBody.width\n      );\n      console.log(\n        \"this.agrs.imgList[this.index].height ===>\",\n        this.agrs.imgList[this.index].msgBody.height\n      );\n      console.log(\"image window ==>\", browserWindow.getSize());\n      if (\n        this.agrs.imgList[this.index].msgBody.width >\n          browserWindow.getSize()[0] - 20 ||\n        this.agrs.imgList[this.index].msgBody.height >\n          browserWindow.getSize()[1] - 86\n      ) {\n        this.changeImageWindow();\n      }\n    },\n\n    // change image window\n    changeImageWindow() {\n      const { ipcRenderer } = require(\"electron\");\n      console.log(\"next ====>\", this.agrs);\n      const msgType = this.agrs.msgType;\n      const imgList = this.agrs.imgList;\n      const index = this.index;\n      const flag = checkkArrProps(imgList, \"msgBody\");\n      console.log(\"flag ====> imgList 存在undefind \", flag);\n      if (flag) {\n        ipcRenderer.send(\"media-viewer-change\", { msgType, imgList, index });\n      }\n    },\n\n    // 鼠标滚轮事件放大 缩小\n    handleMouseWheelHandler(action, options = {}) {\n      if (this.loading) return;\n      const { zoomRate } = {\n        zoomRate: 0.83, // 比例 0.83\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options,\n      };\n      const { transform } = this;\n      switch (action) {\n      case \"zoomOut\":\n        transform.scale = parseFloat((transform.scale * zoomRate).toFixed(6));\n        if (transform.scale <= 0.051) {\n          transform.scale = 0.051;\n          console.log(\"zoomIn Min scale 1111111====>\", transform.scale);\n          return;\n        }\n        break;\n      case \"zoomIn\":\n        // transform.scale = parseFloat((transform.scale + zoomRate).toFixed(3));\n        transform.scale = parseFloat((transform.scale / zoomRate).toFixed(6));\n        if (transform.scale >= 19.718) {\n          transform.scale = 19.718;\n          console.log(\"zoomIn Max scale 22222====>\", transform.scale);\n          return;\n        }\n        break;\n      }\n      if (this.transform.scale !== 1) {\n        this.mode = {\n          name: Mode.ORIGINAL.name,\n          icon: Mode.ORIGINAL.icon,\n        };\n      } else {\n        this.mode = {\n          name: Mode.CONTAIN.name,\n          icon: Mode.CONTAIN.icon,\n        };\n      }\n      this.contain = transform;\n    },\n\n    handleActions(action, options = {}) {\n      console.log(\"action ====>\", action);\n      //\n      if (this.loading) return;\n      const { zoomRate, rotateDeg, enableTransition } = {\n        zoomRate: 0.83, // 比例 0.83\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options,\n      };\n      const { transform } = this;\n      // this.contain = transform\n      switch (action) {\n      case \"zoomOut\":\n        if (transform.scale <= 0.051) {\n          transform.clickNum = transform.clickMin;\n          transform.scale = 0.051;\n          console.log(\"zoomIn Min ====>\", transform.clickNum);\n          return;\n        } else {\n          transform.clickNum--;\n        }\n        // if (transform.scale > 0.2) {\n        //   transform.scale = parseFloat((transform.scale - zoomRate).toFixed(3));\n        // }\n        transform.scale = parseFloat((transform.scale * zoomRate).toFixed(3));\n        console.log(\"zoomIn Min scale ====>\", transform.scale);\n        break;\n      case \"zoomIn\":\n        if (transform.scale >= 19.718) {\n          transform.clickNum = transform.clickMax;\n          transform.scale = 19.718;\n          console.log(\"zoomIn Max ====>\", transform.clickNum);\n          return;\n        } else {\n          transform.clickNum++;\n        }\n        // transform.scale = parseFloat((transform.scale + zoomRate).toFixed(3));\n        transform.scale = parseFloat((transform.scale / zoomRate).toFixed(3));\n        console.log(\"zoomIn Max scale ====>\", transform.scale);\n        break;\n      case \"clocelise\":\n        console.log(\n          \"this.agrs.imgList[this.index].width ===>\",\n          this.agrs.imgList[this.index].msgBody.width\n        );\n        this.anticlocelise(transform);\n        transform.deg += rotateDeg;\n        break;\n      case \"anticlocelise\":\n        this.anticlocelise(transform);\n        transform.deg -= rotateDeg;\n        break;\n      }\n      if (this.transform.scale !== 1) {\n        this.mode = {\n          name: Mode.ORIGINAL.name,\n          icon: Mode.ORIGINAL.icon,\n        };\n      } else {\n        this.mode = {\n          name: Mode.CONTAIN.name,\n          icon: Mode.CONTAIN.icon,\n        };\n      }\n      this.contain = transform;\n      transform.enableTransition = enableTransition;\n    },\n    anticlocelise(transform) {\n      // eslint-disable-next-line no-case-declarations\n      const browserWindow = window.vm.$remote.getCurrentWindow();\n      if (transform.deg % 180 === 0) {\n        if (\n          this.agrs.imgList[this.index].msgBody.width >\n          browserWindow.getSize()[1]\n        ) {\n          transform.scale = 0.65;\n          console.log(\"1111111\");\n        } else if (\n          this.agrs.imgList[this.index].msgBody.height >\n          browserWindow.getSize()[0]\n        ) {\n          transform.scale = 0.65;\n          console.log(\"3333333\");\n        }\n      } else if (transform.deg % 180 === 90 || transform.deg % 180 === -90) {\n        if (\n          this.agrs.imgList[this.index].msgBody.width <=\n          browserWindow.getSize()[0]\n        ) {\n          transform.scale = 1;\n          console.log(\"222222222\");\n        } else if (\n          this.agrs.imgList[this.index].msgBody.height <=\n          browserWindow.getSize()[1]\n        ) {\n          transform.scale = 1;\n          console.log(\"444444\");\n        }\n      }\n    },\n  },\n  mounted() {\n    this.deviceSupportInstall();\n    // add tabindex then wrapper can be focusable via Javascript\n    // focus wrapper so arrow key can't cause inner scroll behavior underneath\n    this.$refs[\"el-image-viewer__wrapper\"].focus();\n  }\n};\n</script>",
    "originData": "<template>\n  <transition name=\"viewer-fade\">\n    <div\n      tabindex=\"-1\"\n      ref=\"el-image-viewer__wrapper\"\n      class=\"el-image-viewer__wrapper image-box\"\n      :style=\"{ 'z-index': zIndex }\"\n    >\n      <template v-if=\"!errorImg\">\n        <div\n          class=\"el-image-viewer__mask\"\n          :class=\"\n            theme === 'system'\n              ? 'el-image-mask-system'\n              : theme === 'light'\n              ? 'el-image-mask-light'\n              : 'el-image-mask-drak'\n          \"\n        ></div>\n      </template>\n      <template v-else>\n        <div class=\"el-image-viewer__mask\"></div>\n      </template>\n      <!-- CLOSE -->\n      <!--      <span class=\"el-image-viewer__btn el-image-viewer__close\" @click=\"hide\">-->\n      <!--        <i class=\"el-icon-circle-close\"></i>-->\n      <!--      </span>-->\n      <!-- ARROW -->\n      <template v-if=\"!isSingle\">\n        <div\n          class=\"el-image-viewer__btn el-image-viewer-left\"\n          @click=\"prev\"\n          v-show=\"index !== 0\"\n        >\n          <span class=\"el-image-viewer__btn el-image-viewer__prev left\">\n            <i class=\"el-icon-arrow-left\" />\n          </span>\n        </div>\n        <div\n          class=\"el-image-viewer__btn el-image-viewer-left\"\n          v-show=\"index === 0\"\n        >\n          <span\n            class=\"\n              el-image-viewer__btn el-image-viewer__prev\n              disabled-arrow\n              left\n            \"\n            v-show=\"index === 0\"\n            :title=\"$t('Universal_0440')\"\n          >\n            <i class=\"el-icon-arrow-left\" />\n          </span>\n        </div>\n\n        <div\n          class=\"el-image-viewer__btn el-image-viewer-right\"\n          @click=\"next\"\n          v-show=\"index !== urlList.length - 1\"\n        >\n          <span class=\"el-image-viewer__btn el-image-viewer__next right\">\n            <i class=\"el-icon-arrow-right\" />\n          </span>\n        </div>\n        <div\n          class=\"el-image-viewer__btn el-image-viewer-right\"\n          v-show=\"index === urlList.length - 1\"\n        >\n          <span\n            class=\"\n              el-image-viewer__btn el-image-viewer__next\n              disabled-arrow\n              right\n            \"\n            v-show=\"index === urlList.length - 1\"\n            :title=\"$t('Universal_0441')\"\n          >\n            <i class=\"el-icon-arrow-right\" />\n          </span>\n        </div>\n      </template>\n      <!-- ACTIONS -->\n      <div\n        v-if=\"!errorImg\"\n        class=\"el-image-viewer__btn el-image-viewer__actions\"\n      >\n        <div class=\"el-image-viewer__actions__inner\">\n          <i class=\"el-icon-zoom-out\" @click=\"handleActions('zoomOut')\"></i>\n          <i class=\"el-icon-zoom-in\" @click=\"handleActions('zoomIn')\"></i>\n          <i class=\"el-image-viewer__actions__divider\"></i>\n          <i :class=\"mode.icon\" @click=\"toggleMode\"></i>\n          <i class=\"el-image-viewer__actions__divider\"></i>\n          <i\n            class=\"el-icon-refresh-left\"\n            @click=\"handleActions('anticlocelise')\"\n          ></i>\n          <i\n            class=\"el-icon-refresh-right\"\n            @click=\"handleActions('clocelise')\"\n          ></i>\n          <i\n            class=\"el-icon-download\"\n            @click=\"saveImages(index)\"\n            style=\"cursor: pointer\"\n          ></i>\n        </div>\n      </div>\n      <!-- CANVAS -->\n      <div v-if=\"!errorImg\" class=\"el-image-viewer__canvas image\">\n        <img\n          v-for=\"(url, i) in urlList\"\n          v-if=\"i === index\"\n          ref=\"img\"\n          class=\"el-image-viewer__img\"\n          :key=\"url\"\n          :src=\"currentImg\"\n          :style=\"imgStyle\"\n          @load=\"handleImgLoad\"\n          @error=\"handleImgError\"\n          @mousedown=\"handleMouseDown\"\n        />\n      </div>\n      <div v-else class=\"image__error\">\n        <i class=\"el-icon-picture-outline i__error\"></i>\n        <span>\n          {{ $t(\"Universal_0089\") }}\n        </span>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport { on, off } from \"element-ui/src/utils/dom\";\nimport { rafThrottle, isFirefox } from \"element-ui/src/utils/util\";\nimport fs from \"fs\";\nimport path from \"path\";\nconst dialog = window.vm.$remote.dialog;\nimport request from \"request\";\nimport bus from \"@/utils/eventbus\";\nimport { checkkArrProps } from \"@/utils\";\nconst Mode = {\n  CONTAIN: {\n    name: \"contain\",\n    icon: \"el-icon-full-screen\",\n  },\n  ORIGINAL: {\n    name: \"original\",\n    icon: \"el-icon-c-scale-to-original\",\n  },\n};\n\nconst mousewheelEventName = isFirefox() ? \"DOMMouseScroll\" : \"mousewheel\";\n\nexport default {\n  name: \"elImageViewer\",\n  props: {\n    urlList: {\n      type: Array,\n      default: () => [],\n    },\n    zIndex: {\n      type: Number,\n      default: 2000,\n    },\n    onSwitch: {\n      type: Function,\n      default: () => {},\n    },\n    onClose: {\n      type: Function,\n      default: () => {},\n    },\n    initialIndex: {\n      type: Number,\n      default: 0,\n    },\n    urlData: {\n      type: Array,\n      default: () => [],\n    },\n    agrs: {\n      type: Object,\n      default: () => {},\n    },\n    theme: {\n      type: String,\n      default: \"system\",\n    },\n  },\n\n  data() {\n    return {\n      index: this.initialIndex,\n      isShow: false,\n      infinite: true,\n      loading: false,\n      // mode: Mode.CONTAIN,\n      mode: {\n        name: Mode.ORIGINAL.name,\n        icon: Mode.ORIGINAL.icon,\n      },\n      transform: {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false,\n        clickNum: 0, // 点击次数  放大16 缩小16\n        clickMax: 16,\n        clickMin: -16,\n      },\n      contain: {}, // transform 对象\n      width: 0,\n      height: 0,\n      errorImg: false, // 错误提示\n    };\n  },\n  computed: {\n    isSingle() {\n      return this.urlList.length <= 1;\n    },\n    isFirst() {\n      return this.index === 0;\n    },\n    isLast() {\n      return this.index === this.urlList.length - 1;\n    },\n    currentImg() {\n      return this.urlList[this.index];\n    },\n    imgStyle() {\n      const { scale, deg, offsetX, offsetY, enableTransition } = this.transform;\n      const style = {\n        transform: `scale(${scale}) rotate(${deg}deg)`,\n        transition: enableTransition ? \"transform .3s\" : \"\",\n        \"margin-left\": `${offsetX}px`,\n        \"margin-top\": `${offsetY}px`,\n        width: `${this.width || this.agrs.imgList[this.index].msgBody.width}px`,\n        height: `${\n          this.height || this.agrs.imgList[this.index].msgBody.height\n        }px`,\n      };\n      if (this.mode == Mode.CONTAIN) {\n        style.maxWidth = style.maxHeight = \"100%\";\n      }\n      return style;\n    },\n\n    currentItem() {\n      return this.urlData[this.index];\n    },\n  },\n  watch: {\n    initialIndex(val) {\n      this.index = val;\n    },\n    index: {\n      handler: function (val) {\n        // 这里需要把 transform 重置\n        this.contain = this.transform;\n        this.onSwitch(val);\n        this.reset();\n        console.log(\"imageTap ===== 222222\", this.theme);\n        bus.$emit(\"imageTap\", val);\n      },\n    },\n    currentImg() {\n      console.log('urlList===', this.urlList)\n      console.log(\"index ====>\", this.index);\n      console.log(\"currentImg ====>\", this.currentImg);\n      this.reset();\n      // this.contain = this.transform\n      this.$nextTick(() => {\n        const $img = this.$refs.img[0];\n        if (!$img) {\n          this.index = 0;\n        }\n      });\n    },\n  },\n  methods: {\n    changeImg(index) {\n      this.currentImg = this.urlList[index];\n    },\n    saveImages(id) {\n      console.log(id, this.urlList[id]);\n\n      let msgBody = this.urlData[id].msgBody;\n      // let urlAdr = this.urlList[id];\n      let urlAdr = msgBody[\"mediaId\"] || this.urlList[id];\n      let reg = /(http|https):\\/\\/([\\w.]+\\/?)\\S*/;\n      if (urlAdr.match(reg)) {\n        console.log(\"网络地址\");\n        this.downloadImageAs(msgBody);\n      } else {\n        console.log(\"本地地址\");\n        this.saveImageAs(msgBody);\n      }\n    },\n    saveImageAs(fileItem) {\n      if (!fileItem.localId) return;\n      let filePath = fileItem.localId.replace(\"\\\\\", \"/\");\n      filePath = path.join(\"\", filePath);\n      filePath = filePath.substring(6);\n      fileItem.filePath = filePath;\n      // fileItem.fname = `${fileItem.fileNo}${filePath.substr(\n      //   filePath.length - 4\n      // )}`;\n      // fileItem.fname = `${this.timestamp()}${filePath.format}`;\n      fileItem.fname = `${this.timestamp()}${filePath.substr(\n        filePath.length - 4\n      )}`;\n      try {\n        const stats = fs.statSync(filePath);\n        console.log(\"stats\", stats, stats.size);\n        if (stats.size === 0) {\n          // this.$message.error(\"文件不存在\");\n          return false;\n        } else {\n          const { ipcRenderer } = require(\"electron\");\n          this.ipcRenderer = ipcRenderer;\n          this.ipcRenderer.send(\"saveAsImages\", fileItem);\n        }\n      } catch (err) {\n        console.error(\"err\", err);\n      }\n    },\n    downloadImageAs(fileItem) {\n      let filePath = fileItem.mediaId;\n      let suffix = filePath.split(\".\").reverse()[0]; //文件后缀\n      // let fname=`${this.timestamp()}${filePath.substr(filePath.length - 4)}`;\n      let fname = this.timestamp();\n      try {\n        dialog\n          .showSaveDialog({\n            title: this.$t(\"Universal_0077\"),\n            buttonLabel: this.$t(\"Universal_0052\"),\n            defaultPath: fname,\n          })\n          .then((result) => {\n            const req = request({\n              method: \"GET\",\n              uri: filePath,\n              strictSSL: false,\n            });\n            if (!result.filePath) {\n              return;\n            }\n            // console.log(suffix,result,result.filePath,`${result.filePath}.${suffix}`);\n            // let writeStream = fs.createWriteStream(result.filePath);\n            let writeStream = fs.createWriteStream(\n              `${result.filePath}.${suffix}`\n            );\n            req.pipe(writeStream);\n            req.on(\"end\", function (response) {\n              //文件写入成功\n              console.log(\"response\", response);\n            });\n            writeStream.on(\"finish\", function () {\n              writeStream.end();\n            });\n          });\n      } catch (err) {\n        console.error(\"err\", err);\n      }\n    },\n    timestamp() {\n      // 时间戳：年月日时分秒毫秒（202012161508230098）\n      let date, currentTime;\n      date = new Date();\n      this.year = date.getFullYear();\n      this.month = date.getMonth() + 1;\n      this.date = date.getDate();\n      this.hour =\n        date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\n      this.minute =\n        date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n      this.second =\n        date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\n      this.milliSeconds = date.getMilliseconds();\n      currentTime = `${this.year}${this.month}${this.date}${this.hour}${this.minute}${this.second}${this.milliSeconds}`;\n      return currentTime;\n    },\n    hide() {\n      this.deviceSupportUninstall();\n      this.onClose();\n    },\n    deviceSupportInstall() {\n      this._keyDownHandler = rafThrottle((e) => {\n        const keyCode = e.keyCode;\n        switch (keyCode) {\n        // ESC\n        case 27:\n          this.hide();\n          break;\n          // SPACE\n        case 32:\n          this.toggleMode();\n          break;\n          // LEFT_ARROW\n        case 37:\n          this.prev();\n          break;\n          // UP_ARROW\n        case 38:\n          console.log(\"缩小 ====>\");\n          this.handleActions(\"zoomIn\");\n          break;\n          // RIGHT_ARROW\n        case 39:\n          this.next();\n          break;\n          // DOWN_ARROW\n        case 40:\n          console.log(\"放大 ====>\");\n          this.handleActions(\"zoomOut\");\n          break;\n        }\n      });\n      this._mouseWheelHandler = rafThrottle((e) => {\n        const delta = e.wheelDelta ? e.wheelDelta : -e.detail;\n        console.log(\"鼠标滚轮 放大 或 缩小\");\n        if (delta > 0) {\n          this.handleMouseWheelHandler(\"zoomIn\", {\n            zoomRate: 0.9,\n            enableTransition: false,\n          });\n          // this.handleActions('zoomIn', {\n          //   zoomRate: 0.9,\n          //   enableTransition: false\n          // });\n        } else {\n          this.handleMouseWheelHandler(\"zoomOut\", {\n            zoomRate: 0.9,\n            enableTransition: false,\n          });\n          // this.handleActions('zoomOut', {\n          //   zoomRate: 0.9,\n          //   enableTransition: false\n          // });\n        }\n      });\n      on(document, \"keydown\", this._keyDownHandler);\n      on(document, mousewheelEventName, this._mouseWheelHandler);\n    },\n    deviceSupportUninstall() {\n      off(document, \"keydown\", this._keyDownHandler);\n      off(document, mousewheelEventName, this._mouseWheelHandler);\n      this._keyDownHandler = null;\n      this._mouseWheelHandler = null;\n    },\n    handleImgLoad() {\n      console.log('图片加载成功了')\n      this.loading = false;\n      this.errorImg = false;\n    },\n    handleImgError(e) {\n      console.log('图片加载失败了-----------')\n      this.loading = false;\n      e.target.alt = this.$t(\"Universal_0089\");\n      this.errorImg = true;\n    },\n    handleMouseDown(e) {\n      if (this.loading || e.button !== 0) return;\n\n      const { offsetX, offsetY } = this.transform;\n      const startX = e.pageX;\n      const startY = e.pageY;\n      this._dragHandler = rafThrottle((ev) => {\n        this.transform.offsetX = offsetX + ev.pageX - startX;\n        this.transform.offsetY = offsetY + ev.pageY - startY;\n      });\n      on(document, \"mousemove\", this._dragHandler);\n      on(document, \"mouseup\", () => {\n        off(document, \"mousemove\", this._dragHandler);\n      });\n\n      e.preventDefault();\n    },\n\n    reset() {\n      this.transform = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false,\n        clickNum: 0, // 点击次数  放大16 缩小16\n        clickMax: 16,\n        clickMin: -16,\n      };\n      this.width = 0;\n      this.height = 0;\n      this.mode = {\n        name: Mode.ORIGINAL.name,\n        icon: Mode.ORIGINAL.icon,\n      };\n      // 要将设置图片加载失败变量重置，不然一直无法显示下一张正常图片\n      this.errorImg = false\n      // this.contain = this.transform\n      // console.log('contain ===>', this.contain);\n    },\n    toggleMode() {\n      if (this.loading) return;\n\n      // const modeNames = Object.keys(Mode);\n      // const modeValues = Object.values(Mode);\n      // const index = modeValues.indexOf(this.mode);\n      // const nextIndex = (index + 1) % modeNames.length;\n      // this.mode = Mode[modeNames[nextIndex]];\n      // if (this.transform.scale !== 1 || (this.mode.name !== 'contain' && isNaN(this.contain.scale))) {\n      //   this.reset();\n      //   this.mode = {\n      //     name: Mode.ORIGINAL.name,\n      //     icon: Mode.ORIGINAL.icon\n      //   }\n      // }else {\n      //   this.transform = this.contain\n      //   this.mode = {\n      //     name: Mode.CONTAIN.name,\n      //     icon: Mode.CONTAIN.icon\n      //   }\n      // }\n      if (this.mode.name === \"original\") {\n        this.width = this.agrs.imgList[this.index].msgBody.orgWidth;\n        this.height = this.agrs.imgList[this.index].msgBody.orgHeight;\n        this.mode = {\n          name: Mode.CONTAIN.name,\n          icon: Mode.CONTAIN.icon,\n        };\n        this.transform.scale = 1;\n      } else {\n        this.width = this.agrs.imgList[this.index].msgBody.width;\n        this.height = this.agrs.imgList[this.index].msgBody.height;\n        this.mode = {\n          name: Mode.ORIGINAL.name,\n          icon: Mode.ORIGINAL.icon,\n        };\n      }\n\n      console.log(\"this.transform ===> \", this.transform);\n\n      console.log(\"width 11111 ====> height 11111 \", this.width, this.height);\n    },\n    prev() {\n      if (this.isFirst && !this.infinite) return;\n      const len = this.urlList.length;\n      this.index = (this.index - 1 + len) % len;\n      const browserWindow = window.vm.$remote.getCurrentWindow();\n      // 图片大小需要跟查看器大小比较  由大变小 图片查看器不变 由小变大 图片查看器变大\n      if (\n        this.agrs.imgList[this.index].msgBody.width >\n          browserWindow.getSize()[0] - 20 ||\n        this.agrs.imgList[this.index].msgBody.height >\n          browserWindow.getSize()[1] - 86\n      ) {\n        this.changeImageWindow();\n      }\n    },\n    next() {\n      if (this.isLast && !this.infinite) return;\n      const len = this.urlList.length;\n      this.index = (this.index + 1) % len;\n\n      // 图片大小需要跟查看器大小比较  由大变小 图片查看器不变 由小变大 图片查看器变大\n      // 获取当前窗口大小\n      const browserWindow = window.vm.$remote.getCurrentWindow();\n      console.log(\n        \"this.agrs.imgList[this.index].width ===>\",\n        this.agrs.imgList[this.index].msgBody.width\n      );\n      console.log(\n        \"this.agrs.imgList[this.index].height ===>\",\n        this.agrs.imgList[this.index].msgBody.height\n      );\n      console.log(\"image window ==>\", browserWindow.getSize());\n      if (\n        this.agrs.imgList[this.index].msgBody.width >\n          browserWindow.getSize()[0] - 20 ||\n        this.agrs.imgList[this.index].msgBody.height >\n          browserWindow.getSize()[1] - 86\n      ) {\n        this.changeImageWindow();\n      }\n    },\n\n    // change image window\n    changeImageWindow() {\n      const { ipcRenderer } = require(\"electron\");\n      console.log(\"next ====>\", this.agrs);\n      const msgType = this.agrs.msgType;\n      const imgList = this.agrs.imgList;\n      const index = this.index;\n      const flag = checkkArrProps(imgList, \"msgBody\");\n      console.log(\"flag ====> imgList 存在undefind \", flag);\n      if (flag) {\n        ipcRenderer.send(\"media-viewer-change\", { msgType, imgList, index });\n      }\n    },\n\n    // 鼠标滚轮事件放大 缩小\n    handleMouseWheelHandler(action, options = {}) {\n      if (this.loading) return;\n      const { zoomRate } = {\n        zoomRate: 0.83, // 比例 0.83\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options,\n      };\n      const { transform } = this;\n      switch (action) {\n      case \"zoomOut\":\n        transform.scale = parseFloat((transform.scale * zoomRate).toFixed(6));\n        if (transform.scale <= 0.051) {\n          transform.scale = 0.051;\n          console.log(\"zoomIn Min scale 1111111====>\", transform.scale);\n          return;\n        }\n        break;\n      case \"zoomIn\":\n        // transform.scale = parseFloat((transform.scale + zoomRate).toFixed(3));\n        transform.scale = parseFloat((transform.scale / zoomRate).toFixed(6));\n        if (transform.scale >= 19.718) {\n          transform.scale = 19.718;\n          console.log(\"zoomIn Max scale 22222====>\", transform.scale);\n          return;\n        }\n        break;\n      }\n      if (this.transform.scale !== 1) {\n        this.mode = {\n          name: Mode.ORIGINAL.name,\n          icon: Mode.ORIGINAL.icon,\n        };\n      } else {\n        this.mode = {\n          name: Mode.CONTAIN.name,\n          icon: Mode.CONTAIN.icon,\n        };\n      }\n      this.contain = transform;\n    },\n\n    handleActions(action, options = {}) {\n      console.log(\"action ====>\", action);\n      //\n      if (this.loading) return;\n      const { zoomRate, rotateDeg, enableTransition } = {\n        zoomRate: 0.83, // 比例 0.83\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options,\n      };\n      const { transform } = this;\n      // this.contain = transform\n      switch (action) {\n      case \"zoomOut\":\n        if (transform.scale <= 0.051) {\n          transform.clickNum = transform.clickMin;\n          transform.scale = 0.051;\n          console.log(\"zoomIn Min ====>\", transform.clickNum);\n          return;\n        } else {\n          transform.clickNum--;\n        }\n        // if (transform.scale > 0.2) {\n        //   transform.scale = parseFloat((transform.scale - zoomRate).toFixed(3));\n        // }\n        transform.scale = parseFloat((transform.scale * zoomRate).toFixed(3));\n        console.log(\"zoomIn Min scale ====>\", transform.scale);\n        break;\n      case \"zoomIn\":\n        if (transform.scale >= 19.718) {\n          transform.clickNum = transform.clickMax;\n          transform.scale = 19.718;\n          console.log(\"zoomIn Max ====>\", transform.clickNum);\n          return;\n        } else {\n          transform.clickNum++;\n        }\n        // transform.scale = parseFloat((transform.scale + zoomRate).toFixed(3));\n        transform.scale = parseFloat((transform.scale / zoomRate).toFixed(3));\n        console.log(\"zoomIn Max scale ====>\", transform.scale);\n        break;\n      case \"clocelise\":\n        console.log(\n          \"this.agrs.imgList[this.index].width ===>\",\n          this.agrs.imgList[this.index].msgBody.width\n        );\n        this.anticlocelise(transform);\n        transform.deg += rotateDeg;\n        break;\n      case \"anticlocelise\":\n        this.anticlocelise(transform);\n        transform.deg -= rotateDeg;\n        break;\n      }\n      if (this.transform.scale !== 1) {\n        this.mode = {\n          name: Mode.ORIGINAL.name,\n          icon: Mode.ORIGINAL.icon,\n        };\n      } else {\n        this.mode = {\n          name: Mode.CONTAIN.name,\n          icon: Mode.CONTAIN.icon,\n        };\n      }\n      this.contain = transform;\n      transform.enableTransition = enableTransition;\n    },\n    anticlocelise(transform) {\n      // eslint-disable-next-line no-case-declarations\n      const browserWindow = window.vm.$remote.getCurrentWindow();\n      if (transform.deg % 180 === 0) {\n        if (\n          this.agrs.imgList[this.index].msgBody.width >\n          browserWindow.getSize()[1]\n        ) {\n          transform.scale = 0.65;\n          console.log(\"1111111\");\n        } else if (\n          this.agrs.imgList[this.index].msgBody.height >\n          browserWindow.getSize()[0]\n        ) {\n          transform.scale = 0.65;\n          console.log(\"3333333\");\n        }\n      } else if (transform.deg % 180 === 90 || transform.deg % 180 === -90) {\n        if (\n          this.agrs.imgList[this.index].msgBody.width <=\n          browserWindow.getSize()[0]\n        ) {\n          transform.scale = 1;\n          console.log(\"222222222\");\n        } else if (\n          this.agrs.imgList[this.index].msgBody.height <=\n          browserWindow.getSize()[1]\n        ) {\n          transform.scale = 1;\n          console.log(\"444444\");\n        }\n      }\n    },\n  },\n  mounted() {\n    this.deviceSupportInstall();\n    // add tabindex then wrapper can be focusable via Javascript\n    // focus wrapper so arrow key can't cause inner scroll behavior underneath\n    this.$refs[\"el-image-viewer__wrapper\"].focus();\n  }\n};\n</script>\n\n<style scoped lang=\"less\">\n.image {\n  padding: 0px !important;\n  padding-left: 10px !important;\n  padding-right: 10px !important;\n  width: auto;\n  height: 100% !important;\n}\n\n.image-box {\n  -webkit-app-region: drag;\n}\n\n.el-image-viewer-left {\n  border-radius: 0px;\n  height: 100%;\n  width: 70px;\n  &:hover .left {\n    display: flex; // 设置父元素hover时子元素的样式 【实现要点！！！！！】\n  }\n}\n\n.el-image-viewer-right {\n  border-radius: 0px;\n  height: 100%;\n  width: 70px;\n  right: 0px;\n  &:hover .right {\n    display: flex; // 设置父元素hover时子元素的样式 【实现要点！！！！！】\n  }\n}\n\n.el-image-viewer__prev {\n  left: 10px;\n}\n\n.el-image-viewer__next {\n  right: 10px;\n}\n\n.left {\n  border-radius: 50%;\n  display: none;\n}\n\n// .el-icon-arrow-left {\n//   display: none;\n// }\n\n.right {\n  border-radius: 50%;\n  display: none;\n}\n\n.el-image-viewer__canvas {\n  /* padding: 20px; */\n  /* padding-left: 18px;\n  width: 93%;\n  height: 93%; */\n}\n.el-image-viewer__wrapper:focus {\n  outline: none;\n}\n.disabled-arrow {\n  opacity: 0.3;\n}\n.el-image-viewer_top {\n  top: 0px !important;\n}\n.el-image-viewer__canvas img {\n  -webkit-user-drag: no-drag;\n}\n\n.el-image-mask-drak {\n  background-color: #3a373a !important;\n  opacity: 1;\n}\n\n.el-image-mask-light {\n  background-color: #faeff2 !important;\n  opacity: 1;\n}\n\n.el-image-mask-system {\n  background-color: #f5f5f5 !important;\n  opacity: 1;\n}\n\n.image__error {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #cdcfd1;\n  flex-direction: column;\n}\n\n.i__error {\n  font-size: 50px;\n}\n</style>\n",
    "cssJson": [
      {
        ".image": {
          "padding": "0px !important",
          "padding-left": "10px !important",
          "padding-right": "10px !important",
          "width": "auto",
          "height": "100% !important"
        },
        ".image-box": {
          "-webkit-app-region": "drag"
        },
        ".el-image-viewer-left": {
          "border-radius": "0px",
          "height": "100%",
          "width": "70px",
          "&:hover .left": {
            "display": "flex"
          }
        },
        ".el-image-viewer-right": {
          "border-radius": "0px",
          "height": "100%",
          "width": "70px",
          "right": "0px",
          "&:hover .right": {
            "display": "flex"
          }
        },
        ".el-image-viewer__prev": {
          "left": "10px"
        },
        ".el-image-viewer__next": {
          "right": "10px"
        },
        ".left": {
          "border-radius": "50%",
          "display": "none"
        },
        ".right": {
          "border-radius": "50%",
          "display": "none"
        },
        ".el-image-viewer__canvas": {},
        ".el-image-viewer__wrapper:focus": {
          "outline": "none"
        },
        ".disabled-arrow": {
          "opacity": "0.3"
        },
        ".el-image-viewer_top": {
          "top": "0px !important"
        },
        ".el-image-viewer__canvas img": {
          "-webkit-user-drag": "no-drag"
        },
        ".el-image-mask-drak": {
          "background-color": "#3a373a !important",
          "opacity": "1"
        },
        ".el-image-mask-light": {
          "background-color": "#faeff2 !important",
          "opacity": "1"
        },
        ".el-image-mask-system": {
          "background-color": "#f5f5f5 !important",
          "opacity": "1"
        },
        ".image__error": {
          "width": "100%",
          "height": "100%",
          "display": "flex",
          "justify-content": "center",
          "align-items": "center",
          "background": "#cdcfd1",
          "flex-direction": "column"
        },
        ".i__error": {
          "font-size": "50px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/components/GroupInfoEdit.vue",
    "tagInfo": {
      "0": "<style >",
      "1": "<style lang=\"less\" scoped>",
      "2": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <el-dialog\n      :title=\"$t('chat_comm_set_0031')\"\n      @open=\"onOpen\"\n      :visible.sync=\"groupEditVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"onEditCancel\"\n      :width=\"dialogWidth\"\n      custom-class=\"group-edit-el-dialog\"\n      class=\"gruop-info-edit\"\n      center\n    >\n      <el-form\n        :model=\"groupInfo\"\n        ref=\"groupEditForm\"\n        :rules=\"groupEditFormRules\"\n        :label-width=\"labelWidth\"\n        class=\"group-edit-form\"\n      >\n        <el-form-item\n          :label=\"$t('chat_createcommunity_0002')\"\n          prop=\"groupAvatar\"\n          required\n          class=\"group-avatar-class group-info-avatar\"\n        >\n          <div class=\"demo-block\">\n            <!-- <el-upload\n              v-loading=\"imgLoading\" \n              element-loading-spinner=\"el-icon-loading\"\n              element-loading-background=\"rgba(255, 255, 255, 0.8)\"\n              :show-file-list=\"false\"\n              :action=\"uploadUrl\"\n              :data=\"uploadData\"\n              :headers=\"headers\"\n              :on-success=\"handleAvatarSuccess\"\n              :before-upload=\"beforeAvatarUpload\" >\n              <img v-if=\"groupInfo.groupAvatar\" :src=\"groupInfo.groupAvatar\" class=\"group-avatar\" alt />\n            </el-upload> -->\n            <Copper\n              ref=\"copperBox\"\n              @uploadCropper=\"uploadCropper\"\n              :avater=\"groupInfo.groupAvatar\"\n            ></Copper>\n          </div>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_createcommunity_0003')\" prop=\"groupName\" class=\"group-info-name\">\n          <el-input\n            :minlength=\"1\"\n            :maxlength=\"30\"\n            v-model=\"groupInfo.groupName\"\n            show-word-limit\n            class=\"limtinput\"\n          >\n          </el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('Universal_0205')\" class=\"group-info-country\">\n          <el-row>\n            <el-col :span=\"11\">\n              <el-form-item class=\"group-country\" prop=\"country\">\n                <el-select\n                  v-model=\"groupInfo.countryName\"\n                  size=\"mini\"\n                  clearable\n                  filterable\n                  :placeholder=\"$t('Universal_0208')\"\n                  @change=\"getAreaList\"\n                  @clear=\"clearCountry\"\n                  class=\"select_box\"\n                >\n                  <el-option\n                    :label=\"item.name\"\n                    :value=\"item.id\"\n                    v-for=\"item in countryList\"\n                    :key=\"item.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"11\" :offset=\"2\">\n              <el-form-item class=\"group-country\" prop=\"city\">\n                <el-select\n                  v-model=\"groupInfo.cityName\"\n                  clearable\n                  filterable\n                  :placeholder=\"$t('Universal_0209')\"\n                  @change=\"setCity\"\n                  @clear=\"clearCity\"\n                  :disabled=\"areaDisabled\"\n                >\n                  <el-option\n                    :label=\"item.name\"\n                    :value=\"item.id\"\n                    v-for=\"item in areaList\"\n                    :key=\"item.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_createcommunity_0010')\" prop=\"groupTab\" class=\"group-info-note\">\n          <el-row>\n            <el-select\n              size=\"mini\"\n              v-model=\"groupInfo.groupTab\"\n              clearable\n              filterable\n              :placeholder=\"$t('chat_createcommunity_0035')\"\n              @clear=\"clearTab\"\n              class=\"select_box\"\n            >\n              <el-option\n                v-for=\"item in tabList\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              ></el-option>\n            </el-select>\n          </el-row>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_comm_set_0002')\" prop=\"groupProfile\" class=\"notegroup\">\n          <el-input\n            show-word-limit\n            class=\"limtinput\"\n            type=\"textarea\"\n            :maxlength=\"500\"\n            :rows=\"4\"\n            :placeholder=\"$t('chat_createcommunity_0033')\"\n            v-model=\"groupInfo.groupProfile\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item class=\"group-info-btn\">\n          <div class=\"group-edit-button\">\n            <el-button\n              type=\"info\"\n              size=\"mini\"\n              class=\"cancel\"\n              @click=\"onEditCancel\"\n              >{{ $t('Universal_0063') }}</el-button\n            >\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              class=\"submit\"\n              @click=\"onEditSubmit('groupEditForm')\"\n            >\n              {{ $t('Universal_0062') }}\n            </el-button>\n          </div>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { upload_images_avatar } from \"@/server.js\";\nimport { GroupInfo } from \"../groupInfo\";\nimport { setGroupBase } from \"../../server\";\nimport SQLUtils from \"@/components/db/sqlite.js\";\nimport Copper from \"@/components/chat/copper\";\nexport default {\n  name: \"GroupInfoEdit\",\n  components: { Copper },\n  props: {\n    info: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n  },\n  data() {\n    return {\n      groupEditVisible: false,\n      countryList: [],\n      areaList: [],\n      currentCountryName: \"\",\n      btnLoading: false,\n      groupInfo: {},\n      uploadData: {},\n      uploadUrl: upload_images_avatar(),\n      headers: {\n        Authorization: localStorage.accessToken,\n      },\n      groupEditFormRules: {\n        groupName: [\n          { required: true, message: this.$t('chat_createcommunity_0004'), trigger: \"blur\" },\n          {\n            min: 1,\n            max: 30,\n            trigger: \"blur\",\n          },\n          {\n            pattern: /^((?!didi).)+$/i,\n            message: this.$t('chat_comm_set_0017'),\n          },\n        ],\n        country: [{ message: this.$t('Universal_0208'), trigger: \"blur\" }],\n        city: [{ message: this.$t('Universal_0209'), trigger: \"blur\" }],\n        // groupTab:[ { message: \"为你的群贴上标签\", trigger: \"blur\" },],\n      },\n      areaDisabled: false,\n      inValidName: [\"盘古\"],\n      groupInfoBefore: \"\",\n      groupInfoAfter: \"\",\n      imgLoading: false,\n      tabList: [\n        { value: 1, label: this.$t('chat_createcommunity_0012') },\n        { value: 2, label: \"BTC\" },\n        { value: 3, label: this.$t('chat_createcommunity_0014') },\n        { value: 4, label: this.$t('chat_createcommunity_0015') },\n        { value: 5, label: this.$t('chat_createcommunity_0016') },\n        { value: 6, label: this.$t('chat_createcommunity_0017') },\n        { value: 7, label: \"Defi\" },\n        { value: 8, label: this.$t('chat_createcommunity_0019') },\n        { value: 9, label: this.$t('chat_createcommunity_0020') },\n        { value: 10, label: this.$t('chat_createcommunity_0021') },\n      ],\n    };\n  },\n  computed: {\n    dialogWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '380px';\n      } else {\n        return '500px';\n      }\n    },\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '90px';\n      } else {\n        return '170px';\n      }\n    }\n  },\n  methods: {\n    async uploadCropper(smallUrl, bigUrl) {\n      this.groupInfo.groupAvatar = smallUrl;\n      this.groupInfo.groupBigAvatar = bigUrl;\n    },\n    onPop() {\n      this.groupEditVisible = true;\n    },\n    onClose() {\n      this.groupEditVisible = false;\n    },\n    async getCountryList() {\n      this.countryList = await SQLUtils.getTAreaCountryList();\n      if (this.groupInfo.country && this.groupInfo.countryName) {\n        let countryId = this.countryList.find(\n          (item) => item.code == this.groupInfo.country\n        ).id;\n        await this.getAreaList(countryId);\n      }\n    },\n    async getAreaList(fatherId) {\n      this.areaList = await SQLUtils.getTAreaCityList(fatherId);\n      if (!fatherId) {\n        this.currentCountryName = \"\";\n        this.groupInfo.cityName = \"\";\n        this.groupInfo.country = \"\";\n        this.areaDisabled = true;\n      } else if (this.currentCountryName != this.groupInfo.countryName) {\n        this.groupInfo.cityName = \"\";\n        this.groupInfo.city = \"\";\n        this.areaDisabled = true;\n        this.groupInfo.country = this.countryList.find(\n          (item) => item.id == fatherId\n        ).code;\n        this.areaDisabled = false;\n      }\n    },\n    setCity() {\n      this.groupInfo.city = this.areaList.find(\n        (item) => item.id == this.groupInfo.cityName\n      ).code;\n    },\n    clearCountry() {\n      this.groupInfo.country = \"\";\n      this.groupInfo.city = \"\";\n      this.areaList = [];\n      this.areaDisabled = true;\n    },\n    clearCity() {\n      this.groupInfo.city = \"\";\n    },\n    clearTab() {\n      this.groupInfo.groupTab = \"\";\n    },\n    beforeAvatarUpload(file) {\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      console.log('ppp-- ',file.size, file.size / 1024 / 1024)\n      // const textArr = file.name.split(\".\");\n      // const isPng = textArr[textArr.length - 1];\n\n      const isPng =\n        file.type === \"image/jpg\" ||\n        file.type === \"image/jpeg\" ||\n        file.type === \"image/png\";\n\n      if (isPng) {\n        if (!isLt2M) {\n          this.$message.error(this.$t('Universal_0390'));\n          return false;\n        }\n      } else {\n        this.$message(this.$t('Universal_0369'));\n        return false;\n      }\n      this.imgLoading = true;\n      this.uploadData.file = file.name;\n    },\n    handleAvatarSuccess(data) {\n      if (data.code == \"200\") {\n        this.imgLoading = false;\n        this.groupInfo.groupAvatar = data.data.path;\n      }\n    },\n    onEditSubmit(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          console.log(this.groupInfo);\n          this.btnLoading = true;\n          console.log(\"imgLoading\", this.imgLoading);\n          if (this.imgLoading) {\n            this.$message.error(\"请等待图片上传完成\");\n            return;\n          }\n          const params = {\n            id: this.groupInfo.id,\n            groupAvatar: this.groupInfo.groupAvatar,\n            groupBigAvatar: this.groupInfo.groupBigAvatar,\n            groupName: this.groupInfo.groupName,\n            country: this.groupInfo.country,\n            city: this.groupInfo.city,\n            groupProfile: this.groupInfo.groupProfile,\n            groupTab:\n              this.groupInfo.groupTab == \"\" ? 0 : this.groupInfo.groupTab,\n          };\n          if (params.groupTab == null) {\n            params.groupTab = 0;\n          }\n          console.log('chen-修改群信息-setGroupBase-params=', params)\n          setGroupBase(params)\n            .then(async (res) => {\n              if (res.code == \"200\") {\n                this.$message.success(res.msg);\n                this.groupEditVisible = false;\n                this.btnLoading = false;\n                this.clearCountry();\n                await this.updateGroupInfo(params);\n                await this.$store.dispatch(\"GET_LAST_MSG_LIST\");\n                await this.$store.dispatch(\"GET_GROUP_LIST\");\n                this.$emit(\"refreshPage\");\n                this.$emit(\"refreshGroupInfo\");\n              } else {\n                this.$message.error(res.data.msg);\n              }\n            })\n            .catch(() => {\n              this.btnLoading = false;\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    async updateGroupInfo(params) {\n      await SQLUtils.updateTGroupsInfo(params);\n    },\n    onEditCancel() {\n      this.imgLoading = false;\n      this.groupInfoAfter = JSON.stringify(this.groupInfo);\n      if (this.groupInfoAfter == this.groupInfoBefore) {\n        this.groupEditVisible = false;\n      } else {\n        this.$confirm(\n          this.$t('chat_comm_set_0029'),\n          this.$t('Universal_0059'),\n          {\n            confirmButtonText: this.$t('Universal_0062'),\n            cancelButtonText: this.$t('Universal_0388'),\n            type: \"info\",\n          }\n        )\n          .then(() => {\n            this.groupEditVisible = false;\n            this.$parent.refreshGroupInfo();\n          })\n          .catch(() => {});\n      }\n    },\n    onOpen() {\n      let groupInfo = new GroupInfo(this.info);\n      if (groupInfo.groupTab == 0 || groupInfo.groupTab == \"\") {\n        groupInfo.groupTab = null;\n      }\n      this.groupInfo = groupInfo;\n      if (groupInfo.groupProfile === null) {\n        this.groupInfo.groupProfile = \"\";\n      } else {\n        this.groupInfo.groupProfile = decodeURI(groupInfo.groupProfile);\n      }\n      this.currentCountryName = this.groupInfo.countryName;\n      this.getCountryList();\n      this.areaDisabled = false;\n      this.groupInfoBefore = JSON.stringify(this.groupInfo);\n    },\n  },\n};\n</script>",
    "originData": "<template>\n  <div>\n    <el-dialog\n      :title=\"$t('chat_comm_set_0031')\"\n      @open=\"onOpen\"\n      :visible.sync=\"groupEditVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"onEditCancel\"\n      :width=\"dialogWidth\"\n      custom-class=\"group-edit-el-dialog\"\n      class=\"gruop-info-edit\"\n      center\n    >\n      <el-form\n        :model=\"groupInfo\"\n        ref=\"groupEditForm\"\n        :rules=\"groupEditFormRules\"\n        :label-width=\"labelWidth\"\n        class=\"group-edit-form\"\n      >\n        <el-form-item\n          :label=\"$t('chat_createcommunity_0002')\"\n          prop=\"groupAvatar\"\n          required\n          class=\"group-avatar-class group-info-avatar\"\n        >\n          <div class=\"demo-block\">\n            <!-- <el-upload\n              v-loading=\"imgLoading\" \n              element-loading-spinner=\"el-icon-loading\"\n              element-loading-background=\"rgba(255, 255, 255, 0.8)\"\n              :show-file-list=\"false\"\n              :action=\"uploadUrl\"\n              :data=\"uploadData\"\n              :headers=\"headers\"\n              :on-success=\"handleAvatarSuccess\"\n              :before-upload=\"beforeAvatarUpload\" >\n              <img v-if=\"groupInfo.groupAvatar\" :src=\"groupInfo.groupAvatar\" class=\"group-avatar\" alt />\n            </el-upload> -->\n            <Copper\n              ref=\"copperBox\"\n              @uploadCropper=\"uploadCropper\"\n              :avater=\"groupInfo.groupAvatar\"\n            ></Copper>\n          </div>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_createcommunity_0003')\" prop=\"groupName\" class=\"group-info-name\">\n          <el-input\n            :minlength=\"1\"\n            :maxlength=\"30\"\n            v-model=\"groupInfo.groupName\"\n            show-word-limit\n            class=\"limtinput\"\n          >\n          </el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('Universal_0205')\" class=\"group-info-country\">\n          <el-row>\n            <el-col :span=\"11\">\n              <el-form-item class=\"group-country\" prop=\"country\">\n                <el-select\n                  v-model=\"groupInfo.countryName\"\n                  size=\"mini\"\n                  clearable\n                  filterable\n                  :placeholder=\"$t('Universal_0208')\"\n                  @change=\"getAreaList\"\n                  @clear=\"clearCountry\"\n                  class=\"select_box\"\n                >\n                  <el-option\n                    :label=\"item.name\"\n                    :value=\"item.id\"\n                    v-for=\"item in countryList\"\n                    :key=\"item.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"11\" :offset=\"2\">\n              <el-form-item class=\"group-country\" prop=\"city\">\n                <el-select\n                  v-model=\"groupInfo.cityName\"\n                  clearable\n                  filterable\n                  :placeholder=\"$t('Universal_0209')\"\n                  @change=\"setCity\"\n                  @clear=\"clearCity\"\n                  :disabled=\"areaDisabled\"\n                >\n                  <el-option\n                    :label=\"item.name\"\n                    :value=\"item.id\"\n                    v-for=\"item in areaList\"\n                    :key=\"item.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_createcommunity_0010')\" prop=\"groupTab\" class=\"group-info-note\">\n          <el-row>\n            <el-select\n              size=\"mini\"\n              v-model=\"groupInfo.groupTab\"\n              clearable\n              filterable\n              :placeholder=\"$t('chat_createcommunity_0035')\"\n              @clear=\"clearTab\"\n              class=\"select_box\"\n            >\n              <el-option\n                v-for=\"item in tabList\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              ></el-option>\n            </el-select>\n          </el-row>\n        </el-form-item>\n        <el-form-item :label=\"$t('chat_comm_set_0002')\" prop=\"groupProfile\" class=\"notegroup\">\n          <el-input\n            show-word-limit\n            class=\"limtinput\"\n            type=\"textarea\"\n            :maxlength=\"500\"\n            :rows=\"4\"\n            :placeholder=\"$t('chat_createcommunity_0033')\"\n            v-model=\"groupInfo.groupProfile\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item class=\"group-info-btn\">\n          <div class=\"group-edit-button\">\n            <el-button\n              type=\"info\"\n              size=\"mini\"\n              class=\"cancel\"\n              @click=\"onEditCancel\"\n              >{{ $t('Universal_0063') }}</el-button\n            >\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              class=\"submit\"\n              @click=\"onEditSubmit('groupEditForm')\"\n            >\n              {{ $t('Universal_0062') }}\n            </el-button>\n          </div>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { upload_images_avatar } from \"@/server.js\";\nimport { GroupInfo } from \"../groupInfo\";\nimport { setGroupBase } from \"../../server\";\nimport SQLUtils from \"@/components/db/sqlite.js\";\nimport Copper from \"@/components/chat/copper\";\nexport default {\n  name: \"GroupInfoEdit\",\n  components: { Copper },\n  props: {\n    info: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n  },\n  data() {\n    return {\n      groupEditVisible: false,\n      countryList: [],\n      areaList: [],\n      currentCountryName: \"\",\n      btnLoading: false,\n      groupInfo: {},\n      uploadData: {},\n      uploadUrl: upload_images_avatar(),\n      headers: {\n        Authorization: localStorage.accessToken,\n      },\n      groupEditFormRules: {\n        groupName: [\n          { required: true, message: this.$t('chat_createcommunity_0004'), trigger: \"blur\" },\n          {\n            min: 1,\n            max: 30,\n            trigger: \"blur\",\n          },\n          {\n            pattern: /^((?!didi).)+$/i,\n            message: this.$t('chat_comm_set_0017'),\n          },\n        ],\n        country: [{ message: this.$t('Universal_0208'), trigger: \"blur\" }],\n        city: [{ message: this.$t('Universal_0209'), trigger: \"blur\" }],\n        // groupTab:[ { message: \"为你的群贴上标签\", trigger: \"blur\" },],\n      },\n      areaDisabled: false,\n      inValidName: [\"盘古\"],\n      groupInfoBefore: \"\",\n      groupInfoAfter: \"\",\n      imgLoading: false,\n      tabList: [\n        { value: 1, label: this.$t('chat_createcommunity_0012') },\n        { value: 2, label: \"BTC\" },\n        { value: 3, label: this.$t('chat_createcommunity_0014') },\n        { value: 4, label: this.$t('chat_createcommunity_0015') },\n        { value: 5, label: this.$t('chat_createcommunity_0016') },\n        { value: 6, label: this.$t('chat_createcommunity_0017') },\n        { value: 7, label: \"Defi\" },\n        { value: 8, label: this.$t('chat_createcommunity_0019') },\n        { value: 9, label: this.$t('chat_createcommunity_0020') },\n        { value: 10, label: this.$t('chat_createcommunity_0021') },\n      ],\n    };\n  },\n  computed: {\n    dialogWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '380px';\n      } else {\n        return '500px';\n      }\n    },\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '90px';\n      } else {\n        return '170px';\n      }\n    }\n  },\n  methods: {\n    async uploadCropper(smallUrl, bigUrl) {\n      this.groupInfo.groupAvatar = smallUrl;\n      this.groupInfo.groupBigAvatar = bigUrl;\n    },\n    onPop() {\n      this.groupEditVisible = true;\n    },\n    onClose() {\n      this.groupEditVisible = false;\n    },\n    async getCountryList() {\n      this.countryList = await SQLUtils.getTAreaCountryList();\n      if (this.groupInfo.country && this.groupInfo.countryName) {\n        let countryId = this.countryList.find(\n          (item) => item.code == this.groupInfo.country\n        ).id;\n        await this.getAreaList(countryId);\n      }\n    },\n    async getAreaList(fatherId) {\n      this.areaList = await SQLUtils.getTAreaCityList(fatherId);\n      if (!fatherId) {\n        this.currentCountryName = \"\";\n        this.groupInfo.cityName = \"\";\n        this.groupInfo.country = \"\";\n        this.areaDisabled = true;\n      } else if (this.currentCountryName != this.groupInfo.countryName) {\n        this.groupInfo.cityName = \"\";\n        this.groupInfo.city = \"\";\n        this.areaDisabled = true;\n        this.groupInfo.country = this.countryList.find(\n          (item) => item.id == fatherId\n        ).code;\n        this.areaDisabled = false;\n      }\n    },\n    setCity() {\n      this.groupInfo.city = this.areaList.find(\n        (item) => item.id == this.groupInfo.cityName\n      ).code;\n    },\n    clearCountry() {\n      this.groupInfo.country = \"\";\n      this.groupInfo.city = \"\";\n      this.areaList = [];\n      this.areaDisabled = true;\n    },\n    clearCity() {\n      this.groupInfo.city = \"\";\n    },\n    clearTab() {\n      this.groupInfo.groupTab = \"\";\n    },\n    beforeAvatarUpload(file) {\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      console.log('ppp-- ',file.size, file.size / 1024 / 1024)\n      // const textArr = file.name.split(\".\");\n      // const isPng = textArr[textArr.length - 1];\n\n      const isPng =\n        file.type === \"image/jpg\" ||\n        file.type === \"image/jpeg\" ||\n        file.type === \"image/png\";\n\n      if (isPng) {\n        if (!isLt2M) {\n          this.$message.error(this.$t('Universal_0390'));\n          return false;\n        }\n      } else {\n        this.$message(this.$t('Universal_0369'));\n        return false;\n      }\n      this.imgLoading = true;\n      this.uploadData.file = file.name;\n    },\n    handleAvatarSuccess(data) {\n      if (data.code == \"200\") {\n        this.imgLoading = false;\n        this.groupInfo.groupAvatar = data.data.path;\n      }\n    },\n    onEditSubmit(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          console.log(this.groupInfo);\n          this.btnLoading = true;\n          console.log(\"imgLoading\", this.imgLoading);\n          if (this.imgLoading) {\n            this.$message.error(\"请等待图片上传完成\");\n            return;\n          }\n          const params = {\n            id: this.groupInfo.id,\n            groupAvatar: this.groupInfo.groupAvatar,\n            groupBigAvatar: this.groupInfo.groupBigAvatar,\n            groupName: this.groupInfo.groupName,\n            country: this.groupInfo.country,\n            city: this.groupInfo.city,\n            groupProfile: this.groupInfo.groupProfile,\n            groupTab:\n              this.groupInfo.groupTab == \"\" ? 0 : this.groupInfo.groupTab,\n          };\n          if (params.groupTab == null) {\n            params.groupTab = 0;\n          }\n          console.log('chen-修改群信息-setGroupBase-params=', params)\n          setGroupBase(params)\n            .then(async (res) => {\n              if (res.code == \"200\") {\n                this.$message.success(res.msg);\n                this.groupEditVisible = false;\n                this.btnLoading = false;\n                this.clearCountry();\n                await this.updateGroupInfo(params);\n                await this.$store.dispatch(\"GET_LAST_MSG_LIST\");\n                await this.$store.dispatch(\"GET_GROUP_LIST\");\n                this.$emit(\"refreshPage\");\n                this.$emit(\"refreshGroupInfo\");\n              } else {\n                this.$message.error(res.data.msg);\n              }\n            })\n            .catch(() => {\n              this.btnLoading = false;\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    async updateGroupInfo(params) {\n      await SQLUtils.updateTGroupsInfo(params);\n    },\n    onEditCancel() {\n      this.imgLoading = false;\n      this.groupInfoAfter = JSON.stringify(this.groupInfo);\n      if (this.groupInfoAfter == this.groupInfoBefore) {\n        this.groupEditVisible = false;\n      } else {\n        this.$confirm(\n          this.$t('chat_comm_set_0029'),\n          this.$t('Universal_0059'),\n          {\n            confirmButtonText: this.$t('Universal_0062'),\n            cancelButtonText: this.$t('Universal_0388'),\n            type: \"info\",\n          }\n        )\n          .then(() => {\n            this.groupEditVisible = false;\n            this.$parent.refreshGroupInfo();\n          })\n          .catch(() => {});\n      }\n    },\n    onOpen() {\n      let groupInfo = new GroupInfo(this.info);\n      if (groupInfo.groupTab == 0 || groupInfo.groupTab == \"\") {\n        groupInfo.groupTab = null;\n      }\n      this.groupInfo = groupInfo;\n      if (groupInfo.groupProfile === null) {\n        this.groupInfo.groupProfile = \"\";\n      } else {\n        this.groupInfo.groupProfile = decodeURI(groupInfo.groupProfile);\n      }\n      this.currentCountryName = this.groupInfo.countryName;\n      this.getCountryList();\n      this.areaDisabled = false;\n      this.groupInfoBefore = JSON.stringify(this.groupInfo);\n    },\n  },\n};\n</script>\n\n<style >\n.group-edit-el-dialog .el-dialog__header {\n  padding: 10px 0;\n}\n.group-edit-el-dialog .el-dialog__header span {\n  font-size: 14px;\n\n  font-weight: 500;\n  color: #333333;\n}\n.group-edit-el-dialog .el-dialog__body {\n  padding: 5px 20px 2px 0;\n}\n.group-edit-form {\n  margin-left: 10px;\n}\n.group-edit-form .el-form-item__label {\n  font-size: 12px;\n  font-weight: 400;\n}\n.group-edit-el-dialog button {\n  margin-top: -5px;\n  margin-right: -5px;\n}\n.limtinput input {\n  height: 30px;\n  font-size: 12px;\n\n  font-weight: 400;\n  border: 1px solid #d7d7d7;\n  background-color: #fbfbfb;\n}\n.group-edit-el-dialog .el-select .el-input__inner {\n  height: 30px;\n  font-size: 12px;\n\n  font-weight: 400;\n}\n.limtinput textarea {\n  font-size: 12px;\n\n  font-weight: 400;\n}\n.group-label .el-form-item__content {\n  font-size: 12px;\n\n  font-weight: 400;\n}\n.group-edit-el-dialog {\n  border-radius: 5px;\n}\n.group-edit-form .group-avatar-class label {\n  /* padding-top: 15px; */\n}\n</style>\n<style lang=\"less\" scoped>\n.gruop-info-edit {\n  /deep/ .el-dialog__body {\n    padding-top: 10px;\n  }\n  /deep/ .el-dialog__headerbtn .el-dialog__close {\n    color: #000;\n  }\n\n  /deep/ .el-form-item__label {\n    color: #333;\n    font-size: 13px;\n\n    font-weight: 400;\n  }\n\n  /deep/ .el-input__inner,\n  .el-textarea__inner {\n    color: #333;\n    font-size: 13px;\n\n    font-weight: 400;\n  }\n\n  /deep/ .limtinput textarea {\n    min-height: 120px;\n    max-height: 150px;\n    font-size: 13px;\n  }\n  /deep/ .el-form-item__error {\n    padding-top: 0;\n  }\n\n  .group-info-avatar {\n    margin-bottom: 0px;\n  }\n  .group-info-name {\n    margin-bottom: 10px;\n\n    /deep/ .el-input__inner {\n      border: 1px solid #d7d7d7;\n      background: #fbfbfb;\n    }\n  }\n  .group-info-country {\n    margin-bottom: 8px;\n\n    /deep/ .el-input__inner {\n      border: 1px solid #d7d7d7;\n      background-color: #fbfbfb;\n    }\n  }\n  .group-info-label {\n    margin-bottom: 11px;\n\n    /deep/ .el-input__inner {\n      border: 1px solid #d7d7d7;\n      background: #fbfbfb;\n    }\n  }\n  .group-info-note {\n    margin-bottom: 12px;\n\n    /deep/ .el-input__inner {\n      border: 1px solid #d7d7d7;\n      background: #fbfbfb;\n    }\n  }\n  .notegroup {\n    margin-bottom: 0;\n\n    /deep/ .el-textarea__inner {\n      border: 1px solid #d7d7d7;\n      background-color: #fbfbfb;\n    }\n\n    /deep/ .el-form-item__content {\n      line-height: 20px;\n    }\n    /deep/ .el-textarea .el-input__count {\n      bottom: -20px;\n      background-color: transparent;\n    }\n\n    /deep/ .el-textarea__inner {\n      padding: 8px;\n    }\n  }\n  .group-info-btn {\n    margin-bottom: 15px;\n  }\n}\n\n.demo-block {\n  /deep/ .el-loading-spinner {\n    left: -20%;\n  }\n\n  /deep/ .el-icon-loading {\n    color: #fff;\n    font-size: 12px;\n  }\n}\n</style>\n<style lang=\"less\" scoped>\n.group-country {\n  margin-bottom: 0px;\n}\n\n.group-avatar {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n}\n.group-edit-button {\n  float: right;\n  padding-right: 5px;\n  margin-top: 26px;\n}\n.cancel {\n  margin-right: 20px;\n}\n.group-edit-button button {\n  width: 84px;\n}\n</style>\n",
    "cssJson": [
      {
        ".group-edit-el-dialog .el-dialog__header": {
          "padding": "10px 0"
        },
        ".group-edit-el-dialog .el-dialog__header span": {
          "font-size": "14px",
          "font-weight": "500",
          "color": "#333333"
        },
        ".group-edit-el-dialog .el-dialog__body": {
          "padding": "5px 20px 2px 0"
        },
        ".group-edit-form": {
          "margin-left": "10px"
        },
        ".group-edit-form .el-form-item__label": {
          "font-size": "12px",
          "font-weight": "400"
        },
        ".group-edit-el-dialog button": {
          "margin-top": "-5px",
          "margin-right": "-5px"
        },
        ".limtinput input": {
          "height": "30px",
          "font-size": "12px",
          "font-weight": "400",
          "border": "1px solid #d7d7d7",
          "background-color": "#fbfbfb"
        },
        ".group-edit-el-dialog .el-select .el-input__inner": {
          "height": "30px",
          "font-size": "12px",
          "font-weight": "400"
        },
        ".limtinput textarea": {
          "font-size": "12px",
          "font-weight": "400"
        },
        ".group-label .el-form-item__content": {
          "font-size": "12px",
          "font-weight": "400"
        },
        ".group-edit-el-dialog": {
          "border-radius": "5px"
        },
        ".group-edit-form .group-avatar-class label": {}
      },
      {
        ".gruop-info-edit": {
          "/deep/ .el-dialog__body": {
            "padding-top": "10px"
          },
          "/deep/ .el-dialog__headerbtn .el-dialog__close": {
            "color": "#000"
          },
          "/deep/ .el-form-item__label": {
            "color": "#333",
            "font-size": "13px",
            "font-weight": "400"
          },
          "/deep/ .el-input__inner,  .el-textarea__inner": {
            "color": "#333",
            "font-size": "13px",
            "font-weight": "400"
          },
          "/deep/ .limtinput textarea": {
            "min-height": "120px",
            "max-height": "150px",
            "font-size": "13px"
          },
          "/deep/ .el-form-item__error": {
            "padding-top": "0"
          },
          ".group-info-avatar": {
            "margin-bottom": "0px"
          },
          ".group-info-name": {
            "margin-bottom": "10px",
            "/deep/ .el-input__inner": {
              "border": "1px solid #d7d7d7",
              "background": "#fbfbfb"
            }
          },
          ".group-info-country": {
            "margin-bottom": "8px",
            "/deep/ .el-input__inner": {
              "border": "1px solid #d7d7d7",
              "background-color": "#fbfbfb"
            }
          },
          ".group-info-label": {
            "margin-bottom": "11px",
            "/deep/ .el-input__inner": {
              "border": "1px solid #d7d7d7",
              "background": "#fbfbfb"
            }
          },
          ".group-info-note": {
            "margin-bottom": "12px",
            "/deep/ .el-input__inner": {
              "border": "1px solid #d7d7d7",
              "background": "#fbfbfb"
            }
          },
          ".notegroup": {
            "margin-bottom": "0",
            "/deep/ .el-textarea__inner": {
              "border": "1px solid #d7d7d7",
              "background-color": "#fbfbfb",
              "padding": "8px"
            },
            "/deep/ .el-form-item__content": {
              "line-height": "20px"
            },
            "/deep/ .el-textarea .el-input__count": {
              "bottom": "-20px",
              "background-color": "transparent"
            }
          },
          ".group-info-btn": {
            "margin-bottom": "15px"
          }
        },
        ".demo-block": {
          "/deep/ .el-loading-spinner": {
            "left": "-20%"
          },
          "/deep/ .el-icon-loading": {
            "color": "#fff",
            "font-size": "12px"
          }
        }
      },
      {
        ".group-country": {
          "margin-bottom": "0px"
        },
        ".group-avatar": {
          "width": "50px",
          "height": "50px",
          "border-radius": "50%"
        },
        ".group-edit-button": {
          "float": "right",
          "padding-right": "5px",
          "margin-top": "26px"
        },
        ".cancel": {
          "margin-right": "20px"
        },
        ".group-edit-button button": {
          "width": "84px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberCard/EditableInput.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"editable-input\">\n    <span v-show=\"!isEdit\" @click=\"onClick\" class=\"target-name\">\n      <label v-if=\"targetValue\" class=\"target-name-label pre-wrap\">{{ targetValue }}</label>\n      <label v-else>{{ placeHolder }} <img class=\"img_13\" src=\"../../assets/images/edit.png\"/></label>\n    </span>\n    <el-input\n        v-show=\"isEdit\"\n        v-model=\"inputValue\"\n        @blur=\"onBlur($event)\"\n        ref=\"targetInput\"\n        size=\"mini\"\n        :maxlength=\"maxsize\"\n        @input=\"changeValue\"\n    >\n      <template slot=\"suffix\">{{ textLength || 0 }}/{{ maxsize }}</template>\n    </el-input>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'EditableInput',\n  data() {\n    return {\n      isEdit: false,\n      inputValue: ''\n    };\n  },\n  props: {\n    targetValue: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetLabel: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    maxsize: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetType: {\n      type: String,\n      default() {\n        return 'text';\n      }\n    },\n    placeHolder: {\n      type: String,\n      default() {\n        return 'text';\n      }\n    },\n    lengthByString: {\n      type: Boolean,\n      default: false\n    },\n    noMinimum: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    errMsg() {\n      return this.$t('Universal_0226');\n    },\n    textLength() {\n      let length = 0;\n      if (!this.inputValue) return length;\n      if (this.lengthByString) {\n        length = this.inputValue.length;\n      } else {\n        length = this.inputValue.replace(/[\\u4e00-\\u9fa5]/g, 'aaa').length;\n      }\n      return length;\n    }\n  },\n  methods: {\n    onClick() {\n      this.isEdit = !this.isEdit;\n      setTimeout(() => {\n        this.inputValue = this.targetValue || \"\";\n        let currentInput = this.$refs.targetInput;\n        let pos = currentInput.value.length;\n        currentInput.focus();\n        currentInput.selectionStart = pos;\n        currentInput.selectionEnd = pos;\n      }, 100);\n    },\n    onBlur(e) {\n      this.isEdit = !this.isEdit;\n      if (e.target.value != this.targetValue) {\n        let length = 0;\n        if (this.lengthByString) {\n          length = e.target.value.length;\n        } else {\n          length = e.target.value.replace(/[\\u4e00-\\u9fa5]/g, 'aaa').length;\n        }\n\n        if (!this.noMinimum && (e.target.value && (length > Number(this.maxsize) || length < 3))) {\n          this.$message.error(this.errMsg);\n          return;\n        }\n        this.$emit('updateUserInfo', this.targetLabel, e.target.value);\n      }\n    },\n    changeValue() {\n      if (this.textLength > this.maxsize) {\n        this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1);\n      }\n    }\n  },\n  mounted() {}\n};\n</script>",
    "originData": "\n<template>\n  <div class=\"editable-input\">\n    <span v-show=\"!isEdit\" @click=\"onClick\" class=\"target-name\">\n      <label v-if=\"targetValue\" class=\"target-name-label pre-wrap\">{{ targetValue }}</label>\n      <label v-else>{{ placeHolder }} <img class=\"img_13\" src=\"../../assets/images/edit.png\"/></label>\n    </span>\n    <el-input\n        v-show=\"isEdit\"\n        v-model=\"inputValue\"\n        @blur=\"onBlur($event)\"\n        ref=\"targetInput\"\n        size=\"mini\"\n        :maxlength=\"maxsize\"\n        @input=\"changeValue\"\n    >\n      <template slot=\"suffix\">{{ textLength || 0 }}/{{ maxsize }}</template>\n    </el-input>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'EditableInput',\n  data() {\n    return {\n      isEdit: false,\n      inputValue: ''\n    };\n  },\n  props: {\n    targetValue: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetLabel: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    maxsize: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetType: {\n      type: String,\n      default() {\n        return 'text';\n      }\n    },\n    placeHolder: {\n      type: String,\n      default() {\n        return 'text';\n      }\n    },\n    lengthByString: {\n      type: Boolean,\n      default: false\n    },\n    noMinimum: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    errMsg() {\n      return this.$t('Universal_0226');\n    },\n    textLength() {\n      let length = 0;\n      if (!this.inputValue) return length;\n      if (this.lengthByString) {\n        length = this.inputValue.length;\n      } else {\n        length = this.inputValue.replace(/[\\u4e00-\\u9fa5]/g, 'aaa').length;\n      }\n      return length;\n    }\n  },\n  methods: {\n    onClick() {\n      this.isEdit = !this.isEdit;\n      setTimeout(() => {\n        this.inputValue = this.targetValue || \"\";\n        let currentInput = this.$refs.targetInput;\n        let pos = currentInput.value.length;\n        currentInput.focus();\n        currentInput.selectionStart = pos;\n        currentInput.selectionEnd = pos;\n      }, 100);\n    },\n    onBlur(e) {\n      this.isEdit = !this.isEdit;\n      if (e.target.value != this.targetValue) {\n        let length = 0;\n        if (this.lengthByString) {\n          length = e.target.value.length;\n        } else {\n          length = e.target.value.replace(/[\\u4e00-\\u9fa5]/g, 'aaa').length;\n        }\n\n        if (!this.noMinimum && (e.target.value && (length > Number(this.maxsize) || length < 3))) {\n          this.$message.error(this.errMsg);\n          return;\n        }\n        this.$emit('updateUserInfo', this.targetLabel, e.target.value);\n      }\n    },\n    changeValue() {\n      if (this.textLength > this.maxsize) {\n        this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1);\n      }\n    }\n  },\n  mounted() {}\n};\n</script>\n\n<style scoped>\n.editable-input {\n  max-width: 160px;\n  user-select: text;\n}\nspan {\n  width: 100%;\n  height: 18px;\n  display: inline-block;\n}\n.target-name {\n  user-select: text;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: 22px;\n  line-height: 22px;\n  /* padding-left: 4px; */\n}\n.target-name-label {\n  border: 1px #fff solid;\n  /* padding: 1px 4px; */\n  /*margin-bottom: -4px;*/\n}\n.target-name-label:hover {\n  border: 1px #dddddd solid;\n}\n/deep/ .el-input__suffix {\n  line-height: 28px;\n}\n</style>\n",
    "cssJson": [
      {
        ".editable-input": {
          "max-width": "160px",
          "user-select": "text"
        },
        "span": {
          "width": "100%",
          "height": "18px",
          "display": "inline-block"
        },
        ".target-name": {
          "user-select": "text",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "nowrap",
          "height": "22px",
          "line-height": "22px"
        },
        ".target-name-label": {
          "border": "1px #fff solid"
        },
        ".target-name-label:hover": {
          "border": "1px #dddddd solid"
        },
        "/deep/ .el-input__suffix": {
          "line-height": "28px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/copper.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <img :src=\"avater\" v-if=\"avater\" class=\"head-image\" @click=\"uploadAvater\" />\n    <i v-else class=\"el-icon-circle-plus user-uploader-icon\" @click=\"uploadAvater\"></i>\n    <input type=\"file\" ref=\"upload\" @change=\"transferFiles($event)\" style=\"display:none;\" />\n    <el-dialog\n      :title=\"$t('Universal_0076')\"\n      class=\"cropper-dialog\"\n      :close-on-click-modal=\"false\"\n      :visible=\"dialogVisible\"\n      center\n      :modal=\"false\"\n      @close=\"close\"\n    >\n      <div class=\"cropper-wrap\">\n        <div class=\"cropper-box\">\n          <vue-cropper\n            ref=\"cropper\"\n            :img=\"imgUrl\"\n            :output-size=\"option.size\"\n            :output-type=\"option.outputType\"\n            :info=\"option.info\"\n            :full=\"option.full\"\n            :canScale=\"option.canScale\"\n            :can-move=\"option.canMove\"\n            :can-move-box=\"option.canMoveBox\"\n            :fixed=\"option.fixed\"\n            :fixed-box=\"option.fixedBox\"\n            :original=\"option.original\"\n            :auto-crop=\"option.autoCrop\"\n            :center-box=\"option.centerBox\"\n            :high=\"option.high\"\n            :info-true=\"option.infoTrue\"\n            :max-img-size=\"option.maxImageSize\"\n            :enlarge=\"option.enlarge\"\n            :mode=\"option.mode\"\n            :maxImgSize=\"option.maxImgSize\"\n            :fixedNumber=\"option.fixedNumber\"\n            @realTime=\"realTime\"\n          />\n        </div>\n        <div class=\"preview-box\">\n          <div class=\"preview-title\">\n            <span @click=\"uploadImg2\" class=\"preveiw-upload\">{{ $t('opinions_0021') }}</span>\n          </div>\n          <div :style=\"previewStyle\" class=\"preview-img\">\n            <div :style=\"preview.div\">\n              <img :style=\"preview.img\" :src=\"preview.url\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"close\">{{ $t('Universal_0063') }}</el-button>\n        <el-button type=\"primary\" @click=\"finish\" :loading=\"loadings\">{{ $t('Universal_0062') }}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { VueCropper } from 'vue-cropper';\nimport fileOperational from '@/services/fileOperational';\nexport default {\n  name: 'ImageCropper',\n  components: {\n    VueCropper\n  },\n  data() {\n    return {\n      // 裁剪组件的基础配置option\n      option: {\n        img: '', // 裁剪图片的地址\n        outputSize: 1, // 裁剪生成图片的质量\n        outputType: 'png', // 裁剪生成图片的格式\n        full: true, // 是否输出原图比例的截图\n        info: false, // 图片大小信息\n        canScale: true, // 图片是否允许滚轮缩放\n        autoCrop: true, // 是否默认生成截图框\n        // autoCropWidth: 300, // 默认生成截图框宽度\n        // autoCropHeight: 300, // 默认生成截图框高度\n        canMove: true, // 上传图片是否可以移动\n        fixedBox: false, // 固定截图框大小 不允许改变\n        fixed: true, // 是否开启截图框宽高固定比例\n        fixedNumber: [1,1], // 截图框的宽高比例\n        canMoveBox: true, // 截图框能否拖动\n        original: false, // 上传图片按照原始比例渲染\n        centerBox: false, // 截图框是否被限制在图片里面\n        height: true,\n        infoTrue: false, // true 为展示真实输出图片宽高 false 展示看到的截图框宽高\n        enlarge: 1, // 图片根据截图框输出比例倍数\n        mode: 'container', // 图片默认渲染方式\n        maxImgSize: 300\n      },\n      // 防止重复提交\n      loadings: false,\n      preview: {},\n      previewStyle: {},\n      imgUrl: '',\n      dialogVisible: false\n    };\n  },\n  props: {\n    avater: {\n      type: String,\n      default: ''\n    }\n  },\n  watch: {},\n  methods: {\n    uploadAvater() {\n      this.$refs.upload.click();\n    },\n    transferFiles(e) {\n      let res = this.getFiles(e);\n      if (res) {\n        this.dialogVisible = true;\n      }\n    },\n    getFiles(e) {\n      let file = e.target.files[0];\n      // const isLt2M = file.size / 1024 < 300;\n      const textArr = file.name.split('.');\n      const isPng = textArr[textArr.length - 1].toLowerCase();\n\n      if (isPng == 'jpg' || isPng == 'png' || isPng == 'jpeg') {\n        // if (!isLt2M) {\n        //   this.$message.error(\"单个文件不可超过300 KB!\");\n        //   this.loadings = false;\n        //   return false;\n        // }\n      } else {\n        this.$message(this.$t('Universal_0369'));\n        this.loadings = false;\n        return false;\n      }\n      // this.uploadData.file = file.name;\n\n      let reader = new FileReader();\n      // 转化为blob\n      reader.readAsArrayBuffer(file);\n      reader.onload = e => {\n        let data;\n        if (typeof e.target.result === 'object') {\n          // 把Array Buffer转化为blob 如果是base64不需要\n          data = window.URL.createObjectURL(new Blob([e.target.result]));\n        } else {\n          data = e.target.result;\n        }\n        // this.$set(this.option, 'img', data)\n        this.imgUrl = data; //上传的本地图片，需要裁剪的图片\n        // console.log(this.imgUrl,'this.imgUrl++++');\n      };\n      return true;\n    },\n    upload() {\n      // 点击上传\n      this.$refs.upload.value = null;\n      this.$refs.upload.click();\n    },\n    uploadImg2() {\n      this.uploadAvater();\n    },\n    realTime(preview) {\n      // 实时预览\n      this.preview = preview;\n      this.previewStyle = {\n        width: preview.w + 'px',\n        height: preview.h + 'px',\n        overflow: 'hidden',\n        margin: '0',\n        zoom: 1,\n        'border-radius': (preview.w/2) + 'px'\n      };\n    },\n    // 将base64转换为png文件图片\n    finish() {\n      this.$refs.cropper.getCropData(async data => {\n        //把裁剪后的图片转化为base64\n        this.loadings = true;\n        //把base64转化为本地路径\n        const filePath = await fileOperational.saveImageToFile(data, localStorage.getItem('userId') + '.png');\n        const { FileUpload } = require('@/utils/fileUpload');\n        const files = new FileUpload(filePath, localStorage.getItem('userId'), -1);\n        const upload = await files.headImageUpload(); //通过sdk上传\n        console.log('chen-copper-upload==', upload)\n        this.$emit('uploadCropper', upload[0].url, upload[1].url);\n        this.dialogVisible = false;\n        this.loadings = false;\n      });\n    },\n    close() {\n      // this.$emit('closeDialog',false)\n      this.dialogVisible = false;\n      this.loadings = false;\n      this.$refs.upload.value = ''\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div>\n    <img :src=\"avater\" v-if=\"avater\" class=\"head-image\" @click=\"uploadAvater\" />\n    <i v-else class=\"el-icon-circle-plus user-uploader-icon\" @click=\"uploadAvater\"></i>\n    <input type=\"file\" ref=\"upload\" @change=\"transferFiles($event)\" style=\"display:none;\" />\n    <el-dialog\n      :title=\"$t('Universal_0076')\"\n      class=\"cropper-dialog\"\n      :close-on-click-modal=\"false\"\n      :visible=\"dialogVisible\"\n      center\n      :modal=\"false\"\n      @close=\"close\"\n    >\n      <div class=\"cropper-wrap\">\n        <div class=\"cropper-box\">\n          <vue-cropper\n            ref=\"cropper\"\n            :img=\"imgUrl\"\n            :output-size=\"option.size\"\n            :output-type=\"option.outputType\"\n            :info=\"option.info\"\n            :full=\"option.full\"\n            :canScale=\"option.canScale\"\n            :can-move=\"option.canMove\"\n            :can-move-box=\"option.canMoveBox\"\n            :fixed=\"option.fixed\"\n            :fixed-box=\"option.fixedBox\"\n            :original=\"option.original\"\n            :auto-crop=\"option.autoCrop\"\n            :center-box=\"option.centerBox\"\n            :high=\"option.high\"\n            :info-true=\"option.infoTrue\"\n            :max-img-size=\"option.maxImageSize\"\n            :enlarge=\"option.enlarge\"\n            :mode=\"option.mode\"\n            :maxImgSize=\"option.maxImgSize\"\n            :fixedNumber=\"option.fixedNumber\"\n            @realTime=\"realTime\"\n          />\n        </div>\n        <div class=\"preview-box\">\n          <div class=\"preview-title\">\n            <span @click=\"uploadImg2\" class=\"preveiw-upload\">{{ $t('opinions_0021') }}</span>\n          </div>\n          <div :style=\"previewStyle\" class=\"preview-img\">\n            <div :style=\"preview.div\">\n              <img :style=\"preview.img\" :src=\"preview.url\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"close\">{{ $t('Universal_0063') }}</el-button>\n        <el-button type=\"primary\" @click=\"finish\" :loading=\"loadings\">{{ $t('Universal_0062') }}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { VueCropper } from 'vue-cropper';\nimport fileOperational from '@/services/fileOperational';\nexport default {\n  name: 'ImageCropper',\n  components: {\n    VueCropper\n  },\n  data() {\n    return {\n      // 裁剪组件的基础配置option\n      option: {\n        img: '', // 裁剪图片的地址\n        outputSize: 1, // 裁剪生成图片的质量\n        outputType: 'png', // 裁剪生成图片的格式\n        full: true, // 是否输出原图比例的截图\n        info: false, // 图片大小信息\n        canScale: true, // 图片是否允许滚轮缩放\n        autoCrop: true, // 是否默认生成截图框\n        // autoCropWidth: 300, // 默认生成截图框宽度\n        // autoCropHeight: 300, // 默认生成截图框高度\n        canMove: true, // 上传图片是否可以移动\n        fixedBox: false, // 固定截图框大小 不允许改变\n        fixed: true, // 是否开启截图框宽高固定比例\n        fixedNumber: [1,1], // 截图框的宽高比例\n        canMoveBox: true, // 截图框能否拖动\n        original: false, // 上传图片按照原始比例渲染\n        centerBox: false, // 截图框是否被限制在图片里面\n        height: true,\n        infoTrue: false, // true 为展示真实输出图片宽高 false 展示看到的截图框宽高\n        enlarge: 1, // 图片根据截图框输出比例倍数\n        mode: 'container', // 图片默认渲染方式\n        maxImgSize: 300\n      },\n      // 防止重复提交\n      loadings: false,\n      preview: {},\n      previewStyle: {},\n      imgUrl: '',\n      dialogVisible: false\n    };\n  },\n  props: {\n    avater: {\n      type: String,\n      default: ''\n    }\n  },\n  watch: {},\n  methods: {\n    uploadAvater() {\n      this.$refs.upload.click();\n    },\n    transferFiles(e) {\n      let res = this.getFiles(e);\n      if (res) {\n        this.dialogVisible = true;\n      }\n    },\n    getFiles(e) {\n      let file = e.target.files[0];\n      // const isLt2M = file.size / 1024 < 300;\n      const textArr = file.name.split('.');\n      const isPng = textArr[textArr.length - 1].toLowerCase();\n\n      if (isPng == 'jpg' || isPng == 'png' || isPng == 'jpeg') {\n        // if (!isLt2M) {\n        //   this.$message.error(\"单个文件不可超过300 KB!\");\n        //   this.loadings = false;\n        //   return false;\n        // }\n      } else {\n        this.$message(this.$t('Universal_0369'));\n        this.loadings = false;\n        return false;\n      }\n      // this.uploadData.file = file.name;\n\n      let reader = new FileReader();\n      // 转化为blob\n      reader.readAsArrayBuffer(file);\n      reader.onload = e => {\n        let data;\n        if (typeof e.target.result === 'object') {\n          // 把Array Buffer转化为blob 如果是base64不需要\n          data = window.URL.createObjectURL(new Blob([e.target.result]));\n        } else {\n          data = e.target.result;\n        }\n        // this.$set(this.option, 'img', data)\n        this.imgUrl = data; //上传的本地图片，需要裁剪的图片\n        // console.log(this.imgUrl,'this.imgUrl++++');\n      };\n      return true;\n    },\n    upload() {\n      // 点击上传\n      this.$refs.upload.value = null;\n      this.$refs.upload.click();\n    },\n    uploadImg2() {\n      this.uploadAvater();\n    },\n    realTime(preview) {\n      // 实时预览\n      this.preview = preview;\n      this.previewStyle = {\n        width: preview.w + 'px',\n        height: preview.h + 'px',\n        overflow: 'hidden',\n        margin: '0',\n        zoom: 1,\n        'border-radius': (preview.w/2) + 'px'\n      };\n    },\n    // 将base64转换为png文件图片\n    finish() {\n      this.$refs.cropper.getCropData(async data => {\n        //把裁剪后的图片转化为base64\n        this.loadings = true;\n        //把base64转化为本地路径\n        const filePath = await fileOperational.saveImageToFile(data, localStorage.getItem('userId') + '.png');\n        const { FileUpload } = require('@/utils/fileUpload');\n        const files = new FileUpload(filePath, localStorage.getItem('userId'), -1);\n        const upload = await files.headImageUpload(); //通过sdk上传\n        console.log('chen-copper-upload==', upload)\n        this.$emit('uploadCropper', upload[0].url, upload[1].url);\n        this.dialogVisible = false;\n        this.loadings = false;\n      });\n    },\n    close() {\n      // this.$emit('closeDialog',false)\n      this.dialogVisible = false;\n      this.loadings = false;\n      this.$refs.upload.value = ''\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.head-image {\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n}\n.cropper-dialog {\n  & /deep/ .el-dialog {\n    width: max-content;\n  }\n  & /deep/ .el-dialog__body {\n    padding: 20px;\n  }\n  & /deep/ .el-button {\n    width: 145px !important;\n  }\n}\n.cropper-wrap {\n  display: flex;\n  .cropper-box {\n    margin-right: 20px;\n    width: 300px;\n    height: 300px;\n    & /deep/ .crop-point {\n      display: none;\n    }\n  }\n  .preview-box {\n    .preview-title {\n      display: flex;\n      min-width: 100px;\n      justify-content: space-between;\n      align-items: center;\n      height: 32px;\n      color: rgba(30, 35, 48, 1);\n      font-family: PingFangSC-Medium;\n      .preveiw-upload {\n        color: #0067ed;\n        cursor: pointer;\n      }\n    }\n    .preview-img {\n      border-radius: 2px;\n    }\n  }\n}\n.fun-btn {\n  margin-top: 16px;\n  i {\n    margin-right: 16px;\n    font-size: 18px;\n    color: #8c8c8c;\n    cursor: pointer;\n    &:hover {\n      color: #0067ed;\n    }\n  }\n  .reUpload {\n    margin-right: 16px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".head-image": {
          "width": "44px",
          "height": "44px",
          "border-radius": "50%"
        },
        ".cropper-dialog": {
          "& /deep/ .el-dialog": {
            "width": "max-content"
          },
          "& /deep/ .el-dialog__body": {
            "padding": "20px"
          },
          "& /deep/ .el-button": {
            "width": "145px !important"
          }
        },
        ".cropper-wrap": {
          "display": "flex",
          ".cropper-box": {
            "margin-right": "20px",
            "width": "300px",
            "height": "300px",
            "& /deep/ .crop-point": {
              "display": "none"
            }
          },
          ".preview-box": {
            ".preview-title": {
              "display": "flex",
              "min-width": "100px",
              "justify-content": "space-between",
              "align-items": "center",
              "height": "32px",
              "color": "rgba(30, 35, 48, 1)",
              "font-family": "PingFangSC-Medium",
              ".preveiw-upload": {
                "color": "#0067ed",
                "cursor": "pointer"
              }
            },
            ".preview-img": {
              "border-radius": "2px"
            }
          }
        },
        ".fun-btn": {
          "margin-top": "16px",
          "i": {
            "margin-right": "16px",
            "font-size": "18px",
            "color": "#8c8c8c",
            "cursor": "pointer",
            "&:hover": {
              "color": "#0067ed"
            }
          },
          ".reUpload": {
            "margin-right": "16px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/add-friends-group/dialog/add-friends.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 添加好友 -->\n<template>\n  <div class=\"addFriend\">\n    <el-dialog\n      :title=\"$t('chat_addfriend_0001')\"\n      @close=\"handCloseAddFriends\"\n      :close-on-click-modal=\"false\"\n      :append-to-body=\"true\"\n      :visible=\"dialogAddFriendsVisible\"\n      :center=\"true\"\n      width=\"380px\"\n      custom-class=\"dialog-position\"\n      class=\"addFriendDialog\"\n    >\n      <div class=\"add-friend-dialog-con text-center\">\n        <el-row>\n          <el-col>\n            <p style=\"padding:10px 0;text-align:left\">{{ $t('chat_addfriend_0012') }}</p>\n            <el-form ref=\"ruleForm\" :rules=\"formRules\" label-position=\"top\" label-width=\"80px\" :model=\"formValues\" @submit.native.prevent>\n              <el-form-item>\n                <div class=\"add-friend-dialog-textarea\">\n                  <el-input\n                    type=\"textarea\"\n                    :rows=\"4\"\n                    v-model=\"text\"\n                    maxlength=\"30\"\n                    :rules=\"[\n                      {\n                        min: 5,\n                        max: 200,\n                        message: $t('Universal_0241'),\n                        trigger: 'blur'\n                      }\n                    ]\"\n                    show-word-limit\n                  ></el-input>\n                </div>\n              </el-form-item>\n              <el-form-item prop=\"friendNotes\">\n                <div style=\"text-align:left\">\n                  <span style=\"padding:10px 0;display:inline-block\">{{ $t('book_friend_0005') }}</span>\n                  <el-input :placeholder=\"$t('Universal_0353')\" v-model=\"formValues.friendNotes\"></el-input>\n                </div>\n              </el-form-item>\n            </el-form>\n            <div class=\"add-friend-dialog-btns\">\n              <el-button\n                @click=\"handCancelDialog\"\n                style=\"\n                  background-color: #d8d8d8;\n                  color: #333;\n                  border: 1px solid #d8d8d8;\n                \"\n                type=\"info\"\n                >{{ $t('Universal_0063') }}</el-button\n              >\n\n              <el-button @click=\"handConfirmDialog(friendData.id)\" style=\"background-color: #2F54EB\" type=\"primary\">\n                {{ $t('Universal_0062') }}\n              </el-button>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { add_the_friends } from \"../add/server\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport { mapState,mapGetters } from \"vuex\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    dialogAddFriendsVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    friendData: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  filters: {\n    substringName(val) {\n      return val && val.length > 10 ? val.substring(0, 10) + '...' : val;\n    }\n  },\n  data() {\n    //这里存放数据\n    let validateName = (rule, value, callback) => {\n      if (value) {\n        let length = value.replace(/[\\u4e00-\\u9fa5]/g, 'aaa').length;\n        console.log('@@@@', length, value);\n        if (length > 18 || length < 3) {\n          callback(new Error(this.$t('Universal_0225')));\n        } else {\n          callback();\n        }\n      } else {\n        callback();\n      }\n    };\n    return {\n      text: '',\n      formValues: {\n        friendNotes: ''\n      },\n      formRules: {\n        friendNotes: [\n          {\n            validator: validateName,\n            trigger: 'blur',\n            message: this.$t('Universal_0225')\n          },\n          {\n            pattern: /^((?!didi).)+$/i, ///^didi/ig,\n            message: this.$t('chat_comm_set_0017')\n          }\n        ]\n      },\n      userInfoName: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n    ...mapGetters({\n      userInfo: 'userInfo'\n    })\n  },\n  //监控data中的数据变化\n  watch: {\n    dialogAddFriendsVisible(n) {\n      if (n === true) {\n        this.text = this.$t('book_friend_0022') + this.userInfoName;\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    async addFriends(param) {\n      let res = await add_the_friends(param);\n      if (res.code == 200) {\n        this.$message.success(this.$t('Universal_0138'));\n        this.text = '';\n      } else {\n        this.$message({\n          message: res.msg || res.data.msg,\n          type: 'error',\n          customClass: 'mzindex'\n        });\n        return;\n      }\n    },\n    async setkeynull() {\n      this.text = this.$t('book_friend_0022') + UserInfoUtils.getCurrentUserNickName();\n      this.userInfoName = UserInfoUtils.getCurrentUserNickName();\n    },\n    handCloseAddFriends() {\n      this.$emit('handCloseAddFriends', false);\n      this.$emit('handCancelFriDialog', false);\n    },\n    handConfirmDialog(a) {\n      if(this.personalAppealInfo.createTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('Di_0015'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.$emit('toAppeal');\n        }).catch(() => {\n        });\n      }else{\n        this.$refs['ruleForm'].validate(async (valid) => {\n          if(valid){\n            let userid = UserInfoUtils.getCurrentUserId();\n            let param = {\n              userId: userid,\n              friendId: a,\n              source: \"1\",\n              applyStatus: -1,\n              content: this.text,\n              friendNotes:this.formValues.friendNotes\n            };\n            this.addFriends(param);\n            this.$emit(\"handConfirmFriDialog\", false);\n          }\n        })\n      }\n      \n    },\n    handCancelDialog() {\n      // this.text = ''\n      this.$emit('handCancelFriDialog', false);\n      // this.text=`我是${this.friendData.userNickName}`\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.setkeynull();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    //  this.text=`我是${this.friendData.userNickName}`\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 添加好友 -->\n<template>\n  <div class=\"addFriend\">\n    <el-dialog\n      :title=\"$t('chat_addfriend_0001')\"\n      @close=\"handCloseAddFriends\"\n      :close-on-click-modal=\"false\"\n      :append-to-body=\"true\"\n      :visible=\"dialogAddFriendsVisible\"\n      :center=\"true\"\n      width=\"380px\"\n      custom-class=\"dialog-position\"\n      class=\"addFriendDialog\"\n    >\n      <div class=\"add-friend-dialog-con text-center\">\n        <el-row>\n          <el-col>\n            <p style=\"padding:10px 0;text-align:left\">{{ $t('chat_addfriend_0012') }}</p>\n            <el-form ref=\"ruleForm\" :rules=\"formRules\" label-position=\"top\" label-width=\"80px\" :model=\"formValues\" @submit.native.prevent>\n              <el-form-item>\n                <div class=\"add-friend-dialog-textarea\">\n                  <el-input\n                    type=\"textarea\"\n                    :rows=\"4\"\n                    v-model=\"text\"\n                    maxlength=\"30\"\n                    :rules=\"[\n                      {\n                        min: 5,\n                        max: 200,\n                        message: $t('Universal_0241'),\n                        trigger: 'blur'\n                      }\n                    ]\"\n                    show-word-limit\n                  ></el-input>\n                </div>\n              </el-form-item>\n              <el-form-item prop=\"friendNotes\">\n                <div style=\"text-align:left\">\n                  <span style=\"padding:10px 0;display:inline-block\">{{ $t('book_friend_0005') }}</span>\n                  <el-input :placeholder=\"$t('Universal_0353')\" v-model=\"formValues.friendNotes\"></el-input>\n                </div>\n              </el-form-item>\n            </el-form>\n            <div class=\"add-friend-dialog-btns\">\n              <el-button\n                @click=\"handCancelDialog\"\n                style=\"\n                  background-color: #d8d8d8;\n                  color: #333;\n                  border: 1px solid #d8d8d8;\n                \"\n                type=\"info\"\n                >{{ $t('Universal_0063') }}</el-button\n              >\n\n              <el-button @click=\"handConfirmDialog(friendData.id)\" style=\"background-color: #2F54EB\" type=\"primary\">\n                {{ $t('Universal_0062') }}\n              </el-button>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { add_the_friends } from \"../add/server\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport { mapState,mapGetters } from \"vuex\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    dialogAddFriendsVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    friendData: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  filters: {\n    substringName(val) {\n      return val && val.length > 10 ? val.substring(0, 10) + '...' : val;\n    }\n  },\n  data() {\n    //这里存放数据\n    let validateName = (rule, value, callback) => {\n      if (value) {\n        let length = value.replace(/[\\u4e00-\\u9fa5]/g, 'aaa').length;\n        console.log('@@@@', length, value);\n        if (length > 18 || length < 3) {\n          callback(new Error(this.$t('Universal_0225')));\n        } else {\n          callback();\n        }\n      } else {\n        callback();\n      }\n    };\n    return {\n      text: '',\n      formValues: {\n        friendNotes: ''\n      },\n      formRules: {\n        friendNotes: [\n          {\n            validator: validateName,\n            trigger: 'blur',\n            message: this.$t('Universal_0225')\n          },\n          {\n            pattern: /^((?!didi).)+$/i, ///^didi/ig,\n            message: this.$t('chat_comm_set_0017')\n          }\n        ]\n      },\n      userInfoName: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n    ...mapGetters({\n      userInfo: 'userInfo'\n    })\n  },\n  //监控data中的数据变化\n  watch: {\n    dialogAddFriendsVisible(n) {\n      if (n === true) {\n        this.text = this.$t('book_friend_0022') + this.userInfoName;\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    async addFriends(param) {\n      let res = await add_the_friends(param);\n      if (res.code == 200) {\n        this.$message.success(this.$t('Universal_0138'));\n        this.text = '';\n      } else {\n        this.$message({\n          message: res.msg || res.data.msg,\n          type: 'error',\n          customClass: 'mzindex'\n        });\n        return;\n      }\n    },\n    async setkeynull() {\n      this.text = this.$t('book_friend_0022') + UserInfoUtils.getCurrentUserNickName();\n      this.userInfoName = UserInfoUtils.getCurrentUserNickName();\n    },\n    handCloseAddFriends() {\n      this.$emit('handCloseAddFriends', false);\n      this.$emit('handCancelFriDialog', false);\n    },\n    handConfirmDialog(a) {\n      if(this.personalAppealInfo.createTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('Di_0015'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.$emit('toAppeal');\n        }).catch(() => {\n        });\n      }else{\n        this.$refs['ruleForm'].validate(async (valid) => {\n          if(valid){\n            let userid = UserInfoUtils.getCurrentUserId();\n            let param = {\n              userId: userid,\n              friendId: a,\n              source: \"1\",\n              applyStatus: -1,\n              content: this.text,\n              friendNotes:this.formValues.friendNotes\n            };\n            this.addFriends(param);\n            this.$emit(\"handConfirmFriDialog\", false);\n          }\n        })\n      }\n      \n    },\n    handCancelDialog() {\n      // this.text = ''\n      this.$emit('handCancelFriDialog', false);\n      // this.text=`我是${this.friendData.userNickName}`\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.setkeynull();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    //  this.text=`我是${this.friendData.userNickName}`\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n/deep/ .el-button + .el-button {\n  margin-left: 30px;\n}\n\n/deep/ .dialog-position {\n  margin-top: 12vh !important;\n  margin-left: 45vw !important;\n}\n\n/deep/ .el-dialog__wrapper {\n  overflow: hidden;\n}\n.add-friend-dialog-name {\n  color: #333;\n  font-size: 18px;\n  font-weight: 600;\n  margin: 10px 0 5px;\n}\n.add-friend-dialog-code {\n  color: #999;\n  font-size: 14px;\n}\n.add-friend-dialog-des {\n  text-align: left;\n  color: #999;\n  font-size: 12px;\n  margin: 10px 0 20px;\n  word-break: break-all;\n  word-wrap: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n.add-friend-dialog-bot {\n  li {\n    border-right: 1px solid #2f54eb;\n    flex: 1;\n    color: #333333;\n    font-size: 14px;\n    &:last-child {\n      border-right: none;\n    }\n    .add-friend-dialog-number {\n      font-weight: 600;\n      line-height: 25px;\n      img {\n        vertical-align: middle;\n      }\n    }\n    .add-friend-dialog-word {\n      color: #999999;\n      font-size: 12px;\n      line-height: 25px;\n    }\n  }\n}\n.add-friend-dialog-btns {\n  margin-top: 20px;\n  text-align: right;\n  button {\n    font-size: 13px;\n    padding: 7px 29px;\n    text-align: center;\n    margin span {\n      display: inline-block;\n    }\n  }\n}\n\n.addFriendDialog {\n  /deep/ .el-dialog__header {\n    padding-top: 10px;\n    padding-bottom: 20px;\n  }\n  /deep/ .el-dialog__title {\n    font-size: 14px;\n\n    font-weight: 600;\n    color: #333333;\n    line-height: 20px;\n  }\n  /deep/ .el-dialog__body {\n    padding: 0 20px 20px;\n  }\n  .add-friend-dialog-textarea {\n    // height: 152px;\n    background: #fbfbfb;\n    border: 1px solid #d7d7d7;\n  }\n\n  /deep/ .el-input__inner,\n  .el-textarea__inner {\n    background-color: #fbfbfb;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        "/deep/ .el-button + .el-button": {
          "margin-left": "30px"
        },
        "/deep/ .dialog-position": {
          "margin-top": "12vh !important",
          "margin-left": "45vw !important"
        },
        "/deep/ .el-dialog__wrapper": {
          "overflow": "hidden"
        },
        ".add-friend-dialog-name": {
          "color": "#333",
          "font-size": "18px",
          "font-weight": "600",
          "margin": "10px 0 5px"
        },
        ".add-friend-dialog-code": {
          "color": "#999",
          "font-size": "14px"
        },
        ".add-friend-dialog-des": {
          "text-align": "left",
          "color": "#999",
          "font-size": "12px",
          "margin": "10px 0 20px",
          "word-break": "break-all",
          "word-wrap": "break-word",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "display": "-webkit-box",
          "-webkit-line-clamp": "2",
          "-webkit-box-orient": "vertical"
        },
        ".add-friend-dialog-bot": {
          "li": {
            "border-right": "1px solid #2f54eb",
            "flex": "1",
            "color": "#333333",
            "font-size": "14px",
            "&:last-child": {
              "border-right": "none"
            },
            ".add-friend-dialog-number": {
              "font-weight": "600",
              "line-height": "25px",
              "img": {
                "vertical-align": "middle"
              }
            },
            ".add-friend-dialog-word": {
              "color": "#999999",
              "font-size": "12px",
              "line-height": "25px"
            }
          }
        },
        ".add-friend-dialog-btns": {
          "margin-top": "20px",
          "text-align": "right",
          "button": {
            "font-size": "13px",
            "padding": "7px 29px",
            "text-align": "center",
            "margin span": {
              "display": "inline-block"
            }
          }
        },
        ".addFriendDialog": {
          "/deep/ .el-dialog__header": {
            "padding-top": "10px",
            "padding-bottom": "20px"
          },
          "/deep/ .el-dialog__title": {
            "font-size": "14px",
            "font-weight": "600",
            "color": "#333333",
            "line-height": "20px"
          },
          "/deep/ .el-dialog__body": {
            "padding": "0 20px 20px"
          },
          ".add-friend-dialog-textarea": {
            "background": "#fbfbfb",
            "border": "1px solid #d7d7d7"
          },
          "/deep/ .el-input__inner,  .el-textarea__inner": {
            "background-color": "#fbfbfb"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/PersonInfo.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 个人信息 -->\n<template>\n  <div class>\n    <el-dialog @close=\"handCloseDialog\" :append-to-body=\"true\" width=\"400px\" :visible=\"dialogPersonInfoVisible\">\n      <div class=\"person-info-wrap text-center\">\n        <el-row>\n          <el-col :span=\"24\">\n            <img :src=\"userInfo.userHeadImg\" width=\"50px\" height=\"50px\" style=\"border-radius: 50%\" alt />\n            <div class=\"add-friend-dialog-name\">\n              {{ userInfo.userNickName | substringName }}\n            </div>\n            <div class=\"add-friend-dialog-code\">个人ID：{{ userInfo.inviteCode }}</div>\n            <div class=\"add-friend-dialog-des\">个性签名：{{ userInfo.personalSign }}</div>\n            <ul class=\"flex text-center add-friend-dialog-bot\">\n              <li>\n                <div class=\"add-friend-dialog-word\">LV{{ userInfo.level }}</div>\n                <div class=\"add-friend-dialog-number\">\n                  <div>\n                    <img src=\"../../assets/images/pinfo_grade.png\" width=\"20px\" alt />\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div class=\"add-friend-dialog-number\">\n                  {{ userInfo.computingPower }}\n                </div>\n                <div class=\"add-friend-dialog-number\">\n                  <div>\n                    <img src=\"../../assets/images/pinfo_number.png\" width=\"20px\" alt />\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div class=\"add-friend-dialog-number\">{{ userInfo.invitationCount }}篇</div>\n                <div class=\"add-friend-dialog-number\">\n                  <div>\n                    <img src=\"../../assets/images/pinfo_view.png\" width=\"20px\" alt />\n                  </div>\n                </div>\n              </li>\n            </ul>\n            <div class=\"add-friend-dialog-btns\">\n              <slot v-if=\"userInfo.isFriend\">\n                <el-button @click=\"handSendMes(userInfo)\" style=\"background-color:#2F54EB;width: 48%\" type=\"info\">开始聊天</el-button>\n                <el-button @click=\"handDel(userInfo)\" style=\"background-color:#F5222D;width: 48%\" type=\"warning\">删除好友</el-button>\n              </slot>\n              <slot v-else>\n                <el-button @click=\"handaddFriend(userInfo.id)\" style=\"background-color:#2F54EB;width:96%\" type=\"info\">加为好友</el-button>\n              </slot>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    dialogPersonInfoVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    userInfo: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {};\n  },\n  filters: {\n    substringName(val) {\n      return val && val.length > 10 ? val.substring(0, 10) + '...' : val;\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    handCloseDialog() {\n      // 关闭弹框\n      this.$emit('handCloseDialog', false);\n    },\n    handDel(userInfo) {\n      // 删除事件\n      this.$emit('handDel', userInfo, false);\n    },\n    handSendMes(userInfo) {\n      // 发送消息\n      this.$emit('handSendMes', userInfo, false);\n    },\n    handaddFriend(userInfo) {\n      this.$emit('handaddFriend', userInfo, false);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 个人信息 -->\n<template>\n  <div class>\n    <el-dialog @close=\"handCloseDialog\" :append-to-body=\"true\" width=\"400px\" :visible=\"dialogPersonInfoVisible\">\n      <div class=\"person-info-wrap text-center\">\n        <el-row>\n          <el-col :span=\"24\">\n            <img :src=\"userInfo.userHeadImg\" width=\"50px\" height=\"50px\" style=\"border-radius: 50%\" alt />\n            <div class=\"add-friend-dialog-name\">\n              {{ userInfo.userNickName | substringName }}\n            </div>\n            <div class=\"add-friend-dialog-code\">个人ID：{{ userInfo.inviteCode }}</div>\n            <div class=\"add-friend-dialog-des\">个性签名：{{ userInfo.personalSign }}</div>\n            <ul class=\"flex text-center add-friend-dialog-bot\">\n              <li>\n                <div class=\"add-friend-dialog-word\">LV{{ userInfo.level }}</div>\n                <div class=\"add-friend-dialog-number\">\n                  <div>\n                    <img src=\"../../assets/images/pinfo_grade.png\" width=\"20px\" alt />\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div class=\"add-friend-dialog-number\">\n                  {{ userInfo.computingPower }}\n                </div>\n                <div class=\"add-friend-dialog-number\">\n                  <div>\n                    <img src=\"../../assets/images/pinfo_number.png\" width=\"20px\" alt />\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div class=\"add-friend-dialog-number\">{{ userInfo.invitationCount }}篇</div>\n                <div class=\"add-friend-dialog-number\">\n                  <div>\n                    <img src=\"../../assets/images/pinfo_view.png\" width=\"20px\" alt />\n                  </div>\n                </div>\n              </li>\n            </ul>\n            <div class=\"add-friend-dialog-btns\">\n              <slot v-if=\"userInfo.isFriend\">\n                <el-button @click=\"handSendMes(userInfo)\" style=\"background-color:#2F54EB;width: 48%\" type=\"info\">开始聊天</el-button>\n                <el-button @click=\"handDel(userInfo)\" style=\"background-color:#F5222D;width: 48%\" type=\"warning\">删除好友</el-button>\n              </slot>\n              <slot v-else>\n                <el-button @click=\"handaddFriend(userInfo.id)\" style=\"background-color:#2F54EB;width:96%\" type=\"info\">加为好友</el-button>\n              </slot>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    dialogPersonInfoVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    userInfo: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {};\n  },\n  filters: {\n    substringName(val) {\n      return val && val.length > 10 ? val.substring(0, 10) + '...' : val;\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    handCloseDialog() {\n      // 关闭弹框\n      this.$emit('handCloseDialog', false);\n    },\n    handDel(userInfo) {\n      // 删除事件\n      this.$emit('handDel', userInfo, false);\n    },\n    handSendMes(userInfo) {\n      // 发送消息\n      this.$emit('handSendMes', userInfo, false);\n    },\n    handaddFriend(userInfo) {\n      this.$emit('handaddFriend', userInfo, false);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.person-info-wrap {\n  cursor: auto;\n  .add-friend-dialog-name {\n    color: #333;\n    font-size: 18px;\n    font-weight: 600;\n    margin: 10px 0 5px;\n  }\n  .add-friend-dialog-code {\n    color: #999;\n    font-size: 14px;\n  }\n  .add-friend-dialog-des {\n    line-height: 1.7;\n    // text-align: left;\n    color: #999;\n    font-size: 12px;\n    margin: 10px 0 20px;\n    word-break: break-all;\n    word-wrap: break-word;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n  .add-friend-dialog-bot {\n    li {\n      border-right: 1px solid #2f54eb;\n      flex: 1;\n      color: #333333;\n      font-size: 14px;\n      &:last-child {\n        border-right: none;\n      }\n      .add-friend-dialog-number {\n        font-weight: 600;\n        line-height: 25px;\n        height: 25px;\n        img {\n          vertical-align: middle;\n        }\n      }\n      .add-friend-dialog-word {\n        color: #999999;\n        font-size: 12px;\n        line-height: 25px;\n      }\n    }\n  }\n  .add-friend-dialog-apply {\n    font-size: 14px;\n    color: #333;\n    line-height: 20px;\n    margin-bottom: 10px;\n  }\n  .add-friend-dialog-btns {\n    margin-top: 20px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".person-info-wrap": {
          "cursor": "auto",
          ".add-friend-dialog-name": {
            "color": "#333",
            "font-size": "18px",
            "font-weight": "600",
            "margin": "10px 0 5px"
          },
          ".add-friend-dialog-code": {
            "color": "#999",
            "font-size": "14px"
          },
          ".add-friend-dialog-des": {
            "line-height": "1.7",
            "color": "#999",
            "font-size": "12px",
            "margin": "10px 0 20px",
            "word-break": "break-all",
            "word-wrap": "break-word",
            "overflow": "hidden",
            "text-overflow": "ellipsis",
            "display": "-webkit-box",
            "-webkit-line-clamp": "2",
            "-webkit-box-orient": "vertical"
          },
          ".add-friend-dialog-bot": {
            "li": {
              "border-right": "1px solid #2f54eb",
              "flex": "1",
              "color": "#333333",
              "font-size": "14px",
              "&:last-child": {
                "border-right": "none"
              },
              ".add-friend-dialog-number": {
                "font-weight": "600",
                "line-height": "25px",
                "height": "25px",
                "img": {
                  "vertical-align": "middle"
                }
              },
              ".add-friend-dialog-word": {
                "color": "#999999",
                "font-size": "12px",
                "line-height": "25px"
              }
            }
          },
          ".add-friend-dialog-apply": {
            "font-size": "14px",
            "color": "#333",
            "line-height": "20px",
            "margin-bottom": "10px"
          },
          ".add-friend-dialog-btns": {
            "margin-top": "20px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/add-friends-group/dialog/add-groups.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 添加好友 -->\n<template>\n  <div>\n    <el-dialog\n      :lock-scroll=\"true\"\n      :title=\"$t('chat_joincommunity_0009')\"\n      @close=\"handCloseAddGroups\"\n      :close-on-click-modal=\"false\"\n      :append-to-body=\"true\"\n      width=\"380px\"\n      :visible=\"dialogAddGroupsVisible\"\n      :center=\"true\"\n      custom-class=\"dialog-position\"\n      class=\"add-group-wrap\"\n    >\n      <div class=\"add-group-dialog-con text-center\" style=\"cursor: auto\">\n        <el-row>\n          <el-col>\n            <div class=\"add-group-dialog-textarea\">\n              <el-input rows=\"6\" class=\"verify-info\" type=\"textarea\" v-model=\"text\"></el-input>\n            </div>\n            <div class=\"add-group-dialog-btns\">\n              <el-button @click=\"handCancelDialog\" style=\"background-color: #9297A3\" type=\"info\">\n                {{ $t('Universal_0063') }}\n              </el-button>\n              <el-button @click=\"handConfirmDialog(groupData)\" style=\"background-color: #2F54EB\" type=\"primary\">\n                {{ $t('Universal_0046') }}\n              </el-button>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { send_add_group_apply } from \"../add/server\";\nimport { contGrpSize } from \"@/utils\";\nimport { mapState,mapMutations, mapGetters } from \"vuex\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    dialogAddGroupsVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    groupData: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      text: ''\n    };\n  },\n  filters: {\n    substringName(val) {\n      return val && val.length > 10 ? val.substring(0, 10) + '...' : val;\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n    ...mapGetters({\n      userInfo: 'userInfo'\n    })\n  },\n  //监控data中的数据变化\n  watch: {\n    dialogAddGroupsVisible: {\n      handler(n) {\n        if (n === true) {\n          this.text = this.$t('book_friend_0022') + this.userInfo && this.userInfo.userName;\n        }\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    handCloseAddGroups() {\n      this.$emit('handCloseAddGroups', false);\n    },\n    async goGroup(param) {\n      let res = await send_add_group_apply([param]);\n      if (res.code == 200) {\n        this.$message.success(this.$t('chat_joincommunity_0010'));\n        this.text = '';\n      } else {\n        this.$message.error(res.msg);\n        return;\n      }\n    },\n    handGoChat(a) {\n      this.CLEAR_CHAT();\n      let current = {\n        uniqueCode: contGrpSize(a.id)\n      };\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          targetId: a.id,\n          timer: new Date().getTime(),\n          friendName: encodeURI(a.groupName),\n          uniqueCode: contGrpSize(a.id)\n        }\n      });\n      this.$emit('handConfirmGroupDialog', false);\n    },\n    handConfirmDialog(a) {\n      if(this.personalAppealInfo.createTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('book_group_0019'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.$emit('toAppeal');\n        }).catch(() => {\n        });\n      }else{\n        if (this.text.trim() === \"\") {\n          this.$message.warning(this.$t('Universal_0242'));\n          return;\n        }\n        let userid = UserInfoUtils.getCurrentUserId();\n        let param = {\n          channelCode: 1,\n          userId: userid,\n          groupId: a.id,\n          content: this.text,\n        };\n        this.goGroup(param, a);\n        this.$emit(\"handConfirmGroupDialog\", false);\n      }\n    },\n    handCancelDialog() {\n      this.text = '';\n      this.$emit('handCancelGroupDialog', false);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 添加好友 -->\n<template>\n  <div>\n    <el-dialog\n      :lock-scroll=\"true\"\n      :title=\"$t('chat_joincommunity_0009')\"\n      @close=\"handCloseAddGroups\"\n      :close-on-click-modal=\"false\"\n      :append-to-body=\"true\"\n      width=\"380px\"\n      :visible=\"dialogAddGroupsVisible\"\n      :center=\"true\"\n      custom-class=\"dialog-position\"\n      class=\"add-group-wrap\"\n    >\n      <div class=\"add-group-dialog-con text-center\" style=\"cursor: auto\">\n        <el-row>\n          <el-col>\n            <div class=\"add-group-dialog-textarea\">\n              <el-input rows=\"6\" class=\"verify-info\" type=\"textarea\" v-model=\"text\"></el-input>\n            </div>\n            <div class=\"add-group-dialog-btns\">\n              <el-button @click=\"handCancelDialog\" style=\"background-color: #9297A3\" type=\"info\">\n                {{ $t('Universal_0063') }}\n              </el-button>\n              <el-button @click=\"handConfirmDialog(groupData)\" style=\"background-color: #2F54EB\" type=\"primary\">\n                {{ $t('Universal_0046') }}\n              </el-button>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { send_add_group_apply } from \"../add/server\";\nimport { contGrpSize } from \"@/utils\";\nimport { mapState,mapMutations, mapGetters } from \"vuex\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    dialogAddGroupsVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    groupData: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      text: ''\n    };\n  },\n  filters: {\n    substringName(val) {\n      return val && val.length > 10 ? val.substring(0, 10) + '...' : val;\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n    ...mapGetters({\n      userInfo: 'userInfo'\n    })\n  },\n  //监控data中的数据变化\n  watch: {\n    dialogAddGroupsVisible: {\n      handler(n) {\n        if (n === true) {\n          this.text = this.$t('book_friend_0022') + this.userInfo && this.userInfo.userName;\n        }\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    handCloseAddGroups() {\n      this.$emit('handCloseAddGroups', false);\n    },\n    async goGroup(param) {\n      let res = await send_add_group_apply([param]);\n      if (res.code == 200) {\n        this.$message.success(this.$t('chat_joincommunity_0010'));\n        this.text = '';\n      } else {\n        this.$message.error(res.msg);\n        return;\n      }\n    },\n    handGoChat(a) {\n      this.CLEAR_CHAT();\n      let current = {\n        uniqueCode: contGrpSize(a.id)\n      };\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          targetId: a.id,\n          timer: new Date().getTime(),\n          friendName: encodeURI(a.groupName),\n          uniqueCode: contGrpSize(a.id)\n        }\n      });\n      this.$emit('handConfirmGroupDialog', false);\n    },\n    handConfirmDialog(a) {\n      if(this.personalAppealInfo.createTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('book_group_0019'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.$emit('toAppeal');\n        }).catch(() => {\n        });\n      }else{\n        if (this.text.trim() === \"\") {\n          this.$message.warning(this.$t('Universal_0242'));\n          return;\n        }\n        let userid = UserInfoUtils.getCurrentUserId();\n        let param = {\n          channelCode: 1,\n          userId: userid,\n          groupId: a.id,\n          content: this.text,\n        };\n        this.goGroup(param, a);\n        this.$emit(\"handConfirmGroupDialog\", false);\n      }\n    },\n    handCancelDialog() {\n      this.text = '';\n      this.$emit('handCancelGroupDialog', false);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.add-group-wrap {\n  /deep/ .el-dialog__header {\n    padding: 20px 28px 0 !important;\n  }\n}\n\n/deep/ .dialog-position {\n  margin-top: 12vh !important;\n  margin-left: 45vw !important;\n}\n\n.add-group-dialog-title {\n  font-weight: 600;\n  font-size: 18px;\n  color: #333;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #d8d8d8;\n}\n.add-group-dialog-name {\n  color: #333;\n  font-size: 18px;\n  font-weight: 600;\n  margin: 10px 0 5px;\n}\n.add-group-dialog-code {\n  color: #999;\n  font-size: 14px;\n}\n.add-group-dialog-des {\n  text-align: left;\n  color: #999;\n  font-size: 12px;\n  margin: 10px 0 20px;\n  word-break: break-all;\n  word-wrap: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n.add-group-dialog-bot {\n  li {\n    border-right: 1px solid #2f54eb;\n    flex: 1;\n    color: #333333;\n    font-size: 14px;\n    &:last-child {\n      border-right: none;\n    }\n    .add-group-dialog-number {\n      font-weight: 600;\n      line-height: 25px;\n      img {\n        vertical-align: middle;\n      }\n    }\n    .add-group-dialog-word {\n      color: #999999;\n      font-size: 12px;\n      margin-top: 5px;\n    }\n  }\n}\n.add-group-dialog-apply {\n  font-size: 14px;\n  color: #333;\n  line-height: 20px;\n  margin-bottom: 10px;\n}\n.add-group-dialog-btns {\n  margin-top: 20px;\n  text-align: right;\n  button {\n    font-size: 13px;\n    padding: 5px 29px;\n    text-align: center;\n    margin span {\n      display: inline-block;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".add-group-wrap": {
          "/deep/ .el-dialog__header": {
            "padding": "20px 28px 0 !important"
          }
        },
        "/deep/ .dialog-position": {
          "margin-top": "12vh !important",
          "margin-left": "45vw !important"
        },
        ".add-group-dialog-title": {
          "font-weight": "600",
          "font-size": "18px",
          "color": "#333",
          "padding-bottom": "10px",
          "border-bottom": "1px solid #d8d8d8"
        },
        ".add-group-dialog-name": {
          "color": "#333",
          "font-size": "18px",
          "font-weight": "600",
          "margin": "10px 0 5px"
        },
        ".add-group-dialog-code": {
          "color": "#999",
          "font-size": "14px"
        },
        ".add-group-dialog-des": {
          "text-align": "left",
          "color": "#999",
          "font-size": "12px",
          "margin": "10px 0 20px",
          "word-break": "break-all",
          "word-wrap": "break-word",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "display": "-webkit-box",
          "-webkit-line-clamp": "2",
          "-webkit-box-orient": "vertical"
        },
        ".add-group-dialog-bot": {
          "li": {
            "border-right": "1px solid #2f54eb",
            "flex": "1",
            "color": "#333333",
            "font-size": "14px",
            "&:last-child": {
              "border-right": "none"
            },
            ".add-group-dialog-number": {
              "font-weight": "600",
              "line-height": "25px",
              "img": {
                "vertical-align": "middle"
              }
            },
            ".add-group-dialog-word": {
              "color": "#999999",
              "font-size": "12px",
              "margin-top": "5px"
            }
          }
        },
        ".add-group-dialog-apply": {
          "font-size": "14px",
          "color": "#333",
          "line-height": "20px",
          "margin-bottom": "10px"
        },
        ".add-group-dialog-btns": {
          "margin-top": "20px",
          "text-align": "right",
          "button": {
            "font-size": "13px",
            "padding": "5px 29px",
            "text-align": "center",
            "margin span": {
              "display": "inline-block"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/appeals/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>",
      "1": "<style lang=\"less\">"
    },
    "importInfo": {},
    "keepContent": "<!-- 添加申诉 -->\n<template>\n  <el-dialog\n    :title=\"$t('appeal_0042')\"\n    append-to-body\n    :modal-append-to-body=\"false\"\n    :modal=\"false\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    @close=\"closeDia\"\n    :visible=\"AppealsVisible\"\n    width=\"505px\"\n    class=\"appeals-dialog\"\n    center\n  >\n    <div v-if=\"this.impeachFromtype === 'single'\" class=\"personal-info\">\n      <MemberIcon\n          class=\"personal-info-avatar\"\n          :image=\"userInfo.userHeadImg\"\n          iconType=\"medium\"\n          :userRank=\"userInfo.userRank\"\n          :vipType=\"userInfo.vipType\"\n      />\n      <div class=\"flex flex-direction personal-info-detail\">\n        <div class=\"flex personal-info-name\">\n          <div class=\"name-wrap\" :title=\"userInfo.nickName\">\n            <span>{{ userInfo.nickName }}</span>\n          </div>\n          <LevelIcon\n            :inviteCode=\"userInfo.inviteCode\"\n            :userRank=\"userInfo.userRank\"\n            iconType=\"medium\"\n            :vipType=\"userInfo.vipType\"\n            :inviteCodeType=\"userInfo.inviteCodeType\"\n          />\n        </div>\n        <div>\n          <LuckIdIcon\n            :inviteCode=\"userInfo.inviteCode\"\n            :userRank=\"userInfo.userRank\"\n            iconType=\"medium\"\n            :vipType=\"userInfo.vipType\"\n            :inviteCodeType=\"userInfo.inviteCodeType\"\n            :listFlag=\"false\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-else class=\"group-info\" >\n      <!-- eslint-disable-next-line -->\n      <img v-if=\"groupInfo.groupType === 1\" :src=\"groupInfo.groupAvatar\" class=\"group-avatar\" alt=\"\" @error=\"replaceImg\" />\n      <!-- eslint-disable-next-line -->\n      <DiscussionIcon v-if=\"groupInfo.groupType === 0\" :name=\"groupInfo.groupName\" class=\"group-avatar\" iconType=\"large\" />\n      <div class=\"group-detail\">\n        <span class=\"group-name\" :title=\"groupInfo.groupName\">{{\n          groupInfo.groupName\n        }}</span>\n        <span class=\"group-code\">ID: {{ groupInfo.groupCode }}</span>\n      </div>\n    </div>\n    <div class=\"impeach-info\">\n      <!-- eslint-disable-next-line -->\n      <div v-if=\"this.impeachFromtype === 'single'\" class=\"impeach-info-detail\">{{ $t('appeal_0020') }}{{ $t('appeal_0028') }}</div>\n      <div v-else class=\"impeach-info-detail\">\n        <!-- eslint-disable-next-line -->\n        {{ $t('appeal_0020') }} {{`${groupInfo.groupType === 0? $t('chat_search_0007'):$t('chat_search_0005')}${appealInfo.limitType === 5?$t('appeal_0043'):$t('appeal_0044')}`}}</div>\n      <div class=\"impeach-info-detail\">{{ $t('appeal_0030') }} {{ $t('appeal_0031') }}</div>\n      <!-- eslint-disable-next-line -->\n      <div v-if=\"this.impeachFromtype === 'single'\" class=\"impeach-info-detail\">{{ $t('appeal_0029') }} {{`${this.personalAppealInfo.createTime} -- ${this.personalAppealInfo.endTime}`}}</div>\n      <div v-else class=\"impeach-info-detail\">{{ $t('appeal_0029') }} {{`${appealInfo.createTime} -- ${appealInfo.endTime}`}}</div>\n      <div class=\"advice-info\">{{ $t('appeal_0033') }}\n        <span class=\"advice-info-detail\" @click=\"PrivacyAgreement()\">\n          {{ $t('appeal_0034') }}\n        </span>\n        {{ $t('appeal_0035') }}\n      </div>\n    </div>\n    <div class=\"btn flex justify-center\">\n      <el-button\n        type=\"primary\"\n        @click=\"toImpeach()\"\n      >\n        {{ $t('appeal_0036') }}\n      </el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import store from '@/store';\n// import { addImpeachApeal } from \"./server\";\nimport { getSelfUserId } from '@/utils/const';\nimport fileOperational from \"@/services/fileOperational\";\nimport { mapState } from \"vuex\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils\";\nimport { remote } from \"electron\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n  },\n  props: {\n    AppealsVisible: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    authStatus: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    groupId: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    impeachFromtype: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    groupInfo: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n    appealInfo: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n  data() {\n    //这里存放数据\n    return {\n      menuList: [],\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n      userInfo: (state) => {\n        return state.common.userInfo;\n      },\n    }),\n  },\n\n  //监控data中的数据变化\n  watch: {\n    \n  },\n  //方法集合\n  methods: {\n    init() {\n      // this.getUserInfo();\n      console.log(this.userInfo,'userInfo');\n      console.log(this.groupInfo,'groupinfo');\n    },\n    PrivacyAgreement() {\n      console.log(remote.BrowserWindow, \"BrowserWindow\");\n      let win = new remote.BrowserWindow({\n        icon: `${__static}/logo.png`, // eslint-disable-line\n      });\n      // en-us zh-cn\n      win.loadURL(`https://m.didimessage.com/#/staticpage/userpact?colorMode=day&language=${this.$i18n.locale}`);\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    cancelDialogHand() {\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    confirmDialogHand() {\n      \n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    closeDia() {\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'group')\n    },\n    toImpeach(){\n      this.$emit(\"toImpeach\");\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 添加申诉 -->\n<template>\n  <el-dialog\n    :title=\"$t('appeal_0042')\"\n    append-to-body\n    :modal-append-to-body=\"false\"\n    :modal=\"false\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    @close=\"closeDia\"\n    :visible=\"AppealsVisible\"\n    width=\"505px\"\n    class=\"appeals-dialog\"\n    center\n  >\n    <div v-if=\"this.impeachFromtype === 'single'\" class=\"personal-info\">\n      <MemberIcon\n          class=\"personal-info-avatar\"\n          :image=\"userInfo.userHeadImg\"\n          iconType=\"medium\"\n          :userRank=\"userInfo.userRank\"\n          :vipType=\"userInfo.vipType\"\n      />\n      <div class=\"flex flex-direction personal-info-detail\">\n        <div class=\"flex personal-info-name\">\n          <div class=\"name-wrap\" :title=\"userInfo.nickName\">\n            <span>{{ userInfo.nickName }}</span>\n          </div>\n          <LevelIcon\n            :inviteCode=\"userInfo.inviteCode\"\n            :userRank=\"userInfo.userRank\"\n            iconType=\"medium\"\n            :vipType=\"userInfo.vipType\"\n            :inviteCodeType=\"userInfo.inviteCodeType\"\n          />\n        </div>\n        <div>\n          <LuckIdIcon\n            :inviteCode=\"userInfo.inviteCode\"\n            :userRank=\"userInfo.userRank\"\n            iconType=\"medium\"\n            :vipType=\"userInfo.vipType\"\n            :inviteCodeType=\"userInfo.inviteCodeType\"\n            :listFlag=\"false\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-else class=\"group-info\" >\n      <!-- eslint-disable-next-line -->\n      <img v-if=\"groupInfo.groupType === 1\" :src=\"groupInfo.groupAvatar\" class=\"group-avatar\" alt=\"\" @error=\"replaceImg\" />\n      <!-- eslint-disable-next-line -->\n      <DiscussionIcon v-if=\"groupInfo.groupType === 0\" :name=\"groupInfo.groupName\" class=\"group-avatar\" iconType=\"large\" />\n      <div class=\"group-detail\">\n        <span class=\"group-name\" :title=\"groupInfo.groupName\">{{\n          groupInfo.groupName\n        }}</span>\n        <span class=\"group-code\">ID: {{ groupInfo.groupCode }}</span>\n      </div>\n    </div>\n    <div class=\"impeach-info\">\n      <!-- eslint-disable-next-line -->\n      <div v-if=\"this.impeachFromtype === 'single'\" class=\"impeach-info-detail\">{{ $t('appeal_0020') }}{{ $t('appeal_0028') }}</div>\n      <div v-else class=\"impeach-info-detail\">\n        <!-- eslint-disable-next-line -->\n        {{ $t('appeal_0020') }} {{`${groupInfo.groupType === 0? $t('chat_search_0007'):$t('chat_search_0005')}${appealInfo.limitType === 5?$t('appeal_0043'):$t('appeal_0044')}`}}</div>\n      <div class=\"impeach-info-detail\">{{ $t('appeal_0030') }} {{ $t('appeal_0031') }}</div>\n      <!-- eslint-disable-next-line -->\n      <div v-if=\"this.impeachFromtype === 'single'\" class=\"impeach-info-detail\">{{ $t('appeal_0029') }} {{`${this.personalAppealInfo.createTime} -- ${this.personalAppealInfo.endTime}`}}</div>\n      <div v-else class=\"impeach-info-detail\">{{ $t('appeal_0029') }} {{`${appealInfo.createTime} -- ${appealInfo.endTime}`}}</div>\n      <div class=\"advice-info\">{{ $t('appeal_0033') }}\n        <span class=\"advice-info-detail\" @click=\"PrivacyAgreement()\">\n          {{ $t('appeal_0034') }}\n        </span>\n        {{ $t('appeal_0035') }}\n      </div>\n    </div>\n    <div class=\"btn flex justify-center\">\n      <el-button\n        type=\"primary\"\n        @click=\"toImpeach()\"\n      >\n        {{ $t('appeal_0036') }}\n      </el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import store from '@/store';\n// import { addImpeachApeal } from \"./server\";\nimport { getSelfUserId } from '@/utils/const';\nimport fileOperational from \"@/services/fileOperational\";\nimport { mapState } from \"vuex\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils\";\nimport { remote } from \"electron\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n  },\n  props: {\n    AppealsVisible: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    authStatus: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    groupId: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    impeachFromtype: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    groupInfo: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n    appealInfo: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n  data() {\n    //这里存放数据\n    return {\n      menuList: [],\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n      userInfo: (state) => {\n        return state.common.userInfo;\n      },\n    }),\n  },\n\n  //监控data中的数据变化\n  watch: {\n    \n  },\n  //方法集合\n  methods: {\n    init() {\n      // this.getUserInfo();\n      console.log(this.userInfo,'userInfo');\n      console.log(this.groupInfo,'groupinfo');\n    },\n    PrivacyAgreement() {\n      console.log(remote.BrowserWindow, \"BrowserWindow\");\n      let win = new remote.BrowserWindow({\n        icon: `${__static}/logo.png`, // eslint-disable-line\n      });\n      // en-us zh-cn\n      win.loadURL(`https://m.didimessage.com/#/staticpage/userpact?colorMode=day&language=${this.$i18n.locale}`);\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    cancelDialogHand() {\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    confirmDialogHand() {\n      \n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    closeDia() {\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'group')\n    },\n    toImpeach(){\n      this.$emit(\"toImpeach\");\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n.appeals-dialog {\n  .personal-info {\n    display: flex;\n    align-items: center;\n    height: 66px;\n    margin-left: 14px;\n    .personal-info-avatar {\n      margin-right: 6px;\n    }\n    .personal-info-detail {\n      margin-left: 6px;\n      .personal-info-name {\n        align-items: center;\n        font-size: 14px;\n        color: #333333;\n        font-weight: bold;\n        max-width: 190px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        margin-bottom: 10px;\n      }\n    }\n  }\n  .group-info {\n    display: flex;\n    align-items: center;\n    height: 66px;\n    margin-left: 14px;\n    .group-avatar {\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      margin-right: 6px;\n    }\n    .group-detail{\n      display: flex;\n      flex-direction: column;\n      .group-name {\n        font-size: 14px;\n        color: #333333;\n        font-weight: bold;\n        max-width: 190px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        margin-bottom: 5px;\n      }\n      .group-code {\n        font-size: 12px;\n        color: #999999;\n      }\n    }\n  }\n  .impeach-info {\n    width: 370px;\n    margin: 10px auto;\n    .impeach-info-detail {\n      height: 37px;\n      opacity: 1;\n      font-size: 12px;\n      font-weight: 800;\n      text-align: left;\n      color: #333333;\n      line-height: 37px;\n      border-bottom: 1px solid rgba(0,0,0,0.10);\n    }\n    .advice-info {\n      height: 14px;\n      font-size: 10px;\n      text-align: left;\n      color: #333333;\n      line-height: 14px;\n      margin-top: 10px;\n      .advice-info-detail {\n        color: blue;\n        cursor: pointer;\n      }\n    }\n  }\n  .btn {\n    height: 28px;\n    margin-top: 72px;\n  }\n}\n\n\n</style>\n<style lang=\"less\">\n.appeals-dialog {\n  /deep/.el-button--primary {\n    padding: 5px 49px;\n    span {\n      font-size: 13px ;\n      height: 18px;\n      line-height: 18px;\n    }\n  }\n}\n</style>",
    "cssJson": [
      {
        ".appeals-dialog": {
          ".personal-info": {
            "display": "flex",
            "align-items": "center",
            "height": "66px",
            "margin-left": "14px",
            ".personal-info-avatar": {
              "margin-right": "6px"
            },
            ".personal-info-detail": {
              "margin-left": "6px",
              ".personal-info-name": {
                "align-items": "center",
                "font-size": "14px",
                "color": "#333333",
                "font-weight": "bold",
                "max-width": "190px",
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "white-space": "nowrap",
                "margin-bottom": "10px"
              }
            }
          },
          ".group-info": {
            "display": "flex",
            "align-items": "center",
            "height": "66px",
            "margin-left": "14px",
            ".group-avatar": {
              "width": "48px",
              "height": "48px",
              "border-radius": "50%",
              "margin-right": "6px"
            },
            ".group-detail": {
              "display": "flex",
              "flex-direction": "column",
              ".group-name": {
                "font-size": "14px",
                "color": "#333333",
                "font-weight": "bold",
                "max-width": "190px",
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "white-space": "nowrap",
                "margin-bottom": "5px"
              },
              ".group-code": {
                "font-size": "12px",
                "color": "#999999"
              }
            }
          },
          ".impeach-info": {
            "width": "370px",
            "margin": "10px auto",
            ".impeach-info-detail": {
              "height": "37px",
              "opacity": "1",
              "font-size": "12px",
              "font-weight": "800",
              "text-align": "left",
              "color": "#333333",
              "line-height": "37px",
              "border-bottom": "1px solid rgba(0,0,0,0.10)"
            },
            ".advice-info": {
              "height": "14px",
              "font-size": "10px",
              "text-align": "left",
              "color": "#333333",
              "line-height": "14px",
              "margin-top": "10px",
              ".advice-info-detail": {
                "color": "blue",
                "cursor": "pointer"
              }
            }
          },
          ".btn": {
            "height": "28px",
            "margin-top": "72px"
          }
        }
      },
      {
        ".appeals-dialog": {
          "/deep/.el-button--primary": {
            "padding": "5px 49px",
            "span": {
              "font-size": "13px",
              "height": "18px",
              "line-height": "18px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/impeach/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>",
      "1": "<style lang=\"less\">"
    },
    "importInfo": {},
    "keepContent": "<!-- 添加申诉 -->\n<template>\n  <el-dialog\n    :title=\"$t('appeal_0045')\"\n    append-to-body\n    :modal-append-to-body=\"false\"\n    :modal=\"false\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    @close=\"closeDia\"\n    :visible=\"ImpeachVisible\"\n    width=\"570px\"\n    class=\"impeach-dialog\"\n    center\n  >\n    <div v-if=\"this.impeachFromtype === 'single'\" class=\"personal-info\">\n      <MemberIcon\n          class=\"personal-info-avatar\"\n          :image=\"userInfo.userHeadImg\"\n          iconType=\"medium\"\n          :userRank=\"userInfo.userRank\"\n          :vipType=\"userInfo.vipType\"\n      />\n      <div class=\"flex flex-direction personal-info-detail\">\n        <div class=\"flex personal-info-name\">\n          <div class=\"name-wrap\" :title=\"userInfo.nickName\">\n            <span>{{ userInfo.nickName }}</span>\n          </div>\n          <LevelIcon\n            :inviteCode=\"userInfo.inviteCode\"\n            :userRank=\"userInfo.userRank\"\n            iconType=\"medium\"\n            :vipType=\"userInfo.vipType\"\n            :inviteCodeType=\"userInfo.inviteCodeType\"\n          />\n        </div>\n        <div>\n          <LuckIdIcon\n            :inviteCode=\"userInfo.inviteCode\"\n            :userRank=\"userInfo.userRank\"\n            iconType=\"medium\"\n            :vipType=\"userInfo.vipType\"\n            :inviteCodeType=\"userInfo.inviteCodeType\"\n            :listFlag=\"false\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-else class=\"group-info\" >\n      <!-- eslint-disable-next-line -->\n      <img v-if=\"groupInfo.groupType === 1\" :src=\"groupInfo.groupAvatar\" class=\"group-avatar\" alt=\"\" @error=\"replaceImg\" />\n      <!-- eslint-disable-next-line -->\n      <DiscussionIcon v-if=\"groupInfo.groupType === 0\" :name=\"groupInfo.groupName\" class=\"group-avatar\" iconType=\"large\" />\n      <div class=\"group-detail\">\n        <span class=\"group-name\" :title=\"groupInfo.groupName\">{{\n          groupInfo.groupName\n        }}</span>\n        <span class=\"group-code\">ID: {{ groupInfo.groupCode }}</span>\n      </div>\n    </div>\n    <div class=\"tip-details\">\n      <el-form\n        class=\"tipoffs-con\"\n        :model=\"ruleForm\"\n        :rules=\"rules\"\n        ref=\"ruleForm\"\n      >\n        <div class=\"col\">\n          <div class=\"text\"><span>*</span> {{ $t('appeal_0038') }}</div>\n          <el-form-item prop=\"content\">\n            <el-input\n              type=\"textarea\"\n              v-model.trim=\"ruleForm.content\"\n              :placeholder=\"$t('appeal_0040')\"\n              :autosize=\"{ minRows: 6, maxRows: 20 }\"\n              maxlength=\"200\"\n              :rules=\"[\n                { required: true, message: $t('appeal_0041') },\n                {\n                  min: 5,\n                  max: 200,\n                  message: $t('appeal_0041'),\n                  trigger: 'blur',\n                },\n              ]\"\n              show-word-limit\n            ></el-input>\n          </el-form-item>\n          <UpoadImg\n            class=\"image\"\n            ref=\"UpoadImg\"\n            :limit=\"limit\"\n            :multiple=\"multiple\"\n            :imgList=\"imgList\"\n          />\n        </div>\n      </el-form>\n      <div class=\"btn flex justify-around\">\n        <el-button\n          type=\"primary\"\n          @click=\"onSubmit('ruleForm')\"\n          v-loading.fullscreen.lock=\"fullscreenLoading\"\n        >\n          {{ this.$t('Universal_0049') }}\n        </el-button>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import store from '@/store';\n// import { addImpeachApeal } from \"./server\";\nimport { getSelfUserId } from '@/utils/const';\nimport fileOperational from \"@/services/fileOperational\";\nimport { addImpeachApeal } from \"./server\";\nimport { mapState } from \"vuex\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils\";\nimport UpoadImg from \"../tipoffs/UpoadImg\";\n// import FileUpload from \"@/utils/fileUpload\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    UpoadImg,\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n  },\n  props: {\n    ImpeachVisible: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    authStatus: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    groupId: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    impeachFromtype: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    groupInfo: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n    appealInfo: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n  data() {\n    //这里存放数据\n    return {\n      menuList: [],\n      rules: {\n        content: [\n          {\n            required: true,\n            message: this.$t('appeal_0041'),\n            trigger: \"blur\",\n          },\n          {\n            min: 5,\n            max: 200,\n            message: this.$t('appeal_0041'),\n            trigger: \"blur\",\n          },\n        ],\n      },\n      ruleForm: {\n        content: \"\"\n      },\n      limit: 5,\n      multiple: true,\n      imgList: [],\n      fullscreenLoading: false,\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n      userInfo: (state) => {\n        return state.common.userInfo;\n      },\n    }),\n  },\n\n  //监控data中的数据变化\n  watch: {\n    \n  },\n  //方法集合\n  methods: {\n    init() {\n      \n    },\n    onSubmit(formName) {\n      this.$refs[formName].validate(async (valid) => {\n        if (valid) {\n          this.fullscreenLoading = true;\n          this.ruleForm.files = [...this.$refs.UpoadImg.imgList];\n          const imgUrls = await this.uploadImageToSdk(this.ruleForm.files)\n          this.totipoffs(imgUrls);\n        } else {\n          return false;\n        }\n      });\n    },\n    async uploadImageToSdk(pararm){\n      let imgUrls = []\n      for(let imgData of pararm){\n        // eslint-disable-next-line\n        const filePath = await fileOperational.saveImageToFile( imgData.file.src, UserInfoUtils.getCurrentUserId() + '.png');\n        const { FileUpload } = require('@/utils/fileUpload');\n        const fileUpload = new FileUpload(filePath, UserInfoUtils.getCurrentUserId(),-1); \n        const upload = await fileUpload.headImageUpload();//通过sdk上传\n        imgUrls.push(upload[0].url)\n      }\n      return imgUrls;\n    },\n    async totipoffs(imgUrls) {\n      const params = {\n        content:this.ruleForm.content,\n        appealType:this.impeachFromtype === 'single'?this.personalAppealInfo.limitType:this.appealInfo.limitType,\n        othersId:this.impeachFromtype === 'single'?this.userInfo.id:this.groupInfo.groupId,\n        imgArray:imgUrls,\n        userId:UserInfoUtils.getCurrentUserId()\n      }\n      let res = await addImpeachApeal({}, params);\n      if (res.code == 200) {\n        this.fullscreenLoading = false;\n        this.$message.success(this.$t('report_0012'));\n        this.closeDia();\n      } else {\n        this.fullscreenLoading = false;\n        this.$message.error(res.msg);\n        // console.log(res.msg);\n      }\n    },\n    cancelDialogHand() {\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    confirmDialogHand() {\n      \n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    closeDia() {\n      this.imgList = [];\n      this.$refs.ruleForm.resetFields();\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'group')\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 添加申诉 -->\n<template>\n  <el-dialog\n    :title=\"$t('appeal_0045')\"\n    append-to-body\n    :modal-append-to-body=\"false\"\n    :modal=\"false\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    @close=\"closeDia\"\n    :visible=\"ImpeachVisible\"\n    width=\"570px\"\n    class=\"impeach-dialog\"\n    center\n  >\n    <div v-if=\"this.impeachFromtype === 'single'\" class=\"personal-info\">\n      <MemberIcon\n          class=\"personal-info-avatar\"\n          :image=\"userInfo.userHeadImg\"\n          iconType=\"medium\"\n          :userRank=\"userInfo.userRank\"\n          :vipType=\"userInfo.vipType\"\n      />\n      <div class=\"flex flex-direction personal-info-detail\">\n        <div class=\"flex personal-info-name\">\n          <div class=\"name-wrap\" :title=\"userInfo.nickName\">\n            <span>{{ userInfo.nickName }}</span>\n          </div>\n          <LevelIcon\n            :inviteCode=\"userInfo.inviteCode\"\n            :userRank=\"userInfo.userRank\"\n            iconType=\"medium\"\n            :vipType=\"userInfo.vipType\"\n            :inviteCodeType=\"userInfo.inviteCodeType\"\n          />\n        </div>\n        <div>\n          <LuckIdIcon\n            :inviteCode=\"userInfo.inviteCode\"\n            :userRank=\"userInfo.userRank\"\n            iconType=\"medium\"\n            :vipType=\"userInfo.vipType\"\n            :inviteCodeType=\"userInfo.inviteCodeType\"\n            :listFlag=\"false\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-else class=\"group-info\" >\n      <!-- eslint-disable-next-line -->\n      <img v-if=\"groupInfo.groupType === 1\" :src=\"groupInfo.groupAvatar\" class=\"group-avatar\" alt=\"\" @error=\"replaceImg\" />\n      <!-- eslint-disable-next-line -->\n      <DiscussionIcon v-if=\"groupInfo.groupType === 0\" :name=\"groupInfo.groupName\" class=\"group-avatar\" iconType=\"large\" />\n      <div class=\"group-detail\">\n        <span class=\"group-name\" :title=\"groupInfo.groupName\">{{\n          groupInfo.groupName\n        }}</span>\n        <span class=\"group-code\">ID: {{ groupInfo.groupCode }}</span>\n      </div>\n    </div>\n    <div class=\"tip-details\">\n      <el-form\n        class=\"tipoffs-con\"\n        :model=\"ruleForm\"\n        :rules=\"rules\"\n        ref=\"ruleForm\"\n      >\n        <div class=\"col\">\n          <div class=\"text\"><span>*</span> {{ $t('appeal_0038') }}</div>\n          <el-form-item prop=\"content\">\n            <el-input\n              type=\"textarea\"\n              v-model.trim=\"ruleForm.content\"\n              :placeholder=\"$t('appeal_0040')\"\n              :autosize=\"{ minRows: 6, maxRows: 20 }\"\n              maxlength=\"200\"\n              :rules=\"[\n                { required: true, message: $t('appeal_0041') },\n                {\n                  min: 5,\n                  max: 200,\n                  message: $t('appeal_0041'),\n                  trigger: 'blur',\n                },\n              ]\"\n              show-word-limit\n            ></el-input>\n          </el-form-item>\n          <UpoadImg\n            class=\"image\"\n            ref=\"UpoadImg\"\n            :limit=\"limit\"\n            :multiple=\"multiple\"\n            :imgList=\"imgList\"\n          />\n        </div>\n      </el-form>\n      <div class=\"btn flex justify-around\">\n        <el-button\n          type=\"primary\"\n          @click=\"onSubmit('ruleForm')\"\n          v-loading.fullscreen.lock=\"fullscreenLoading\"\n        >\n          {{ this.$t('Universal_0049') }}\n        </el-button>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n// import store from '@/store';\n// import { addImpeachApeal } from \"./server\";\nimport { getSelfUserId } from '@/utils/const';\nimport fileOperational from \"@/services/fileOperational\";\nimport { addImpeachApeal } from \"./server\";\nimport { mapState } from \"vuex\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils\";\nimport UpoadImg from \"../tipoffs/UpoadImg\";\n// import FileUpload from \"@/utils/fileUpload\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    UpoadImg,\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n  },\n  props: {\n    ImpeachVisible: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    authStatus: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    groupId: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    impeachFromtype: {\n      type: String,\n      default: () => {\n        return '';\n      },\n    },\n    groupInfo: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n    appealInfo: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n  data() {\n    //这里存放数据\n    return {\n      menuList: [],\n      rules: {\n        content: [\n          {\n            required: true,\n            message: this.$t('appeal_0041'),\n            trigger: \"blur\",\n          },\n          {\n            min: 5,\n            max: 200,\n            message: this.$t('appeal_0041'),\n            trigger: \"blur\",\n          },\n        ],\n      },\n      ruleForm: {\n        content: \"\"\n      },\n      limit: 5,\n      multiple: true,\n      imgList: [],\n      fullscreenLoading: false,\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n      userInfo: (state) => {\n        return state.common.userInfo;\n      },\n    }),\n  },\n\n  //监控data中的数据变化\n  watch: {\n    \n  },\n  //方法集合\n  methods: {\n    init() {\n      \n    },\n    onSubmit(formName) {\n      this.$refs[formName].validate(async (valid) => {\n        if (valid) {\n          this.fullscreenLoading = true;\n          this.ruleForm.files = [...this.$refs.UpoadImg.imgList];\n          const imgUrls = await this.uploadImageToSdk(this.ruleForm.files)\n          this.totipoffs(imgUrls);\n        } else {\n          return false;\n        }\n      });\n    },\n    async uploadImageToSdk(pararm){\n      let imgUrls = []\n      for(let imgData of pararm){\n        // eslint-disable-next-line\n        const filePath = await fileOperational.saveImageToFile( imgData.file.src, UserInfoUtils.getCurrentUserId() + '.png');\n        const { FileUpload } = require('@/utils/fileUpload');\n        const fileUpload = new FileUpload(filePath, UserInfoUtils.getCurrentUserId(),-1); \n        const upload = await fileUpload.headImageUpload();//通过sdk上传\n        imgUrls.push(upload[0].url)\n      }\n      return imgUrls;\n    },\n    async totipoffs(imgUrls) {\n      const params = {\n        content:this.ruleForm.content,\n        appealType:this.impeachFromtype === 'single'?this.personalAppealInfo.limitType:this.appealInfo.limitType,\n        othersId:this.impeachFromtype === 'single'?this.userInfo.id:this.groupInfo.groupId,\n        imgArray:imgUrls,\n        userId:UserInfoUtils.getCurrentUserId()\n      }\n      let res = await addImpeachApeal({}, params);\n      if (res.code == 200) {\n        this.fullscreenLoading = false;\n        this.$message.success(this.$t('report_0012'));\n        this.closeDia();\n      } else {\n        this.fullscreenLoading = false;\n        this.$message.error(res.msg);\n        // console.log(res.msg);\n      }\n    },\n    cancelDialogHand() {\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    confirmDialogHand() {\n      \n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    closeDia() {\n      this.imgList = [];\n      this.$refs.ruleForm.resetFields();\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'group')\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n.impeach-dialog {\n  overflow-y: scroll;\n  .personal-info {\n    display: flex;\n    align-items: center;\n    height: 66px;\n    .personal-info-avatar {\n      margin-right: 6px;\n    }\n    .personal-info-detail {\n      margin-left: 6px;\n      .personal-info-name {\n        align-items: center;\n        font-size: 14px;\n        color: #333333;\n        font-weight: bold;\n        max-width: 190px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        margin-bottom: 10px;\n      }\n    }\n  }\n  .group-info {\n    display: flex;\n    align-items: center;\n    height: 66px;\n    margin-left: 14px;\n    .group-avatar {\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      margin-right: 6px;\n    }\n    .group-detail{\n      display: flex;\n      flex-direction: column;\n      .group-name {\n        font-size: 14px;\n        color: #333333;\n        font-weight: bold;\n        max-width: 190px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        margin-bottom: 5px;\n      }\n      .group-code {\n        font-size: 12px;\n        color: #999999;\n      }\n    }\n  }\n  .tip-details {\n    overflow: scroll;\n    // height: calc(100vh - 100px);\n  }\n  .tipoffs-con {\n    width: 100%;\n    background: #fff;\n    padding: 10px 0;\n    box-sizing: border-box;\n    .col {\n      font-size: 14px;\n      .text {\n        height: 17px;\n        line-height: 17px;\n        margin-bottom: 5px;\n        span {\n          // content: \"*\";\n          color: #f56c6c;\n          margin-right: 4px;\n        }\n      }\n      .image {\n        margin-top: 20px;\n      }\n    }\n    .colone {\n      border-bottom: 1px solid #dddddd;\n      min-height: 60px;\n    }\n  }\n  .btn {\n    height: 28px;\n    margin-top: 20px;\n  }\n}\n\n\n</style>\n<style lang=\"less\">\n.impeach-dialog {\n  /deep/.el-button--primary {\n    width: 202px;\n    padding: 5px 49px;\n    span {\n      font-size: 13px ;\n      height: 18px;\n      line-height: 18px;\n    }\n  }\n}\n</style>",
    "cssJson": [
      {
        ".impeach-dialog": {
          "overflow-y": "scroll",
          ".personal-info": {
            "display": "flex",
            "align-items": "center",
            "height": "66px",
            ".personal-info-avatar": {
              "margin-right": "6px"
            },
            ".personal-info-detail": {
              "margin-left": "6px",
              ".personal-info-name": {
                "align-items": "center",
                "font-size": "14px",
                "color": "#333333",
                "font-weight": "bold",
                "max-width": "190px",
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "white-space": "nowrap",
                "margin-bottom": "10px"
              }
            }
          },
          ".group-info": {
            "display": "flex",
            "align-items": "center",
            "height": "66px",
            "margin-left": "14px",
            ".group-avatar": {
              "width": "48px",
              "height": "48px",
              "border-radius": "50%",
              "margin-right": "6px"
            },
            ".group-detail": {
              "display": "flex",
              "flex-direction": "column",
              ".group-name": {
                "font-size": "14px",
                "color": "#333333",
                "font-weight": "bold",
                "max-width": "190px",
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "white-space": "nowrap",
                "margin-bottom": "5px"
              },
              ".group-code": {
                "font-size": "12px",
                "color": "#999999"
              }
            }
          },
          ".tip-details": {
            "overflow": "scroll"
          },
          ".tipoffs-con": {
            "width": "100%",
            "background": "#fff",
            "padding": "10px 0",
            "box-sizing": "border-box",
            ".col": {
              "font-size": "14px",
              ".text": {
                "height": "17px",
                "line-height": "17px",
                "margin-bottom": "5px",
                "span": {
                  "color": "#f56c6c",
                  "margin-right": "4px"
                }
              },
              ".image": {
                "margin-top": "20px"
              }
            },
            ".colone": {
              "border-bottom": "1px solid #dddddd",
              "min-height": "60px"
            }
          },
          ".btn": {
            "height": "28px",
            "margin-top": "20px"
          }
        }
      },
      {
        ".impeach-dialog": {
          "/deep/.el-button--primary": {
            "width": "202px",
            "padding": "5px 49px",
            "span": {
              "font-size": "13px",
              "height": "18px",
              "line-height": "18px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/setMenu/about.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 个人设置 -->\n<template>\n  <div class=\"setting-wrap\">\n    <div class=\"pic\">\n      <div class=\"pic-logo-wrap\">\n        <img class=\"pic-logo\" src=\"../../../assets/images/logo_512.png\" alt />\n        <img class=\"pic-new\" src=\"../../../assets/images/new.png\" alt=\"\" v-if=\"centerDialogVisible\">\n      </div>\n\n      <div class=\"ver-info\">{{ $t('personal_0024') }}{{ currVersion }}</div>\n      <div class=\"xy\" @click=\"PrivacyAgreement()\">{{ $t('login_register_0018') }}</div>\n      <div v-show=\"centerDialogVisible == false\" class=\"is-latest-version\">\n        {{ $t('personal_0030') }}\n      </div>\n      <el-button class=\"submit-btn\" :disabled=\"centerDialogVisible == false\" v-if=\"!downloadDialogVisible\" @click=\"updateApp\"\n        >{{ $t('personal_0025') }}</el-button>\n      <!-- <div slot=\"footer\" v-else class=\"progress-wrapper\">\n        <el-progress :percentage=\"downloadPercent\" :show-text=\"false\"></el-progress>\n        <div class=\"progress-text\">{{ $t('personal_0026') }}{{ downloadPercent }}%</div>\n      </div> -->\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport {mapState} from \"vuex\";\nimport { remote } from 'electron';\nconst appVersionCode = require('../../../../package.json').version_code;\nimport store from '@/store';\nimport { NOTIFY_UPDATE_VERSION } from '@/store/types';\nimport {check_update_by_server} from \"@/server\";\nimport bus from '@/utils/eventbus';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      currVersion: '',\n      version: '',\n      downloadPercent: 0,\n      centerDialogVisible: false,\n      downloadDialogVisible: false,\n      latestVersion: ''\n    };\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    /*latestVersion: {\n      type: String,\n      default: ''\n    }*/\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      versionUpdateInfo: obj => {\n        return obj.state.versionUpdateInfo\n      }\n    })\n  },\n  //监控data中的数据变化\n  watch: {\n    obj: {\n      immediate: true,\n      deep: true,\n      handler: function (v) {\n        if (v.updateInfo && v.obj) {\n          this.updateInfo = v.updateInfo.data;\n          this.version = v.obj.info.version;\n          this.centerDialogVisible = true;\n          this.latestVersion = v.updateInfo.versionCode;\n        } else {\n          this.centerDialogVisible = false;\n        }\n      }\n    },\n    versionUpdateInfo: {\n      immediate: true,\n      deep: true,\n      handler: async function (v) {\n        if (!v.versionSign) {\n          this.$set(this, 'centerDialogVisible', false);\n        } else {\n          this.updateInfo = v.updateInfo;\n          this.$set(this, 'centerDialogVisible', true);\n        }\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    PrivacyAgreement() {\n      console.log(remote.BrowserWindow, 'BrowserWindow');\n      let win = new remote.BrowserWindow({\n        icon: `${__static}/logo.png` // eslint-disable-line\n      });\n      // en-us zh-cn\n      win.loadURL(`https://m.didimessage.com/#/staticpage/userpact?colorMode=day&language=${this.$i18n.locale}`);\n    },\n    async checkForUpdate() {\n      const updateInfo = await check_update_by_server({\n        currentVersion: appVersionCode\n      });\n      if (updateInfo.data) {\n        this.updateInfo = updateInfo.data;\n        this.centerDialogVisible = true;\n      } else {\n        this.centerDialogVisible = false;\n        await store.dispatch(NOTIFY_UPDATE_VERSION, false);\n      }\n    },\n    getVersion() {\n      //获取当前版本\n      this.ipcRenderer.on('app_version', (event, arg) => {\n        this.ipcRenderer.removeAllListeners('app_version');\n        this.currVersion = arg.version;\n      });\n      this.ipcRenderer.send('app_version');\n    },\n    async updateApp() {\n      // this.downloadUpdate();\n      const updateInfo = await check_update_by_server({\n        currentVersion: appVersionCode\n      });\n      if (updateInfo.data) {\n        await store.dispatch(NOTIFY_UPDATE_VERSION, {versionSign: Math.random(), updateInfo: updateInfo.data});\n      }\n    },\n    downloadUpdate() {\n      //统一处理下载，如果已经开始下载，则不重新下载，只更新UI\n      if (this.downloadPercent == 0) {\n        this.ipcRenderer.send('downloadUpdate');\n      }\n      this.tips = this.$t('personal_0074');\n      this.downloadDialogVisible = true;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    if (process.env.IS_ELECTRON) {\n      const { ipcRenderer } = require('electron');\n      this.ipcRenderer = ipcRenderer;\n    }\n    //打开就开始监听进度，因为X掉之后，没有销毁事件\n    // 注意：\"downloadProgress”事件可能存在无法触发的问题，只需要限制一下下载网速就好了\n    this.ipcRenderer.on('downloadProgress', (event, progressObj) => {\n      this.downloadPercent = Math.trunc(progressObj.percent) || 0;\n      console.log('this.downloadPercent-- ',this.downloadPercent)\n      if (this.downloadDialogVisible == false && this.downloadPercent != 0) {\n        //已经下载中的，直接显示\n        this.tips = this.$t('personal_0074');\n        this.downloadDialogVisible = true;\n      }\n    });\n    let _this = this;\n    bus.$on('closeDownload', function () {\n      _this.downloadDialogVisible = false;\n    });\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.checkForUpdate();\n    this.getVersion();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    this.ipcRenderer.removeAllListeners('updateMessage');\n    this.ipcRenderer.removeAllListeners('downloadProgress');\n    this.ipcRenderer.removeAllListeners('isUpdateNow');\n    console.log('this.ipcRenderer.removeAllListeners(downloadProgress)');\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 个人设置 -->\n<template>\n  <div class=\"setting-wrap\">\n    <div class=\"pic\">\n      <div class=\"pic-logo-wrap\">\n        <img class=\"pic-logo\" src=\"../../../assets/images/logo_512.png\" alt />\n        <img class=\"pic-new\" src=\"../../../assets/images/new.png\" alt=\"\" v-if=\"centerDialogVisible\">\n      </div>\n\n      <div class=\"ver-info\">{{ $t('personal_0024') }}{{ currVersion }}</div>\n      <div class=\"xy\" @click=\"PrivacyAgreement()\">{{ $t('login_register_0018') }}</div>\n      <div v-show=\"centerDialogVisible == false\" class=\"is-latest-version\">\n        {{ $t('personal_0030') }}\n      </div>\n      <el-button class=\"submit-btn\" :disabled=\"centerDialogVisible == false\" v-if=\"!downloadDialogVisible\" @click=\"updateApp\"\n        >{{ $t('personal_0025') }}</el-button>\n      <!-- <div slot=\"footer\" v-else class=\"progress-wrapper\">\n        <el-progress :percentage=\"downloadPercent\" :show-text=\"false\"></el-progress>\n        <div class=\"progress-text\">{{ $t('personal_0026') }}{{ downloadPercent }}%</div>\n      </div> -->\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport {mapState} from \"vuex\";\nimport { remote } from 'electron';\nconst appVersionCode = require('../../../../package.json').version_code;\nimport store from '@/store';\nimport { NOTIFY_UPDATE_VERSION } from '@/store/types';\nimport {check_update_by_server} from \"@/server\";\nimport bus from '@/utils/eventbus';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      currVersion: '',\n      version: '',\n      downloadPercent: 0,\n      centerDialogVisible: false,\n      downloadDialogVisible: false,\n      latestVersion: ''\n    };\n  },\n  props: {\n    obj: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    /*latestVersion: {\n      type: String,\n      default: ''\n    }*/\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      versionUpdateInfo: obj => {\n        return obj.state.versionUpdateInfo\n      }\n    })\n  },\n  //监控data中的数据变化\n  watch: {\n    obj: {\n      immediate: true,\n      deep: true,\n      handler: function (v) {\n        if (v.updateInfo && v.obj) {\n          this.updateInfo = v.updateInfo.data;\n          this.version = v.obj.info.version;\n          this.centerDialogVisible = true;\n          this.latestVersion = v.updateInfo.versionCode;\n        } else {\n          this.centerDialogVisible = false;\n        }\n      }\n    },\n    versionUpdateInfo: {\n      immediate: true,\n      deep: true,\n      handler: async function (v) {\n        if (!v.versionSign) {\n          this.$set(this, 'centerDialogVisible', false);\n        } else {\n          this.updateInfo = v.updateInfo;\n          this.$set(this, 'centerDialogVisible', true);\n        }\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    PrivacyAgreement() {\n      console.log(remote.BrowserWindow, 'BrowserWindow');\n      let win = new remote.BrowserWindow({\n        icon: `${__static}/logo.png` // eslint-disable-line\n      });\n      // en-us zh-cn\n      win.loadURL(`https://m.didimessage.com/#/staticpage/userpact?colorMode=day&language=${this.$i18n.locale}`);\n    },\n    async checkForUpdate() {\n      const updateInfo = await check_update_by_server({\n        currentVersion: appVersionCode\n      });\n      if (updateInfo.data) {\n        this.updateInfo = updateInfo.data;\n        this.centerDialogVisible = true;\n      } else {\n        this.centerDialogVisible = false;\n        await store.dispatch(NOTIFY_UPDATE_VERSION, false);\n      }\n    },\n    getVersion() {\n      //获取当前版本\n      this.ipcRenderer.on('app_version', (event, arg) => {\n        this.ipcRenderer.removeAllListeners('app_version');\n        this.currVersion = arg.version;\n      });\n      this.ipcRenderer.send('app_version');\n    },\n    async updateApp() {\n      // this.downloadUpdate();\n      const updateInfo = await check_update_by_server({\n        currentVersion: appVersionCode\n      });\n      if (updateInfo.data) {\n        await store.dispatch(NOTIFY_UPDATE_VERSION, {versionSign: Math.random(), updateInfo: updateInfo.data});\n      }\n    },\n    downloadUpdate() {\n      //统一处理下载，如果已经开始下载，则不重新下载，只更新UI\n      if (this.downloadPercent == 0) {\n        this.ipcRenderer.send('downloadUpdate');\n      }\n      this.tips = this.$t('personal_0074');\n      this.downloadDialogVisible = true;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    if (process.env.IS_ELECTRON) {\n      const { ipcRenderer } = require('electron');\n      this.ipcRenderer = ipcRenderer;\n    }\n    //打开就开始监听进度，因为X掉之后，没有销毁事件\n    // 注意：\"downloadProgress”事件可能存在无法触发的问题，只需要限制一下下载网速就好了\n    this.ipcRenderer.on('downloadProgress', (event, progressObj) => {\n      this.downloadPercent = Math.trunc(progressObj.percent) || 0;\n      console.log('this.downloadPercent-- ',this.downloadPercent)\n      if (this.downloadDialogVisible == false && this.downloadPercent != 0) {\n        //已经下载中的，直接显示\n        this.tips = this.$t('personal_0074');\n        this.downloadDialogVisible = true;\n      }\n    });\n    let _this = this;\n    bus.$on('closeDownload', function () {\n      _this.downloadDialogVisible = false;\n    });\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.checkForUpdate();\n    this.getVersion();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    this.ipcRenderer.removeAllListeners('updateMessage');\n    this.ipcRenderer.removeAllListeners('downloadProgress');\n    this.ipcRenderer.removeAllListeners('isUpdateNow');\n    console.log('this.ipcRenderer.removeAllListeners(downloadProgress)');\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.clearfix::after {\n  content: '';\n  display: inline-block;\n  overflow: hidden;\n  clear: both;\n}\n.pic {\n  margin-top: 25px;\n  .pic-logo-wrap {\n    position: relative;\n    width: 48px;\n    height: 48px;\n    margin: 0 auto 10px;\n    border-radius: 5px;\n    box-shadow: 0 0 9px 2px #ccc;;\n    .pic-logo {\n      width: 48px;\n      height: 48px;\n    }\n    .pic-new {\n      position: absolute;\n      right: -37px;\n      top: -8px;\n      height: 18px;\n      width: 36px;\n    }\n  }\n\n  .ver-info {\n    color: #666666;\n  }\n  .xy {\n    margin: 15px 0;\n    color: #2f54eb;\n    cursor: pointer;\n  }\n  .is-latest-version {\n    font-size: 13px;\n    color: #151f34;\n    margin: 30px 0 10px 0;\n  }\n}\n.submit-btn {\n  height: 40px;\n  background: #2f54eb;\n  box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  border-radius: 4px;\n  color: #fff;\n  font-size: 14px;\n  border: none;\n  user-select: none;\n  width: 190px;\n  outline: none;\n  cursor: pointer;\n}\n.submit-btn.is-disabled {\n  height: 40px;\n  box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n  background: #ebeef5;\n  border-radius: 4px;\n  color: #c0c4cc;\n  font-size: 14px;\n  user-select: none;\n  width: 190px;\n  outline: none;\n}\n.setting-wrap {\n  padding: 30px;\n  //height: 100%;\n  text-align: center;\n  background-color: #fff;\n  .setting-title {\n    font-size: 14px;\n    color: #151f34;\n    line-height: 20px;\n  }\n  .setting-tab-wrap {\n    padding: 20px 0 50px;\n    margin: 0;\n  }\n  .setting-tab-wrap li {\n    float: left;\n    font-size: 14px;\n    color: #151f34;\n    list-style: none;\n    line-height: 20px;\n    margin-right: 35px;\n    user-select: none;\n  }\n  .setting-tab-wrap li:last-child {\n    margin-right: 0;\n  }\n  .setting-tab-wrap li.router-link-active {\n    color: #2f54eb;\n    position: relative;\n  }\n  .setting-tab-wrap li.router-link-active::after {\n    content: '';\n    display: inline-block;\n    position: absolute;\n    bottom: -5px;\n    width: 10px;\n    height: 2px;\n    background-color: #2f54eb;\n    left: 50%;\n    margin-left: -5px;\n  }\n  .setting-content-wrap {\n    .setting-content-wrap-item-con {\n      display: none;\n    }\n    .show {\n      display: block;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".clearfix::after": {
          "content": "''",
          "display": "inline-block",
          "overflow": "hidden",
          "clear": "both"
        },
        ".pic": {
          "margin-top": "25px",
          ".pic-logo-wrap": {
            "position": "relative",
            "width": "48px",
            "height": "48px",
            "margin": "0 auto 10px",
            "border-radius": "5px",
            "box-shadow": "0 0 9px 2px #ccc",
            ".pic-logo": {
              "width": "48px",
              "height": "48px"
            },
            ".pic-new": {
              "position": "absolute",
              "right": "-37px",
              "top": "-8px",
              "height": "18px",
              "width": "36px"
            }
          },
          ".ver-info": {
            "color": "#666666"
          },
          ".xy": {
            "margin": "15px 0",
            "color": "#2f54eb",
            "cursor": "pointer"
          },
          ".is-latest-version": {
            "font-size": "13px",
            "color": "#151f34",
            "margin": "30px 0 10px 0"
          }
        },
        ".submit-btn": {
          "height": "40px",
          "background": "#2f54eb",
          "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
          "border-radius": "4px",
          "color": "#fff",
          "font-size": "14px",
          "border": "none",
          "user-select": "none",
          "width": "190px",
          "outline": "none",
          "cursor": "pointer"
        },
        ".submit-btn.is-disabled": {
          "height": "40px",
          "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
          "background": "#ebeef5",
          "border-radius": "4px",
          "color": "#c0c4cc",
          "font-size": "14px",
          "user-select": "none",
          "width": "190px",
          "outline": "none"
        },
        ".setting-wrap": {
          "padding": "30px",
          "text-align": "center",
          "background-color": "#fff",
          ".setting-title": {
            "font-size": "14px",
            "color": "#151f34",
            "line-height": "20px"
          },
          ".setting-tab-wrap": {
            "padding": "20px 0 50px",
            "margin": "0"
          },
          ".setting-tab-wrap li": {
            "float": "left",
            "font-size": "14px",
            "color": "#151f34",
            "list-style": "none",
            "line-height": "20px",
            "margin-right": "35px",
            "user-select": "none"
          },
          ".setting-tab-wrap li:last-child": {
            "margin-right": "0"
          },
          ".setting-tab-wrap li.router-link-active": {
            "color": "#2f54eb",
            "position": "relative"
          },
          ".setting-tab-wrap li.router-link-active::after": {
            "content": "''",
            "display": "inline-block",
            "position": "absolute",
            "bottom": "-5px",
            "width": "10px",
            "height": "2px",
            "background-color": "#2f54eb",
            "left": "50%",
            "margin-left": "-5px"
          },
          ".setting-content-wrap": {
            ".setting-content-wrap-item-con": {
              "display": "none"
            },
            ".show": {
              "display": "block"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/setMenu/general.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 个人设置 -->\n<template>\n  <div class=\"setting-wrap\">\n    <el-form :label-width=\"labelWidth\" class=\"demo-userInfo\" >\n      <el-form-item :label=\"$t('personal_0055')\" prop=\"\">\n        <LangChange style=\"-webkit-app-region: no-drag; cursor: pointer\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('personal_0056')\" prop=\"\">\n<!--      <el-form-item label=\"Универсальный\" prop=\"\">-->\n        <el-checkbox v-model=\"newMessageRemind\" @change=\"messageRemind()\"> <span class=\"user-name\">\n          {{ $t('personal_0057') }}\n        </span></el-checkbox>\n        <el-checkbox v-model=\"FriendApplyStatus\" @change=\"changeFAS()\"> <span class=\"user-name\">\n          {{ $t('my_vip_0026') }}\n        </span></el-checkbox>\n      </el-form-item>\n      <el-form-item>\n        <el-button class=\"submit-btn\" @click=\"clearLocal()\">\n          {{ $t('chat_0110') }}\n        </el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\n// import { get_bind_user_info } from './server'\nimport LangChange from '@/components/LangChange';\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\nimport { friend_apply_status } from '../server';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nimport { getSelfUserId } from '@/utils/const';\nimport { CLEAR_CHAT } from '@/store/types';\nimport SQLUtils from '@/components/db/sqlite';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    LangChange\n  },\n  data() {\n    //这里存放数据\n    return {\n      // labelWidth: '120px',\n      newMessageRemind: false,\n      FriendApplyStatus: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo'\n    }),\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '120px';\n      } else {\n        return '85px';\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO'\n    }),\n    ...mapMutations([CLEAR_CHAT]),\n    async init() {\n      await this.getUserInfo();\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    async messageRemind() {\n      this.$store.commit('SET_NEW_MESSAGE_SOUND_REMIND', this.newMessageRemind);\n      this.$message({\n        type: 'success',\n        message: this.$t('Universal_0122')\n      });\n    },\n    async changeFAS() {\n      let i = this.FriendApplyStatus ? 1 : 0;\n      let params = {\n        userId: this.currentUserId(),\n        friendApplyStatus: i\n      };\n      let res = await friend_apply_status(params);\n      console.log(res.code);\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: this.$t('Universal_0122')\n        });\n      }\n    },\n    clearLocal() {\n      this.$confirm(this.$t('chat_0060'), this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('Universal_0062'),\n        cancelButtonText: this.$t('Universal_0063'),\n        type: 'warning'\n      }).then(async () => {\n        try {\n          //删除聊天记录\n          let searchRet = await window.vm.$knex.raw(\n            'SELECT name FROM sqlite_master ' + \"WHERE type='table' and name like 'm_%' ORDER BY name;  \"\n          );\n          await searchRet.forEach(async item => {\n            console.log('删除聊天记录', item.name);\n            await window.vm.$knex.schema.dropTableIfExists(item.name);\n          });\n          //删除会话记录\n          //先删除个人相关的会话(把type=6的个人除开，包括DiDI官方号)\n          searchRet = await window.vm.$knex.raw(\n            'select s.id ,c.friend_type,s.targetType,c.friend_id from t_sessions s ' +\n              'left  JOIN  t_contacts c on s.id=c.friend_id ' +\n              'where (c.friend_type !=6 or c.friend_type is null)'\n          );\n\n          await searchRet.forEach(async item => {\n            console.log('删除会话记录', item.id);\n\n            // 查看是否有草稿消息\n            let draftTime = await SQLUtils.getKeyFromSession(item.id, 'draftTime');\n\n            await window.vm\n              .$knex('t_sessions')\n              .where('id', item.id)\n              .update({ isDeleted: draftTime ? false : true, text: '', msgBody: null })\n          });\n\n          //删除群相关的会话\n          /*await window.vm\n            .$knex('t_sessions')\n            .where('targetType', '2')\n            .update({ isDeleted: true })*/\n          this.$store.dispatch('GET_LAST_MSG_LIST');\n          //更新会话列表\n          this.$message({\n            type: 'info',\n            message: this.$t('chat_0111')\n          });\n          this.CLEAR_CHAT();\n          this.$router.push({ path: '/app/chat' });\n        } catch (e) {\n          console.error('删除所有个人和社区的聊天记录', e);\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    // 允许好友请求\n    let friendApplyStatus_tmp = UserInfoUtils.getCurrentUserInfo().friendApplyStatus;\n    this.FriendApplyStatus = friendApplyStatus_tmp == 0 ? false : true;\n    // 开启新消息提醒声音\n    this.newMessageRemind = this.$store.state.common.newMessageSoundRemind;\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 个人设置 -->\n<template>\n  <div class=\"setting-wrap\">\n    <el-form :label-width=\"labelWidth\" class=\"demo-userInfo\" >\n      <el-form-item :label=\"$t('personal_0055')\" prop=\"\">\n        <LangChange style=\"-webkit-app-region: no-drag; cursor: pointer\" />\n      </el-form-item>\n      <el-form-item :label=\"$t('personal_0056')\" prop=\"\">\n<!--      <el-form-item label=\"Универсальный\" prop=\"\">-->\n        <el-checkbox v-model=\"newMessageRemind\" @change=\"messageRemind()\"> <span class=\"user-name\">\n          {{ $t('personal_0057') }}\n        </span></el-checkbox>\n        <el-checkbox v-model=\"FriendApplyStatus\" @change=\"changeFAS()\"> <span class=\"user-name\">\n          {{ $t('my_vip_0026') }}\n        </span></el-checkbox>\n      </el-form-item>\n      <el-form-item>\n        <el-button class=\"submit-btn\" @click=\"clearLocal()\">\n          {{ $t('chat_0110') }}\n        </el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\n// import { get_bind_user_info } from './server'\nimport LangChange from '@/components/LangChange';\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\nimport { friend_apply_status } from '../server';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nimport { getSelfUserId } from '@/utils/const';\nimport { CLEAR_CHAT } from '@/store/types';\nimport SQLUtils from '@/components/db/sqlite';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    LangChange\n  },\n  data() {\n    //这里存放数据\n    return {\n      // labelWidth: '120px',\n      newMessageRemind: false,\n      FriendApplyStatus: true\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo'\n    }),\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '120px';\n      } else {\n        return '85px';\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO'\n    }),\n    ...mapMutations([CLEAR_CHAT]),\n    async init() {\n      await this.getUserInfo();\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    async messageRemind() {\n      this.$store.commit('SET_NEW_MESSAGE_SOUND_REMIND', this.newMessageRemind);\n      this.$message({\n        type: 'success',\n        message: this.$t('Universal_0122')\n      });\n    },\n    async changeFAS() {\n      let i = this.FriendApplyStatus ? 1 : 0;\n      let params = {\n        userId: this.currentUserId(),\n        friendApplyStatus: i\n      };\n      let res = await friend_apply_status(params);\n      console.log(res.code);\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: this.$t('Universal_0122')\n        });\n      }\n    },\n    clearLocal() {\n      this.$confirm(this.$t('chat_0060'), this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('Universal_0062'),\n        cancelButtonText: this.$t('Universal_0063'),\n        type: 'warning'\n      }).then(async () => {\n        try {\n          //删除聊天记录\n          let searchRet = await window.vm.$knex.raw(\n            'SELECT name FROM sqlite_master ' + \"WHERE type='table' and name like 'm_%' ORDER BY name;  \"\n          );\n          await searchRet.forEach(async item => {\n            console.log('删除聊天记录', item.name);\n            await window.vm.$knex.schema.dropTableIfExists(item.name);\n          });\n          //删除会话记录\n          //先删除个人相关的会话(把type=6的个人除开，包括DiDI官方号)\n          searchRet = await window.vm.$knex.raw(\n            'select s.id ,c.friend_type,s.targetType,c.friend_id from t_sessions s ' +\n              'left  JOIN  t_contacts c on s.id=c.friend_id ' +\n              'where (c.friend_type !=6 or c.friend_type is null)'\n          );\n\n          await searchRet.forEach(async item => {\n            console.log('删除会话记录', item.id);\n\n            // 查看是否有草稿消息\n            let draftTime = await SQLUtils.getKeyFromSession(item.id, 'draftTime');\n\n            await window.vm\n              .$knex('t_sessions')\n              .where('id', item.id)\n              .update({ isDeleted: draftTime ? false : true, text: '', msgBody: null })\n          });\n\n          //删除群相关的会话\n          /*await window.vm\n            .$knex('t_sessions')\n            .where('targetType', '2')\n            .update({ isDeleted: true })*/\n          this.$store.dispatch('GET_LAST_MSG_LIST');\n          //更新会话列表\n          this.$message({\n            type: 'info',\n            message: this.$t('chat_0111')\n          });\n          this.CLEAR_CHAT();\n          this.$router.push({ path: '/app/chat' });\n        } catch (e) {\n          console.error('删除所有个人和社区的聊天记录', e);\n        }\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    // 允许好友请求\n    let friendApplyStatus_tmp = UserInfoUtils.getCurrentUserInfo().friendApplyStatus;\n    this.FriendApplyStatus = friendApplyStatus_tmp == 0 ? false : true;\n    // 开启新消息提醒声音\n    this.newMessageRemind = this.$store.state.common.newMessageSoundRemind;\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.el-checkbox, .el-checkbox__input {\n  white-space: unset;\n}\n.clearfix::after {\n  content: '';\n  display: inline-block;\n  overflow: hidden;\n  clear: both;\n}\n.setting-wrap {\n  padding: 30px;\n  //height: 100%;\n  text-align: left;\n  background-color: #fff;\n  .setting-title {\n    font-size: 14px;\n    color: #151f34;\n    line-height: 20px;\n  }\n  .setting-tab-wrap {\n    padding: 20px 0 50px;\n    margin: 0;\n  }\n  .setting-tab-wrap li {\n    float: left;\n    font-size: 14px;\n    color: #151f34;\n    list-style: none;\n    line-height: 20px;\n    margin-right: 35px;\n    user-select: none;\n  }\n  .setting-tab-wrap li:last-child {\n    margin-right: 0;\n  }\n  .setting-tab-wrap li.router-link-active {\n    color: #2f54eb;\n    position: relative;\n  }\n  .setting-tab-wrap li.router-link-active::after {\n    content: '';\n    display: inline-block;\n    position: absolute;\n    bottom: -5px;\n    width: 10px;\n    height: 2px;\n    background-color: #2f54eb;\n    left: 50%;\n    margin-left: -5px;\n  }\n  .setting-content-wrap {\n    .setting-content-wrap-item-con {\n      display: none;\n    }\n    .show {\n      display: block;\n    }\n  }\n  .submit-btn {\n    height: 40px;\n    background: #2f54eb;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 160px;\n    outline: none;\n    cursor: pointer;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".el-checkbox, .el-checkbox__input": {
          "white-space": "unset"
        },
        ".clearfix::after": {
          "content": "''",
          "display": "inline-block",
          "overflow": "hidden",
          "clear": "both"
        },
        ".setting-wrap": {
          "padding": "30px",
          "text-align": "left",
          "background-color": "#fff",
          ".setting-title": {
            "font-size": "14px",
            "color": "#151f34",
            "line-height": "20px"
          },
          ".setting-tab-wrap": {
            "padding": "20px 0 50px",
            "margin": "0"
          },
          ".setting-tab-wrap li": {
            "float": "left",
            "font-size": "14px",
            "color": "#151f34",
            "list-style": "none",
            "line-height": "20px",
            "margin-right": "35px",
            "user-select": "none"
          },
          ".setting-tab-wrap li:last-child": {
            "margin-right": "0"
          },
          ".setting-tab-wrap li.router-link-active": {
            "color": "#2f54eb",
            "position": "relative"
          },
          ".setting-tab-wrap li.router-link-active::after": {
            "content": "''",
            "display": "inline-block",
            "position": "absolute",
            "bottom": "-5px",
            "width": "10px",
            "height": "2px",
            "background-color": "#2f54eb",
            "left": "50%",
            "margin-left": "-5px"
          },
          ".setting-content-wrap": {
            ".setting-content-wrap-item-con": {
              "display": "none"
            },
            ".show": {
              "display": "block"
            }
          },
          ".submit-btn": {
            "height": "40px",
            "background": "#2f54eb",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "160px",
            "outline": "none",
            "cursor": "pointer"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/setting/setMenu/user.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 通用设置 -->\n<template>\n  <div class=\"general-setting-wrap\" v-loading=\"loading\">\n    <div class=\"general-setting-content\">\n      <div class=\"upload-avatar-wrap large\">\n        <div :class=\"userImageClass\">\n          <Copper ref=\"copperBox\" @uploadCropper=\"uploadCropper\" :avater=\"avater\"></Copper>\n          <img v-if=\"userInfo.vipType\" class=\"userLevelClass\" src=\"../../../assets/images/vipCrown.png\" alt />\n        </div>\n        <div>\n          <div class=\"name flex\">\n            <span class=\"nickname\">{{ userInfo.nickName }}</span>\n            <LevelIcon\n              v-if=\"userInfo.inviteCode\"\n              :inviteCode=\"userInfo.inviteCode\"\n              :userRank=\"userInfo.userRank\"\n              iconType=\"large\"\n              :vipType=\"userInfo.vipType\"\n              :inviteCodeType=\"userInfo.inviteCodeType\"\n            />\n          </div>\n          <LuckIdIcon\n            :inviteCode=\"userInfo.inviteCode\"\n            :userRank=\"userInfo.userRank\"\n            iconType=\"large\"\n            :vipType=\"userInfo.vipType\"\n            :inviteCodeType=\"userInfo.inviteCodeType\"\n            :listFlag=\"false\"\n          />\n        </div>\n      </div>\n\n      <div class=\"upload-avatar-wrap\"></div>\n      <button class=\"submit-btn\" @click=\"LOGIN_OUT(undefined)\">{{ this.$t('personal_0018') }}</button>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Copper from '@/components/chat/copper';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport { upload_images_avatar, set_user_icon } from '../server';\nimport { user_get_team_info } from '@/layouts/user/register/server';\nimport { LOGIN_OUT } from '@/store/types';\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\nimport fileOperational from '@/services/fileOperational';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Copper,\n    LevelIcon,\n    LuckIdIcon\n  },\n  data() {\n    //这里存放数据\n    let validateGender = (rule, value, callback) => {\n      if (value === '0') {\n        callback(new Error(this.$t('my_information_0016')));\n      } else {\n        callback();\n      }\n    };\n    return {\n      avater: '',\n      dialogVisible: false,\n      loading: false,\n      labelWidth: '130px',\n      rules: {\n        nickName: [\n          { required: true, message: this.$t('my_information_0017'), trigger: 'blur' }\n          // { min: 1, max: 50, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" }\n        ],\n        gender: [\n          { required: true, message: this.$t('my_information_0016'), trigger: 'blur' },\n          { validator: validateGender, trigger: 'blur' }\n        ]\n      },\n      uploadData: {},\n      uploadUrl: upload_images_avatar(),\n      headers: {\n        Authorization: localStorage.accessToken\n      },\n      userStatus: '', //用户审核状态\n      userRemark: '' // 驳回原因\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo'\n    }),\n    userImageClass() {\n      if (this.userInfo.userRank > 30) {\n        return 'user-high-level-border userImageClass';\n      } else {\n        return 'user-low-level-border userImageClass';\n      }\n    }\n  },\n\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapMutations([LOGIN_OUT]),\n    init() {\n      this.getUserInfo();\n      console.log(this.userInfo);\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    async uploadCropper(url, bigUrl) {\n      //调接口上传裁剪的头像\n      let params = {\n        icon: url,\n        iconBig: bigUrl\n      };\n      console.log('chen-账号设置-头像-uploadCropper-params=', params)\n      this.loading = true;\n      let res = await set_user_icon(params);\n      this.loading = false;\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n        this.userInfo.headImg = fileOperational.getImage(url);\n        this.avater = url;\n        //  this.$refs.copperBox.close();\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    async saveUserInfo() {\n      // 保存个人信息\n      let params = {\n        icon: this.userInfo.headImg\n      };\n      let res = await set_user_icon(params);\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //\n          this.saveUserInfo();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    uploadAvater() {\n      this.imgUrl = null;\n      this.$refs.upload.click();\n    },\n    closeDialog(val) {\n      this.dialogVisible = val;\n    },\n    handleAvatarSuccess(data) {\n      if (data.code == '200') {\n        this.userInfo.headImg = data.data.path;\n        this.saveUserInfo();\n      }\n      this.loading = false;\n    },\n    // 获取用户的审核状态，如果非专业用户时才进行查询\n    async getAccountInfo() {\n      if (this.userInfo.userType === 5) return false;\n      try {\n        let { data } = await user_get_team_info();\n        if (data === null) {\n          this.userStatus = null;\n        } else {\n          this.userStatus = data.status;\n          this.userRemark = data.remark || '';\n        }\n      } catch (err) {\n        throw new Error(err);\n      }\n    },\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO'\n    })\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.avater = this.findImage(this.userInfo.headImg);\n    setTimeout(this.getAccountInfo, 1500);\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 通用设置 -->\n<template>\n  <div class=\"general-setting-wrap\" v-loading=\"loading\">\n    <div class=\"general-setting-content\">\n      <div class=\"upload-avatar-wrap large\">\n        <div :class=\"userImageClass\">\n          <Copper ref=\"copperBox\" @uploadCropper=\"uploadCropper\" :avater=\"avater\"></Copper>\n          <img v-if=\"userInfo.vipType\" class=\"userLevelClass\" src=\"../../../assets/images/vipCrown.png\" alt />\n        </div>\n        <div>\n          <div class=\"name flex\">\n            <span class=\"nickname\">{{ userInfo.nickName }}</span>\n            <LevelIcon\n              v-if=\"userInfo.inviteCode\"\n              :inviteCode=\"userInfo.inviteCode\"\n              :userRank=\"userInfo.userRank\"\n              iconType=\"large\"\n              :vipType=\"userInfo.vipType\"\n              :inviteCodeType=\"userInfo.inviteCodeType\"\n            />\n          </div>\n          <LuckIdIcon\n            :inviteCode=\"userInfo.inviteCode\"\n            :userRank=\"userInfo.userRank\"\n            iconType=\"large\"\n            :vipType=\"userInfo.vipType\"\n            :inviteCodeType=\"userInfo.inviteCodeType\"\n            :listFlag=\"false\"\n          />\n        </div>\n      </div>\n\n      <div class=\"upload-avatar-wrap\"></div>\n      <button class=\"submit-btn\" @click=\"LOGIN_OUT(undefined)\">{{ this.$t('personal_0018') }}</button>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Copper from '@/components/chat/copper';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport { upload_images_avatar, set_user_icon } from '../server';\nimport { user_get_team_info } from '@/layouts/user/register/server';\nimport { LOGIN_OUT } from '@/store/types';\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\nimport fileOperational from '@/services/fileOperational';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Copper,\n    LevelIcon,\n    LuckIdIcon\n  },\n  data() {\n    //这里存放数据\n    let validateGender = (rule, value, callback) => {\n      if (value === '0') {\n        callback(new Error(this.$t('my_information_0016')));\n      } else {\n        callback();\n      }\n    };\n    return {\n      avater: '',\n      dialogVisible: false,\n      loading: false,\n      labelWidth: '130px',\n      rules: {\n        nickName: [\n          { required: true, message: this.$t('my_information_0017'), trigger: 'blur' }\n          // { min: 1, max: 50, message: \"长度在 3 到 5 个字符\", trigger: \"blur\" }\n        ],\n        gender: [\n          { required: true, message: this.$t('my_information_0016'), trigger: 'blur' },\n          { validator: validateGender, trigger: 'blur' }\n        ]\n      },\n      uploadData: {},\n      uploadUrl: upload_images_avatar(),\n      headers: {\n        Authorization: localStorage.accessToken\n      },\n      userStatus: '', //用户审核状态\n      userRemark: '' // 驳回原因\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo'\n    }),\n    userImageClass() {\n      if (this.userInfo.userRank > 30) {\n        return 'user-high-level-border userImageClass';\n      } else {\n        return 'user-low-level-border userImageClass';\n      }\n    }\n  },\n\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapMutations([LOGIN_OUT]),\n    init() {\n      this.getUserInfo();\n      console.log(this.userInfo);\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    async uploadCropper(url, bigUrl) {\n      //调接口上传裁剪的头像\n      let params = {\n        icon: url,\n        iconBig: bigUrl\n      };\n      console.log('chen-账号设置-头像-uploadCropper-params=', params)\n      this.loading = true;\n      let res = await set_user_icon(params);\n      this.loading = false;\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n        this.userInfo.headImg = fileOperational.getImage(url);\n        this.avater = url;\n        //  this.$refs.copperBox.close();\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    async saveUserInfo() {\n      // 保存个人信息\n      let params = {\n        icon: this.userInfo.headImg\n      };\n      let res = await set_user_icon(params);\n      if (res.code == '200') {\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //\n          this.saveUserInfo();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    uploadAvater() {\n      this.imgUrl = null;\n      this.$refs.upload.click();\n    },\n    closeDialog(val) {\n      this.dialogVisible = val;\n    },\n    handleAvatarSuccess(data) {\n      if (data.code == '200') {\n        this.userInfo.headImg = data.data.path;\n        this.saveUserInfo();\n      }\n      this.loading = false;\n    },\n    // 获取用户的审核状态，如果非专业用户时才进行查询\n    async getAccountInfo() {\n      if (this.userInfo.userType === 5) return false;\n      try {\n        let { data } = await user_get_team_info();\n        if (data === null) {\n          this.userStatus = null;\n        } else {\n          this.userStatus = data.status;\n          this.userRemark = data.remark || '';\n        }\n      } catch (err) {\n        throw new Error(err);\n      }\n    },\n    ...mapActions({\n      getUserInfo: 'GET_USER_INFO'\n    })\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.init();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.avater = this.findImage(this.userInfo.headImg);\n    setTimeout(this.getAccountInfo, 1500);\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.general-setting-wrap .upload-avatar-wrap .el-upload-list {\n  display: none;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.nickname {\n  max-width: 150px;\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: pre;\n  text-align: left;\n  margin-right: 5px;\n}\n.user-high-level-border {\n  // border: 2px solid #ECC143;\n  background-image: url(../../../assets/images/wjt_highbg_62.png);\n  background-size: contain;\n  display: block;\n  padding: 8px;\n}\n\n.user-low-level-border {\n  // border: 2px solid #86B6FF;\n  background-image: url(../../../assets/images/wjt_lowbg_62.png);\n  background-size: contain;\n  display: block;\n  padding: 8px;\n}\n\n.userImageClass {\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  position: relative;\n  margin-right: 10px;\n}\n.general-setting-wrap {\n  position: relative;\n\n  .box-bg {\n    width: 420px;\n    height: 40px;\n    background: rgba(247, 247, 250, 1);\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    border-radius: 4px;\n    box-sizing: border-box;\n    padding: 0 15px;\n  }\n\n  .account-wrapper {\n    display: flex;\n    justify-content: space-between;\n\n    button {\n      font-weight: normal;\n    }\n  }\n\n  .upload-avatar-wrap {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    .upload-text {\n      color: #2f53eb;\n      font-size: 14px;\n      margin-top: 10px;\n    }\n\n    .head-image {\n      width: 72px;\n      height: 72px;\n      border-radius: 50%;\n    }\n  }\n\n  .general-setting-title {\n    text-align: center;\n    line-height: 22px;\n    font-size: 16px;\n    color: #151f34;\n  }\n\n  .general-setting-title p {\n    color: #9297a3;\n    margin: 10px 0 30px;\n    line-height: 20px;\n    font-size: 14px;\n  }\n\n  .general-setting-content {\n    width: 100%;\n    margin: 0 auto;\n    text-align: center;\n    margin-top: 50px;\n    .name {\n      margin: 5px 0;\n    }\n  }\n\n  .text {\n    color: #151f34;\n    font-size: 10px;\n    line-height: 14px;\n    margin: 60px 0 10px;\n  }\n\n  .submit-btn {\n    height: 40px;\n    background: #2f54eb;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    border-radius: 4px;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    user-select: none;\n    width: 190px;\n    outline: none;\n    margin-top: 60px;\n    cursor: pointer;\n  }\n\n  .btn-wrap {\n    .flex-sub:nth-child(1) {\n      margin-right: 20px;\n\n      .submit-btn {\n        background: #9297a3;\n      }\n    }\n  }\n  .userLevelClass {\n    width: 32px;\n    height: 16px;\n    top: -15px;\n    position: relative;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".general-setting-wrap .upload-avatar-wrap .el-upload-list": {
          "display": "none"
        }
      },
      {
        ".nickname": {
          "max-width": "150px",
          "display": "inline-block",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "pre",
          "text-align": "left",
          "margin-right": "5px"
        },
        ".user-high-level-border": {
          "background-image": "url(../../../assets/images/wjt_highbg_62.png)",
          "background-size": "contain",
          "display": "block",
          "padding": "8px"
        },
        ".user-low-level-border": {
          "background-image": "url(../../../assets/images/wjt_lowbg_62.png)",
          "background-size": "contain",
          "display": "block",
          "padding": "8px"
        },
        ".userImageClass": {
          "width": "44px",
          "height": "44px",
          "border-radius": "50%",
          "position": "relative",
          "margin-right": "10px"
        },
        ".general-setting-wrap": {
          "position": "relative",
          ".box-bg": {
            "width": "420px",
            "height": "40px",
            "background": "rgba(247, 247, 250, 1)",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "border-radius": "4px",
            "box-sizing": "border-box",
            "padding": "0 15px"
          },
          ".account-wrapper": {
            "display": "flex",
            "justify-content": "space-between",
            "button": {
              "font-weight": "normal"
            }
          },
          ".upload-avatar-wrap": {
            "display": "flex",
            "flex-direction": "row",
            "align-items": "center",
            "justify-content": "center",
            ".upload-text": {
              "color": "#2f53eb",
              "font-size": "14px",
              "margin-top": "10px"
            },
            ".head-image": {
              "width": "72px",
              "height": "72px",
              "border-radius": "50%"
            }
          },
          ".general-setting-title": {
            "text-align": "center",
            "line-height": "22px",
            "font-size": "16px",
            "color": "#151f34"
          },
          ".general-setting-title p": {
            "color": "#9297a3",
            "margin": "10px 0 30px",
            "line-height": "20px",
            "font-size": "14px"
          },
          ".general-setting-content": {
            "width": "100%",
            "margin": "0 auto",
            "text-align": "center",
            "margin-top": "50px",
            ".name": {
              "margin": "5px 0"
            }
          },
          ".text": {
            "color": "#151f34",
            "font-size": "10px",
            "line-height": "14px",
            "margin": "60px 0 10px"
          },
          ".submit-btn": {
            "height": "40px",
            "background": "#2f54eb",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "14px",
            "border": "none",
            "user-select": "none",
            "width": "190px",
            "outline": "none",
            "margin-top": "60px",
            "cursor": "pointer"
          },
          ".btn-wrap": {
            ".flex-sub:nth-child(1)": {
              "margin-right": "20px",
              ".submit-btn": {
                "background": "#9297a3"
              }
            }
          },
          ".userLevelClass": {
            "width": "32px",
            "height": "16px",
            "top": "-15px",
            "position": "relative"
          }
        }
      }
    ]
  },
  {
    "type": "less",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/common-popper/MsgBgPopper.less",
    "importInfo": null,
    "originData": ".common-mixin() {\n  content: '';\n  display: block;\n  position: absolute;\n}\n.icon-mixin() {\n  width: 30px;\n  height: 15px;\n  background-repeat: no-repeat;\n  background-size: 30px 15px;\n}\n.icon-l-after() {\n  top: 0;\n  right: 5px;\n  transform: translate(0, -50%);\n}\n.icon-r-after() {\n  top: 0;\n  left: 5px;\n  transform: translate(0, -50%);\n}\n.icon-vip() {\n  background-image: url(../../../assets/images/vipCrown.png);\n}\n.icon-master() {\n  background-image: url(../../../assets/images/vipCrown.png);\n}\n\n/*\n\n>= 31级别\n\n*/\n.pop-master-l {\n  color: rgba(233, 187, 118, 1) !important;\n  background: radial-gradient(#372a2a, #433b2c);\n  border: 1px solid #a49f88;\n  // border-radius: 5px;\n  border-radius: 0px 10px 10px 10px;\n  transform: translateY(8px);\n  // &::before {\n  //   .common-mixin;\n  //   right: 100%;\n  //   top:13px;\n  //   border-top: 6px solid transparent;\n  //   border-bottom: 6px solid transparent;\n  //   border-right: 10px solid #433b2c;\n  // }\n  &::after {\n    .common-mixin;\n    .icon-mixin;\n    .icon-master;\n    .icon-l-after;\n  }\n}\n.pop-master-r {\n  color: rgba(233, 187, 118, 1) !important;\n  background: radial-gradient(#372a2a, #433b2c);\n  border: 1px solid #a49f88;\n  // border-radius: 5px;\n  border-radius: 10px 0 10px 10px;\n  transform: translateY(8px);\n  // &::before {\n  //   .common-mixin;\n  //   left: 100%;\n  //   top:13px;\n  //   border-top: 6px solid transparent;\n  //   border-bottom: 6px solid transparent;\n  //   border-left: 10px solid #433b2c;\n  // }\n  &::after {\n    .common-mixin;\n    .icon-mixin;\n    .icon-master;\n    .icon-r-after;\n  }\n}\n\n/*\n\nVIP\n\n*/\n// 非自己发送的消息\n.pop-vip-l {\n  color: rgba(243, 224, 177, 1) !important;\n  background: radial-gradient(#353535, #16140e);\n  // border: 1px solid #a49f88;\n  // border-radius: 5px;\n  border-radius: 0px 10px 10px 10px;\n  transform: translateY(8px);\n  // &::before {\n  //   .common-mixin;\n  //   right: 100%;\n  //   top:13px;\n  //   border-top: 6px solid transparent;\n  //   border-bottom: 6px solid transparent;\n  //   border-right: 10px solid #16140e;\n  // }\n  &::after {\n    .common-mixin;\n    .icon-mixin;\n    .icon-vip;\n    .icon-l-after;\n  }\n}\n// 自己发送的消息\n.pop-vip-r {\n  color: rgba(243, 224, 177, 1) !important;\n  background: radial-gradient(#353535, #16140e);\n  // border: 1px solid #a49f88;\n  // border-radius: 5px;\n  border-radius: 10px 0 10px 10px;\n  transform: translateY(8px);\n  // &::before {\n  //   .common-mixin;\n  //   left: 100%;\n  //   top:13px;\n  //   border-top: 6px solid transparent;\n  //   border-bottom: 6px solid transparent;\n  //   border-left: 10px solid #16140e;\n  // }\n  &::after {\n    .common-mixin;\n    .icon-mixin;\n    .icon-vip;\n    .icon-r-after;\n  }\n}\n/**\n\ndefault userRank < 31级别 非VIP\n\n**/\n.pop-default-l {\n  background: #ffffff;\n  // border-radius: 5px;\n  border-radius: 0px 10px 10px 10px;\n  transform: translateY(8px);\n  // &::before {\n  //   .common-mixin;\n  //   right: 100%;\n  //   top:13px;\n  //   border-top: 6px solid transparent;\n  //   border-bottom: 6px solid transparent;\n  //   border-right: 10px solid #ffffff;\n  // }\n}\n.pop-default-r {\n  background: #cfe1ff;\n  // border-radius: 5px;\n  border-radius: 10px 0 10px 10px;\n  transform: translateY(8px);\n  //   &::before {\n  //     .common-mixin;\n  //     left: 100%;\n  //     top:13px;\n  //     border-top: 6px solid transparent;\n  //     border-bottom: 6px solid transparent;\n  //     border-left: 10px solid #cfe1ff;\n  //   }\n}\n.pop-default-r-d {\n  background: #ffffff;\n  border-radius: 10px 0 10px 10px;\n  transform: translateY(8px);\n}\n.pop-default-r-m{\n  border-radius: 10px 0 10px 10px;\n  transform: translateY(8px);\n}\n.pop-default-l-m {\n  border-radius: 0 10px 10px 10px;\n  transform: translateY(8px);\n}",
    "cssJson": {
      ".common-mixin()": {
        "content": "''",
        "display": "block",
        "position": "absolute"
      },
      ".icon-mixin()": {
        "width": "30px",
        "height": "15px",
        "background-repeat": "no-repeat",
        "background-size": "30px 15px"
      },
      ".icon-l-after()": {
        "top": "0",
        "right": "5px",
        "transform": "translate(0, -50%)"
      },
      ".icon-r-after()": {
        "top": "0",
        "left": "5px",
        "transform": "translate(0, -50%)"
      },
      ".icon-vip()": {
        "background-image": "url(../../../assets/images/vipCrown.png)"
      },
      ".icon-master()": {
        "background-image": "url(../../../assets/images/vipCrown.png)"
      },
      ".pop-master-l": {
        "color": "rgba(233, 187, 118, 1) !important",
        "background": "radial-gradient(#372a2a, #433b2c)",
        "border": "1px solid #a49f88",
        "border-radius": "0px 10px 10px 10px",
        "transform": "translateY(8px)",
        "&::after": {}
      },
      ".pop-master-r": {
        "color": "rgba(233, 187, 118, 1) !important",
        "background": "radial-gradient(#372a2a, #433b2c)",
        "border": "1px solid #a49f88",
        "border-radius": "10px 0 10px 10px",
        "transform": "translateY(8px)",
        "&::after": {}
      },
      ".pop-vip-l": {
        "color": "rgba(243, 224, 177, 1) !important",
        "background": "radial-gradient(#353535, #16140e)",
        "border-radius": "0px 10px 10px 10px",
        "transform": "translateY(8px)",
        "&::after": {}
      },
      ".pop-vip-r": {
        "color": "rgba(243, 224, 177, 1) !important",
        "background": "radial-gradient(#353535, #16140e)",
        "border-radius": "10px 0 10px 10px",
        "transform": "translateY(8px)",
        "&::after": {}
      },
      ".pop-default-l": {
        "background": "#ffffff",
        "border-radius": "0px 10px 10px 10px",
        "transform": "translateY(8px)"
      },
      ".pop-default-r": {
        "background": "#cfe1ff",
        "border-radius": "10px 0 10px 10px",
        "transform": "translateY(8px)"
      },
      ".pop-default-r-d": {
        "background": "#ffffff",
        "border-radius": "10px 0 10px 10px",
        "transform": "translateY(8px)"
      },
      ".pop-default-r-m": {
        "border-radius": "10px 0 10px 10px",
        "transform": "translateY(8px)"
      },
      ".pop-default-l-m": {
        "border-radius": "0 10px 10px 10px",
        "transform": "translateY(8px)"
      }
    }
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/ChatBg.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"chat-layout-bg flex\">\n    <div style=\"text-align:center;\">\n      <img src=\"../assets/images/logo.png\" alt=\"Di Di\" />\n      <div class=\"text\">{{ $t('Universal_0328') }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"chat-layout-bg flex\">\n    <div style=\"text-align:center;\">\n      <img src=\"../assets/images/logo.png\" alt=\"Di Di\" />\n      <div class=\"text\">{{ $t('Universal_0328') }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.chat-layout-bg {\n  width: 100%;\n  height: 100%;\n  background-color: #f6f6f6;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  color: #999;\n  img {\n    width: 140px;\n  }\n  .text {\n    margin-top: 10px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".chat-layout-bg": {
          "width": "100%",
          "height": "100%",
          "background-color": "#f6f6f6",
          "align-items": "center",
          "justify-content": "center",
          "font-size": "16px",
          "color": "#999",
          "img": {
            "width": "140px"
          },
          ".text": {
            "margin-top": "10px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/tipoffs/UpoadImg.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 上传图片 -->\n<template>\n  <div>\n    <div class=\"upload-img cf\">\n      <div class=\"upload-img-list\" v-for=\"(item, index) of imgList\" :key=\"index\" v-show=\"imgList.length != 0\">\n        <!-- v-if=\"item.file.type.indexOf('image') !== -1\" -->\n        <img :src=\"item.file.src\" />\n        <div class=\"remove_logo\" @click=\"delHand(index)\">\n          <i class=\"el-icon-close\"></i>\n        </div>\n      </div>\n      <div @click=\"fileClick\" class=\"upload-img-list plus\" v-show=\"addState\">\n        <i class=\"el-icon-plus\"></i>\n        <input\n          type=\"file\"\n          :multiple=\"multiple\"\n          accept=\"image/jpeg,image/jpg, image/png\"\n          @change=\"changeHand($event)\"\n          ref=\"files\"\n          style=\"display: none\"\n        />\n      </div>\n    </div>\n    <span style=\"color: #151F34; font-size: 14px\">{{ $t('Universal_0371') }}</span>\n    <!-- <div style=\"color: #F56C6C;font-size: 12px;\" v-show=\"imgList.length == 0\">请上传</div> -->\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    limit: {\n      type: Number,\n      default() {\n        return 1;\n      }\n    },\n    multiple: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    imgList: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      // imgList: [],\n      addState: true,\n      formData: new FormData(),\n      imgListData: this.imgList\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    imgList:{\n      handler:function (val) {\n        if (this.imgList.length == this.limit) {\n          this.addState = false;\n        } else {\n          this.addState = true;\n        }\n        this.imgListData = val;\n      },\n      deep:true\n    }\n  },\n  //方法集合\n  methods: {\n    fileClick() {\n      this.$refs.files.click();\n    },\n    clearFiles(){\n      this.imgListData.length = 0;\n    },\n    changeHand(e) {\n      const isJPG =\n        e.target.files[0].type === 'image/jpg' || e.target.files[0].type === 'image/jpeg' || e.target.files[0].type === 'image/png';\n\n      if (!isJPG) {\n        this.$message.error(this.$t('Universal_0369'));\n        return false;\n      }\n      if (e.target.files.length + this.imgList.length > this.limit) {\n        this.$message.warning(this.$t('Universal_0434', {limit: this.limit}));\n        return;\n      }\n\n      if (!e.target.files[0].size) return;\n      this.fileList(e.target);\n      e.target.value = '';\n    },\n    fileList(fileList) {\n      // 获取文件\n      let files = fileList.files;\n      for (let i = 0; i < files.length; i++) {\n        //判断是否为文件夹\n        if (files[i].type != '') {\n          this.fileAdd(files[i]);\n        }\n      }\n    },\n    fileAdd(file) {\n      // 添加图片，显示上传的图片\n      //总大小\n      //   this.size = this.size + file.size;\n      // FileReader读取图片文件\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        file.src = reader.result;\n        this.imgListData.push({\n          file\n        });\n      };\n    },\n    delHand(index) {\n      // 删除图片\n      this.imgListData.splice(index, 1);\n    },\n    uploadImage() {\n      // 上传图片\n      let formData = new FormData();\n      for (let i = 0; i < this.imgList.length; i++) {\n        formData.append('file' + [i + 1], this.imgList[i].file);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 上传图片 -->\n<template>\n  <div>\n    <div class=\"upload-img cf\">\n      <div class=\"upload-img-list\" v-for=\"(item, index) of imgList\" :key=\"index\" v-show=\"imgList.length != 0\">\n        <!-- v-if=\"item.file.type.indexOf('image') !== -1\" -->\n        <img :src=\"item.file.src\" />\n        <div class=\"remove_logo\" @click=\"delHand(index)\">\n          <i class=\"el-icon-close\"></i>\n        </div>\n      </div>\n      <div @click=\"fileClick\" class=\"upload-img-list plus\" v-show=\"addState\">\n        <i class=\"el-icon-plus\"></i>\n        <input\n          type=\"file\"\n          :multiple=\"multiple\"\n          accept=\"image/jpeg,image/jpg, image/png\"\n          @change=\"changeHand($event)\"\n          ref=\"files\"\n          style=\"display: none\"\n        />\n      </div>\n    </div>\n    <span style=\"color: #151F34; font-size: 14px\">{{ $t('Universal_0371') }}</span>\n    <!-- <div style=\"color: #F56C6C;font-size: 12px;\" v-show=\"imgList.length == 0\">请上传</div> -->\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    limit: {\n      type: Number,\n      default() {\n        return 1;\n      }\n    },\n    multiple: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    imgList: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      // imgList: [],\n      addState: true,\n      formData: new FormData(),\n      imgListData: this.imgList\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    imgList:{\n      handler:function (val) {\n        if (this.imgList.length == this.limit) {\n          this.addState = false;\n        } else {\n          this.addState = true;\n        }\n        this.imgListData = val;\n      },\n      deep:true\n    }\n  },\n  //方法集合\n  methods: {\n    fileClick() {\n      this.$refs.files.click();\n    },\n    clearFiles(){\n      this.imgListData.length = 0;\n    },\n    changeHand(e) {\n      const isJPG =\n        e.target.files[0].type === 'image/jpg' || e.target.files[0].type === 'image/jpeg' || e.target.files[0].type === 'image/png';\n\n      if (!isJPG) {\n        this.$message.error(this.$t('Universal_0369'));\n        return false;\n      }\n      if (e.target.files.length + this.imgList.length > this.limit) {\n        this.$message.warning(this.$t('Universal_0434', {limit: this.limit}));\n        return;\n      }\n\n      if (!e.target.files[0].size) return;\n      this.fileList(e.target);\n      e.target.value = '';\n    },\n    fileList(fileList) {\n      // 获取文件\n      let files = fileList.files;\n      for (let i = 0; i < files.length; i++) {\n        //判断是否为文件夹\n        if (files[i].type != '') {\n          this.fileAdd(files[i]);\n        }\n      }\n    },\n    fileAdd(file) {\n      // 添加图片，显示上传的图片\n      //总大小\n      //   this.size = this.size + file.size;\n      // FileReader读取图片文件\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        file.src = reader.result;\n        this.imgListData.push({\n          file\n        });\n      };\n    },\n    delHand(index) {\n      // 删除图片\n      this.imgListData.splice(index, 1);\n    },\n    uploadImage() {\n      // 上传图片\n      let formData = new FormData();\n      for (let i = 0; i < this.imgList.length; i++) {\n        formData.append('file' + [i + 1], this.imgList[i].file);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.upload-img {\n  .upload-img-list {\n    width: 100px;\n    height: 75px;\n    float: left;\n    position: relative;\n    margin-right: 20px;\n    margin-bottom: 20px;\n    overflow: hidden;\n    background-color: #fff;\n    border: 1px solid #c0ccda;\n    border-radius: 6px;\n    box-sizing: border-box;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n    .remove_logo {\n      position: absolute;\n      right: 5px;\n      top: 5px;\n    }\n  }\n  .plus {\n    background: #ededf0;\n    text-align: center;\n    line-height: 75px;\n    font-size: 20px;\n    color: #9297a3;\n    display: inline-block;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".upload-img": {
          ".upload-img-list": {
            "width": "100px",
            "height": "75px",
            "float": "left",
            "position": "relative",
            "margin-right": "20px",
            "margin-bottom": "20px",
            "overflow": "hidden",
            "background-color": "#fff",
            "border": "1px solid #c0ccda",
            "border-radius": "6px",
            "box-sizing": "border-box",
            "img": {
              "width": "100%",
              "height": "100%"
            },
            ".remove_logo": {
              "position": "absolute",
              "right": "5px",
              "top": "5px"
            }
          },
          ".plus": {
            "background": "#ededf0",
            "text-align": "center",
            "line-height": "75px",
            "font-size": "20px",
            "color": "#9297a3",
            "display": "inline-block"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/single/components/title.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- member title -->\r\n<template>\r\n  <div style=\"background: #fff; -webkit-app-region: drag; height:38px\">\r\n    <div class=\"mess-header flex align-center justify-between drag\">\r\n      <div class=\"mess-name\" style=\"-webkit-app-region: no-drag\">\r\n        <slot></slot>\r\n      </div>\r\n      <div class=\"mess-nav flex align-center\">\r\n        <!-- <span @click=\"goMessage\">消息</span> -->\r\n        <!-- <span>搜寻</span> -->\r\n        <span\r\n          @click=\"goSetting\"\r\n          class=\"noDrag\"\r\n          v-if=\"\r\n            this.$route.query.id != '1008455862495526912' &&\r\n              this.$route.query.id != '1032384035881537536' &&\r\n              this.$route.query.id != '1188285824566878208' &&\r\n              this.$route.query.id != $paymentId\r\n          \"\r\n        >\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_config.png\" alt />\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <!-- <div v-if=\"!rightStatus\" id=\"checklist\" class=\"mess-checklist\"> -->\r\n\r\n    <!-- </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\r\n//例如：import 《组件名称》 from '《组件路径》';\r\n\r\nexport default {\r\n  //import引入的组件需要注入到对象中才能使用\r\n  components: {},\r\n  data() {\r\n    //这里存放数据\r\n    return {};\r\n  },\r\n  //监听属性 类似于data概念\r\n  computed: {},\r\n  //监控data中的数据变化\r\n  watch: {},\r\n  //方法集合\r\n  methods: {\r\n    goMessage() {\r\n      this.$emit('goMessage');\r\n    },\r\n    goSetting() {\r\n      this.$emit('goSetting', 1);\r\n    }\r\n  },\r\n  //生命周期 - 创建完成（可以访问当前this实例）\r\n  created() {},\r\n  //生命周期 - 挂载完成（可以访问DOM元素）\r\n  mounted() {},\r\n  beforeCreate() {}, //生命周期 - 创建之前\r\n  beforeMount() {}, //生命周期 - 挂载之前\r\n  beforeUpdate() {}, //生命周期 - 更新之前\r\n  updated() {}, //生命周期 - 更新之后\r\n  beforeDestroy() {}, //生命周期 - 销毁之前\r\n  destroyed() {}, //生命周期 - 销毁完成\r\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\r\n};\r\n</script>",
    "originData": "<!-- member title -->\r\n<template>\r\n  <div style=\"background: #fff; -webkit-app-region: drag; height:38px\">\r\n    <div class=\"mess-header flex align-center justify-between drag\">\r\n      <div class=\"mess-name\" style=\"-webkit-app-region: no-drag\">\r\n        <slot></slot>\r\n      </div>\r\n      <div class=\"mess-nav flex align-center\">\r\n        <!-- <span @click=\"goMessage\">消息</span> -->\r\n        <!-- <span>搜寻</span> -->\r\n        <span\r\n          @click=\"goSetting\"\r\n          class=\"noDrag\"\r\n          v-if=\"\r\n            this.$route.query.id != '1008455862495526912' &&\r\n              this.$route.query.id != '1032384035881537536' &&\r\n              this.$route.query.id != '1188285824566878208' &&\r\n              this.$route.query.id != $paymentId\r\n          \"\r\n        >\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_config.png\" alt />\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <!-- <div v-if=\"!rightStatus\" id=\"checklist\" class=\"mess-checklist\"> -->\r\n\r\n    <!-- </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\r\n//例如：import 《组件名称》 from '《组件路径》';\r\n\r\nexport default {\r\n  //import引入的组件需要注入到对象中才能使用\r\n  components: {},\r\n  data() {\r\n    //这里存放数据\r\n    return {};\r\n  },\r\n  //监听属性 类似于data概念\r\n  computed: {},\r\n  //监控data中的数据变化\r\n  watch: {},\r\n  //方法集合\r\n  methods: {\r\n    goMessage() {\r\n      this.$emit('goMessage');\r\n    },\r\n    goSetting() {\r\n      this.$emit('goSetting', 1);\r\n    }\r\n  },\r\n  //生命周期 - 创建完成（可以访问当前this实例）\r\n  created() {},\r\n  //生命周期 - 挂载完成（可以访问DOM元素）\r\n  mounted() {},\r\n  beforeCreate() {}, //生命周期 - 创建之前\r\n  beforeMount() {}, //生命周期 - 挂载之前\r\n  beforeUpdate() {}, //生命周期 - 更新之前\r\n  updated() {}, //生命周期 - 更新之后\r\n  beforeDestroy() {}, //生命周期 - 销毁之前\r\n  destroyed() {}, //生命周期 - 销毁完成\r\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n//@import url(); 引入公共css类\r\n.mess-header {\r\n  height: 38px;\r\n  background: #fff;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n  border-bottom: 1px solid #e4e4e4;\r\n  span {\r\n    height: 20px;\r\n    line-height: 20px;\r\n    &:nth-child(2) {\r\n      margin: 0 12px;\r\n    }\r\n    &:nth-child(4) {\r\n      margin: 0 12px;\r\n    }\r\n  }\r\n\r\n  .mess-nav span {\r\n    cursor: pointer;\r\n  }\r\n  .mess-nav img {\r\n    width: 23px;\r\n    height: 23px;\r\n  }\r\n  .mess-name {\r\n    font-weight: 600;\r\n  }\r\n}\r\n.mess-checklist {\r\n  position: absolute;\r\n  right: 0;\r\n  width: 200px;\r\n  background: rgba(255, 255, 255, 1);\r\n  border: 1px solid rgba(221, 221, 221, 1);\r\n  z-index: 10000;\r\n}\r\n.liMenu {\r\n  cursor: pointer;\r\n  text-align: center;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-size: 15px;\r\n}\r\n.liMenu:hover {\r\n  color: #fff;\r\n  background: #2f54eb;\r\n}\r\n</style>\r\n",
    "cssJson": [
      {
        ".mess-header": {
          "height": "38px",
          "background": "#fff",
          "padding": "0 20px",
          "box-sizing": "border-box",
          "border-bottom": "1px solid #e4e4e4",
          "span": {
            "height": "20px",
            "line-height": "20px",
            "&:nth-child(2)": {
              "margin": "0 12px"
            },
            "&:nth-child(4)": {
              "margin": "0 12px"
            }
          },
          ".mess-nav span": {
            "cursor": "pointer"
          },
          ".mess-nav img": {
            "width": "23px",
            "height": "23px"
          },
          ".mess-name": {
            "font-weight": "600"
          }
        },
        ".mess-checklist": {
          "position": "absolute",
          "right": "0",
          "width": "200px",
          "background": "rgba(255, 255, 255, 1)",
          "border": "1px solid rgba(221, 221, 221, 1)",
          "z-index": "10000"
        },
        ".liMenu": {
          "cursor": "pointer",
          "text-align": "center",
          "height": "40px",
          "line-height": "40px",
          "font-size": "15px"
        },
        ".liMenu:hover": {
          "color": "#fff",
          "background": "#2f54eb"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/components/DiDi-Payment/DiDiPayment.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"payment\" ref=\"scrollElement\">\n    <div\n      class=\"loadmore\"\n      v-if=\"hasMoreS\"\n      style=\"cursor: pointer\"\n      v-loading=\"listLoading\"\n      element-loading-spinner=\"el-icon-loading\"\n      @click=\"loadmorelist\"\n    >\n      {{ $t('Universal_0361') }}\n    </div>\n    <!-- 支付助手上去掉 -->\n    <!-- <div\n      class=\"loadmore nomore\"\n      v-if=\"!hasMoreS && noMoreShowFlg\"\n      element-loading-spinner=\"el-icon-loading\"\n    >\n      没有更多消息\n    </div> -->\n    <div class=\"box\" v-for=\"(obj, i) in paymentList\" :key=\"i\" \n     @contextmenu.prevent=\"_rightClick($event, obj, i)\"\n     v-show=\"obj.msgType\">\n      <p class=\"center\" style=\"margin-bottom: 10px\">\n        {{ formatTime(obj['msgBody'] || {}, i > 0 ? paymentList[i - 1]['msgBody'] || {} : {}) }}\n      </p>\n      <ul>\n        <li class=\"tilte\" style=\"margin-bottom: 5px\">\n          {{ formatTip(obj, true) }}\n        </li>\n        <li class=\"des center\">{{ formatTip(obj, false) }} ({{ obj['msgBody']['sbl'] }})</li>\n        <li class=\"num center\">{{ obj['msgBody']['amt'] }}</li>\n        <li class=\"des flex\">\n          <span>{{ $t('Universal_0186') }}</span>\n          <span>{{ formatRemarkValue(obj) }}</span>\n        </li>\n        <li class=\"des flex\">\n          <span>{{ $t('Universal_0001') }}</span>\n          <span>{{ formatMsgTime(obj['msgBody'] || {}) }}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport moment from 'moment';\nimport { isEqual } from 'lodash';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport { remote } from 'electron';\nimport Message from '@/services/message';\nimport { paymentId } from \"@/utils/const\"\nexport default {\n  name: 'PaymentDetail',\n  props: {},\n  data() {\n    return {\n      tableName: `m_${paymentId}`,\n      showLength: 30, //30条/页\n      paymentList: [],\n      topMsgOrder: '', //记录当前位置\n      hasMoreS: false,\n      listLoading: false, //加载中\n      noMoreShowFlg: false //只在加载更多后显示\n    };\n  },\n  computed: {\n    ...mapGetters(['gettersCurrentPayment']),\n    // chatList(){\n    //   return this.$store.state.chat?.chatList;\n    // },\n    // currentChat: {\n    //   get() {\n    //     return this.$store.state.chat?.currentChat;\n    //   },\n    // },\n    formatMsgTime() {\n      return function({ ct }) {\n        return ct ? moment(ct).format('YYYY-MM-DD HH:mm:ss') : '-';\n      };\n    },\n    formatTime() {\n      // 消息有效期为1年\n      return function({ ct }, msgBody = {}) {\n        if (!ct) return '';\n        let today = moment().format('YYYY-MM-DD'),\n          yes = moment()\n            .subtract(1, 'days')\n            .format('YYYY-MM-DD'),\n          payTime = moment(ct).format('YYYY-MM-DD');\n        // 5分钟内的消息，只需要显示1次时间\n        if (msgBody['ct'] && moment(ct).format('X') - moment(msgBody['ct']).format('X') < 5 * 60) {\n          return '';\n        } else {\n          if (today == payTime) {\n            return moment(ct).format('HH:mm');\n          } else if (yes == payTime) {\n            return `${this.$t('Universal_0022')} ${moment(ct).format('HH:mm')}`;\n          } else {\n            return moment(ct).format('MM-DD HH:mm');\n          }\n        }\n      };\n    },\n    formatTip() {\n      return function({ fromType }, isTitle) {\n        switch (fromType * 1) {\n        case 224: //群和单聊红包退款到账,\n        case 1001: //退款到账通知(平仓)\n          return isTitle ? this.$t('wallet_notice_0002') : this.$t('wallet_notice_0024');\n        case 225: //付款(内部转账),\n        case 226: //付款(内部转账),\n          return isTitle ? this.$t('wallet_notice_0017') : this.$t('Universal_0420');\n        case 227: //外部钱包充值到账\n        case 228: //场外交易到账,\n        case 1003: //收款到账通知-理财收益到账\n          return isTitle ? this.$t('wallet_notice_0006') : this.$t('wallet_list_0009');\n        case 1002: //还款凭证-抵押借币还款\n          return isTitle ? this.$t('wallet_notice_0011') : this.$t('wallet_notice_0025');\n        case 1004: //资金借出通知-理财借出\n          return this.$t('wallet_notice_0014');\n        default:\n          return isTitle ? this.$t('chat_0018') : '';\n        }\n      };\n    },\n    queryInfo() {\n      return this.$route.query;\n    },\n    // 备注\n    formatRemarkValue() {\n      return function(item = {}) {\n        let { rv } = item['msgBody'] || {},\n          fromType = item['fromType'];\n        switch (fromType * 1) {\n        case 224:\n          return this.$t('wallet_notice_0004');\n        case 225:\n          return this.$t('wallet_notice_0019', {value: rv});\n        case 226:\n          return this.$t('wallet_notice_0018', {value: rv});\n        case 227:\n          return this.$t('wallet_notice_0008');\n        case 228:\n          return this.$t('wallet_notice_0026');\n        case 1001:\n          // 产品确认 只展示变量\n          return `${rv}`;\n        case 1002:\n          return `${rv}`;\n          // return this.$t('wallet_notice_0013');\n        case 1003:\n          return `${rv}`;\n          // return this.$t('wallet_notice_0010');\n        case 1004:\n          return `${rv}`;\n          // return this.$t('wallet_notice_0016');\n        default:\n          return '-';\n        }\n      };\n    },\n    scrollElement() {\n      return this.$refs['scrollElement'];\n    }\n  },\n  created(){\n    let current = {\n      id: this.$paymentId,\n      sessionName: this.queryInfo?.item?.sessionName,\n      sessionIcon: this.queryInfo?.item?.sessionIcon,\n      targetType: 1, //单聊\n      uniqueCode: this.queryInfo?.item?.uniqueCode\n    };\n\n    this.$store.commit('SET_CURRENT_CHAT', current);\n  },\n  mounted() {\n    // console.log(this.queryInfo);\n    this.getFirstPage();\n  },\n  watch: {\n    gettersCurrentPayment: {\n      deep: true,\n      handler: async function(curPayment, oldCurPayment) {\n        if (curPayment && !isEqual(curPayment, oldCurPayment)) {\n          this.getFirstPage(curPayment);\n        }\n        // console.log(curPayment, oldCurPayment, this.paymentList);\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['actionCurrentPayment']),\n    scrollIntoView(scrollHeight) {\n      if (this.scrollElement) {\n        this.scrollElement.scrollTop = scrollHeight;\n      }\n    },\n    async setCurrentPaymentListData(list) {\n      this.hasMoreS = true;\n      let beforeHeight = this.scrollElement?.scrollHeight || 0;\n      if (list.length < this.showLength) {\n        this.hasMoreS = false;\n        this.noMoreShowFlg = true;\n      }\n      this.paymentList.unshift(...list);\n      this.listLoading = false;\n      if (list.length == this.showLength) {\n        this.setMoreStatus();\n      }\n      await this.$nextTick();\n      // console.log(beforeHeight, this.scrollElement.scrollHeight);\n      this.scrollIntoView(this.scrollElement?.scrollHeight || 0 - beforeHeight);\n    },\n    // 之前单聊的方法\n    async loadmorelist() {\n      this.noMoreShowFlg = false;\n      try {\n        this.listLoading = true;\n        if (this.paymentList.length > 0) {\n          this.topMsgOrder = this.paymentList[0].msgOrder;\n        }\n        let whereClause = `msg_order < ${this.topMsgOrder}`;\n        let list = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], whereClause);\n        this.setCurrentPaymentListData(list);\n      } catch (err) {\n        console.error(err, 'loadmorelist');\n      }\n      this.listLoading = false;\n    },\n    async getFirstPage(curPayment) {\n      // 不查库\n      if (curPayment) {\n        this.paymentList.push(curPayment);\n        await this.$nextTick();\n        this.scrollIntoView(this.scrollElement?.scrollHeight || 0);\n      } else {\n        this.listLoading = true;\n        const list = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], this.topMsgOrder);\n        if (list.length > 0) {\n          this.topMsgOrder = list[0].msgOrder;\n        }\n        this.setCurrentPaymentListData(list);\n      }\n    },\n    //单独显示 再查询下一页数据 控制noMoreShowFlg 显示\n    async setMoreStatus() {\n      if (this.paymentList.length > 0) {\n        let t = this.paymentList[0].msgOrder;\n        let arr = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], `msg_order < ${t}`);\n        if (arr.length == 0) {\n          this.hasMoreS = false;\n          this.noMoreShowFlg = true;\n        }\n      }\n    },\n    async delMsg(item, index) {\n      const message = new Message(item.fromId);\n      await message.deleteMessageByMsgId(item.msgId);\n      this.paymentList.splice(index, 1);\n      this.$store.dispatch('GET_LAST_MSG_LIST');\n    },\n    _rightClick(e, item, index) {\n      let that = this;\n      if (e) {\n        e.preventDefault();\n      }\n      let rightClickOptions = [\n        {\n          name: this.$t('chat_0032'),\n          enabled: true,\n          fun: () => {\n            that.delMsg(item, index);\n          }\n        }\n      ];\n      return that.$RightClick(rightClickOptions).popup({\n        window: remote.getCurrentWindow()\n      });\n    }\n  },\n  beforeDestroy() {\n    sessionStorage.removeItem('paymentId');\n  }\n};\n</script>",
    "originData": "<template>\n  <div class=\"payment\" ref=\"scrollElement\">\n    <div\n      class=\"loadmore\"\n      v-if=\"hasMoreS\"\n      style=\"cursor: pointer\"\n      v-loading=\"listLoading\"\n      element-loading-spinner=\"el-icon-loading\"\n      @click=\"loadmorelist\"\n    >\n      {{ $t('Universal_0361') }}\n    </div>\n    <!-- 支付助手上去掉 -->\n    <!-- <div\n      class=\"loadmore nomore\"\n      v-if=\"!hasMoreS && noMoreShowFlg\"\n      element-loading-spinner=\"el-icon-loading\"\n    >\n      没有更多消息\n    </div> -->\n    <div class=\"box\" v-for=\"(obj, i) in paymentList\" :key=\"i\" \n     @contextmenu.prevent=\"_rightClick($event, obj, i)\"\n     v-show=\"obj.msgType\">\n      <p class=\"center\" style=\"margin-bottom: 10px\">\n        {{ formatTime(obj['msgBody'] || {}, i > 0 ? paymentList[i - 1]['msgBody'] || {} : {}) }}\n      </p>\n      <ul>\n        <li class=\"tilte\" style=\"margin-bottom: 5px\">\n          {{ formatTip(obj, true) }}\n        </li>\n        <li class=\"des center\">{{ formatTip(obj, false) }} ({{ obj['msgBody']['sbl'] }})</li>\n        <li class=\"num center\">{{ obj['msgBody']['amt'] }}</li>\n        <li class=\"des flex\">\n          <span>{{ $t('Universal_0186') }}</span>\n          <span>{{ formatRemarkValue(obj) }}</span>\n        </li>\n        <li class=\"des flex\">\n          <span>{{ $t('Universal_0001') }}</span>\n          <span>{{ formatMsgTime(obj['msgBody'] || {}) }}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport moment from 'moment';\nimport { isEqual } from 'lodash';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport { remote } from 'electron';\nimport Message from '@/services/message';\nimport { paymentId } from \"@/utils/const\"\nexport default {\n  name: 'PaymentDetail',\n  props: {},\n  data() {\n    return {\n      tableName: `m_${paymentId}`,\n      showLength: 30, //30条/页\n      paymentList: [],\n      topMsgOrder: '', //记录当前位置\n      hasMoreS: false,\n      listLoading: false, //加载中\n      noMoreShowFlg: false //只在加载更多后显示\n    };\n  },\n  computed: {\n    ...mapGetters(['gettersCurrentPayment']),\n    // chatList(){\n    //   return this.$store.state.chat?.chatList;\n    // },\n    // currentChat: {\n    //   get() {\n    //     return this.$store.state.chat?.currentChat;\n    //   },\n    // },\n    formatMsgTime() {\n      return function({ ct }) {\n        return ct ? moment(ct).format('YYYY-MM-DD HH:mm:ss') : '-';\n      };\n    },\n    formatTime() {\n      // 消息有效期为1年\n      return function({ ct }, msgBody = {}) {\n        if (!ct) return '';\n        let today = moment().format('YYYY-MM-DD'),\n          yes = moment()\n            .subtract(1, 'days')\n            .format('YYYY-MM-DD'),\n          payTime = moment(ct).format('YYYY-MM-DD');\n        // 5分钟内的消息，只需要显示1次时间\n        if (msgBody['ct'] && moment(ct).format('X') - moment(msgBody['ct']).format('X') < 5 * 60) {\n          return '';\n        } else {\n          if (today == payTime) {\n            return moment(ct).format('HH:mm');\n          } else if (yes == payTime) {\n            return `${this.$t('Universal_0022')} ${moment(ct).format('HH:mm')}`;\n          } else {\n            return moment(ct).format('MM-DD HH:mm');\n          }\n        }\n      };\n    },\n    formatTip() {\n      return function({ fromType }, isTitle) {\n        switch (fromType * 1) {\n        case 224: //群和单聊红包退款到账,\n        case 1001: //退款到账通知(平仓)\n          return isTitle ? this.$t('wallet_notice_0002') : this.$t('wallet_notice_0024');\n        case 225: //付款(内部转账),\n        case 226: //付款(内部转账),\n          return isTitle ? this.$t('wallet_notice_0017') : this.$t('Universal_0420');\n        case 227: //外部钱包充值到账\n        case 228: //场外交易到账,\n        case 1003: //收款到账通知-理财收益到账\n          return isTitle ? this.$t('wallet_notice_0006') : this.$t('wallet_list_0009');\n        case 1002: //还款凭证-抵押借币还款\n          return isTitle ? this.$t('wallet_notice_0011') : this.$t('wallet_notice_0025');\n        case 1004: //资金借出通知-理财借出\n          return this.$t('wallet_notice_0014');\n        default:\n          return isTitle ? this.$t('chat_0018') : '';\n        }\n      };\n    },\n    queryInfo() {\n      return this.$route.query;\n    },\n    // 备注\n    formatRemarkValue() {\n      return function(item = {}) {\n        let { rv } = item['msgBody'] || {},\n          fromType = item['fromType'];\n        switch (fromType * 1) {\n        case 224:\n          return this.$t('wallet_notice_0004');\n        case 225:\n          return this.$t('wallet_notice_0019', {value: rv});\n        case 226:\n          return this.$t('wallet_notice_0018', {value: rv});\n        case 227:\n          return this.$t('wallet_notice_0008');\n        case 228:\n          return this.$t('wallet_notice_0026');\n        case 1001:\n          // 产品确认 只展示变量\n          return `${rv}`;\n        case 1002:\n          return `${rv}`;\n          // return this.$t('wallet_notice_0013');\n        case 1003:\n          return `${rv}`;\n          // return this.$t('wallet_notice_0010');\n        case 1004:\n          return `${rv}`;\n          // return this.$t('wallet_notice_0016');\n        default:\n          return '-';\n        }\n      };\n    },\n    scrollElement() {\n      return this.$refs['scrollElement'];\n    }\n  },\n  created(){\n    let current = {\n      id: this.$paymentId,\n      sessionName: this.queryInfo?.item?.sessionName,\n      sessionIcon: this.queryInfo?.item?.sessionIcon,\n      targetType: 1, //单聊\n      uniqueCode: this.queryInfo?.item?.uniqueCode\n    };\n\n    this.$store.commit('SET_CURRENT_CHAT', current);\n  },\n  mounted() {\n    // console.log(this.queryInfo);\n    this.getFirstPage();\n  },\n  watch: {\n    gettersCurrentPayment: {\n      deep: true,\n      handler: async function(curPayment, oldCurPayment) {\n        if (curPayment && !isEqual(curPayment, oldCurPayment)) {\n          this.getFirstPage(curPayment);\n        }\n        // console.log(curPayment, oldCurPayment, this.paymentList);\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['actionCurrentPayment']),\n    scrollIntoView(scrollHeight) {\n      if (this.scrollElement) {\n        this.scrollElement.scrollTop = scrollHeight;\n      }\n    },\n    async setCurrentPaymentListData(list) {\n      this.hasMoreS = true;\n      let beforeHeight = this.scrollElement?.scrollHeight || 0;\n      if (list.length < this.showLength) {\n        this.hasMoreS = false;\n        this.noMoreShowFlg = true;\n      }\n      this.paymentList.unshift(...list);\n      this.listLoading = false;\n      if (list.length == this.showLength) {\n        this.setMoreStatus();\n      }\n      await this.$nextTick();\n      // console.log(beforeHeight, this.scrollElement.scrollHeight);\n      this.scrollIntoView(this.scrollElement?.scrollHeight || 0 - beforeHeight);\n    },\n    // 之前单聊的方法\n    async loadmorelist() {\n      this.noMoreShowFlg = false;\n      try {\n        this.listLoading = true;\n        if (this.paymentList.length > 0) {\n          this.topMsgOrder = this.paymentList[0].msgOrder;\n        }\n        let whereClause = `msg_order < ${this.topMsgOrder}`;\n        let list = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], whereClause);\n        this.setCurrentPaymentListData(list);\n      } catch (err) {\n        console.error(err, 'loadmorelist');\n      }\n      this.listLoading = false;\n    },\n    async getFirstPage(curPayment) {\n      // 不查库\n      if (curPayment) {\n        this.paymentList.push(curPayment);\n        await this.$nextTick();\n        this.scrollIntoView(this.scrollElement?.scrollHeight || 0);\n      } else {\n        this.listLoading = true;\n        const list = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], this.topMsgOrder);\n        if (list.length > 0) {\n          this.topMsgOrder = list[0].msgOrder;\n        }\n        this.setCurrentPaymentListData(list);\n      }\n    },\n    //单独显示 再查询下一页数据 控制noMoreShowFlg 显示\n    async setMoreStatus() {\n      if (this.paymentList.length > 0) {\n        let t = this.paymentList[0].msgOrder;\n        let arr = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], `msg_order < ${t}`);\n        if (arr.length == 0) {\n          this.hasMoreS = false;\n          this.noMoreShowFlg = true;\n        }\n      }\n    },\n    async delMsg(item, index) {\n      const message = new Message(item.fromId);\n      await message.deleteMessageByMsgId(item.msgId);\n      this.paymentList.splice(index, 1);\n      this.$store.dispatch('GET_LAST_MSG_LIST');\n    },\n    _rightClick(e, item, index) {\n      let that = this;\n      if (e) {\n        e.preventDefault();\n      }\n      let rightClickOptions = [\n        {\n          name: this.$t('chat_0032'),\n          enabled: true,\n          fun: () => {\n            that.delMsg(item, index);\n          }\n        }\n      ];\n      return that.$RightClick(rightClickOptions).popup({\n        window: remote.getCurrentWindow()\n      });\n    }\n  },\n  beforeDestroy() {\n    sessionStorage.removeItem('paymentId');\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.payment {\n  overflow: auto;\n  height: calc(100vh - 60px);\n  padding: 0 20px;\n  .loadmore {\n    font-size: 12px;\n    text-align: center;\n    color: #2f54eb;\n  }\n\n  .nomore {\n    color: #666;\n  }\n  .box {\n    min-width: 300px;\n    width: 100%;\n    margin: 20px auto;\n    // height: 125px;\n    color: #333333;\n    .center {\n      text-align: center;\n    }\n    > p {\n      color: #999999;\n      font-size: 12px;\n      line-height: 18px;\n    }\n    ul {\n      padding: 15px 15px 10px 15px;\n      background: #ffffff;\n      color: #999999;\n      border-radius: 8px;\n      list-style: none;\n      font-size: 12px;\n      overflow: hidden;\n      // > * {\n      //   overflow: hidden;\n      //   text-overflow: ellipsis;\n      //   white-space: nowrap;\n      // }\n      .tilte {\n        height: 20px;\n        line-height: 20px;\n        font-size: 14px;\n        color: #333;\n        font-weight: 400;\n      }\n      .num {\n        font-size: 24px;\n        margin-bottom: 10px;\n        height: 21px;\n        font-weight: 700;\n        line-height: 21px;\n        font-weight: 700;\n        color: #333333;\n      }\n      .des {\n        line-height: 18px;\n        font-size: 12px;\n        margin-bottom: 5px;\n        > span {\n          &:first-child {\n            word-break: keep-all;\n          }\n          &:last-child {\n            color: #333;\n            word-break: break-all;\n            margin-left: 5px;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".payment": {
          "overflow": "auto",
          "height": "calc(100vh - 60px)",
          "padding": "0 20px",
          ".loadmore": {
            "font-size": "12px",
            "text-align": "center",
            "color": "#2f54eb"
          },
          ".nomore": {
            "color": "#666"
          },
          ".box": {
            "min-width": "300px",
            "width": "100%",
            "margin": "20px auto",
            "color": "#333333",
            ".center": {
              "text-align": "center"
            },
            "> p": {
              "color": "#999999",
              "font-size": "12px",
              "line-height": "18px"
            },
            "ul": {
              "padding": "15px 15px 10px 15px",
              "background": "#ffffff",
              "color": "#999999",
              "border-radius": "8px",
              "list-style": "none",
              "font-size": "12px",
              "overflow": "hidden",
              ".tilte": {
                "height": "20px",
                "line-height": "20px",
                "font-size": "14px",
                "color": "#333",
                "font-weight": "400"
              },
              ".num": {
                "font-size": "24px",
                "margin-bottom": "10px",
                "height": "21px",
                "font-weight": "700",
                "line-height": "21px",
                "color": "#333333"
              },
              ".des": {
                "line-height": "18px",
                "font-size": "12px",
                "margin-bottom": "5px",
                "> span": {
                  "&:first-child": {
                    "word-break": "keep-all"
                  },
                  "&:last-child": {
                    "color": "#333",
                    "word-break": "break-all",
                    "margin-left": "5px"
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/components/DiDi-Payment/ActivityAssistant.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"payment\" ref=\"scrollElement\">\n    <div\n      class=\"loadmore\"\n      v-if=\"hasMoreS\"\n      style=\"cursor: pointer\"\n      v-loading=\"listLoading\"\n      element-loading-spinner=\"el-icon-loading\"\n      @click=\"loadmorelist\"\n    >\n      {{ $t('Universal_0361') }}\n    </div>\n    <!-- 支付助手上去掉 -->\n    <!-- <div\n      class=\"loadmore nomore\"\n      v-if=\"!hasMoreS && noMoreShowFlg\"\n      element-loading-spinner=\"el-icon-loading\"\n    >\n      没有更多消息\n    </div> -->\n    <div class=\"box\" v-for=\"(obj, i) in paymentList\" :key=\"i\" @contextmenu.prevent=\"_rightClick($event, obj, i)\">\n      <p class=\"center\" style=\"margin-bottom: 10px\">\n        {{ obj.timestamp | diffTimeHand }}\n      </p>\n      <ul>\n        <li class=\"tilte\" style=\"margin-bottom: 5px\">{{obj.refMsgBody.activityName}}</li>\n        <li class=\"des flex\">\n          <span>{{obj.refMsgBody.text}}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport moment from 'moment';\nimport { isEqual } from 'lodash';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport { remote } from 'electron';\nimport Message from '@/services/message';\nimport { ActAssistantId } from \"@/utils/const\"\nimport { diffTimeInChat} from \"@/utils\";\nexport default {\n  name: 'PaymentDetail',\n  props: {},\n  data() {\n    return {\n      tableName: `m_${ActAssistantId}`,\n      showLength: 30, //30条/页\n      paymentList: [],\n      topMsgOrder: '', //记录当前位置\n      hasMoreS: false,\n      listLoading: false, //加载中\n      noMoreShowFlg: false //只在加载更多后显示\n    };\n  },\n  filters: {\n    diffTimeHand(val) {\n      return diffTimeInChat(val);\n    }\n  },\n  computed: {\n    ...mapGetters(['getActAssistant']),\n    // chatList(){\n    //   return this.$store.state.chat?.chatList;\n    // },\n    // currentChat: {\n    //   get() {\n    //     return this.$store.state.chat?.currentChat;\n    //   },\n    // },\n    formatMsgTime() {\n      return function({ ct }) {\n        return ct ? moment(ct).format('YYYY-MM-DD HH:mm:ss') : '-';\n      };\n    },\n    formatTime() {\n      // 消息有效期为1年\n      return function({ ct }, msgBody = {}) {\n        if (!ct) return '';\n        let today = moment().format('YYYY-MM-DD'),\n          yes = moment()\n            .subtract(1, 'days')\n            .format('YYYY-MM-DD'),\n          payTime = moment(ct).format('YYYY-MM-DD');\n        // 5分钟内的消息，只需要显示1次时间\n        if (msgBody['ct'] && moment(ct).format('X') - moment(msgBody['ct']).format('X') < 5 * 60) {\n          return '';\n        } else {\n          if (today == payTime) {\n            return moment(ct).format('HH:mm');\n          } else if (yes == payTime) {\n            return `${this.$t('Universal_0022')} ${moment(ct).format('HH:mm')}`;\n          } else {\n            return moment(ct).format('MM-DD HH:mm');\n          }\n        }\n      };\n    },\n    formatTip() {\n      return function({ fromType }, isTitle) {\n        switch (fromType * 1) {\n        case 224: //群和单聊红包退款到账,\n        case 1001: //退款到账通知(平仓)\n          return isTitle ? this.$t('wallet_notice_0002') : this.$t('wallet_notice_0024');\n        case 225: //付款(内部转账),\n        case 226: //付款(内部转账),\n          return isTitle ? this.$t('wallet_notice_0017') : this.$t('Universal_0420');\n        case 227: //外部钱包充值到账\n        case 228: //场外交易到账,\n        case 1003: //收款到账通知-理财收益到账\n          return isTitle ? this.$t('wallet_notice_0006') : this.$t('wallet_list_0009');\n        case 1002: //还款凭证-抵押借币还款\n          return isTitle ? this.$t('wallet_notice_0011') : this.$t('wallet_notice_0025');\n        case 1004: //资金借出通知-理财借出\n          return this.$t('wallet_notice_0014');\n        default:\n          return isTitle ? this.$t('chat_0018') : '';\n        }\n      };\n    },\n    queryInfo() {\n      return this.$route.query;\n    },\n    scrollElement() {\n      return this.$refs['scrollElement'];\n    }\n  },\n  created(){\n    let current = {\n      id: ActAssistantId,\n      sessionName: this.queryInfo?.item?.sessionName,\n      sessionIcon: this.queryInfo?.item?.sessionIcon,\n      targetType: 1, //单聊\n      uniqueCode: this.queryInfo?.item?.uniqueCode\n    };\n\n    this.$store.commit('SET_CURRENT_CHAT', current);\n  },\n  mounted() {\n    // console.log(this.queryInfo);\n    this.getFirstPage();\n  },\n  watch: {\n    getActAssistant: {\n      deep: true,\n      handler: async function(curPayment, oldCurPayment) {\n        if (curPayment && !isEqual(curPayment, oldCurPayment)) {\n          this.getFirstPage(curPayment);\n        }\n        // console.log(curPayment, oldCurPayment, this.paymentList);\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['currentActAssistant']),\n    scrollIntoView(scrollHeight) {\n      if (this.scrollElement) {\n        this.scrollElement.scrollTop = scrollHeight;\n      }\n    },\n    async setCurrentPaymentListData(list) {\n      this.hasMoreS = true;\n      let beforeHeight = this.scrollElement?.scrollHeight || 0;\n      if (list.length < this.showLength) {\n        this.hasMoreS = false;\n        this.noMoreShowFlg = true;\n      }\n      this.paymentList.unshift(...list);\n      this.listLoading = false;\n      if (list.length == this.showLength) {\n        this.setMoreStatus();\n      }\n      await this.$nextTick();\n      // console.log(beforeHeight, this.scrollElement.scrollHeight);\n      this.scrollIntoView(this.scrollElement?.scrollHeight || 0 - beforeHeight);\n    },\n    // 之前单聊的方法\n    async loadmorelist() {\n      this.noMoreShowFlg = false;\n      try {\n        this.listLoading = true;\n        if (this.paymentList.length > 0) {\n          this.topMsgOrder = this.paymentList[0].msgOrder;\n        }\n        let whereClause = `msg_order < ${this.topMsgOrder}`;\n        let list = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], whereClause);\n        this.setCurrentPaymentListData(list);\n      } catch (err) {\n        console.error(err, 'loadmorelist');\n      }\n      this.listLoading = false;\n    },\n    async getFirstPage(curPayment) {\n      // 不查库\n      if (curPayment) {\n        this.paymentList.push(curPayment);\n        await this.$nextTick();\n        this.scrollIntoView(this.scrollElement?.scrollHeight || 0);\n      } else {\n        this.listLoading = true;\n        const list = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], this.topMsgOrder);\n        if (list.length > 0) {\n          this.topMsgOrder = list[0].msgOrder;\n        }\n        this.setCurrentPaymentListData(list);\n      }\n      if(this.paymentList.length){\n        this.paymentList.forEach(item=>{\n          if(item.refMsgBody?.text && item.refMsgBody?.createdOn){\n            console.log(item.refMsgBody.text,'wwwww')\n            item.refMsgBody.createdOn = moment(Number(item.refMsgBody.createdOn)).format('yyyy-MM-DD HH:mm:ss')\n            item.refMsgBody.text = item.refMsgBody.text.replace('{0}',item.refMsgBody.createdOn)\n          }\n        })\n      }\n    },\n    //单独显示 再查询下一页数据 控制noMoreShowFlg 显示\n    async setMoreStatus() {\n      if (this.paymentList.length > 0) {\n        let t = this.paymentList[0].msgOrder;\n        let arr = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], `msg_order < ${t}`);\n        if (arr.length == 0) {\n          this.hasMoreS = false;\n          this.noMoreShowFlg = true;\n        }\n      }\n    },\n    async delMsg(item, index) {\n      const message = new Message(item.fromId);\n      await message.deleteMessageByMsgId(item.msgId);\n      this.paymentList.splice(index, 1);\n      this.$store.dispatch('GET_LAST_MSG_LIST');\n    },\n    _rightClick(e, item, index) {\n      let that = this;\n      if (e) {\n        e.preventDefault();\n      }\n      let rightClickOptions = [\n        {\n          name: this.$t('chat_0032'),\n          enabled: true,\n          fun: () => {\n            that.delMsg(item, index);\n          }\n        }\n      ];\n      return that.$RightClick(rightClickOptions).popup({\n        window: remote.getCurrentWindow()\n      });\n    }\n  },\n  beforeDestroy() {\n    sessionStorage.removeItem('paymentId');\n  }\n};\n</script>",
    "originData": "<template>\n  <div class=\"payment\" ref=\"scrollElement\">\n    <div\n      class=\"loadmore\"\n      v-if=\"hasMoreS\"\n      style=\"cursor: pointer\"\n      v-loading=\"listLoading\"\n      element-loading-spinner=\"el-icon-loading\"\n      @click=\"loadmorelist\"\n    >\n      {{ $t('Universal_0361') }}\n    </div>\n    <!-- 支付助手上去掉 -->\n    <!-- <div\n      class=\"loadmore nomore\"\n      v-if=\"!hasMoreS && noMoreShowFlg\"\n      element-loading-spinner=\"el-icon-loading\"\n    >\n      没有更多消息\n    </div> -->\n    <div class=\"box\" v-for=\"(obj, i) in paymentList\" :key=\"i\" @contextmenu.prevent=\"_rightClick($event, obj, i)\">\n      <p class=\"center\" style=\"margin-bottom: 10px\">\n        {{ obj.timestamp | diffTimeHand }}\n      </p>\n      <ul>\n        <li class=\"tilte\" style=\"margin-bottom: 5px\">{{obj.refMsgBody.activityName}}</li>\n        <li class=\"des flex\">\n          <span>{{obj.refMsgBody.text}}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport moment from 'moment';\nimport { isEqual } from 'lodash';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport { remote } from 'electron';\nimport Message from '@/services/message';\nimport { ActAssistantId } from \"@/utils/const\"\nimport { diffTimeInChat} from \"@/utils\";\nexport default {\n  name: 'PaymentDetail',\n  props: {},\n  data() {\n    return {\n      tableName: `m_${ActAssistantId}`,\n      showLength: 30, //30条/页\n      paymentList: [],\n      topMsgOrder: '', //记录当前位置\n      hasMoreS: false,\n      listLoading: false, //加载中\n      noMoreShowFlg: false //只在加载更多后显示\n    };\n  },\n  filters: {\n    diffTimeHand(val) {\n      return diffTimeInChat(val);\n    }\n  },\n  computed: {\n    ...mapGetters(['getActAssistant']),\n    // chatList(){\n    //   return this.$store.state.chat?.chatList;\n    // },\n    // currentChat: {\n    //   get() {\n    //     return this.$store.state.chat?.currentChat;\n    //   },\n    // },\n    formatMsgTime() {\n      return function({ ct }) {\n        return ct ? moment(ct).format('YYYY-MM-DD HH:mm:ss') : '-';\n      };\n    },\n    formatTime() {\n      // 消息有效期为1年\n      return function({ ct }, msgBody = {}) {\n        if (!ct) return '';\n        let today = moment().format('YYYY-MM-DD'),\n          yes = moment()\n            .subtract(1, 'days')\n            .format('YYYY-MM-DD'),\n          payTime = moment(ct).format('YYYY-MM-DD');\n        // 5分钟内的消息，只需要显示1次时间\n        if (msgBody['ct'] && moment(ct).format('X') - moment(msgBody['ct']).format('X') < 5 * 60) {\n          return '';\n        } else {\n          if (today == payTime) {\n            return moment(ct).format('HH:mm');\n          } else if (yes == payTime) {\n            return `${this.$t('Universal_0022')} ${moment(ct).format('HH:mm')}`;\n          } else {\n            return moment(ct).format('MM-DD HH:mm');\n          }\n        }\n      };\n    },\n    formatTip() {\n      return function({ fromType }, isTitle) {\n        switch (fromType * 1) {\n        case 224: //群和单聊红包退款到账,\n        case 1001: //退款到账通知(平仓)\n          return isTitle ? this.$t('wallet_notice_0002') : this.$t('wallet_notice_0024');\n        case 225: //付款(内部转账),\n        case 226: //付款(内部转账),\n          return isTitle ? this.$t('wallet_notice_0017') : this.$t('Universal_0420');\n        case 227: //外部钱包充值到账\n        case 228: //场外交易到账,\n        case 1003: //收款到账通知-理财收益到账\n          return isTitle ? this.$t('wallet_notice_0006') : this.$t('wallet_list_0009');\n        case 1002: //还款凭证-抵押借币还款\n          return isTitle ? this.$t('wallet_notice_0011') : this.$t('wallet_notice_0025');\n        case 1004: //资金借出通知-理财借出\n          return this.$t('wallet_notice_0014');\n        default:\n          return isTitle ? this.$t('chat_0018') : '';\n        }\n      };\n    },\n    queryInfo() {\n      return this.$route.query;\n    },\n    scrollElement() {\n      return this.$refs['scrollElement'];\n    }\n  },\n  created(){\n    let current = {\n      id: ActAssistantId,\n      sessionName: this.queryInfo?.item?.sessionName,\n      sessionIcon: this.queryInfo?.item?.sessionIcon,\n      targetType: 1, //单聊\n      uniqueCode: this.queryInfo?.item?.uniqueCode\n    };\n\n    this.$store.commit('SET_CURRENT_CHAT', current);\n  },\n  mounted() {\n    // console.log(this.queryInfo);\n    this.getFirstPage();\n  },\n  watch: {\n    getActAssistant: {\n      deep: true,\n      handler: async function(curPayment, oldCurPayment) {\n        if (curPayment && !isEqual(curPayment, oldCurPayment)) {\n          this.getFirstPage(curPayment);\n        }\n        // console.log(curPayment, oldCurPayment, this.paymentList);\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['currentActAssistant']),\n    scrollIntoView(scrollHeight) {\n      if (this.scrollElement) {\n        this.scrollElement.scrollTop = scrollHeight;\n      }\n    },\n    async setCurrentPaymentListData(list) {\n      this.hasMoreS = true;\n      let beforeHeight = this.scrollElement?.scrollHeight || 0;\n      if (list.length < this.showLength) {\n        this.hasMoreS = false;\n        this.noMoreShowFlg = true;\n      }\n      this.paymentList.unshift(...list);\n      this.listLoading = false;\n      if (list.length == this.showLength) {\n        this.setMoreStatus();\n      }\n      await this.$nextTick();\n      // console.log(beforeHeight, this.scrollElement.scrollHeight);\n      this.scrollIntoView(this.scrollElement?.scrollHeight || 0 - beforeHeight);\n    },\n    // 之前单聊的方法\n    async loadmorelist() {\n      this.noMoreShowFlg = false;\n      try {\n        this.listLoading = true;\n        if (this.paymentList.length > 0) {\n          this.topMsgOrder = this.paymentList[0].msgOrder;\n        }\n        let whereClause = `msg_order < ${this.topMsgOrder}`;\n        let list = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], whereClause);\n        this.setCurrentPaymentListData(list);\n      } catch (err) {\n        console.error(err, 'loadmorelist');\n      }\n      this.listLoading = false;\n    },\n    async getFirstPage(curPayment) {\n      // 不查库\n      if (curPayment) {\n        this.paymentList.push(curPayment);\n        await this.$nextTick();\n        this.scrollIntoView(this.scrollElement?.scrollHeight || 0);\n      } else {\n        this.listLoading = true;\n        const list = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], this.topMsgOrder);\n        if (list.length > 0) {\n          this.topMsgOrder = list[0].msgOrder;\n        }\n        this.setCurrentPaymentListData(list);\n      }\n      if(this.paymentList.length){\n        this.paymentList.forEach(item=>{\n          if(item.refMsgBody?.text && item.refMsgBody?.createdOn){\n            console.log(item.refMsgBody.text,'wwwww')\n            item.refMsgBody.createdOn = moment(Number(item.refMsgBody.createdOn)).format('yyyy-MM-DD HH:mm:ss')\n            item.refMsgBody.text = item.refMsgBody.text.replace('{0}',item.refMsgBody.createdOn)\n          }\n        })\n      }\n    },\n    //单独显示 再查询下一页数据 控制noMoreShowFlg 显示\n    async setMoreStatus() {\n      if (this.paymentList.length > 0) {\n        let t = this.paymentList[0].msgOrder;\n        let arr = await SQLUtils.selectSingleChatList(this.queryInfo['fromId'], `msg_order < ${t}`);\n        if (arr.length == 0) {\n          this.hasMoreS = false;\n          this.noMoreShowFlg = true;\n        }\n      }\n    },\n    async delMsg(item, index) {\n      const message = new Message(item.fromId);\n      await message.deleteMessageByMsgId(item.msgId);\n      this.paymentList.splice(index, 1);\n      this.$store.dispatch('GET_LAST_MSG_LIST');\n    },\n    _rightClick(e, item, index) {\n      let that = this;\n      if (e) {\n        e.preventDefault();\n      }\n      let rightClickOptions = [\n        {\n          name: this.$t('chat_0032'),\n          enabled: true,\n          fun: () => {\n            that.delMsg(item, index);\n          }\n        }\n      ];\n      return that.$RightClick(rightClickOptions).popup({\n        window: remote.getCurrentWindow()\n      });\n    }\n  },\n  beforeDestroy() {\n    sessionStorage.removeItem('paymentId');\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.payment {\n  overflow: auto;\n  height: calc(100vh - 60px);\n  padding: 0 20px;\n  .loadmore {\n    font-size: 12px;\n    text-align: center;\n    color: #2f54eb;\n  }\n\n  .nomore {\n    color: #666;\n  }\n  .box {\n    min-width: 300px;\n    width: 100%;\n    margin: 20px auto;\n    // height: 125px;\n    color: #333333;\n    .center {\n      text-align: center;\n    }\n    > p {\n      color: #999999;\n      font-size: 12px;\n      line-height: 18px;\n    }\n    ul {\n      padding: 15px 15px 10px 15px;\n      background: #ffffff;\n      color: #999999;\n      border-radius: 8px;\n      list-style: none;\n      font-size: 12px;\n      overflow: hidden;\n      // > * {\n      //   overflow: hidden;\n      //   text-overflow: ellipsis;\n      //   white-space: nowrap;\n      // }\n      .tilte {\n        padding-left: 25px;\n        height: 20px;\n        line-height: 20px;\n        font-size: 15px;\n        color: #333;\n        font-weight: 400;\n        border-bottom: #dedede solid 1px;\n        padding-bottom: 10px;\n        background: url('../../../../assets/images/corn.png') no-repeat left top ;\n        background-size: 20px 20px;\n      }\n      .num {\n        font-size: 24px;\n        margin-bottom: 10px;\n        height: 21px;\n        font-weight: 700;\n        line-height: 21px;\n        font-weight: 700;\n        color: #333333;\n      }\n      .des {\n        line-height: 18px;\n        font-size: 12px;\n        margin-bottom: 5px;\n        > span {\n          &:first-child {\n            word-break: keep-all;\n          }\n          &:last-child {\n            color: #333;\n            word-break: break-all;\n            margin-left: 5px;\n            margin-top: 10px;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".payment": {
          "overflow": "auto",
          "height": "calc(100vh - 60px)",
          "padding": "0 20px",
          ".loadmore": {
            "font-size": "12px",
            "text-align": "center",
            "color": "#2f54eb"
          },
          ".nomore": {
            "color": "#666"
          },
          ".box": {
            "min-width": "300px",
            "width": "100%",
            "margin": "20px auto",
            "color": "#333333",
            ".center": {
              "text-align": "center"
            },
            "> p": {
              "color": "#999999",
              "font-size": "12px",
              "line-height": "18px"
            },
            "ul": {
              "padding": "15px 15px 10px 15px",
              "background": "#ffffff",
              "color": "#999999",
              "border-radius": "8px",
              "list-style": "none",
              "font-size": "12px",
              "overflow": "hidden",
              ".tilte": {
                "padding-left": "25px",
                "height": "20px",
                "line-height": "20px",
                "font-size": "15px",
                "color": "#333",
                "font-weight": "400",
                "border-bottom": "#dedede solid 1px",
                "padding-bottom": "10px",
                "background": "url('../../../../assets/images/corn.png') no-repeat left top",
                "background-size": "20px 20px"
              },
              ".num": {
                "font-size": "24px",
                "margin-bottom": "10px",
                "height": "21px",
                "font-weight": "700",
                "line-height": "21px",
                "color": "#333333"
              },
              ".des": {
                "line-height": "18px",
                "font-size": "12px",
                "margin-bottom": "5px",
                "> span": {
                  "&:first-child": {
                    "word-break": "keep-all"
                  },
                  "&:last-child": {
                    "color": "#333",
                    "word-break": "break-all",
                    "margin-left": "5px",
                    "margin-top": "10px"
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberCard/MemberInfo.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style scoped>"
    },
    "importInfo": {
      "0": "@import '../../assets/css/base.css';"
    },
    "keepContent": "<template>\r\n  <div class=\"member-card noDrag\" @click=\"memberInfoClick($event)\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"5\">\r\n        <span @click=\"openImgView\">\r\n            <MemberIcon    \r\n              :image=\"userInfo.userHeadImg\" \r\n              iconType=\"medium\" \r\n              :userRank=\"userInfo.userRank\" \r\n              :vipType=\"userInfo.vipType\" \r\n            />\r\n        </span>\r\n      </el-col>\r\n      <el-col :span=\"18\" class=\"mar-t-5\">\r\n        <el-row :gutter=\"20\" class=\"item-spacing\">\r\n          <el-col :span=\"24\">\r\n            <div class=\"user-nick-name\" :title=\"userInfo.userNickName\">\r\n              <span v-show=\"!isCurrentUser\" class=\"friend-nick-name\">{{ userInfo.userNickName }}</span>\r\n              <editable-input\r\n                  v-show=\"isCurrentUser\"\r\n                  class=\"mar-b--4\"\r\n                  :target-value=\"userInfo.userNickName\"\r\n                  target-label=\"nickName\"\r\n                  @updateUserInfo=\"updateUserInfo\"\r\n                  maxsize=\"18\"\r\n              />\r\n              <LevelIcon\r\n                :inviteCode=\"userInfo.inviteCode\"\r\n                :userRank=\"userInfo.userRank\"\r\n                iconType=\"large\"\r\n                :vipType=\"userInfo.vipType\"\r\n                :inviteCodeType=\"userInfo.inviteCodeType\"\r\n              />\r\n            </div>\r\n            <!-- <div class=\"gender\" v-show=\"!isCurrentUser\">\r\n              <img\r\n                src=\"../../assets/images/sex_boy.png\"\r\n                v-if=\"userInfo.gender === 1\"\r\n                title=\"男\"\r\n              />\r\n              <img\r\n                src=\"../../assets/images/sex_girl.png\"\r\n                v-else-if=\"userInfo.gender === 2\"\r\n                title=\"女\"\r\n              />\r\n            </div> -->\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\" class=\"item-spacing\">\r\n          <el-col :span=\"24\">\r\n            <div class=\"invite-code\">\r\n              <!-- ID: {{userInfo.inviteCode}} -->\r\n              <LuckIdIcon\r\n                :listFlag=\"false\"\r\n                :vipType=\"userInfo.vipType\"\r\n                :inviteCodeType=\"userInfo.inviteCodeType\"\r\n                :inviteCode=\"userInfo.inviteCode\"\r\n                :userRank=\"userInfo.userRank\"\r\n                iconType=\"large\"\r\n              />\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n        <!--        <el-row :gutter=\"5\" type=\"flex\" class=\"item-spacing item-card\" justify=\"space-around\">-->\r\n        <!--          <el-col :span=\"8\">-->\r\n        <!--            <img src=\"../../assets/images/pminfo_badge.png\" title=\"等级\"> LV{{userInfo.level}}-->\r\n        <!--          </el-col>-->\r\n        <!--          <el-col :span=\"8\">-->\r\n        <!--            <img src=\"../../assets/images/pminfo_diamond.png\" title=\"算力\"> {{userInfo.computingPower}}-->\r\n        <!--          </el-col>-->\r\n        <!--          <el-col :span=\"8\">-->\r\n        <!--            <img src=\"../../assets/images/pminfo_look.png\" title=\"看点\"> {{userInfo.invitationCount}}篇-->\r\n        <!--          </el-col>-->\r\n        <!--        </el-row>-->\r\n      </el-col>\r\n    </el-row>\r\n    <el-divider></el-divider>\r\n    <el-row :gutter=\"20\" class=\"info-area item-spacing\" v-if=\"isMemberInGroup && isGroupHolder\">\r\n      <el-col :span=\"8\">\r\n        <!-- 社区成员备注 -->\r\n        <span>{{ $t('book_friend_0003') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"16\" class=\"item-notes\">\r\n        <editable-input\r\n          :target-value=\"memberNotes\"\r\n          target-label=\"memberNotes\"\r\n          :place-holder=\"$t('book_friend_0003')\"\r\n          @updateUserInfo=\"updateUserInfo\"\r\n          maxsize=\"6\"\r\n          lengthByString\r\n          noMinimum\r\n        />\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\" class=\"info-area item-spacing\" v-if=\"userInfo.isFriend\">\r\n      <el-col :span=\"8\">\r\n        <!-- 备注 -->\r\n        <span>{{ $t('Universal_0185') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"16\" class=\"item-notes\">\r\n        <editable-input\r\n          :target-value=\"userInfo.friendNotes\"\r\n          target-label=\"friendNotes\"\r\n          :place-holder=\"$t('Universal_0372')\"\r\n          @updateUserInfo=\"updateUserInfo\"\r\n          maxsize=\"18\"\r\n          :errMsg=\"$t('Universal_0226')\"\r\n        />\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\" class=\"info-area item-spacing\">\r\n      <el-col :span=\"8\">\r\n        <!-- 性别 -->\r\n        <span>{{ $t('my_information_0009') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"16\" v-if=\"isCurrentUser\">\r\n        <editable-radio\r\n          :target-value=\"userInfo.gender === 1 ? $t('my_information_0010') : userInfo.gender === 2 ? $t('my_information_0011') : ''\"\r\n          id=\"editable-radio\"\r\n          target-label=\"gender\"\r\n          :radio-edit=\"false\"\r\n          :is-current-user=\"isCurrentUser\"\r\n          class=\"editable-radio\"\r\n          @updateUserInfo=\"updateUserInfo\"\r\n          ref=\"editablegender\"\r\n        />\r\n      </el-col>\r\n      <el-col :span=\"16\" v-else>\r\n        <p>{{ userInfo.gender === 1 ? $t('my_information_0010') : userInfo.gender === 2 ? $t('my_information_0011') : '' }}</p>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\" class=\"info-area item-spacing\">\r\n      <el-col :span=\"8\">\r\n        <!-- 地区 -->\r\n        <span>{{ $t('Universal_0212') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"16\" >\r\n        <editable-select\r\n          :target-value=\"region\"\r\n          target-label=\"region\"\r\n          @updateUserInfo=\"updateUserInfo\"\r\n          :is-current-user=\"isCurrentUser\"\r\n          :country=\"userInfo.areaCountryCode\"\r\n          :city=\"userInfo.areaCityCode\"\r\n          ref=\"editableregion\"\r\n        />\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\" class=\"info-area item-spacing\">\r\n      <el-col :span=\"8\">\r\n        <!-- 个性签名 -->\r\n        <span>{{ $t('my_information_0012') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"16\">\r\n        <editable-text-area\r\n          :target-value=\"userInfo.personalSign\"\r\n          target-label=\"personalSign\"\r\n          :is-current-user=\"isCurrentUser\"\r\n          @updateUserInfo=\"updateUserInfo\"\r\n          maxsize=\"15\"\r\n        />\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\" type=\"flex\" class=\"icons-area\" justify=\"end\">\r\n      <el-col :span=\"6\" :offset=\"6\"> </el-col>\r\n      <el-col :span=\"3\">\r\n        <img src=\"../../assets/images/info_transmit.png\" @click=\"transferCard\" alt=\"\" :title=\"$t('Universal_0041')\" />\r\n      </el-col>\r\n      <el-col :span=\"3\" v-show=\"userInfo.isFriend\">\r\n        <img src=\"../../assets/images/info_message.png\" @click=\"goToChat\" alt=\"\" :title=\"$t('Universal_0359')\" />\r\n      </el-col>\r\n      <el-col :span=\"3\" v-show=\"userInfo.isFriend\" style=\"padding-left:8px;\">\r\n        <img src=\"../../assets/images/info_del_friend.png\" @click=\"deleteFriend\" alt=\"\" :title=\"$t('book_friend_0018')\" />\r\n      </el-col>\r\n      <el-col :span=\"3\" v-show=\"!(userInfo.isFriend || isCurrentUser)\">\r\n        <img src=\"../../assets/images/info_add_friend.png\" @click=\"addFriend\" alt=\"\" :title=\"$t('chat_addfriend_0001')\" />\r\n      </el-col>\r\n    </el-row>\r\n    <GroupAndInviteChat\r\n      ref=\"groupInvite\"\r\n      :title=\"title\"\r\n      :postcard=\"postcard\"\r\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\r\n      @confirmDialogHand=\"confirmDialogHand\"\r\n      @cancelDialogHand=\"cancelDialogHand\"\r\n      @transferSuccess=\"transferSuccess\"\r\n    />\r\n    <AddFriGrop\r\n      v-if=\"addOrderVisible\"\r\n      :visible.sync=\"addOrderVisible\"\r\n      @handCloseFri=\"handCloseFri\"\r\n      :inviteCode=\"userInfo.inviteCode\"\r\n      :index=\"0\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  get_country_area,\r\n  get_friend_user_info,\r\n  set_member_notes,\r\n  set_user_nickname,\r\n  delete_friend,\r\n  set_user_personal_sign,\r\n  set_user_gender,\r\n  set_user_area\r\n} from '@/server.js';\r\nimport EditableInput from './EditableInput';\r\nimport EditableTextArea from './EditableTextArea';\r\nimport EditableRadio from './EditableRadio';\r\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\r\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\r\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\r\nimport { ser_group_infoById } from '@/view/chat/group/information/server';\r\nimport fileOperational from '@/services/fileOperational';\r\nimport { getSelfUserId } from '@/utils/const';\r\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\r\nimport SQLUtils from '@/components/db/sqlite.js';\r\nimport { convertToPinyin } from '@/utils/pinyin';\r\nimport store from '@/store';\r\nimport { mapActions, mapMutations, mapState } from 'vuex';\r\nimport { update_person_info } from '../../view/chat/group/member/server';\r\nimport EditableSelect from './EditableSelect';\r\nimport AddFriGrop from '@/view//add-friends-group/add';\r\nimport { CLEAR_CHAT } from '@/store/types';\r\nimport { contFriSize } from '@/utils';\r\nimport { GET_USER_INFO } from '../../store/types';\r\n\r\nimport  { imgView } from '@/utils/util.js'\r\n\r\nexport default {\r\n  name: 'MemberInfo',\r\n  components: {\r\n    EditableSelect,\r\n    EditableInput,\r\n    GroupAndInviteChat,\r\n    EditableTextArea,\r\n    EditableRadio,\r\n    AddFriGrop,\r\n    MemberIcon,\r\n    LevelIcon,\r\n    LuckIdIcon\r\n  },\r\n  data() {\r\n    return {\r\n      region: '',\r\n      userInfo: {},\r\n      groupInfo: {},\r\n      isCurrentUser: false,\r\n      isEdit: false,\r\n      isGroupMember: false,\r\n      isGroupHolder: false,\r\n      isMemberInGroup: false,\r\n      memberNotes: '',\r\n      title: this.$t('Universal_0202'),\r\n      GroupInviteVisible: false,\r\n      postcard: true,\r\n      addOrderVisible: false\r\n    };\r\n  },\r\n  props: {\r\n    image: {\r\n      type: String,\r\n      default() {\r\n        return '';\r\n      }\r\n    },\r\n    userId: {\r\n      type: String,\r\n      default() {\r\n        return '';\r\n      }\r\n    },\r\n    groupId: {\r\n      type: String,\r\n      default() {\r\n        return '';\r\n      }\r\n    },\r\n    memberSingleChatStatus: {\r\n      type: String,\r\n      default() {\r\n        return '1';\r\n      }\r\n    },\r\n    authStatus: {\r\n      type: String,\r\n      default() {\r\n        return '3';\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      membList: state => {\r\n        return state.search.membList;\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    ...mapActions(['GET_MEM_LIST']),\r\n    ...mapMutations([CLEAR_CHAT]),\r\n    // 打开图片查看器\r\n    openImgView () {\r\n      console.log('图片查看器=userInfo=', this.userInfo)\r\n      imgView(this.userInfo.userHeadImg, this.userInfo.id)\r\n    },\r\n\r\n    findImage(image) {\r\n      return fileOperational.getImage(image);\r\n    },\r\n    currentUserId() {\r\n      return getSelfUserId();\r\n    },\r\n    async onCardShow() {\r\n      let res = await get_friend_user_info({ id: this.userId });\r\n      this.userInfo = res.data;\r\n      console.log('userInfo~~~~~~', this.userInfo);\r\n      this.isCurrentUser = this.currentUserId() === this.userId;\r\n      this.getRegion();\r\n      if (this.groupId) {\r\n        this.isGroupMember = true;\r\n        this.getGroupInfo(this.groupId);\r\n      }\r\n      this.updateUserNameAndImg();\r\n      this.updateUserInGroupMember();\r\n    },\r\n    async getRegion() {\r\n      if (this.userInfo && this.userInfo.areaCityCode && this.userInfo.areaCountryCode) {\r\n        let res = await get_country_area({\r\n          codes: this.userInfo.areaCountryCode + ',' + this.userInfo.areaCityCode\r\n        });\r\n        // this.region = res.data?.[this.userInfo.areaCountryCode]?.name + '-' + res.data?.[this.userInfo.areaCityCode]?.name;\r\n        this.region = `${res.data?.[this.userInfo.areaCountryCode]?.name||''}-${res.data?.[this.userInfo.areaCityCode]?.name||''}`\r\n      } else {\r\n        this.userInfo.areaCityCode = '';\r\n        this.userInfo.areaCountryCode = '';\r\n        this.region = '';\r\n      }\r\n    },\r\n    async getGroupInfo(groupId) {\r\n      let res = await ser_group_infoById({\r\n        groupId\r\n      });\r\n      this.groupInfo = res.data;\r\n      //this.userId; // 名片id\r\n      //this.currentUserId(); // 当前loginId\r\n      await this.GET_MEM_LIST(this.groupId);\r\n      let groupMember = await this.membList.filter(item => item.id == this.userId && item.is_show == 'true');\r\n      if (groupMember.length > 0) {\r\n        this.isMemberInGroup = true;\r\n        this.memberNotes = groupMember[0]?.member_notes;\r\n      } else {\r\n        this.isMemberInGroup = false;\r\n        this.memberNotes = '';\r\n      }\r\n      console.log('groupMember ==== ', groupMember);\r\n      //let groupMember = await this.membList.filter((item) => item.id == this.userId);\r\n      this.isGroupHolder = false;\r\n      if (groupMember.length > 0 && groupMember[0].auth_status > +this.authStatus) {\r\n        this.isGroupHolder = true;\r\n      }\r\n      this.updateGroupMemberInfo();\r\n    },\r\n    async updateUserInGroupMember() {\r\n      let item = {\r\n        id: this.userId,\r\n        nick_name: this.userInfo.userNickName,\r\n        user_head_img: this.userInfo.userHeadImg,\r\n        inviteCode: this.userInfo.inviteCode,\r\n        vipType: this.userInfo.vipType,\r\n        inviteCodeType: this.userInfo.inviteCodeType,\r\n        userRank: this.userInfo.userRank\r\n      };\r\n      await window.vm\r\n        .$knex('t_groups_member')\r\n        .where('id', '=', this.userId)\r\n        .update(item);\r\n    },\r\n    async updateGroupMemberInfo() {\r\n      let item = {\r\n        id: this.userId,\r\n        group_id: this.groupId,\r\n        nick_name: this.userInfo.userNickName,\r\n        user_head_img: this.userInfo.userHeadImg,\r\n        inviteCode: this.userInfo.inviteCode,\r\n        vipType: this.userInfo.vipType,\r\n        inviteCodeType: this.userInfo.inviteCodeType,\r\n        userRank: this.userInfo.userRank\r\n      };\r\n      let searchRet = await window.vm\r\n        .$knex('t_groups_member')\r\n        .where({ id: this.userId })\r\n        .where('group_id', '=', this.groupId)\r\n        .select();\r\n      if (searchRet && searchRet.length > 0) {\r\n        //更新\r\n        await window.vm\r\n          .$knex('t_groups_member')\r\n          .where('id', '=', this.userId)\r\n          .where('group_id', '=', this.groupId)\r\n          .update(item);\r\n      } else {\r\n        //新增\r\n        item['auth_status'] = 3;\r\n        item['is_show'] = 'false';\r\n        await window.vm.$knex('t_groups_member').insert(item);\r\n      }\r\n    },\r\n    async updateUserNameAndImg() {\r\n      let item = {\r\n        friend_id: this.userInfo.id,\r\n        friend_nick_name: this.userInfo.userNickName,\r\n        friend_nick_name_pinyin: convertToPinyin(this.userInfo.userNickName),\r\n        friend_head_img: this.userInfo.userHeadImg,\r\n        friend_friendNotes: this.userInfo.friendNotes,\r\n        friend_friendNotes_pinyin: convertToPinyin(this.userInfo.friendNotes),\r\n        invite_code: this.userInfo.inviteCode,\r\n        vipType: this.userInfo.vipType,\r\n        inviteCodeType: this.userInfo.inviteCodeType,\r\n        userRank: this.userInfo.userRank\r\n      };\r\n      let searchRet = await window.vm\r\n        .$knex('t_contacts')\r\n        .where({ friend_id: this.userInfo.id })\r\n        .select();\r\n      if (searchRet && searchRet.length > 0) {\r\n        //更新\r\n        await window.vm\r\n          .$knex('t_contacts')\r\n          .where('friend_id', '=', this.userInfo.id)\r\n          .update(item);\r\n      }\r\n    },\r\n    onCardHide() {\r\n      this.isEdit = false;\r\n    },\r\n    async updateUserInfo(label, ...values) {\r\n      console.log('updateUserInfo')\r\n      let value = null;\r\n      if (values.length == 1) {\r\n        value = values[0];\r\n        value = value.trim() == '' ? null : value.trim();\r\n      }\r\n      if (label == 'friendNotes') {\r\n        this.userInfo.friendNotes = value;\r\n        let params = {\r\n          friendId: this.userInfo.id,\r\n          friendNotes: value == '' ? null : value\r\n        };\r\n        let res = await set_member_notes(params);\r\n        if (res.code == '200') {\r\n          //更新数据库\r\n          await window.vm\r\n            .$knex('t_contacts')\r\n            .update('friend_friendNotes', this.userInfo.friendNotes)\r\n            .update('friend_friendNotes_pinyin', this.userInfo.friendNotes == undefined ? '' : convertToPinyin(this.userInfo.friendNotes))\r\n            .where('friend_id', this.userInfo.id);\r\n          this.$message.success(res.msg);\r\n          store.dispatch('GET_LAST_MSG_LIST');\r\n        }\r\n      } else if (label == 'nickName') {\r\n        this.userInfo.userNickName = value;\r\n        let params = {\r\n          nickName: value\r\n        };\r\n        let res = await set_user_nickname(params);\r\n        if (res.code == '200') {\r\n          this.$message.success(res.msg);\r\n          await SQLUtils.updateNickNameInTGroupsMember(this.userInfo.id, value);\r\n          if (this.userId == this.currentUserId()) {\r\n            store.dispatch(GET_USER_INFO);\r\n          }\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      } else if (label == 'memberNotes') {\r\n        this.memberNotes = value;\r\n        let res = await update_person_info({\r\n          groupId: this.groupId,\r\n          userId: this.userId,\r\n          memberNotes: value || ''\r\n        });\r\n        if (res.code == 200) {\r\n          this.$message.success(res.msg);\r\n          await window.vm\r\n            .$knex('t_groups_member')\r\n            .where('group_id', '=', this.groupId)\r\n            .where('id', '=', this.userId)\r\n            .update({\r\n              member_notes: value,\r\n              member_notes_pinyin: convertToPinyin(value)\r\n            });\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      } else if (label == 'personalSign') {\r\n        this.userInfo.personalSign = value;\r\n        let params = {\r\n          personalSign: value\r\n        };\r\n        let res = await set_user_personal_sign(params);\r\n        if (res.code == '200') {\r\n          this.$message.success(res.msg);\r\n        } else {\r\n          if (res.data.code == '010105') {\r\n            this.$message.error(this.$t('my_information_0015'));\r\n          } else {\r\n            this.$message.error(res.data.msg);\r\n          }\r\n        }\r\n      } else if (label == 'gender') {\r\n        // this.userInfo.gender = value == '男' ? 1 : 2;\r\n        this.userInfo.gender = value == this.$t('my_information_0010') ? 1 : value == this.$t('my_information_0011') ? 2 : 0;\r\n        let params = {\r\n          gender: value == this.$t('my_information_0010') ? 1 : value == this.$t('my_information_0011') ? 2 : 0\r\n        };\r\n        let res = await set_user_gender(params);\r\n        if (res.code == '200') {\r\n          this.$message.success(res.msg);\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      } else if (label == 'region') {\r\n        let params = {\r\n          areaCountryCode: values[0],\r\n          areaCityCode: values[1]\r\n        };\r\n        console.log('params ======== ', params);\r\n        let res = await set_user_area(params);\r\n        if (res.code == '200') {\r\n          this.$message.success(res.msg);\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      }\r\n      this.onCardShow();\r\n    },\r\n    confirmDialogHand() {\r\n      this.GroupInviteVisible = false;\r\n    },\r\n    cancelDialogHand() {\r\n      this.GroupInviteVisible = false;\r\n    },\r\n    async transferCard() {\r\n      if(this.$store.state.common.personalAppealInfo.endTime){\r\n        let time = `${this.$store.state.common.personalAppealInfo.createTime}\r\n        --${this.$store.state.common.personalAppealInfo.endTime}`;\r\n        this.$confirm(this.$t('appeal_0003', {time}),\r\n          this.$t('Universal_0059'),{\r\n            confirmButtonText: this.$t('appeal_0017'),\r\n            cancelButtonText: this.$t('book_group_0019'),\r\n            center: true,\r\n            showClose: false,\r\n          }).then(() => {\r\n          this.$emit('toAppeal');\r\n        }).catch(() => {\r\n        });\r\n        return;\r\n      }\r\n      this.GroupInviteVisible = true;\r\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.getCardItem()]);\r\n    },\r\n    getCardItem() {\r\n      console.log('this.userInfo', this.userInfo);\r\n      return {\r\n        code: this.userInfo.inviteCode,\r\n        name: this.userInfo.userNickName,\r\n        msgUrl: this.userInfo.userHeadImg,\r\n        id: this.userInfo.id,\r\n        type: '1',\r\n        originTypePsw: true,\r\n        vipType: this.userInfo.vipType,\r\n        userRank: this.userInfo.userRank,\r\n        inviteCodeType: this.userInfo.inviteCodeType\r\n      };\r\n    },\r\n    deleteFriend() {\r\n      let friend = this.userInfo.friendNotes || this.userInfo.userNickName;\r\n      let message = this.$t('book_friend_0019', {friend});\r\n      this.$confirm(message, this.$t('Universal_0059'), {\r\n        confirmButtonText: this.$t('Universal_0062'),\r\n        cancelButtonText: this.$t('Universal_0063'),\r\n        type: 'warning'\r\n      })\r\n        .then(() => {\r\n          console.log('deleteFriend', this.currentUserId(), this.userInfo.id);\r\n          this.deleteFriendConfirm();\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    addFriend() {\r\n      this.addOrderVisible = true;\r\n      this.$emit('closeCard');\r\n    },\r\n    handCloseFri() {\r\n      this.addOrderVisible = false;\r\n    },\r\n    async deleteFriendConfirm() {\r\n      let res = await delete_friend({\r\n        userId: this.currentUserId(),\r\n        friendId: this.userInfo.id\r\n      });\r\n      if (res.code == 200) {\r\n        this.$router.push({\r\n          path: '/app/chat'\r\n        });\r\n        this.$message({\r\n          type: 'success',\r\n          message: this.$t('Universal_0107')\r\n        });\r\n        await SQLUtils.updateFromTypeBy_210({ targetId: this.userInfo.id,fromId:localStorage.userId });\r\n        this.$store.dispatch(\"GET_LAST_MSG_LIST\")\r\n      }\r\n    },\r\n    onMemberInfoHide() {\r\n      if ((this.$refs.editablegender || this.$refs.editableregion) && this.isCurrentUser) {\r\n        this.$refs.editablegender.initEditableRadio();\r\n        this.$refs.editableregion.initEditableSelect();\r\n      }\r\n    },\r\n    memberInfoClick(e) {\r\n      if (\r\n        e.target.className != 'radio-target-name' &&\r\n        e.target.className != 'radio-group' &&\r\n        e.target.className != 'select-target-name' &&\r\n        e.target.className != 'editable-select'\r\n      ) {\r\n        this.onMemberInfoHide();\r\n      }\r\n    },\r\n    async goToChat() {\r\n      this.$emit('closeHandle');\r\n      this.CLEAR_CHAT();\r\n      let current = {\r\n        id: this.userInfo.id,\r\n        sessionName: this.userInfo.userNickName,\r\n        sessionIcon: this.userInfo.userHeadImg,\r\n        targetType: 1, //单聊\r\n        msgType: 1, //默认文本\r\n        uniqueCode: contFriSize(this.userInfo.id, this.currentUserId()),\r\n        fromType: '999'\r\n      };\r\n      await this.$store.dispatch('ADD_LAST_MSG_LIST', {\r\n        ...current,\r\n        isJump: true\r\n      });\r\n      await this.$store.dispatch('SET_CURRENT_CHAT', current);\r\n      this.$router.push({\r\n        path: '/app/chat/single/message',\r\n        query: {\r\n          id: this.userInfo.id,\r\n          fromId: this.userInfo.id,\r\n          targetId: this.currentUserId(),\r\n          timer: new Date().getTime(),\r\n          uniqueCode: contFriSize(this.userInfo.id, this.currentUserId()),\r\n          friendName: encodeURI(this.userInfo.userNickName)\r\n        }\r\n      });\r\n      await this.$store.dispatch('GET_LAST_MSG_LIST');\r\n    },\r\n    transferSuccess() {\r\n      this.$emit('transferSuccess');\r\n    }\r\n  }\r\n};\r\n</script>",
    "originData": "<template>\r\n  <div class=\"member-card noDrag\" @click=\"memberInfoClick($event)\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"5\">\r\n        <span @click=\"openImgView\">\r\n            <MemberIcon    \r\n              :image=\"userInfo.userHeadImg\" \r\n              iconType=\"medium\" \r\n              :userRank=\"userInfo.userRank\" \r\n              :vipType=\"userInfo.vipType\" \r\n            />\r\n        </span>\r\n      </el-col>\r\n      <el-col :span=\"18\" class=\"mar-t-5\">\r\n        <el-row :gutter=\"20\" class=\"item-spacing\">\r\n          <el-col :span=\"24\">\r\n            <div class=\"user-nick-name\" :title=\"userInfo.userNickName\">\r\n              <span v-show=\"!isCurrentUser\" class=\"friend-nick-name\">{{ userInfo.userNickName }}</span>\r\n              <editable-input\r\n                  v-show=\"isCurrentUser\"\r\n                  class=\"mar-b--4\"\r\n                  :target-value=\"userInfo.userNickName\"\r\n                  target-label=\"nickName\"\r\n                  @updateUserInfo=\"updateUserInfo\"\r\n                  maxsize=\"18\"\r\n              />\r\n              <LevelIcon\r\n                :inviteCode=\"userInfo.inviteCode\"\r\n                :userRank=\"userInfo.userRank\"\r\n                iconType=\"large\"\r\n                :vipType=\"userInfo.vipType\"\r\n                :inviteCodeType=\"userInfo.inviteCodeType\"\r\n              />\r\n            </div>\r\n            <!-- <div class=\"gender\" v-show=\"!isCurrentUser\">\r\n              <img\r\n                src=\"../../assets/images/sex_boy.png\"\r\n                v-if=\"userInfo.gender === 1\"\r\n                title=\"男\"\r\n              />\r\n              <img\r\n                src=\"../../assets/images/sex_girl.png\"\r\n                v-else-if=\"userInfo.gender === 2\"\r\n                title=\"女\"\r\n              />\r\n            </div> -->\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\" class=\"item-spacing\">\r\n          <el-col :span=\"24\">\r\n            <div class=\"invite-code\">\r\n              <!-- ID: {{userInfo.inviteCode}} -->\r\n              <LuckIdIcon\r\n                :listFlag=\"false\"\r\n                :vipType=\"userInfo.vipType\"\r\n                :inviteCodeType=\"userInfo.inviteCodeType\"\r\n                :inviteCode=\"userInfo.inviteCode\"\r\n                :userRank=\"userInfo.userRank\"\r\n                iconType=\"large\"\r\n              />\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n        <!--        <el-row :gutter=\"5\" type=\"flex\" class=\"item-spacing item-card\" justify=\"space-around\">-->\r\n        <!--          <el-col :span=\"8\">-->\r\n        <!--            <img src=\"../../assets/images/pminfo_badge.png\" title=\"等级\"> LV{{userInfo.level}}-->\r\n        <!--          </el-col>-->\r\n        <!--          <el-col :span=\"8\">-->\r\n        <!--            <img src=\"../../assets/images/pminfo_diamond.png\" title=\"算力\"> {{userInfo.computingPower}}-->\r\n        <!--          </el-col>-->\r\n        <!--          <el-col :span=\"8\">-->\r\n        <!--            <img src=\"../../assets/images/pminfo_look.png\" title=\"看点\"> {{userInfo.invitationCount}}篇-->\r\n        <!--          </el-col>-->\r\n        <!--        </el-row>-->\r\n      </el-col>\r\n    </el-row>\r\n    <el-divider></el-divider>\r\n    <el-row :gutter=\"20\" class=\"info-area item-spacing\" v-if=\"isMemberInGroup && isGroupHolder\">\r\n      <el-col :span=\"8\">\r\n        <!-- 社区成员备注 -->\r\n        <span>{{ $t('book_friend_0003') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"16\" class=\"item-notes\">\r\n        <editable-input\r\n          :target-value=\"memberNotes\"\r\n          target-label=\"memberNotes\"\r\n          :place-holder=\"$t('book_friend_0003')\"\r\n          @updateUserInfo=\"updateUserInfo\"\r\n          maxsize=\"6\"\r\n          lengthByString\r\n          noMinimum\r\n        />\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\" class=\"info-area item-spacing\" v-if=\"userInfo.isFriend\">\r\n      <el-col :span=\"8\">\r\n        <!-- 备注 -->\r\n        <span>{{ $t('Universal_0185') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"16\" class=\"item-notes\">\r\n        <editable-input\r\n          :target-value=\"userInfo.friendNotes\"\r\n          target-label=\"friendNotes\"\r\n          :place-holder=\"$t('Universal_0372')\"\r\n          @updateUserInfo=\"updateUserInfo\"\r\n          maxsize=\"18\"\r\n          :errMsg=\"$t('Universal_0226')\"\r\n        />\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\" class=\"info-area item-spacing\">\r\n      <el-col :span=\"8\">\r\n        <!-- 性别 -->\r\n        <span>{{ $t('my_information_0009') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"16\" v-if=\"isCurrentUser\">\r\n        <editable-radio\r\n          :target-value=\"userInfo.gender === 1 ? $t('my_information_0010') : userInfo.gender === 2 ? $t('my_information_0011') : ''\"\r\n          id=\"editable-radio\"\r\n          target-label=\"gender\"\r\n          :radio-edit=\"false\"\r\n          :is-current-user=\"isCurrentUser\"\r\n          class=\"editable-radio\"\r\n          @updateUserInfo=\"updateUserInfo\"\r\n          ref=\"editablegender\"\r\n        />\r\n      </el-col>\r\n      <el-col :span=\"16\" v-else>\r\n        <p>{{ userInfo.gender === 1 ? $t('my_information_0010') : userInfo.gender === 2 ? $t('my_information_0011') : '' }}</p>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\" class=\"info-area item-spacing\">\r\n      <el-col :span=\"8\">\r\n        <!-- 地区 -->\r\n        <span>{{ $t('Universal_0212') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"16\" >\r\n        <editable-select\r\n          :target-value=\"region\"\r\n          target-label=\"region\"\r\n          @updateUserInfo=\"updateUserInfo\"\r\n          :is-current-user=\"isCurrentUser\"\r\n          :country=\"userInfo.areaCountryCode\"\r\n          :city=\"userInfo.areaCityCode\"\r\n          ref=\"editableregion\"\r\n        />\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\" class=\"info-area item-spacing\">\r\n      <el-col :span=\"8\">\r\n        <!-- 个性签名 -->\r\n        <span>{{ $t('my_information_0012') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"16\">\r\n        <editable-text-area\r\n          :target-value=\"userInfo.personalSign\"\r\n          target-label=\"personalSign\"\r\n          :is-current-user=\"isCurrentUser\"\r\n          @updateUserInfo=\"updateUserInfo\"\r\n          maxsize=\"15\"\r\n        />\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\" type=\"flex\" class=\"icons-area\" justify=\"end\">\r\n      <el-col :span=\"6\" :offset=\"6\"> </el-col>\r\n      <el-col :span=\"3\">\r\n        <img src=\"../../assets/images/info_transmit.png\" @click=\"transferCard\" alt=\"\" :title=\"$t('Universal_0041')\" />\r\n      </el-col>\r\n      <el-col :span=\"3\" v-show=\"userInfo.isFriend\">\r\n        <img src=\"../../assets/images/info_message.png\" @click=\"goToChat\" alt=\"\" :title=\"$t('Universal_0359')\" />\r\n      </el-col>\r\n      <el-col :span=\"3\" v-show=\"userInfo.isFriend\" style=\"padding-left:8px;\">\r\n        <img src=\"../../assets/images/info_del_friend.png\" @click=\"deleteFriend\" alt=\"\" :title=\"$t('book_friend_0018')\" />\r\n      </el-col>\r\n      <el-col :span=\"3\" v-show=\"!(userInfo.isFriend || isCurrentUser)\">\r\n        <img src=\"../../assets/images/info_add_friend.png\" @click=\"addFriend\" alt=\"\" :title=\"$t('chat_addfriend_0001')\" />\r\n      </el-col>\r\n    </el-row>\r\n    <GroupAndInviteChat\r\n      ref=\"groupInvite\"\r\n      :title=\"title\"\r\n      :postcard=\"postcard\"\r\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\r\n      @confirmDialogHand=\"confirmDialogHand\"\r\n      @cancelDialogHand=\"cancelDialogHand\"\r\n      @transferSuccess=\"transferSuccess\"\r\n    />\r\n    <AddFriGrop\r\n      v-if=\"addOrderVisible\"\r\n      :visible.sync=\"addOrderVisible\"\r\n      @handCloseFri=\"handCloseFri\"\r\n      :inviteCode=\"userInfo.inviteCode\"\r\n      :index=\"0\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  get_country_area,\r\n  get_friend_user_info,\r\n  set_member_notes,\r\n  set_user_nickname,\r\n  delete_friend,\r\n  set_user_personal_sign,\r\n  set_user_gender,\r\n  set_user_area\r\n} from '@/server.js';\r\nimport EditableInput from './EditableInput';\r\nimport EditableTextArea from './EditableTextArea';\r\nimport EditableRadio from './EditableRadio';\r\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\r\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\r\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\r\nimport { ser_group_infoById } from '@/view/chat/group/information/server';\r\nimport fileOperational from '@/services/fileOperational';\r\nimport { getSelfUserId } from '@/utils/const';\r\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\r\nimport SQLUtils from '@/components/db/sqlite.js';\r\nimport { convertToPinyin } from '@/utils/pinyin';\r\nimport store from '@/store';\r\nimport { mapActions, mapMutations, mapState } from 'vuex';\r\nimport { update_person_info } from '../../view/chat/group/member/server';\r\nimport EditableSelect from './EditableSelect';\r\nimport AddFriGrop from '@/view//add-friends-group/add';\r\nimport { CLEAR_CHAT } from '@/store/types';\r\nimport { contFriSize } from '@/utils';\r\nimport { GET_USER_INFO } from '../../store/types';\r\n\r\nimport  { imgView } from '@/utils/util.js'\r\n\r\nexport default {\r\n  name: 'MemberInfo',\r\n  components: {\r\n    EditableSelect,\r\n    EditableInput,\r\n    GroupAndInviteChat,\r\n    EditableTextArea,\r\n    EditableRadio,\r\n    AddFriGrop,\r\n    MemberIcon,\r\n    LevelIcon,\r\n    LuckIdIcon\r\n  },\r\n  data() {\r\n    return {\r\n      region: '',\r\n      userInfo: {},\r\n      groupInfo: {},\r\n      isCurrentUser: false,\r\n      isEdit: false,\r\n      isGroupMember: false,\r\n      isGroupHolder: false,\r\n      isMemberInGroup: false,\r\n      memberNotes: '',\r\n      title: this.$t('Universal_0202'),\r\n      GroupInviteVisible: false,\r\n      postcard: true,\r\n      addOrderVisible: false\r\n    };\r\n  },\r\n  props: {\r\n    image: {\r\n      type: String,\r\n      default() {\r\n        return '';\r\n      }\r\n    },\r\n    userId: {\r\n      type: String,\r\n      default() {\r\n        return '';\r\n      }\r\n    },\r\n    groupId: {\r\n      type: String,\r\n      default() {\r\n        return '';\r\n      }\r\n    },\r\n    memberSingleChatStatus: {\r\n      type: String,\r\n      default() {\r\n        return '1';\r\n      }\r\n    },\r\n    authStatus: {\r\n      type: String,\r\n      default() {\r\n        return '3';\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      membList: state => {\r\n        return state.search.membList;\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    ...mapActions(['GET_MEM_LIST']),\r\n    ...mapMutations([CLEAR_CHAT]),\r\n    // 打开图片查看器\r\n    openImgView () {\r\n      console.log('图片查看器=userInfo=', this.userInfo)\r\n      imgView(this.userInfo.userHeadImg, this.userInfo.id)\r\n    },\r\n\r\n    findImage(image) {\r\n      return fileOperational.getImage(image);\r\n    },\r\n    currentUserId() {\r\n      return getSelfUserId();\r\n    },\r\n    async onCardShow() {\r\n      let res = await get_friend_user_info({ id: this.userId });\r\n      this.userInfo = res.data;\r\n      console.log('userInfo~~~~~~', this.userInfo);\r\n      this.isCurrentUser = this.currentUserId() === this.userId;\r\n      this.getRegion();\r\n      if (this.groupId) {\r\n        this.isGroupMember = true;\r\n        this.getGroupInfo(this.groupId);\r\n      }\r\n      this.updateUserNameAndImg();\r\n      this.updateUserInGroupMember();\r\n    },\r\n    async getRegion() {\r\n      if (this.userInfo && this.userInfo.areaCityCode && this.userInfo.areaCountryCode) {\r\n        let res = await get_country_area({\r\n          codes: this.userInfo.areaCountryCode + ',' + this.userInfo.areaCityCode\r\n        });\r\n        // this.region = res.data?.[this.userInfo.areaCountryCode]?.name + '-' + res.data?.[this.userInfo.areaCityCode]?.name;\r\n        this.region = `${res.data?.[this.userInfo.areaCountryCode]?.name||''}-${res.data?.[this.userInfo.areaCityCode]?.name||''}`\r\n      } else {\r\n        this.userInfo.areaCityCode = '';\r\n        this.userInfo.areaCountryCode = '';\r\n        this.region = '';\r\n      }\r\n    },\r\n    async getGroupInfo(groupId) {\r\n      let res = await ser_group_infoById({\r\n        groupId\r\n      });\r\n      this.groupInfo = res.data;\r\n      //this.userId; // 名片id\r\n      //this.currentUserId(); // 当前loginId\r\n      await this.GET_MEM_LIST(this.groupId);\r\n      let groupMember = await this.membList.filter(item => item.id == this.userId && item.is_show == 'true');\r\n      if (groupMember.length > 0) {\r\n        this.isMemberInGroup = true;\r\n        this.memberNotes = groupMember[0]?.member_notes;\r\n      } else {\r\n        this.isMemberInGroup = false;\r\n        this.memberNotes = '';\r\n      }\r\n      console.log('groupMember ==== ', groupMember);\r\n      //let groupMember = await this.membList.filter((item) => item.id == this.userId);\r\n      this.isGroupHolder = false;\r\n      if (groupMember.length > 0 && groupMember[0].auth_status > +this.authStatus) {\r\n        this.isGroupHolder = true;\r\n      }\r\n      this.updateGroupMemberInfo();\r\n    },\r\n    async updateUserInGroupMember() {\r\n      let item = {\r\n        id: this.userId,\r\n        nick_name: this.userInfo.userNickName,\r\n        user_head_img: this.userInfo.userHeadImg,\r\n        inviteCode: this.userInfo.inviteCode,\r\n        vipType: this.userInfo.vipType,\r\n        inviteCodeType: this.userInfo.inviteCodeType,\r\n        userRank: this.userInfo.userRank\r\n      };\r\n      await window.vm\r\n        .$knex('t_groups_member')\r\n        .where('id', '=', this.userId)\r\n        .update(item);\r\n    },\r\n    async updateGroupMemberInfo() {\r\n      let item = {\r\n        id: this.userId,\r\n        group_id: this.groupId,\r\n        nick_name: this.userInfo.userNickName,\r\n        user_head_img: this.userInfo.userHeadImg,\r\n        inviteCode: this.userInfo.inviteCode,\r\n        vipType: this.userInfo.vipType,\r\n        inviteCodeType: this.userInfo.inviteCodeType,\r\n        userRank: this.userInfo.userRank\r\n      };\r\n      let searchRet = await window.vm\r\n        .$knex('t_groups_member')\r\n        .where({ id: this.userId })\r\n        .where('group_id', '=', this.groupId)\r\n        .select();\r\n      if (searchRet && searchRet.length > 0) {\r\n        //更新\r\n        await window.vm\r\n          .$knex('t_groups_member')\r\n          .where('id', '=', this.userId)\r\n          .where('group_id', '=', this.groupId)\r\n          .update(item);\r\n      } else {\r\n        //新增\r\n        item['auth_status'] = 3;\r\n        item['is_show'] = 'false';\r\n        await window.vm.$knex('t_groups_member').insert(item);\r\n      }\r\n    },\r\n    async updateUserNameAndImg() {\r\n      let item = {\r\n        friend_id: this.userInfo.id,\r\n        friend_nick_name: this.userInfo.userNickName,\r\n        friend_nick_name_pinyin: convertToPinyin(this.userInfo.userNickName),\r\n        friend_head_img: this.userInfo.userHeadImg,\r\n        friend_friendNotes: this.userInfo.friendNotes,\r\n        friend_friendNotes_pinyin: convertToPinyin(this.userInfo.friendNotes),\r\n        invite_code: this.userInfo.inviteCode,\r\n        vipType: this.userInfo.vipType,\r\n        inviteCodeType: this.userInfo.inviteCodeType,\r\n        userRank: this.userInfo.userRank\r\n      };\r\n      let searchRet = await window.vm\r\n        .$knex('t_contacts')\r\n        .where({ friend_id: this.userInfo.id })\r\n        .select();\r\n      if (searchRet && searchRet.length > 0) {\r\n        //更新\r\n        await window.vm\r\n          .$knex('t_contacts')\r\n          .where('friend_id', '=', this.userInfo.id)\r\n          .update(item);\r\n      }\r\n    },\r\n    onCardHide() {\r\n      this.isEdit = false;\r\n    },\r\n    async updateUserInfo(label, ...values) {\r\n      console.log('updateUserInfo')\r\n      let value = null;\r\n      if (values.length == 1) {\r\n        value = values[0];\r\n        value = value.trim() == '' ? null : value.trim();\r\n      }\r\n      if (label == 'friendNotes') {\r\n        this.userInfo.friendNotes = value;\r\n        let params = {\r\n          friendId: this.userInfo.id,\r\n          friendNotes: value == '' ? null : value\r\n        };\r\n        let res = await set_member_notes(params);\r\n        if (res.code == '200') {\r\n          //更新数据库\r\n          await window.vm\r\n            .$knex('t_contacts')\r\n            .update('friend_friendNotes', this.userInfo.friendNotes)\r\n            .update('friend_friendNotes_pinyin', this.userInfo.friendNotes == undefined ? '' : convertToPinyin(this.userInfo.friendNotes))\r\n            .where('friend_id', this.userInfo.id);\r\n          this.$message.success(res.msg);\r\n          store.dispatch('GET_LAST_MSG_LIST');\r\n        }\r\n      } else if (label == 'nickName') {\r\n        this.userInfo.userNickName = value;\r\n        let params = {\r\n          nickName: value\r\n        };\r\n        let res = await set_user_nickname(params);\r\n        if (res.code == '200') {\r\n          this.$message.success(res.msg);\r\n          await SQLUtils.updateNickNameInTGroupsMember(this.userInfo.id, value);\r\n          if (this.userId == this.currentUserId()) {\r\n            store.dispatch(GET_USER_INFO);\r\n          }\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      } else if (label == 'memberNotes') {\r\n        this.memberNotes = value;\r\n        let res = await update_person_info({\r\n          groupId: this.groupId,\r\n          userId: this.userId,\r\n          memberNotes: value || ''\r\n        });\r\n        if (res.code == 200) {\r\n          this.$message.success(res.msg);\r\n          await window.vm\r\n            .$knex('t_groups_member')\r\n            .where('group_id', '=', this.groupId)\r\n            .where('id', '=', this.userId)\r\n            .update({\r\n              member_notes: value,\r\n              member_notes_pinyin: convertToPinyin(value)\r\n            });\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      } else if (label == 'personalSign') {\r\n        this.userInfo.personalSign = value;\r\n        let params = {\r\n          personalSign: value\r\n        };\r\n        let res = await set_user_personal_sign(params);\r\n        if (res.code == '200') {\r\n          this.$message.success(res.msg);\r\n        } else {\r\n          if (res.data.code == '010105') {\r\n            this.$message.error(this.$t('my_information_0015'));\r\n          } else {\r\n            this.$message.error(res.data.msg);\r\n          }\r\n        }\r\n      } else if (label == 'gender') {\r\n        // this.userInfo.gender = value == '男' ? 1 : 2;\r\n        this.userInfo.gender = value == this.$t('my_information_0010') ? 1 : value == this.$t('my_information_0011') ? 2 : 0;\r\n        let params = {\r\n          gender: value == this.$t('my_information_0010') ? 1 : value == this.$t('my_information_0011') ? 2 : 0\r\n        };\r\n        let res = await set_user_gender(params);\r\n        if (res.code == '200') {\r\n          this.$message.success(res.msg);\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      } else if (label == 'region') {\r\n        let params = {\r\n          areaCountryCode: values[0],\r\n          areaCityCode: values[1]\r\n        };\r\n        console.log('params ======== ', params);\r\n        let res = await set_user_area(params);\r\n        if (res.code == '200') {\r\n          this.$message.success(res.msg);\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      }\r\n      this.onCardShow();\r\n    },\r\n    confirmDialogHand() {\r\n      this.GroupInviteVisible = false;\r\n    },\r\n    cancelDialogHand() {\r\n      this.GroupInviteVisible = false;\r\n    },\r\n    async transferCard() {\r\n      if(this.$store.state.common.personalAppealInfo.endTime){\r\n        let time = `${this.$store.state.common.personalAppealInfo.createTime}\r\n        --${this.$store.state.common.personalAppealInfo.endTime}`;\r\n        this.$confirm(this.$t('appeal_0003', {time}),\r\n          this.$t('Universal_0059'),{\r\n            confirmButtonText: this.$t('appeal_0017'),\r\n            cancelButtonText: this.$t('book_group_0019'),\r\n            center: true,\r\n            showClose: false,\r\n          }).then(() => {\r\n          this.$emit('toAppeal');\r\n        }).catch(() => {\r\n        });\r\n        return;\r\n      }\r\n      this.GroupInviteVisible = true;\r\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.getCardItem()]);\r\n    },\r\n    getCardItem() {\r\n      console.log('this.userInfo', this.userInfo);\r\n      return {\r\n        code: this.userInfo.inviteCode,\r\n        name: this.userInfo.userNickName,\r\n        msgUrl: this.userInfo.userHeadImg,\r\n        id: this.userInfo.id,\r\n        type: '1',\r\n        originTypePsw: true,\r\n        vipType: this.userInfo.vipType,\r\n        userRank: this.userInfo.userRank,\r\n        inviteCodeType: this.userInfo.inviteCodeType\r\n      };\r\n    },\r\n    deleteFriend() {\r\n      let friend = this.userInfo.friendNotes || this.userInfo.userNickName;\r\n      let message = this.$t('book_friend_0019', {friend});\r\n      this.$confirm(message, this.$t('Universal_0059'), {\r\n        confirmButtonText: this.$t('Universal_0062'),\r\n        cancelButtonText: this.$t('Universal_0063'),\r\n        type: 'warning'\r\n      })\r\n        .then(() => {\r\n          console.log('deleteFriend', this.currentUserId(), this.userInfo.id);\r\n          this.deleteFriendConfirm();\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    addFriend() {\r\n      this.addOrderVisible = true;\r\n      this.$emit('closeCard');\r\n    },\r\n    handCloseFri() {\r\n      this.addOrderVisible = false;\r\n    },\r\n    async deleteFriendConfirm() {\r\n      let res = await delete_friend({\r\n        userId: this.currentUserId(),\r\n        friendId: this.userInfo.id\r\n      });\r\n      if (res.code == 200) {\r\n        this.$router.push({\r\n          path: '/app/chat'\r\n        });\r\n        this.$message({\r\n          type: 'success',\r\n          message: this.$t('Universal_0107')\r\n        });\r\n        await SQLUtils.updateFromTypeBy_210({ targetId: this.userInfo.id,fromId:localStorage.userId });\r\n        this.$store.dispatch(\"GET_LAST_MSG_LIST\")\r\n      }\r\n    },\r\n    onMemberInfoHide() {\r\n      if ((this.$refs.editablegender || this.$refs.editableregion) && this.isCurrentUser) {\r\n        this.$refs.editablegender.initEditableRadio();\r\n        this.$refs.editableregion.initEditableSelect();\r\n      }\r\n    },\r\n    memberInfoClick(e) {\r\n      if (\r\n        e.target.className != 'radio-target-name' &&\r\n        e.target.className != 'radio-group' &&\r\n        e.target.className != 'select-target-name' &&\r\n        e.target.className != 'editable-select'\r\n      ) {\r\n        this.onMemberInfoHide();\r\n      }\r\n    },\r\n    async goToChat() {\r\n      this.$emit('closeHandle');\r\n      this.CLEAR_CHAT();\r\n      let current = {\r\n        id: this.userInfo.id,\r\n        sessionName: this.userInfo.userNickName,\r\n        sessionIcon: this.userInfo.userHeadImg,\r\n        targetType: 1, //单聊\r\n        msgType: 1, //默认文本\r\n        uniqueCode: contFriSize(this.userInfo.id, this.currentUserId()),\r\n        fromType: '999'\r\n      };\r\n      await this.$store.dispatch('ADD_LAST_MSG_LIST', {\r\n        ...current,\r\n        isJump: true\r\n      });\r\n      await this.$store.dispatch('SET_CURRENT_CHAT', current);\r\n      this.$router.push({\r\n        path: '/app/chat/single/message',\r\n        query: {\r\n          id: this.userInfo.id,\r\n          fromId: this.userInfo.id,\r\n          targetId: this.currentUserId(),\r\n          timer: new Date().getTime(),\r\n          uniqueCode: contFriSize(this.userInfo.id, this.currentUserId()),\r\n          friendName: encodeURI(this.userInfo.userNickName)\r\n        }\r\n      });\r\n      await this.$store.dispatch('GET_LAST_MSG_LIST');\r\n    },\r\n    transferSuccess() {\r\n      this.$emit('transferSuccess');\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n@import '../../assets/css/base.css';\r\n.member-card .el-divider {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n<style scoped>\r\n.member-card {\r\n  padding: 10px 15px;\r\n  color: #333333;\r\n  font-size: 12px;\r\n\r\n  font-weight: 400;\r\n  user-select: text;\r\n}\r\n\r\n.item-spacing {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.item-spacing img {\r\n  margin-bottom: -3px;\r\n}\r\n\r\n.item-card {\r\n  margin-bottom: 5px;\r\n}\r\n.card-info {\r\n  margin-left: -30px !important;\r\n}\r\n\r\n.info-area span {\r\n  width: 100%;\r\n  display: inline-block;\r\n  text-align: right;\r\n  color: #999999;\r\n}\r\n\r\n.user-nick-name {\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  /*width: 180px;*/\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  margin-left: -4px;\r\n  margin-bottom: -6px;\r\n}\r\n.friend-nick-name {\r\n  margin-left: 4px;\r\n  /*margin-bottom: 5px;*/\r\n  max-width: 120px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: pre;\r\n}\r\n.item-notes {\r\n  margin-top: -3px;\r\n  margin-left: -4px;\r\n}\r\n\r\n.gender {\r\n  float: right;\r\n  margin-top: -13px;\r\n}\r\n\r\n.invite-code {\r\n  font-size: 12px;\r\n  color: #999999;\r\n  user-select: text;\r\n}\r\n\r\n.icons-area {\r\n  margin-top: 30px;\r\n}\r\n\r\n.member-card img {\r\n  /* width: 18px;\r\n    height: 18px; */\r\n  width: 16px;\r\n  height: 16px;\r\n}\r\n.icons-area img {\r\n  width: 22px;\r\n  height: 22px;\r\n}\r\n.gender img {\r\n  width: 18px;\r\n  height: 18px;\r\n}\r\n.mar-t-5 {\r\n  margin-top: 5px;\r\n}\r\n.mar-b--4 {\r\n  margin-bottom: -4px;\r\n}\r\n</style>\r\n",
    "cssJson": [
      {
        ".member-card .el-divider": {
          "margin-bottom": "20px"
        }
      },
      {
        ".member-card": {
          "padding": "10px 15px",
          "color": "#333333",
          "font-size": "12px",
          "font-weight": "400",
          "user-select": "text"
        },
        ".item-spacing": {
          "margin-bottom": "10px"
        },
        ".item-spacing img": {
          "margin-bottom": "-3px"
        },
        ".item-card": {
          "margin-bottom": "5px"
        },
        ".card-info": {
          "margin-left": "-30px !important"
        },
        ".info-area span": {
          "width": "100%",
          "display": "inline-block",
          "text-align": "right",
          "color": "#999999"
        },
        ".user-nick-name": {
          "align-items": "center",
          "display": "flex",
          "font-size": "16px",
          "font-weight": "bold",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "nowrap",
          "margin-left": "-4px",
          "margin-bottom": "-6px"
        },
        ".friend-nick-name": {
          "margin-left": "4px",
          "max-width": "120px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "pre"
        },
        ".item-notes": {
          "margin-top": "-3px",
          "margin-left": "-4px"
        },
        ".gender": {
          "float": "right",
          "margin-top": "-13px"
        },
        ".invite-code": {
          "font-size": "12px",
          "color": "#999999",
          "user-select": "text"
        },
        ".icons-area": {
          "margin-top": "30px"
        },
        ".member-card img": {
          "width": "16px",
          "height": "16px"
        },
        ".icons-area img": {
          "width": "22px",
          "height": "22px"
        },
        ".gender img": {
          "width": "18px",
          "height": "18px"
        },
        ".mar-t-5": {
          "margin-top": "5px"
        },
        ".mar-b--4": {
          "margin-bottom": "-4px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/search.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 成员列表-顶部搜索框 -->\n<template>\n  <div class=\"searchBox\">\n    <div style=\"text-align: left; -webkit-app-region: drag\">\n      <!-- @keyup.enter.native=\"keyword == '' ? (searchListBox = false,indexAt = 0,keyword = '') : (searchListBox = true,search())\" -->\n      <el-input\n        clearable\n        class=\"my_class\"\n        :placeholder=\"$t('Universal_0058')\"\n        prefix-icon=\"el-icon-search\"\n        v-model=\"keyword\"\n        :class=\"[!serFlag ? 'visible' : '']\"\n        @input=\"search()\"\n        style=\"-webkit-app-region: no-drag\"\n        id=\"searchAll\"\n        @focus=\"closeMembers\"\n      ></el-input>\n      <el-popover\n        v-model=\"popoverVisible\"\n        placement=\"right\"\n        trigger=\"click\"\n        popper-class=\"noDrag addMenu\"\n        style=\"-webkit-app-region: no-drag; min-width: 125px;\"\n      >\n        <ul class=\"addbox\">\n          <li\n            style=\"\n              line-height: 35px;\n              border-bottom: 1px solid #eee;\n              cursor: pointer;\n            \"\n            @click=\"addHand(0),popoverVisible = false\"\n          >\n            <img draggable='false' src=\"../assets/images/add.png\" /><span>{{ $t('chat_addfriend_0001') }}</span>\n          </li>\n          <li\n            style=\"\n              line-height: 35px;\n              border-bottom: 1px solid #eee;\n              cursor: pointer;\n            \"\n            @click=\"addHand(1),popoverVisible = false\"\n          >\n            <img draggable='false' src=\"../assets/images/creatGroup.png\" /><span>{{ $t('chat_joincommunity_0001') }}</span>\n          </li>\n          <li style=\"line-height: 35px; cursor: pointer\" @click=\"handOpenGroup\">\n            <img draggable='false' src=\"../assets/images/addgroup.png\" /><span>{{ $t('chat_createcommunity_0001') }}</span>\n          </li>\n        </ul>\n        <el-button @click=\"closeMembers(),searchListBox = false\" \n        plain size=\"mini\" id=\"contact-add-btn\" slot=\"reference\" style=\"margin-left: 18px\" :class=\"[!serFlag ? 'visible' : '']\"\n          >+\n        </el-button>\n      </el-popover>\n    </div>\n    <!--搜索结果 弹窗 -->\n    <el-drawer\n      title\n      :with-header=\"false\"\n      :visible.sync=\"searchListBox\"\n      :direction=\"direction\"\n      :modal=\"false\"\n      :close-on-press-escape=\"true\"\n      custom-class=\"searchListBox\"\n      style=\"min-height: 600px; left: 61px; top: 60px\"\n      @close=\"closePopver\"\n    >\n      <div >\n        <div v-show=\"friendsDataMin.length == 0 && groupsData.length == 0 && discussionsData.length == 0\" class=\"no-data\">\n          <img src=\"../assets/images/web.png\" class=\"img_search\" />\n          <p>{{ $t('Universal_0173') }}</p>\n        </div>\n        <div class=\"list contacts\" v-show=\"friendsDataMin.length > 0\">\n          <p>\n            {{ $t('chat_search_0003') }}\n            <span @click=\"showAll\" v-show=\"isShowAll\">{{ $t('Universal_0271') }}</span>\n          </p>\n          <ul>\n            <li v-for=\"(item, index) in friendsDataMin\" :key=\"'friend' + index\" @click=\"handGoChatF(item)\" \n            :class=\"{active:indexAt == item.indexAt}\" :id=\"item.inviteCode\" disName=\"1\">\n              <!--              <img :src=\"findImage(item.friendHeadImg)\" alt=\"头像\"/>-->\n              <div class=\"friend-icon\">\n                <MemberIcon :image=\"item.friendHeadImg\" iconType=\"small\" :userRank=\"item.userRank\" :vipType=\"item.vipType\" />\n              </div>\n              <div class=\"flex flex-direction name-notes-id\">\n                <div class=\"nick-name\">\n                  <span v-html=\"item.friendNickName\"></span>\n                  <LevelIcon\n                    :inviteCode=\"item.inviteCode\"\n                    :userRank=\"item.userRank\"\n                    iconType=\"medium\"\n                    :vipType=\"item.vipType\"\n                    :inviteCodeType=\"item.inviteCodeType\"\n                    :listFlag=\"true\"\n                  />\n                </div>\n                <div class=\"friend-notes\" v-show=\"item.showNotes\">\n                  <span>{{ $t('book_friend_0002') }}</span><span v-html=\"item.friendFriendNotes\"></span>\n                </div>\n                <div class=\"invite-code\" v-show=\"item.showCode\">\n                  <LuckIdIcon\n                    :inviteCode=\"item.inviteCode\"\n                    :userRank=\"item.userRank\"\n                    iconType=\"medium\"\n                    :vipType=\"item.vipType\"\n                    :inviteCodeType=\"item.inviteCodeType\"\n                    :listFlag=\"false\"\n                  />\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div class=\"list groups\" v-show=\"groupsData.length > 0\">\n          <p>{{ $t('chat_search_0005') }}</p>\n          <ul>\n            <li v-for=\"(item, index) in groupsData\" :key=\"'group' + index\" @click=\"handGoChatG(item)\" \n            :class=\"{active:indexAt == item.indexAt}\" :id=\"item.groupId\" disName=\"2\">\n              <div class=\"group-icon\">\n                <img class=\"avatar\"\n                     :src=\"findImage(item.groupAvatar)\"\n                     v-if=\"item.groupAvatar\"\n                     :alt=\"$t('Universal_0184')\"\n                     @error=\"replaceImg\" />\n                <img class=\"avatar\" src=\"../assets/images/group.png\" v-else\n                     :alt=\"$t('Universal_0184')\"  />\n              </div>\n              <div class=\"flex flex-direction justify-center name-notes-id\">\n                <div class=\"nick-name\">\n                  <span v-html=\"item.groupName\"></span>\n                </div>\n                <div class=\"group-code\" v-show=\"item.showCode\">\n                  <span>{{ $t('book_community_0007') }}: </span><span v-html=\"item.groupCode\"></span>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div class=\"list groups\" v-show=\"discussionsData.length > 0\">\n          <p>{{ $t('chat_search_0007') }}</p>\n          <ul>\n            <li v-for=\"(item, index) in discussionsData\" :key=\"'group' + index\" @click=\"handGoChatDiscussion(item)\"\n            :class=\"{active:indexAt == item.indexAt}\" :id=\"item.groupId\" disName=\"3\">\n              <div class=\"discussion-icon\">\n                <DiscussionIcon iconType=\"medium\" :name=\"item.groupNameOrigin\" />\n              </div>\n              <div class=\"flex flex-direction justify-center name-notes-id\">\n                <div class=\"nick-name\">\n                  <span v-html=\"item.groupName\"></span>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <br />\n      </div>\n    </el-drawer>\n    <AddFriGrop\n      v-if=\"addOrderVisible\"\n      :visible.sync=\"addOrderVisible\"\n      :index=\"this.index\"\n      @handCloseFri=\"handCloseFri\"\n    />\n    <DialogGroupVisible\n      :dialogGroupVisible=\"groupVisible\"\n      @handCloseGroup=\"handCloseGroup\"\n      ref=\"creatGroup\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DialogGroupVisible from \"@/view/add-friends-group/dialog/sceate-groups\";\nimport AddFriGrop from \"@/view//add-friends-group/add\";\nimport { mapState,mapMutations } from \"vuex\";\nimport bus from \"@/utils/eventbus\";\nimport { sqliteUpdate } from \"@/services/sqliteDao\";\nimport { contFriSize, contGrpSize } from \"@/utils\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport fileOperational from \"@/services/fileOperational\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport { checkFreeGroupLimit } from \"../components/server\";\nimport AppealsDialog from \"@/view/chat/appeals\";\nimport ImpeachDialog from \"@/view/chat/impeach\";\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DialogGroupVisible,\n    AddFriGrop,\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n    AppealsDialog,\n    ImpeachDialog,\n  },\n  data() {\n    //这里存放数据\n    return {\n      indexAt:0,//被选中item的下标0\n      alldataNum:0,//搜索到的所有列表之和\n      currentItem:{},//上下键选中的item\n      popoverVisible:false,\n      searchListBox: false,\n      serFlag: false,\n      groupVisible: false,\n      AppealsVisible: false,\n      ImpeachVisible: false,\n      impeachFromtype: '',//来源类型\n      addOrderVisible: false,\n      keyword: '',\n      friendsData: [],\n      groupsData: [],\n      discussionsData: [],\n      isShowAll: false,\n      friendsDataMin: [],\n      direction: 'ttb',\n      index: 0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n  },\n  //监控data中的数据变化\n  watch: {\n    '$route.path': function(newVal) {\n      // console.log(newVal.indexOf(\"/app/chat\"));\n      if (newVal.indexOf('/app/chat') >= 0 || newVal.indexOf('/app/contact') >= 0) {\n        this.serFlag = true;\n      } else {\n        this.serFlag = false;\n      }\n    },\n    searchListBox(val){\n      if(!val){\n        document.removeEventListener('keydown', this.keyMove)\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    handCloseFri() {\n      this.addOrderVisible = false;\n    },\n    async handGoChatF(item) {\n      // console.error(item)\n      this.CLEAR_CHAT();\n      let current = {\n        id: item.friendId,\n        sessionName: item.friendNickName,\n        sessionIcon: item.friendHeadImg,\n        targetType: 1, //单聊\n        msgType: 1, //默认文本\n        textOrigin: '',\n        uniqueCode: contFriSize(item.friendId, UserInfoUtils.getCurrentUserId()),\n        fromType: '999'\n      };\n      await this.updateSessionTime(item.friendId);\n      this.$store.dispatch('ADD_LAST_MSG_LIST', {\n        ...current,\n        isJump: true,\n        updateTime: new Date().getTime()\n      });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.searchListBox = false;\n      this.indexAt = 0;\n      this.keyword = '';\n      this.$router.push({\n        path: '/app/chat/single/message',\n        query: {\n          id: item.friendId,\n          fromId: item.friendId,\n          targetId: item.userId,\n          timer: new Date().getTime(),\n          uniqueCode: contFriSize(item.userId, item.friendId),\n          friendName: encodeURI(item.sessionName)\n        }\n      });\n      bus.$emit('scrollToTop');\n    },\n    //群聊跳转\n    async handGoChatG(item) {\n      this.CLEAR_CHAT();\n      let current = {\n        id: item.groupId,\n        sessionName: item.groupName,\n        targetId: item.groupId,\n        targetType: 2, //单聊\n        textOrigin: '',\n        msgType: 1, //默认文本\n        groupType: 1,\n        uniqueCode: contGrpSize(item.groupId),\n        fromType: '999'\n      };\n      await this.updateSessionTime(item.groupId);\n      this.$store.dispatch('ADD_LAST_MSG_LIST', {\n        ...current,\n        isJump: true,\n        updateTime: new Date().getTime()\n      });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.searchListBox = false;\n      this.indexAt = 0;\n      this.keyword = '';\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          id: item.groupId,\n          targetId: item.groupId,\n          timer: new Date().getTime(),\n          friendName: encodeURI(item.groupName),\n          uniqueCode: contGrpSize(item.groupId),\n          groupType: 1\n        }\n      });\n      bus.$emit('scrollToTop');\n    },\n    //讨论组跳转\n    async handGoChatDiscussion(item) {\n      this.CLEAR_CHAT();\n      let current = {\n        id: item.groupId,\n        sessionName: item.groupName,\n        targetId: item.groupId,\n        targetType: 2, //单聊\n        textOrigin: '',\n        msgType: 1, //默认文本\n        groupType: 0,\n        uniqueCode: contGrpSize(item.groupId),\n        fromType: '999'\n      };\n      await this.updateSessionTime(item.groupId);\n      this.$store.dispatch('ADD_LAST_MSG_LIST', {\n        ...current,\n        isJump: true,\n        updateTime: new Date().getTime()\n      });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.searchListBox = false;\n      this.indexAt = 0;\n      this.keyword = '';\n      this.$router.push({\n        path: '/app/chat/discussion/message',\n        query: {\n          id: item.groupId,\n          targetId: item.groupId,\n          timer: new Date().getTime(),\n          friendName: encodeURI(item.groupName),\n          uniqueCode: contGrpSize(item.groupId),\n          groupType: 0\n        }\n      });\n      bus.$emit('scrollToTop');\n    },\n    async updateSessionTime(id) {\n      console.log('updateTime=', new Date().getTime() + '');\n      await sqliteUpdate('t_sessions', { id }, { updateTime: new Date().getTime() + '' });\n    },\n    //将 friendList 中字段下划线转换成驼峰\n    changeFriendName(arr) {\n      return arr.map(a => {\n        a = {\n          friendAreaCityCode: a.friend_areaCountryCode,\n          friendAreaCountryCode: a.friend_areaCountryCode,\n          friendAttrs: a.friend_attrs,\n          friendFriendNotes: a.friend_friendNotes,\n          friendGender: a.friend_gender,\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name,\n          friendPersonalSign: a.friend_personalSign,\n          friendType: a.friend_type,\n          friendUpdatedOn: a.friend_updatedOn,\n          inviteCode: a.invite_code,\n          colorInviteCode: a.invite_code,\n          isShow: a.is_show,\n          level: a.level,\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank\n        };\n        return a;\n      });\n    },\n    //将 groupList 中字段下划线转换成驼峰\n    changeGroupName(arr) {\n      return arr.map(a => {\n        a = {\n          groupId: a.group_id,\n          groupNameOrigin: a.group_name,\n          groupName: a.group_name,\n          groupNamePinyin: a.group_name_pinyin,\n          groupStatus: a.group_status,\n          groupProfile: a.group_profile,\n\n          groupAvatar: a.group_avatar,\n          groupAvatarLocal: a.group_avatar_local,\n          addCheck: a.add_check,\n          inviteAuth: a.invite_auth,\n          country: a.country,\n\n          city: a.city,\n          screenshotsReminderStatus: a.screenshotsReminderStatus,\n          forbiddenWordsStatus: a.forbiddenWordsStatus,\n          memberSingleChatStatus: a.memberSingleChatStatus,\n          sendPicturesStatus: a.sendPicturesStatus,\n          sendConnectionStatus: a.sendConnectionStatus,\n          sendRedpacketStatus: a.sendRedpacketStatus,\n          copyMessagesStauts: a.copyMessagesStauts,\n          createTime: a.create_time,\n          saveTime: a.save_time,\n          people: a.people,\n          memberLevelStatus: a.member_level_status,\n          groupLevel: a.group_level,\n          updatedOn: a.updatedOn,\n          code: a.code,\n          groupCode: a.group_code,\n          groupType: a.group_type,\n          groupTab: a.groupTab\n        };\n        return a;\n      });\n    },\n    //讨论组\n    async getSearchDiscussion(key) {\n      let res = await window.vm\n        .$knex('t_groups')\n        .where(function() {\n          this.where('group_name', 'like', '%' + key + '%').orWhere('group_name_pinyin', 'like', '%' + key + '%');\n          // .orWhere(\"group_code\", \"like\", \"%\" + key + \"%\");\n        })\n        .where('group_type', '=', 0)\n        .orderBy('group_name_pinyin')\n        .select();\n      this.discussionsData = this.changeGroupName(res);\n    },\n    //群\n    async getSearchGroup(key) {\n      let res = await window.vm\n        .$knex('t_groups')\n        .where(function() {\n          this.where('group_name', 'like', '%' + key + '%')\n            .orWhere('group_name_pinyin', 'like', '%' + key + '%')\n            .orWhere('group_code', 'like', '%' + key + '%');\n        })\n        .where('group_type', '=', 1)\n        .orderBy('group_name_pinyin')\n        .select();\n      this.groupsData = this.changeGroupName(res);\n    },\n    //个人\n    async getSearchFriends(key) {\n      let res = await window.vm\n        .$knex('t_contacts')\n        .where(function() {\n          this.where('friend_nick_name', 'like', '%' + key + '%')\n            .orWhere('friend_nick_name_pinyin', 'like', '%' + key + '%')\n            .orWhere('invite_code', 'like', '%' + key + '%')\n            .orWhere('friend_friendNotes_pinyin', 'like', '%' + key + '%')\n            .orWhere('friend_friendNotes', 'like', '%' + key + '%');\n        })\n        .where(function() {\n          this.whereNull('is_show').orWhere('is_show', '!=', 'false');\n        })\n        .orderBy('friend_nick_name_pinyin')\n        .select();\n      this.friendsData = this.changeFriendName(res);\n    },\n    closePopver(){\n      console.log(this.indexAt,'closepopver')\n      this.keyword = '';\n      document.removeEventListener('keydown', this.keyMove)\n    },\n    async search() {\n      this.keyword == '' ? (this.searchListBox = false,this.indexAt = 0,this.keyword = '') : (this.searchListBox = true);\n      if (!this.keyword) {\n        // this.$message.error(\"请输入搜索内容\");\n        return;\n      }\n      if (this.keyword.trim() == '') {\n        return;\n      }\n      // this.resetData();\n      await this.getSearchFriends(this.keyword);\n      await this.getSearchGroup(this.keyword);\n      await this.getSearchDiscussion(this.keyword);\n      // console.log(this.friendsData, this.groupsData, this.discussionsData);\n      this.isShowAll = this.friendsData.length > 5;\n      if (this.isShowAll) {\n        this.friendsDataMin = this.friendsData.slice(0, 5);\n        if (this.friendsDataMin.length >= 5) {\n          this.isShowGroup = false;\n        }\n      } else {\n        this.friendsDataMin = this.friendsData;\n      }\n      await this.changeColor();\n      await this.chooseSearch();\n      // this.enterInto()\n    },\n    enterInto(){\n      document.removeEventListener('keydown', this.keyMove)\n      if(this.searchListBox){ // && document.getElementById('searchAll') == document.activeElement\n        document.addEventListener('keydown',this.keyMove)\n      }\n    },\n    changeColor() {\n      if (this.keyword) {\n        let key = this.keyword.toLowerCase();\n        let replaceReg = new RegExp(key, 'g');\n        let replaceString = '<span class=\"high-light\">' + key + '</span>';\n        let keyUp = this.keyword.toUpperCase();\n        let replaceRegUp = new RegExp(keyUp, 'g');\n        let replaceStringUp = '<span class=\"high-light\">' + keyUp + '</span>';\n        this.friendsDataMin.map((item,index) => {\n          item.indexAt = index;\n          if (item.friendNickName.toLowerCase().indexOf(key) != -1) {\n            item.friendNickName = item.friendNickName.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n          }\n          if (item.friendFriendNotes && item.friendFriendNotes.toLowerCase().indexOf(key) != -1) {\n            item.friendFriendNotes = item.friendFriendNotes.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n            item.showNotes = true;\n          }\n          if (item.colorInviteCode.toLowerCase().indexOf(key) != -1) {\n            item.colorInviteCode = item.colorInviteCode.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n            item.showCode = true;\n          }\n        });\n        this.groupsData.map((item,index) => {\n          item.indexAt = Number(this.friendsDataMin.length) + index;\n          if (item.groupName.toLowerCase().indexOf(key) != -1) {\n            item.groupName = item.groupName.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n          }\n          if (item.groupCode.toLowerCase().indexOf(key) != -1) {\n            item.groupCode = item.groupCode.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n            item.showCode = true;\n          }\n        });\n        this.discussionsData.map((item,index) => {\n          item.indexAt = Number(this.friendsDataMin.length)+ Number(this.groupsData.length) +index;\n          if (item.groupName.toLowerCase().indexOf(key) != -1) {\n            item.groupName = item.groupName.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n          }\n        });\n        this.alldataNum = Number(this.friendsDataMin.length)+Number(this.groupsData.length)+Number(this.discussionsData.length)\n      }\n      this.$forceUpdate();\n    },\n    addHand(index) {\n      if(this.personalAppealInfo.createTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('book_group_0019'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.toAppeal('single');\n        }).catch(() => {\n        });\n      }else{\n        this.addOrderVisible = true;\n        this.index = index;\n      }\n    },\n\n    handOpenGroup() {\n      console.log('handOpenGroup')\n      this.popoverVisible = false\n      if(this.personalAppealInfo.createTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('book_group_0019'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.toAppeal('single');\n        }).catch(() => {\n        });\n      }else{\n        const params = {'userId':UserInfoUtils.getCurrentUserId()}\n        checkFreeGroupLimit(params).then(async (res) => {\n          if (res.code == \"200\") {\n            if (res.data.groupNowNum >= res.data.groupLimit){\n              this.$confirm(this.$t('chat_createcommunity_0036', {limit: res.data.groupLimit}),\n                this.$t('Universal_0059'),{\n                  confirmButtonText: this.$t('book_group_0019'),\n                  showCancelButton: false,\n                  center: true,\n                  showClose: false,\n                }).then(() => {\n              // this.$confirm(`当前社区创建上限${res.data.groupLimit}个，创建已超限，无法创建`, \"提示  \",{\n              //   confirmButtonText: \"知道了\",\n              //   showCancelButton: false,\n              //   center: true,\n              //   showClose: false,\n              // }).then(() => {\n              // }).catch(() => {\n              });\n            }else{\n              // 打开发起群聊弹框           \n              this.groupVisible = true;\n              this.$refs.creatGroup.resetFroms();\n              this.$nextTick(()=>{\n                bus.$emit('changeLanguage',this.$i18n.locale);\n              });\n            }\n          } \n        });\n        // this.dialogAddFriendsVisible = true;\n      }\n    },\n    handCloseGroup() {\n      // 关闭发起群聊弹框\n      this.groupVisible = false;\n    },\n    cancelAppealsDialogHand(param) {\n      this.AppealsVisible = param;\n    },\n    cancelImpeachDialogHand(param) {\n      this.ImpeachVisible = param;\n    },\n    //去申诉\n    toAppeal(impeachFromtype) {\n      this.impeachFromtype = impeachFromtype;\n      this.AppealsVisible = true;\n      this.$refs.appeal.init();\n    },\n    toImpeachDialog(){\n      this.AppealsVisible = false;\n      this.ImpeachVisible = true;\n      this.$refs.impeach.init()\n    },\n    async showAll() {\n      this.resetData();\n      await this.getSearchFriends(this.keyword);\n      await this.getSearchGroup(this.keyword);\n      await this.getSearchDiscussion(this.keyword);\n      this.friendsDataMin = this.friendsData;\n      this.changeColor();\n    },\n    resetData() {\n      this.friendsData = [];\n      this.groupsData = [];\n      this.discussionsData = [];\n      this.isShowAll = false;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    cleanInput() {\n      this.keyword = '';\n    },\n    drawerClose() {\n      this.searchListBox = false;\n      this.keyword = '';\n    },\n    // 替换404图片\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'group');\n    },\n    move(){\n      if( document.getElementsByClassName('searchListBox')[0]){\n        console.log(document.getElementsByClassName('active')[0].offsetTop,'位移',document.getElementsByClassName('searchListBox')[0])\n        document.getElementsByClassName('searchListBox')[0].scrollTop = document.getElementsByClassName('active')[0].offsetTop-70\n      }\n    },\n    keyMove(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,this.alldataNum,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n          console.log(this.indexAt,'--')\n        }else{\n          this.indexAt = 0;\n        }\n        this.move()\n      }else if(e.keyCode == 40){ //下键\n        console.log(this.indexAt,this.alldataNum,'down2222')\n        if(this.indexAt < this.alldataNum-1){\n          this.indexAt++;\n          console.log(this.indexAt,'++')\n        }else if(this.indexAt == this.alldataNum){\n          this.indexAt = this.indexAt-1 ;\n          console.log(this.indexAt,'-1后')\n        }\n        this.move()\n        console.log(this.$route,'this.$route')\n      }\n      else if(e.keyCode == 13){\n        console.log(document.getElementsByClassName('active')[0],'wswwwww')\n        let currentId='',disName='',currentPath = this.$route.path\n        if(document.getElementsByClassName('active')[0]){\n          currentId = document.getElementsByClassName('active')[0].getAttribute(\"id\")\n          disName = document.getElementsByClassName('active')[0].getAttribute(\"disName\")\n          console.log(currentId,'currentId')\n        }\n        console.log(disName,this.friendsDataMin,currentPath)\n        if(disName == 1){ //好友\n          this.currentItem = this.friendsDataMin.filter((item) => {\n            return item.inviteCode == currentId\n          })\n          console.log(this.currentItem,'currentItem')\n          if(currentPath.indexOf('chat')>-1){\n            this.handGoChatF(this.currentItem[0])\n          }else{\n            this.handGoChat(this.currentItem[0])\n          }\n        }else if(disName == 2){ //社区\n          this.currentItem = this.groupsData.filter((item) => {\n            return item.groupId == currentId\n          })\n          console.log(this.currentItem,'currentItem')\n          if(currentPath.indexOf('chat')>-1){\n            this.handGoChatG(this.currentItem[0])\n          }else{\n            this.GoGroup(this.currentItem[0])\n          }\n        }else if(disName == 3){ //讨论组\n          this.currentItem = this.discussionsData.filter((item) => {\n            return item.groupId == currentId\n          })\n          console.log(this.currentItem,'currentItem')\n          if(currentPath.indexOf('chat')>-1){\n            this.handGoChatDiscussion(this.currentItem[0])\n          }else{\n            this.GoDisscuss(this.currentItem[0])\n          }\n        }\n      }\n      \n    },\n    chooseSearch(){\n      this.indexAt = 0;\n      console.log(this.alldataNum,'this.alldataNum')\n      document.removeEventListener('keydown', this.keyMove)\n      if(this.searchListBox){ // && document.getElementById('searchAll') == document.activeElement\n        document.addEventListener('keydown',this.keyMove)\n      }\n    },\n    handGoChat(item) {\n      this.searchListBox = false\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: 0,\n          id: item.friendId,\n          targetId: item.userId,\n          nickName: item.friendNickName,\n          headImg: item.friendHeadImg,\n          isSelect:item.friendId\n        }\n      });\n    },\n    GoGroup(item) {\n      this.searchListBox = false\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: 1,\n          id: item.groupId,\n          targetId: item.groupId,\n          nickName: item.groupName,\n          headImg: item.groupAvatar,\n          num: item.people,\n          authStatus: item.status,\n          isSelect:item.groupId\n        }\n      });\n    },\n    GoDisscuss(item) {\n      this.searchListBox = false\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: 1,\n          id: item.groupId,\n          targetId: item.groupId,\n          nickName: item.groupName,\n          headImg: item.groupAvatar,\n          num: item.people,\n          authStatus: item.status,\n          name: 'discussion',\n          groupType: item.groupType,\n          isSelect:item.groupId\n        }\n      });\n    },\n    closeMembers(){\n      bus.$emit('closeMemberinfo')\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    \n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.keyMove)\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 成员列表-顶部搜索框 -->\n<template>\n  <div class=\"searchBox\">\n    <div style=\"text-align: left; -webkit-app-region: drag\">\n      <!-- @keyup.enter.native=\"keyword == '' ? (searchListBox = false,indexAt = 0,keyword = '') : (searchListBox = true,search())\" -->\n      <el-input\n        clearable\n        class=\"my_class\"\n        :placeholder=\"$t('Universal_0058')\"\n        prefix-icon=\"el-icon-search\"\n        v-model=\"keyword\"\n        :class=\"[!serFlag ? 'visible' : '']\"\n        @input=\"search()\"\n        style=\"-webkit-app-region: no-drag\"\n        id=\"searchAll\"\n        @focus=\"closeMembers\"\n      ></el-input>\n      <el-popover\n        v-model=\"popoverVisible\"\n        placement=\"right\"\n        trigger=\"click\"\n        popper-class=\"noDrag addMenu\"\n        style=\"-webkit-app-region: no-drag; min-width: 125px;\"\n      >\n        <ul class=\"addbox\">\n          <li\n            style=\"\n              line-height: 35px;\n              border-bottom: 1px solid #eee;\n              cursor: pointer;\n            \"\n            @click=\"addHand(0),popoverVisible = false\"\n          >\n            <img draggable='false' src=\"../assets/images/add.png\" /><span>{{ $t('chat_addfriend_0001') }}</span>\n          </li>\n          <li\n            style=\"\n              line-height: 35px;\n              border-bottom: 1px solid #eee;\n              cursor: pointer;\n            \"\n            @click=\"addHand(1),popoverVisible = false\"\n          >\n            <img draggable='false' src=\"../assets/images/creatGroup.png\" /><span>{{ $t('chat_joincommunity_0001') }}</span>\n          </li>\n          <li style=\"line-height: 35px; cursor: pointer\" @click=\"handOpenGroup\">\n            <img draggable='false' src=\"../assets/images/addgroup.png\" /><span>{{ $t('chat_createcommunity_0001') }}</span>\n          </li>\n        </ul>\n        <el-button @click=\"closeMembers(),searchListBox = false\" \n        plain size=\"mini\" id=\"contact-add-btn\" slot=\"reference\" style=\"margin-left: 18px\" :class=\"[!serFlag ? 'visible' : '']\"\n          >+\n        </el-button>\n      </el-popover>\n    </div>\n    <!--搜索结果 弹窗 -->\n    <el-drawer\n      title\n      :with-header=\"false\"\n      :visible.sync=\"searchListBox\"\n      :direction=\"direction\"\n      :modal=\"false\"\n      :close-on-press-escape=\"true\"\n      custom-class=\"searchListBox\"\n      style=\"min-height: 600px; left: 61px; top: 60px\"\n      @close=\"closePopver\"\n    >\n      <div >\n        <div v-show=\"friendsDataMin.length == 0 && groupsData.length == 0 && discussionsData.length == 0\" class=\"no-data\">\n          <img src=\"../assets/images/web.png\" class=\"img_search\" />\n          <p>{{ $t('Universal_0173') }}</p>\n        </div>\n        <div class=\"list contacts\" v-show=\"friendsDataMin.length > 0\">\n          <p>\n            {{ $t('chat_search_0003') }}\n            <span @click=\"showAll\" v-show=\"isShowAll\">{{ $t('Universal_0271') }}</span>\n          </p>\n          <ul>\n            <li v-for=\"(item, index) in friendsDataMin\" :key=\"'friend' + index\" @click=\"handGoChatF(item)\" \n            :class=\"{active:indexAt == item.indexAt}\" :id=\"item.inviteCode\" disName=\"1\">\n              <!--              <img :src=\"findImage(item.friendHeadImg)\" alt=\"头像\"/>-->\n              <div class=\"friend-icon\">\n                <MemberIcon :image=\"item.friendHeadImg\" iconType=\"small\" :userRank=\"item.userRank\" :vipType=\"item.vipType\" />\n              </div>\n              <div class=\"flex flex-direction name-notes-id\">\n                <div class=\"nick-name\">\n                  <span v-html=\"item.friendNickName\"></span>\n                  <LevelIcon\n                    :inviteCode=\"item.inviteCode\"\n                    :userRank=\"item.userRank\"\n                    iconType=\"medium\"\n                    :vipType=\"item.vipType\"\n                    :inviteCodeType=\"item.inviteCodeType\"\n                    :listFlag=\"true\"\n                  />\n                </div>\n                <div class=\"friend-notes\" v-show=\"item.showNotes\">\n                  <span>{{ $t('book_friend_0002') }}</span><span v-html=\"item.friendFriendNotes\"></span>\n                </div>\n                <div class=\"invite-code\" v-show=\"item.showCode\">\n                  <LuckIdIcon\n                    :inviteCode=\"item.inviteCode\"\n                    :userRank=\"item.userRank\"\n                    iconType=\"medium\"\n                    :vipType=\"item.vipType\"\n                    :inviteCodeType=\"item.inviteCodeType\"\n                    :listFlag=\"false\"\n                  />\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div class=\"list groups\" v-show=\"groupsData.length > 0\">\n          <p>{{ $t('chat_search_0005') }}</p>\n          <ul>\n            <li v-for=\"(item, index) in groupsData\" :key=\"'group' + index\" @click=\"handGoChatG(item)\" \n            :class=\"{active:indexAt == item.indexAt}\" :id=\"item.groupId\" disName=\"2\">\n              <div class=\"group-icon\">\n                <img class=\"avatar\"\n                     :src=\"findImage(item.groupAvatar)\"\n                     v-if=\"item.groupAvatar\"\n                     :alt=\"$t('Universal_0184')\"\n                     @error=\"replaceImg\" />\n                <img class=\"avatar\" src=\"../assets/images/group.png\" v-else\n                     :alt=\"$t('Universal_0184')\"  />\n              </div>\n              <div class=\"flex flex-direction justify-center name-notes-id\">\n                <div class=\"nick-name\">\n                  <span v-html=\"item.groupName\"></span>\n                </div>\n                <div class=\"group-code\" v-show=\"item.showCode\">\n                  <span>{{ $t('book_community_0007') }}: </span><span v-html=\"item.groupCode\"></span>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div class=\"list groups\" v-show=\"discussionsData.length > 0\">\n          <p>{{ $t('chat_search_0007') }}</p>\n          <ul>\n            <li v-for=\"(item, index) in discussionsData\" :key=\"'group' + index\" @click=\"handGoChatDiscussion(item)\"\n            :class=\"{active:indexAt == item.indexAt}\" :id=\"item.groupId\" disName=\"3\">\n              <div class=\"discussion-icon\">\n                <DiscussionIcon iconType=\"medium\" :name=\"item.groupNameOrigin\" />\n              </div>\n              <div class=\"flex flex-direction justify-center name-notes-id\">\n                <div class=\"nick-name\">\n                  <span v-html=\"item.groupName\"></span>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <br />\n      </div>\n    </el-drawer>\n    <AddFriGrop\n      v-if=\"addOrderVisible\"\n      :visible.sync=\"addOrderVisible\"\n      :index=\"this.index\"\n      @handCloseFri=\"handCloseFri\"\n    />\n    <DialogGroupVisible\n      :dialogGroupVisible=\"groupVisible\"\n      @handCloseGroup=\"handCloseGroup\"\n      ref=\"creatGroup\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DialogGroupVisible from \"@/view/add-friends-group/dialog/sceate-groups\";\nimport AddFriGrop from \"@/view//add-friends-group/add\";\nimport { mapState,mapMutations } from \"vuex\";\nimport bus from \"@/utils/eventbus\";\nimport { sqliteUpdate } from \"@/services/sqliteDao\";\nimport { contFriSize, contGrpSize } from \"@/utils\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport fileOperational from \"@/services/fileOperational\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport { checkFreeGroupLimit } from \"../components/server\";\nimport AppealsDialog from \"@/view/chat/appeals\";\nimport ImpeachDialog from \"@/view/chat/impeach\";\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DialogGroupVisible,\n    AddFriGrop,\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n    AppealsDialog,\n    ImpeachDialog,\n  },\n  data() {\n    //这里存放数据\n    return {\n      indexAt:0,//被选中item的下标0\n      alldataNum:0,//搜索到的所有列表之和\n      currentItem:{},//上下键选中的item\n      popoverVisible:false,\n      searchListBox: false,\n      serFlag: false,\n      groupVisible: false,\n      AppealsVisible: false,\n      ImpeachVisible: false,\n      impeachFromtype: '',//来源类型\n      addOrderVisible: false,\n      keyword: '',\n      friendsData: [],\n      groupsData: [],\n      discussionsData: [],\n      isShowAll: false,\n      friendsDataMin: [],\n      direction: 'ttb',\n      index: 0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n  },\n  //监控data中的数据变化\n  watch: {\n    '$route.path': function(newVal) {\n      // console.log(newVal.indexOf(\"/app/chat\"));\n      if (newVal.indexOf('/app/chat') >= 0 || newVal.indexOf('/app/contact') >= 0) {\n        this.serFlag = true;\n      } else {\n        this.serFlag = false;\n      }\n    },\n    searchListBox(val){\n      if(!val){\n        document.removeEventListener('keydown', this.keyMove)\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    handCloseFri() {\n      this.addOrderVisible = false;\n    },\n    async handGoChatF(item) {\n      // console.error(item)\n      this.CLEAR_CHAT();\n      let current = {\n        id: item.friendId,\n        sessionName: item.friendNickName,\n        sessionIcon: item.friendHeadImg,\n        targetType: 1, //单聊\n        msgType: 1, //默认文本\n        textOrigin: '',\n        uniqueCode: contFriSize(item.friendId, UserInfoUtils.getCurrentUserId()),\n        fromType: '999'\n      };\n      await this.updateSessionTime(item.friendId);\n      this.$store.dispatch('ADD_LAST_MSG_LIST', {\n        ...current,\n        isJump: true,\n        updateTime: new Date().getTime()\n      });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.searchListBox = false;\n      this.indexAt = 0;\n      this.keyword = '';\n      this.$router.push({\n        path: '/app/chat/single/message',\n        query: {\n          id: item.friendId,\n          fromId: item.friendId,\n          targetId: item.userId,\n          timer: new Date().getTime(),\n          uniqueCode: contFriSize(item.userId, item.friendId),\n          friendName: encodeURI(item.sessionName)\n        }\n      });\n      bus.$emit('scrollToTop');\n    },\n    //群聊跳转\n    async handGoChatG(item) {\n      this.CLEAR_CHAT();\n      let current = {\n        id: item.groupId,\n        sessionName: item.groupName,\n        targetId: item.groupId,\n        targetType: 2, //单聊\n        textOrigin: '',\n        msgType: 1, //默认文本\n        groupType: 1,\n        uniqueCode: contGrpSize(item.groupId),\n        fromType: '999'\n      };\n      await this.updateSessionTime(item.groupId);\n      this.$store.dispatch('ADD_LAST_MSG_LIST', {\n        ...current,\n        isJump: true,\n        updateTime: new Date().getTime()\n      });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.searchListBox = false;\n      this.indexAt = 0;\n      this.keyword = '';\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          id: item.groupId,\n          targetId: item.groupId,\n          timer: new Date().getTime(),\n          friendName: encodeURI(item.groupName),\n          uniqueCode: contGrpSize(item.groupId),\n          groupType: 1\n        }\n      });\n      bus.$emit('scrollToTop');\n    },\n    //讨论组跳转\n    async handGoChatDiscussion(item) {\n      this.CLEAR_CHAT();\n      let current = {\n        id: item.groupId,\n        sessionName: item.groupName,\n        targetId: item.groupId,\n        targetType: 2, //单聊\n        textOrigin: '',\n        msgType: 1, //默认文本\n        groupType: 0,\n        uniqueCode: contGrpSize(item.groupId),\n        fromType: '999'\n      };\n      await this.updateSessionTime(item.groupId);\n      this.$store.dispatch('ADD_LAST_MSG_LIST', {\n        ...current,\n        isJump: true,\n        updateTime: new Date().getTime()\n      });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.searchListBox = false;\n      this.indexAt = 0;\n      this.keyword = '';\n      this.$router.push({\n        path: '/app/chat/discussion/message',\n        query: {\n          id: item.groupId,\n          targetId: item.groupId,\n          timer: new Date().getTime(),\n          friendName: encodeURI(item.groupName),\n          uniqueCode: contGrpSize(item.groupId),\n          groupType: 0\n        }\n      });\n      bus.$emit('scrollToTop');\n    },\n    async updateSessionTime(id) {\n      console.log('updateTime=', new Date().getTime() + '');\n      await sqliteUpdate('t_sessions', { id }, { updateTime: new Date().getTime() + '' });\n    },\n    //将 friendList 中字段下划线转换成驼峰\n    changeFriendName(arr) {\n      return arr.map(a => {\n        a = {\n          friendAreaCityCode: a.friend_areaCountryCode,\n          friendAreaCountryCode: a.friend_areaCountryCode,\n          friendAttrs: a.friend_attrs,\n          friendFriendNotes: a.friend_friendNotes,\n          friendGender: a.friend_gender,\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name,\n          friendPersonalSign: a.friend_personalSign,\n          friendType: a.friend_type,\n          friendUpdatedOn: a.friend_updatedOn,\n          inviteCode: a.invite_code,\n          colorInviteCode: a.invite_code,\n          isShow: a.is_show,\n          level: a.level,\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank\n        };\n        return a;\n      });\n    },\n    //将 groupList 中字段下划线转换成驼峰\n    changeGroupName(arr) {\n      return arr.map(a => {\n        a = {\n          groupId: a.group_id,\n          groupNameOrigin: a.group_name,\n          groupName: a.group_name,\n          groupNamePinyin: a.group_name_pinyin,\n          groupStatus: a.group_status,\n          groupProfile: a.group_profile,\n\n          groupAvatar: a.group_avatar,\n          groupAvatarLocal: a.group_avatar_local,\n          addCheck: a.add_check,\n          inviteAuth: a.invite_auth,\n          country: a.country,\n\n          city: a.city,\n          screenshotsReminderStatus: a.screenshotsReminderStatus,\n          forbiddenWordsStatus: a.forbiddenWordsStatus,\n          memberSingleChatStatus: a.memberSingleChatStatus,\n          sendPicturesStatus: a.sendPicturesStatus,\n          sendConnectionStatus: a.sendConnectionStatus,\n          sendRedpacketStatus: a.sendRedpacketStatus,\n          copyMessagesStauts: a.copyMessagesStauts,\n          createTime: a.create_time,\n          saveTime: a.save_time,\n          people: a.people,\n          memberLevelStatus: a.member_level_status,\n          groupLevel: a.group_level,\n          updatedOn: a.updatedOn,\n          code: a.code,\n          groupCode: a.group_code,\n          groupType: a.group_type,\n          groupTab: a.groupTab\n        };\n        return a;\n      });\n    },\n    //讨论组\n    async getSearchDiscussion(key) {\n      let res = await window.vm\n        .$knex('t_groups')\n        .where(function() {\n          this.where('group_name', 'like', '%' + key + '%').orWhere('group_name_pinyin', 'like', '%' + key + '%');\n          // .orWhere(\"group_code\", \"like\", \"%\" + key + \"%\");\n        })\n        .where('group_type', '=', 0)\n        .orderBy('group_name_pinyin')\n        .select();\n      this.discussionsData = this.changeGroupName(res);\n    },\n    //群\n    async getSearchGroup(key) {\n      let res = await window.vm\n        .$knex('t_groups')\n        .where(function() {\n          this.where('group_name', 'like', '%' + key + '%')\n            .orWhere('group_name_pinyin', 'like', '%' + key + '%')\n            .orWhere('group_code', 'like', '%' + key + '%');\n        })\n        .where('group_type', '=', 1)\n        .orderBy('group_name_pinyin')\n        .select();\n      this.groupsData = this.changeGroupName(res);\n    },\n    //个人\n    async getSearchFriends(key) {\n      let res = await window.vm\n        .$knex('t_contacts')\n        .where(function() {\n          this.where('friend_nick_name', 'like', '%' + key + '%')\n            .orWhere('friend_nick_name_pinyin', 'like', '%' + key + '%')\n            .orWhere('invite_code', 'like', '%' + key + '%')\n            .orWhere('friend_friendNotes_pinyin', 'like', '%' + key + '%')\n            .orWhere('friend_friendNotes', 'like', '%' + key + '%');\n        })\n        .where(function() {\n          this.whereNull('is_show').orWhere('is_show', '!=', 'false');\n        })\n        .orderBy('friend_nick_name_pinyin')\n        .select();\n      this.friendsData = this.changeFriendName(res);\n    },\n    closePopver(){\n      console.log(this.indexAt,'closepopver')\n      this.keyword = '';\n      document.removeEventListener('keydown', this.keyMove)\n    },\n    async search() {\n      this.keyword == '' ? (this.searchListBox = false,this.indexAt = 0,this.keyword = '') : (this.searchListBox = true);\n      if (!this.keyword) {\n        // this.$message.error(\"请输入搜索内容\");\n        return;\n      }\n      if (this.keyword.trim() == '') {\n        return;\n      }\n      // this.resetData();\n      await this.getSearchFriends(this.keyword);\n      await this.getSearchGroup(this.keyword);\n      await this.getSearchDiscussion(this.keyword);\n      // console.log(this.friendsData, this.groupsData, this.discussionsData);\n      this.isShowAll = this.friendsData.length > 5;\n      if (this.isShowAll) {\n        this.friendsDataMin = this.friendsData.slice(0, 5);\n        if (this.friendsDataMin.length >= 5) {\n          this.isShowGroup = false;\n        }\n      } else {\n        this.friendsDataMin = this.friendsData;\n      }\n      await this.changeColor();\n      await this.chooseSearch();\n      // this.enterInto()\n    },\n    enterInto(){\n      document.removeEventListener('keydown', this.keyMove)\n      if(this.searchListBox){ // && document.getElementById('searchAll') == document.activeElement\n        document.addEventListener('keydown',this.keyMove)\n      }\n    },\n    changeColor() {\n      if (this.keyword) {\n        let key = this.keyword.toLowerCase();\n        let replaceReg = new RegExp(key, 'g');\n        let replaceString = '<span class=\"high-light\">' + key + '</span>';\n        let keyUp = this.keyword.toUpperCase();\n        let replaceRegUp = new RegExp(keyUp, 'g');\n        let replaceStringUp = '<span class=\"high-light\">' + keyUp + '</span>';\n        this.friendsDataMin.map((item,index) => {\n          item.indexAt = index;\n          if (item.friendNickName.toLowerCase().indexOf(key) != -1) {\n            item.friendNickName = item.friendNickName.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n          }\n          if (item.friendFriendNotes && item.friendFriendNotes.toLowerCase().indexOf(key) != -1) {\n            item.friendFriendNotes = item.friendFriendNotes.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n            item.showNotes = true;\n          }\n          if (item.colorInviteCode.toLowerCase().indexOf(key) != -1) {\n            item.colorInviteCode = item.colorInviteCode.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n            item.showCode = true;\n          }\n        });\n        this.groupsData.map((item,index) => {\n          item.indexAt = Number(this.friendsDataMin.length) + index;\n          if (item.groupName.toLowerCase().indexOf(key) != -1) {\n            item.groupName = item.groupName.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n          }\n          if (item.groupCode.toLowerCase().indexOf(key) != -1) {\n            item.groupCode = item.groupCode.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n            item.showCode = true;\n          }\n        });\n        this.discussionsData.map((item,index) => {\n          item.indexAt = Number(this.friendsDataMin.length)+ Number(this.groupsData.length) +index;\n          if (item.groupName.toLowerCase().indexOf(key) != -1) {\n            item.groupName = item.groupName.replace(replaceReg, replaceString).replace(replaceRegUp, replaceStringUp);\n          }\n        });\n        this.alldataNum = Number(this.friendsDataMin.length)+Number(this.groupsData.length)+Number(this.discussionsData.length)\n      }\n      this.$forceUpdate();\n    },\n    addHand(index) {\n      if(this.personalAppealInfo.createTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('book_group_0019'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.toAppeal('single');\n        }).catch(() => {\n        });\n      }else{\n        this.addOrderVisible = true;\n        this.index = index;\n      }\n    },\n\n    handOpenGroup() {\n      console.log('handOpenGroup')\n      this.popoverVisible = false\n      if(this.personalAppealInfo.createTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('book_group_0019'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.toAppeal('single');\n        }).catch(() => {\n        });\n      }else{\n        const params = {'userId':UserInfoUtils.getCurrentUserId()}\n        checkFreeGroupLimit(params).then(async (res) => {\n          if (res.code == \"200\") {\n            if (res.data.groupNowNum >= res.data.groupLimit){\n              this.$confirm(this.$t('chat_createcommunity_0036', {limit: res.data.groupLimit}),\n                this.$t('Universal_0059'),{\n                  confirmButtonText: this.$t('book_group_0019'),\n                  showCancelButton: false,\n                  center: true,\n                  showClose: false,\n                }).then(() => {\n              // this.$confirm(`当前社区创建上限${res.data.groupLimit}个，创建已超限，无法创建`, \"提示  \",{\n              //   confirmButtonText: \"知道了\",\n              //   showCancelButton: false,\n              //   center: true,\n              //   showClose: false,\n              // }).then(() => {\n              // }).catch(() => {\n              });\n            }else{\n              // 打开发起群聊弹框           \n              this.groupVisible = true;\n              this.$refs.creatGroup.resetFroms();\n              this.$nextTick(()=>{\n                bus.$emit('changeLanguage',this.$i18n.locale);\n              });\n            }\n          } \n        });\n        // this.dialogAddFriendsVisible = true;\n      }\n    },\n    handCloseGroup() {\n      // 关闭发起群聊弹框\n      this.groupVisible = false;\n    },\n    cancelAppealsDialogHand(param) {\n      this.AppealsVisible = param;\n    },\n    cancelImpeachDialogHand(param) {\n      this.ImpeachVisible = param;\n    },\n    //去申诉\n    toAppeal(impeachFromtype) {\n      this.impeachFromtype = impeachFromtype;\n      this.AppealsVisible = true;\n      this.$refs.appeal.init();\n    },\n    toImpeachDialog(){\n      this.AppealsVisible = false;\n      this.ImpeachVisible = true;\n      this.$refs.impeach.init()\n    },\n    async showAll() {\n      this.resetData();\n      await this.getSearchFriends(this.keyword);\n      await this.getSearchGroup(this.keyword);\n      await this.getSearchDiscussion(this.keyword);\n      this.friendsDataMin = this.friendsData;\n      this.changeColor();\n    },\n    resetData() {\n      this.friendsData = [];\n      this.groupsData = [];\n      this.discussionsData = [];\n      this.isShowAll = false;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    cleanInput() {\n      this.keyword = '';\n    },\n    drawerClose() {\n      this.searchListBox = false;\n      this.keyword = '';\n    },\n    // 替换404图片\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, 'group');\n    },\n    move(){\n      if( document.getElementsByClassName('searchListBox')[0]){\n        console.log(document.getElementsByClassName('active')[0].offsetTop,'位移',document.getElementsByClassName('searchListBox')[0])\n        document.getElementsByClassName('searchListBox')[0].scrollTop = document.getElementsByClassName('active')[0].offsetTop-70\n      }\n    },\n    keyMove(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,this.alldataNum,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n          console.log(this.indexAt,'--')\n        }else{\n          this.indexAt = 0;\n        }\n        this.move()\n      }else if(e.keyCode == 40){ //下键\n        console.log(this.indexAt,this.alldataNum,'down2222')\n        if(this.indexAt < this.alldataNum-1){\n          this.indexAt++;\n          console.log(this.indexAt,'++')\n        }else if(this.indexAt == this.alldataNum){\n          this.indexAt = this.indexAt-1 ;\n          console.log(this.indexAt,'-1后')\n        }\n        this.move()\n        console.log(this.$route,'this.$route')\n      }\n      else if(e.keyCode == 13){\n        console.log(document.getElementsByClassName('active')[0],'wswwwww')\n        let currentId='',disName='',currentPath = this.$route.path\n        if(document.getElementsByClassName('active')[0]){\n          currentId = document.getElementsByClassName('active')[0].getAttribute(\"id\")\n          disName = document.getElementsByClassName('active')[0].getAttribute(\"disName\")\n          console.log(currentId,'currentId')\n        }\n        console.log(disName,this.friendsDataMin,currentPath)\n        if(disName == 1){ //好友\n          this.currentItem = this.friendsDataMin.filter((item) => {\n            return item.inviteCode == currentId\n          })\n          console.log(this.currentItem,'currentItem')\n          if(currentPath.indexOf('chat')>-1){\n            this.handGoChatF(this.currentItem[0])\n          }else{\n            this.handGoChat(this.currentItem[0])\n          }\n        }else if(disName == 2){ //社区\n          this.currentItem = this.groupsData.filter((item) => {\n            return item.groupId == currentId\n          })\n          console.log(this.currentItem,'currentItem')\n          if(currentPath.indexOf('chat')>-1){\n            this.handGoChatG(this.currentItem[0])\n          }else{\n            this.GoGroup(this.currentItem[0])\n          }\n        }else if(disName == 3){ //讨论组\n          this.currentItem = this.discussionsData.filter((item) => {\n            return item.groupId == currentId\n          })\n          console.log(this.currentItem,'currentItem')\n          if(currentPath.indexOf('chat')>-1){\n            this.handGoChatDiscussion(this.currentItem[0])\n          }else{\n            this.GoDisscuss(this.currentItem[0])\n          }\n        }\n      }\n      \n    },\n    chooseSearch(){\n      this.indexAt = 0;\n      console.log(this.alldataNum,'this.alldataNum')\n      document.removeEventListener('keydown', this.keyMove)\n      if(this.searchListBox){ // && document.getElementById('searchAll') == document.activeElement\n        document.addEventListener('keydown',this.keyMove)\n      }\n    },\n    handGoChat(item) {\n      this.searchListBox = false\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: 0,\n          id: item.friendId,\n          targetId: item.userId,\n          nickName: item.friendNickName,\n          headImg: item.friendHeadImg,\n          isSelect:item.friendId\n        }\n      });\n    },\n    GoGroup(item) {\n      this.searchListBox = false\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: 1,\n          id: item.groupId,\n          targetId: item.groupId,\n          nickName: item.groupName,\n          headImg: item.groupAvatar,\n          num: item.people,\n          authStatus: item.status,\n          isSelect:item.groupId\n        }\n      });\n    },\n    GoDisscuss(item) {\n      this.searchListBox = false\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: 1,\n          id: item.groupId,\n          targetId: item.groupId,\n          nickName: item.groupName,\n          headImg: item.groupAvatar,\n          num: item.people,\n          authStatus: item.status,\n          name: 'discussion',\n          groupType: item.groupType,\n          isSelect:item.groupId\n        }\n      });\n    },\n    closeMembers(){\n      bus.$emit('closeMemberinfo')\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    \n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.keyMove)\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n#contact-add-btn:hover,\n#contact-add-btn:active,\n#contact-add-btn:visited,\n#contact-add-btn:focus {\n  background: #f7f7f7;\n  color: #606266;\n  border: 1px solid #dcdfe6;\n}\n.high-light {\n  color: #2f54eb;\n}\n.addMenu {\n  min-width: 100px;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.my_class {\n  text-align: left;\n  display: inline-block;\n  width: 200px;\n  margin: 15px 0 15px 10px;\n\n  // /deep/ .el-input__prefix{\n  //   top: -3px;\n  // }\n  // /deep/ .el-input__suffix{\n  //   top: -4px;\n  // }\n}\n\n.my_class input.el-input__inner {\n  font-size: 12px;\n  border-radius: 5px;\n  border: none;\n  background: #ff0000;\n  height: 30px;\n  line-height: 30px;\n  color: #555;\n}\n\n.apply_number .el-badge__content.is-fixed {\n  top: 10px;\n  right: 13px;\n}\n\n.no-data {\n  text-align: center;\n}\n\n.nick-name {\n  font-size: 14px;\n  color: #333333;\n  width: 180px;\n  display: flex;\n  align-items: center;\n  span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: pre;\n    max-width: 65%;\n  }\n}\n\n.friend-notes,\n.invite-code,\n.group-code {\n  font-size: 12px;\n  color: #999999;\n  width: 180px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.invite-code img {\n  margin-top: 0px;\n}\n\n.name-notes-id {\n  height: 50px;\n  justify-content: space-around;\n}\n.discussion-icon,\n.group-icon,\n.friend-icon {\n  margin: 7px 10px 0 0;\n}\n.addbox {\n  img {\n    width: 20px;\n    height: 20px;\n    padding-right: 5px;\n  }\n  img,\n  span {\n    vertical-align: middle;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        "#contact-add-btn:hover,#contact-add-btn:active,#contact-add-btn:visited,#contact-add-btn:focus": {
          "background": "#f7f7f7",
          "color": "#606266",
          "border": "1px solid #dcdfe6"
        },
        ".high-light": {
          "color": "#2f54eb"
        },
        ".addMenu": {
          "min-width": "100px"
        }
      },
      {
        ".my_class": {
          "text-align": "left",
          "display": "inline-block",
          "width": "200px",
          "margin": "15px 0 15px 10px"
        },
        ".my_class input.el-input__inner": {
          "font-size": "12px",
          "border-radius": "5px",
          "border": "none",
          "background": "#ff0000",
          "height": "30px",
          "line-height": "30px",
          "color": "#555"
        },
        ".apply_number .el-badge__content.is-fixed": {
          "top": "10px",
          "right": "13px"
        },
        ".no-data": {
          "text-align": "center"
        },
        ".nick-name": {
          "font-size": "14px",
          "color": "#333333",
          "width": "180px",
          "display": "flex",
          "align-items": "center",
          "span": {
            "overflow": "hidden",
            "text-overflow": "ellipsis",
            "white-space": "pre",
            "max-width": "65%"
          }
        },
        ".friend-notes,.invite-code,.group-code": {
          "font-size": "12px",
          "color": "#999999",
          "width": "180px",
          "text-overflow": "ellipsis",
          "white-space": "nowrap"
        },
        ".invite-code img": {
          "margin-top": "0px"
        },
        ".name-notes-id": {
          "height": "50px",
          "justify-content": "space-around"
        },
        ".discussion-icon,.group-icon,.friend-icon": {
          "margin": "7px 10px 0 0"
        },
        ".addbox": {
          "img": {
            "width": "20px",
            "height": "20px",
            "padding-right": "5px"
          },
          "img,  span": {
            "vertical-align": "middle"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberCard/MemberCardOther.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <el-dialog\n      :visible=\"cardDialogVisible\"\n      :width=\"dialogWidth\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"closeHandle\"\n      custom-class=\"member-card-dialog\"\n      >\n   <member-info :user-id=\"userId\"\n                :groupId=\"groupId\"\n                :memberSingleChatStatus=\"memberSingleChatStatus\"\n                :authStatus=\"authStatus\"\n                @transferSuccess=\"transferSuccess\"\n                @toAppeal=\"toAppeal\"\n                ref=\"cardmemberinfo\" @closeHandle=\"closeHandle\" />\n     </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getSelfUserId } from '@/utils/const';\nimport MemberInfo from './MemberInfo';\nexport default {\n  name: 'MemberCard',\n  components: {\n    MemberInfo\n  },\n  computed: {\n    dialogWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '330px';\n      } else {\n        return '400px';\n      }\n    }\n  },\n  data() {\n    return {\n      region: '',\n      userInfo: {},\n      groupInfo: {},\n      isCurrentUser: false,\n      isEdit: false,\n      isGroupMember: false,\n      isGroupHolder: false,\n      title: this.$t('Universal_0202'),\n      GroupInviteVisible: false,\n      postcard: true\n    };\n  },\n  props: {\n    cardDialogVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    image: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    userId: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    groupId: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    memberSingleChatStatus: {\n      type: String,\n      default() {\n        return '1';\n      }\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '3';\n      }\n    }\n  },\n  methods: {\n    closeHandle() {\n      console.log('closeHandle');\n      this.$nextTick(() => {\n        this.$emit('handleclosecard');\n      });\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    async onCardShow() {\n      this.$nextTick(() => {\n        this.$refs.cardmemberinfo.onCardShow();\n      });\n    },\n    onCardHide() {\n      this.$refs.cardmemberinfo.onMemberInfoHide();\n    },\n    transferSuccess() {\n      this.$parent.transferSuccess();\n    },\n    toAppeal() {\n      this.$parent.toAppeal('single');\n    },\n  },\n\n  created() {},\n  updated() {}\n};\n</script>",
    "originData": "<template>\n  <div>\n    <el-dialog\n      :visible=\"cardDialogVisible\"\n      :width=\"dialogWidth\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"closeHandle\"\n      custom-class=\"member-card-dialog\"\n      >\n   <member-info :user-id=\"userId\"\n                :groupId=\"groupId\"\n                :memberSingleChatStatus=\"memberSingleChatStatus\"\n                :authStatus=\"authStatus\"\n                @transferSuccess=\"transferSuccess\"\n                @toAppeal=\"toAppeal\"\n                ref=\"cardmemberinfo\" @closeHandle=\"closeHandle\" />\n     </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getSelfUserId } from '@/utils/const';\nimport MemberInfo from './MemberInfo';\nexport default {\n  name: 'MemberCard',\n  components: {\n    MemberInfo\n  },\n  computed: {\n    dialogWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '330px';\n      } else {\n        return '400px';\n      }\n    }\n  },\n  data() {\n    return {\n      region: '',\n      userInfo: {},\n      groupInfo: {},\n      isCurrentUser: false,\n      isEdit: false,\n      isGroupMember: false,\n      isGroupHolder: false,\n      title: this.$t('Universal_0202'),\n      GroupInviteVisible: false,\n      postcard: true\n    };\n  },\n  props: {\n    cardDialogVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    image: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    userId: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    groupId: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    memberSingleChatStatus: {\n      type: String,\n      default() {\n        return '1';\n      }\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '3';\n      }\n    }\n  },\n  methods: {\n    closeHandle() {\n      console.log('closeHandle');\n      this.$nextTick(() => {\n        this.$emit('handleclosecard');\n      });\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    async onCardShow() {\n      this.$nextTick(() => {\n        this.$refs.cardmemberinfo.onCardShow();\n      });\n    },\n    onCardHide() {\n      this.$refs.cardmemberinfo.onMemberInfoHide();\n    },\n    transferSuccess() {\n      this.$parent.transferSuccess();\n    },\n    toAppeal() {\n      this.$parent.toAppeal('single');\n    },\n  },\n\n  created() {},\n  updated() {}\n};\n</script>\n<style>\n.member-card-dialog {\n  border-radius: 5px;\n}\n\n.member-card-dialog .el-dialog__header {\n  padding: 5px;\n}\n\n.member-card-dialog .el-dialog__header button {\n  margin-top: -8px;\n  margin-right: -8px;\n}\n\n.member-card-dialog .el-dialog__body {\n  padding: 5px;\n}\n</style>\n<style scoped></style>\n",
    "cssJson": [
      {
        ".member-card-dialog": {
          "border-radius": "5px"
        },
        ".member-card-dialog .el-dialog__header": {
          "padding": "5px"
        },
        ".member-card-dialog .el-dialog__header button": {
          "margin-top": "-8px",
          "margin-right": "-8px"
        },
        ".member-card-dialog .el-dialog__body": {
          "padding": "5px"
        }
      },
      {}
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/list.vue",
    "tagInfo": {
      "0": "<style lang=\"less\">",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n    <div class=\"chat-list\" ref=\"messagelist\">\n      <VCFixedHeightScrollBar  \n      class=\"scroll-color\" ref=\"scroll\" :noresize='true' :availableScrollHeight='availableScrollHeight'>\n      <!-- <el-scrollbar class=\"scroll-color\" ref=\"scroll\"> -->\n        <div\n         v-infinite-scroll=\"loadMoreSessionList\"\n         :infinite-scroll-distance=\"60\"\n         >\n        <div\n          class=\"chat-info flex align-center\"\n          v-for=\"(item, index) in showLastMsgList\"\n          :key=\"item.id\"\n          :id=\"item['id']\"\n          :class=\"{\n            active: isCurCode == item.id,\n            topflag: item.topFlag == 1\n          }\"\n          @click=\"toChat(item, index)\"\n          @contextmenu.prevent=\"rightClick($event, item)\"\n        >\n          <div class=\"user-head\" :class=\"item.noNoticeFlag == '1'?'redDot':''\">\n            <el-badge\n              :is-dot=\"item.noNoticeFlag == '1'\"\n              class=\"item\"\n              :class=\"item.unread > 99&&item.noNoticeFlag != '1' ? 'msgUnread' :''\"\n              :value=\"item.unread > 99 ? '99+' : item.unread\"\n              :hidden='item.unread > 0 ? false : true'\n            >\n              <span v-if=\"item.sessionIcon\">\n                <MemberIcon\n                  :image=\"item.sessionIcon\"\n                  iconType=\"small\"\n                  :userRank=\"item.userRank\"\n                  :vipType=\"item.vipType\"\n                  v-if=\"notDiDiService(item)\"\n                />\n\n                <SessionIcon v-else :sessionIconSrc=\"findImage(item.sessionIcon)\" :sessionId=\"item.id\" />\n                <!-- <img :src=\"findImage(item.sessionIcon)\" alt  @error=\"replaceImg\" :data-key=\"item.id\" /> -->\n              </span>\n              <span v-if=\"!item.sessionIcon\">\n                <!-- 群 -->\n                <div v-if=\"item.targetType == '2' && item.groupType == '1'\">\n                  <img src=\"../../assets/images/group_avtar.png\" alt width=\"48px\" height=\"48px\" />\n                </div>\n                <!-- 讨论组 -->\n                <div v-if=\"item.targetType == '2' && item.groupType == '0'\">\n                  <DiscussionIcon :name=\"item.sessionName\" />\n                </div>\n              </span>\n            </el-badge>\n          </div>\n          <div class=\"user-words flex flex-direction\">\n            <div class=\"flex align-center\">\n              <span class=\"user-name\" v-if=\"isDiDiService(item)\"\n                    :style=\"{'max-width': didiServiceWidth(item), width: 'auto'}\">\n                <label class=\"vlogo\"><img src=\"../../assets/images/vlogo.png\" /> </label>\n                {{ `${item.sessionName}` }}\n              </span>\n              <span class=\"user-name\" v-if=\"item.targetType == 2&&item.groupType == '1'\"\n                    :style=\"{'max-width': groupNameWidth(item), width: 'auto'}\">\n                <i class=\"iconfont icon-user-group-Fill\"></i>\n                {{`${item.sessionName}` }}\n              </span>\n              <span class=\"user-name\" v-if=\"item.targetType == 2&&item.groupType == '0'\"\n                    :style=\"{'max-width': groupNameWidth(item), width: 'auto'}\">\n                 <i class=\"iconfont icon-laba\"></i>\n                {{`${item.sessionName}` }}\n              </span>\n              <span class=\"user-name r5\" v-if=\"notDiDiService(item)\"\n                    :style=\"{'max-width': userNameWidth(item), width: 'auto'}\">\n                <i class=\"iconfont icon-user\"></i>\n                {{ `${item.sessionName}` }}\n              </span>\n              <LuckIdIcon\n                :listFlag=\"true\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n                :inviteCode=\"item.code\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                v-if=\"notDiDiService(item)\"\n              />\n              <!-- <LevelIcon\n                :listFlag=\"true\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n                :inviteCode=\"item.code\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                v-if=\"\n                  item.targetType == 1 &&\n                    item.id != '1008455862495526912' &&\n                    item.id != '1032384035881537536'\n                \"\n              /> -->\n              <label v-if=\"item.targetType == '2'\">({{ item.people }})</label>\n              <span class=\"user-time\" v-if=\"!item.timestamp&&!item.draftTime\"></span>\n              <span class=\"user-time\" v-else-if=\"item.draftTime\">{{ item.draftTime | diffTimeHand }}</span>\n              <span class=\"user-time\" v-else>{{ item.updateTime | diffTimeHand}}</span>\n            </div>\n            <div class=\"flex  align-center\" style=\"position: relative; height: 23px;\" :class=\"{ 'justify-between': !item.isAt }\">\n              <span\n                v-if=\"item.isAt&&item.unread>0\"\n                class=\"user-sign\"\n                style=\"color:#F5222D;\"\n                :style=\"item.msgType == 1 || item.msgType == 25 ? 'width:60px' : 'width:70px'\"\n              >\n                [{{ $t('chat_0041') }}]\n              </span>\n              <span v-if=\"groupDraft(item)\" class=\"user-sign\" :style=\"item.isAt ? 'width:110px' : 'width:175px'\">\n                <!-- 停留在A群内窗口还原，左侧消息列表 ”有人@你” 显示3s后消失，且同一消息id不再二次延迟显示 -->\n                <template v-if=\"isFiveSecondsDelay && item['id'] == $store.state.chat.currentChat['id']\">\n                  <span style=\"color:#F5222D;\">\n                    [{{ $t('chat_0041') }}]\n                  </span>\n                </template>\n                <span v-if=\"item.fromName && item.text && !mergeDraf(item)['draftFlag']\">\n                  {{ item.fromId == userId ? $t('Universal_0037') : item.fromName }}:\n                </span>\n                <span v-else-if=\"!item.fromName && item.text && !mergeDraf(item)['draftFlag']\">{{item.refMsgBody.fromName}}: </span>\n                <span v-else-if=\"!item.fromName && item.text && mergeDraf(item)['draftFlag']\"></span>\n                <MessageFormatText\n                    linkFlag\n                    v-if=\"mergeDraf(item)['draftFlag']\"\n                    v-bind:text=\"mergeDraf(item)['text2']\"\n                    :draftFlag=\"mergeDraf(item)['draftFlag']\" />\n                <MessageFormatText linkFlag v-else v-bind:text=\"item.text\" />\n              </span>\n\n              <!--根据不同的类型显示不同-->\n              <span v-if=\"singleDraft(item)\" class=\"user-sign\">\n                <MessageFormatText\n                    linkFlag\n                    v-if=\"mergeDraf(item)['draftFlag']\"\n                    v-bind:text=\"mergeDraf(item)['text2']\"\n                    :draftFlag=\"mergeDraf(item)['draftFlag']\" />\n                <MessageFormatText linkFlag v-else v-bind:text=\"item.text\" />\n              </span>\n              <span v-else-if=\"item.msgType == 2 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}{{ $t('chat_0013') }}\n              </span>\n              <span v-else-if=\"isGroupNotice(item) && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                <MessageNotice :item=\"item\" :sender=\"showSenderName(item)\" :receiver=\"showReceiverName(item)\" />\n              </span>\n              <span v-else-if=\"isSingleNotice(item)\" class=\"user-sign\">\n                <Notice v-if=\"item.msgType != '24'\" :item=\"item\" class=\"single-notice\" />\n              </span>\n              <span v-else-if=\"item.msgType == 6 && !mergeDraf(item)['draftFlag']\" :class=\"item.isAt ? 'notice-msg' : 'user-sign'\">\n                {{ itemFromName(item) }}{{ $t('chat_0017') }}{{ item.msgBody&&item.msgBody.fileName }}\n              </span>\n              <span v-else-if=\"item.msgType == 7 && !mergeDraf(item)['draftFlag'] && item.fromType != '388'\" class=\"user-sign\">\n                {{ $t('chat_0090') }}\n              </span>\n              <span v-else-if=\"item.msgType == 9 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}{{ $t('chat_0014') }}\n              </span>\n              <span v-else-if=\"item.msgType == 10 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}{{ $t('chat_0015')}}\n              </span>\n              <span v-else-if=\"item.msgType === 11 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                [{{ $t('chat_voice_0001') }}]\n              </span>\n              <span v-else-if=\"item.msgType === 12 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                [{{ $t('chat_voice_0002') }}]\n              </span>\n              <span v-else-if=\"item.msgType == 15 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}{{ $t('chat_0024')}}\n              </span>\n              <!-- XXX撤回了一条消息 个人 -->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 1\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0025',\n                  {value: item.fromId == userId ? $t('Universal_0036') : item.friendFriendNotes || item.friendNickName || item.fromName}) }}\n              </span>\n              <!-- 你撤回了一条消息 -->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 2 &&\n                  item.fromId == userId &&\n                  item.fromId == item.msgBody.userId\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0029') }}\n              </span>\n              <!-- XXX撤回了一条消息 群-->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 2 &&\n                  item.fromId !== userId &&\n                  item.fromId === item.msgBody.userId\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0025', {value: item.refMsgBody&&item.refMsgBody.fromName||item.fromName}) }}\n              </span>\n              <!-- 管理员撤回了你的消息 -->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 2 &&\n                  item.fromId !== userId &&\n                  item.fromId !== item.msgBody.userId &&\n                  item.msgBody.userId === userId\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0026') }}\n              </span>\n\n              <!-- 你撤回了{fromName}的消息 -->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 2 &&\n                  item.fromId !== item.msgBody.userId &&\n                  item.msgBody.userId !== userId && item.fromId == userId\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0028', {fromName: item.refMsgBody.fromName ||  ''}) }}\n              </span>\n\n              <!-- 管理员撤回了{fromName}的消息 -->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 2 &&\n                  item.fromId !== userId &&\n                  item.fromId !== item.msgBody.userId &&\n                  item.msgBody.userId !== userId\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0027', {fromName: item.refMsgBody.fromName || ''}) }}\n              </span>\n\n              <span v-else-if=\"item.msgType == 14 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ $t('chat_0087') }}\n              </span>\n              <span v-else-if=\"item.msgType == 44 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ $t('chat_0088') }}\n              </span>\n              <span v-else-if=\"item.msgType == 16 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ $t('chat_0089') }}\n              </span>\n              <span v-else-if=\"item.msgType == 61 && item.fromType == 999 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ $t('chat_0127') }}\n              </span>\n              <span v-else-if=\"item.msgType == 40 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}[{{$t('chat_0042')}}]\n              </span>\n              <!-- 56领现金活动类型 -->\n              <span v-else-if=\"item.msgType == 56 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}{{$t('Universal_0454')}} {{item.text}}\n              </span>\n              <span v-else-if=\"isDiDiServiceNotice(item)\" class=\"user-sign\">\n                <MessageFormatText linkFlag v-bind:text=\"item.text\" />\n              </span>\n              <!-- DiDi Payment 支付通知 41 -->\n              <span v-else-if=\"isDiDiPaymentNotice(item)\" class=\"user-sign\">\n                {{ formatTip(item, true) }}\n              </span>\n              <span v-else-if=\"item.fromId == ActAssistantId\" class=\"user-sign\">\n                {{$t('chat_home_0011')}}\n              </span>\n              <img\n                v-show=\"item.noNoticeFlag == 1\"\n                style=\"margin-top: 10px\"\n                src=\"../../assets/images/disturb.png\"\n                alt\n                width=\"12px\"\n                class=\"disturb\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    <!-- </el-scrollbar> -->\n    </VCFixedHeightScrollBar>\n    <AddBtn />\n    <AddFriGrop v-if=\"addOrderVisible\" :visible.sync=\"addOrderVisible\" @handCloseFri=\"handCloseFri\" />\n    <DialogGroupVisible :dialogGroupVisible=\"groupVisible\" @handCloseGroup=\"handCloseGroup\" ref=\"sceatGroup\" />\n    </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport VCFixedHeightScrollBar from \"@/components/ScrollBar/Index\"\nimport MessageNotice from './group/message/MessageNotice';\nimport Notice from './single/message/notice';\nimport DialogGroupVisible from '../add-friends-group/dialog/sceate-groups';\nimport AddFriGrop from '../add-friends-group/add';\nimport { diffTime, ChatListUtils } from '@/utils/index';\nimport { ActAssistantId } from \"@/utils/const\"\nimport { mapMutations, mapActions, mapGetters } from 'vuex';\nimport {\n  CLEAR_CHAT,\n  DEL_LAST_MSG_LIST,\n  GET_LAST_MSG_LIST,\n  SET_CHAT,\n  ADD_LAST_MSG_LIST,\n  CHAT_REST_SEND,\n  SOCKET_STATUS,\n  SEND_READ_MESSAGE,\n  NET_STATUS\n  // SET_AUDIO_WINDOW_DISPLAY\n} from '@/store/types';\nimport { deleteTSessionsById, overheadAndNoticeFlagById } from '@/services/rightClickByDB';\nimport AddBtn from '@/view/add-friends-group';\nimport fileOperational from '@/services/fileOperational';\nimport { remote, ipcRenderer } from 'electron';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nimport MessageFormatText from '@/view/chat/components/common/MessageFormatText';\nimport DiscussionIcon from '@/components/memberIcon/DiscussionIcon';\n// import LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\n\nimport { v4 as uuidv4 } from 'uuid';\n// import call from '@/utils/call';\nimport bus from '@/utils/eventbus';\n// import moment from \"moment\";\nimport { html2Escape } from '@/utils/domainSuffix.js'\nimport SessionIcon from \"./components/SessionIcon\"\nconst SESSION_ITEM_HEIGHT=66,SESSION_PAGESIZE=30;\nexport default {\n  name:\"SessionLists\",\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    VCFixedHeightScrollBar,\n    AddBtn,\n    DialogGroupVisible,\n    AddFriGrop,\n    MessageFormatText,\n    MessageNotice,\n    Notice,\n    DiscussionIcon,\n    MemberIcon,\n    // LevelIcon,\n    LuckIdIcon,\n    SessionIcon\n  },\n  data() {\n    //这里存放数据\n    return {\n      ActAssistantId:ActAssistantId,\n      userId: '',\n      isCurCode: '',\n      groupVisible: false,\n      addOrderVisible: false,\n      rightClickItem: {},\n      timer: '',\n      isFiveSecondsDelay: false, //at消息3s 延迟提示\n      showLastMsgList:[],//动态push的会话列表\n      availableScrollHeight:0,\n      currentChatId: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters(['gettersAllSessionWithAt','gettersCurrentAtBySessionID','lastMsgList','drafList']),\n    // store(){\n    //   return this.$store\n    // },\n    getCurLastAtById() {\n      let { id } = this.$store.state.chat.currentChat || {};\n      return this.gettersCurrentAtBySessionID(id);\n    },\n    mergeDraf(){\n      return (item)=>{\n        if (this.drafList.length) {\n          let draftItem = this.drafList.find(o =>o['id'] == item.id);\n          if(!draftItem||item.isAt == 1|| this.currentChatId === item.id){\n            return {\n              draftFlag:false,\n              text2:\"\",\n            }\n          }else{\n            let draft = this.$t('chat_0052');\n            return {\n              draftFlag:draftItem?.draftFlag,\n              // eslint-disable-next-line max-len\n              text2:draftItem?.msgType == 1 && draftItem?.msgHtml.length > 1? '<span class=\"red\">'+draft+'</span>' + html2Escape(draftItem.msgHtml, false):\"\"\n            }\n          }\n        }\n\n        if(item.isAt == 1 || this.currentChatId === item.id){\n          return {\n            draftFlag:false,\n            text2:\"\",\n          }\n        }else{\n          let draft = this.$t('chat_0052');\n          return {\n            draftFlag: item?.draftTime,\n            text2: '<span class=\"red\">'+draft+'</span>' + html2Escape(item.draftText, false)\n          }\n        }\n      }\n    },\n    isDiDiPaymentNotice() {\n      return item => {\n        return item['id'] == this.$paymentId && [224, 225, 226, 227, 228, 1001, 1002, 1003, 1004].includes(item['fromType'] * 1);\n      };\n    },\n    isDiDiServiceNotice() {\n      return item => {\n        return item['id'] == '1008455862495526912' && [1005, 1006, 1007].includes(item['fromType'] * 1);\n      };\n    },\n    formatTip() {\n      return function({ fromType }, isTitle) {\n        switch (fromType * 1) {\n        case 224: //群和单聊红包退款到账,\n        case 1001: //退款到账通知(平仓)\n          return isTitle ? this.$t('wallet_notice_0002') : this.$t('wallet_notice_0024');\n        case 225: //付款(内部转账),\n        case 226: //付款(内部转账),\n          return isTitle ? this.$t('wallet_notice_0017') : this.$t('Universal_0420');\n        case 227: //外部钱包充值到账\n        case 228: //场外交易到账,\n        case 1003: //收款到账通知-理财收益到账\n          return isTitle ? this.$t('wallet_notice_0006') : this.$t('wallet_list_0009');\n        case 1002: //还款凭证-抵押借币还款\n          return isTitle ? this.$t('wallet_notice_0011') : this.$t('wallet_notice_0025');\n        case 1004: //资金借出通知-理财借出\n          return this.$t('wallet_notice_0014');\n        default:\n          return this.$t('chat_0018');\n        }\n      };\n    },\n    notDiDiService() {\n      return item => {\n        return (\n          item.targetType == '1' && item.id != '1008455862495526912' && item.id != '1032384035881537536' \n          && item.id != this.$paymentId && item.id != this.ActAssistantId\n        );\n      };\n    },\n    isDiDiService() {\n      return item => {\n        return item.id == '1008455862495526912' || item.id == '1032384035881537536' \n        || item.id == this.$paymentId || item.id == this.ActAssistantId;\n      };\n    },\n    groupDraft() {\n      return item => {\n        return item.targetType == '2' && (item.msgType == 1 || item.msgType == 25 || this.mergeDraf(item)['draftFlag']);\n      };\n    },\n    singleDraft() {\n      return item => {\n        return item.targetType == '1' && (item.msgType == 1 || item.msgType == 25 || this.mergeDraf(item)['draftFlag']);\n      };\n    },\n    itemFromName() {\n      return item => {\n        // eslint-disable-next-line max-len\n        return item.targetType == '2' ? (item.fromId == UserInfoUtils.getCurrentUserId() ? this.$t('Universal_0037')+': ' : item.fromName + ':') : '';\n      };\n    },\n    isGroupNotice() {\n      return item => {\n        return (item.msgType == 4 || item.msgType == 5 || item.msgType == 8 || item.msgType == 31) && item.targetType == 2;\n      };\n    },\n    isSingleNotice() {\n      return item => {\n        return (item.msgType == 4 || item.msgType == 5 || item.msgType == 8 || item.msgType == 31) && item.targetType == 1;\n      };\n    },\n    // findImage() {\n    //   return image => {\n    //     // let random = (((1 + Math.random()) * 0x10000) | 0).toString(16);\n    //     // return fileOperational.getImage(image) + '?' + random;\n    //     return fileOperational.getImage(image)\n    //   }\n    // }\n    lastMsgListUpdateTimeArr(){\n      //可视区域内 减少watch的数据量 前提入库的消息updateTime一定是实时的\n      return this.lastMsgList.slice(0,60).map(o=>o['updateTime'])\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    'showLastMsgList.length':function(l){\n      // GET_LAST_MSG_LIST 减少非必要的数据查询 SQLUtils.queryLastMsgListFromLocalDB\n      sessionStorage.setItem(\"showLastMsgList\",l)\n    },\n    lastMsgListUpdateTimeArr: {\n      immediate: true,\n      deep: true,\n      handler: function () {\n        this.updateShowLastMsgList();\n        this.availableScrollHeight = this.lastMsgList.length* SESSION_ITEM_HEIGHT;\n      },\n    },\n    $route(val) {\n      if (val.query?.id) {\n        this.isCurCode = val.query.id;\n      }\n    }\n  },\n  filters: {\n    diffTimeHand(val) {\n      return diffTime(val);\n    }\n  },\n  //方法集合\n  methods: {\n    // 个人名称长度\n    userNameWidth(item) {\n      let timestamp = diffTime(item.timestamp);\n      if (item.inviteCodeType) {\n        // 需要展示靓号\n        if (timestamp.includes('/')) {\n          return '54%';\n        } else if (timestamp.includes(':')) {\n          return '65%';\n        } else if (timestamp === '昨天') {\n          return '67%';\n        } else if (timestamp === 'Yesterday') {\n          return '52%';\n        }\n      } else {\n        if (timestamp.includes('/')) {\n          return '70%';\n        } else if (timestamp.includes(':')) {\n          return '84%';\n        } else if (timestamp === '昨天') {\n          return '84%';\n        } else if (timestamp === 'Yesterday') {\n          return '68%';\n        }\n      }\n    },\n    // didiService名称长度\n    didiServiceWidth(item) {\n      let timestamp = diffTime(item.timestamp);\n      if (timestamp.includes('/')) {\n        return '71%';\n      } else if (timestamp.includes(':')) {\n        return '80%';\n      } else if (timestamp === '昨天') {\n        return '83%';\n      } else if (timestamp === 'Yesterday') {\n        return '70%';\n      }\n    },\n    // 群名称长度\n    groupNameWidth(item) {\n      let timestamp = diffTime(item.timestamp);\n      if (timestamp.includes('/')) {\n        // 年/月/日\n        if (Number(item.people) > 999) {\n          return '51%';\n        } else if (Number(item.people) < 1000 && Number(item.people) > 99) {\n          return '55%';\n        } else if (Number(item.people) < 100 && Number(item.people) > 9) {\n          return '59%';\n        } else if (Number(item.people) < 10 && Number(item.people) > 0) {\n          return '63%';\n        }\n      } else if (timestamp.includes(':')) {\n        // 时:分\n        if (Number(item.people) > 999) {\n          return '61%';\n        } else if (Number(item.people) < 1000 && Number(item.people) > 99) {\n          return '66%';\n        } else if (Number(item.people) < 100 && Number(item.people) > 9) {\n          return '70%';\n        } else if (Number(item.people) < 10 && Number(item.people) > 0) {\n          return '74%';\n        }\n      } else if (timestamp === '昨天') {\n        // 昨天\n        if (Number(item.people) > 999) {\n          return '65%';\n        } else if (Number(item.people) < 1000 && Number(item.people) > 99) {\n          return '69%';\n        } else if (Number(item.people) < 100 && Number(item.people) > 9) {\n          return '73%';\n        } else if (Number(item.people) < 10 && Number(item.people) > 0) {\n          return '77%';\n        }\n      } else if (timestamp === 'Yesterday') {\n        // Yesterday\n        if (Number(item.people) > 999) {\n          return '49%';\n        } else if (Number(item.people) < 1000 && Number(item.people) > 99) {\n          return '53%';\n        } else if (Number(item.people) < 100 && Number(item.people) > 9) {\n          return '57%';\n        } else if (Number(item.people) < 10 && Number(item.people) > 0) {\n          return '61%';\n        }\n      }\n    },\n    updateShowLastMsgList(){\n      let len = this.showLastMsgList.length;\n      this.showLastMsgList = this.lastMsgList.slice(\n        0,\n        Math.max(len, SESSION_PAGESIZE)\n      );\n      console.log(this.showLastMsgList.length);\n      if (this.$route.query?.id) {\n        this.isCurCode = this.$route.query.id;\n        this.showCurrentChooseIntoViewPort(this.$route.query.id);\n      }\n    },\n    loadMoreSessionList() {\n      let len=this.showLastMsgList.length;\n      console.log(len);\n      this.showLastMsgList = [...this.showLastMsgList, ...this.lastMsgList.slice(len, len+SESSION_PAGESIZE)];\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true)\n    },\n    // win 拖拽之后 scollview 刷新\n    winResize() {\n      this.$refs?.scroll?.update?.();\n      console.log('scroll ===> 滑动更新')\n      this?.$refs?.scroll?.handleScroll?.();\n    },\n\n    async showCurrentChooseIntoViewPort(chooseId = \"\") {\n      if(!this.isCurCode==chooseId) return\n      await this.$nextTick();\n      let ele = document.getElementById(chooseId);\n      if (chooseId && ele && !this.isInViewPort(ele)) {\n        ele.scrollIntoView();\n      }\n    },\n    isInViewPort (el) {\n      const viewPortHeight = window.innerHeight-60;//hearer\n      const top = el.getBoundingClientRect() && el.getBoundingClientRect().top\n      // console.warn(\"%c~~~~~~~~\", \"font-size:40px;\",top);\n      if(top>=0&&top<viewPortHeight){\n        return true\n      }else{\n        return false\n      }\n    },\n    ...mapActions([CHAT_REST_SEND, SEND_READ_MESSAGE]),\n    ...mapMutations([\n      SET_CHAT,\n      CLEAR_CHAT,\n      ADD_LAST_MSG_LIST,\n      DEL_LAST_MSG_LIST,\n      CHAT_REST_SEND,\n      SOCKET_STATUS,\n      NET_STATUS,\n      'GET_SEARCH_GROUP',\n      'GET_SEARCH_FRIENDS'\n    ]),\n    // 全局搜索 showReceiverName\n    showReceiverName(item) {\n      /*if ((item.targetName && item.msgType == '4') || item.msgType == '7') {\n        return item.targetName;\n      }*/\n      if ((item.refMsgBody?.users && item.msgType == '4') || item.msgType == '7') {\n        let isMe=(item.refMsgBody?.users?.[0]?.id||item.refMsgBody?.users?.[0]?.userId)==localStorage.userId?this.$t('Universal_0036'):'';\n        return isMe||item.refMsgBody?.users[0].name || item.refMsgBody?.users[0].nickName;\n      }\n      return '';\n    },\n    showSenderName(item) {\n      if (item.msgType == '4' || item.msgType == '7') {\n        if (\n          item.fromType == '308' ||\n          item.fromType == '309' ||\n          item.fromType == '382' ||\n          item.fromType == '312' ||\n          item.fromType == '384' ||\n          item.fromType == '313' ||\n          item.fromType == '383'\n        ) {\n          return item.fromName  || item.refMsgBody.fromName;\n        } else {\n          return item.fromName || item.refMsgBody.item ||  item.targetName;\n        }\n      }\n      return '';\n    },\n    compare() {\n      return (obj1, obj2) => {\n        if (obj1['id'] === '1008455862495526912') return -1;\n        if (obj2['id'] === '1008455862495526912') return 1;\n        let value1 = Number(obj1['topFlag']);\n        let value2 = Number(obj2['topFlag']);\n        if (value1 === value2) {\n          return Number(obj2['updateTime']) - Number(obj1['updateTime']);\n        }\n        return value2 - value1;\n      };\n    },\n    ...mapActions([GET_LAST_MSG_LIST]),\n    // 以下为单页面添加鼠标右键事件\n\n    addClick() {\n      const options = [];\n      if (this.rightClickItem.topFlag == 1) {\n        options[0] = {\n          name: this.$t('chat_home_0005'),\n          enabled: true,\n          fun: async () => {\n            const res = await overheadAndNoticeFlagById(this.rightClickItem, 'topFlag', '0');\n            if(res.code==='200'||res.data?.code==='200'){\n              this.$message.success(this.$t('chat_home_0005'));\n              this.$store.dispatch('GET_LAST_MSG_LIST');\n            } else {\n              this.$message.error(res.data?.msg);\n            }\n          }\n        };\n      }\n      if (!this.rightClickItem.topFlag || this.rightClickItem.topFlag == 0) {\n        options[0] = {\n          name: this.$t('chat_home_0004'),\n          enabled: true,\n          fun: async () => {\n            const res = await overheadAndNoticeFlagById(this.rightClickItem, 'topFlag', '1');\n            if(res.code==='200'||res.data?.code==='200'){\n              this.$message.success(this.$t('chat_home_0004'));\n              this.$store.dispatch('GET_LAST_MSG_LIST');\n            } else {\n              this.$message.error(res.data?.msg);\n            }\n            \n          }\n        };\n      }\n      if (!this.rightClickItem.noNoticeFlag || this.rightClickItem.topFlag == 0 || this.rightClickItem.noNoticeFlag == 0) {\n        options[1] = {\n          name: this.$t('chat_0057'),\n          enabled: true,\n          fun: async () => {\n            const res = await overheadAndNoticeFlagById(this.rightClickItem, 'noNoticeFlag', '1');\n            if(res.code==='200'||res.data?.code==='200'){\n              this.$message.success(this.$t('chat_0057'));\n              this.$store.dispatch('GET_LAST_MSG_LIST');\n            } else {\n              this.$message.error(res.data?.msg);\n            }\n          }\n        };\n      }\n      if (this.rightClickItem.noNoticeFlag == 1) {\n        options[1] = {\n          name: this.$t('chat_0098'),\n          enabled: true,\n          fun: async () => {\n            const res = await overheadAndNoticeFlagById(this.rightClickItem, 'noNoticeFlag', '0');\n            if(res.code==='200'||res.data?.code==='200'){\n              this.$message.success(this.$t('chat_0098'));\n              this.$store.dispatch('GET_LAST_MSG_LIST');\n            } else {\n              this.$message.error(res.data?.msg);\n            }\n          }\n        };\n      }\n      options[2] = {\n        name: this.$t('chat_home_0010'),\n        enabled: true,\n        fun: async () => {\n          await deleteTSessionsById(this.rightClickItem.id, this.rightClickItem.lastMsgId);\n          sessionStorage.removeItem('paymentId');\n          localStorage.removeItem('currentChat');\n          this.$message.success(this.$t('chat_home_0010'));\n          this.$store.dispatch('actionSessionAtDeleteBySessionId', this.rightClickItem.id);\n          this.$store.dispatch('GET_LAST_MSG_LIST');\n          this.$router.push({ name: \"chat\" });\n          if(this.isCurCode==this.rightClickItem.id){\n            this.isCurCode = '';\n            this.$store.commit('SET_CURRENT_CHAT',{});\n          }\n        }\n      };\n      console.log(this.rightClickItem, options);\n      return this.$RightClick(options).popup({\n        window: remote.getCurrentWindow()\n      });\n    },\n\n    rightClick(e, item) {\n      this.rightClickItem = {\n        id: item.id,\n        uniqueCode: item.uniqueCode,\n        noNoticeFlag: item.noNoticeFlag,\n        topFlag: item.topFlag,\n        lastMsgId: item.lastMsgId,\n        targetType: item.targetType,\n        fromId: item.fromId\n      };\n      e.preventDefault();\n      if (item.id != '1008455862495526912') {\n        this.addClick();\n      }\n    },\n    addHand() {\n      this.addOrderVisible = true;\n    },\n\n    handOpenGroup() {\n      // 打开发起群聊弹框\n      this.groupVisible = true;\n      // this.$refs.sceatGroup.resetFroms()\n      // this.dialogAddFriendsVisible = true;\n    },\n    handCloseGroup() {\n      // 关闭发起群聊弹框\n      this.groupVisible = false;\n    },\n    // eslint-disable-next-line no-unused-vars\n    async toChat(record, cindex) {\n      this.currentChatId = record.id;\n      // 切换会话列表之前，处理 CURRENT_CHAT上一条 有人@你 已读\n      this.$store.dispatch('actionSessionAtDeleteBySessionId', this.$route.query?.id);\n      // console.log('%c~~~~~~~~','font-size:40px;',this)\n      this.isCurCode = record.id\n      if (record.id == this.$paymentId) {\n        sessionStorage.setItem('paymentId', this.$paymentId);\n      } else {\n        sessionStorage.removeItem('paymentId');\n      }\n      if (record.id == this.ActAssistantId) {\n        sessionStorage.setItem('ActAssistantId', this.ActAssistantId);\n      } else {\n        sessionStorage.removeItem('ActAssistantId');\n      }\n      if (this.$route.path !== '/app/chat') {\n        if (ChatListUtils.isCurrentChat(record.id)) {\n          //重复点击同一个对话框，不刷新页面，防止草稿丢失 如果是登录后第一次点击则不属于这种情况\n          return;\n        }\n      }\n      this.isFiveSecondsDelay = false;\n      await this.$nextTick()\n      // 子路由 async init() commit SET_CURRENT_CHAT\n      // 存储当前聊天会话框窗口\n      this.$store.dispatch('SET_CURRENT_CHAT', {\n        uniqueCode: record.uniqueCode,\n        id: record.id,\n        sessionIcon: record.sessionIcon,\n        sessionName: record.sessionName\n      });\n      // SET_CURRENT_CHAT SET_CLEAN_UN_MSG 已处理 t_session中unread\n      record['unread']=0;\n      this.tiemr =\n        new Date().getTime() +\n        '' +\n        Math.random()\n          .toString()\n          .slice(-6);\n      this.CLEAR_CHAT();\n      if (record.targetType == 1) {\n        if (!this.tiemr) {\n          this.tiemr =\n            new Date().getTime() +\n            '' +\n            Math.random()\n              .toString()\n              .slice(-6);\n        }\n        //单聊\n        this.$router.push({\n          path: '/app/chat/single/message',\n          query: {\n            id: record.id,\n            fromId: record.id,\n            targetId: record.targetId,\n            uniqueCode: encodeURI(record.uniqueCode),\n            timer: this.tiemr,\n            friendName: encodeURI(record.sessionName),\n            item: record,\n            unread: record.unread\n          }\n        });\n        this.sendReadedMessage(record);\n        this.tiemr = '';\n      }\n      if (record.targetType == 2) {\n        //群聊\n        if (record.groupType == '1') {\n          this.toqunChat(record);\n        }\n        if (record.groupType == '0') {\n          this.toDiscussionChat(record);\n        }\n      }\n    },\n    toqunChat(record) {\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          targetId: record.id,\n          id: record.id,\n          timer: new Date().getTime(),\n          // friendName: encodeURI(record.refMsgBody.groupName),\n          uniqueCode: record.uniqueCode,\n          item: record\n        }\n      });\n      sessionStorage.setItem('groupId', record.id);\n    },\n    toDiscussionChat(record) {\n      console.log(record);\n      this.$router.push({\n        path: '/app/chat/discussion/message',\n        query: {\n          targetId: record.id,\n          id: record.id,\n          timer: new Date().getTime(),\n          groupType: record.groupType,\n          // friendName: encodeURI(record.refMsgBody.groupName),\n          uniqueCode: record.uniqueCode,\n          item: record\n        }\n      });\n      sessionStorage.setItem('groupId', record.id);\n    },\n    async sendReadedMessage(record) {\n      console.log('record', record);\n      let pararms = {\n        reqId: uuidv4(),\n        targetType: '1', // 单聊1 群聊2\n        targetId: record.targetId || record.id,\n        fromType: 410,\n        fromId: UserInfoUtils.getCurrentUserId(),\n        msgType: 23, // 23 已读\n        msgBody: JSON.stringify({}),\n        msgHeader: JSON.stringify({\n          pubKey: '', //this.publickKey,\n          version: this.publickKeyVersion,\n          msgSeqNo: 1,\n          msgSeqTotal: 1,\n          effectiveTime: -1,\n          sourceSite: null,\n          language: window.vm.$i18n.locale,\n          sign: null,\n          signType: null\n        }),\n        refMsgBody: {\n          // fromName: JSON.parse(localStorage.userInfo).nickName,\n          // fromIcon: JSON.parse(localStorage.userInfo).headImg,\n        }\n      };\n      const option = {\n        ...pararms,\n        refMsgBody: JSON.stringify({\n          ...pararms.refMsgBody\n        })\n      };\n      console.log('SEND_READ_MESSAGE === ', record.unread, option);\n      if (record.unread > 0) {\n        await this.SEND_READ_MESSAGE(option);\n      }\n      // 子路由 async init() 已调用 $store.dispatch('SET_CURRENT_CHAT' 已调用 SET_CLEAN_UN_MSG\n      // this.$store.dispatch('SET_CLEAN_UN_MSG', {\n      //   uniqueCode: record.uniqueCode,\n      //   id: record.id,\n      //   sessionIcon: record.sessionIcon,\n      //   sessionName: record.sessionName\n      // });\n\n    },\n    async storeDiDiServiceIcon() {\n      let didiServiceResult = await window.vm.$knex.raw(\n        `select friend_id, friend_head_img\n        from t_contacts\n        where friend_id in ('1032384035881537536','1008455862495526912',${this.$paymentId},${this.ActAssistantId})`\n      );\n      if (didiServiceResult.length > 0) {\n        this.$store.state.common.didiServiceIcons = [];\n        for (let result of didiServiceResult) {\n          this.$store.state.common.didiServiceIcons.push({\n            id: result.friend_id,\n            icon: result.friend_head_img\n          });\n        }\n      }\n    },\n    scrollHandle(index) {\n      this.$nextTick(() => {\n        if (this.$refs['scroll'] === undefined) return;\n        let div = this.$refs['scroll'].$refs['wrap'];\n        let arr = Array.from(document.getElementsByClassName('chat-info'));\n        div.scrollTo({ behavior: 'smooth', top: arr[index].offsetTop });\n      });\n    },\n    // 替换404图片\n    replaceImg(e) {\n      const { groupType = '' } = this.lastMsgList.filter(i => i.id === e.target.dataset.key)[0]||{};\n      UserInfoUtils.replaceDefaultImg(e, groupType ? 'group' : 'user');\n    },\n    handleCurrentSessionDelayAtTip(obj = {}, time = 1500) {\n      let that = this;\n      that.fiveSecondsDelayTimer && clearTimeout(that.fiveSecondsDelayTimer);\n      //当前会话id 存在未读的at消息\n      let { id } = that.$store.state.chat.currentChat || {};\n      //1、存在会话窗口 2、at消息属于当前窗口的某一条at消息、3、禁止二次延迟显示\n      if (id && obj['id'] && obj['id'] == id && obj['msgId'] && sessionStorage.lastAtMsgId != obj['msgId']) {\n        // console.log(obj);\n        that.isFiveSecondsDelay = true;\n        that.fiveSecondsDelayTimer = setTimeout(() => {\n          that.isFiveSecondsDelay = false;\n          clearTimeout(that.fiveSecondsDelayTimer);\n          that.fiveSecondsDelayTimer = null;\n        }, time);\n      }\n    },\n    // delay time 1500ms\n    restoreCurrentSessionAtTip() {\n      //当前会话窗口存在at\n      this.getCurLastAtById && this.handleCurrentSessionDelayAtTip(this.getCurLastAtById, 1500);\n      // 记录上一次 延迟显示的at消息id，禁止二次延迟显示\n      let { msgId = '' } = this.getCurLastAtById || {};\n      sessionStorage.setItem('lastAtMsgId', msgId);\n    },\n    async _scrollToTop(){\n      console.log('scrollToTop');\n      await this.$nextTick();\n      if (this.$route.query?.id) {\n        this.isCurCode = this.$route.query.id;\n      }\n      if (this.$refs['scroll'] === undefined) return;\n      let div = this.$refs['scroll'].$refs['wrap'];\n      let arr = Array.from(document.getElementsByClassName('chat-info'));\n      div.scrollTo({ top: arr[0].offsetTop });\n    },\n    async _checkUnReadMessage(){\n      await this.$nextTick();\n      // 找出所有未读且没有设置免打扰的列表\n      let unreadList = this.lastMsgList.filter(i => i.noNoticeFlag !== '1' && i.unread);\n      if (unreadList.length) {\n        let theIndex = this.lastMsgList.findIndex(i => i.id === unreadList[0].id);\n        // 滚动到指定位置\n        this.scrollHandle(theIndex);\n        // 打开该聊天窗口\n        this.toChat(unreadList[0], theIndex);\n      } else {\n        this.isCurCode = '';\n        this.scrollHandle(0);\n      }\n    },\n    _toChatByTray(chatId) {\n      let list = this.showLastMsgList;\n      let i = list.findIndex((o) => o[\"id\"] == chatId);\n      if (i >= 0) {\n        this.toChat(list[i], i);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    bus.$on('scrollToTop', this._scrollToTop);\n    bus.$on('checkUnReadMessage', this._checkUnReadMessage);\n    bus.$on('jumpToChatById',this._toChatByTray);\n    this.userId = localStorage.userId;\n    this.$store.dispatch('GET_LAST_MSG_LIST');\n    if (localStorage.getItem('currentChat')) {\n      this.isCurCode = JSON.parse(localStorage.getItem('currentChat'))?.id;\n    }\n    // console.log('lastMsgList-- ',this.lastMsgList)\n  },\n  mounted() {\n    this.storeDiDiServiceIcon();\n    ipcRenderer.on('current-session-at', this.restoreCurrentSessionAtTip);\n    this.$remote.getCurrentWindow().addListener('resize',this.winResize);\n  },\n  beforeDestroy() {\n    this.fiveSecondsDelayTimer && clearTimeout(this.fiveSecondsDelayTimer);\n    this.fiveSecondsDelayTimer=null;\n    bus.$off('scrollToTop', this._scrollToTop);\n    bus.$off('checkUnReadMessage', this._checkUnReadMessage);\n    bus.$off('jumpToChatById',this._toChatByTray);\n    ipcRenderer.removeListener('current-session-at', this.restoreCurrentSessionAtTip);\n    this.$remote.getCurrentWindow().removeListener('resize',this.winResize);\n\n  }, //生命周期 - 销毁之前\n  beforeRouteLeave(to, from, next) {\n    next();\n  }\n};\n</script>",
    "originData": "<!--  -->\n<template>\n    <div class=\"chat-list\" ref=\"messagelist\">\n      <VCFixedHeightScrollBar  \n      class=\"scroll-color\" ref=\"scroll\" :noresize='true' :availableScrollHeight='availableScrollHeight'>\n      <!-- <el-scrollbar class=\"scroll-color\" ref=\"scroll\"> -->\n        <div\n         v-infinite-scroll=\"loadMoreSessionList\"\n         :infinite-scroll-distance=\"60\"\n         >\n        <div\n          class=\"chat-info flex align-center\"\n          v-for=\"(item, index) in showLastMsgList\"\n          :key=\"item.id\"\n          :id=\"item['id']\"\n          :class=\"{\n            active: isCurCode == item.id,\n            topflag: item.topFlag == 1\n          }\"\n          @click=\"toChat(item, index)\"\n          @contextmenu.prevent=\"rightClick($event, item)\"\n        >\n          <div class=\"user-head\" :class=\"item.noNoticeFlag == '1'?'redDot':''\">\n            <el-badge\n              :is-dot=\"item.noNoticeFlag == '1'\"\n              class=\"item\"\n              :class=\"item.unread > 99&&item.noNoticeFlag != '1' ? 'msgUnread' :''\"\n              :value=\"item.unread > 99 ? '99+' : item.unread\"\n              :hidden='item.unread > 0 ? false : true'\n            >\n              <span v-if=\"item.sessionIcon\">\n                <MemberIcon\n                  :image=\"item.sessionIcon\"\n                  iconType=\"small\"\n                  :userRank=\"item.userRank\"\n                  :vipType=\"item.vipType\"\n                  v-if=\"notDiDiService(item)\"\n                />\n\n                <SessionIcon v-else :sessionIconSrc=\"findImage(item.sessionIcon)\" :sessionId=\"item.id\" />\n                <!-- <img :src=\"findImage(item.sessionIcon)\" alt  @error=\"replaceImg\" :data-key=\"item.id\" /> -->\n              </span>\n              <span v-if=\"!item.sessionIcon\">\n                <!-- 群 -->\n                <div v-if=\"item.targetType == '2' && item.groupType == '1'\">\n                  <img src=\"../../assets/images/group_avtar.png\" alt width=\"48px\" height=\"48px\" />\n                </div>\n                <!-- 讨论组 -->\n                <div v-if=\"item.targetType == '2' && item.groupType == '0'\">\n                  <DiscussionIcon :name=\"item.sessionName\" />\n                </div>\n              </span>\n            </el-badge>\n          </div>\n          <div class=\"user-words flex flex-direction\">\n            <div class=\"flex align-center\">\n              <span class=\"user-name\" v-if=\"isDiDiService(item)\"\n                    :style=\"{'max-width': didiServiceWidth(item), width: 'auto'}\">\n                <label class=\"vlogo\"><img src=\"../../assets/images/vlogo.png\" /> </label>\n                {{ `${item.sessionName}` }}\n              </span>\n              <span class=\"user-name\" v-if=\"item.targetType == 2&&item.groupType == '1'\"\n                    :style=\"{'max-width': groupNameWidth(item), width: 'auto'}\">\n                <i class=\"iconfont icon-user-group-Fill\"></i>\n                {{`${item.sessionName}` }}\n              </span>\n              <span class=\"user-name\" v-if=\"item.targetType == 2&&item.groupType == '0'\"\n                    :style=\"{'max-width': groupNameWidth(item), width: 'auto'}\">\n                 <i class=\"iconfont icon-laba\"></i>\n                {{`${item.sessionName}` }}\n              </span>\n              <span class=\"user-name r5\" v-if=\"notDiDiService(item)\"\n                    :style=\"{'max-width': userNameWidth(item), width: 'auto'}\">\n                <i class=\"iconfont icon-user\"></i>\n                {{ `${item.sessionName}` }}\n              </span>\n              <LuckIdIcon\n                :listFlag=\"true\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n                :inviteCode=\"item.code\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                v-if=\"notDiDiService(item)\"\n              />\n              <!-- <LevelIcon\n                :listFlag=\"true\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n                :inviteCode=\"item.code\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                v-if=\"\n                  item.targetType == 1 &&\n                    item.id != '1008455862495526912' &&\n                    item.id != '1032384035881537536'\n                \"\n              /> -->\n              <label v-if=\"item.targetType == '2'\">({{ item.people }})</label>\n              <span class=\"user-time\" v-if=\"!item.timestamp&&!item.draftTime\"></span>\n              <span class=\"user-time\" v-else-if=\"item.draftTime\">{{ item.draftTime | diffTimeHand }}</span>\n              <span class=\"user-time\" v-else>{{ item.updateTime | diffTimeHand}}</span>\n            </div>\n            <div class=\"flex  align-center\" style=\"position: relative; height: 23px;\" :class=\"{ 'justify-between': !item.isAt }\">\n              <span\n                v-if=\"item.isAt&&item.unread>0\"\n                class=\"user-sign\"\n                style=\"color:#F5222D;\"\n                :style=\"item.msgType == 1 || item.msgType == 25 ? 'width:60px' : 'width:70px'\"\n              >\n                [{{ $t('chat_0041') }}]\n              </span>\n              <span v-if=\"groupDraft(item)\" class=\"user-sign\" :style=\"item.isAt ? 'width:110px' : 'width:175px'\">\n                <!-- 停留在A群内窗口还原，左侧消息列表 ”有人@你” 显示3s后消失，且同一消息id不再二次延迟显示 -->\n                <template v-if=\"isFiveSecondsDelay && item['id'] == $store.state.chat.currentChat['id']\">\n                  <span style=\"color:#F5222D;\">\n                    [{{ $t('chat_0041') }}]\n                  </span>\n                </template>\n                <span v-if=\"item.fromName && item.text && !mergeDraf(item)['draftFlag']\">\n                  {{ item.fromId == userId ? $t('Universal_0037') : item.fromName }}:\n                </span>\n                <span v-else-if=\"!item.fromName && item.text && !mergeDraf(item)['draftFlag']\">{{item.refMsgBody.fromName}}: </span>\n                <span v-else-if=\"!item.fromName && item.text && mergeDraf(item)['draftFlag']\"></span>\n                <MessageFormatText\n                    linkFlag\n                    v-if=\"mergeDraf(item)['draftFlag']\"\n                    v-bind:text=\"mergeDraf(item)['text2']\"\n                    :draftFlag=\"mergeDraf(item)['draftFlag']\" />\n                <MessageFormatText linkFlag v-else v-bind:text=\"item.text\" />\n              </span>\n\n              <!--根据不同的类型显示不同-->\n              <span v-if=\"singleDraft(item)\" class=\"user-sign\">\n                <MessageFormatText\n                    linkFlag\n                    v-if=\"mergeDraf(item)['draftFlag']\"\n                    v-bind:text=\"mergeDraf(item)['text2']\"\n                    :draftFlag=\"mergeDraf(item)['draftFlag']\" />\n                <MessageFormatText linkFlag v-else v-bind:text=\"item.text\" />\n              </span>\n              <span v-else-if=\"item.msgType == 2 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}{{ $t('chat_0013') }}\n              </span>\n              <span v-else-if=\"isGroupNotice(item) && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                <MessageNotice :item=\"item\" :sender=\"showSenderName(item)\" :receiver=\"showReceiverName(item)\" />\n              </span>\n              <span v-else-if=\"isSingleNotice(item)\" class=\"user-sign\">\n                <Notice v-if=\"item.msgType != '24'\" :item=\"item\" class=\"single-notice\" />\n              </span>\n              <span v-else-if=\"item.msgType == 6 && !mergeDraf(item)['draftFlag']\" :class=\"item.isAt ? 'notice-msg' : 'user-sign'\">\n                {{ itemFromName(item) }}{{ $t('chat_0017') }}{{ item.msgBody&&item.msgBody.fileName }}\n              </span>\n              <span v-else-if=\"item.msgType == 7 && !mergeDraf(item)['draftFlag'] && item.fromType != '388'\" class=\"user-sign\">\n                {{ $t('chat_0090') }}\n              </span>\n              <span v-else-if=\"item.msgType == 9 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}{{ $t('chat_0014') }}\n              </span>\n              <span v-else-if=\"item.msgType == 10 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}{{ $t('chat_0015')}}\n              </span>\n              <span v-else-if=\"item.msgType === 11 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                [{{ $t('chat_voice_0001') }}]\n              </span>\n              <span v-else-if=\"item.msgType === 12 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                [{{ $t('chat_voice_0002') }}]\n              </span>\n              <span v-else-if=\"item.msgType == 15 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}{{ $t('chat_0024')}}\n              </span>\n              <!-- XXX撤回了一条消息 个人 -->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 1\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0025',\n                  {value: item.fromId == userId ? $t('Universal_0036') : item.friendFriendNotes || item.friendNickName || item.fromName}) }}\n              </span>\n              <!-- 你撤回了一条消息 -->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 2 &&\n                  item.fromId == userId &&\n                  item.fromId == item.msgBody.userId\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0029') }}\n              </span>\n              <!-- XXX撤回了一条消息 群-->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 2 &&\n                  item.fromId !== userId &&\n                  item.fromId === item.msgBody.userId\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0025', {value: item.refMsgBody&&item.refMsgBody.fromName||item.fromName}) }}\n              </span>\n              <!-- 管理员撤回了你的消息 -->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 2 &&\n                  item.fromId !== userId &&\n                  item.fromId !== item.msgBody.userId &&\n                  item.msgBody.userId === userId\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0026') }}\n              </span>\n\n              <!-- 你撤回了{fromName}的消息 -->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 2 &&\n                  item.fromId !== item.msgBody.userId &&\n                  item.msgBody.userId !== userId && item.fromId == userId\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0028', {fromName: item.refMsgBody.fromName ||  ''}) }}\n              </span>\n\n              <!-- 管理员撤回了{fromName}的消息 -->\n              <span\n                  v-else-if=\"(item.msgType == 24 || item.msgType == 26) &&\n                  !mergeDraf(item)['draftFlag'] &&\n                  item.targetType == 2 &&\n                  item.fromId !== userId &&\n                  item.fromId !== item.msgBody.userId &&\n                  item.msgBody.userId !== userId\"\n                  class=\"user-sign\">\n                {{ $t('chat_notice_0027', {fromName: item.refMsgBody.fromName || ''}) }}\n              </span>\n\n              <span v-else-if=\"item.msgType == 14 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ $t('chat_0087') }}\n              </span>\n              <span v-else-if=\"item.msgType == 44 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ $t('chat_0088') }}\n              </span>\n              <span v-else-if=\"item.msgType == 16 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ $t('chat_0089') }}\n              </span>\n              <span v-else-if=\"item.msgType == 61 && item.fromType == 999 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ $t('chat_0127') }}\n              </span>\n              <span v-else-if=\"item.msgType == 40 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}[{{$t('chat_0042')}}]\n              </span>\n              <!-- 56领现金活动类型 -->\n              <span v-else-if=\"item.msgType == 56 && !mergeDraf(item)['draftFlag']\" class=\"user-sign\">\n                {{ itemFromName(item) }}{{$t('Universal_0454')}} {{item.text}}\n              </span>\n              <span v-else-if=\"isDiDiServiceNotice(item)\" class=\"user-sign\">\n                <MessageFormatText linkFlag v-bind:text=\"item.text\" />\n              </span>\n              <!-- DiDi Payment 支付通知 41 -->\n              <span v-else-if=\"isDiDiPaymentNotice(item)\" class=\"user-sign\">\n                {{ formatTip(item, true) }}\n              </span>\n              <span v-else-if=\"item.fromId == ActAssistantId\" class=\"user-sign\">\n                {{$t('chat_home_0011')}}\n              </span>\n              <img\n                v-show=\"item.noNoticeFlag == 1\"\n                style=\"margin-top: 10px\"\n                src=\"../../assets/images/disturb.png\"\n                alt\n                width=\"12px\"\n                class=\"disturb\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    <!-- </el-scrollbar> -->\n    </VCFixedHeightScrollBar>\n    <AddBtn />\n    <AddFriGrop v-if=\"addOrderVisible\" :visible.sync=\"addOrderVisible\" @handCloseFri=\"handCloseFri\" />\n    <DialogGroupVisible :dialogGroupVisible=\"groupVisible\" @handCloseGroup=\"handCloseGroup\" ref=\"sceatGroup\" />\n    </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport VCFixedHeightScrollBar from \"@/components/ScrollBar/Index\"\nimport MessageNotice from './group/message/MessageNotice';\nimport Notice from './single/message/notice';\nimport DialogGroupVisible from '../add-friends-group/dialog/sceate-groups';\nimport AddFriGrop from '../add-friends-group/add';\nimport { diffTime, ChatListUtils } from '@/utils/index';\nimport { ActAssistantId } from \"@/utils/const\"\nimport { mapMutations, mapActions, mapGetters } from 'vuex';\nimport {\n  CLEAR_CHAT,\n  DEL_LAST_MSG_LIST,\n  GET_LAST_MSG_LIST,\n  SET_CHAT,\n  ADD_LAST_MSG_LIST,\n  CHAT_REST_SEND,\n  SOCKET_STATUS,\n  SEND_READ_MESSAGE,\n  NET_STATUS\n  // SET_AUDIO_WINDOW_DISPLAY\n} from '@/store/types';\nimport { deleteTSessionsById, overheadAndNoticeFlagById } from '@/services/rightClickByDB';\nimport AddBtn from '@/view/add-friends-group';\nimport fileOperational from '@/services/fileOperational';\nimport { remote, ipcRenderer } from 'electron';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nimport MessageFormatText from '@/view/chat/components/common/MessageFormatText';\nimport DiscussionIcon from '@/components/memberIcon/DiscussionIcon';\n// import LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\n\nimport { v4 as uuidv4 } from 'uuid';\n// import call from '@/utils/call';\nimport bus from '@/utils/eventbus';\n// import moment from \"moment\";\nimport { html2Escape } from '@/utils/domainSuffix.js'\nimport SessionIcon from \"./components/SessionIcon\"\nconst SESSION_ITEM_HEIGHT=66,SESSION_PAGESIZE=30;\nexport default {\n  name:\"SessionLists\",\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    VCFixedHeightScrollBar,\n    AddBtn,\n    DialogGroupVisible,\n    AddFriGrop,\n    MessageFormatText,\n    MessageNotice,\n    Notice,\n    DiscussionIcon,\n    MemberIcon,\n    // LevelIcon,\n    LuckIdIcon,\n    SessionIcon\n  },\n  data() {\n    //这里存放数据\n    return {\n      ActAssistantId:ActAssistantId,\n      userId: '',\n      isCurCode: '',\n      groupVisible: false,\n      addOrderVisible: false,\n      rightClickItem: {},\n      timer: '',\n      isFiveSecondsDelay: false, //at消息3s 延迟提示\n      showLastMsgList:[],//动态push的会话列表\n      availableScrollHeight:0,\n      currentChatId: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters(['gettersAllSessionWithAt','gettersCurrentAtBySessionID','lastMsgList','drafList']),\n    // store(){\n    //   return this.$store\n    // },\n    getCurLastAtById() {\n      let { id } = this.$store.state.chat.currentChat || {};\n      return this.gettersCurrentAtBySessionID(id);\n    },\n    mergeDraf(){\n      return (item)=>{\n        if (this.drafList.length) {\n          let draftItem = this.drafList.find(o =>o['id'] == item.id);\n          if(!draftItem||item.isAt == 1|| this.currentChatId === item.id){\n            return {\n              draftFlag:false,\n              text2:\"\",\n            }\n          }else{\n            let draft = this.$t('chat_0052');\n            return {\n              draftFlag:draftItem?.draftFlag,\n              // eslint-disable-next-line max-len\n              text2:draftItem?.msgType == 1 && draftItem?.msgHtml.length > 1? '<span class=\"red\">'+draft+'</span>' + html2Escape(draftItem.msgHtml, false):\"\"\n            }\n          }\n        }\n\n        if(item.isAt == 1 || this.currentChatId === item.id){\n          return {\n            draftFlag:false,\n            text2:\"\",\n          }\n        }else{\n          let draft = this.$t('chat_0052');\n          return {\n            draftFlag: item?.draftTime,\n            text2: '<span class=\"red\">'+draft+'</span>' + html2Escape(item.draftText, false)\n          }\n        }\n      }\n    },\n    isDiDiPaymentNotice() {\n      return item => {\n        return item['id'] == this.$paymentId && [224, 225, 226, 227, 228, 1001, 1002, 1003, 1004].includes(item['fromType'] * 1);\n      };\n    },\n    isDiDiServiceNotice() {\n      return item => {\n        return item['id'] == '1008455862495526912' && [1005, 1006, 1007].includes(item['fromType'] * 1);\n      };\n    },\n    formatTip() {\n      return function({ fromType }, isTitle) {\n        switch (fromType * 1) {\n        case 224: //群和单聊红包退款到账,\n        case 1001: //退款到账通知(平仓)\n          return isTitle ? this.$t('wallet_notice_0002') : this.$t('wallet_notice_0024');\n        case 225: //付款(内部转账),\n        case 226: //付款(内部转账),\n          return isTitle ? this.$t('wallet_notice_0017') : this.$t('Universal_0420');\n        case 227: //外部钱包充值到账\n        case 228: //场外交易到账,\n        case 1003: //收款到账通知-理财收益到账\n          return isTitle ? this.$t('wallet_notice_0006') : this.$t('wallet_list_0009');\n        case 1002: //还款凭证-抵押借币还款\n          return isTitle ? this.$t('wallet_notice_0011') : this.$t('wallet_notice_0025');\n        case 1004: //资金借出通知-理财借出\n          return this.$t('wallet_notice_0014');\n        default:\n          return this.$t('chat_0018');\n        }\n      };\n    },\n    notDiDiService() {\n      return item => {\n        return (\n          item.targetType == '1' && item.id != '1008455862495526912' && item.id != '1032384035881537536' \n          && item.id != this.$paymentId && item.id != this.ActAssistantId\n        );\n      };\n    },\n    isDiDiService() {\n      return item => {\n        return item.id == '1008455862495526912' || item.id == '1032384035881537536' \n        || item.id == this.$paymentId || item.id == this.ActAssistantId;\n      };\n    },\n    groupDraft() {\n      return item => {\n        return item.targetType == '2' && (item.msgType == 1 || item.msgType == 25 || this.mergeDraf(item)['draftFlag']);\n      };\n    },\n    singleDraft() {\n      return item => {\n        return item.targetType == '1' && (item.msgType == 1 || item.msgType == 25 || this.mergeDraf(item)['draftFlag']);\n      };\n    },\n    itemFromName() {\n      return item => {\n        // eslint-disable-next-line max-len\n        return item.targetType == '2' ? (item.fromId == UserInfoUtils.getCurrentUserId() ? this.$t('Universal_0037')+': ' : item.fromName + ':') : '';\n      };\n    },\n    isGroupNotice() {\n      return item => {\n        return (item.msgType == 4 || item.msgType == 5 || item.msgType == 8 || item.msgType == 31) && item.targetType == 2;\n      };\n    },\n    isSingleNotice() {\n      return item => {\n        return (item.msgType == 4 || item.msgType == 5 || item.msgType == 8 || item.msgType == 31) && item.targetType == 1;\n      };\n    },\n    // findImage() {\n    //   return image => {\n    //     // let random = (((1 + Math.random()) * 0x10000) | 0).toString(16);\n    //     // return fileOperational.getImage(image) + '?' + random;\n    //     return fileOperational.getImage(image)\n    //   }\n    // }\n    lastMsgListUpdateTimeArr(){\n      //可视区域内 减少watch的数据量 前提入库的消息updateTime一定是实时的\n      return this.lastMsgList.slice(0,60).map(o=>o['updateTime'])\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    'showLastMsgList.length':function(l){\n      // GET_LAST_MSG_LIST 减少非必要的数据查询 SQLUtils.queryLastMsgListFromLocalDB\n      sessionStorage.setItem(\"showLastMsgList\",l)\n    },\n    lastMsgListUpdateTimeArr: {\n      immediate: true,\n      deep: true,\n      handler: function () {\n        this.updateShowLastMsgList();\n        this.availableScrollHeight = this.lastMsgList.length* SESSION_ITEM_HEIGHT;\n      },\n    },\n    $route(val) {\n      if (val.query?.id) {\n        this.isCurCode = val.query.id;\n      }\n    }\n  },\n  filters: {\n    diffTimeHand(val) {\n      return diffTime(val);\n    }\n  },\n  //方法集合\n  methods: {\n    // 个人名称长度\n    userNameWidth(item) {\n      let timestamp = diffTime(item.timestamp);\n      if (item.inviteCodeType) {\n        // 需要展示靓号\n        if (timestamp.includes('/')) {\n          return '54%';\n        } else if (timestamp.includes(':')) {\n          return '65%';\n        } else if (timestamp === '昨天') {\n          return '67%';\n        } else if (timestamp === 'Yesterday') {\n          return '52%';\n        }\n      } else {\n        if (timestamp.includes('/')) {\n          return '70%';\n        } else if (timestamp.includes(':')) {\n          return '84%';\n        } else if (timestamp === '昨天') {\n          return '84%';\n        } else if (timestamp === 'Yesterday') {\n          return '68%';\n        }\n      }\n    },\n    // didiService名称长度\n    didiServiceWidth(item) {\n      let timestamp = diffTime(item.timestamp);\n      if (timestamp.includes('/')) {\n        return '71%';\n      } else if (timestamp.includes(':')) {\n        return '80%';\n      } else if (timestamp === '昨天') {\n        return '83%';\n      } else if (timestamp === 'Yesterday') {\n        return '70%';\n      }\n    },\n    // 群名称长度\n    groupNameWidth(item) {\n      let timestamp = diffTime(item.timestamp);\n      if (timestamp.includes('/')) {\n        // 年/月/日\n        if (Number(item.people) > 999) {\n          return '51%';\n        } else if (Number(item.people) < 1000 && Number(item.people) > 99) {\n          return '55%';\n        } else if (Number(item.people) < 100 && Number(item.people) > 9) {\n          return '59%';\n        } else if (Number(item.people) < 10 && Number(item.people) > 0) {\n          return '63%';\n        }\n      } else if (timestamp.includes(':')) {\n        // 时:分\n        if (Number(item.people) > 999) {\n          return '61%';\n        } else if (Number(item.people) < 1000 && Number(item.people) > 99) {\n          return '66%';\n        } else if (Number(item.people) < 100 && Number(item.people) > 9) {\n          return '70%';\n        } else if (Number(item.people) < 10 && Number(item.people) > 0) {\n          return '74%';\n        }\n      } else if (timestamp === '昨天') {\n        // 昨天\n        if (Number(item.people) > 999) {\n          return '65%';\n        } else if (Number(item.people) < 1000 && Number(item.people) > 99) {\n          return '69%';\n        } else if (Number(item.people) < 100 && Number(item.people) > 9) {\n          return '73%';\n        } else if (Number(item.people) < 10 && Number(item.people) > 0) {\n          return '77%';\n        }\n      } else if (timestamp === 'Yesterday') {\n        // Yesterday\n        if (Number(item.people) > 999) {\n          return '49%';\n        } else if (Number(item.people) < 1000 && Number(item.people) > 99) {\n          return '53%';\n        } else if (Number(item.people) < 100 && Number(item.people) > 9) {\n          return '57%';\n        } else if (Number(item.people) < 10 && Number(item.people) > 0) {\n          return '61%';\n        }\n      }\n    },\n    updateShowLastMsgList(){\n      let len = this.showLastMsgList.length;\n      this.showLastMsgList = this.lastMsgList.slice(\n        0,\n        Math.max(len, SESSION_PAGESIZE)\n      );\n      console.log(this.showLastMsgList.length);\n      if (this.$route.query?.id) {\n        this.isCurCode = this.$route.query.id;\n        this.showCurrentChooseIntoViewPort(this.$route.query.id);\n      }\n    },\n    loadMoreSessionList() {\n      let len=this.showLastMsgList.length;\n      console.log(len);\n      this.showLastMsgList = [...this.showLastMsgList, ...this.lastMsgList.slice(len, len+SESSION_PAGESIZE)];\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true)\n    },\n    // win 拖拽之后 scollview 刷新\n    winResize() {\n      this.$refs?.scroll?.update?.();\n      console.log('scroll ===> 滑动更新')\n      this?.$refs?.scroll?.handleScroll?.();\n    },\n\n    async showCurrentChooseIntoViewPort(chooseId = \"\") {\n      if(!this.isCurCode==chooseId) return\n      await this.$nextTick();\n      let ele = document.getElementById(chooseId);\n      if (chooseId && ele && !this.isInViewPort(ele)) {\n        ele.scrollIntoView();\n      }\n    },\n    isInViewPort (el) {\n      const viewPortHeight = window.innerHeight-60;//hearer\n      const top = el.getBoundingClientRect() && el.getBoundingClientRect().top\n      // console.warn(\"%c~~~~~~~~\", \"font-size:40px;\",top);\n      if(top>=0&&top<viewPortHeight){\n        return true\n      }else{\n        return false\n      }\n    },\n    ...mapActions([CHAT_REST_SEND, SEND_READ_MESSAGE]),\n    ...mapMutations([\n      SET_CHAT,\n      CLEAR_CHAT,\n      ADD_LAST_MSG_LIST,\n      DEL_LAST_MSG_LIST,\n      CHAT_REST_SEND,\n      SOCKET_STATUS,\n      NET_STATUS,\n      'GET_SEARCH_GROUP',\n      'GET_SEARCH_FRIENDS'\n    ]),\n    // 全局搜索 showReceiverName\n    showReceiverName(item) {\n      /*if ((item.targetName && item.msgType == '4') || item.msgType == '7') {\n        return item.targetName;\n      }*/\n      if ((item.refMsgBody?.users && item.msgType == '4') || item.msgType == '7') {\n        let isMe=(item.refMsgBody?.users?.[0]?.id||item.refMsgBody?.users?.[0]?.userId)==localStorage.userId?this.$t('Universal_0036'):'';\n        return isMe||item.refMsgBody?.users[0].name || item.refMsgBody?.users[0].nickName;\n      }\n      return '';\n    },\n    showSenderName(item) {\n      if (item.msgType == '4' || item.msgType == '7') {\n        if (\n          item.fromType == '308' ||\n          item.fromType == '309' ||\n          item.fromType == '382' ||\n          item.fromType == '312' ||\n          item.fromType == '384' ||\n          item.fromType == '313' ||\n          item.fromType == '383'\n        ) {\n          return item.fromName  || item.refMsgBody.fromName;\n        } else {\n          return item.fromName || item.refMsgBody.item ||  item.targetName;\n        }\n      }\n      return '';\n    },\n    compare() {\n      return (obj1, obj2) => {\n        if (obj1['id'] === '1008455862495526912') return -1;\n        if (obj2['id'] === '1008455862495526912') return 1;\n        let value1 = Number(obj1['topFlag']);\n        let value2 = Number(obj2['topFlag']);\n        if (value1 === value2) {\n          return Number(obj2['updateTime']) - Number(obj1['updateTime']);\n        }\n        return value2 - value1;\n      };\n    },\n    ...mapActions([GET_LAST_MSG_LIST]),\n    // 以下为单页面添加鼠标右键事件\n\n    addClick() {\n      const options = [];\n      if (this.rightClickItem.topFlag == 1) {\n        options[0] = {\n          name: this.$t('chat_home_0005'),\n          enabled: true,\n          fun: async () => {\n            const res = await overheadAndNoticeFlagById(this.rightClickItem, 'topFlag', '0');\n            if(res.code==='200'||res.data?.code==='200'){\n              this.$message.success(this.$t('chat_home_0005'));\n              this.$store.dispatch('GET_LAST_MSG_LIST');\n            } else {\n              this.$message.error(res.data?.msg);\n            }\n          }\n        };\n      }\n      if (!this.rightClickItem.topFlag || this.rightClickItem.topFlag == 0) {\n        options[0] = {\n          name: this.$t('chat_home_0004'),\n          enabled: true,\n          fun: async () => {\n            const res = await overheadAndNoticeFlagById(this.rightClickItem, 'topFlag', '1');\n            if(res.code==='200'||res.data?.code==='200'){\n              this.$message.success(this.$t('chat_home_0004'));\n              this.$store.dispatch('GET_LAST_MSG_LIST');\n            } else {\n              this.$message.error(res.data?.msg);\n            }\n            \n          }\n        };\n      }\n      if (!this.rightClickItem.noNoticeFlag || this.rightClickItem.topFlag == 0 || this.rightClickItem.noNoticeFlag == 0) {\n        options[1] = {\n          name: this.$t('chat_0057'),\n          enabled: true,\n          fun: async () => {\n            const res = await overheadAndNoticeFlagById(this.rightClickItem, 'noNoticeFlag', '1');\n            if(res.code==='200'||res.data?.code==='200'){\n              this.$message.success(this.$t('chat_0057'));\n              this.$store.dispatch('GET_LAST_MSG_LIST');\n            } else {\n              this.$message.error(res.data?.msg);\n            }\n          }\n        };\n      }\n      if (this.rightClickItem.noNoticeFlag == 1) {\n        options[1] = {\n          name: this.$t('chat_0098'),\n          enabled: true,\n          fun: async () => {\n            const res = await overheadAndNoticeFlagById(this.rightClickItem, 'noNoticeFlag', '0');\n            if(res.code==='200'||res.data?.code==='200'){\n              this.$message.success(this.$t('chat_0098'));\n              this.$store.dispatch('GET_LAST_MSG_LIST');\n            } else {\n              this.$message.error(res.data?.msg);\n            }\n          }\n        };\n      }\n      options[2] = {\n        name: this.$t('chat_home_0010'),\n        enabled: true,\n        fun: async () => {\n          await deleteTSessionsById(this.rightClickItem.id, this.rightClickItem.lastMsgId);\n          sessionStorage.removeItem('paymentId');\n          localStorage.removeItem('currentChat');\n          this.$message.success(this.$t('chat_home_0010'));\n          this.$store.dispatch('actionSessionAtDeleteBySessionId', this.rightClickItem.id);\n          this.$store.dispatch('GET_LAST_MSG_LIST');\n          this.$router.push({ name: \"chat\" });\n          if(this.isCurCode==this.rightClickItem.id){\n            this.isCurCode = '';\n            this.$store.commit('SET_CURRENT_CHAT',{});\n          }\n        }\n      };\n      console.log(this.rightClickItem, options);\n      return this.$RightClick(options).popup({\n        window: remote.getCurrentWindow()\n      });\n    },\n\n    rightClick(e, item) {\n      this.rightClickItem = {\n        id: item.id,\n        uniqueCode: item.uniqueCode,\n        noNoticeFlag: item.noNoticeFlag,\n        topFlag: item.topFlag,\n        lastMsgId: item.lastMsgId,\n        targetType: item.targetType,\n        fromId: item.fromId\n      };\n      e.preventDefault();\n      if (item.id != '1008455862495526912') {\n        this.addClick();\n      }\n    },\n    addHand() {\n      this.addOrderVisible = true;\n    },\n\n    handOpenGroup() {\n      // 打开发起群聊弹框\n      this.groupVisible = true;\n      // this.$refs.sceatGroup.resetFroms()\n      // this.dialogAddFriendsVisible = true;\n    },\n    handCloseGroup() {\n      // 关闭发起群聊弹框\n      this.groupVisible = false;\n    },\n    // eslint-disable-next-line no-unused-vars\n    async toChat(record, cindex) {\n      this.currentChatId = record.id;\n      // 切换会话列表之前，处理 CURRENT_CHAT上一条 有人@你 已读\n      this.$store.dispatch('actionSessionAtDeleteBySessionId', this.$route.query?.id);\n      // console.log('%c~~~~~~~~','font-size:40px;',this)\n      this.isCurCode = record.id\n      if (record.id == this.$paymentId) {\n        sessionStorage.setItem('paymentId', this.$paymentId);\n      } else {\n        sessionStorage.removeItem('paymentId');\n      }\n      if (record.id == this.ActAssistantId) {\n        sessionStorage.setItem('ActAssistantId', this.ActAssistantId);\n      } else {\n        sessionStorage.removeItem('ActAssistantId');\n      }\n      if (this.$route.path !== '/app/chat') {\n        if (ChatListUtils.isCurrentChat(record.id)) {\n          //重复点击同一个对话框，不刷新页面，防止草稿丢失 如果是登录后第一次点击则不属于这种情况\n          return;\n        }\n      }\n      this.isFiveSecondsDelay = false;\n      await this.$nextTick()\n      // 子路由 async init() commit SET_CURRENT_CHAT\n      // 存储当前聊天会话框窗口\n      this.$store.dispatch('SET_CURRENT_CHAT', {\n        uniqueCode: record.uniqueCode,\n        id: record.id,\n        sessionIcon: record.sessionIcon,\n        sessionName: record.sessionName\n      });\n      // SET_CURRENT_CHAT SET_CLEAN_UN_MSG 已处理 t_session中unread\n      record['unread']=0;\n      this.tiemr =\n        new Date().getTime() +\n        '' +\n        Math.random()\n          .toString()\n          .slice(-6);\n      this.CLEAR_CHAT();\n      if (record.targetType == 1) {\n        if (!this.tiemr) {\n          this.tiemr =\n            new Date().getTime() +\n            '' +\n            Math.random()\n              .toString()\n              .slice(-6);\n        }\n        //单聊\n        this.$router.push({\n          path: '/app/chat/single/message',\n          query: {\n            id: record.id,\n            fromId: record.id,\n            targetId: record.targetId,\n            uniqueCode: encodeURI(record.uniqueCode),\n            timer: this.tiemr,\n            friendName: encodeURI(record.sessionName),\n            item: record,\n            unread: record.unread\n          }\n        });\n        this.sendReadedMessage(record);\n        this.tiemr = '';\n      }\n      if (record.targetType == 2) {\n        //群聊\n        if (record.groupType == '1') {\n          this.toqunChat(record);\n        }\n        if (record.groupType == '0') {\n          this.toDiscussionChat(record);\n        }\n      }\n    },\n    toqunChat(record) {\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          targetId: record.id,\n          id: record.id,\n          timer: new Date().getTime(),\n          // friendName: encodeURI(record.refMsgBody.groupName),\n          uniqueCode: record.uniqueCode,\n          item: record\n        }\n      });\n      sessionStorage.setItem('groupId', record.id);\n    },\n    toDiscussionChat(record) {\n      console.log(record);\n      this.$router.push({\n        path: '/app/chat/discussion/message',\n        query: {\n          targetId: record.id,\n          id: record.id,\n          timer: new Date().getTime(),\n          groupType: record.groupType,\n          // friendName: encodeURI(record.refMsgBody.groupName),\n          uniqueCode: record.uniqueCode,\n          item: record\n        }\n      });\n      sessionStorage.setItem('groupId', record.id);\n    },\n    async sendReadedMessage(record) {\n      console.log('record', record);\n      let pararms = {\n        reqId: uuidv4(),\n        targetType: '1', // 单聊1 群聊2\n        targetId: record.targetId || record.id,\n        fromType: 410,\n        fromId: UserInfoUtils.getCurrentUserId(),\n        msgType: 23, // 23 已读\n        msgBody: JSON.stringify({}),\n        msgHeader: JSON.stringify({\n          pubKey: '', //this.publickKey,\n          version: this.publickKeyVersion,\n          msgSeqNo: 1,\n          msgSeqTotal: 1,\n          effectiveTime: -1,\n          sourceSite: null,\n          language: window.vm.$i18n.locale,\n          sign: null,\n          signType: null\n        }),\n        refMsgBody: {\n          // fromName: JSON.parse(localStorage.userInfo).nickName,\n          // fromIcon: JSON.parse(localStorage.userInfo).headImg,\n        }\n      };\n      const option = {\n        ...pararms,\n        refMsgBody: JSON.stringify({\n          ...pararms.refMsgBody\n        })\n      };\n      console.log('SEND_READ_MESSAGE === ', record.unread, option);\n      if (record.unread > 0) {\n        await this.SEND_READ_MESSAGE(option);\n      }\n      // 子路由 async init() 已调用 $store.dispatch('SET_CURRENT_CHAT' 已调用 SET_CLEAN_UN_MSG\n      // this.$store.dispatch('SET_CLEAN_UN_MSG', {\n      //   uniqueCode: record.uniqueCode,\n      //   id: record.id,\n      //   sessionIcon: record.sessionIcon,\n      //   sessionName: record.sessionName\n      // });\n\n    },\n    async storeDiDiServiceIcon() {\n      let didiServiceResult = await window.vm.$knex.raw(\n        `select friend_id, friend_head_img\n        from t_contacts\n        where friend_id in ('1032384035881537536','1008455862495526912',${this.$paymentId},${this.ActAssistantId})`\n      );\n      if (didiServiceResult.length > 0) {\n        this.$store.state.common.didiServiceIcons = [];\n        for (let result of didiServiceResult) {\n          this.$store.state.common.didiServiceIcons.push({\n            id: result.friend_id,\n            icon: result.friend_head_img\n          });\n        }\n      }\n    },\n    scrollHandle(index) {\n      this.$nextTick(() => {\n        if (this.$refs['scroll'] === undefined) return;\n        let div = this.$refs['scroll'].$refs['wrap'];\n        let arr = Array.from(document.getElementsByClassName('chat-info'));\n        div.scrollTo({ behavior: 'smooth', top: arr[index].offsetTop });\n      });\n    },\n    // 替换404图片\n    replaceImg(e) {\n      const { groupType = '' } = this.lastMsgList.filter(i => i.id === e.target.dataset.key)[0]||{};\n      UserInfoUtils.replaceDefaultImg(e, groupType ? 'group' : 'user');\n    },\n    handleCurrentSessionDelayAtTip(obj = {}, time = 1500) {\n      let that = this;\n      that.fiveSecondsDelayTimer && clearTimeout(that.fiveSecondsDelayTimer);\n      //当前会话id 存在未读的at消息\n      let { id } = that.$store.state.chat.currentChat || {};\n      //1、存在会话窗口 2、at消息属于当前窗口的某一条at消息、3、禁止二次延迟显示\n      if (id && obj['id'] && obj['id'] == id && obj['msgId'] && sessionStorage.lastAtMsgId != obj['msgId']) {\n        // console.log(obj);\n        that.isFiveSecondsDelay = true;\n        that.fiveSecondsDelayTimer = setTimeout(() => {\n          that.isFiveSecondsDelay = false;\n          clearTimeout(that.fiveSecondsDelayTimer);\n          that.fiveSecondsDelayTimer = null;\n        }, time);\n      }\n    },\n    // delay time 1500ms\n    restoreCurrentSessionAtTip() {\n      //当前会话窗口存在at\n      this.getCurLastAtById && this.handleCurrentSessionDelayAtTip(this.getCurLastAtById, 1500);\n      // 记录上一次 延迟显示的at消息id，禁止二次延迟显示\n      let { msgId = '' } = this.getCurLastAtById || {};\n      sessionStorage.setItem('lastAtMsgId', msgId);\n    },\n    async _scrollToTop(){\n      console.log('scrollToTop');\n      await this.$nextTick();\n      if (this.$route.query?.id) {\n        this.isCurCode = this.$route.query.id;\n      }\n      if (this.$refs['scroll'] === undefined) return;\n      let div = this.$refs['scroll'].$refs['wrap'];\n      let arr = Array.from(document.getElementsByClassName('chat-info'));\n      div.scrollTo({ top: arr[0].offsetTop });\n    },\n    async _checkUnReadMessage(){\n      await this.$nextTick();\n      // 找出所有未读且没有设置免打扰的列表\n      let unreadList = this.lastMsgList.filter(i => i.noNoticeFlag !== '1' && i.unread);\n      if (unreadList.length) {\n        let theIndex = this.lastMsgList.findIndex(i => i.id === unreadList[0].id);\n        // 滚动到指定位置\n        this.scrollHandle(theIndex);\n        // 打开该聊天窗口\n        this.toChat(unreadList[0], theIndex);\n      } else {\n        this.isCurCode = '';\n        this.scrollHandle(0);\n      }\n    },\n    _toChatByTray(chatId) {\n      let list = this.showLastMsgList;\n      let i = list.findIndex((o) => o[\"id\"] == chatId);\n      if (i >= 0) {\n        this.toChat(list[i], i);\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    bus.$on('scrollToTop', this._scrollToTop);\n    bus.$on('checkUnReadMessage', this._checkUnReadMessage);\n    bus.$on('jumpToChatById',this._toChatByTray);\n    this.userId = localStorage.userId;\n    this.$store.dispatch('GET_LAST_MSG_LIST');\n    if (localStorage.getItem('currentChat')) {\n      this.isCurCode = JSON.parse(localStorage.getItem('currentChat'))?.id;\n    }\n    // console.log('lastMsgList-- ',this.lastMsgList)\n  },\n  mounted() {\n    this.storeDiDiServiceIcon();\n    ipcRenderer.on('current-session-at', this.restoreCurrentSessionAtTip);\n    this.$remote.getCurrentWindow().addListener('resize',this.winResize);\n  },\n  beforeDestroy() {\n    this.fiveSecondsDelayTimer && clearTimeout(this.fiveSecondsDelayTimer);\n    this.fiveSecondsDelayTimer=null;\n    bus.$off('scrollToTop', this._scrollToTop);\n    bus.$off('checkUnReadMessage', this._checkUnReadMessage);\n    bus.$off('jumpToChatById',this._toChatByTray);\n    ipcRenderer.removeListener('current-session-at', this.restoreCurrentSessionAtTip);\n    this.$remote.getCurrentWindow().removeListener('resize',this.winResize);\n\n  }, //生命周期 - 销毁之前\n  beforeRouteLeave(to, from, next) {\n    next();\n  }\n};\n</script>\n\n<style lang=\"less\">\n[v-cloak] {\n  display: none;\n}\n.single-notice .notify {\n  text-align: left !important;\n}\n.newmsg {\n  color: #999;\n  font-size: 12px;\n}\n.searchListBox {\n  width: 269px !important;\n  height: 70% !important;\n  overflow-y: scroll !important;\n  padding: 0;\n  // 整体部分\n  &::-webkit-scrollbar {\n    display: block !important;\n    width: 6px;\n    background-color: rgba(0, 0, 0, 0);\n  }\n  // 滑动轨道\n  &::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background-color: rgba(0, 0, 0, 0);\n  }\n  // 滑块\n  &::-webkit-scrollbar-thumb {\n    border-radius: 5px;\n    background-color: rgba(0, 0, 0, 0);\n  }\n\n  .list {\n    width: 100%;\n    & > p {\n      padding: 3px 10px;\n      font-size: 13px;\n      color: #333;\n      background-color: #f2f2f2;\n      display: flex;\n      justify-content: space-between;\n      span {\n        cursor: pointer;\n        color: #02a7f0;\n      }\n    }\n    & > ul li {\n      display: flex;\n      justify-content: flex-start;\n      padding: 8px 0 8px 15px;\n      border-bottom: 1px solid #dddddd;\n      &.active{\n        background:#e7e7e7;\n      }\n      img {\n        border-radius: 50%;\n        width: 40px;\n        height: 40px;\n      }\n      .level-icon img{\n        width: auto;\n      }\n      /*& > span {*/\n      /*  font-size: 12px;*/\n      /*  padding: 5px 0 0 0;*/\n      /*  & > p:nth-child(2) {*/\n      /*    font-size: 12px;*/\n      /*    color: #999999;*/\n      /*  }*/\n      /*}*/\n    }\n  }\n}\n.searchListBox:hover {\n  // 滑动轨道\n  &::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background-color: transparent;\n  }\n  // 滑块\n  &::-webkit-scrollbar-thumb {\n    border-radius: 5px;\n    background-color: #d2d2d2;\n  }\n}\n</style>\n\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.disturb {\n  position: absolute;\n  bottom: 5px;\n  right: 10px;\n}\n.my_class {\n  text-align: left;\n  display: inline-block;\n  width: 200px;\n  margin: 15px 0 15px 10px;\n}\n.my_class input.el-input__inner {\n  font-size: 12px;\n  border-radius: 5px;\n  border: none;\n  background: #e6e6e6;\n  height: 30px;\n  line-height: 30px;\n  color: #555;\n}\n.apply_number + .el-badge {\n  position: absolute;\n}\n.apply_number .el-badge__content.is-fixed {\n  top: 10px;\n  right: 13px;\n}\n.chat-info {\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  height: 66px;\n  // height: 68px;\n  // margin: 0 0 0 10px;\n  border-bottom: 1px solid #e4e4e4;\n  // border-right: 1px solid rgba(221, 221, 221, 1);\n  cursor: pointer;\n  box-sizing: border-box;\n  #text {\n    user-select: none !important;\n  }\n  &:hover {\n    background: #f7f7f7;\n  }\n  .line {\n    margin-left: 10px;\n    width: calc(100% - 10px);\n    height: 1px;\n    border-bottom: 1px solid #e4e4e4;\n  }\n}\n.user-head {\n  width: 38px;\n  height: 38px;\n  border-radius: 50%;\n  margin: 0 10px;\n\n  /deep/ .el-badge__content {\n    font-size: 10px;\n    background-color: #f5222d;\n    border-radius: 20px;\n    border: none;\n  }\n\n  /deep/ .el-badge__content.is-fixed {\n    top: 5px;\n    right: 14px;\n    transition: none !important;\n  }\n}\n.redDot /deep/ .el-badge__content.is-fixed{\n    top: 5px;\n    right: 8px;\n}\n.msgUnread /deep/ .el-badge__content.is-fixed{\n  right: 22px;\n}\n.user-head img {\n  display: block;\n  width: 38px;\n  height: 38px;\n  border-radius: 50%;\n}\n.user-words {\n  width: 180px;\n  flex: auto;\n  padding: 0 10px 0 0;\n}\n.active {\n  background-color: #e4e4e4 !important;\n}\n.topflag {\n  // background-color: #f1f1f1;\n  border-top: 1px solid #ececec;\n  background-color: #f6f6f6;\n}\n.user-name {\n  font-size: 14px;\n  font-weight: 500;\n  color: #191f25;\n  line-height: 20px;\n  display: inline-block;\n  overflow: hidden;\n  word-break: break-all;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  white-space: pre;\n  // flex: 1;\n  .iconfont {\n    font-size: 12px;\n  }\n}\n.user-sign {\n  word-break: break-all;\n  font-size: 12px;\n\n  font-weight: 500;\n  color: rgba(153, 153, 153, 1);\n  line-height: 20px;\n  margin-top: 3px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  -webkit-box-flex: 1;\n  // flex: 1;\n  white-space: pre;\n}\n.user-time {\n  font-size: 12px;\n\n  font-weight: 500;\n  color: rgba(153, 153, 153, 1);\n  line-height: 17px;\n  position: absolute;\n  right: 10px;\n}\n.chat-list {\n  height: calc(100vh - 60px);\n  position: relative;\n  overflow-y: scroll;\n  // /deep/ .el-scrollbar__view{\n  //   height: 100%;\n  // }\n}\n\n.notice-msg {\n  color:#999;\n  font-size: 12px;\n  width: 120px !important;\n  margin-left: -10px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  -webkit-box-flex: 1;\n}\n</style>\n",
    "cssJson": [
      {
        "[v-cloak]": {
          "display": "none"
        },
        ".single-notice .notify": {
          "text-align": "left !important"
        },
        ".newmsg": {
          "color": "#999",
          "font-size": "12px"
        },
        ".searchListBox": {
          "width": "269px !important",
          "height": "70% !important",
          "overflow-y": "scroll !important",
          "padding": "0",
          "&::-webkit-scrollbar": {
            "display": "block !important",
            "width": "6px",
            "background-color": "rgba(0, 0, 0, 0)"
          },
          "&::-webkit-scrollbar-track": {
            "border-radius": "10px",
            "background-color": "rgba(0, 0, 0, 0)"
          },
          "&::-webkit-scrollbar-thumb": {
            "border-radius": "5px",
            "background-color": "rgba(0, 0, 0, 0)"
          },
          ".list": {
            "width": "100%",
            "& > p": {
              "padding": "3px 10px",
              "font-size": "13px",
              "color": "#333",
              "background-color": "#f2f2f2",
              "display": "flex",
              "justify-content": "space-between",
              "span": {
                "cursor": "pointer",
                "color": "#02a7f0"
              }
            },
            "& > ul li": {
              "display": "flex",
              "justify-content": "flex-start",
              "padding": "8px 0 8px 15px",
              "border-bottom": "1px solid #dddddd",
              "&.active": {
                "background": "#e7e7e7"
              },
              "img": {
                "border-radius": "50%",
                "width": "40px",
                "height": "40px"
              },
              ".level-icon img": {
                "width": "auto"
              }
            }
          }
        },
        ".searchListBox:hover": {
          "&::-webkit-scrollbar-track": {
            "border-radius": "10px",
            "background-color": "transparent"
          },
          "&::-webkit-scrollbar-thumb": {
            "border-radius": "5px",
            "background-color": "#d2d2d2"
          }
        }
      },
      {
        ".disturb": {
          "position": "absolute",
          "bottom": "5px",
          "right": "10px"
        },
        ".my_class": {
          "text-align": "left",
          "display": "inline-block",
          "width": "200px",
          "margin": "15px 0 15px 10px"
        },
        ".my_class input.el-input__inner": {
          "font-size": "12px",
          "border-radius": "5px",
          "border": "none",
          "background": "#e6e6e6",
          "height": "30px",
          "line-height": "30px",
          "color": "#555"
        },
        ".apply_number + .el-badge": {
          "position": "absolute"
        },
        ".apply_number .el-badge__content.is-fixed": {
          "top": "10px",
          "right": "13px"
        },
        ".chat-info": {
          "position": "relative",
          "overflow": "hidden",
          "width": "100%",
          "height": "66px",
          "border-bottom": "1px solid #e4e4e4",
          "cursor": "pointer",
          "box-sizing": "border-box",
          "#text": {
            "user-select": "none !important"
          },
          "&:hover": {
            "background": "#f7f7f7"
          },
          ".line": {
            "margin-left": "10px",
            "width": "calc(100% - 10px)",
            "height": "1px",
            "border-bottom": "1px solid #e4e4e4"
          }
        },
        ".user-head": {
          "width": "38px",
          "height": "38px",
          "border-radius": "50%",
          "margin": "0 10px",
          "/deep/ .el-badge__content": {
            "font-size": "10px",
            "background-color": "#f5222d",
            "border-radius": "20px",
            "border": "none"
          },
          "/deep/ .el-badge__content.is-fixed": {
            "top": "5px",
            "right": "14px",
            "transition": "none !important"
          }
        },
        ".redDot /deep/ .el-badge__content.is-fixed": {
          "top": "5px",
          "right": "8px"
        },
        ".msgUnread /deep/ .el-badge__content.is-fixed": {
          "right": "22px"
        },
        ".user-head img": {
          "display": "block",
          "width": "38px",
          "height": "38px",
          "border-radius": "50%"
        },
        ".user-words": {
          "width": "180px",
          "flex": "auto",
          "padding": "0 10px 0 0"
        },
        ".active": {
          "background-color": "#e4e4e4 !important"
        },
        ".topflag": {
          "border-top": "1px solid #ececec",
          "background-color": "#f6f6f6"
        },
        ".user-name": {
          "font-size": "14px",
          "font-weight": "500",
          "color": "#191f25",
          "line-height": "20px",
          "display": "-webkit-box",
          "overflow": "hidden",
          "word-break": "break-all",
          "text-overflow": "ellipsis",
          "-webkit-line-clamp": "1",
          "-webkit-box-orient": "vertical",
          "white-space": "pre",
          ".iconfont": {
            "font-size": "12px"
          }
        },
        ".user-sign": {
          "word-break": "break-all",
          "font-size": "12px",
          "font-weight": "500",
          "color": "rgba(153, 153, 153, 1)",
          "line-height": "20px",
          "margin-top": "3px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "display": "-webkit-box",
          "-webkit-line-clamp": "1",
          "-webkit-box-orient": "vertical",
          "-webkit-box-flex": "1",
          "white-space": "pre"
        },
        ".user-time": {
          "font-size": "12px",
          "font-weight": "500",
          "color": "rgba(153, 153, 153, 1)",
          "line-height": "17px",
          "position": "absolute",
          "right": "10px"
        },
        ".chat-list": {
          "height": "calc(100vh - 60px)",
          "position": "relative",
          "overflow-y": "scroll"
        },
        ".notice-msg": {
          "color": "#999",
          "font-size": "12px",
          "width": "120px !important",
          "margin-left": "-10px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "display": "-webkit-box",
          "-webkit-line-clamp": "1",
          "-webkit-box-orient": "vertical",
          "-webkit-box-flex": "1"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/discussion/components/title.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- member title -->\r\n<template>\r\n  <div style=\"background: #fff;height:38px\">\r\n    <div class=\"mess-header flex align-center justify-between drag\">\r\n      <div class=\"mess-name\">\r\n        <slot></slot>\r\n      </div>\r\n      <div class=\"mess-nav flex align-center noDrag setnav\">\r\n        <span @click=\"goInfo\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_info.png\" alt />\r\n        </span>\r\n        <span @click=\"goGroup\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_member.png\" alt />\r\n        </span>\r\n        <span @click=\"goSetting\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_config.png\" alt />\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <!-- <div v-if=\"!rightStatus\" id=\"checklist\" class=\"mess-checklist\"> -->\r\n\r\n    <!-- </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\r\n//例如：import 《组件名称》 from '《组件路径》';\r\nimport { contGrpSize } from '@/utils';\r\nexport default {\r\n  //import引入的组件需要注入到对象中才能使用\r\n  props: ['authStatus'],\r\n\r\n  components: {},\r\n  data() {\r\n    //这里存放数据\r\n    return {\r\n      drawer: false,\r\n      rightStatus: true,\r\n      menutop: ['消息'],\r\n      menu:\r\n        this.authStatus == 3\r\n          ? [\r\n            { id: '1', name: '查看社区信息' },\r\n            { id: '2', name: '查看社区成员' },\r\n            { id: '4', name: '设置' }\r\n          ]\r\n          : [\r\n            { id: '1', name: '查看社区信息' },\r\n            { id: '2', name: '查看社区成员' },\r\n            { id: '3', name: '社区管理' },\r\n            { id: '4', name: '设置' }\r\n          ]\r\n      // menu:[{id:'1',name:\"查看群信息\"}, {id:'2',name:\"查看群成员\"},{id:'4',name:\"设置\"}]\r\n    };\r\n  },\r\n  //监听属性 类似于data概念\r\n  computed: {},\r\n  //监控data中的数据变化\r\n  watch: {\r\n    authStatus(a) {\r\n      if (a == 3) {\r\n        this.menu = [\r\n          { id: '1', name: '查看社区信息' },\r\n          { id: '2', name: '查看社区成员' },\r\n          { id: '4', name: '设置' }\r\n        ];\r\n      } else {\r\n        this.menu = [\r\n          { id: '1', name: '查看社区信息' },\r\n          { id: '2', name: '查看社区成员' },\r\n          { id: '3', name: '社区管理' },\r\n          { id: '4', name: '设置' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  //方法集合\r\n  methods: {\r\n    goSetting() {\r\n      this.$emit('goSetting', 1);\r\n    },\r\n    goGroup() {\r\n      this.$emit('goSetting', 2);\r\n    },\r\n    goInfo() {\r\n      this.$emit('goSetting', 0);\r\n    },\r\n    showPerson() {},\r\n    setClick() {\r\n      this.rightStatus = true;\r\n    },\r\n    son(item) {\r\n      if (item.id == 4) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/setting',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 1) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/information',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 3) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/manage',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 2) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/member',\r\n          query: {\r\n            targetId: sessionStorage.getItem('groupId'),\r\n            timer: new Date().getTime()\r\n          }\r\n        });\r\n      }\r\n    },\r\n    gourl(item, idx) {\r\n      if (idx == 0) {\r\n        let current = {\r\n          targetId: sessionStorage.getItem('groupId'),\r\n          uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\r\n        };\r\n        this.$store.dispatch('SET_CURRENT_CHAT', current);\r\n        this.$router.push({\r\n          path: '/app/chat/group/message',\r\n          query: {\r\n            targetId: sessionStorage.getItem('groupId'),\r\n            timer: new Date().getTime(),\r\n            // friendName: encodeURI(this.groupobj.groupName),\r\n            friendName: null,\r\n            uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\r\n          }\r\n        });\r\n      } else if (idx == 1) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/files',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      }\r\n    }\r\n  },\r\n  //生命周期 - 创建完成（可以访问当前this实例）\r\n  created() {\r\n    /* console.log(\r\n      sessionStorage.authStatus,\r\n      \"sessionStorage.authStatussessionStorage.authStatus\"\r\n    ); */\r\n  },\r\n  //生命周期 - 挂载完成（可以访问DOM元素）\r\n  mounted() {},\r\n  beforeCreate() {}, //生命周期 - 创建之前\r\n  beforeMount() {}, //生命周期 - 挂载之前\r\n  beforeUpdate() {}, //生命周期 - 更新之前\r\n  updated() {}, //生命周期 - 更新之后\r\n  beforeDestroy() {}, //生命周期 - 销毁之前\r\n  destroyed() {}, //生命周期 - 销毁完成\r\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\r\n};\r\n</script>",
    "originData": "<!-- member title -->\r\n<template>\r\n  <div style=\"background: #fff;height:38px\">\r\n    <div class=\"mess-header flex align-center justify-between drag\">\r\n      <div class=\"mess-name\">\r\n        <slot></slot>\r\n      </div>\r\n      <div class=\"mess-nav flex align-center noDrag setnav\">\r\n        <span @click=\"goInfo\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_info.png\" alt />\r\n        </span>\r\n        <span @click=\"goGroup\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_member.png\" alt />\r\n        </span>\r\n        <span @click=\"goSetting\">\r\n          <img draggable='false' src=\"../../../../assets/images/right_top_config.png\" alt />\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <!-- <div v-if=\"!rightStatus\" id=\"checklist\" class=\"mess-checklist\"> -->\r\n\r\n    <!-- </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\r\n//例如：import 《组件名称》 from '《组件路径》';\r\nimport { contGrpSize } from '@/utils';\r\nexport default {\r\n  //import引入的组件需要注入到对象中才能使用\r\n  props: ['authStatus'],\r\n\r\n  components: {},\r\n  data() {\r\n    //这里存放数据\r\n    return {\r\n      drawer: false,\r\n      rightStatus: true,\r\n      menutop: ['消息'],\r\n      menu:\r\n        this.authStatus == 3\r\n          ? [\r\n            { id: '1', name: '查看社区信息' },\r\n            { id: '2', name: '查看社区成员' },\r\n            { id: '4', name: '设置' }\r\n          ]\r\n          : [\r\n            { id: '1', name: '查看社区信息' },\r\n            { id: '2', name: '查看社区成员' },\r\n            { id: '3', name: '社区管理' },\r\n            { id: '4', name: '设置' }\r\n          ]\r\n      // menu:[{id:'1',name:\"查看群信息\"}, {id:'2',name:\"查看群成员\"},{id:'4',name:\"设置\"}]\r\n    };\r\n  },\r\n  //监听属性 类似于data概念\r\n  computed: {},\r\n  //监控data中的数据变化\r\n  watch: {\r\n    authStatus(a) {\r\n      if (a == 3) {\r\n        this.menu = [\r\n          { id: '1', name: '查看社区信息' },\r\n          { id: '2', name: '查看社区成员' },\r\n          { id: '4', name: '设置' }\r\n        ];\r\n      } else {\r\n        this.menu = [\r\n          { id: '1', name: '查看社区信息' },\r\n          { id: '2', name: '查看社区成员' },\r\n          { id: '3', name: '社区管理' },\r\n          { id: '4', name: '设置' }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  //方法集合\r\n  methods: {\r\n    goSetting() {\r\n      this.$emit('goSetting', 1);\r\n    },\r\n    goGroup() {\r\n      this.$emit('goSetting', 2);\r\n    },\r\n    goInfo() {\r\n      this.$emit('goSetting', 0);\r\n    },\r\n    showPerson() {},\r\n    setClick() {\r\n      this.rightStatus = true;\r\n    },\r\n    son(item) {\r\n      if (item.id == 4) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/setting',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 1) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/information',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 3) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/manage',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      } else if (item.id == 2) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/member',\r\n          query: {\r\n            targetId: sessionStorage.getItem('groupId'),\r\n            timer: new Date().getTime()\r\n          }\r\n        });\r\n      }\r\n    },\r\n    gourl(item, idx) {\r\n      if (idx == 0) {\r\n        let current = {\r\n          targetId: sessionStorage.getItem('groupId'),\r\n          uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\r\n        };\r\n        this.$store.dispatch('SET_CURRENT_CHAT', current);\r\n        this.$router.push({\r\n          path: '/app/chat/group/message',\r\n          query: {\r\n            targetId: sessionStorage.getItem('groupId'),\r\n            timer: new Date().getTime(),\r\n            // friendName: encodeURI(this.groupobj.groupName),\r\n            friendName: null,\r\n            uniqueCode: contGrpSize(sessionStorage.getItem('groupId'))\r\n          }\r\n        });\r\n      } else if (idx == 1) {\r\n        this.$router.push({\r\n          path: '/app/chat/group/files',\r\n          query: { timer: new Date().getTime() }\r\n        });\r\n      }\r\n    }\r\n  },\r\n  //生命周期 - 创建完成（可以访问当前this实例）\r\n  created() {\r\n    /* console.log(\r\n      sessionStorage.authStatus,\r\n      \"sessionStorage.authStatussessionStorage.authStatus\"\r\n    ); */\r\n  },\r\n  //生命周期 - 挂载完成（可以访问DOM元素）\r\n  mounted() {},\r\n  beforeCreate() {}, //生命周期 - 创建之前\r\n  beforeMount() {}, //生命周期 - 挂载之前\r\n  beforeUpdate() {}, //生命周期 - 更新之前\r\n  updated() {}, //生命周期 - 更新之后\r\n  beforeDestroy() {}, //生命周期 - 销毁之前\r\n  destroyed() {}, //生命周期 - 销毁完成\r\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n//@import url(); 引入公共css类\r\n.mess-header {\r\n  height: 38px;\r\n  background: #fff;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n  border-bottom: 1px solid #e4e4e4;\r\n  span {\r\n    height: 20px;\r\n    line-height: 20px;\r\n    &:nth-child(2) {\r\n      margin: 0 12px;\r\n    }\r\n    &:nth-child(4) {\r\n      margin: 0 12px;\r\n    }\r\n  }\r\n\r\n  .mess-nav span {\r\n    cursor: pointer;\r\n  }\r\n  .setnav span {\r\n    padding: 5px 3px !important;\r\n  }\r\n  .mess-nav img {\r\n    width: 23px;\r\n    height: 23px;\r\n  }\r\n  .mess-name {\r\n    font-weight: 600;\r\n  }\r\n}\r\n.mess-checklist {\r\n  position: absolute;\r\n  right: 0;\r\n  width: 200px;\r\n  background: rgba(255, 255, 255, 1);\r\n  border: 1px solid rgba(221, 221, 221, 1);\r\n  z-index: 10000;\r\n}\r\n.liMenu {\r\n  cursor: pointer;\r\n  text-align: center;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-size: 15px;\r\n}\r\n.liMenu:hover {\r\n  color: #fff;\r\n  background: #2f54eb;\r\n}\r\n</style>\r\n",
    "cssJson": [
      {
        ".mess-header": {
          "height": "38px",
          "background": "#fff",
          "padding": "0 20px",
          "box-sizing": "border-box",
          "border-bottom": "1px solid #e4e4e4",
          "span": {
            "height": "20px",
            "line-height": "20px",
            "&:nth-child(2)": {
              "margin": "0 12px"
            },
            "&:nth-child(4)": {
              "margin": "0 12px"
            }
          },
          ".mess-nav span": {
            "cursor": "pointer"
          },
          ".setnav span": {
            "padding": "5px 3px !important"
          },
          ".mess-nav img": {
            "width": "23px",
            "height": "23px"
          },
          ".mess-name": {
            "font-weight": "600"
          }
        },
        ".mess-checklist": {
          "position": "absolute",
          "right": "0",
          "width": "200px",
          "background": "rgba(255, 255, 255, 1)",
          "border": "1px solid rgba(221, 221, 221, 1)",
          "z-index": "10000"
        },
        ".liMenu": {
          "cursor": "pointer",
          "text-align": "center",
          "height": "40px",
          "line-height": "40px",
          "font-size": "15px"
        },
        ".liMenu:hover": {
          "color": "#fff",
          "background": "#2f54eb"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/discussion/components/GroupInfo.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"group-info\">\n    <div class=\"title\">\n      <span>{{ $t('book_group_0026') }}</span>\n      <i class=\"el-icon-close close-i\" @click=\"handleClose\"></i>\n    </div>\n    <div class=\"content\">\n      <div class=\"group-header\">\n        <div class=\"discussion-image\">\n          <DiscussionIcon :name=\"groupInfo.groupName\" iconType=\"large\" />\n        </div>\n        <div class=\"group-name\">\n          <span :title=\"groupInfo.groupName\">{{ groupInfo.groupName }}</span>\n          <img class=\"img_15\" src=\"../../../../assets/images/edit.png\" @click=\"onEditDiscussionName\" alt />\n        </div>\n      </div>\n      <el-divider class=\"group-el-divider\" />\n      <div class=\"group-detail\">\n        <el-row>\n          <el-col :span=\"12\">\n            <span>{{ $t('book_group_0028') }}</span>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"group-detail-info\">{{ $t('Universal_0303', {value: groupInfo.maxPeople}) }}</div>\n          </el-col>\n        </el-row>\n      </div>\n    </div>\n    <DiscussionNameEdit\n      :name=\"groupInfo.groupName\"\n      :group-id=\"groupInfo.id\"\n      @refreshGroupInfo=\"refreshGroupInfo\"\n      ref=\"discussionNameEdit\"\n    />\n  </div>\n</template>\n\n<script>\nimport DiscussionNameEdit from './DiscussionNameEdit';\nimport DiscussionIcon from '@/components/memberIcon/DiscussionIcon';\n\nexport default {\n  name: 'GroupInfo',\n  components: {\n    DiscussionNameEdit,\n    DiscussionIcon\n  },\n  props: {\n    groupInfo: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '1';\n      }\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit('closeDialog');\n    },\n    onEditDiscussionName() {\n      this.$refs.discussionNameEdit.onPop();\n    },\n    onShareGroup() {\n      this.$refs.groupShare.onPop();\n    },\n    refreshGroupInfo() {\n      this.$emit('refreshGroupInfo');\n    },\n    reloadGroupInfo() {\n      this.$forceUpdate();\n    }\n  }\n};\n</script>",
    "originData": "\n<template>\n  <div class=\"group-info\">\n    <div class=\"title\">\n      <span>{{ $t('book_group_0026') }}</span>\n      <i class=\"el-icon-close close-i\" @click=\"handleClose\"></i>\n    </div>\n    <div class=\"content\">\n      <div class=\"group-header\">\n        <div class=\"discussion-image\">\n          <DiscussionIcon :name=\"groupInfo.groupName\" iconType=\"large\" />\n        </div>\n        <div class=\"group-name\">\n          <span :title=\"groupInfo.groupName\">{{ groupInfo.groupName }}</span>\n          <img class=\"img_15\" src=\"../../../../assets/images/edit.png\" @click=\"onEditDiscussionName\" alt />\n        </div>\n      </div>\n      <el-divider class=\"group-el-divider\" />\n      <div class=\"group-detail\">\n        <el-row>\n          <el-col :span=\"12\">\n            <span>{{ $t('book_group_0028') }}</span>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"group-detail-info\">{{ $t('Universal_0303', {value: groupInfo.maxPeople}) }}</div>\n          </el-col>\n        </el-row>\n      </div>\n    </div>\n    <DiscussionNameEdit\n      :name=\"groupInfo.groupName\"\n      :group-id=\"groupInfo.id\"\n      @refreshGroupInfo=\"refreshGroupInfo\"\n      ref=\"discussionNameEdit\"\n    />\n  </div>\n</template>\n\n<script>\nimport DiscussionNameEdit from './DiscussionNameEdit';\nimport DiscussionIcon from '@/components/memberIcon/DiscussionIcon';\n\nexport default {\n  name: 'GroupInfo',\n  components: {\n    DiscussionNameEdit,\n    DiscussionIcon\n  },\n  props: {\n    groupInfo: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '1';\n      }\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit('closeDialog');\n    },\n    onEditDiscussionName() {\n      this.$refs.discussionNameEdit.onPop();\n    },\n    onShareGroup() {\n      this.$refs.groupShare.onPop();\n    },\n    refreshGroupInfo() {\n      this.$emit('refreshGroupInfo');\n    },\n    reloadGroupInfo() {\n      this.$forceUpdate();\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.group-info {\n  box-sizing: border-box;\n\n  font-size: 14px;\n  font-weight: 500;\n  color: #333;\n  width: 100%;\n  height: 100vh;\n  overflow-y: scroll;\n  user-select: text;\n  .outGroup {\n    box-sizing: border-box;\n    text-align: center;\n    color: red;\n    height: 50px;\n    line-height: 50px;\n    width: 100%;\n    background-color: #fbfbfb;\n    position: absolute;\n    bottom: 0;\n    span {\n      cursor: pointer;\n    }\n  }\n  .title:first-child {\n    position: absolute;\n    z-index: 1;\n  }\n  .title {\n    width: 100%;\n    height: 50px;\n    background-color: #fbfbfb;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 20px;\n    span {\n      font-weight: 600;\n    }\n    .el-icon-close {\n      font-size: 14px;\n      color: #000;\n    }\n    .el-icon-right {\n      font-size: 20px;\n    }\n  }\n\n  .content {\n    box-sizing: border-box;\n    width: 100%;\n    background-color: #fff;\n    margin-top: 60px;\n    position: relative;\n    .group-avatar {\n      width: 50px;\n      height: 50px;\n      border-radius: 50%;\n    }\n    .group-name {\n      width: 100%;\n      font-size: 12px;\n      color: #333333;\n      font-weight: bold;\n      text-align: center;\n    }\n    .group-name span {\n      max-width: 80%;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: pre;\n      display: inline-block;\n      padding-right: 5px;\n    }\n    .group-code {\n      font-size: 10px;\n      color: #999999;\n      margin-right: 5px;\n    }\n    .group-header {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: center;\n      height: 90px;\n    }\n    .group-edit {\n      position: absolute;\n      top: 0px;\n      right: 10px;\n    }\n    .group-el-divider {\n      margin: 10px 0;\n      background-color: #ececec;\n    }\n    .group-detail {\n      padding: 0 10px;\n      span {\n        color: #999999;\n        font-size: 13px;\n      }\n      .el-row {\n        margin-bottom: 10px;\n      }\n      .group-detail-info {\n        font-size: 13px;\n        word-break: break-word;\n        font-weight: 400;\n        color: #333;\n      }\n      .group-profile {\n        font-size: 13px;\n        color: #999999;\n        height: 40vh;\n      }\n      .group-profile span {\n        display: block;\n        height: 100%;\n        line-height: 2;\n        color: #333333;\n        overflow-y: auto;\n        word-wrap: break-word;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".group-info": {
          "box-sizing": "border-box",
          "font-size": "14px",
          "font-weight": "500",
          "color": "#333",
          "width": "100%",
          "height": "100vh",
          "overflow-y": "scroll",
          "user-select": "text",
          ".outGroup": {
            "box-sizing": "border-box",
            "text-align": "center",
            "color": "red",
            "height": "50px",
            "line-height": "50px",
            "width": "100%",
            "background-color": "#fbfbfb",
            "position": "absolute",
            "bottom": "0",
            "span": {
              "cursor": "pointer"
            }
          },
          ".title:first-child": {
            "position": "absolute",
            "z-index": "1"
          },
          ".title": {
            "width": "100%",
            "height": "50px",
            "background-color": "#fbfbfb",
            "display": "flex",
            "justify-content": "space-between",
            "align-items": "center",
            "box-sizing": "border-box",
            "padding": "0 20px",
            "span": {
              "font-weight": "600"
            },
            ".el-icon-close": {
              "font-size": "14px",
              "color": "#000"
            },
            ".el-icon-right": {
              "font-size": "20px"
            }
          },
          ".content": {
            "box-sizing": "border-box",
            "width": "100%",
            "background-color": "#fff",
            "margin-top": "60px",
            "position": "relative",
            ".group-avatar": {
              "width": "50px",
              "height": "50px",
              "border-radius": "50%"
            },
            ".group-name": {
              "width": "100%",
              "font-size": "12px",
              "color": "#333333",
              "font-weight": "bold",
              "text-align": "center"
            },
            ".group-name span": {
              "max-width": "80%",
              "overflow": "hidden",
              "text-overflow": "ellipsis",
              "white-space": "pre",
              "display": "inline-block",
              "padding-right": "5px"
            },
            ".group-code": {
              "font-size": "10px",
              "color": "#999999",
              "margin-right": "5px"
            },
            ".group-header": {
              "display": "flex",
              "flex-direction": "column",
              "justify-content": "space-between",
              "align-items": "center",
              "height": "90px"
            },
            ".group-edit": {
              "position": "absolute",
              "top": "0px",
              "right": "10px"
            },
            ".group-el-divider": {
              "margin": "10px 0",
              "background-color": "#ececec"
            },
            ".group-detail": {
              "padding": "0 10px",
              "span": {
                "color": "#999999",
                "font-size": "13px"
              },
              ".el-row": {
                "margin-bottom": "10px"
              },
              ".group-detail-info": {
                "font-size": "13px",
                "word-break": "break-word",
                "font-weight": "400",
                "color": "#333"
              },
              ".group-profile": {
                "font-size": "13px",
                "color": "#999999",
                "height": "40vh"
              },
              ".group-profile span": {
                "display": "block",
                "height": "100%",
                "line-height": "2",
                "color": "#333333",
                "overflow-y": "auto",
                "word-wrap": "break-word"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/discussion/components/DiscussionNameEdit.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <el-dialog\n      :title=\"$t('book_group_0021')\"\n      :visible.sync=\"discussionNameVisible\"\n      width=\"270px\"\n      :center=\"true\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"discussion-name\">\n        <div class=\"member-notes\">\n          <el-form ref=\"ruleForm\" :rules=\"formRules\" label-position=\"top\" :model=\"formValues\" @submit.native.prevent>\n            <el-form-item prop=\"friendNotes\">\n              <el-input\n                  :placeholder=\"$t('book_group_0022')\"\n                  ref=\"discussionname\"\n                  v-model=\"formValues.friendNotes\"\n                  @keyup.enter.native=\"onConfirm\"\n              ></el-input>\n              <!-- <el-input\n                  show-word-limit\n                  type=\"textarea\"\n                  :maxlength=\"30\"\n                  :rows=\"2\"\n                  @input=\"validateName\"\n                  ref=\"discussionname\"\n                  resize=\"none\"\n                  placeholder=\"请输入3-30位讨论组名称\"\n                  v-model=\"discussionName\"\n                  size=\"small\"\n                ></el-input> -->\n            </el-form-item>\n          </el-form>\n        </div>\n        <div class=\"dialog-footer\">\n          <el-button size=\"mini\" class=\"cancelBtn\" type=\"info\" @click=\"onCancel\">\n            {{ $t('Universal_0063') }}\n          </el-button>\n          <el-button size=\"mini\" :class=\"nameValidate ? '' : 'can-not-click'\" :disabled=\"!nameValidate\" type=\"primary\" @click=\"onConfirm\"\n            >\n            {{ $t('Universal_0062') }}\n          </el-button>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { convertToPinyin } from '@/utils/pinyin';\nimport { setGroupBase } from './server';\nexport default {\n  name: 'DiscussionNameEdit',\n  data() {\n    return {\n      discussionNameVisible: false,\n      discussionName: '',\n      formValues: {\n        friendNotes: ''\n      },\n      formRules: {\n        friendNotes: [\n          {\n            required: true,\n            trigger: 'change',\n            message: this.$t('book_group_0022')\n          },\n          {\n            trigger: 'change',\n            min: 3,\n            max: 30,\n            message: this.$t('Universal_0226')\n          },\n          {\n            pattern: /^((?!didi).)+$/i, ///^didi/ig,\n            message: this.$t('chat_comm_set_0017')\n          }\n        ]\n      }\n    };\n  },\n  props: {\n    name: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    groupId: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  computed: {\n    nameValidate() {\n      let len = this.formValues.friendNotes.length;\n      let reg = /^((?!didi).)+$/i;\n      if (!this.formValues.friendNotes || len > 30 || len < 3 || !reg.test(this.formValues.friendNotes)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  methods: {\n    onPop() {\n      this.discussionNameVisible = true;\n      this.formValues.friendNotes = this.name;\n      this.$nextTick(() => {\n        this.$refs.discussionname.select();\n        this.$refs.discussionname.focus();\n      });\n    },\n    onCancel() {\n      this.discussionNameVisible = false;\n    },\n    onConfirm() {\n      this.formValues.friendNotes = this.formValues.friendNotes.trim();\n      this.$refs['ruleForm'].validate(async valid => {\n        if (valid) {\n          setGroupBase({\n            id: this.groupId,\n            groupName: this.formValues.friendNotes\n          }).then(async res => {\n            this.showResponseMessages(res);\n            if (res.code == '200') {\n              await this.updateGroupInfo({\n                group_name: this.formValues.friendNotes,\n                group_name_pinyin: convertToPinyin(this.formValues.friendNotes)\n              });\n              this.discussionNameVisible = false;\n              this.$parent.refreshGroupInfo();\n            }\n          });\n        }\n      });\n    },\n    showResponseMessages(res) {\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: res.msg\n        });\n      } else {\n        this.$message({\n          type: 'error',\n          message: res.msg\n        });\n      }\n    },\n    async updateGroupInfo(item) {\n      await window.vm\n        .$knex('t_groups')\n        .where({ group_id: this.groupId })\n        .update(item);\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div>\n    <el-dialog\n      :title=\"$t('book_group_0021')\"\n      :visible.sync=\"discussionNameVisible\"\n      width=\"270px\"\n      :center=\"true\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <div class=\"discussion-name\">\n        <div class=\"member-notes\">\n          <el-form ref=\"ruleForm\" :rules=\"formRules\" label-position=\"top\" :model=\"formValues\" @submit.native.prevent>\n            <el-form-item prop=\"friendNotes\">\n              <el-input\n                  :placeholder=\"$t('book_group_0022')\"\n                  ref=\"discussionname\"\n                  v-model=\"formValues.friendNotes\"\n                  @keyup.enter.native=\"onConfirm\"\n              ></el-input>\n              <!-- <el-input\n                  show-word-limit\n                  type=\"textarea\"\n                  :maxlength=\"30\"\n                  :rows=\"2\"\n                  @input=\"validateName\"\n                  ref=\"discussionname\"\n                  resize=\"none\"\n                  placeholder=\"请输入3-30位讨论组名称\"\n                  v-model=\"discussionName\"\n                  size=\"small\"\n                ></el-input> -->\n            </el-form-item>\n          </el-form>\n        </div>\n        <div class=\"dialog-footer\">\n          <el-button size=\"mini\" class=\"cancelBtn\" type=\"info\" @click=\"onCancel\">\n            {{ $t('Universal_0063') }}\n          </el-button>\n          <el-button size=\"mini\" :class=\"nameValidate ? '' : 'can-not-click'\" :disabled=\"!nameValidate\" type=\"primary\" @click=\"onConfirm\"\n            >\n            {{ $t('Universal_0062') }}\n          </el-button>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { convertToPinyin } from '@/utils/pinyin';\nimport { setGroupBase } from './server';\nexport default {\n  name: 'DiscussionNameEdit',\n  data() {\n    return {\n      discussionNameVisible: false,\n      discussionName: '',\n      formValues: {\n        friendNotes: ''\n      },\n      formRules: {\n        friendNotes: [\n          {\n            required: true,\n            trigger: 'change',\n            message: this.$t('book_group_0022')\n          },\n          {\n            trigger: 'change',\n            min: 3,\n            max: 30,\n            message: this.$t('Universal_0226')\n          },\n          {\n            pattern: /^((?!didi).)+$/i, ///^didi/ig,\n            message: this.$t('chat_comm_set_0017')\n          }\n        ]\n      }\n    };\n  },\n  props: {\n    name: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    groupId: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  computed: {\n    nameValidate() {\n      let len = this.formValues.friendNotes.length;\n      let reg = /^((?!didi).)+$/i;\n      if (!this.formValues.friendNotes || len > 30 || len < 3 || !reg.test(this.formValues.friendNotes)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  methods: {\n    onPop() {\n      this.discussionNameVisible = true;\n      this.formValues.friendNotes = this.name;\n      this.$nextTick(() => {\n        this.$refs.discussionname.select();\n        this.$refs.discussionname.focus();\n      });\n    },\n    onCancel() {\n      this.discussionNameVisible = false;\n    },\n    onConfirm() {\n      this.formValues.friendNotes = this.formValues.friendNotes.trim();\n      this.$refs['ruleForm'].validate(async valid => {\n        if (valid) {\n          setGroupBase({\n            id: this.groupId,\n            groupName: this.formValues.friendNotes\n          }).then(async res => {\n            this.showResponseMessages(res);\n            if (res.code == '200') {\n              await this.updateGroupInfo({\n                group_name: this.formValues.friendNotes,\n                group_name_pinyin: convertToPinyin(this.formValues.friendNotes)\n              });\n              this.discussionNameVisible = false;\n              this.$parent.refreshGroupInfo();\n            }\n          });\n        }\n      });\n    },\n    showResponseMessages(res) {\n      if (res.code == '200') {\n        this.$message({\n          type: 'success',\n          message: res.msg\n        });\n      } else {\n        this.$message({\n          type: 'error',\n          message: res.msg\n        });\n      }\n    },\n    async updateGroupInfo(item) {\n      await window.vm\n        .$knex('t_groups')\n        .where({ group_id: this.groupId })\n        .update(item);\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.can-not-click {\n  opacity: 0.5;\n}\n.discussion-name {\n  .tit {\n    display: flex;\n    align-items: center;\n    img {\n      // width: 44px;\n      // height: 44px;\n      width: 32px;\n      height: 32px;\n      margin-right: 10px;\n      border-radius: 50%;\n    }\n  }\n  textarea {\n    height: 60px;\n    margin: 15px 0;\n  }\n  .member-notes {\n    margin: 10px 0;\n\n    /deep/ .el-input--small {\n      height: 55px;\n    }\n\n    /deep/ .el-textarea__inner {\n      height: 54px;\n      background: transparent;\n      border: 1px solid #d7d7d7;\n    }\n\n    /deep/ .el-input__count {\n      font-size: 12px;\n      color: #666;\n    }\n  }\n}\n.dialog-footer {\n  display: flex;\n  justify-content: space-between;\n  width: 90%;\n  margin: 0 auto;\n  padding-top: 10px;\n  /deep/ .dialog-footer {\n    width: 80%;\n  }\n  /deep/.el-button--mini,\n  .el-button--small {\n    width: 84px;\n    height: 28px;\n    font-size: 13px;\n  }\n  /deep/ .el-button--default .el-button--mini {\n    color: #333;\n    font-size: 13px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".can-not-click": {
          "opacity": "0.5"
        },
        ".discussion-name": {
          ".tit": {
            "display": "flex",
            "align-items": "center",
            "img": {
              "width": "32px",
              "height": "32px",
              "margin-right": "10px",
              "border-radius": "50%"
            }
          },
          "textarea": {
            "height": "60px",
            "margin": "15px 0"
          },
          ".member-notes": {
            "margin": "10px 0",
            "/deep/ .el-input--small": {
              "height": "55px"
            },
            "/deep/ .el-textarea__inner": {
              "height": "54px",
              "background": "transparent",
              "border": "1px solid #d7d7d7"
            },
            "/deep/ .el-input__count": {
              "font-size": "12px",
              "color": "#666"
            }
          }
        },
        ".dialog-footer": {
          "display": "flex",
          "justify-content": "space-between",
          "width": "90%",
          "margin": "0 auto",
          "padding-top": "10px",
          "/deep/ .dialog-footer": {
            "width": "80%"
          },
          "/deep/.el-button--mini,  .el-button--small": {
            "width": "84px",
            "height": "28px",
            "font-size": "13px"
          },
          "/deep/ .el-button--default .el-button--mini": {
            "color": "#333",
            "font-size": "13px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/discussion/components/SilentMask.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"silent-mask\">\n    <img class=\"img_18\" src=\"../../../../assets/images/nowords.png\" alt />\n    <span v-if=\"fromType == '330'\">{{ $t('chat_0066') }}</span>\n    <span v-else-if=\"fromType == '326'\">{{ $t('chat_0062') }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SilentMask',\n  props: {\n    fromType: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  }\n};\n</script>",
    "originData": "\n<template>\n  <div class=\"silent-mask\">\n    <img class=\"img_18\" src=\"../../../../assets/images/nowords.png\" alt />\n    <span v-if=\"fromType == '330'\">{{ $t('chat_0066') }}</span>\n    <span v-else-if=\"fromType == '326'\">{{ $t('chat_0062') }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SilentMask',\n  props: {\n    fromType: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.silent-mask {\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.silent-mask img {\n  margin-right: 20px;\n}\n</style>\n",
    "cssJson": [
      {
        ".silent-mask": {
          "font-size": "18px",
          "display": "flex",
          "align-items": "center",
          "justify-content": "center"
        },
        ".silent-mask img": {
          "margin-right": "20px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/discussion/components/GroupCard.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <el-dialog\n      :visible.sync=\"groupCardVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"groupCardVisible = false\"\n      @open=\"onCardOpen\"\n      width=\"330px\"\n      custom-class=\"group-card-dialog\"\n      center\n    >\n      <div class=\"member-card\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"5\">\n            <img :src=\"findImage(groupInfo.groupAvatar)\" class=\"group-avatar\" alt=\"\" />\n          </el-col>\n          <el-col :span=\"18\">\n            <el-row :gutter=\"20\" class=\"item-spacing\">\n              <el-col :span=\"24\">\n                <div class=\"user-nick-name\">\n                  <span>{{ groupInfo.groupName }}</span>\n                </div>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\" class=\"item-spacing\">\n              <el-col :span=\"24\">\n                <div class=\"invite-code\">ID: {{ groupInfo.groupCode }}</div>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\" type=\"flex\" class=\"item-spacing\" justify=\"space-butween\">\n              <el-col :span=\"9\">\n                <img src=\"../../../../assets/images/group_card_members.png\" alt title=\"社区成员\" />\n                {{ groupInfo.people }}\n              </el-col>\n              <el-col :span=\"14\">\n                <div v-if=\"groupInfo.groupStatus == 1\"><img src=\"../../../../assets/images/group_card_public.png\" alt title=\"公开\" /> 公开</div>\n                <div v-else><img src=\"../../../../assets/images/group_card_private.png\" alt title=\"私密\" /> 私密</div>\n              </el-col>\n            </el-row>\n          </el-col>\n        </el-row>\n        <el-divider></el-divider>\n\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"6\">\n            <span>地区</span>\n          </el-col>\n          <el-col :span=\"18\">\n            <div>{{ groupInfo.region }}</div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"6\">\n            <span>社区简介</span>\n          </el-col>\n          <el-col :span=\"18\">\n            <div class=\"group-profile\" :title=\"groupInfo.groupProfile\">\n              {{ groupInfo.groupProfile }}\n            </div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" type=\"flex\" class=\"icons-area\" justify=\"end\">\n          <el-col :span=\"6\" :offset=\"6\"> </el-col>\n          <el-col :span=\"4\">\n             <img src=\"../../../../assets/images/info_transmit.png\" @click=\"transferCard\" alt title=\"分享\" />\n          </el-col>\n          <el-col :span=\"4\" v-show=\"isGroupMember\">\n            <img src=\"../../../../assets/images/group_card_leave.png\" alt title=\"进入社区\" @click=\"toGroupChat\" />\n          </el-col>\n          <el-col :span=\"4\" v-show=\"!isGroupMember\">\n             <img src=\"../../../../assets/images/info_add_friend.png\" alt title=\"加入社区\" @click=\"addToGroup\" />\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"title\"\n      :postcard=\"postcard\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n    <AddFriGrop v-if=\"addOrderVisible\" :visible.sync=\"addOrderVisible\" :inviteCode=\"groupInfo.groupCode\" index=\"1\" />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\nimport { ser_group_member } from '../member/server';\nimport { getSelfUserId } from '@/utils/const';\nimport { mapMutations } from 'vuex';\nimport { contGrpSize } from '@/utils';\nimport AddFriGrop from '@/view//add-friends-group/add';\nimport { CLEAR_CHAT } from '@/store/types';\n\nexport default {\n  name: 'GroupShare',\n  components: {\n    GroupAndInviteChat,\n    AddFriGrop\n  },\n  props: {\n    groupInfo: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      groupCardVisible: false,\n      title: this.$t('Universal_0202'),\n      GroupInviteVisible: false,\n      postcard: true,\n      isGroupMember: false,\n      addOrderVisible: false\n    };\n  },\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    onPop() {\n      this.groupCardVisible = true;\n    },\n    onClose() {\n      this.groupCardVisible = false;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    confirmDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    cancelDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    async transferCard() {\n      if(this.$store.state.common.personalAppealInfo.endTime){\n        this.$confirm(`因发布色情、暴力、种族歧视等违规消息，违反平台规则，\n        账号自${this.$store.state.common.personalAppealInfo.createTime}\n        --${this.$store.state.common.personalAppealInfo.endTime}限制社交功能`,\n        \"提示  \",{\n          confirmButtonText: \"点此申诉\",\n          cancelButtonText: \"知道了\",\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.$emit('toAppeal');\n        }).catch(() => {\n        });\n        return;\n      }\n      this.GroupInviteVisible = true;\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.getCardItem()]);\n    },\n    getCardItem() {\n      return {\n        code: this.groupInfo.groupCode,\n        name: this.groupInfo.groupName,\n        msgUrl: this.groupInfo.groupAvatar,\n        id: this.groupInfo.id,\n        type: '2',\n        originTypePsw: true\n      };\n    },\n    async onCardOpen() {\n      let res = await ser_group_member({\n        gId: this.groupInfo.id\n      });\n      if (res.code == '200') {\n        let result = res.data.filter(item => item.userId == getSelfUserId());\n        this.isGroupMember = result.length > 0;\n      }\n    },\n    toGroupChat() {\n      this.groupCardVisible = false;\n      this.CLEAR_CHAT();\n      let current = {\n        targetId: this.groupInfo.id,\n        id: this.groupInfo.id,\n        uniqueCode: contGrpSize(this.groupInfo.id),\n        sessionName: this.groupInfo.groupName,\n        sessionIcon: this.groupInfo.groupAvatar,\n        fromName: this.$store.state.common.userInfo.nickName,\n        targetType: 2, //单聊\n        msgType: 1, //默认文本\n        fromType: '999'\n      };\n      this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: current\n      });\n    },\n    addToGroup() {\n      this.groupCardVisible = false;\n      this.addOrderVisible = true;\n    },\n    transferSuccess() {\n      this.$parent.transferSuccess();\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div>\n    <el-dialog\n      :visible.sync=\"groupCardVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"groupCardVisible = false\"\n      @open=\"onCardOpen\"\n      width=\"330px\"\n      custom-class=\"group-card-dialog\"\n      center\n    >\n      <div class=\"member-card\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"5\">\n            <img :src=\"findImage(groupInfo.groupAvatar)\" class=\"group-avatar\" alt=\"\" />\n          </el-col>\n          <el-col :span=\"18\">\n            <el-row :gutter=\"20\" class=\"item-spacing\">\n              <el-col :span=\"24\">\n                <div class=\"user-nick-name\">\n                  <span>{{ groupInfo.groupName }}</span>\n                </div>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\" class=\"item-spacing\">\n              <el-col :span=\"24\">\n                <div class=\"invite-code\">ID: {{ groupInfo.groupCode }}</div>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\" type=\"flex\" class=\"item-spacing\" justify=\"space-butween\">\n              <el-col :span=\"9\">\n                <img src=\"../../../../assets/images/group_card_members.png\" alt title=\"社区成员\" />\n                {{ groupInfo.people }}\n              </el-col>\n              <el-col :span=\"14\">\n                <div v-if=\"groupInfo.groupStatus == 1\"><img src=\"../../../../assets/images/group_card_public.png\" alt title=\"公开\" /> 公开</div>\n                <div v-else><img src=\"../../../../assets/images/group_card_private.png\" alt title=\"私密\" /> 私密</div>\n              </el-col>\n            </el-row>\n          </el-col>\n        </el-row>\n        <el-divider></el-divider>\n\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"6\">\n            <span>地区</span>\n          </el-col>\n          <el-col :span=\"18\">\n            <div>{{ groupInfo.region }}</div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"6\">\n            <span>社区简介</span>\n          </el-col>\n          <el-col :span=\"18\">\n            <div class=\"group-profile\" :title=\"groupInfo.groupProfile\">\n              {{ groupInfo.groupProfile }}\n            </div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" type=\"flex\" class=\"icons-area\" justify=\"end\">\n          <el-col :span=\"6\" :offset=\"6\"> </el-col>\n          <el-col :span=\"4\">\n             <img src=\"../../../../assets/images/info_transmit.png\" @click=\"transferCard\" alt title=\"分享\" />\n          </el-col>\n          <el-col :span=\"4\" v-show=\"isGroupMember\">\n            <img src=\"../../../../assets/images/group_card_leave.png\" alt title=\"进入社区\" @click=\"toGroupChat\" />\n          </el-col>\n          <el-col :span=\"4\" v-show=\"!isGroupMember\">\n             <img src=\"../../../../assets/images/info_add_friend.png\" alt title=\"加入社区\" @click=\"addToGroup\" />\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"title\"\n      :postcard=\"postcard\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n    <AddFriGrop v-if=\"addOrderVisible\" :visible.sync=\"addOrderVisible\" :inviteCode=\"groupInfo.groupCode\" index=\"1\" />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\nimport { ser_group_member } from '../member/server';\nimport { getSelfUserId } from '@/utils/const';\nimport { mapMutations } from 'vuex';\nimport { contGrpSize } from '@/utils';\nimport AddFriGrop from '@/view//add-friends-group/add';\nimport { CLEAR_CHAT } from '@/store/types';\n\nexport default {\n  name: 'GroupShare',\n  components: {\n    GroupAndInviteChat,\n    AddFriGrop\n  },\n  props: {\n    groupInfo: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      groupCardVisible: false,\n      title: this.$t('Universal_0202'),\n      GroupInviteVisible: false,\n      postcard: true,\n      isGroupMember: false,\n      addOrderVisible: false\n    };\n  },\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    onPop() {\n      this.groupCardVisible = true;\n    },\n    onClose() {\n      this.groupCardVisible = false;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    confirmDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    cancelDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    async transferCard() {\n      if(this.$store.state.common.personalAppealInfo.endTime){\n        this.$confirm(`因发布色情、暴力、种族歧视等违规消息，违反平台规则，\n        账号自${this.$store.state.common.personalAppealInfo.createTime}\n        --${this.$store.state.common.personalAppealInfo.endTime}限制社交功能`,\n        \"提示  \",{\n          confirmButtonText: \"点此申诉\",\n          cancelButtonText: \"知道了\",\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.$emit('toAppeal');\n        }).catch(() => {\n        });\n        return;\n      }\n      this.GroupInviteVisible = true;\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.getCardItem()]);\n    },\n    getCardItem() {\n      return {\n        code: this.groupInfo.groupCode,\n        name: this.groupInfo.groupName,\n        msgUrl: this.groupInfo.groupAvatar,\n        id: this.groupInfo.id,\n        type: '2',\n        originTypePsw: true\n      };\n    },\n    async onCardOpen() {\n      let res = await ser_group_member({\n        gId: this.groupInfo.id\n      });\n      if (res.code == '200') {\n        let result = res.data.filter(item => item.userId == getSelfUserId());\n        this.isGroupMember = result.length > 0;\n      }\n    },\n    toGroupChat() {\n      this.groupCardVisible = false;\n      this.CLEAR_CHAT();\n      let current = {\n        targetId: this.groupInfo.id,\n        id: this.groupInfo.id,\n        uniqueCode: contGrpSize(this.groupInfo.id),\n        sessionName: this.groupInfo.groupName,\n        sessionIcon: this.groupInfo.groupAvatar,\n        fromName: this.$store.state.common.userInfo.nickName,\n        targetType: 2, //单聊\n        msgType: 1, //默认文本\n        fromType: '999'\n      };\n      this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: current\n      });\n    },\n    addToGroup() {\n      this.groupCardVisible = false;\n      this.addOrderVisible = true;\n    },\n    transferSuccess() {\n      this.$parent.transferSuccess();\n    }\n  }\n};\n</script>\n\n<style>\n.group-card-dialog {\n  border-radius: 5px;\n}\n\n.group-card-dialog .el-dialog__header {\n  padding: 5px;\n}\n\n.group-card-dialog .el-dialog__header button {\n  margin-top: -8px;\n  margin-right: -8px;\n}\n\n.group-card-dialog .el-dialog__body {\n  padding: 10px;\n}\n\n.group-card-dialog .el-divider {\n  margin-bottom: 30px;\n}\n</style>\n\n<style scoped>\n.member-card {\n  padding: 10px 15px;\n  color: #333333;\n  font-size: 12px;\n\n  font-weight: 400;\n  user-select: text;\n}\n\n.item-spacing {\n  margin-bottom: 10px;\n}\n\n.item-spacing img {\n  margin-bottom: -3px;\n}\n\n.info-area span {\n  width: 100%;\n  display: inline-block;\n  text-align: right;\n  color: #999999;\n}\n\n.user-nick-name {\n  font-size: 16px;\n  font-weight: bold;\n  width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.user-nick-name span {\n  user-select: text;\n}\n\n.gender {\n  float: right;\n  margin-top: -20px;\n}\n\n.invite-code {\n  font-size: 12px;\n  color: #999999;\n  user-select: text;\n}\n\n.icons-area {\n  margin-top: 30px;\n}\n\n.member-card img {\n  width: 18px;\n  height: 18px;\n}\n.icons-area img {\n  width: 22px;\n  height: 22px;\n}\n.gender img {\n  width: 24px;\n  height: 24px;\n}\n\n.member-card .group-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n}\n.group-profile {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n}\n</style>\n",
    "cssJson": [
      {
        ".group-card-dialog": {
          "border-radius": "5px"
        },
        ".group-card-dialog .el-dialog__header": {
          "padding": "5px"
        },
        ".group-card-dialog .el-dialog__header button": {
          "margin-top": "-8px",
          "margin-right": "-8px"
        },
        ".group-card-dialog .el-dialog__body": {
          "padding": "10px"
        },
        ".group-card-dialog .el-divider": {
          "margin-bottom": "30px"
        }
      },
      {
        ".member-card": {
          "padding": "10px 15px",
          "color": "#333333",
          "font-size": "12px",
          "font-weight": "400",
          "user-select": "text"
        },
        ".item-spacing": {
          "margin-bottom": "10px"
        },
        ".item-spacing img": {
          "margin-bottom": "-3px"
        },
        ".info-area span": {
          "width": "100%",
          "display": "inline-block",
          "text-align": "right",
          "color": "#999999"
        },
        ".user-nick-name": {
          "font-size": "16px",
          "font-weight": "bold",
          "width": "200px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "nowrap"
        },
        ".user-nick-name span": {
          "user-select": "text"
        },
        ".gender": {
          "float": "right",
          "margin-top": "-20px"
        },
        ".invite-code": {
          "font-size": "12px",
          "color": "#999999",
          "user-select": "text"
        },
        ".icons-area": {
          "margin-top": "30px"
        },
        ".member-card img": {
          "width": "18px",
          "height": "18px"
        },
        ".icons-area img": {
          "width": "22px",
          "height": "22px"
        },
        ".gender img": {
          "width": "24px",
          "height": "24px"
        },
        ".member-card .group-avatar": {
          "width": "48px",
          "height": "48px",
          "border-radius": "50%"
        },
        ".group-profile": {
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "display": "-webkit-box",
          "-webkit-line-clamp": "3",
          "-webkit-box-orient": "vertical"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/LangChange.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"header-lang\">\n    <el-dropdown trigger=\"click\" @command=\"changeLang\">\n      <span class=\"el-dropdown-link\">\n         {{ langMap[$i18n.locale] }}\n        <i class=\"el-icon-arrow-down el-icon--right\"></i>\n      </span>\n      <el-dropdown-menu slot=\"dropdown\">\n        <el-dropdown-item command=\"zh-cn\">中文</el-dropdown-item>\n         <el-dropdown-item command=\"en-us\">English</el-dropdown-item>\n      </el-dropdown-menu>\n    </el-dropdown>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { langMap } from '@/map';\nimport { instance } from '@/utils/axios';\nimport fs from \"fs\";\nimport path from 'path';\nconst { remote, ipcRenderer } = require('electron');\nconst configDir = path.join(remote.app.getPath('appData'), `${process.env.VUE_APP_ID}`);\nimport bus from '@/utils/eventbus';\nimport Ws from '@/utils/ws';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      langMap\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    // 切换语言\n    changeLang(command) {\n      if (this.$i18n.locale === command) return;\n      if(/^\\/app/.test(this.$route.path)){\n        Ws.close();\n        Ws.init();\n      }\n      this.$nextTick(() => {\n        this.$i18n.locale = command;\n        instance.defaults.headers['Content-Language'] = command;\n        instance.defaults.headers['Accept-Language'] = command;\n        localStorage.lang = command;\n        this.$message({\n          type: 'success',\n          message: this.$t('personal_0075') + this.langMap[command],\n          duration: 1000\n        });\n        // 把设置的语言保存在本地\n        this.writeLangFile(command);\n        bus.$emit('refresh');\n        this.changeTrayLang();\n        ipcRenderer.send('changeMediaLan', {lan: command});\n      });\n      // this.$remote.getCurrentWebContents().reload();\n    },\n    writeLangFile(lang) {\n      let obj = {\n        \"language\": lang\n      };\n      fs.writeFileSync(`${configDir}/language.json`, JSON.stringify(obj));\n    },\n    //  取浏览器语言\n    getNavigatorLan() {\n      let lang = navigator.language || navigator.userLanguage;\n      if (lang && this.langMap[lang.toLowerCase()]) {\n        // 浏览器语言存在，且didi中有该语言\n        this.$i18n.locale = lang.toLowerCase();\n      } else {\n        // 不存在该语言，则默认为英语\n        this.$i18n.locale = 'en-us';\n      }\n    },\n    // 托盘语言\n    changeTrayLang() {\n      const ipcRenderer = require('electron').ipcRenderer;\n      ipcRenderer.send('trayLang', {\n        exit: this.$t('personal_0022'),\n        newMsg: this.$t('Universal_0364'),\n        ignoreAll: this.$t('Universal_0363')\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  async created() {\n    if (fs.existsSync(`${configDir}/language.json`)) {\n      // 设置过，存在文件\n      let data = JSON.parse(fs.readFileSync(`${configDir}/language.json`, 'utf-8'));\n      if (data) {\n        if (this.langMap[data.language]) {\n          this.$i18n.locale = data.language;\n        } else {\n          // 不存在该语言，则默认为英语\n          this.$i18n.locale = 'en-us';\n        }\n      } else {\n        // 不存在文件\n        this.getNavigatorLan();\n      }\n    } else {\n      // 没设置过，不存在   取浏览器语言\n      this.getNavigatorLan();\n    }\n    this.changeTrayLang();\n    ipcRenderer.send('changeMediaLan', {lan: this.$i18n.locale});\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<template>\n  <div class=\"header-lang\">\n    <el-dropdown trigger=\"click\" @command=\"changeLang\">\n      <span class=\"el-dropdown-link\">\n         {{ langMap[$i18n.locale] }}\n        <i class=\"el-icon-arrow-down el-icon--right\"></i>\n      </span>\n      <el-dropdown-menu slot=\"dropdown\">\n        <el-dropdown-item command=\"zh-cn\">中文</el-dropdown-item>\n         <el-dropdown-item command=\"en-us\">English</el-dropdown-item>\n      </el-dropdown-menu>\n    </el-dropdown>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { langMap } from '@/map';\nimport { instance } from '@/utils/axios';\nimport fs from \"fs\";\nimport path from 'path';\nconst { remote, ipcRenderer } = require('electron');\nconst configDir = path.join(remote.app.getPath('appData'), `${process.env.VUE_APP_ID}`);\nimport bus from '@/utils/eventbus';\nimport Ws from '@/utils/ws';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      langMap\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    // 切换语言\n    changeLang(command) {\n      if (this.$i18n.locale === command) return;\n      if(/^\\/app/.test(this.$route.path)){\n        Ws.close();\n        Ws.init();\n      }\n      this.$nextTick(() => {\n        this.$i18n.locale = command;\n        instance.defaults.headers['Content-Language'] = command;\n        instance.defaults.headers['Accept-Language'] = command;\n        localStorage.lang = command;\n        this.$message({\n          type: 'success',\n          message: this.$t('personal_0075') + this.langMap[command],\n          duration: 1000\n        });\n        // 把设置的语言保存在本地\n        this.writeLangFile(command);\n        bus.$emit('refresh');\n        this.changeTrayLang();\n        ipcRenderer.send('changeMediaLan', {lan: command});\n      });\n      // this.$remote.getCurrentWebContents().reload();\n    },\n    writeLangFile(lang) {\n      let obj = {\n        \"language\": lang\n      };\n      fs.writeFileSync(`${configDir}/language.json`, JSON.stringify(obj));\n    },\n    //  取浏览器语言\n    getNavigatorLan() {\n      let lang = navigator.language || navigator.userLanguage;\n      if (lang && this.langMap[lang.toLowerCase()]) {\n        // 浏览器语言存在，且didi中有该语言\n        this.$i18n.locale = lang.toLowerCase();\n      } else {\n        // 不存在该语言，则默认为英语\n        this.$i18n.locale = 'en-us';\n      }\n    },\n    // 托盘语言\n    changeTrayLang() {\n      const ipcRenderer = require('electron').ipcRenderer;\n      ipcRenderer.send('trayLang', {\n        exit: this.$t('personal_0022'),\n        newMsg: this.$t('Universal_0364'),\n        ignoreAll: this.$t('Universal_0363')\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  async created() {\n    if (fs.existsSync(`${configDir}/language.json`)) {\n      // 设置过，存在文件\n      let data = JSON.parse(fs.readFileSync(`${configDir}/language.json`, 'utf-8'));\n      if (data) {\n        if (this.langMap[data.language]) {\n          this.$i18n.locale = data.language;\n        } else {\n          // 不存在该语言，则默认为英语\n          this.$i18n.locale = 'en-us';\n        }\n      } else {\n        // 不存在文件\n        this.getNavigatorLan();\n      }\n    } else {\n      // 没设置过，不存在   取浏览器语言\n      this.getNavigatorLan();\n    }\n    this.changeTrayLang();\n    ipcRenderer.send('changeMediaLan', {lan: this.$i18n.locale});\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.header-lang {\n  // margin: 0 20px;\n  .el-dropdown-link {\n    padding: 5px 10px;\n  }\n}\n.el-dropdown-link {\n  border: 1px solid rgba(47, 84, 235, 1);\n  border-radius: 4px;\n  cursor: pointer;\n}\n</style>\n",
    "cssJson": [
      {
        ".header-lang": {
          ".el-dropdown-link": {
            "padding": "5px 10px"
          }
        },
        ".el-dropdown-link": {
          "border": "1px solid rgba(47, 84, 235, 1)",
          "border-radius": "4px",
          "cursor": "pointer"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberIcon/ServiceIcon.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <img class=\"serviceIconClass\" :src=\"findImage(image)\" alt />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nexport default {\n  name: 'ServiceIcon',\n  props: {\n    image: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image);\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div>\n    <img class=\"serviceIconClass\" :src=\"findImage(image)\" alt />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nexport default {\n  name: 'ServiceIcon',\n  props: {\n    image: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.serviceIconClass {\n  width: 38px;\n  height: 38px;\n  border-radius: 50%;\n}\n</style>\n",
    "cssJson": [
      {
        ".serviceIconClass": {
          "width": "38px",
          "height": "38px",
          "border-radius": "50%"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/single/message/notice.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"notify\">\n    <!-- <div>{{item}}</div> -->\n    <span v-if=\"item.msgType == '14'\" class=\"notify\">{{$t('chat_0087')}}</span>\n    <span v-else-if=\"item.msgType == '44'\">{{ $t('chat_0088') }}</span>\n    <div v-if=\"item.msgType == '7' && item.fromType != '388'\" class=\"\">\n      {{$t('chat_0090')}}\n    </div>\n    <div v-if=\"item.msgType == '8'\" class=\"\">\n      {{ $t('chat_0091') }}\n    </div>\n    <div v-if=\"item.msgType == '31'\" class=\"\">\n      {{ $t('chat_0092') }}\n    </div>\n    <div v-if=\"item.msgType == '26'\" class=\"notify\">\n      <!-- <span>{{ item.fromId == currentUserId() && item.msgType == '26' ? '你' : getFriendName }}撤回了一条消息</span> -->\n      <span v-if=\"item.fromId == currentUserId() && item.msgType == '26'\">\n        {{ $t('chat_notice_0029') }}\n      </span>\n      <span v-if=\"item.fromId !== currentUserId() && item.msgType == '26'\">\n        {{ $t('chat_notice_0025', {value: getFriendName}) }}\n      </span>\n      <span v-if=\"item.msgBody.text && myUserId == item.fromId\" class=\"reEdit\" @click=\"reEdit(item)\">\n        {{ $t('Universal_0389') }}\n      </span>\n    </div>\n    <div v-if=\"item.msgType == '61'\" class=\"notify\">\n      <span v-if=\"item.fromType == '999'\">{{ $t('chat_0127') }}</span>\n    </div>\n    <div v-if=\"item.msgType == '4'\" class=\"notify\">\n      <span v-if=\"item.fromType == '202'\">你领取了用户{{ item.refMsgBody&&item.refMsgBody.fromName }}的红包</span>\n      <span v-if=\"item.fromType == '204'\">你设置了消息 {{ item.refMsgBody&&item.refMsgBody.fromName }}秒后消失</span>\n      <span v-if=\"item.fromType == '205'\">\n        {{ item.refMsgBody&&item.refMsgBody.fromName }}设置了消息{{ item.refMsgBody&&item.refMsgBody.users[0].name }}秒 后消失\n      </span>\n      <span v-if=\"item.fromType == '206'\">你取消了阅后即焚</span>\n      <span v-if=\"item.fromType == '207'\">{{ item.refMsgBody&&item.refMsgBody.fromName }}取消了阅后即焚</span>\n      <span v-if=\"item.fromType == '208'\">用户{{ item.refMsgBody&&item.refMsgBody.fromName }}撤回了自己的消息</span>\n      <span v-if=\"item.fromType == '209'\">{{ $t('chat_notice_0029') }}</span>\n      <span v-if=\"item.fromType == '210'\">{{ $t('chat_notice_0030', {value: item.refMsgBody&&item.refMsgBody.fromName}) }}</span>\n      <span v-if=\"item.fromType == '211'\">{{ $t('chat_notice_0031', {value: item.refMsgBody&&item.refMsgBody.fromName}) }} </span>\n      <span v-if=\"item.fromType == '220'\">{{ item.refMsgBody&&item.refMsgBody.fromName }}发起了红包</span>\n      <span v-if=\"item.fromType == '221'\">你收到了{{ item.refMsgBody&&item.refMsgBody.fromName }}的红包</span>\n      <span v-if=\"item.fromType == '222' || item.fromType == '212'\">{{ $t('chat_notice_0039', {value: friendName}) }}</span>\n      <span v-if=\"item.fromType == '372'\">{{getNoticeFor372}}</span>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { getSelfUserId } from '@/utils/const';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  name:\"SingleNotice\",\n  components: {},\n  inject: ['saveTimeArr372'],\n  data() {\n    //这里存放数据\n    return {\n      myUserId: localStorage.userId\n    };\n  },\n  props: {\n    item: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    getFriendName: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    refMsgBody(){\n      if(typeof this.item.refMsgBody === \"string\"){\n        return JSON.parse(this.item.refMsgBody)\n      }\n      return this.item.refMsgBody\n    },\n    getNoticeFor372(){\n      let unit = 60 * 60 * 1000;\n      let saveTimeArr372Lang=this.saveTimeArr372();\n      let obj=Object.fromEntries(saveTimeArr372Lang.map(o=>[o['value']*unit,o.label]))\n      let who=''\n      if(this.item?.fromId==localStorage.userId){\n        who= this.$i18n.locale.includes('zh')?'你':'You'\n      }else{\n        who =\n          this.item?.friendNotes ||\n          this.item?.friendFriendNotes ||\n          this.item?.fromName ||\n          this.item?.friendNickName ||\n          this.getFriendName ||\n          this.refMsgBody?.fromName ||\n          \"\";\n      }\n      let time = obj[this.refMsgBody?.time || this.item?.msgHeader?.effectiveTime];\n      if(this.$i18n.locale.includes('zh')){\n        time=time.replace(/\\s/g,'');\n      }\n      return  this.$t('chat_notice_0057', {value: who, time});\n      \n    },\n    friendName() {\n      return this.item?.refMsgBody?.users?.[0]?.userId == this.currentUserId()\n        ? this.item?.refMsgBody?.users?.[1]?.userNickName || this.item?.friendNickName\n        : this.item?.refMsgBody?.users?.[0]?.userNickName || this.item?.friendNickName;\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    currentUserId() {\n      return getSelfUserId();\n    },\n    reEdit(item) {\n      this.$emit('reEditMsg', item);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"notify\">\n    <!-- <div>{{item}}</div> -->\n    <span v-if=\"item.msgType == '14'\" class=\"notify\">{{$t('chat_0087')}}</span>\n    <span v-else-if=\"item.msgType == '44'\">{{ $t('chat_0088') }}</span>\n    <div v-if=\"item.msgType == '7' && item.fromType != '388'\" class=\"\">\n      {{$t('chat_0090')}}\n    </div>\n    <div v-if=\"item.msgType == '8'\" class=\"\">\n      {{ $t('chat_0091') }}\n    </div>\n    <div v-if=\"item.msgType == '31'\" class=\"\">\n      {{ $t('chat_0092') }}\n    </div>\n    <div v-if=\"item.msgType == '26'\" class=\"notify\">\n      <!-- <span>{{ item.fromId == currentUserId() && item.msgType == '26' ? '你' : getFriendName }}撤回了一条消息</span> -->\n      <span v-if=\"item.fromId == currentUserId() && item.msgType == '26'\">\n        {{ $t('chat_notice_0029') }}\n      </span>\n      <span v-if=\"item.fromId !== currentUserId() && item.msgType == '26'\">\n        {{ $t('chat_notice_0025', {value: getFriendName}) }}\n      </span>\n      <span v-if=\"item.msgBody.text && myUserId == item.fromId\" class=\"reEdit\" @click=\"reEdit(item)\">\n        {{ $t('Universal_0389') }}\n      </span>\n    </div>\n    <div v-if=\"item.msgType == '61'\" class=\"notify\">\n      <span v-if=\"item.fromType == '999'\">{{ $t('chat_0127') }}</span>\n    </div>\n    <div v-if=\"item.msgType == '4'\" class=\"notify\">\n      <span v-if=\"item.fromType == '202'\">你领取了用户{{ item.refMsgBody&&item.refMsgBody.fromName }}的红包</span>\n      <span v-if=\"item.fromType == '204'\">你设置了消息 {{ item.refMsgBody&&item.refMsgBody.fromName }}秒后消失</span>\n      <span v-if=\"item.fromType == '205'\">\n        {{ item.refMsgBody&&item.refMsgBody.fromName }}设置了消息{{ item.refMsgBody&&item.refMsgBody.users[0].name }}秒 后消失\n      </span>\n      <span v-if=\"item.fromType == '206'\">你取消了阅后即焚</span>\n      <span v-if=\"item.fromType == '207'\">{{ item.refMsgBody&&item.refMsgBody.fromName }}取消了阅后即焚</span>\n      <span v-if=\"item.fromType == '208'\">用户{{ item.refMsgBody&&item.refMsgBody.fromName }}撤回了自己的消息</span>\n      <span v-if=\"item.fromType == '209'\">{{ $t('chat_notice_0029') }}</span>\n      <span v-if=\"item.fromType == '210'\">{{ $t('chat_notice_0030', {value: item.refMsgBody&&item.refMsgBody.fromName}) }}</span>\n      <span v-if=\"item.fromType == '211'\">{{ $t('chat_notice_0031', {value: item.refMsgBody&&item.refMsgBody.fromName}) }} </span>\n      <span v-if=\"item.fromType == '220'\">{{ item.refMsgBody&&item.refMsgBody.fromName }}发起了红包</span>\n      <span v-if=\"item.fromType == '221'\">你收到了{{ item.refMsgBody&&item.refMsgBody.fromName }}的红包</span>\n      <span v-if=\"item.fromType == '222' || item.fromType == '212'\">{{ $t('chat_notice_0039', {value: friendName}) }}</span>\n      <span v-if=\"item.fromType == '372'\">{{getNoticeFor372}}</span>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { getSelfUserId } from '@/utils/const';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  name:\"SingleNotice\",\n  components: {},\n  inject: ['saveTimeArr372'],\n  data() {\n    //这里存放数据\n    return {\n      myUserId: localStorage.userId\n    };\n  },\n  props: {\n    item: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    getFriendName: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    refMsgBody(){\n      if(typeof this.item.refMsgBody === \"string\"){\n        return JSON.parse(this.item.refMsgBody)\n      }\n      return this.item.refMsgBody\n    },\n    getNoticeFor372(){\n      let unit = 60 * 60 * 1000;\n      let saveTimeArr372Lang=this.saveTimeArr372();\n      let obj=Object.fromEntries(saveTimeArr372Lang.map(o=>[o['value']*unit,o.label]))\n      let who=''\n      if(this.item?.fromId==localStorage.userId){\n        who= this.$i18n.locale.includes('zh')?'你':'You'\n      }else{\n        who =\n          this.item?.friendNotes ||\n          this.item?.friendFriendNotes ||\n          this.item?.fromName ||\n          this.item?.friendNickName ||\n          this.getFriendName ||\n          this.refMsgBody?.fromName ||\n          \"\";\n      }\n      let time = obj[this.refMsgBody?.time || this.item?.msgHeader?.effectiveTime];\n      if(this.$i18n.locale.includes('zh')){\n        time=time.replace(/\\s/g,'');\n      }\n      return  this.$t('chat_notice_0057', {value: who, time});\n      \n    },\n    friendName() {\n      return this.item?.refMsgBody?.users?.[0]?.userId == this.currentUserId()\n        ? this.item?.refMsgBody?.users?.[1]?.userNickName || this.item?.friendNickName\n        : this.item?.refMsgBody?.users?.[0]?.userNickName || this.item?.friendNickName;\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    currentUserId() {\n      return getSelfUserId();\n    },\n    reEdit(item) {\n      this.$emit('reEditMsg', item);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.notify {\n  text-align: center;\n  font-size: 12px;\n  color: #999;\n  margin: 10px 0;\n  white-space: pre;\n}\n</style>\n",
    "cssJson": [
      {
        ".notify": {
          "text-align": "center",
          "font-size": "12px",
          "color": "#999",
          "margin": "10px 0",
          "white-space": "pre"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/components/GroupCard.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <el-dialog\n        :visible.sync=\"groupCardVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"groupCardVisible = false\"\n      @open=\"onCardOpen\"\n      width=\"330px\"\n      custom-class=\"group-card-dialog\"\n      center\n    >\n      <div class=\"member-card\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"5\">\n            <img :src=\"findImage(groupInfo.groupAvatar)\" class=\"group-avatar\" alt=\"\" />\n          </el-col>\n          <el-col :span=\"18\">\n            <el-row :gutter=\"20\" class=\"item-spacing\">\n              <el-col :span=\"24\">\n                <div class=\"user-nick-name\">\n                  <span>{{ groupInfo.groupName }}</span>\n                </div>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\" class=\"item-spacing\">\n              <el-col :span=\"24\">\n                <div class=\"invite-code\">ID: {{ groupInfo.groupCode }}</div>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\" type=\"flex\" class=\"item-spacing\" justify=\"space-butween\">\n              <el-col :span=\"9\">\n                <img src=\"../../../../assets/images/group_card_members.png\" alt :title=\"$t('chat_comm_member_0003')\" />\n                {{ groupInfo.people }}\n              </el-col>\n              <el-col :span=\"14\">\n                <div v-if=\"groupInfo.groupStatus == 1\">\n                  <img src=\"../../../../assets/images/group_card_public.png\" alt\n                       :title=\"$t('chat_createcommunity_0008')\" />\n                  {{ $t('chat_createcommunity_0008') }}\n                </div>\n                <div v-else><img src=\"../../../../assets/images/group_card_private.png\" alt\n                                 :title=\"$t('chat_createcommunity_0009')\" />\n                 {{ $t('chat_createcommunity_0009') }}\n                </div>\n              </el-col>\n            </el-row>\n          </el-col>\n        </el-row>\n        <el-divider></el-divider>\n\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('Universal_0212') }}</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div>{{ groupInfo.region }}</div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('chat_comm_set_0002') }}</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div class=\"group-profile\" :title=\"groupInfo.groupProfile\">\n              {{ groupInfo.groupProfile }}\n            </div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" type=\"flex\" class=\"icons-area\" justify=\"end\">\n          <el-col :span=\"6\" :offset=\"6\"> </el-col>\n          <el-col :span=\"4\">\n            <img src=\"../../../../assets/images/info_transmit.png\" @click=\"transferCard\" alt\n                 :title=\"$t('Universal_0041')\" />\n          </el-col>\n          <el-col :span=\"4\" v-show=\"isGroupMember\">\n            <img src=\"../../../../assets/images/group_card_leave.png\" alt\n                 :title=\"$t('book_community_0011')\" @click=\"toGroupChat\" />\n          </el-col>\n          <el-col :span=\"4\" v-show=\"!isGroupMember\">\n            <img src=\"../../../../assets/images/info_add_friend.png\" alt\n                 :title=\"$t('chat_joincommunity_0001')\" @click=\"addToGroup\" />\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"title\"\n      :postcard=\"postcard\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n    <AddFriGrop v-if=\"addOrderVisible\" :visible.sync=\"addOrderVisible\" :inviteCode=\"groupInfo.groupCode\" index=\"1\" />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\nimport { ser_group_member } from '../member/server';\nimport { getSelfUserId } from '@/utils/const';\nimport { mapMutations } from 'vuex';\nimport { contGrpSize } from '@/utils';\nimport AddFriGrop from '@/view//add-friends-group/add';\nimport { CLEAR_CHAT } from '@/store/types';\n\nexport default {\n  name: 'GroupShare',\n  components: {\n    GroupAndInviteChat,\n    AddFriGrop\n  },\n  props: {\n    groupInfo: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      groupCardVisible: false,\n      title: this.$t('Universal_0202'),\n      GroupInviteVisible: false,\n      postcard: true,\n      isGroupMember: false,\n      addOrderVisible: false\n    };\n  },\n  computed: {\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 6;\n      } else {\n        return 14;\n      }\n    },\n    valueWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 18;\n      } else {\n        return 10;\n      }\n    }\n  },\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    onPop() {\n      this.groupCardVisible = true;\n    },\n    onClose() {\n      this.groupCardVisible = false;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    confirmDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    cancelDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    async transferCard() {\n      if(this.$store.state.common.personalAppealInfo.endTime){\n        let time = `${this.$store.state.common.personalAppealInfo.createTime}\n        --${this.$store.state.common.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}),\n          this.$t('Universal_0059'),{\n            confirmButtonText: this.$t('appeal_0017'),\n            cancelButtonText: this.$t('book_group_0019'),\n            center: true,\n            showClose: false,\n          }).then(() => {\n          this.$emit('toAppeal');\n        }).catch(() => {\n        });\n        return;\n      }\n      this.GroupInviteVisible = true;\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.getCardItem()]);\n    },\n    getCardItem() {\n      return {\n        code: this.groupInfo.groupCode,\n        name: this.groupInfo.groupName,\n        msgUrl: this.groupInfo.groupAvatar,\n        id: this.groupInfo.id,\n        type: '2',\n        originTypePsw: true\n      };\n    },\n    async onCardOpen() {\n      let res = await ser_group_member({\n        gId: this.groupInfo.id\n      });\n      if (res.code == '200') {\n        let result = res.data.filter(item => item.userId == getSelfUserId());\n        this.isGroupMember = result.length > 0;\n      }\n    },\n    toGroupChat() {\n      this.groupCardVisible = false;\n      this.CLEAR_CHAT();\n      let current = {\n        targetId: this.groupInfo.id,\n        id: this.groupInfo.id,\n        uniqueCode: contGrpSize(this.groupInfo.id),\n        sessionName: this.groupInfo.groupName,\n        sessionIcon: this.groupInfo.groupAvatar,\n        fromName: this.$store.state.common.userInfo.nickName,\n        targetType: 2, //单聊\n        msgType: 1, //默认文本\n        fromType: '999',\n        groupType: 1\n      };\n      this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          id: this.groupInfo.id,\n          targetId: this.groupInfo.id,\n          timer: new Date().getTime(),\n          friendName: encodeURI(this.groupInfo.groupName),\n          uniqueCode: contGrpSize(this.groupInfo.id),\n          groupType: 1\n        }\n      });\n    },\n    addToGroup() {\n      this.groupCardVisible = false;\n      this.addOrderVisible = true;\n    },\n    transferSuccess() {\n      this.$parent.transferSuccess();\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div>\n    <el-dialog\n        :visible.sync=\"groupCardVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"groupCardVisible = false\"\n      @open=\"onCardOpen\"\n      width=\"330px\"\n      custom-class=\"group-card-dialog\"\n      center\n    >\n      <div class=\"member-card\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"5\">\n            <img :src=\"findImage(groupInfo.groupAvatar)\" class=\"group-avatar\" alt=\"\" />\n          </el-col>\n          <el-col :span=\"18\">\n            <el-row :gutter=\"20\" class=\"item-spacing\">\n              <el-col :span=\"24\">\n                <div class=\"user-nick-name\">\n                  <span>{{ groupInfo.groupName }}</span>\n                </div>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\" class=\"item-spacing\">\n              <el-col :span=\"24\">\n                <div class=\"invite-code\">ID: {{ groupInfo.groupCode }}</div>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\" type=\"flex\" class=\"item-spacing\" justify=\"space-butween\">\n              <el-col :span=\"9\">\n                <img src=\"../../../../assets/images/group_card_members.png\" alt :title=\"$t('chat_comm_member_0003')\" />\n                {{ groupInfo.people }}\n              </el-col>\n              <el-col :span=\"14\">\n                <div v-if=\"groupInfo.groupStatus == 1\">\n                  <img src=\"../../../../assets/images/group_card_public.png\" alt\n                       :title=\"$t('chat_createcommunity_0008')\" />\n                  {{ $t('chat_createcommunity_0008') }}\n                </div>\n                <div v-else><img src=\"../../../../assets/images/group_card_private.png\" alt\n                                 :title=\"$t('chat_createcommunity_0009')\" />\n                 {{ $t('chat_createcommunity_0009') }}\n                </div>\n              </el-col>\n            </el-row>\n          </el-col>\n        </el-row>\n        <el-divider></el-divider>\n\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('Universal_0212') }}</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div>{{ groupInfo.region }}</div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"info-area item-spacing\">\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('chat_comm_set_0002') }}</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div class=\"group-profile\" :title=\"groupInfo.groupProfile\">\n              {{ groupInfo.groupProfile }}\n            </div>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" type=\"flex\" class=\"icons-area\" justify=\"end\">\n          <el-col :span=\"6\" :offset=\"6\"> </el-col>\n          <el-col :span=\"4\">\n            <img src=\"../../../../assets/images/info_transmit.png\" @click=\"transferCard\" alt\n                 :title=\"$t('Universal_0041')\" />\n          </el-col>\n          <el-col :span=\"4\" v-show=\"isGroupMember\">\n            <img src=\"../../../../assets/images/group_card_leave.png\" alt\n                 :title=\"$t('book_community_0011')\" @click=\"toGroupChat\" />\n          </el-col>\n          <el-col :span=\"4\" v-show=\"!isGroupMember\">\n            <img src=\"../../../../assets/images/info_add_friend.png\" alt\n                 :title=\"$t('chat_joincommunity_0001')\" @click=\"addToGroup\" />\n          </el-col>\n        </el-row>\n      </div>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"title\"\n      :postcard=\"postcard\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n    <AddFriGrop v-if=\"addOrderVisible\" :visible.sync=\"addOrderVisible\" :inviteCode=\"groupInfo.groupCode\" index=\"1\" />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\nimport { ser_group_member } from '../member/server';\nimport { getSelfUserId } from '@/utils/const';\nimport { mapMutations } from 'vuex';\nimport { contGrpSize } from '@/utils';\nimport AddFriGrop from '@/view//add-friends-group/add';\nimport { CLEAR_CHAT } from '@/store/types';\n\nexport default {\n  name: 'GroupShare',\n  components: {\n    GroupAndInviteChat,\n    AddFriGrop\n  },\n  props: {\n    groupInfo: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      groupCardVisible: false,\n      title: this.$t('Universal_0202'),\n      GroupInviteVisible: false,\n      postcard: true,\n      isGroupMember: false,\n      addOrderVisible: false\n    };\n  },\n  computed: {\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 6;\n      } else {\n        return 14;\n      }\n    },\n    valueWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 18;\n      } else {\n        return 10;\n      }\n    }\n  },\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    onPop() {\n      this.groupCardVisible = true;\n    },\n    onClose() {\n      this.groupCardVisible = false;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    confirmDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    cancelDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    async transferCard() {\n      if(this.$store.state.common.personalAppealInfo.endTime){\n        let time = `${this.$store.state.common.personalAppealInfo.createTime}\n        --${this.$store.state.common.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}),\n          this.$t('Universal_0059'),{\n            confirmButtonText: this.$t('appeal_0017'),\n            cancelButtonText: this.$t('book_group_0019'),\n            center: true,\n            showClose: false,\n          }).then(() => {\n          this.$emit('toAppeal');\n        }).catch(() => {\n        });\n        return;\n      }\n      this.GroupInviteVisible = true;\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.getCardItem()]);\n    },\n    getCardItem() {\n      return {\n        code: this.groupInfo.groupCode,\n        name: this.groupInfo.groupName,\n        msgUrl: this.groupInfo.groupAvatar,\n        id: this.groupInfo.id,\n        type: '2',\n        originTypePsw: true\n      };\n    },\n    async onCardOpen() {\n      let res = await ser_group_member({\n        gId: this.groupInfo.id\n      });\n      if (res.code == '200') {\n        let result = res.data.filter(item => item.userId == getSelfUserId());\n        this.isGroupMember = result.length > 0;\n      }\n    },\n    toGroupChat() {\n      this.groupCardVisible = false;\n      this.CLEAR_CHAT();\n      let current = {\n        targetId: this.groupInfo.id,\n        id: this.groupInfo.id,\n        uniqueCode: contGrpSize(this.groupInfo.id),\n        sessionName: this.groupInfo.groupName,\n        sessionIcon: this.groupInfo.groupAvatar,\n        fromName: this.$store.state.common.userInfo.nickName,\n        targetType: 2, //单聊\n        msgType: 1, //默认文本\n        fromType: '999',\n        groupType: 1\n      };\n      this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          id: this.groupInfo.id,\n          targetId: this.groupInfo.id,\n          timer: new Date().getTime(),\n          friendName: encodeURI(this.groupInfo.groupName),\n          uniqueCode: contGrpSize(this.groupInfo.id),\n          groupType: 1\n        }\n      });\n    },\n    addToGroup() {\n      this.groupCardVisible = false;\n      this.addOrderVisible = true;\n    },\n    transferSuccess() {\n      this.$parent.transferSuccess();\n    }\n  }\n};\n</script>\n\n<style>\n.group-card-dialog {\n  border-radius: 5px;\n}\n\n.group-card-dialog .el-dialog__header {\n  padding: 5px;\n}\n\n.group-card-dialog .el-dialog__header button {\n  margin-top: -8px;\n  margin-right: -8px;\n}\n\n.group-card-dialog .el-dialog__body {\n  padding: 10px;\n}\n\n.group-card-dialog .el-divider {\n  margin-bottom: 30px;\n}\n</style>\n\n<style scoped>\n.member-card {\n  padding: 10px 15px;\n  color: #333333;\n  font-size: 12px;\n\n  font-weight: 400;\n  user-select: text;\n}\n\n.item-spacing {\n  margin-bottom: 10px;\n}\n\n.item-spacing img {\n  margin-bottom: -3px;\n}\n\n.info-area span {\n  width: 100%;\n  display: inline-block;\n  text-align: right;\n  color: #999999;\n}\n\n.user-nick-name {\n  font-size: 16px;\n  font-weight: bold;\n  width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.user-nick-name span {\n  user-select: text;\n}\n\n.gender {\n  float: right;\n  margin-top: -20px;\n}\n\n.invite-code {\n  font-size: 12px;\n  color: #999999;\n  user-select: text;\n}\n\n.icons-area {\n  margin-top: 30px;\n}\n\n.member-card img {\n  width: 18px;\n  height: 18px;\n}\n.icons-area img {\n  width: 22px;\n  height: 22px;\n}\n.gender img {\n  width: 24px;\n  height: 24px;\n}\n\n.member-card .group-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n}\n.group-profile {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n}\n</style>\n",
    "cssJson": [
      {
        ".group-card-dialog": {
          "border-radius": "5px"
        },
        ".group-card-dialog .el-dialog__header": {
          "padding": "5px"
        },
        ".group-card-dialog .el-dialog__header button": {
          "margin-top": "-8px",
          "margin-right": "-8px"
        },
        ".group-card-dialog .el-dialog__body": {
          "padding": "10px"
        },
        ".group-card-dialog .el-divider": {
          "margin-bottom": "30px"
        }
      },
      {
        ".member-card": {
          "padding": "10px 15px",
          "color": "#333333",
          "font-size": "12px",
          "font-weight": "400",
          "user-select": "text"
        },
        ".item-spacing": {
          "margin-bottom": "10px"
        },
        ".item-spacing img": {
          "margin-bottom": "-3px"
        },
        ".info-area span": {
          "width": "100%",
          "display": "inline-block",
          "text-align": "right",
          "color": "#999999"
        },
        ".user-nick-name": {
          "font-size": "16px",
          "font-weight": "bold",
          "width": "200px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "nowrap"
        },
        ".user-nick-name span": {
          "user-select": "text"
        },
        ".gender": {
          "float": "right",
          "margin-top": "-20px"
        },
        ".invite-code": {
          "font-size": "12px",
          "color": "#999999",
          "user-select": "text"
        },
        ".icons-area": {
          "margin-top": "30px"
        },
        ".member-card img": {
          "width": "18px",
          "height": "18px"
        },
        ".icons-area img": {
          "width": "22px",
          "height": "22px"
        },
        ".gender img": {
          "width": "24px",
          "height": "24px"
        },
        ".member-card .group-avatar": {
          "width": "48px",
          "height": "48px",
          "border-radius": "50%"
        },
        ".group-profile": {
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "display": "-webkit-box",
          "-webkit-line-clamp": "3",
          "-webkit-box-orient": "vertical"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/discussion/member/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\">",
      "1": "<style lang=\"less\" scoped>",
      "2": "<style lang=\"less\">"
    },
    "importInfo": {},
    "keepContent": "<!-- 群成员 -->\n<template>\n  <el-row v-loading=\"loading\" element-loading-spinner=\"el-icon-loading\" :element-loading-text=\"$t('Universal_0025')\">\n    <el-col :span=\"24\" class=\"gruop-members-wrap flex flex-direction\">\n    <div class=\"title\">\n      {{ memberSelect[0].label }}\n      <i class=\"el-icon-close close-i\" @click=\"handleClose\"></i>\n    </div>\n    <div class=\"serach\">\n      <el-input\n        class=\"serach-input\"\n        @input=\"search\"\n        v-model=\"SeachInput\"\n        :placeholder=\"$t('Universal_0058')\"\n        prefix-icon=\"el-icon-search\"\n        clearable\n        id='dissSearch'\n        :code=\"groupSystemAbleMem\"\n      ></el-input>\n      <img @click=\"inviteMemHand\" class=\"invite-mem\" src=\"../../../../assets/images/invite.png\" alt />\n    </div>\n    <div class=\"gruop-members-con flex-sub flex-direction flex\">\n      <ul class=\"gruop-members-list\" id=\"scrollBox\">\n        <li\n          v-for=\"(item, index) in items\"\n          :key=\"item.userId\"\n          @contextmenu.prevent=\"rightClick($event, item)\"\n          @mouseover=\"onMouseover(index)\"\n          :id=\"item.inviteCode\"\n          :class=\"{ active: index === currentIndex ,active2:index == indexAt}\"\n        >\n          <div :id=\"'popoverShow' + item.userId\" class=\"gruop-members-name\" @click=\"lookCard(item.userId)\">\n            <MemberIcon\n              :image=\"item.userHeadImg || item.friendHeadImg\"\n              :auth-status=\"'' + item.authStatus\"\n              :userRank=\"item.userRank\"\n              :vipType=\"item.vipType\"\n            />\n          </div>\n          <div style=\"width:125px\">\n            <div class=\"flex flex-direction name-notes-id group-members-name\">\n              <div class=\"name-wrap\" :title=\"item.groupMemberName\">\n                <span>{{ item.groupMemberName }}</span>\n              </div>\n              <LevelIcon\n                :inviteCode=\"item.inviteCode\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n              />\n              <!-- <div\n                class=\"name-wrap\"\n                v-show=\"item.showNickName && SeachInput\"\n                :title=\"item.nickName\"\n              >\n                <span>{{ item.nickName }}222</span>\n              </div> -->\n            </div>\n            <div style=\"padding-top: 2px\">\n              <LuckIdIcon\n                :inviteCode=\"item.inviteCode\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n                :listFlag=\"false\"\n              />\n            </div>\n          </div>\n          <div class=\"gruop-members-manster\">\n            <img src=\"../../../../assets/images/nowords.png\" alt class=\"tips img_16\"\n                 v-if=\"item.authStatus == 3 && item.forbiddenWordsStatus == 1\"/>\n          </div>\n          <!-- <div style=\"padding-top: 20px\">\n            <LevelIcon\n              :inviteCode=\"item.inviteCode\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n            />\n          </div> -->\n        </li>\n        <div v-show=\"(!items.length > 0 && !loading)\" class=\"no-results\">\n          <img src=\"../../../../assets/images/web.png\" class=\"img_search\" />\n          <p>{{ $t('Universal_0173') }}</p>\n        </div>\n      </ul>\n    </div>\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardDialogUserId\"\n      :groupId=\"groupId\"\n      ref=\"cardOther\"\n      @handleclosecard=\"handleclosecard\"\n    ></member-card-other>\n    </el-col>\n  </el-row>  \n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport store from '@/store';\nimport RightRule from './rightRule';\nimport MemberCardOther from '@/components/memberCard/MemberCardOther';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport { remote } from 'electron';\nimport fileOperational from '@/services/fileOperational';\nimport { update_person_info, removeGroupMember } from './server';\nimport { convertToPinyin } from '@/utils/pinyin';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport { getSelfUserId } from '@/utils/const';\nexport default {\n  name:\"Member\",\n  components: {\n    MemberCardOther,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  data() {\n    return {\n      arr: [],\n      dialogVisible: false,\n      diaTitle: this.$t('chat_comm_invite_0001'),\n      // groupId: sessionStorage.getItem('groupId'),\n      userId: this.currentUserId(),\n      allMemb: 1,\n      myStatus: 1,\n      SeachInput: '',\n      changeValueV: {},\n      popoverVisible: false,\n      remarkVisible: true,\n      items: [],\n      getMember: 1,\n      memberSelect: [\n        {\n          value: '0',\n          label: ''\n        },\n        {\n          value: '1',\n          label: ''\n        }\n      ],\n      AllMember: '',\n      forbiddenMemb: [],\n      dataMemb: [],\n      cardDialogVisible: false,\n      cardDialogUserId: '',\n      members: [],\n      currentIndex: 0,\n      currentItem:{},\n      indexAt:0,\n      loading: false,\n    };\n  },\n  props: {\n    dialogMember: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    groupSystemAbleMem: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    groupId: {\n      type: String,\n      required: true\n    },\n    maxPeople: {\n      type: Number,\n      required: true\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '3';\n      }\n    },\n    memberSingleChatStatus: {\n      type: String,\n      default() {\n        return '0';\n      }\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    async handleclosecard() {\n      this.cardDialogVisible = false;\n      await this.restoreMemberNotes(this.cardDialogUserId);\n    },\n    transferSuccess() {\n      this.cardDialogVisible = false;\n    },\n    onMouseover(index) {\n      this.currentIndex = index;\n    },\n    async lookCard(id) {\n      if (this.memberSingleChatStatus == 0 && this.authStatus == 3) {\n        return;\n      }\n      this.cardDialogVisible = true;\n      this.cardDialogUserId = id;\n      this.$nextTick(() => {\n        this.$refs.cardOther.onCardShow();\n      });\n    },\n    // 禁言\n    async forbidden(item, num) {\n      const params = {\n        groupId: this.groupId,\n        userId: item.userId,\n        forbiddenWordsStatus: num\n      };\n      let res = await update_person_info(params);\n      if (res.code == 200) {\n        this.$message.success(res.msg);\n        console.log('禁言 ========= ', num, params);\n        await SQLUtils.updateGroupsMemberForbiddenWordsStatus(params);\n        this.init();\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    // 移出群聊\n    async getOut(item) {\n      this.$confirm(this.$t('book_group_0015', {member: item.groupMemberName}), this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('Universal_0062'),\n        cancelButtonText: this.$t('Universal_0063'),\n        type: 'warning',\n        customClass: 'pre-dialog'\n      })\n        .then(async () => {\n          let res = await removeGroupMember({\n            gId: this.groupId,\n            beQuitUserId: item.userId\n          });\n          if (res.code == '200') {\n            this.$message.success(res.msg);\n            await SQLUtils.deleteGroupsMemberById(this.groupId, item.userId);\n            //await SQLUtils.deleteGroupsPeople(this.groupId);\n            this.init();\n            this.$emit('searchGroupMembersAndInfo');\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        })\n        .catch(() => {});\n    },\n    removeMemberFromList(memberId) {\n      this.items = this.items.filter(item => item.id != memberId);\n    },\n    //触发子组内部\n    onCardShow() {\n      // this.$nextTick(v=>{\n      //   this.$refs.CardFun[0].onCardShow()\n      // })\n      //this.$refs.CardFun.zz\n    },\n    //搜索\n    search() {\n      this.indexAt = 0;\n      if (!this.SeachInput) {\n        this.changeSec(0);\n        this.$forceUpdate();\n      } else {\n        let keyword = this.SeachInput.toLowerCase();\n        console.log('keyword', keyword);\n        this.items = this.arr.filter(item => {\n          return (\n            item.nickName.toLowerCase().indexOf(keyword) > -1 ||\n            item.nickName_pinyin.toLowerCase().indexOf(keyword) > -1 ||\n            item.friendNotes.toLowerCase().indexOf(keyword) > -1 ||\n            item.friendNotes_pinyin.toLowerCase().indexOf(keyword) > -1\n          );\n        });\n        this.needShowNickName();\n      }\n      this.currentIndex = 0;\n      this.chooseSearch();\n    },\n    chooseSearch(){\n      this.indexAt = 0;\n      document.removeEventListener('keydown', this.keyMove2)\n      document.getElementById('scrollBox').scrollTop = 0\n      document.addEventListener('keydown',this.keyMove2)\n    },\n    move(){\n      if( document.getElementById('scrollBox')){\n        console.log(document.getElementById('scrollBox').offsetTop,'位移')\n        document.getElementById('scrollBox').scrollTop = document.getElementsByClassName('active2')[0].offsetTop-200\n      }\n    },\n    keyMove2(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n          console.log(this.indexAt,'--')\n        }else{\n          this.indexAt = 0;\n        }\n        this.move()\n      }else if(e.keyCode == 40){ //下键\n        console.log(this.indexAt,'down2222')\n        if(this.indexAt < (this.items.length-1)){\n          this.indexAt++;\n          console.log(this.indexAt,'++')\n        }else if(this.indexAt == this.items.length){\n          this.indexAt = this.indexAt-1 ;\n          console.log(this.indexAt,'-1后')\n        }\n        this.move()\n      }\n      else if(e.keyCode == 13){\n        console.log(document.getElementsByClassName('active2')[0],'wswwwww')\n        let currentId=''\n        if(document.getElementsByClassName('active2')[0]){\n          currentId = document.getElementsByClassName('active2')[0].getAttribute(\"id\")\n        }\n        this.currentItem = this.items.filter((item) => {\n          return item.inviteCode == currentId\n        })\n        console.log(this.currentItem,'currentItem','展示名片')\n        this.lookCard(this.currentItem[0].userId)\n      }\n      \n    },\n    needShowNickName() {\n      if (this.SeachInput) {\n        let key = this.SeachInput.toLowerCase();\n        this.items.map(item => {\n          item.showNickName = false;\n          if (item.nickName.toLowerCase().indexOf(key) != -1 || item.nickName_pinyin.toLowerCase().indexOf(key) != -1) {\n            if (item.groupMemberName.indexOf(item.nickName) < 0) {\n              item.showNickName = true;\n            }\n          }\n        });\n      }\n      this.items.sort((a, b) => {\n        return a.nickName_pinyin.localeCompare(b.nickName_pinyin);\n      });\n    },\n    // 举报\n    tipOff(id) {\n      this.$router.push({\n        path: '/app/chat/tipoffs',\n        query: {\n          impeachType: 1,\n          othersId: id\n        }\n      });\n    },\n    handleClose() {\n      this.items = [];\n      this.SeachInput = '';\n      this.$emit('closeDialog');\n    },\n    rightClick(e, item) {\n      this.changeValueV = item;\n      if (this.myStatus == 3) {\n        e.preventDefault();\n        return;\n      } else {\n        e.preventDefault();\n        this.addClick();\n      }\n    },\n    addClick() {\n      const menu = RightRule(this.myStatus, this.changeValueV, this);\n      // if (menu.length == 0) {\n      //   return;\n      // }\n      return this.$RightClick(menu).popup({\n        window: remote.getCurrentWindow()\n      });\n    },\n    confirmDialogHand() {},\n    cancelDialogHand() {\n      this.dialogVisible = false;\n      this.init();\n    },\n    inviteMemHand() {\n      this.SeachInput='';\n      this.changeSec(0);\n      // 邀请成员\n      //this.$refs.groupInvite.groupfriendlist();\n      this.$emit('ShowGroupInvite');\n    },\n    async setMagHand(obj, num) {\n      let message = this.$t('chat_comm_manage_0030', {member: obj.groupMemberName});\n      if (num == 3) {\n        message = this.$t('chat_comm_manage_0031', {member: obj.groupMemberName});\n      }\n      this.$confirm(message, this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('Universal_0062'),\n        cancelButtonText: this.$t('Universal_0063'),\n        type: 'warning'\n      })\n        .then(async () => {\n          let res = await update_person_info({\n            authStatus: num,\n            groupId: this.groupId,\n            userId: obj.userId\n          });\n          if (res.code == 200) {\n            this.$message.success(res.msg);\n            await window.vm\n              .$knex('t_groups_member')\n              .where('id', '=', obj.userId)\n              .where('group_id', '=', this.groupId)\n              .update({ auth_status: num });\n            this.init();\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        })\n        .catch(() => {});\n    },\n    changeGroupName(arr) {\n      return arr.map(a => {\n        a = {\n          additionalStatus: a.additionalStatus,\n          authStatus: a.auth_status,\n          forbiddenWordsStatus: a.forbiddenWordsStatus,\n          friendNotes: a.friend_friendNotes || '',\n          friendNotes_pinyin: a.friend_friendNotes_pinyin || '',\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name || '',\n          friendNickNamePinyin: a.friend_nick_name_pinyin || '',\n          groupId: a.group_id,\n          groupMemberName: this.authStatus == '3' ? a.group_member_friend_name : a.group_member_name,\n          id: a.id,\n          userId: a.userId,\n          is_show: a.is_show,\n          memberNotes: a?.member_notes || '',\n          memberNotes_pinyin: a.member_notes_pinyin || '',\n          muteNotifications: a.muteNotifications,\n          mutedStatus: a.mutedStatus,\n          nickName: a.nick_name,\n          nickName_pinyin: convertToPinyin(a.nick_name),\n          stickyStatus: a.stickyStatus,\n          userHeadImg: a.user_head_img,\n          inviteCode: a.inviteCode,\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank,\n          joinTime: Date.now(a.joinTime)\n        };\n        if (a.forbiddenWordsStatus == 1 && a.authStatus == 3) {\n          this.forbiddenMemb.push(a);\n        }\n        if (a.id == this.userId) {\n          this.myStatus = a.authStatus;\n        }\n        return a;\n      });\n    },\n    async getList() {\n      await store.dispatch('GET_MEM_LIST', this.groupId);\n      this.members = store.state.search.membList.filter(item => item.is_show == 'true');\n      this.arr = this.changeGroupName(this.members);\n\n      this.allMemb = this.arr.length;\n      this.memberSelect[0].label = `${this.$t('chat_comm_set_0023')}(${this.allMemb}/${this.maxPeople ? this.maxPeople : '20'})`;\n      this.AllMember = this.memberSelect[0].label;\n\n      this.dataMemb[0] = this.arr;\n      this.items = this.arr;\n      // console.log('this.items ======= ',this.items);\n      this.currentIndex = 0;\n      this.$emit('updatePeopleInGroup', this.items.length);\n      this.$forceUpdate();\n    },\n    async restoreMemberNotes(memberUserId) {\n      if (memberUserId) {\n        const memberItem = {\n          fromId: memberUserId,\n          targetId: this.groupId\n        };\n        const groupMemberItem = await SQLUtils.findGroupMemberName(memberItem);\n        await store.dispatch('GET_MEM_LIST', this.groupId);\n        this.members = await store.state.search.membList;\n        this.items.map(item => {\n          if (item.id == memberUserId) {\n            item.nickName_pinyin = convertToPinyin(groupMemberItem.nickName);\n            item.friendNotes = groupMemberItem.friendFriendNotes || '';\n            item.friendNotes_pinyin = convertToPinyin(item.friendNotes);\n            item.memberNotes = groupMemberItem.memberNotes || '';\n            item.memberNotes_pinyin = convertToPinyin(item.memberNotes);\n            item.groupMemberName = this.memberName(item);\n            item.vipType = groupMemberItem.vipType;\n            item.inviteCodeType = groupMemberItem.inviteCodeType;\n            item.userRank = groupMemberItem.userRank;\n            item.inviteCode = groupMemberItem.inviteCode;\n          }\n        });\n        this.$forceUpdate();\n      }\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    memberFriendNotes(item) {\n      let userInfo = this.members.find(m => m.id == item.userId);\n      if (userInfo && userInfo.friend_friendNotes) {\n        return userInfo.friend_friendNotes ? userInfo.friend_friendNotes : '';\n      }\n      return '';\n    },\n    memberName(item) {\n      return item.friendNotes || item.nickName;\n      // let memberNotes = item.memberNotes ? '['.concat(item.memberNotes).concat(']') : '';\n      // let friendNotes = item.friendNotes || '';\n      // let nickName = item.nickName;\n      // let names = [\n      //   memberNotes.concat(friendNotes),\n      //   memberNotes.concat(nickName),\n      //   friendNotes,\n      //   nickName\n      // ];\n      // if (this.authStatus != 3) {\n      //   if (friendNotes) {\n      //     return names[0];\n      //   } else {\n      //     return names[1];\n      //   }\n      // } else {\n      //   if (friendNotes) {\n      //     return names[2];\n      //   } else {\n      //     return names[3];\n      //   }\n      // }\n    },\n    async init() {\n      // this.items = [];\n      // this.dataMemb = [];\n      // this.forbiddenMemb = [];\n      // this.AllMember = '';\n      // this.SeachInput = '';\n      this.SeachInput = '';\n      await this.getList();\n      this.loading = false\n    },\n    changeSec(val) {\n      this.SeachInput = '';\n      this.arr = this.dataMemb[val];\n      this.items = this.dataMemb[val];\n      this.currentIndex = 0;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    async onMemberOpen() {\n      // this.items = [];\n      // this.dataMemb = [];\n      // this.forbiddenMemb = [];\n      // this.AllMember = '';\n      // this.SeachInput = '';\n      this.loading = true\n      await this.init();\n    },\n    onMemberClose() {\n      this.items = [];\n      this.dataMemb = [];\n      this.forbiddenMemb = [];\n      this.AllMember = '';\n      this.SeachInput = '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.onMemberOpen()\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  destroyed() {}, //生命周期 - 销毁完成\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.keyMove2)\n  }, //生命周期 - 销毁之前\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "\n<!-- 群成员 -->\n<template>\n  <el-row v-loading=\"loading\" element-loading-spinner=\"el-icon-loading\" :element-loading-text=\"$t('Universal_0025')\">\n    <el-col :span=\"24\" class=\"gruop-members-wrap flex flex-direction\">\n    <div class=\"title\">\n      {{ memberSelect[0].label }}\n      <i class=\"el-icon-close close-i\" @click=\"handleClose\"></i>\n    </div>\n    <div class=\"serach\">\n      <el-input\n        class=\"serach-input\"\n        @input=\"search\"\n        v-model=\"SeachInput\"\n        :placeholder=\"$t('Universal_0058')\"\n        prefix-icon=\"el-icon-search\"\n        clearable\n        id='dissSearch'\n        :code=\"groupSystemAbleMem\"\n      ></el-input>\n      <img @click=\"inviteMemHand\" class=\"invite-mem\" src=\"../../../../assets/images/invite.png\" alt />\n    </div>\n    <div class=\"gruop-members-con flex-sub flex-direction flex\">\n      <ul class=\"gruop-members-list\" id=\"scrollBox\">\n        <li\n          v-for=\"(item, index) in items\"\n          :key=\"item.userId\"\n          @contextmenu.prevent=\"rightClick($event, item)\"\n          @mouseover=\"onMouseover(index)\"\n          :id=\"item.inviteCode\"\n          :class=\"{ active: index === currentIndex ,active2:index == indexAt}\"\n        >\n          <div :id=\"'popoverShow' + item.userId\" class=\"gruop-members-name\" @click=\"lookCard(item.userId)\">\n            <MemberIcon\n              :image=\"item.userHeadImg || item.friendHeadImg\"\n              :auth-status=\"'' + item.authStatus\"\n              :userRank=\"item.userRank\"\n              :vipType=\"item.vipType\"\n            />\n          </div>\n          <div style=\"width:125px\">\n            <div class=\"flex flex-direction name-notes-id group-members-name\">\n              <div class=\"name-wrap\" :title=\"item.groupMemberName\">\n                <span>{{ item.groupMemberName }}</span>\n              </div>\n              <LevelIcon\n                :inviteCode=\"item.inviteCode\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n              />\n              <!-- <div\n                class=\"name-wrap\"\n                v-show=\"item.showNickName && SeachInput\"\n                :title=\"item.nickName\"\n              >\n                <span>{{ item.nickName }}222</span>\n              </div> -->\n            </div>\n            <div style=\"padding-top: 2px\">\n              <LuckIdIcon\n                :inviteCode=\"item.inviteCode\"\n                :userRank=\"item.userRank\"\n                iconType=\"medium\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n                :listFlag=\"false\"\n              />\n            </div>\n          </div>\n          <div class=\"gruop-members-manster\">\n            <img src=\"../../../../assets/images/nowords.png\" alt class=\"tips img_16\"\n                 v-if=\"item.authStatus == 3 && item.forbiddenWordsStatus == 1\"/>\n          </div>\n          <!-- <div style=\"padding-top: 20px\">\n            <LevelIcon\n              :inviteCode=\"item.inviteCode\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n            />\n          </div> -->\n        </li>\n        <div v-show=\"(!items.length > 0 && !loading)\" class=\"no-results\">\n          <img src=\"../../../../assets/images/web.png\" class=\"img_search\" />\n          <p>{{ $t('Universal_0173') }}</p>\n        </div>\n      </ul>\n    </div>\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardDialogUserId\"\n      :groupId=\"groupId\"\n      ref=\"cardOther\"\n      @handleclosecard=\"handleclosecard\"\n    ></member-card-other>\n    </el-col>\n  </el-row>  \n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport store from '@/store';\nimport RightRule from './rightRule';\nimport MemberCardOther from '@/components/memberCard/MemberCardOther';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport { remote } from 'electron';\nimport fileOperational from '@/services/fileOperational';\nimport { update_person_info, removeGroupMember } from './server';\nimport { convertToPinyin } from '@/utils/pinyin';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport { getSelfUserId } from '@/utils/const';\nexport default {\n  name:\"Member\",\n  components: {\n    MemberCardOther,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  data() {\n    return {\n      arr: [],\n      dialogVisible: false,\n      diaTitle: this.$t('chat_comm_invite_0001'),\n      // groupId: sessionStorage.getItem('groupId'),\n      userId: this.currentUserId(),\n      allMemb: 1,\n      myStatus: 1,\n      SeachInput: '',\n      changeValueV: {},\n      popoverVisible: false,\n      remarkVisible: true,\n      items: [],\n      getMember: 1,\n      memberSelect: [\n        {\n          value: '0',\n          label: ''\n        },\n        {\n          value: '1',\n          label: ''\n        }\n      ],\n      AllMember: '',\n      forbiddenMemb: [],\n      dataMemb: [],\n      cardDialogVisible: false,\n      cardDialogUserId: '',\n      members: [],\n      currentIndex: 0,\n      currentItem:{},\n      indexAt:0,\n      loading: false,\n    };\n  },\n  props: {\n    dialogMember: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    groupSystemAbleMem: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    groupId: {\n      type: String,\n      required: true\n    },\n    maxPeople: {\n      type: Number,\n      required: true\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return '3';\n      }\n    },\n    memberSingleChatStatus: {\n      type: String,\n      default() {\n        return '0';\n      }\n    }\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    async handleclosecard() {\n      this.cardDialogVisible = false;\n      await this.restoreMemberNotes(this.cardDialogUserId);\n    },\n    transferSuccess() {\n      this.cardDialogVisible = false;\n    },\n    onMouseover(index) {\n      this.currentIndex = index;\n    },\n    async lookCard(id) {\n      if (this.memberSingleChatStatus == 0 && this.authStatus == 3) {\n        return;\n      }\n      this.cardDialogVisible = true;\n      this.cardDialogUserId = id;\n      this.$nextTick(() => {\n        this.$refs.cardOther.onCardShow();\n      });\n    },\n    // 禁言\n    async forbidden(item, num) {\n      const params = {\n        groupId: this.groupId,\n        userId: item.userId,\n        forbiddenWordsStatus: num\n      };\n      let res = await update_person_info(params);\n      if (res.code == 200) {\n        this.$message.success(res.msg);\n        console.log('禁言 ========= ', num, params);\n        await SQLUtils.updateGroupsMemberForbiddenWordsStatus(params);\n        this.init();\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    // 移出群聊\n    async getOut(item) {\n      this.$confirm(this.$t('book_group_0015', {member: item.groupMemberName}), this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('Universal_0062'),\n        cancelButtonText: this.$t('Universal_0063'),\n        type: 'warning',\n        customClass: 'pre-dialog'\n      })\n        .then(async () => {\n          let res = await removeGroupMember({\n            gId: this.groupId,\n            beQuitUserId: item.userId\n          });\n          if (res.code == '200') {\n            this.$message.success(res.msg);\n            await SQLUtils.deleteGroupsMemberById(this.groupId, item.userId);\n            //await SQLUtils.deleteGroupsPeople(this.groupId);\n            this.init();\n            this.$emit('searchGroupMembersAndInfo');\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        })\n        .catch(() => {});\n    },\n    removeMemberFromList(memberId) {\n      this.items = this.items.filter(item => item.id != memberId);\n    },\n    //触发子组内部\n    onCardShow() {\n      // this.$nextTick(v=>{\n      //   this.$refs.CardFun[0].onCardShow()\n      // })\n      //this.$refs.CardFun.zz\n    },\n    //搜索\n    search() {\n      this.indexAt = 0;\n      if (!this.SeachInput) {\n        this.changeSec(0);\n        this.$forceUpdate();\n      } else {\n        let keyword = this.SeachInput.toLowerCase();\n        console.log('keyword', keyword);\n        this.items = this.arr.filter(item => {\n          return (\n            item.nickName.toLowerCase().indexOf(keyword) > -1 ||\n            item.nickName_pinyin.toLowerCase().indexOf(keyword) > -1 ||\n            item.friendNotes.toLowerCase().indexOf(keyword) > -1 ||\n            item.friendNotes_pinyin.toLowerCase().indexOf(keyword) > -1\n          );\n        });\n        this.needShowNickName();\n      }\n      this.currentIndex = 0;\n      this.chooseSearch();\n    },\n    chooseSearch(){\n      this.indexAt = 0;\n      document.removeEventListener('keydown', this.keyMove2)\n      document.getElementById('scrollBox').scrollTop = 0\n      document.addEventListener('keydown',this.keyMove2)\n    },\n    move(){\n      if( document.getElementById('scrollBox')){\n        console.log(document.getElementById('scrollBox').offsetTop,'位移')\n        document.getElementById('scrollBox').scrollTop = document.getElementsByClassName('active2')[0].offsetTop-200\n      }\n    },\n    keyMove2(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n          console.log(this.indexAt,'--')\n        }else{\n          this.indexAt = 0;\n        }\n        this.move()\n      }else if(e.keyCode == 40){ //下键\n        console.log(this.indexAt,'down2222')\n        if(this.indexAt < (this.items.length-1)){\n          this.indexAt++;\n          console.log(this.indexAt,'++')\n        }else if(this.indexAt == this.items.length){\n          this.indexAt = this.indexAt-1 ;\n          console.log(this.indexAt,'-1后')\n        }\n        this.move()\n      }\n      else if(e.keyCode == 13){\n        console.log(document.getElementsByClassName('active2')[0],'wswwwww')\n        let currentId=''\n        if(document.getElementsByClassName('active2')[0]){\n          currentId = document.getElementsByClassName('active2')[0].getAttribute(\"id\")\n        }\n        this.currentItem = this.items.filter((item) => {\n          return item.inviteCode == currentId\n        })\n        console.log(this.currentItem,'currentItem','展示名片')\n        this.lookCard(this.currentItem[0].userId)\n      }\n      \n    },\n    needShowNickName() {\n      if (this.SeachInput) {\n        let key = this.SeachInput.toLowerCase();\n        this.items.map(item => {\n          item.showNickName = false;\n          if (item.nickName.toLowerCase().indexOf(key) != -1 || item.nickName_pinyin.toLowerCase().indexOf(key) != -1) {\n            if (item.groupMemberName.indexOf(item.nickName) < 0) {\n              item.showNickName = true;\n            }\n          }\n        });\n      }\n      this.items.sort((a, b) => {\n        return a.nickName_pinyin.localeCompare(b.nickName_pinyin);\n      });\n    },\n    // 举报\n    tipOff(id) {\n      this.$router.push({\n        path: '/app/chat/tipoffs',\n        query: {\n          impeachType: 1,\n          othersId: id\n        }\n      });\n    },\n    handleClose() {\n      this.items = [];\n      this.SeachInput = '';\n      this.$emit('closeDialog');\n    },\n    rightClick(e, item) {\n      this.changeValueV = item;\n      if (this.myStatus == 3) {\n        e.preventDefault();\n        return;\n      } else {\n        e.preventDefault();\n        this.addClick();\n      }\n    },\n    addClick() {\n      const menu = RightRule(this.myStatus, this.changeValueV, this);\n      // if (menu.length == 0) {\n      //   return;\n      // }\n      return this.$RightClick(menu).popup({\n        window: remote.getCurrentWindow()\n      });\n    },\n    confirmDialogHand() {},\n    cancelDialogHand() {\n      this.dialogVisible = false;\n      this.init();\n    },\n    inviteMemHand() {\n      this.SeachInput='';\n      this.changeSec(0);\n      // 邀请成员\n      //this.$refs.groupInvite.groupfriendlist();\n      this.$emit('ShowGroupInvite');\n    },\n    async setMagHand(obj, num) {\n      let message = this.$t('chat_comm_manage_0030', {member: obj.groupMemberName});\n      if (num == 3) {\n        message = this.$t('chat_comm_manage_0031', {member: obj.groupMemberName});\n      }\n      this.$confirm(message, this.$t('Universal_0059'), {\n        confirmButtonText: this.$t('Universal_0062'),\n        cancelButtonText: this.$t('Universal_0063'),\n        type: 'warning'\n      })\n        .then(async () => {\n          let res = await update_person_info({\n            authStatus: num,\n            groupId: this.groupId,\n            userId: obj.userId\n          });\n          if (res.code == 200) {\n            this.$message.success(res.msg);\n            await window.vm\n              .$knex('t_groups_member')\n              .where('id', '=', obj.userId)\n              .where('group_id', '=', this.groupId)\n              .update({ auth_status: num });\n            this.init();\n          } else {\n            this.$message.error(res.data.msg);\n          }\n        })\n        .catch(() => {});\n    },\n    changeGroupName(arr) {\n      return arr.map(a => {\n        a = {\n          additionalStatus: a.additionalStatus,\n          authStatus: a.auth_status,\n          forbiddenWordsStatus: a.forbiddenWordsStatus,\n          friendNotes: a.friend_friendNotes || '',\n          friendNotes_pinyin: a.friend_friendNotes_pinyin || '',\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name || '',\n          friendNickNamePinyin: a.friend_nick_name_pinyin || '',\n          groupId: a.group_id,\n          groupMemberName: this.authStatus == '3' ? a.group_member_friend_name : a.group_member_name,\n          id: a.id,\n          userId: a.userId,\n          is_show: a.is_show,\n          memberNotes: a?.member_notes || '',\n          memberNotes_pinyin: a.member_notes_pinyin || '',\n          muteNotifications: a.muteNotifications,\n          mutedStatus: a.mutedStatus,\n          nickName: a.nick_name,\n          nickName_pinyin: convertToPinyin(a.nick_name),\n          stickyStatus: a.stickyStatus,\n          userHeadImg: a.user_head_img,\n          inviteCode: a.inviteCode,\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank,\n          joinTime: Date.now(a.joinTime)\n        };\n        if (a.forbiddenWordsStatus == 1 && a.authStatus == 3) {\n          this.forbiddenMemb.push(a);\n        }\n        if (a.id == this.userId) {\n          this.myStatus = a.authStatus;\n        }\n        return a;\n      });\n    },\n    async getList() {\n      await store.dispatch('GET_MEM_LIST', this.groupId);\n      this.members = store.state.search.membList.filter(item => item.is_show == 'true');\n      this.arr = this.changeGroupName(this.members);\n\n      this.allMemb = this.arr.length;\n      this.memberSelect[0].label = `${this.$t('chat_comm_set_0023')}(${this.allMemb}/${this.maxPeople ? this.maxPeople : '20'})`;\n      this.AllMember = this.memberSelect[0].label;\n\n      this.dataMemb[0] = this.arr;\n      this.items = this.arr;\n      // console.log('this.items ======= ',this.items);\n      this.currentIndex = 0;\n      this.$emit('updatePeopleInGroup', this.items.length);\n      this.$forceUpdate();\n    },\n    async restoreMemberNotes(memberUserId) {\n      if (memberUserId) {\n        const memberItem = {\n          fromId: memberUserId,\n          targetId: this.groupId\n        };\n        const groupMemberItem = await SQLUtils.findGroupMemberName(memberItem);\n        await store.dispatch('GET_MEM_LIST', this.groupId);\n        this.members = await store.state.search.membList;\n        this.items.map(item => {\n          if (item.id == memberUserId) {\n            item.nickName_pinyin = convertToPinyin(groupMemberItem.nickName);\n            item.friendNotes = groupMemberItem.friendFriendNotes || '';\n            item.friendNotes_pinyin = convertToPinyin(item.friendNotes);\n            item.memberNotes = groupMemberItem.memberNotes || '';\n            item.memberNotes_pinyin = convertToPinyin(item.memberNotes);\n            item.groupMemberName = this.memberName(item);\n            item.vipType = groupMemberItem.vipType;\n            item.inviteCodeType = groupMemberItem.inviteCodeType;\n            item.userRank = groupMemberItem.userRank;\n            item.inviteCode = groupMemberItem.inviteCode;\n          }\n        });\n        this.$forceUpdate();\n      }\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    memberFriendNotes(item) {\n      let userInfo = this.members.find(m => m.id == item.userId);\n      if (userInfo && userInfo.friend_friendNotes) {\n        return userInfo.friend_friendNotes ? userInfo.friend_friendNotes : '';\n      }\n      return '';\n    },\n    memberName(item) {\n      return item.friendNotes || item.nickName;\n      // let memberNotes = item.memberNotes ? '['.concat(item.memberNotes).concat(']') : '';\n      // let friendNotes = item.friendNotes || '';\n      // let nickName = item.nickName;\n      // let names = [\n      //   memberNotes.concat(friendNotes),\n      //   memberNotes.concat(nickName),\n      //   friendNotes,\n      //   nickName\n      // ];\n      // if (this.authStatus != 3) {\n      //   if (friendNotes) {\n      //     return names[0];\n      //   } else {\n      //     return names[1];\n      //   }\n      // } else {\n      //   if (friendNotes) {\n      //     return names[2];\n      //   } else {\n      //     return names[3];\n      //   }\n      // }\n    },\n    async init() {\n      // this.items = [];\n      // this.dataMemb = [];\n      // this.forbiddenMemb = [];\n      // this.AllMember = '';\n      // this.SeachInput = '';\n      this.SeachInput = '';\n      await this.getList();\n      this.loading = false\n    },\n    changeSec(val) {\n      this.SeachInput = '';\n      this.arr = this.dataMemb[val];\n      this.items = this.dataMemb[val];\n      this.currentIndex = 0;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    async onMemberOpen() {\n      // this.items = [];\n      // this.dataMemb = [];\n      // this.forbiddenMemb = [];\n      // this.AllMember = '';\n      // this.SeachInput = '';\n      this.loading = true\n      await this.init();\n    },\n    onMemberClose() {\n      this.items = [];\n      this.dataMemb = [];\n      this.forbiddenMemb = [];\n      this.AllMember = '';\n      this.SeachInput = '';\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.onMemberOpen()\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  destroyed() {}, //生命周期 - 销毁完成\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.keyMove2)\n  }, //生命周期 - 销毁之前\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\">\n.set-member-operator {\n  li {\n    line-height: 20px;\n  }\n}\n\n.serach-input {\n  .el-input__prefix,\n  .el-input__suffix {\n    .el-input__icon {\n      line-height: 26px;\n    }\n  }\n}\n.serach-input input.el-input__inner {\n  font-size: 12px;\n  color: #555;\n}\n</style>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.gruop-members-wrap {\n  //   overflow-y: hidden;\n  min-height: 90vh;\n\n  .title {\n    font-size: 14px;\n    display: flex;\n    padding: 0 10px;\n    line-height: 47px;\n    // background:#fff;\n    background: #fbfbfb;\n\n    .conditionSelec {\n      min-width: 100px;\n      // background: turquoise;\n\n      /deep/ .el-input__inner {\n        max-width: 280px;\n        background: transparent;\n        border: 0px solid red;\n        padding-left: 2px;\n      }\n\n      // /deep/ .el-input--small .el-input__inner{\n      //   min-width: 150px;\n      // }\n    }\n\n    .close-i {\n      margin-left: auto;\n      margin-right: -5px;\n      line-height: 47px;\n      font-size: 18px;\n      cursor: pointer;\n    }\n  }\n  .no-results {\n    text-align: center;\n    color: #999;\n    font-size: 14px;\n    margin-top: 40px;\n  }\n  .serach {\n    padding: 10px 10px 15px;\n    display: flex;\n    align-items: center;\n    .serach-input {\n      width: 85%;\n      border-radius: 20px;\n      height: 26px;\n      line-height: 26px;\n      border: 1px solid #ddd;\n      background: #fff;\n      .el-input__inner {\n        height: 26px;\n        line-height: 26px;\n      }\n      //  /deep/ .el-input__prefix{\n      //    top: -6px;\n      //  }\n      //  /deep/ .el-input__suffix{\n      //    top: -6px;\n      //  }\n    }\n    img {\n      width: 20px;\n      height: 21px;\n    }\n  }\n  .invite-mem {\n    vertical-align: middle;\n    margin-left: auto;\n    margin-right: 0px;\n  }\n  .gruop-members-con {\n    height: 100%;\n    .gruop-members-title {\n      padding: 0 20px;\n      height: 30px;\n      line-height: 30px;\n      background-color: #9297a3;\n      font-size: 14px;\n      color: #fff;\n    }\n    .gruop-members-list {\n      height: 100vh;\n      overflow-y: scroll;\n      background-color: #fff;\n      align-items: center;\n\n      .active {\n        background-color: #f7f7fa;\n      }\n      .active2{\n        background-color: #eee;\n      }\n      li {\n        display: flex;\n        padding: 0 10px 0 12px;\n        // height: 60px;\n        // line-height: 58px;\n        height: 50px;\n        /*line-height: 48px;*/\n        /*&:nth-child(2n) {*/\n        /*  background-color: #f7f7fa;*/\n        /*}*/\n        img {\n          vertical-align: middle;\n          border-radius: 50%;\n        }\n      }\n      .gruop-members-manster {\n        margin-right: 10px;\n        margin-left: 5px;\n        // margin-left: auto;\n        line-height: 48px;\n        // margin-top: -2px;\n      }\n      .gruop-members-name {\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        padding-right: 15px;\n        position: relative;\n        display: flex;\n        align-items: center;\n        .tips {\n          position: absolute;\n          left: 30px;\n          top: 5px;\n        }\n      }\n      .gruop-members-opera img {\n        vertical-align: middle;\n      }\n      .group-members-name {\n        font-size: 12px;\n        // max-width: 26%;\n      }\n      .name-wrap {\n        padding-right: 2px;\n        // max-width: 50%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: pre;\n        .levelbox {\n          padding: 0;\n        }\n      }\n      .name-notes-id {\n        height: 20px;\n        justify-content:baseline;\n        flex-direction: row;\n        margin-top: 5px;\n        align-items: center;\n        max-width: 150px;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"less\">\n.el-message-box__wrapper {\n  .el-message-box {\n    &.pre-dialog {\n      .el-message-box__message {\n        p {\n          white-space: pre-wrap !important;\n        }\n      }\n    }\n  }\n}\n.el-message-box__wrapper {\n  .el-message-box {\n    &.pre-dialog {\n      .el-message-box__message {\n        p {\n          white-space: pre-wrap !important;\n        }\n      }\n    }\n  }\n}\n</style>",
    "cssJson": [
      {
        ".set-member-operator": {
          "li": {
            "line-height": "20px"
          }
        },
        ".serach-input": {
          ".el-input__prefix,  .el-input__suffix": {
            ".el-input__icon": {
              "line-height": "26px"
            }
          }
        },
        ".serach-input input.el-input__inner": {
          "font-size": "12px",
          "color": "#555"
        }
      },
      {
        ".gruop-members-wrap": {
          "min-height": "90vh",
          ".title": {
            "font-size": "14px",
            "display": "flex",
            "padding": "0 10px",
            "line-height": "47px",
            "background": "#fbfbfb",
            ".conditionSelec": {
              "min-width": "100px",
              "/deep/ .el-input__inner": {
                "max-width": "280px",
                "background": "transparent",
                "border": "0px solid red",
                "padding-left": "2px"
              }
            },
            ".close-i": {
              "margin-left": "auto",
              "margin-right": "-5px",
              "line-height": "47px",
              "font-size": "18px",
              "cursor": "pointer"
            }
          },
          ".no-results": {
            "text-align": "center",
            "color": "#999",
            "font-size": "14px",
            "margin-top": "40px"
          },
          ".serach": {
            "padding": "10px 10px 15px",
            "display": "flex",
            "align-items": "center",
            ".serach-input": {
              "width": "85%",
              "border-radius": "20px",
              "height": "26px",
              "line-height": "26px",
              "border": "1px solid #ddd",
              "background": "#fff",
              ".el-input__inner": {
                "height": "26px",
                "line-height": "26px"
              }
            },
            "img": {
              "width": "20px",
              "height": "21px"
            }
          },
          ".invite-mem": {
            "vertical-align": "middle",
            "margin-left": "auto",
            "margin-right": "0px"
          },
          ".gruop-members-con": {
            "height": "100%",
            ".gruop-members-title": {
              "padding": "0 20px",
              "height": "30px",
              "line-height": "30px",
              "background-color": "#9297a3",
              "font-size": "14px",
              "color": "#fff"
            },
            ".gruop-members-list": {
              "height": "100vh",
              "overflow-y": "scroll",
              "background-color": "#fff",
              "align-items": "center",
              ".active": {
                "background-color": "#f7f7fa"
              },
              ".active2": {
                "background-color": "#eee"
              },
              "li": {
                "display": "flex",
                "padding": "0 10px 0 12px",
                "height": "50px",
                "img": {
                  "vertical-align": "middle",
                  "border-radius": "50%"
                }
              },
              ".gruop-members-manster": {
                "margin-right": "10px",
                "margin-left": "5px",
                "line-height": "48px"
              },
              ".gruop-members-name": {
                "overflow": "hidden",
                "white-space": "nowrap",
                "text-overflow": "ellipsis",
                "padding-right": "15px",
                "position": "relative",
                "display": "flex",
                "align-items": "center",
                ".tips": {
                  "position": "absolute",
                  "left": "30px",
                  "top": "5px"
                }
              },
              ".gruop-members-opera img": {
                "vertical-align": "middle"
              },
              ".group-members-name": {
                "font-size": "12px"
              },
              ".name-wrap": {
                "padding-right": "2px",
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "white-space": "pre",
                ".levelbox": {
                  "padding": "0"
                }
              },
              ".name-notes-id": {
                "height": "20px",
                "justify-content": "baseline",
                "flex-direction": "row",
                "margin-top": "5px",
                "align-items": "center",
                "max-width": "150px"
              }
            }
          }
        }
      },
      {
        ".el-message-box__wrapper": {
          ".el-message-box": {
            "&.pre-dialog": {
              ".el-message-box__message": {
                "p": {
                  "white-space": "pre-wrap !important"
                }
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/discussion/components/GroupUpgrade.vue",
    "tagInfo": {
      "0": "<style lang=\"less\">",
      "1": "<style scoped>",
      "2": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <el-dialog\n      :title=\"$t('book_group_0012')\"\n      :visible.sync=\"groupUpgradeVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      @open=\"onOpen\"\n      @close=\"onClose\"\n      width=\"500px\"\n      center\n      class=\"discussion\"\n    >\n      <div class=\"chatset\">\n        <div class=\"formbox groupavatar\">\n          <el-form ref=\"creatformm\" :rules=\"creatformRules\" :model=\"creatform\" :label-width=\"labelWidth\">\n            <el-form-item\n                :label=\"$t('chat_createcommunity_0002')\"\n                prop=\"groupAvatar\" required class=\"groupWord-img\">\n              <div class=\"demo-block\">\n                <!-- <el-upload\n              v-loading=\"imgLoading\" \n              element-loading-spinner=\"el-icon-loading\"\n              element-loading-background=\"rgba(255, 255, 255, 0.5)\"\n              ref=\"upload\"\n              :show-file-list=\"false\"\n              :action=\"uploadUrl\"\n              :data=\"uploadData\"\n              :headers=\"headers\"\n              :on-success=\"handleAvatarSuccess\"\n              :before-upload=\"beforeAvatarUpload\" >\n              <img v-if=\"groupAvatarUrl\" :src=\"groupAvatarUrl\" class=\"group-avatar\" alt />\n              <i v-else class=\"el-icon-circle-plus user-uploader-icon\"></i>\n            </el-upload> -->\n                <Copper ref=\"copperBox\" @uploadCropper=\"uploadCropper\" :avater=\"groupAvatarUrl\"></Copper>\n              </div>\n            </el-form-item>\n\n            <el-form-item\n                :label=\"$t('chat_createcommunity_0003')\"\n                prop=\"groupName\" class=\"groupWord\">\n              <el-input\n                size=\"small\"\n                :minlength=\"1\"\n                :maxlength=\"30\"\n                v-model=\"creatform.groupName\"\n                ref=\"groupname\"\n                show-word-limit\n                class=\"limtinput\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n                :label=\"$t('chat_createcommunity_0006')\"\n                required class=\"group-typesel\">\n              <el-radio-group v-model=\"creatform.groupStatus\">\n                <el-radio :label=\"1\">{{ $t('chat_createcommunity_0008') }}</el-radio>\n                <el-radio :label=\"2\">{{ $t('chat_createcommunity_0009') }}</el-radio>\n              </el-radio-group>\n            </el-form-item>\n            <el-form-item :label=\"$t('Universal_0205')\" prop=\"country\" class=\"typesel\">\n              <el-row v-if=\"selectRefresh\">\n                <el-col :span=\"countrySpan\">\n                  <el-select\n                    size=\"mini\"\n                    v-model=\"creatform.country\"\n                    clearable\n                    filterable\n                    :placeholder=\"$t('Universal_0208')\"\n                    popper-class=\"noDrag\"\n                    @change=\"getarea\" \n                  >\n                    <el-option :label=\"item.name\" :value=\"item.id\" v-for=\"item in countryList\" :key=\"item.id\"></el-option>\n                  </el-select>\n                </el-col>\n                <el-col :span=\"countrySpan\" :offset=\"$i18n.locale.includes('zh') ? 2 : 0\">\n                  <el-form-item label prop=\"city\">\n                    <el-select size=\"mini\" v-model=\"creatform.city\" clearable filterable\n                               :placeholder=\"$t('Universal_0209')\" popper-class=\"noDrag\">\n                      <el-option :label=\"item.name\" :value=\"item.id\" v-for=\"item in areaList\" :key=\"item.id\"></el-option>\n                    </el-select>\n                  </el-form-item>\n                </el-col>\n              </el-row>\n            </el-form-item>\n            <el-form-item :label=\"$t('chat_createcommunity_0010')\" prop=\"groupTab\" class=\"group-info-name\">\n              <el-row v-if=\"selectRefresh\">\n                <el-select size=\"mini\" v-model=\"creatform.groupTab\" clearable filterable\n                           :placeholder=\"$t('chat_createcommunity_0035')\">\n                  <el-option v-for=\"item in tabList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                </el-select>\n              </el-row>\n            </el-form-item>\n            <el-form-item :label=\"$t('chat_comm_set_0002')\" prop=\"type\" class=\"notegroup\">\n              <el-input\n                show-word-limit\n                class=\"limtinput\"\n                type=\"textarea\"\n                :maxlength=\"500\"\n                :rows=\"4\"\n                :placeholder=\"$t('chat_createcommunity_0033')\"\n                v-model=\"creatform.groupProfile\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item class=\"update-geoup\">\n              <div class=\"right\">\n                <el-button size=\"mini\" type=\"primary\" @click=\"upgradeSubmit('creatformm')\">\n                  {{ $t('Universal_0045') }}\n                </el-button>\n              </div>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { discussionUpgradeGroup } from './server';\nimport { upload_images_avatar } from '@/server.js';\nimport { contGrpSize } from '@/utils';\nimport { mapMutations } from 'vuex';\nimport { convertToPinyin } from '@/utils/pinyin';\nimport { CLEAR_CHAT } from '@/store/types';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport Copper from '@/components/chat/copper';\nexport default {\n  name: 'GroupUpgrade',\n  components: { Copper },\n  props: {\n    info: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      groupUpgradeVisible: false,\n      countryList: [],\n      areaList: [],\n      creatform: {\n        id: '',\n        groupName: '',\n        groupAvatar: '',\n        groupStatus: 1,\n        groupProfile: '',\n        city: '',\n        country: '',\n        groupTab: ''\n      },\n      linkurl: '',\n      groupCode: '',\n      groupobj: {},\n      uploadUrl: upload_images_avatar(),\n      uploadData: {},\n      headers: {\n        Authorization: localStorage.accessToken\n      },\n      groupAvatarUrl: '',\n      imgLoading: false,\n      selectRefresh:false,\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    creatformRules() {\n      return {\n        groupAvatar: [{ required: true, message: this.$t('chat_createcommunity_0034'), trigger: 'change' }],\n        groupName: [\n          { required: true, message: this.$t('chat_createcommunity_0004'), trigger: 'blur' },\n          {\n            min: 1,\n            max: 30,\n            trigger: 'blur'\n          },\n          {\n            pattern: /^((?!didi).)+$/i,\n            message: this.$t('chat_comm_set_0017')\n          }\n        ],\n        groupStatus: [{ required: true, message: this.$t('chat_createcommunity_0032') }],\n        country: [{ message: this.$t('Universal_0208'), trigger: 'change' }],\n        city: [{ trigger: 'change' }]\n        // groupTab:[ { message: \"为你的群贴上标签\", trigger: \"blur\" },],\n      };\n    },\n    tabList() {\n      return [\n        { value: 1, label: this.$t('chat_createcommunity_0012') },\n        { value: 2, label: 'BTC' },\n        { value: 3, label: this.$t('chat_createcommunity_0014') },\n        { value: 4, label: this.$t('chat_createcommunity_0015') },\n        { value: 5, label: this.$t('chat_createcommunity_0016') },\n        { value: 6, label: this.$t('chat_createcommunity_0017') },\n        { value: 7, label: 'Defi' },\n        { value: 8, label: this.$t('chat_createcommunity_0019') },\n        { value: 9, label: this.$t('chat_createcommunity_0020') },\n        { value: 10, label: this.$t('chat_createcommunity_0021') }\n      ];\n    },\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '100px';\n      } else {\n        return '170px';\n      }\n    },\n    countrySpan() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 11;\n      } else {\n        return 24;\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    '$i18n.locale': {\n      deep: true,\n      immediate: true,\n      handler: function () {\n        this.post_base_country_list();\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n  },\n  methods: {\n    async uploadCropper(url) {\n      //调接口上传裁剪的头像\n      this.groupAvatarUrl = url;\n      this.creatform.groupAvatar = url;\n    },\n    onPop() {\n      this.groupUpgradeVisible = true;\n      this.creatform.id = this.info.id;\n      this.creatform.groupName = this.info.groupName;\n      this.$nextTick(() => {\n        this.$refs.groupname.select();\n        this.$refs.groupname.focus();\n      });\n    },\n    onOpen() {\n      this.selectRefresh=true;\n    },\n    onClose() {\n      console.log('onclose');\n      this.areaList = [];\n      this.resetForm();\n      this.selectRefresh=false;\n      this.groupUpgradeVisible = false;\n    },\n\n    ...mapMutations([CLEAR_CHAT]),\n    resetForm() {\n      this.creatform = {\n        groupName: '',\n        groupStatus: 1,\n        groupProfile: '',\n        city: '',\n        country: '',\n        groupAvatar: '',\n        groupTab: ''\n      };\n      this.groupAvatarUrl = '';\n      if (this.$refs['creatformm'] != undefined) {\n        this.$refs['creatformm'].resetFields();\n        this.imgLoading = false;\n      }\n    },\n    async post_base_country_list() {\n      this.countryList = await SQLUtils.getTAreaCountryList();\n    },\n    async getarea(val) {\n      this.areaList = await SQLUtils.getTAreaCityList(val);\n      this.creatform.city = '';\n    },\n    async gotoChat() {\n      // const index = this.$store.chat.lastmsgList.findIndex(item => item.id == this.groupId);\n      // Vue.set(this.$store.chat.lastMsgList[index], 'groupType', 1);\n      // Vue.set(this.$store.chat.lastMsgList[index], 'sessionIcon', this.creatform.groupAvatar);\n      let current = {\n        id: this.groupId,\n        groupType: 1,\n        targetId: this.groupId,\n        uniqueCode: contGrpSize(this.groupId),\n        sessionId: this.groupobj.headImg,\n        sessionName: this.groupobj.groupName,\n        item: this._groupInfo\n      };\n      await this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          id: this.groupId,\n          targetId: this.groupId,\n          groupType: 1,\n          timer: new Date().getTime(),\n          friendName: encodeURI(this.groupobj.groupName),\n          uniqueCode: contGrpSize(this.groupId)\n        }\n      });\n    },\n    async createGroupInfo(item) {\n      const obj = {\n        group_id: item.id,\n        group_name: item.groupName,\n        group_status: item.groupStatus,\n        group_profile: item.groupProfile,\n        group_avatar: item.groupAvatar,\n        group_avatar_local: '',\n        add_check: item.addCheck,\n        invite_auth: item.inviteAuth,\n        country: item.country,\n        city: item.city,\n        screenshotsReminderStatus: item.screenshotsReminderStatus,\n        forbiddenWordsStatus: item.forbiddenWordsStatus,\n        memberSingleChatStatus: item.memberSingleChatStatus,\n        sendPicturesStatus: item.sendPicturesStatus,\n        sendConnectionStatus: item.sendConnectionStatus,\n        copyMessagesStauts: item.copyMessagesStauts,\n        sendRedpacketStatus: item.sendRedpacketStatus,\n        create_time: item.createdOn,\n        save_time: item.saveTime,\n        people: item.people,\n        member_level_status: item.memberLevelStatus,\n        group_level: item.groupLevel,\n        updatedOn: item.updatedOn,\n        code: '',\n        group_name_pinyin: convertToPinyin(item.groupName),\n        is_show: 'true',\n        group_code: item.groupCode,\n        group_type: item.groupType,\n        groupTab: item.groupTab\n      };\n      this._groupInfo = obj;\n      return await window.vm.$knex('t_groups').insert(obj);\n    },\n    async createGroupMember(memberList) {\n      console.log('createGroupMember');\n      const list = [];\n      for (let item of memberList) {\n        list.push({\n          id: item.userId,\n          group_id: item.groupId,\n          auth_status: item.authStatus,\n          nick_name: item.nickName,\n          user_head_img: item.userHeadImg,\n          user_head_img_local: '',\n          member_notes: item.memberNotes,\n          member_notes_pinyin: item.memberNotes == undefined ? '' : convertToPinyin(item.memberNotes),\n          is_show: 'true',\n          forbiddenWordsStatus: 0,\n          muteNotifications: 0,\n          additionalStatus: 0,\n          mutedStatus: 0,\n          stickyStatus: 0\n        });\n      }\n      const cc = await window.vm.$knex.batchInsert('t_groups_member', list, 10);\n      return cc;\n    },\n    async createGroupAuth(memberAuthList) {\n      console.log('createGroupAuth');\n      const list = [];\n      for (let item of memberAuthList) {\n        list.push({\n          group_id: item.groupId,\n          user_id: item.userId,\n          member_leval: item.memberLeval,\n          muted_status: item.mutedStatus,\n          additional_status: item.additionalStatus,\n          mute_notifications: item.muteNotifications,\n          forbidden_words_status: item.forbiddenWordsStatus,\n          sticky_status: item.stickyStatus,\n          user_level: item.userLevel\n        });\n      }\n      console.log('list', list);\n      const cc = await window.vm.$knex.batchInsert('t_groups_member_auth', list, 10);\n      console.log(cc);\n      return cc;\n    },\n    async upgradeSubmit(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          console.log('imgLoading', this.imgLoading);\n          if (this.imgLoading) {\n            this.$message.error(this.$t('chat_0093'));\n            return;\n          }\n          let params = JSON.parse(JSON.stringify(this.creatform));\n          console.log('--------------', params);\n          this.convertCountryCode(params);\n          discussionUpgradeGroup(params)\n            .then(async res => {\n              if (res.code == 200) {\n                this.$emit('updateContactListAndRouter', this.info['id']);//查询群聊列表、 讨论组列表\n                this.groupUpgradeVisible = false;\n              } else {\n                this.$message.error(res.data.msg);\n                console.log('设计讨论组失败了。。。。。。');\n                this.convertCountryId();\n              }\n            })\n            .catch(err => {\n              console.error('讨论组升级失败', err);\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    convertCountryCode(item) {\n      if (this.creatform.country && this.creatform.city) {\n        item.country = this.countryList.find(item => item.id == this.creatform.country).code;\n        item.city = this.areaList.find(item => item.id == this.creatform.city).code;\n      } else {\n        item.country = '';\n        item.city = '';\n      }\n    },\n    convertCountryId() {\n      if (this.creatform.country && this.creatform.city) {\n        this.creatform.country = this.countryList.find(item => item.code == this.creatform.country).id;\n        this.creatform.city = this.areaList.find(item => item.code == this.creatform.city).id;\n      }\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpg' || file.type === 'image/jpeg' || file.type === 'image/png';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        this.$message.error(this.$t('Universal_0369'));\n        return false;\n      } else {\n        if (!isLt2M) {\n          this.$message.error(this.$t('Universal_0390'));\n          return false;\n        }\n      }\n      this.imgLoading = true;\n    },\n    handleAvatarSuccess(res, file) {\n      if (res.code == 200) {\n        this.imgLoading = false;\n        this.$message({\n          message: this.$t('Universal_0110'),\n          type: 'success',\n          duration: 1500,\n          onClose: () => {}\n        });\n        this.groupAvatarUrl = URL.createObjectURL(file.raw);\n        this.creatform.groupAvatar = res.data.path;\n      } else {\n        this.$message.error(res.msg);\n      }\n    }\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<template>\n  <div>\n    <el-dialog\n      :title=\"$t('book_group_0012')\"\n      :visible.sync=\"groupUpgradeVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      @open=\"onOpen\"\n      @close=\"onClose\"\n      width=\"500px\"\n      center\n      class=\"discussion\"\n    >\n      <div class=\"chatset\">\n        <div class=\"formbox groupavatar\">\n          <el-form ref=\"creatformm\" :rules=\"creatformRules\" :model=\"creatform\" :label-width=\"labelWidth\">\n            <el-form-item\n                :label=\"$t('chat_createcommunity_0002')\"\n                prop=\"groupAvatar\" required class=\"groupWord-img\">\n              <div class=\"demo-block\">\n                <!-- <el-upload\n              v-loading=\"imgLoading\" \n              element-loading-spinner=\"el-icon-loading\"\n              element-loading-background=\"rgba(255, 255, 255, 0.5)\"\n              ref=\"upload\"\n              :show-file-list=\"false\"\n              :action=\"uploadUrl\"\n              :data=\"uploadData\"\n              :headers=\"headers\"\n              :on-success=\"handleAvatarSuccess\"\n              :before-upload=\"beforeAvatarUpload\" >\n              <img v-if=\"groupAvatarUrl\" :src=\"groupAvatarUrl\" class=\"group-avatar\" alt />\n              <i v-else class=\"el-icon-circle-plus user-uploader-icon\"></i>\n            </el-upload> -->\n                <Copper ref=\"copperBox\" @uploadCropper=\"uploadCropper\" :avater=\"groupAvatarUrl\"></Copper>\n              </div>\n            </el-form-item>\n\n            <el-form-item\n                :label=\"$t('chat_createcommunity_0003')\"\n                prop=\"groupName\" class=\"groupWord\">\n              <el-input\n                size=\"small\"\n                :minlength=\"1\"\n                :maxlength=\"30\"\n                v-model=\"creatform.groupName\"\n                ref=\"groupname\"\n                show-word-limit\n                class=\"limtinput\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n                :label=\"$t('chat_createcommunity_0006')\"\n                required class=\"group-typesel\">\n              <el-radio-group v-model=\"creatform.groupStatus\">\n                <el-radio :label=\"1\">{{ $t('chat_createcommunity_0008') }}</el-radio>\n                <el-radio :label=\"2\">{{ $t('chat_createcommunity_0009') }}</el-radio>\n              </el-radio-group>\n            </el-form-item>\n            <el-form-item :label=\"$t('Universal_0205')\" prop=\"country\" class=\"typesel\">\n              <el-row v-if=\"selectRefresh\">\n                <el-col :span=\"countrySpan\">\n                  <el-select\n                    size=\"mini\"\n                    v-model=\"creatform.country\"\n                    clearable\n                    filterable\n                    :placeholder=\"$t('Universal_0208')\"\n                    popper-class=\"noDrag\"\n                    @change=\"getarea\" \n                  >\n                    <el-option :label=\"item.name\" :value=\"item.id\" v-for=\"item in countryList\" :key=\"item.id\"></el-option>\n                  </el-select>\n                </el-col>\n                <el-col :span=\"countrySpan\" :offset=\"$i18n.locale.includes('zh') ? 2 : 0\">\n                  <el-form-item label prop=\"city\">\n                    <el-select size=\"mini\" v-model=\"creatform.city\" clearable filterable\n                               :placeholder=\"$t('Universal_0209')\" popper-class=\"noDrag\">\n                      <el-option :label=\"item.name\" :value=\"item.id\" v-for=\"item in areaList\" :key=\"item.id\"></el-option>\n                    </el-select>\n                  </el-form-item>\n                </el-col>\n              </el-row>\n            </el-form-item>\n            <el-form-item :label=\"$t('chat_createcommunity_0010')\" prop=\"groupTab\" class=\"group-info-name\">\n              <el-row v-if=\"selectRefresh\">\n                <el-select size=\"mini\" v-model=\"creatform.groupTab\" clearable filterable\n                           :placeholder=\"$t('chat_createcommunity_0035')\">\n                  <el-option v-for=\"item in tabList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                </el-select>\n              </el-row>\n            </el-form-item>\n            <el-form-item :label=\"$t('chat_comm_set_0002')\" prop=\"type\" class=\"notegroup\">\n              <el-input\n                show-word-limit\n                class=\"limtinput\"\n                type=\"textarea\"\n                :maxlength=\"500\"\n                :rows=\"4\"\n                :placeholder=\"$t('chat_createcommunity_0033')\"\n                v-model=\"creatform.groupProfile\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item class=\"update-geoup\">\n              <div class=\"right\">\n                <el-button size=\"mini\" type=\"primary\" @click=\"upgradeSubmit('creatformm')\">\n                  {{ $t('Universal_0045') }}\n                </el-button>\n              </div>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { discussionUpgradeGroup } from './server';\nimport { upload_images_avatar } from '@/server.js';\nimport { contGrpSize } from '@/utils';\nimport { mapMutations } from 'vuex';\nimport { convertToPinyin } from '@/utils/pinyin';\nimport { CLEAR_CHAT } from '@/store/types';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport Copper from '@/components/chat/copper';\nexport default {\n  name: 'GroupUpgrade',\n  components: { Copper },\n  props: {\n    info: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      groupUpgradeVisible: false,\n      countryList: [],\n      areaList: [],\n      creatform: {\n        id: '',\n        groupName: '',\n        groupAvatar: '',\n        groupStatus: 1,\n        groupProfile: '',\n        city: '',\n        country: '',\n        groupTab: ''\n      },\n      linkurl: '',\n      groupCode: '',\n      groupobj: {},\n      uploadUrl: upload_images_avatar(),\n      uploadData: {},\n      headers: {\n        Authorization: localStorage.accessToken\n      },\n      groupAvatarUrl: '',\n      imgLoading: false,\n      selectRefresh:false,\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    creatformRules() {\n      return {\n        groupAvatar: [{ required: true, message: this.$t('chat_createcommunity_0034'), trigger: 'change' }],\n        groupName: [\n          { required: true, message: this.$t('chat_createcommunity_0004'), trigger: 'blur' },\n          {\n            min: 1,\n            max: 30,\n            trigger: 'blur'\n          },\n          {\n            pattern: /^((?!didi).)+$/i,\n            message: this.$t('chat_comm_set_0017')\n          }\n        ],\n        groupStatus: [{ required: true, message: this.$t('chat_createcommunity_0032') }],\n        country: [{ message: this.$t('Universal_0208'), trigger: 'change' }],\n        city: [{ trigger: 'change' }]\n        // groupTab:[ { message: \"为你的群贴上标签\", trigger: \"blur\" },],\n      };\n    },\n    tabList() {\n      return [\n        { value: 1, label: this.$t('chat_createcommunity_0012') },\n        { value: 2, label: 'BTC' },\n        { value: 3, label: this.$t('chat_createcommunity_0014') },\n        { value: 4, label: this.$t('chat_createcommunity_0015') },\n        { value: 5, label: this.$t('chat_createcommunity_0016') },\n        { value: 6, label: this.$t('chat_createcommunity_0017') },\n        { value: 7, label: 'Defi' },\n        { value: 8, label: this.$t('chat_createcommunity_0019') },\n        { value: 9, label: this.$t('chat_createcommunity_0020') },\n        { value: 10, label: this.$t('chat_createcommunity_0021') }\n      ];\n    },\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '100px';\n      } else {\n        return '170px';\n      }\n    },\n    countrySpan() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 11;\n      } else {\n        return 24;\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {\n    '$i18n.locale': {\n      deep: true,\n      immediate: true,\n      handler: function () {\n        this.post_base_country_list();\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n  },\n  methods: {\n    async uploadCropper(url) {\n      //调接口上传裁剪的头像\n      this.groupAvatarUrl = url;\n      this.creatform.groupAvatar = url;\n    },\n    onPop() {\n      this.groupUpgradeVisible = true;\n      this.creatform.id = this.info.id;\n      this.creatform.groupName = this.info.groupName;\n      this.$nextTick(() => {\n        this.$refs.groupname.select();\n        this.$refs.groupname.focus();\n      });\n    },\n    onOpen() {\n      this.selectRefresh=true;\n    },\n    onClose() {\n      console.log('onclose');\n      this.areaList = [];\n      this.resetForm();\n      this.selectRefresh=false;\n      this.groupUpgradeVisible = false;\n    },\n\n    ...mapMutations([CLEAR_CHAT]),\n    resetForm() {\n      this.creatform = {\n        groupName: '',\n        groupStatus: 1,\n        groupProfile: '',\n        city: '',\n        country: '',\n        groupAvatar: '',\n        groupTab: ''\n      };\n      this.groupAvatarUrl = '';\n      if (this.$refs['creatformm'] != undefined) {\n        this.$refs['creatformm'].resetFields();\n        this.imgLoading = false;\n      }\n    },\n    async post_base_country_list() {\n      this.countryList = await SQLUtils.getTAreaCountryList();\n    },\n    async getarea(val) {\n      this.areaList = await SQLUtils.getTAreaCityList(val);\n      this.creatform.city = '';\n    },\n    async gotoChat() {\n      // const index = this.$store.chat.lastmsgList.findIndex(item => item.id == this.groupId);\n      // Vue.set(this.$store.chat.lastMsgList[index], 'groupType', 1);\n      // Vue.set(this.$store.chat.lastMsgList[index], 'sessionIcon', this.creatform.groupAvatar);\n      let current = {\n        id: this.groupId,\n        groupType: 1,\n        targetId: this.groupId,\n        uniqueCode: contGrpSize(this.groupId),\n        sessionId: this.groupobj.headImg,\n        sessionName: this.groupobj.groupName,\n        item: this._groupInfo\n      };\n      await this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/group/message',\n        query: {\n          id: this.groupId,\n          targetId: this.groupId,\n          groupType: 1,\n          timer: new Date().getTime(),\n          friendName: encodeURI(this.groupobj.groupName),\n          uniqueCode: contGrpSize(this.groupId)\n        }\n      });\n    },\n    async createGroupInfo(item) {\n      const obj = {\n        group_id: item.id,\n        group_name: item.groupName,\n        group_status: item.groupStatus,\n        group_profile: item.groupProfile,\n        group_avatar: item.groupAvatar,\n        group_avatar_local: '',\n        add_check: item.addCheck,\n        invite_auth: item.inviteAuth,\n        country: item.country,\n        city: item.city,\n        screenshotsReminderStatus: item.screenshotsReminderStatus,\n        forbiddenWordsStatus: item.forbiddenWordsStatus,\n        memberSingleChatStatus: item.memberSingleChatStatus,\n        sendPicturesStatus: item.sendPicturesStatus,\n        sendConnectionStatus: item.sendConnectionStatus,\n        copyMessagesStauts: item.copyMessagesStauts,\n        sendRedpacketStatus: item.sendRedpacketStatus,\n        create_time: item.createdOn,\n        save_time: item.saveTime,\n        people: item.people,\n        member_level_status: item.memberLevelStatus,\n        group_level: item.groupLevel,\n        updatedOn: item.updatedOn,\n        code: '',\n        group_name_pinyin: convertToPinyin(item.groupName),\n        is_show: 'true',\n        group_code: item.groupCode,\n        group_type: item.groupType,\n        groupTab: item.groupTab\n      };\n      this._groupInfo = obj;\n      return await window.vm.$knex('t_groups').insert(obj);\n    },\n    async createGroupMember(memberList) {\n      console.log('createGroupMember');\n      const list = [];\n      for (let item of memberList) {\n        list.push({\n          id: item.userId,\n          group_id: item.groupId,\n          auth_status: item.authStatus,\n          nick_name: item.nickName,\n          user_head_img: item.userHeadImg,\n          user_head_img_local: '',\n          member_notes: item.memberNotes,\n          member_notes_pinyin: item.memberNotes == undefined ? '' : convertToPinyin(item.memberNotes),\n          is_show: 'true',\n          forbiddenWordsStatus: 0,\n          muteNotifications: 0,\n          additionalStatus: 0,\n          mutedStatus: 0,\n          stickyStatus: 0\n        });\n      }\n      const cc = await window.vm.$knex.batchInsert('t_groups_member', list, 10);\n      return cc;\n    },\n    async createGroupAuth(memberAuthList) {\n      console.log('createGroupAuth');\n      const list = [];\n      for (let item of memberAuthList) {\n        list.push({\n          group_id: item.groupId,\n          user_id: item.userId,\n          member_leval: item.memberLeval,\n          muted_status: item.mutedStatus,\n          additional_status: item.additionalStatus,\n          mute_notifications: item.muteNotifications,\n          forbidden_words_status: item.forbiddenWordsStatus,\n          sticky_status: item.stickyStatus,\n          user_level: item.userLevel\n        });\n      }\n      console.log('list', list);\n      const cc = await window.vm.$knex.batchInsert('t_groups_member_auth', list, 10);\n      console.log(cc);\n      return cc;\n    },\n    async upgradeSubmit(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          console.log('imgLoading', this.imgLoading);\n          if (this.imgLoading) {\n            this.$message.error(this.$t('chat_0093'));\n            return;\n          }\n          let params = JSON.parse(JSON.stringify(this.creatform));\n          console.log('--------------', params);\n          this.convertCountryCode(params);\n          discussionUpgradeGroup(params)\n            .then(async res => {\n              if (res.code == 200) {\n                this.$emit('updateContactListAndRouter', this.info['id']);//查询群聊列表、 讨论组列表\n                this.groupUpgradeVisible = false;\n              } else {\n                this.$message.error(res.data.msg);\n                console.log('设计讨论组失败了。。。。。。');\n                this.convertCountryId();\n              }\n            })\n            .catch(err => {\n              console.error('讨论组升级失败', err);\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    convertCountryCode(item) {\n      if (this.creatform.country && this.creatform.city) {\n        item.country = this.countryList.find(item => item.id == this.creatform.country).code;\n        item.city = this.areaList.find(item => item.id == this.creatform.city).code;\n      } else {\n        item.country = '';\n        item.city = '';\n      }\n    },\n    convertCountryId() {\n      if (this.creatform.country && this.creatform.city) {\n        this.creatform.country = this.countryList.find(item => item.code == this.creatform.country).id;\n        this.creatform.city = this.areaList.find(item => item.code == this.creatform.city).id;\n      }\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === 'image/jpg' || file.type === 'image/jpeg' || file.type === 'image/png';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        this.$message.error(this.$t('Universal_0369'));\n        return false;\n      } else {\n        if (!isLt2M) {\n          this.$message.error(this.$t('Universal_0390'));\n          return false;\n        }\n      }\n      this.imgLoading = true;\n    },\n    handleAvatarSuccess(res, file) {\n      if (res.code == 200) {\n        this.imgLoading = false;\n        this.$message({\n          message: this.$t('Universal_0110'),\n          type: 'success',\n          duration: 1500,\n          onClose: () => {}\n        });\n        this.groupAvatarUrl = URL.createObjectURL(file.raw);\n        this.creatform.groupAvatar = res.data.path;\n      } else {\n        this.$message.error(res.msg);\n      }\n    }\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\">\n.chatset {\n  .el-input__inner,\n  .el-textarea__inner {\n    background: #fff;\n    border: 1px solid rgba(215, 215, 215, 1);\n  }\n  .el-textarea .el-input__count {\n    background: #fff;\n  }\n}\n</style>\n\n<style scoped>\n.group-avatar {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n}\n\n.user-uploader-icon {\n  font-size: 40px;\n  color: #e9e8e8;\n  text-align: center;\n}\n</style>\n\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.discussion {\n  /deep/ .el-dialog__header {\n    padding: 10px 20px;\n  }\n  /deep/ .el-dialog__body {\n    padding: 10px 20px;\n  }\n}\n\n.chatset {\n  box-sizing: border-box;\n  width: 100%;\n  padding: 0;\n  overflow-y: scroll;\n  .formbox {\n    width: 100%;\n    box-sizing: border-box;\n    padding: 0 10px 0 0;\n  }\n\n  .right {\n    text-align: right;\n    /deep/ .el-button--primary {\n      margin-top: 30px;\n    }\n  }\n}\n\n.chatset {\n  /deep/ .el-form-item__label {\n    color: #333;\n    font-size: 13px;\n    font-weight: 400;\n  }\n\n  /deep/ .el-input__inner,\n  .el-textarea__inner {\n    color: #333;\n    font-size: 13px;\n    font-weight: 400;\n  }\n\n  /deep/ .el-radio__label {\n    color: #333;\n    font-size: 13px;\n    font-weight: 400;\n  }\n\n  /deep/ .limtinput textarea {\n    min-height: 50px;\n    max-height: 105px;\n    font-size: 13px;\n  }\n\n  /deep/ .el-button--primary,\n  /deep/ .el-button--default {\n    width: 84px;\n    height: 28px;\n    margin-top: 13px;\n    font-size: 13px;\n  }\n  /deep/ .el-form-item__error {\n    padding-top: 0;\n  }\n  .group-typesel{\n    margin-bottom: 0;\n  }\n  .typesel {\n    margin-bottom: 6px;\n  }\n  .groupWord-img{\n    margin-bottom: 10px;\n  }\n  .groupWord {\n    margin-bottom: 0;\n  }\n  .notegroup {\n    margin-bottom: 0;\n\n    /deep/ .el-form-item__content {\n      line-height: 20px;\n    }\n    /deep/ .el-textarea .el-input__count {\n      bottom: -20px;\n    }\n\n    /deep/ .el-textarea__inner {\n      padding: 8px;\n    }\n  }\n  .copyLink /deep/ .el-input__inner {\n    font-size: 12px;\n  }\n}\n\n.demo-block {\n  height: 50px;\n  /deep/ .el-loading-spinner {\n    left: -20%;\n    margin-top: -25px;\n  }\n\n  /deep/ .el-icon-loading {\n    color: #fff;\n    font-size: 12px;\n  }\n}\n.group-info-name {\n  margin-bottom: 12px;\n}\n.update-geoup{\n  margin-bottom: 5px;\n}\n/deep/ .el-select .el-input .el-select__caret {\n  &.el-icon-circle-close {\n    line-height: 40px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".chatset": {
          ".el-input__inner,  .el-textarea__inner": {
            "background": "#fff",
            "border": "1px solid rgba(215, 215, 215, 1)"
          },
          ".el-textarea .el-input__count": {
            "background": "#fff"
          }
        }
      },
      {
        ".group-avatar": {
          "width": "30px",
          "height": "30px",
          "border-radius": "50%"
        },
        ".user-uploader-icon": {
          "font-size": "40px",
          "color": "#e9e8e8",
          "text-align": "center"
        }
      },
      {
        ".discussion": {
          "/deep/ .el-dialog__header": {
            "padding": "10px 20px"
          },
          "/deep/ .el-dialog__body": {
            "padding": "10px 20px"
          }
        },
        ".chatset": {
          "box-sizing": "border-box",
          "width": "100%",
          "padding": "0",
          "overflow-y": "scroll",
          ".formbox": {
            "width": "100%",
            "box-sizing": "border-box",
            "padding": "0 10px 0 0"
          },
          ".right": {
            "text-align": "right",
            "/deep/ .el-button--primary": {
              "margin-top": "30px"
            }
          },
          "/deep/ .el-form-item__label": {
            "color": "#333",
            "font-size": "13px",
            "font-weight": "400"
          },
          "/deep/ .el-input__inner,  .el-textarea__inner": {
            "color": "#333",
            "font-size": "13px",
            "font-weight": "400"
          },
          "/deep/ .el-radio__label": {
            "color": "#333",
            "font-size": "13px",
            "font-weight": "400"
          },
          "/deep/ .limtinput textarea": {
            "min-height": "50px",
            "max-height": "105px",
            "font-size": "13px"
          },
          "/deep/ .el-button--primary,  /deep/ .el-button--default": {
            "width": "84px",
            "height": "28px",
            "margin-top": "13px",
            "font-size": "13px"
          },
          "/deep/ .el-form-item__error": {
            "padding-top": "0"
          },
          ".group-typesel": {
            "margin-bottom": "0"
          },
          ".typesel": {
            "margin-bottom": "6px"
          },
          ".groupWord-img": {
            "margin-bottom": "10px"
          },
          ".groupWord": {
            "margin-bottom": "0"
          },
          ".notegroup": {
            "margin-bottom": "0",
            "/deep/ .el-form-item__content": {
              "line-height": "20px"
            },
            "/deep/ .el-textarea .el-input__count": {
              "bottom": "-20px"
            },
            "/deep/ .el-textarea__inner": {
              "padding": "8px"
            }
          },
          ".copyLink /deep/ .el-input__inner": {
            "font-size": "12px"
          }
        },
        ".demo-block": {
          "height": "50px",
          "/deep/ .el-loading-spinner": {
            "left": "-20%",
            "margin-top": "-25px"
          },
          "/deep/ .el-icon-loading": {
            "color": "#fff",
            "font-size": "12px"
          }
        },
        ".group-info-name": {
          "margin-bottom": "12px"
        },
        ".update-geoup": {
          "margin-bottom": "5px"
        },
        "/deep/ .el-select .el-input .el-select__caret": {
          "&.el-icon-circle-close": {
            "line-height": "40px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/components/GroupInfo.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"group-info\">\n    <div class=\"title\">\n      <span>{{ $t('book_community_0008') }}</span>\n      <i class=\"el-icon-close close-i\" @click=\"handleClose\"></i>\n    </div>\n    <div class=\"content\">\n      <div class=\"group-header\">\n        <img\n          :src=\"groupInfo.groupAvatar\"\n          class=\"group-avatar\"\n          alt=\"\"\n          @error=\"replaceImg\"\n        />\n        <span class=\"group-name\" :title=\"groupInfo.groupName\">{{\n          groupInfo.groupName\n        }}</span>\n        <div>\n          <span class=\"group-code\">ID: {{ groupInfo.groupCode }}</span>\n          <img\n            class=\"img_12\"\n            src=\"../../../../assets/images/group_share.png\"\n            @click=\"onShareGroup\"\n            alt\n          />\n        </div>\n      </div>\n      <img\n        src=\"../../../../assets/images/edit.png\"\n        v-show=\"authStatus == '1' || authStatus == '2'\"\n        @click=\"onEditGroupInfo\"\n        class=\"group-edit img_15\"\n        alt\n      />\n      <el-divider class=\"group-el-divider\" />\n      <div class=\"group-detail\">\n        <el-row>\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('Universal_0205') }}：</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div class=\"group-detail-info\">{{ groupInfo.region }}</div>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('chat_comm_manage_0013') }}：</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div class=\"group-detail-info\">{{ $t('Universal_0303', {value: groupInfo.maxPeople}) }}</div>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('chat_createcommunity_0010') }}：</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div class=\"group-detail-info\">\n              {{ groupInfo.groupTab | tabFilter(statusMap) }}\n            </div>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('chat_comm_set_0002') }}：</span>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"24\">\n            <div class=\"group-profile\">\n              <span>{{ decodeURI(groupInfo.groupProfile || \"\") }}</span>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </div>\n    <GroupShare\n      :group-info=\"groupInfo\"\n      :showAppealClosureNotice=\"showAppealClosureNotice\"\n      ref=\"groupShare\"\n      @groupInfoClose=\"handleClose\"\n      @toAppeal=\"toAppeal\"\n    />\n    <GroupInfoEdit\n      :info=\"groupInfo\"\n      @refreshGroupInfo=\"refreshGroupInfo\"\n      ref=\"groupEdit\"\n    />\n  </div>\n</template>\n\n<script>\nimport GroupShare from \"./GroupShare\";\nimport GroupInfoEdit from \"./GroupInfoEdit\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils\";\nexport default {\n  name: \"GroupInfo\",\n  components: {\n    GroupShare,\n    GroupInfoEdit,\n  },\n  props: {\n    groupInfo: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return \"1\";\n      },\n    },\n    showAppealClosureNotice: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n  },\n  data() {\n    return {\n      statusMap:  {\n        // \"\": \"-\",\n        // 0: \"-\",\n        1: this.$t('chat_createcommunity_0012'),\n        2: \"BTC\",\n        3: this.$t('chat_createcommunity_0014'),\n        4: this.$t('chat_createcommunity_0015'),\n        5: this.$t('chat_createcommunity_0016'),\n        6: this.$t('chat_createcommunity_0017'),\n        7: \"Defi\",\n        8: this.$t('chat_createcommunity_0019'),\n        9: this.$t('chat_createcommunity_0020'),\n        10: this.$t('chat_createcommunity_0021')\n      }\n    }\n  },\n  filters: {\n    tabFilter(status, statusMap) {\n      return statusMap[status]||\"\";\n    },\n  },\n  computed: {\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 11;\n      } else {\n        return 16;\n      }\n    },\n    valueWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 13;\n      } else {\n        return 8;\n      }\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit(\"closeDialog\");\n    },\n    onEditGroupInfo() {\n      this.$refs.groupEdit.onPop();\n    },\n    onShareGroup() {\n      this.$refs.groupShare.onPop();\n    },\n    refreshGroupInfo() {\n      this.$emit(\"refreshGroupInfo\");\n    },\n    toAppeal() {\n      console.log(\"3333333333333333333333\");\n      this.$emit(\"toAppeal\");\n    },\n    reloadGroupInfo() {\n      this.$forceUpdate();\n    },\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, \"group\");\n    },\n  },\n  created() {},\n};\n</script>",
    "originData": "\n<template>\n  <div class=\"group-info\">\n    <div class=\"title\">\n      <span>{{ $t('book_community_0008') }}</span>\n      <i class=\"el-icon-close close-i\" @click=\"handleClose\"></i>\n    </div>\n    <div class=\"content\">\n      <div class=\"group-header\">\n        <img\n          :src=\"groupInfo.groupAvatar\"\n          class=\"group-avatar\"\n          alt=\"\"\n          @error=\"replaceImg\"\n        />\n        <span class=\"group-name\" :title=\"groupInfo.groupName\">{{\n          groupInfo.groupName\n        }}</span>\n        <div>\n          <span class=\"group-code\">ID: {{ groupInfo.groupCode }}</span>\n          <img\n            class=\"img_12\"\n            src=\"../../../../assets/images/group_share.png\"\n            @click=\"onShareGroup\"\n            alt\n          />\n        </div>\n      </div>\n      <img\n        src=\"../../../../assets/images/edit.png\"\n        v-show=\"authStatus == '1' || authStatus == '2'\"\n        @click=\"onEditGroupInfo\"\n        class=\"group-edit img_15\"\n        alt\n      />\n      <el-divider class=\"group-el-divider\" />\n      <div class=\"group-detail\">\n        <el-row>\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('Universal_0205') }}：</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div class=\"group-detail-info\">{{ groupInfo.region }}</div>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('chat_comm_manage_0013') }}：</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div class=\"group-detail-info\">{{ $t('Universal_0303', {value: groupInfo.maxPeople}) }}</div>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('chat_createcommunity_0010') }}：</span>\n          </el-col>\n          <el-col :span=\"valueWidth\">\n            <div class=\"group-detail-info\">\n              {{ groupInfo.groupTab | tabFilter(statusMap) }}\n            </div>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"labelWidth\">\n            <span>{{ $t('chat_comm_set_0002') }}：</span>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"24\">\n            <div class=\"group-profile\">\n              <span>{{ decodeURI(groupInfo.groupProfile || \"\") }}</span>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </div>\n    <GroupShare\n      :group-info=\"groupInfo\"\n      :showAppealClosureNotice=\"showAppealClosureNotice\"\n      ref=\"groupShare\"\n      @groupInfoClose=\"handleClose\"\n      @toAppeal=\"toAppeal\"\n    />\n    <GroupInfoEdit\n      :info=\"groupInfo\"\n      @refreshGroupInfo=\"refreshGroupInfo\"\n      ref=\"groupEdit\"\n    />\n  </div>\n</template>\n\n<script>\nimport GroupShare from \"./GroupShare\";\nimport GroupInfoEdit from \"./GroupInfoEdit\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils\";\nexport default {\n  name: \"GroupInfo\",\n  components: {\n    GroupShare,\n    GroupInfoEdit,\n  },\n  props: {\n    groupInfo: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    authStatus: {\n      type: String,\n      default() {\n        return \"1\";\n      },\n    },\n    showAppealClosureNotice: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n  },\n  data() {\n    return {\n      statusMap:  {\n        // \"\": \"-\",\n        // 0: \"-\",\n        1: this.$t('chat_createcommunity_0012'),\n        2: \"BTC\",\n        3: this.$t('chat_createcommunity_0014'),\n        4: this.$t('chat_createcommunity_0015'),\n        5: this.$t('chat_createcommunity_0016'),\n        6: this.$t('chat_createcommunity_0017'),\n        7: \"Defi\",\n        8: this.$t('chat_createcommunity_0019'),\n        9: this.$t('chat_createcommunity_0020'),\n        10: this.$t('chat_createcommunity_0021')\n      }\n    }\n  },\n  filters: {\n    tabFilter(status, statusMap) {\n      return statusMap[status]||\"\";\n    },\n  },\n  computed: {\n    labelWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 11;\n      } else {\n        return 16;\n      }\n    },\n    valueWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return 13;\n      } else {\n        return 8;\n      }\n    }\n  },\n  methods: {\n    handleClose() {\n      this.$emit(\"closeDialog\");\n    },\n    onEditGroupInfo() {\n      this.$refs.groupEdit.onPop();\n    },\n    onShareGroup() {\n      this.$refs.groupShare.onPop();\n    },\n    refreshGroupInfo() {\n      this.$emit(\"refreshGroupInfo\");\n    },\n    toAppeal() {\n      console.log(\"3333333333333333333333\");\n      this.$emit(\"toAppeal\");\n    },\n    reloadGroupInfo() {\n      this.$forceUpdate();\n    },\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, \"group\");\n    },\n  },\n  created() {},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.group-info {\n  box-sizing: border-box;\n\n  font-size: 14px;\n  font-weight: 500;\n  color: #333;\n  width: 100%;\n  height: 100vh;\n  overflow-y: scroll;\n  user-select: text;\n  .outGroup {\n    box-sizing: border-box;\n    text-align: center;\n    color: red;\n    height: 50px;\n    line-height: 50px;\n    width: 100%;\n    background-color: #fbfbfb;\n    position: absolute;\n    bottom: 0;\n    span {\n      cursor: pointer;\n    }\n  }\n  .title:first-child {\n    position: absolute;\n    z-index: 1;\n  }\n  .title {\n    width: 100%;\n    height: 50px;\n    background-color: #fbfbfb;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-sizing: border-box;\n    padding: 0 20px;\n    span {\n      font-weight: 600;\n    }\n    .el-icon-close {\n      font-size: 14px;\n      color: #000;\n    }\n    .el-icon-right {\n      font-size: 20px;\n    }\n  }\n\n  .content {\n    box-sizing: border-box;\n    width: 100%;\n    background-color: #fff;\n    margin-top: 60px;\n    position: relative;\n    .group-avatar {\n      width: 50px;\n      height: 50px;\n      border-radius: 50%;\n    }\n    .group-name {\n      font-size: 12px;\n      color: #333333;\n      font-weight: bold;\n      max-width: 190px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: pre;\n      text-align: center;\n    }\n    .group-code {\n      font-size: 10px;\n      color: #999999;\n      margin-right: 5px;\n    }\n    .group-header {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: center;\n      height: 90px;\n    }\n    .group-edit {\n      position: absolute;\n      top: 0px;\n      right: 10px;\n    }\n    .group-el-divider {\n      margin: 10px 0;\n      background-color: #ececec;\n    }\n    .group-detail {\n      padding: 0 10px;\n      span {\n        color: #999999;\n        font-size: 13px;\n      }\n      .el-row {\n        margin-bottom: 10px;\n      }\n      .group-detail-info {\n        font-size: 13px;\n        word-break: break-word;\n        font-weight: 400;\n        color: #333;\n      }\n      .group-profile {\n        font-size: 13px;\n        color: #999999;\n        height: 40vh;\n      }\n      .group-profile span {\n        display: block;\n        height: 100%;\n        line-height: 2;\n        color: #333333;\n        overflow-y: auto;\n        word-wrap: break-word;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".group-info": {
          "box-sizing": "border-box",
          "font-size": "14px",
          "font-weight": "500",
          "color": "#333",
          "width": "100%",
          "height": "100vh",
          "overflow-y": "scroll",
          "user-select": "text",
          ".outGroup": {
            "box-sizing": "border-box",
            "text-align": "center",
            "color": "red",
            "height": "50px",
            "line-height": "50px",
            "width": "100%",
            "background-color": "#fbfbfb",
            "position": "absolute",
            "bottom": "0",
            "span": {
              "cursor": "pointer"
            }
          },
          ".title:first-child": {
            "position": "absolute",
            "z-index": "1"
          },
          ".title": {
            "width": "100%",
            "height": "50px",
            "background-color": "#fbfbfb",
            "display": "flex",
            "justify-content": "space-between",
            "align-items": "center",
            "box-sizing": "border-box",
            "padding": "0 20px",
            "span": {
              "font-weight": "600"
            },
            ".el-icon-close": {
              "font-size": "14px",
              "color": "#000"
            },
            ".el-icon-right": {
              "font-size": "20px"
            }
          },
          ".content": {
            "box-sizing": "border-box",
            "width": "100%",
            "background-color": "#fff",
            "margin-top": "60px",
            "position": "relative",
            ".group-avatar": {
              "width": "50px",
              "height": "50px",
              "border-radius": "50%"
            },
            ".group-name": {
              "font-size": "12px",
              "color": "#333333",
              "font-weight": "bold",
              "max-width": "190px",
              "overflow": "hidden",
              "text-overflow": "ellipsis",
              "white-space": "pre",
              "text-align": "center"
            },
            ".group-code": {
              "font-size": "10px",
              "color": "#999999",
              "margin-right": "5px"
            },
            ".group-header": {
              "display": "flex",
              "flex-direction": "column",
              "justify-content": "space-between",
              "align-items": "center",
              "height": "90px"
            },
            ".group-edit": {
              "position": "absolute",
              "top": "0px",
              "right": "10px"
            },
            ".group-el-divider": {
              "margin": "10px 0",
              "background-color": "#ececec"
            },
            ".group-detail": {
              "padding": "0 10px",
              "span": {
                "color": "#999999",
                "font-size": "13px"
              },
              ".el-row": {
                "margin-bottom": "10px"
              },
              ".group-detail-info": {
                "font-size": "13px",
                "word-break": "break-word",
                "font-weight": "400",
                "color": "#333"
              },
              ".group-profile": {
                "font-size": "13px",
                "color": "#999999",
                "height": "40vh"
              },
              ".group-profile span": {
                "display": "block",
                "height": "100%",
                "line-height": "2",
                "color": "#333333",
                "overflow-y": "auto",
                "word-wrap": "break-word"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/components/SilentMask.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"silent-mask\">\n    <img class=\"img_18\" src=\"../../../../assets/images/nowords.png\" alt />\n    <span v-if=\"fromType == '330'\">{{ $t('chat_0066') }}</span>\n    <span v-else-if=\"fromType == '326'\">{{ $t('chat_0062') }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SilentMask',\n  props: {\n    fromType: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  }\n};\n</script>",
    "originData": "\n<template>\n  <div class=\"silent-mask\">\n    <img class=\"img_18\" src=\"../../../../assets/images/nowords.png\" alt />\n    <span v-if=\"fromType == '330'\">{{ $t('chat_0066') }}</span>\n    <span v-else-if=\"fromType == '326'\">{{ $t('chat_0062') }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SilentMask',\n  props: {\n    fromType: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.silent-mask {\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.silent-mask img {\n  margin-right: 20px;\n}\n</style>\n\n",
    "cssJson": [
      {
        ".silent-mask": {
          "font-size": "18px",
          "display": "flex",
          "align-items": "center",
          "justify-content": "center"
        },
        ".silent-mask img": {
          "margin-right": "20px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/publish/Btns.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n  <div class=\"btns-wrap\">\n    <span @click=\"goBack\">返回</span>\n    <span @click=\"saveHand\">保存</span>\n    <span @click=\"publishHand\">发布</span>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    goBack() {\n      this.$router.push({\n        path: '/app/viewpoint'\n      });\n    },\n    saveHand() {\n      this.$emit('saveHand');\n    },\n    publishHand() {\n      this.$emit('publishHand');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n  <div class=\"btns-wrap\">\n    <span @click=\"goBack\">返回</span>\n    <span @click=\"saveHand\">保存</span>\n    <span @click=\"publishHand\">发布</span>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {};\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    goBack() {\n      this.$router.push({\n        path: '/app/viewpoint'\n      });\n    },\n    saveHand() {\n      this.$emit('saveHand');\n    },\n    publishHand() {\n      this.$emit('publishHand');\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.btns-wrap {\n  text-align: right;\n  padding: 0 20px;\n  span {\n    display: inline-block;\n    color: #fff;\n    padding: 9px 29px;\n    font-size: 16px;\n    border-radius: 4px;\n    margin-left: 20px;\n    background-color: #f57d00;\n    user-select: none;\n    &:nth-child(1) {\n      background-color: #9297a3;\n    }\n    &:nth-child(2) {\n      background-color: #2f54eb;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".btns-wrap": {
          "text-align": "right",
          "padding": "0 20px",
          "span": {
            "display": "inline-block",
            "color": "#fff",
            "padding": "9px 29px",
            "font-size": "16px",
            "border-radius": "4px",
            "margin-left": "20px",
            "background-color": "#f57d00",
            "user-select": "none",
            "&:nth-child(1)": {
              "background-color": "#9297a3"
            },
            "&:nth-child(2)": {
              "background-color": "#2f54eb"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/viewPoint/publish/UpoadImg.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 上传图片 -->\n<template>\n  <div>\n    <el-upload\n      :multiple=\"multiple\"\n      :action=\"actionUrl\"\n      :limit=\"limit\"\n      list-type=\"picture-card\"\n      :file-list=\"fileList\"\n      :on-preview=\"handlePictureCardPreview\"\n      :on-remove=\"handleRemove\"\n      :headers=\"headers\"\n      :on-success=\"handleAvatarSuccess\"\n      :before-upload=\"beforeUpload\"\n      :on-exceed=\"handleExceed\"\n    >\n      <i class=\"el-icon-plus\"></i>\n    </el-upload>\n    <el-dialog :visible.sync=\"dialogVisible\">\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { uploadPicture } from './server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    limit: {\n      type: Number,\n      default() {\n        return 9;\n      }\n    },\n    multiple: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    fileList: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    uoploadImgList: {\n      type: Object,\n      default() {\n        return {\n          picShortObjs: [],\n          picObjs: []\n        };\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      // imgList: [],\n      actionUrl: uploadPicture(),\n      dialogImageUrl: '',\n      dialogVisible: false,\n      headers: {\n        Authorization: localStorage.getItem('accessToken')\n      },\n      picShortObjs: [],\n      picObjs: [],\n      uploadImgListData: this.uoploadImgList\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    uoploadImgList(val) {\n      this.uploadImgListData = val;\n    }\n  },\n  //方法集合\n  methods: {\n    handleExceed() {\n      this.$message.warning(`当前限制选择${this.limit}个文件`);\n    },\n    handleRemove(file, fileList) {\n      this.uploadImgListData.picShortObjs = [];\n      this.uploadImgListData.picObjs = [];\n      // this.picShortObjs = [];\n      // this.picObjs = [];\n\n      fileList.map(item => {\n        if (item.response) {\n          // 新增文件的时候\n          this.uploadImgListData.picShortObjs.push(item.response.data.jaPicShortArra[0]);\n          this.uploadImgListData.picObjs.push(item.response.data.jaPicArra[0]);\n        } else {\n          // 从待发布过来带来默认的值\n          this.uploadImgListData.picShortObjs.push(item);\n          this.uploadImgListData.picObjs.push(item);\n        }\n      });\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    handleAvatarSuccess(val, file, fileList) {\n      //\n      this.uploadImgListData.picShortObjs = [];\n      this.uploadImgListData.picObjs = [];\n      if (val.code == '200') {\n        fileList.map(item => {\n          if (item.response) {\n            // 新增文件的时候\n            this.uploadImgListData.picShortObjs.push(item.response.data.jaPicShortArra[0]);\n            this.uploadImgListData.picObjs.push(item.response.data.jaPicArra[0]);\n          } else {\n            // 从待发布过来带来默认的值\n            this.uploadImgListData.picShortObjs.push(item);\n            this.uploadImgListData.picObjs.push(item);\n          }\n        });\n        // this.picShortObjs.push(val.data.jaPicShortArra[0]);\n        // this.picObjs.push(val.data.jaPicArra[0]);\n      } else {\n        this.$message.error(val.msg);\n      }\n    },\n    beforeUpload(files) {\n      const isLt2M = files.size / 1024 / 1024 < 3;\n      const textArr = files.name.split('.');\n      const isPng = textArr[textArr.length - 1];\n      if (isPng.toLocaleLowerCase() == 'jpg' || isPng.toLocaleLowerCase() == 'png') {\n        if (!isLt2M) {\n          this.$message.error('单个文件不可超过3 MB!');\n          return false;\n        }\n      } else {\n        this.$message('仅支持上传png、jpg格式的文件');\n        return false;\n      }\n      //\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 上传图片 -->\n<template>\n  <div>\n    <el-upload\n      :multiple=\"multiple\"\n      :action=\"actionUrl\"\n      :limit=\"limit\"\n      list-type=\"picture-card\"\n      :file-list=\"fileList\"\n      :on-preview=\"handlePictureCardPreview\"\n      :on-remove=\"handleRemove\"\n      :headers=\"headers\"\n      :on-success=\"handleAvatarSuccess\"\n      :before-upload=\"beforeUpload\"\n      :on-exceed=\"handleExceed\"\n    >\n      <i class=\"el-icon-plus\"></i>\n    </el-upload>\n    <el-dialog :visible.sync=\"dialogVisible\">\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { uploadPicture } from './server';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    limit: {\n      type: Number,\n      default() {\n        return 9;\n      }\n    },\n    multiple: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    fileList: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    uoploadImgList: {\n      type: Object,\n      default() {\n        return {\n          picShortObjs: [],\n          picObjs: []\n        };\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      // imgList: [],\n      actionUrl: uploadPicture(),\n      dialogImageUrl: '',\n      dialogVisible: false,\n      headers: {\n        Authorization: localStorage.getItem('accessToken')\n      },\n      picShortObjs: [],\n      picObjs: [],\n      uploadImgListData: this.uoploadImgList\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    uoploadImgList(val) {\n      this.uploadImgListData = val;\n    }\n  },\n  //方法集合\n  methods: {\n    handleExceed() {\n      this.$message.warning(`当前限制选择${this.limit}个文件`);\n    },\n    handleRemove(file, fileList) {\n      this.uploadImgListData.picShortObjs = [];\n      this.uploadImgListData.picObjs = [];\n      // this.picShortObjs = [];\n      // this.picObjs = [];\n\n      fileList.map(item => {\n        if (item.response) {\n          // 新增文件的时候\n          this.uploadImgListData.picShortObjs.push(item.response.data.jaPicShortArra[0]);\n          this.uploadImgListData.picObjs.push(item.response.data.jaPicArra[0]);\n        } else {\n          // 从待发布过来带来默认的值\n          this.uploadImgListData.picShortObjs.push(item);\n          this.uploadImgListData.picObjs.push(item);\n        }\n      });\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    handleAvatarSuccess(val, file, fileList) {\n      //\n      this.uploadImgListData.picShortObjs = [];\n      this.uploadImgListData.picObjs = [];\n      if (val.code == '200') {\n        fileList.map(item => {\n          if (item.response) {\n            // 新增文件的时候\n            this.uploadImgListData.picShortObjs.push(item.response.data.jaPicShortArra[0]);\n            this.uploadImgListData.picObjs.push(item.response.data.jaPicArra[0]);\n          } else {\n            // 从待发布过来带来默认的值\n            this.uploadImgListData.picShortObjs.push(item);\n            this.uploadImgListData.picObjs.push(item);\n          }\n        });\n        // this.picShortObjs.push(val.data.jaPicShortArra[0]);\n        // this.picObjs.push(val.data.jaPicArra[0]);\n      } else {\n        this.$message.error(val.msg);\n      }\n    },\n    beforeUpload(files) {\n      const isLt2M = files.size / 1024 / 1024 < 3;\n      const textArr = files.name.split('.');\n      const isPng = textArr[textArr.length - 1];\n      if (isPng.toLocaleLowerCase() == 'jpg' || isPng.toLocaleLowerCase() == 'png') {\n        if (!isLt2M) {\n          this.$message.error('单个文件不可超过3 MB!');\n          return false;\n        }\n      } else {\n        this.$message('仅支持上传png、jpg格式的文件');\n        return false;\n      }\n      //\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.upload-img {\n  .upload-img-list {\n    width: 100px;\n    height: 75px;\n    float: left;\n    position: relative;\n    margin-right: 20px;\n    margin-bottom: 20px;\n    overflow: hidden;\n    background-color: #fff;\n    border: 1px solid #c0ccda;\n    border-radius: 6px;\n    box-sizing: border-box;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n    .remove_logo {\n      position: absolute;\n      right: 5px;\n      top: 5px;\n    }\n  }\n  .plus {\n    background: #ededf0;\n    text-align: center;\n    line-height: 75px;\n    font-size: 20px;\n    color: #9297a3;\n    display: inline-block;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".upload-img": {
          ".upload-img-list": {
            "width": "100px",
            "height": "75px",
            "float": "left",
            "position": "relative",
            "margin-right": "20px",
            "margin-bottom": "20px",
            "overflow": "hidden",
            "background-color": "#fff",
            "border": "1px solid #c0ccda",
            "border-radius": "6px",
            "box-sizing": "border-box",
            "img": {
              "width": "100%",
              "height": "100%"
            },
            ".remove_logo": {
              "position": "absolute",
              "right": "5px",
              "top": "5px"
            }
          },
          ".plus": {
            "background": "#ededf0",
            "text-align": "center",
            "line-height": "75px",
            "font-size": "20px",
            "color": "#9297a3",
            "display": "inline-block"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/contact/discussion/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--  -->\n<template>\n<el-scrollbar class=\"scroll-color\" ref=\"scroll\">\n  <div class=\"contract-group-wrap\">\n    <ul class=\"contract-group-ul\">\n      <li v-if=\"list && list.length > 0\">\n        <ul class=\"contract-group-item\">\n          <li\n            v-for=\"(item, index) in list\"\n            :key=\"index\"\n            class=\"flex align-center\"\n            :class=\"{ active: isSelect == item.groupId }\"\n            @click=\"handGoChat({ ...item, status: 1 })\"\n            @contextmenu.prevent=\"rightClick(item)\"\n          >\n            <img\n              width=\"40px\"\n              height=\"40px\"\n              style=\"margin-right: 10px; border-radius: 50%\"\n              v-if=\"item.targetType == '2' && item.groupType == '0'\"\n              :src=\"findImage(item.groupAvatar) | hand_group_avatar\"\n              alt\n            />\n            <DiscussionIcon :name=\"item.groupName\" v-else />\n            <span class=\"flex-sub text-cut discussionName pre-wrap\">{{ item.groupName }}</span>\n            ({{ item.people }})\n            <!-- <span class=\"flex-sub text-cut\">{{item.id }}</span> -->\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <GroupUpgrade :info=\"currentDiscussionInfo\" ref=\"groupUpgrade\" @updateContactListAndRouter=\"_updateContactListAndRouter\" />\n  </div>\n</el-scrollbar>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapMutations } from 'vuex';\nimport { CLEAR_CHAT } from '@/store/types';\nimport fileOperational from '@/services/fileOperational';\nimport DiscussionIcon from '@/components/memberIcon/DiscussionIcon';\nimport contextmenuMixin from \"../mixin/contextmenuMixin\"\nimport GroupUpgrade from \"../../chat/discussion/components/GroupUpgrade\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { DiscussionIcon, GroupUpgrade },\n  mixins:[contextmenuMixin],\n  props: {\n    availableScrollHeight:Number,\n    list: {\n      type: Array,\n      dafault() {\n        return [];\n      }\n    },\n    flagGroup: {\n      type: Number,\n      default() {\n        return 1;\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      flag: 1,\n      isSelect: this.$route.query.isSelect?\"this.$route.query.isSelect\":'',\n      groupType:'0',\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    handGoChat(item) {\n      this.isSelect = item.groupId;\n      // debugger\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: this.flagGroup,\n          id: item.groupId,\n          targetId: item.groupId,\n          nickName: item.groupName,\n          headImg: item.groupAvatar,\n          num: item.people,\n          authStatus: item.status,\n          name: 'discussion',\n          groupType: item.groupType\n        }\n      });\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--  -->\n<template>\n<el-scrollbar class=\"scroll-color\" ref=\"scroll\">\n  <div class=\"contract-group-wrap\">\n    <ul class=\"contract-group-ul\">\n      <li v-if=\"list && list.length > 0\">\n        <ul class=\"contract-group-item\">\n          <li\n            v-for=\"(item, index) in list\"\n            :key=\"index\"\n            class=\"flex align-center\"\n            :class=\"{ active: isSelect == item.groupId }\"\n            @click=\"handGoChat({ ...item, status: 1 })\"\n            @contextmenu.prevent=\"rightClick(item)\"\n          >\n            <img\n              width=\"40px\"\n              height=\"40px\"\n              style=\"margin-right: 10px; border-radius: 50%\"\n              v-if=\"item.targetType == '2' && item.groupType == '0'\"\n              :src=\"findImage(item.groupAvatar) | hand_group_avatar\"\n              alt\n            />\n            <DiscussionIcon :name=\"item.groupName\" v-else />\n            <span class=\"flex-sub text-cut discussionName pre-wrap\">{{ item.groupName }}</span>\n            ({{ item.people }})\n            <!-- <span class=\"flex-sub text-cut\">{{item.id }}</span> -->\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <GroupUpgrade :info=\"currentDiscussionInfo\" ref=\"groupUpgrade\" @updateContactListAndRouter=\"_updateContactListAndRouter\" />\n  </div>\n</el-scrollbar>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { mapMutations } from 'vuex';\nimport { CLEAR_CHAT } from '@/store/types';\nimport fileOperational from '@/services/fileOperational';\nimport DiscussionIcon from '@/components/memberIcon/DiscussionIcon';\nimport contextmenuMixin from \"../mixin/contextmenuMixin\"\nimport GroupUpgrade from \"../../chat/discussion/components/GroupUpgrade\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: { DiscussionIcon, GroupUpgrade },\n  mixins:[contextmenuMixin],\n  props: {\n    availableScrollHeight:Number,\n    list: {\n      type: Array,\n      dafault() {\n        return [];\n      }\n    },\n    flagGroup: {\n      type: Number,\n      default() {\n        return 1;\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      flag: 1,\n      isSelect: this.$route.query.isSelect?\"this.$route.query.isSelect\":'',\n      groupType:'0',\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    handGoChat(item) {\n      this.isSelect = item.groupId;\n      // debugger\n      this.$router.push({\n        path: '/app/contact/info',\n        query: {\n          flag: this.flagGroup,\n          id: item.groupId,\n          targetId: item.groupId,\n          nickName: item.groupName,\n          headImg: item.groupAvatar,\n          num: item.people,\n          authStatus: item.status,\n          name: 'discussion',\n          groupType: item.groupType\n        }\n      });\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.discussionName {\n  max-width: 70%;\n  overflow: hidden;\n  display: inline-block;\n  text-overflow: ellipsis;\n}\n.text-cut {\n  padding-left: 10px;\n}\n.contract-group-wrap {\n  padding-bottom: 100px;\n  .contract-group-title {\n    padding: 15px 10px 0;\n    font-size: 14px;\n    color: #999;\n  }\n  .contract-group-item {\n    li {\n      height: 66px;\n      // height: 60px;\n      padding: 0 10px;\n      border-bottom: 1px solid #e4e4e4;\n      background-color: #fff;\n      // &:last-child {\n      //   border-bottom: none;\n      // }\n    }\n  }\n}\n.active {\n  background-color: #e4e4e4 !important;\n}\n</style>\n",
    "cssJson": [
      {
        ".discussionName": {
          "max-width": "70%",
          "overflow": "hidden",
          "display": "inline-block",
          "text-overflow": "ellipsis"
        },
        ".text-cut": {
          "padding-left": "10px"
        },
        ".contract-group-wrap": {
          "padding-bottom": "100px",
          ".contract-group-title": {
            "padding": "15px 10px 0",
            "font-size": "14px",
            "color": "#999"
          },
          ".contract-group-item": {
            "li": {
              "height": "66px",
              "padding": "0 10px",
              "border-bottom": "1px solid #e4e4e4",
              "background-color": "#fff"
            }
          }
        },
        ".active": {
          "background-color": "#e4e4e4 !important"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/add-friends-group/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 添加好友，发起群聊 -->\n<template>\n  <div class>\n    <el-popover placement=\"left\" width=\"130\" trigger=\"click\">\n      <ul class=\"text-center\">\n        <li style=\"line-height: 30px; border-bottom: 1px solid #eee\" @click=\"addHand\">\n          加好友/加社区\n        </li>\n        <li style=\"line-height: 30px\" @click=\"handOpenGroup\">发起群聊</li>\n      </ul>\n    </el-popover>\n    <DialogGroupVisible :dialogGroupVisible=\"groupVisible\" @handCloseGroup=\"handCloseGroup\" />\n    <AddFriGrop v-if=\"addOrderVisible\" :visible.sync=\"addOrderVisible\" @handCloseFri=\"handCloseFri\" />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport DialogGroupVisible from './dialog/sceate-groups';\nimport AddFriGrop from './add';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DialogGroupVisible,\n    // DialogAddFriendVisible,\n    AddFriGrop\n  },\n  data() {\n    //这里存放数据\n    return {\n      groupVisible: false,\n      dialogAddFriendsVisible: false,\n      addOrderVisible: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    addHand() {\n      this.addOrderVisible = true;\n    },\n    handOpenGroup() {\n      // 打开发起群聊弹框\n      this.groupVisible = true;\n      this.dialogAddFriendsVisible = true;\n    },\n    handCloseGroup() {\n      // 关闭发起群聊弹框\n      this.groupVisible = false;\n    },\n    handCloseFri() {\n      this.addOrderVisible = false;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 添加好友，发起群聊 -->\n<template>\n  <div class>\n    <el-popover placement=\"left\" width=\"130\" trigger=\"click\">\n      <ul class=\"text-center\">\n        <li style=\"line-height: 30px; border-bottom: 1px solid #eee\" @click=\"addHand\">\n          加好友/加社区\n        </li>\n        <li style=\"line-height: 30px\" @click=\"handOpenGroup\">发起群聊</li>\n      </ul>\n    </el-popover>\n    <DialogGroupVisible :dialogGroupVisible=\"groupVisible\" @handCloseGroup=\"handCloseGroup\" />\n    <AddFriGrop v-if=\"addOrderVisible\" :visible.sync=\"addOrderVisible\" @handCloseFri=\"handCloseFri\" />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nimport DialogGroupVisible from './dialog/sceate-groups';\nimport AddFriGrop from './add';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DialogGroupVisible,\n    // DialogAddFriendVisible,\n    AddFriGrop\n  },\n  data() {\n    //这里存放数据\n    return {\n      groupVisible: false,\n      dialogAddFriendsVisible: false,\n      addOrderVisible: false\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    addHand() {\n      this.addOrderVisible = true;\n    },\n    handOpenGroup() {\n      // 打开发起群聊弹框\n      this.groupVisible = true;\n      this.dialogAddFriendsVisible = true;\n    },\n    handCloseGroup() {\n      // 关闭发起群聊弹框\n      this.groupVisible = false;\n    },\n    handCloseFri() {\n      this.addOrderVisible = false;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n#contact-add-btn {\n  position: fixed;\n  left: 250px;\n  top: 90%;\n  transform: translateY(-80%);\n}\n</style>\n",
    "cssJson": [
      {
        "#contact-add-btn": {
          "position": "fixed",
          "left": "250px",
          "top": "90%",
          "transform": "translateY(-80%)"
        }
      }
    ]
  },
  {
    "type": "css",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/assets/css/base.css",
    "importInfo": null,
    "originData": ".mess-head {\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  display: inline-block;\n}\n.mess-head img {\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n}\n\n.user-head {\n  background-size: 100%;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin: 0 0 10px 0;\n  cursor: pointer;\n}\n\n.user-head img {\n  display: block;\n  border-radius: 50%;\n  width: 34px;\n  height: 34px;\n}\n\n.userAvater img {\n  /* 5px */\n  margin-left: 0px;\n  margin-top: 44px;\n}\n",
    "cssJson": {
      ".mess-head": {
        "width": "44px",
        "height": "44px",
        "border-radius": "50%",
        "display": "inline-block"
      },
      ".mess-head img": {
        "width": "44px",
        "height": "44px",
        "border-radius": "50%"
      },
      ".user-head": {
        "background-size": "100%",
        "width": "50px",
        "height": "50px",
        "border-radius": "50%",
        "margin": "0 0 10px 0",
        "cursor": "pointer"
      },
      ".user-head img": {
        "display": "block",
        "border-radius": "50%",
        "width": "34px",
        "height": "34px"
      },
      ".userAvater img": {
        "margin-left": "0px",
        "margin-top": "44px"
      }
    }
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberCard/EditableTextArea.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"editable-textarea\">\n    <div v-show=\"!isEdit\" @click=\"onClick\" :class=\"isCurrentUser ? 'target-name target-name-border' : 'target-name'\" :title=\"targetValue\">\n      {{ targetValue }}\n    </div>\n    <el-input\n      show-word-limit\n      type=\"textarea\"\n      :maxlength=\"50\"\n      :rows=\"3\"\n      v-show=\"isEdit && isCurrentUser\"\n      v-model=\"inputValue\"\n      @blur=\"onBlur($event)\"\n      ref=\"targetInput\"\n      size=\"mini\"\n    ></el-input>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'EditableTextArea',\n  data() {\n    return {\n      isEdit: false,\n      inputValue: ''\n    };\n  },\n  props: {\n    targetValue: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetLabel: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    maxsize: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    isCurrentUser: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  methods: {\n    onClick() {\n      this.isEdit = !this.isEdit;\n      if (!this.isCurrentUser) {\n        this.isEdit = !this.isEdit;\n      }\n      setTimeout(() => {\n        this.inputValue = this.targetValue;\n        let currentInput = this.$refs.targetInput;\n        let pos = currentInput.value.length;\n        currentInput.focus();\n        currentInput.selectionStart = pos;\n        currentInput.selectionEnd = pos;\n      }, 100);\n    },\n    onBlur(e) {\n      this.isEdit = !this.isEdit;\n      if (e.target.value != this.targetValue) {\n        this.$emit('updateUserInfo', this.targetLabel, e.target.value);\n      }\n    }\n  },\n  mounted() {\n    this.edit = this.isEdit;\n  }\n};\n</script>",
    "originData": "<template>\n  <div class=\"editable-textarea\">\n    <div v-show=\"!isEdit\" @click=\"onClick\" :class=\"isCurrentUser ? 'target-name target-name-border' : 'target-name'\" :title=\"targetValue\">\n      {{ targetValue }}\n    </div>\n    <el-input\n      show-word-limit\n      type=\"textarea\"\n      :maxlength=\"50\"\n      :rows=\"3\"\n      v-show=\"isEdit && isCurrentUser\"\n      v-model=\"inputValue\"\n      @blur=\"onBlur($event)\"\n      ref=\"targetInput\"\n      size=\"mini\"\n    ></el-input>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'EditableTextArea',\n  data() {\n    return {\n      isEdit: false,\n      inputValue: ''\n    };\n  },\n  props: {\n    targetValue: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetLabel: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    maxsize: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    isCurrentUser: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  methods: {\n    onClick() {\n      this.isEdit = !this.isEdit;\n      if (!this.isCurrentUser) {\n        this.isEdit = !this.isEdit;\n      }\n      setTimeout(() => {\n        this.inputValue = this.targetValue;\n        let currentInput = this.$refs.targetInput;\n        let pos = currentInput.value.length;\n        currentInput.focus();\n        currentInput.selectionStart = pos;\n        currentInput.selectionEnd = pos;\n      }, 100);\n    },\n    onBlur(e) {\n      this.isEdit = !this.isEdit;\n      if (e.target.value != this.targetValue) {\n        this.$emit('updateUserInfo', this.targetLabel, e.target.value);\n      }\n    }\n  },\n  mounted() {\n    this.edit = this.isEdit;\n  }\n};\n</script>\n\n<style scoped>\n.editable-textarea {\n  user-select: text;\n}\nspan {\n  width: 100%;\n  height: 18px;\n  display: inline-block;\n}\n.target-name {\n  min-height: 18px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n}\n.target-name-border {\n  border: 1px #fff solid;\n}\n.target-name-border:hover {\n  border: 1px #dddddd solid;\n}\n</style>\n",
    "cssJson": [
      {
        ".editable-textarea": {
          "user-select": "text"
        },
        "span": {
          "width": "100%",
          "height": "18px",
          "display": "inline-block"
        },
        ".target-name": {
          "min-height": "18px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "display": "-webkit-box",
          "-webkit-line-clamp": "3",
          "-webkit-box-orient": "vertical"
        },
        ".target-name-border": {
          "border": "1px #fff solid"
        },
        ".target-name-border:hover": {
          "border": "1px #dddddd solid"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberCard/EditableRadio.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"editable-radio\">\n    <span v-show=\"!isEdit\" @click=\"onClick\" class=\"radio-target-name\">{{ targetValue }}</span>\n    <div v-show=\"isEdit && isCurrentUser\" class=\"radio-group\" @blur=\"onBlur\" @onmouseover=\"onMouseover\" ref=\"radiogroup\">\n      <el-radio-group v-model=\"inputValue\" @change=\"onChange\" size=\"mini\">\n        <el-radio-button :label=\"$t('my_information_0010')\" />\n        <el-radio-button :label=\"$t('my_information_0011')\" />\n      </el-radio-group>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'EditableRadio',\n  data() {\n    return {\n      isEdit: false,\n      inputValue: '',\n      radioValue: ''\n    };\n  },\n  props: {\n    targetValue: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetLabel: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    maxsize: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    radioEdit: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    isCurrentUser: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  methods: {\n    onClick() {\n      this.isEdit = !this.isEdit;\n      if (!this.isCurrentUser) {\n        this.isEdit = !this.isEdit;\n      }\n      setTimeout(() => {\n        this.inputValue = this.targetValue;\n      }, 100);\n    },\n    onMouseover() {\n      this.$refs.radiogroup.focus();\n    },\n    onBlur() {\n      this.isEdit = !this.isEdit;\n    },\n    onChange() {\n      this.isEdit = !this.isEdit;\n      this.$emit('updateUserInfo', this.targetLabel, this.inputValue);\n    },\n    initEditableRadio() {\n      this.isEdit = false;\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div class=\"editable-radio\">\n    <span v-show=\"!isEdit\" @click=\"onClick\" class=\"radio-target-name\">{{ targetValue }}</span>\n    <div v-show=\"isEdit && isCurrentUser\" class=\"radio-group\" @blur=\"onBlur\" @onmouseover=\"onMouseover\" ref=\"radiogroup\">\n      <el-radio-group v-model=\"inputValue\" @change=\"onChange\" size=\"mini\">\n        <el-radio-button :label=\"$t('my_information_0010')\" />\n        <el-radio-button :label=\"$t('my_information_0011')\" />\n      </el-radio-group>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'EditableRadio',\n  data() {\n    return {\n      isEdit: false,\n      inputValue: '',\n      radioValue: ''\n    };\n  },\n  props: {\n    targetValue: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetLabel: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    maxsize: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    radioEdit: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    isCurrentUser: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  methods: {\n    onClick() {\n      this.isEdit = !this.isEdit;\n      if (!this.isCurrentUser) {\n        this.isEdit = !this.isEdit;\n      }\n      setTimeout(() => {\n        this.inputValue = this.targetValue;\n      }, 100);\n    },\n    onMouseover() {\n      this.$refs.radiogroup.focus();\n    },\n    onBlur() {\n      this.isEdit = !this.isEdit;\n    },\n    onChange() {\n      this.isEdit = !this.isEdit;\n      this.$emit('updateUserInfo', this.targetLabel, this.inputValue);\n    },\n    initEditableRadio() {\n      this.isEdit = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.editable-input {\n  user-select: text;\n}\nspan {\n  width: 40%;\n  height: 18px;\n  display: inline-block;\n}\n.radio-target-name {\n  user-select: text;\n  border: 1px #fff solid;\n}\n.radio-target-name:hover {\n  border: 1px #dddddd solid;\n}\n</style>\n",
    "cssJson": [
      {
        ".editable-input": {
          "user-select": "text"
        },
        "span": {
          "width": "40%",
          "height": "18px",
          "display": "inline-block"
        },
        ".radio-target-name": {
          "user-select": "text",
          "border": "1px #fff solid"
        },
        ".radio-target-name:hover": {
          "border": "1px #dddddd solid"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/memberCard/EditableSelect.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"editable-input\">\n    <span v-show=\"!isEdit\" @click=\"onClick\" :class=\"isCurrentUser ? 'select-target-name' : ''\">{{ targetValue }}</span>\n\n    <el-select\n      v-show=\"isEdit && isCurrentUser\"\n      v-model=\"countryName\"\n      size=\"mini\"\n      class=\"editable-select\"\n      clearable\n      filterable\n      :placeholder=\"$t('Universal_0211')\"\n      @change=\"getAreaList\"\n      @clear=\"clearCountry\"\n    >\n      <el-option :label=\"item.name\" :value=\"item.id\" v-for=\"item in countryList\" :key=\"item.id\"></el-option>\n    </el-select>\n    <el-select\n      v-show=\"isEdit && isCurrentUser\"\n      v-model=\"cityName\"\n      size=\"mini\"\n      class=\"editable-select\"\n      clearable\n      filterable\n      :placeholder=\"$t('Universal_0387')\"\n      @change=\"setCity\"\n      @clear=\"clearCity\"\n      :disabled=\"areaDisabled\"\n    >\n      <el-option :label=\"item.name\" :value=\"item.id\" v-for=\"item in areaList\" :key=\"item.id\"></el-option>\n    </el-select>\n  </div>\n</template>\n\n<script>\nimport { base_country_list, base_area_list } from '@/server.js';\n\nexport default {\n  name: 'EditableSelect',\n  data() {\n    return {\n      isEdit: false,\n      inputValue: '',\n      countryName: '',\n      cityName: '',\n      countryCode: '',\n      cityCode: '',\n      countryList: [],\n      areaList: [],\n      areaDisabled: false,\n      countrys: this.country\n    };\n  },\n  props: {\n    targetValue: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetLabel: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    maxsize: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetType: {\n      type: String,\n      default() {\n        return 'text';\n      }\n    },\n    country: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    city: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    isCurrentUser: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  methods: {\n    async getCountryList() {\n      console.log('this.countrys = ', this.countrys);\n      console.log('this.city = ', this.city);\n      let res = await base_country_list();\n      this.countryList = res.data;\n      if (this.countrys) {\n        let selectCountry = this.countryList.find(item => item.code == this.countrys);\n        let countryId = selectCountry.id;\n        this.countryName = selectCountry.id;\n        this.countryCode = selectCountry.code;\n        await this.getAreaList(countryId);\n        if (this.city) {\n          this.cityName = this.areaList.find(item => item.code == this.city).id;\n          this.cityCode = this.areaList.find(item => item.code == this.city).code;\n        }\n      } else {\n        this.cityName = '';\n        this.cityCode = '';\n        this.countrys = '';\n        this.areaDisabled = true;\n      }\n    },\n    async getAreaList(fatherId) {\n      if (fatherId) {\n        let res = await base_area_list({ fatherId });\n        this.cityName = '';\n        this.areaList = res.data;\n        this.areaDisabled = false;\n      }\n    },\n    setCity() {\n      this.countryCode = this.countryList.find(item => item.id == this.countryName).code;\n      this.cityCode = this.areaList.find(item => item.id == this.cityName).code;\n      this.$emit('updateUserInfo', this.targetLabel, this.countryCode, this.cityCode);\n    },\n    clearCountry() {\n      this.areaList = [];\n      this.countryName = '';\n      this.cityName = '';\n      this.countryCode = '';\n      this.cityCode = '';\n      this.areaDisabled = true;\n    },\n    clearCity() {\n      //this.city = '';\n      this.cityName = '';\n      this.cityCode = '';\n    },\n    onClick() {\n      this.isEdit = !this.isEdit;\n      if (!this.isCurrentUser) {\n        this.isEdit = !this.isEdit;\n      }\n      if (!this.countrys) {\n        this.countryName = '';\n      }\n      if (!this.city) {\n        this.cityName = '';\n      }\n      this.getCountryList();\n    },\n    initEditableSelect() {\n      this.isEdit = false;\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div class=\"editable-input\">\n    <span v-show=\"!isEdit\" @click=\"onClick\" :class=\"isCurrentUser ? 'select-target-name' : ''\">{{ targetValue }}</span>\n\n    <el-select\n      v-show=\"isEdit && isCurrentUser\"\n      v-model=\"countryName\"\n      size=\"mini\"\n      class=\"editable-select\"\n      clearable\n      filterable\n      :placeholder=\"$t('Universal_0211')\"\n      @change=\"getAreaList\"\n      @clear=\"clearCountry\"\n    >\n      <el-option :label=\"item.name\" :value=\"item.id\" v-for=\"item in countryList\" :key=\"item.id\"></el-option>\n    </el-select>\n    <el-select\n      v-show=\"isEdit && isCurrentUser\"\n      v-model=\"cityName\"\n      size=\"mini\"\n      class=\"editable-select\"\n      clearable\n      filterable\n      :placeholder=\"$t('Universal_0387')\"\n      @change=\"setCity\"\n      @clear=\"clearCity\"\n      :disabled=\"areaDisabled\"\n    >\n      <el-option :label=\"item.name\" :value=\"item.id\" v-for=\"item in areaList\" :key=\"item.id\"></el-option>\n    </el-select>\n  </div>\n</template>\n\n<script>\nimport { base_country_list, base_area_list } from '@/server.js';\n\nexport default {\n  name: 'EditableSelect',\n  data() {\n    return {\n      isEdit: false,\n      inputValue: '',\n      countryName: '',\n      cityName: '',\n      countryCode: '',\n      cityCode: '',\n      countryList: [],\n      areaList: [],\n      areaDisabled: false,\n      countrys: this.country\n    };\n  },\n  props: {\n    targetValue: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetLabel: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    maxsize: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    targetType: {\n      type: String,\n      default() {\n        return 'text';\n      }\n    },\n    country: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    city: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    isCurrentUser: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  methods: {\n    async getCountryList() {\n      console.log('this.countrys = ', this.countrys);\n      console.log('this.city = ', this.city);\n      let res = await base_country_list();\n      this.countryList = res.data;\n      if (this.countrys) {\n        let selectCountry = this.countryList.find(item => item.code == this.countrys);\n        let countryId = selectCountry.id;\n        this.countryName = selectCountry.id;\n        this.countryCode = selectCountry.code;\n        await this.getAreaList(countryId);\n        if (this.city) {\n          this.cityName = this.areaList.find(item => item.code == this.city).id;\n          this.cityCode = this.areaList.find(item => item.code == this.city).code;\n        }\n      } else {\n        this.cityName = '';\n        this.cityCode = '';\n        this.countrys = '';\n        this.areaDisabled = true;\n      }\n    },\n    async getAreaList(fatherId) {\n      if (fatherId) {\n        let res = await base_area_list({ fatherId });\n        this.cityName = '';\n        this.areaList = res.data;\n        this.areaDisabled = false;\n      }\n    },\n    setCity() {\n      this.countryCode = this.countryList.find(item => item.id == this.countryName).code;\n      this.cityCode = this.areaList.find(item => item.id == this.cityName).code;\n      this.$emit('updateUserInfo', this.targetLabel, this.countryCode, this.cityCode);\n    },\n    clearCountry() {\n      this.areaList = [];\n      this.countryName = '';\n      this.cityName = '';\n      this.countryCode = '';\n      this.cityCode = '';\n      this.areaDisabled = true;\n    },\n    clearCity() {\n      //this.city = '';\n      this.cityName = '';\n      this.cityCode = '';\n    },\n    onClick() {\n      this.isEdit = !this.isEdit;\n      if (!this.isCurrentUser) {\n        this.isEdit = !this.isEdit;\n      }\n      if (!this.countrys) {\n        this.countryName = '';\n      }\n      if (!this.city) {\n        this.cityName = '';\n      }\n      this.getCountryList();\n    },\n    initEditableSelect() {\n      this.isEdit = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.editable-input {\n  user-select: text;\n}\nspan {\n  width: 90%;\n  height: 18px;\n  display: inline-block;\n}\n.select-target-name {\n  user-select: text;\n  border: 1px #fff solid;\n}\n.select-target-name:hover {\n  border: 1px #dddddd solid;\n}\n.editable-select {\n  width: 100px;\n}\n</style>\n",
    "cssJson": [
      {
        ".editable-input": {
          "user-select": "text"
        },
        "span": {
          "width": "90%",
          "height": "18px",
          "display": "inline-block"
        },
        ".select-target-name": {
          "user-select": "text",
          "border": "1px #fff solid"
        },
        ".select-target-name:hover": {
          "border": "1px #dddddd solid"
        },
        ".editable-select": {
          "width": "100px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/add-friends-group/add/index.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 添加好友 -->\n<template>\n  <el-dialog\n    :visible.sync=\"visible\"\n    class=\"add-friends\"\n    width=\"400px\"\n    append-to-body\n    :modal-append-to-body=\"false\"\n    :modal=\"false\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    :before-close=\"beforeClose\"\n    custom-class=\"dialog-position\"\n  >\n    <div class=\"contact-list-wraps\">\n      <ul ref=\"ul\" @click=\"tabHand\">\n        <li :class=\"activeIndex == 0 ? 'active' : ''\" data-index=\"0\">\n          {{ $t('chat_addfriend_0001') }}\n        </li>\n        <li :class=\"activeIndex == 1 ? 'active' : ''\" data-index=\"1\">\n          {{ $t('chat_joincommunity_0001') }}\n        </li>\n      </ul>\n      <div class=\"tab-list-item\">\n        <Friend v-show=\"activeIndex == 0\" \n        :isCon=\"activeIndex == 1 ? 1 : 0\" \n        @handleColseFri=\"handleClosed\" \n        :inviteCode=\"inviteCode\" :addFriVisible=\"activeIndex == 0\"/>\n        <Group v-show=\"activeIndex == 1\" \n        :isCon=\"activeIndex == 0 ? 1 : 0\" \n        @handleClose=\"handleClosed\" \n        :inviteCode=\"inviteCode\" :addGroupVisible=\"activeIndex == 1\"/>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Friend from './friends';\nimport Group from './group';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Friend,\n    Group\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    inviteCode: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    index: {\n      type: Number,\n      default() {\n        return 0;\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      activeName: 'first',\n      activeIndex: 0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    handleClosed() {\n      this.$emit('handCloseFri', false);\n      this.$emit('update:visible', false);\n    },\n    beforeClose() {\n      this.$emit('update:visible', false);\n    },\n    tabHand(e) {\n      if (e.target.nodeName.toLowerCase() === 'li') {\n        let arrLi = [...this.$refs.ul.children];\n        // let arrLi = document.querySelectorAll(`#common-tab-wrap${this.data.length} li`);\n        e.target.className = 'active';\n        this.activeIndex = e.target.getAttribute('data-index');\n        arrLi.map((item, index) => {\n          if (this.activeIndex != index) {\n            item.classList.remove('active');\n          }\n        });\n        // this.$emit('tabClickHand',this.data[activeIndex], activeIndex)\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    if (this.index) {\n      this.activeIndex = this.index;\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 添加好友 -->\n<template>\n  <el-dialog\n    :visible.sync=\"visible\"\n    class=\"add-friends\"\n    width=\"400px\"\n    append-to-body\n    :modal-append-to-body=\"false\"\n    :modal=\"false\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    :before-close=\"beforeClose\"\n    custom-class=\"dialog-position\"\n  >\n    <div class=\"contact-list-wraps\">\n      <ul ref=\"ul\" @click=\"tabHand\">\n        <li :class=\"activeIndex == 0 ? 'active' : ''\" data-index=\"0\">\n          {{ $t('chat_addfriend_0001') }}\n        </li>\n        <li :class=\"activeIndex == 1 ? 'active' : ''\" data-index=\"1\">\n          {{ $t('chat_joincommunity_0001') }}\n        </li>\n      </ul>\n      <div class=\"tab-list-item\">\n        <Friend v-show=\"activeIndex == 0\" \n        :isCon=\"activeIndex == 1 ? 1 : 0\" \n        @handleColseFri=\"handleClosed\" \n        :inviteCode=\"inviteCode\" :addFriVisible=\"activeIndex == 0\"/>\n        <Group v-show=\"activeIndex == 1\" \n        :isCon=\"activeIndex == 0 ? 1 : 0\" \n        @handleClose=\"handleClosed\" \n        :inviteCode=\"inviteCode\" :addGroupVisible=\"activeIndex == 1\"/>\n      </div>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport Friend from './friends';\nimport Group from './group';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    Friend,\n    Group\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    inviteCode: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    index: {\n      type: Number,\n      default() {\n        return 0;\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      activeName: 'first',\n      activeIndex: 0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    handleClosed() {\n      this.$emit('handCloseFri', false);\n      this.$emit('update:visible', false);\n    },\n    beforeClose() {\n      this.$emit('update:visible', false);\n    },\n    tabHand(e) {\n      if (e.target.nodeName.toLowerCase() === 'li') {\n        let arrLi = [...this.$refs.ul.children];\n        // let arrLi = document.querySelectorAll(`#common-tab-wrap${this.data.length} li`);\n        e.target.className = 'active';\n        this.activeIndex = e.target.getAttribute('data-index');\n        arrLi.map((item, index) => {\n          if (this.activeIndex != index) {\n            item.classList.remove('active');\n          }\n        });\n        // this.$emit('tabClickHand',this.data[activeIndex], activeIndex)\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    if (this.index) {\n      this.activeIndex = this.index;\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.add-friends {\n  /deep/ .dialog-position {\n    margin-top: 12vh !important;\n    margin-left: 45vw !important;\n  }\n\n  /deep/ .el-dialog__header {\n    padding: 20px 20px 0;\n  }\n\n  /deep/ .el-dialog__headerbtn {\n    top: 10px;\n  }\n\n  /deep/ .el-dialog__body {\n    padding: 0 10px 20px 0px;\n    min-height: 220px;\n  }\n}\n\n.contact-list-wraps {\n  width: 100%;\n  position: relative;\n\n  ul {\n    width: 100%;\n    // height: 48px;  //sandy\n    // background:rgba(243,243,243,1);//sandy\n    line-height: 48px;\n    display: flex;\n    justify-content: space-around;\n    li {\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: 500;\n      height: 20px;\n      color: #999999;\n      line-height: 20px;\n      margin-bottom: 10px;\n\n      &.active {\n        color: #333333;\n      }\n    }\n  }\n  // .tab-list-item {\n  //   background-color: #fcfbfb;\n  //   height: calc(100vh-100px);\n  //   overflow-y: scroll;\n  // }\n}\n</style>\n",
    "cssJson": [
      {
        ".add-friends": {
          "/deep/ .dialog-position": {
            "margin-top": "12vh !important",
            "margin-left": "45vw !important"
          },
          "/deep/ .el-dialog__header": {
            "padding": "20px 20px 0"
          },
          "/deep/ .el-dialog__headerbtn": {
            "top": "10px"
          },
          "/deep/ .el-dialog__body": {
            "padding": "0 10px 20px 0px",
            "min-height": "220px"
          }
        },
        ".contact-list-wraps": {
          "width": "100%",
          "position": "relative",
          "ul": {
            "width": "100%",
            "line-height": "48px",
            "display": "flex",
            "justify-content": "space-around",
            "li": {
              "cursor": "pointer",
              "font-size": "14px",
              "font-weight": "500",
              "height": "20px",
              "color": "#999999",
              "line-height": "20px",
              "margin-bottom": "10px",
              "&.active": {
                "color": "#333333"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/add-friends-group/dialog/sceate-groups.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 发起群聊 -->\n<template>\n  <div class=\"chat-create\">\n    <el-dialog\n      :show-close=\"false\"\n      :title=\"boxTitle\"\n      @close=\"handCloseGroup\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :width=\"dialogWidth\"\n      :visible=\"dialogGroupVisible\"\n      :center=\"true\"\n      class=\"chatCreate\"\n    >\n      <ChatSetting ref=\"chatSet\" @boxTitleFn=\"boxTitleFn\" @CloseDialog=\"getMsgFormSon\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport ChatSetting from '@/view/chatSetting';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  props: {\n    dialogGroupVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  components: {\n    ChatSetting\n  },\n  data() {\n    //这里存放数据\n    return {\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    // boxTitle() {\n    //   return this.$t('chat_createcommunity_0001');\n    // },\n    boxTitle:{\n      get(){\n        return this.$t('chat_createcommunity_0001');\n      },\n      set(){} \n    },\n    dialogWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '420px';\n      } else {\n        return '500px';\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    boxTitleFn(val) {\n      console.log(val);\n      this.boxTitle = val;\n    },\n    resetFroms() {\n      this.$nextTick(() => {\n        this.$refs.chatSet.resetForm();\n      });\n    },\n    getMsgFormSon() {\n      this.$emit('handCloseGroup', false);\n      this.$refs.chatSet.resetForm();\n    },\n    handCloseGroup() {\n      this.$emit('handCloseGroup', false);\n      this.$refs.chatSet.resetForm();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.boxTitle = this.$t('chat_createcommunity_0001');\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 发起群聊 -->\n<template>\n  <div class=\"chat-create\">\n    <el-dialog\n      :show-close=\"false\"\n      :title=\"boxTitle\"\n      @close=\"handCloseGroup\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :width=\"dialogWidth\"\n      :visible=\"dialogGroupVisible\"\n      :center=\"true\"\n      class=\"chatCreate\"\n    >\n      <ChatSetting ref=\"chatSet\" @boxTitleFn=\"boxTitleFn\" @CloseDialog=\"getMsgFormSon\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport ChatSetting from '@/view/chatSetting';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  props: {\n    dialogGroupVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  components: {\n    ChatSetting\n  },\n  data() {\n    //这里存放数据\n    return {\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    // boxTitle() {\n    //   return this.$t('chat_createcommunity_0001');\n    // },\n    boxTitle:{\n      get(){\n        return this.$t('chat_createcommunity_0001');\n      },\n      set(){} \n    },\n    dialogWidth() {\n      if (this.$i18n.locale.includes('zh')) {\n        return '420px';\n      } else {\n        return '500px';\n      }\n    }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    boxTitleFn(val) {\n      console.log(val);\n      this.boxTitle = val;\n    },\n    resetFroms() {\n      this.$nextTick(() => {\n        this.$refs.chatSet.resetForm();\n      });\n    },\n    getMsgFormSon() {\n      this.$emit('handCloseGroup', false);\n      this.$refs.chatSet.resetForm();\n    },\n    handCloseGroup() {\n      this.$emit('handCloseGroup', false);\n      this.$refs.chatSet.resetForm();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.boxTitle = this.$t('chat_createcommunity_0001');\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.chatCreate {\n  top: -50px !important;\n}\n\n.chatCreate {\n  /deep/ .el-dialog__header {\n    padding-top: 10px;\n  }\n  /deep/ .el-dialog__title {\n    color: #333;\n    font-size: 14px;\n\n    font-weight: 500;\n  }\n\n  /deep/ .el-dialog__headerbtn {\n    top: 15px;\n  }\n  /deep/ .el-dialog--center .el-dialog__body {\n    padding-top: 10px;\n  }\n\n  /deep/ .el-dialog__body {\n    height: 460px;\n    padding-bottom: 10px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".chatCreate": {
          "top": "-50px !important",
          "/deep/ .el-dialog__header": {
            "padding-top": "10px"
          },
          "/deep/ .el-dialog__title": {
            "color": "#333",
            "font-size": "14px",
            "font-weight": "500"
          },
          "/deep/ .el-dialog__headerbtn": {
            "top": "15px"
          },
          "/deep/ .el-dialog--center .el-dialog__body": {
            "padding-top": "10px"
          },
          "/deep/ .el-dialog__body": {
            "height": "460px",
            "padding-bottom": "10px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/GroupAndInviteChat.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>",
      "2": "<style lang=\"less\">"
    },
    "importInfo": {},
    "keepContent": "<!-- 通用设置--消息转发-搜索联系人/群ID或关键字 -->\n<template>\n  <el-dialog\n    title\n    append-to-body\n    :modal-append-to-body=\"false\"\n    :modal=\"false\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    class=\"invite-mem-dialog-con\"\n    @close=\"closeDia\"\n    :visible=\"GroupInviteVisible\"\n    width=\"570px\"\n    :destroy-on-close=\"true\"\n  >\n    <div slot=\"title\" class=\"header-title\">\n      <span class=\"title-name\">{{ title }}</span>\n    </div>\n    \n    <el-row v-loading=\"loading\" element-loading-spinner=\"el-icon-loading\" :element-loading-text=\"$t('Universal_0025')\">\n      <el-col :span=\"12\" class=\"invite-mem-dialog-border\">\n        <div class=\"invite-mem-dialog-left\">\n          <el-input\n            size=\"small\"\n            :placeholder=\"$t('Universal_0360')\"\n            prefix-icon=\"el-icon-search\"\n            v-model=\"searchInput\"\n            @input=\"onFilter\"\n            clearable\n            class=\"inputIcon\"\n            id=\"forwardMsg\"\n            :code=\"GroupInviteVisible\"\n          ></el-input>\n          <ul class=\"menu widthDt\" v-show=\"!searchInput\">\n            <li\n              :class=\"item.active ? 'active' : ''\"\n              v-for=\"item in menuList\"\n              :key=\"item.path\"\n              @click=\"Tocomponent(item.path)\"\n            >\n              {{ item.name }}\n            </li>\n          </ul>\n          <div class=\"lists\" v-show=\"!searchInput\">\n            <component\n              v-show=\"GroupInviteVisible\"\n              ref=\"com\"\n              :is=\"comName\"\n              :limitGroupIdArr=\"limitGroupIdArr\"\n              @GetSelectObj=\"GetSelectObj\"\n              @refreshLoading=\"refreshLoading\"\n              :loading='loading'\n            ></component>\n          </div>\n\n          <ul class=\"menu\" v-show=\"searchInput\">\n            <li class=\"active\" v-for=\"item in searchMenuList\" :key=\"item.path\">\n              {{ item.name }}\n            </li>\n          </ul>\n          <div class=\"lists searchInfoClass\" v-show=\"searchInput\">\n            <SearchInfo\n              @GetSelectObj=\"GetSelectObj\"\n              ref=\"searchinfo\"\n              :showFriendflag=\"showFriendflag\"\n              :limitGroupIdArr=\"limitGroupIdArr\"\n              :keyword=\"searchInput\"\n            >\n            </SearchInfo>\n          </div>\n        </div>\n      </el-col>\n      <el-col :span=\"12\">\n        <CheckSelect\n          v-if=\"dataup\"\n          :SelectObj.sync=\"SelectObj\"\n          @confirmDialogHand=\"confirmDialogHand\"\n          @cancelDialogHand=\"cancelDialogHand\"\n          @removeSelect=\"removeSelect\"\n        />\n      </el-col>\n    </el-row>\n  </el-dialog>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport store from \"@/store\";\nimport FriendList from \"./friendList\";\nimport GroupList from \"./groupList\";\nimport RelationList from \"./relationList\";\nimport CheckSelect from \"./checkSelect\";\nimport SearchInfo from \"./SearchInfo\";\nimport DiscussionInfo from \"./DiscussionInfo\";\nimport transfer from \"../../view/chat/transfer\";\nimport { getSelfUserId } from \"@/utils/const\";\nimport { viewLimitGroupByUserId } from \"../chat/server\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    FriendList,\n    GroupList,\n    RelationList,\n    CheckSelect,\n    SearchInfo,\n    DiscussionInfo,\n  },\n  props: {\n    GroupInviteVisible: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    title: {\n      type: String,\n    },\n    postcard: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    shareGroup: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    mergeTransfer: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    showAppealClosureNotice: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    mergeTransferName: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    from: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    discussionFriendId: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    authStatus: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    groupId: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    groupInfo: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n  data() {\n    //这里存放数据\n    return {\n      showFriendflag: false, //是否只展示好友列表\n      menuList: [],\n      comName: \"\",\n      searchInput: \"\",\n      SelectObj: [],\n      dataup: false,\n      comvisible: false,\n      selectedIds: [],\n      members: [],\n      searchMenuList: [\n        {\n          active: true,\n          name: \"\",\n          path: \"SearchInfo\",\n        },\n      ],\n      loading: false,\n      limitGroupIdArr: [],\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n\n  //监控data中的数据变化\n  watch: {\n    async GroupInviteVisible(val) {\n      this.loading = true;\n      if (val) {\n        try {\n          viewLimitGroupByUserId({\n            userId: UserInfoUtils.getCurrentUserId(),\n          }).then((res) => {\n            if (res.code === \"200\") {\n              this.limitGroupIdArr = res.data?.limitGroupId || [];\n            }\n            // this.loading = false;\n          });\n        } catch (error) {\n          // this.loading = false;\n        }\n        if (this.title) {\n          if (this.title == this.$t(\"Universal_0202\")) {\n            this.showFriendflag = false;\n            this.members = [];\n            this.Tocomponent(\"FriendList\");\n            this.menuList = [\n              {\n                active: true,\n                name: this.$t(\"chat_select_chat_0009\"),\n                path: \"FriendList\",\n              },\n              {\n                name: this.$t(\"chat_search_0003\"),\n                path: \"RelationList\",\n              },\n              {\n                name: this.$t(\"chat_search_0005\"),\n                path: \"GroupList\",\n              },\n              {\n                name: this.$t(\"chat_search_0007\"),\n                path: \"DiscussionInfo\",\n              },\n            ];\n          } else if (this.title == this.$t(\"chat_comm_invite_0001\")) {\n            await store.dispatch(\"GET_MEM_LIST\", this.groupId);\n            this.members = store.state.search.membList.filter(\n              (item) => item.is_show == \"true\"\n            );\n            this.Tocomponent(\"RelationList\");\n            this.showFriendflag = true;\n            this.menuList = [\n              {\n                name: this.$t(\"Universal_0317\"),\n                path: \"RelationList\",\n              },\n            ];\n          } else if (this.title == this.$t(\"chat_select_chat_0002\")) {\n            if (this.from == \"single\") {\n              this.members = [{ id: this.discussionFriendId, is_show: \"true\" }];\n            } else {\n              await store.dispatch(\"GET_MEM_LIST\", this.groupId);\n              this.members = store.state.search.membList.filter(\n                (item) => item.is_show == \"true\"\n              );\n            }\n            this.Tocomponent(\"RelationList\");\n            this.menuList = [\n              {\n                name: this.$t(\"Universal_0317\"),\n                path: \"RelationList\",\n              },\n            ];\n          }\n        }\n      }\n    },\n  },\n  //方法集合\n  methods: {\n    Tocomponent(name) {\n      this.loading = true;\n      this.comName = name;\n      // setTimeout(() => {\n      //   this.$nextTick(() => {\n      //     this.$refs.com.init(\n      //       this.selectedIds,\n      //       this.searchInput,\n      //       this.members,\n      //       this.showAppealClosureNotice\n      //     );\n      //   });\n      // }, 700);\n      this.$nextTick(() => {\n        this.$refs.com.init(\n          this.selectedIds,\n          this.searchInput,\n          this.members,\n          this.showAppealClosureNotice\n        );\n      });\n\n      for (let i in this.menuList) {\n        if (this.menuList[i].path == name) {\n          this.menuList[i].active = true;\n        } else {\n          this.menuList[i].active = false;\n        }\n      }\n    },\n\n    refreshLoading() {\n      this.loading = false\n    },\n\n    cancelDialogHand() {\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    async confirmDialogHand(obj) {\n      const netStatus = store.state.common.netStatus;\n      // if (netStatus == 'offline') {\n      //   this.$emit(\"transferSuccess\");\n      //   this.closeDia();\n      //   return;\n      // }\n      if (this.title == this.$t(\"Universal_0202\")) {\n        if (obj) {\n          this.loading = true;\n          let transferResult = \"\";\n          for (let item of obj) {\n            if (item.targetType == 2) {\n              if (await this.isForbiddenWordsInGroup(item)) {\n                continue;\n              }\n            }\n            if (this.postcard) {\n              await transfer.sendPostcard(item.friendId, item.targetType);\n            } else if (this.shareGroup) {\n              await transfer.sendShareGroup(item.friendId, item.targetType);\n            } else if (this.mergeTransfer) {\n              transferResult = await transfer.mergeTransfer(\n                item.friendId,\n                item.targetType,\n                this.mergeTransferName\n              );\n              if (transferResult != \"\") {\n                this.loading = false;\n                const msg = this.$t(\"chat_0047\");\n                this.$alert(msg, this.$t(\"Universal_0059\"), {\n                  confirmButtonText: this.$t(\"book_group_0019\"),\n                  center: true,\n                  showClose: true,\n                  customClass: \"message-box-class\",\n                }).then(() => {\n                  setTimeout(() => {\n                    this.$emit(\"transferSuccess\");\n                    this.closeDia();\n                  }, 1);\n                });\n                return;\n              }\n            } else {\n              await transfer.sendTxt(item.friendId, item.targetType);\n            }\n          }\n          this.loading = false;\n          if (netStatus != \"offline\" && transferResult != \"\") {\n            this.$message({\n              type: \"success\",\n              message: this.$t(\"chat_0109\"),\n            });\n          }\n          this.$emit(\"transferSuccess\");\n          this.closeDia();\n        }\n      } else if (\n        this.title == this.$t(\"chat_comm_invite_0001\") ||\n        this.title == this.$t(\"chat_select_chat_0002\")\n      ) {\n        this.$emit(\"confirmDialogHand\", obj);\n      }\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    async isForbiddenWordsInGroup(item) {\n      let groupMember = await window.vm\n        .$knex(\"t_groups_member\")\n        .where({ id: this.currentUserId() })\n        .where(\"group_id\", \"=\", item.friendId)\n        .select();\n      if (\n        groupMember &&\n        groupMember.length > 0 &&\n        groupMember[0].auth_status != 3\n      ) {\n        return false;\n      }\n      let group = await window.vm\n        .$knex(\"t_groups\")\n        .where(\"group_id\", \"=\", item.friendId)\n        .select();\n      // let groupAuth = await window.vm.$knex(\"t_groups_member_auth\")\n      //   .where({ 'user_id': this.currentUserId() })\n      //   .where('group_id', '=', item.friendId).select();\n      if (\n        groupMember[0].auth_status == 3 &&\n        (group[0].forbiddenWordsStatus == 0 ||\n          groupMember[0].forbiddenWordsStatus == 1)\n      ) {\n        return true;\n      }\n      return false;\n    },\n    closeDia() {\n      this.searchInput = \"\";\n      this.dataup = false;\n      this.SelectObj = [];\n      this.selectedIds.map((id) => this.removeSelect(id));\n      this.selectedIds = [];\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    GetSelectObj(obj) {\n      let message = this.selectValidate(obj);\n      if (message) {\n        if (\n          this.title == this.$t(\"chat_select_chat_0002\") &&\n          this.from == \"discussion\" &&\n          this.authStatus == \"1\"\n        ) {\n          this.removeSelect(obj.id);\n          this.openConfirmMessage(message);\n          return;\n        } else {\n          this.removeSelect(obj.id);\n          this.openMessage(message);\n          return;\n        }\n      }\n      let inSelect = this.SelectObj.filter((item) => item.id == obj.id);\n      if (inSelect.length == 0) {\n        this.SelectObj.push(obj);\n        this.selectedIds.push(obj.id);\n      } else {\n        if (!obj.checked) {\n          this.SelectObj = this.SelectObj.filter((item) => item.id != obj.id);\n          this.selectedIds = this.selectedIds.filter((item) => item != obj.id);\n        }\n      }\n      this.dataup = false;\n      // let selected = obj.filter(item => item.checked == true);\n      // if (selected.length > 9) {\n      //   this.$message.warning('联系人不能超过9个')\n      // } else {\n      //   this.SelectObj = selected;\n      // }\n      this.$nextTick(() => {\n        this.dataup = true;\n      });\n      this.$refs.com.init(this.selectedIds, this.searchInput, this.members);\n    },\n    selectValidate(obj) {\n      console.log(\n        this.authStatus,\n        \"authsataus\",\n        this.selectedIds,\n        this.members,\n        this.groupInfo\n      );\n      if (!this.members.length) {\n        return \"\";\n      }\n      if (this.selectedIds.length == 9) {\n        if (\n          this.selectedIds.indexOf(obj.id) == -1 &&\n          this.title == this.$t(\"Universal_0202\")\n        ) {\n          return this.$t(\"Universal_0232\");\n        }\n      }\n      if (\n        this.title == this.$t(\"chat_select_chat_0002\") &&\n        this.from == \"single\"\n      ) {\n        if (\n          this.selectedIds.indexOf(obj.id) == -1 &&\n          this.selectedIds.length + this.members.length >= 19\n        ) {\n          return this.$t(\"book_group_0006\");\n        }\n      }\n      if (\n        this.title == this.$t(\"chat_select_chat_0002\") &&\n        this.from == \"discussion\"\n      ) {\n        if (\n          this.selectedIds.indexOf(obj.id) == -1 &&\n          this.selectedIds.length +\n            this.members.filter((m) => m.is_show == \"true\").length >=\n            20\n        ) {\n          return this.$t(\"book_group_0006\");\n        }\n      }\n\n      if (\n        this.from == \"group\" &&\n        this.selectedIds.indexOf(obj.id) == -1 &&\n        this.selectedIds.length + this.members.length >=\n          this.groupInfo.maxPeople\n      ) {\n        if (this.authStatus == \"3\") {\n          return this.$t(\"chat_comm_member_0007\", {\n            max: this.groupInfo.maxPeople,\n          });\n        } else {\n          return this.$t(\"chat_comm_member_0007\", {\n            max: this.groupInfo.maxPeople,\n          });\n          // return this.$t('chat_comm_member_0006');\n        }\n      }\n      return \"\";\n    },\n    onFilter() {\n      if (this.searchInput) {\n        //显示搜索面板内容\n        this.Tocomponent(\"SearchInfo\");\n        this.$nextTick(() => {\n          this.$refs.searchinfo.search(this.selectedIds, this.members);\n        });\n      } else {\n        if (\n          this.title == this.$t(\"chat_comm_invite_0001\") ||\n          this.title == this.$t(\"chat_select_chat_0002\")\n        ) {\n          this.Tocomponent(\"RelationList\");\n          this.$nextTick(() => {\n            this.$refs.com.init(\n              this.selectedIds,\n              this.searchInput,\n              this.members\n            );\n          });\n        } else {\n          this.Tocomponent(\"FriendList\");\n          this.$nextTick(() => {\n            this.$refs.com.init(\n              this.selectedIds,\n              this.searchInput,\n              this.members\n            );\n          });\n        }\n      }\n      this.loading = false;\n    },\n    removeSelect(id) {\n      this.SelectObj = this.SelectObj.filter((item) => item.id != id);\n      this.selectedIds = this.selectedIds.filter((item) => item != id);\n      if (this.searchInput) {\n        this.$refs?.searchinfo?.removeSelectedItem(id);\n      } else {\n        this.$refs?.com?.removeSelectedItem(id);\n      }\n    },\n    openMessage(msg) {\n      this.$alert(msg, \"\", {\n        confirmButtonText: this.$t(\"book_group_0019\"),\n        center: true,\n        showClose: true,\n        customClass: \"message-box-class\",\n      });\n    },\n    openConfirmMessage(msg) {\n      this.$confirm(msg, \"\", {\n        confirmButtonText: this.$t(\"Universal_0045\"),\n        cancelButtonText: this.$t(\"Universal_0063\"),\n        center: true,\n        showClose: true,\n      })\n        .then(() => {\n          this.$emit(\"upgradeGroup\");\n        })\n        .catch(() => {});\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 通用设置--消息转发-搜索联系人/群ID或关键字 -->\n<template>\n  <el-dialog\n    title\n    append-to-body\n    :modal-append-to-body=\"false\"\n    :modal=\"false\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    class=\"invite-mem-dialog-con\"\n    @close=\"closeDia\"\n    :visible=\"GroupInviteVisible\"\n    width=\"570px\"\n    :destroy-on-close=\"true\"\n  >\n    <div slot=\"title\" class=\"header-title\">\n      <span class=\"title-name\">{{ title }}</span>\n    </div>\n    \n    <el-row v-loading=\"loading\" element-loading-spinner=\"el-icon-loading\" :element-loading-text=\"$t('Universal_0025')\">\n      <el-col :span=\"12\" class=\"invite-mem-dialog-border\">\n        <div class=\"invite-mem-dialog-left\">\n          <el-input\n            size=\"small\"\n            :placeholder=\"$t('Universal_0360')\"\n            prefix-icon=\"el-icon-search\"\n            v-model=\"searchInput\"\n            @input=\"onFilter\"\n            clearable\n            class=\"inputIcon\"\n            id=\"forwardMsg\"\n            :code=\"GroupInviteVisible\"\n          ></el-input>\n          <ul class=\"menu widthDt\" v-show=\"!searchInput\">\n            <li\n              :class=\"item.active ? 'active' : ''\"\n              v-for=\"item in menuList\"\n              :key=\"item.path\"\n              @click=\"Tocomponent(item.path)\"\n            >\n              {{ item.name }}\n            </li>\n          </ul>\n          <div class=\"lists\" v-show=\"!searchInput\">\n            <component\n              v-show=\"GroupInviteVisible\"\n              ref=\"com\"\n              :is=\"comName\"\n              :limitGroupIdArr=\"limitGroupIdArr\"\n              @GetSelectObj=\"GetSelectObj\"\n              @refreshLoading=\"refreshLoading\"\n              :loading='loading'\n            ></component>\n          </div>\n\n          <ul class=\"menu\" v-show=\"searchInput\">\n            <li class=\"active\" v-for=\"item in searchMenuList\" :key=\"item.path\">\n              {{ item.name }}\n            </li>\n          </ul>\n          <div class=\"lists searchInfoClass\" v-show=\"searchInput\">\n            <SearchInfo\n              @GetSelectObj=\"GetSelectObj\"\n              ref=\"searchinfo\"\n              :showFriendflag=\"showFriendflag\"\n              :limitGroupIdArr=\"limitGroupIdArr\"\n              :keyword=\"searchInput\"\n            >\n            </SearchInfo>\n          </div>\n        </div>\n      </el-col>\n      <el-col :span=\"12\">\n        <CheckSelect\n          v-if=\"dataup\"\n          :SelectObj.sync=\"SelectObj\"\n          @confirmDialogHand=\"confirmDialogHand\"\n          @cancelDialogHand=\"cancelDialogHand\"\n          @removeSelect=\"removeSelect\"\n        />\n      </el-col>\n    </el-row>\n  </el-dialog>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport store from \"@/store\";\nimport FriendList from \"./friendList\";\nimport GroupList from \"./groupList\";\nimport RelationList from \"./relationList\";\nimport CheckSelect from \"./checkSelect\";\nimport SearchInfo from \"./SearchInfo\";\nimport DiscussionInfo from \"./DiscussionInfo\";\nimport transfer from \"../../view/chat/transfer\";\nimport { getSelfUserId } from \"@/utils/const\";\nimport { viewLimitGroupByUserId } from \"../chat/server\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    FriendList,\n    GroupList,\n    RelationList,\n    CheckSelect,\n    SearchInfo,\n    DiscussionInfo,\n  },\n  props: {\n    GroupInviteVisible: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    title: {\n      type: String,\n    },\n    postcard: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    shareGroup: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    mergeTransfer: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    showAppealClosureNotice: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    mergeTransferName: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    from: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    discussionFriendId: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    authStatus: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    groupId: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    groupInfo: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n  data() {\n    //这里存放数据\n    return {\n      showFriendflag: false, //是否只展示好友列表\n      menuList: [],\n      comName: \"\",\n      searchInput: \"\",\n      SelectObj: [],\n      dataup: false,\n      comvisible: false,\n      selectedIds: [],\n      members: [],\n      searchMenuList: [\n        {\n          active: true,\n          name: \"\",\n          path: \"SearchInfo\",\n        },\n      ],\n      loading: false,\n      limitGroupIdArr: [],\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n\n  //监控data中的数据变化\n  watch: {\n    async GroupInviteVisible(val) {\n      this.loading = true;\n      if (val) {\n        try {\n          viewLimitGroupByUserId({\n            userId: UserInfoUtils.getCurrentUserId(),\n          }).then((res) => {\n            if (res.code === \"200\") {\n              this.limitGroupIdArr = res.data?.limitGroupId || [];\n            }\n            // this.loading = false;\n          });\n        } catch (error) {\n          // this.loading = false;\n        }\n        if (this.title) {\n          if (this.title == this.$t(\"Universal_0202\")) {\n            this.showFriendflag = false;\n            this.members = [];\n            this.Tocomponent(\"FriendList\");\n            this.menuList = [\n              {\n                active: true,\n                name: this.$t(\"chat_select_chat_0009\"),\n                path: \"FriendList\",\n              },\n              {\n                name: this.$t(\"chat_search_0003\"),\n                path: \"RelationList\",\n              },\n              {\n                name: this.$t(\"chat_search_0005\"),\n                path: \"GroupList\",\n              },\n              {\n                name: this.$t(\"chat_search_0007\"),\n                path: \"DiscussionInfo\",\n              },\n            ];\n          } else if (this.title == this.$t(\"chat_comm_invite_0001\")) {\n            await store.dispatch(\"GET_MEM_LIST\", this.groupId);\n            this.members = store.state.search.membList.filter(\n              (item) => item.is_show == \"true\"\n            );\n            this.Tocomponent(\"RelationList\");\n            this.showFriendflag = true;\n            this.menuList = [\n              {\n                name: this.$t(\"Universal_0317\"),\n                path: \"RelationList\",\n              },\n            ];\n          } else if (this.title == this.$t(\"chat_select_chat_0002\")) {\n            if (this.from == \"single\") {\n              this.members = [{ id: this.discussionFriendId, is_show: \"true\" }];\n            } else {\n              await store.dispatch(\"GET_MEM_LIST\", this.groupId);\n              this.members = store.state.search.membList.filter(\n                (item) => item.is_show == \"true\"\n              );\n            }\n            this.Tocomponent(\"RelationList\");\n            this.menuList = [\n              {\n                name: this.$t(\"Universal_0317\"),\n                path: \"RelationList\",\n              },\n            ];\n          }\n        }\n      }\n    },\n  },\n  //方法集合\n  methods: {\n    Tocomponent(name) {\n      this.loading = true;\n      this.comName = name;\n      // setTimeout(() => {\n      //   this.$nextTick(() => {\n      //     this.$refs.com.init(\n      //       this.selectedIds,\n      //       this.searchInput,\n      //       this.members,\n      //       this.showAppealClosureNotice\n      //     );\n      //   });\n      // }, 700);\n      this.$nextTick(() => {\n        this.$refs.com.init(\n          this.selectedIds,\n          this.searchInput,\n          this.members,\n          this.showAppealClosureNotice\n        );\n      });\n\n      for (let i in this.menuList) {\n        if (this.menuList[i].path == name) {\n          this.menuList[i].active = true;\n        } else {\n          this.menuList[i].active = false;\n        }\n      }\n    },\n\n    refreshLoading() {\n      this.loading = false\n    },\n\n    cancelDialogHand() {\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    async confirmDialogHand(obj) {\n      const netStatus = store.state.common.netStatus;\n      // if (netStatus == 'offline') {\n      //   this.$emit(\"transferSuccess\");\n      //   this.closeDia();\n      //   return;\n      // }\n      if (this.title == this.$t(\"Universal_0202\")) {\n        if (obj) {\n          this.loading = true;\n          let transferResult = \"\";\n          for (let item of obj) {\n            if (item.targetType == 2) {\n              if (await this.isForbiddenWordsInGroup(item)) {\n                continue;\n              }\n            }\n            if (this.postcard) {\n              await transfer.sendPostcard(item.friendId, item.targetType);\n            } else if (this.shareGroup) {\n              await transfer.sendShareGroup(item.friendId, item.targetType);\n            } else if (this.mergeTransfer) {\n              transferResult = await transfer.mergeTransfer(\n                item.friendId,\n                item.targetType,\n                this.mergeTransferName\n              );\n              if (transferResult != \"\") {\n                this.loading = false;\n                const msg = this.$t(\"chat_0047\");\n                this.$alert(msg, this.$t(\"Universal_0059\"), {\n                  confirmButtonText: this.$t(\"book_group_0019\"),\n                  center: true,\n                  showClose: true,\n                  customClass: \"message-box-class\",\n                }).then(() => {\n                  setTimeout(() => {\n                    this.$emit(\"transferSuccess\");\n                    this.closeDia();\n                  }, 1);\n                });\n                return;\n              }\n            } else {\n              await transfer.sendTxt(item.friendId, item.targetType);\n            }\n          }\n          this.loading = false;\n          if (netStatus != \"offline\" && transferResult != \"\") {\n            this.$message({\n              type: \"success\",\n              message: this.$t(\"chat_0109\"),\n            });\n          }\n          this.$emit(\"transferSuccess\");\n          this.closeDia();\n        }\n      } else if (\n        this.title == this.$t(\"chat_comm_invite_0001\") ||\n        this.title == this.$t(\"chat_select_chat_0002\")\n      ) {\n        this.$emit(\"confirmDialogHand\", obj);\n      }\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    async isForbiddenWordsInGroup(item) {\n      let groupMember = await window.vm\n        .$knex(\"t_groups_member\")\n        .where({ id: this.currentUserId() })\n        .where(\"group_id\", \"=\", item.friendId)\n        .select();\n      if (\n        groupMember &&\n        groupMember.length > 0 &&\n        groupMember[0].auth_status != 3\n      ) {\n        return false;\n      }\n      let group = await window.vm\n        .$knex(\"t_groups\")\n        .where(\"group_id\", \"=\", item.friendId)\n        .select();\n      // let groupAuth = await window.vm.$knex(\"t_groups_member_auth\")\n      //   .where({ 'user_id': this.currentUserId() })\n      //   .where('group_id', '=', item.friendId).select();\n      if (\n        groupMember[0].auth_status == 3 &&\n        (group[0].forbiddenWordsStatus == 0 ||\n          groupMember[0].forbiddenWordsStatus == 1)\n      ) {\n        return true;\n      }\n      return false;\n    },\n    closeDia() {\n      this.searchInput = \"\";\n      this.dataup = false;\n      this.SelectObj = [];\n      this.selectedIds.map((id) => this.removeSelect(id));\n      this.selectedIds = [];\n      this.$emit(\"cancelDialogHand\", false);\n    },\n    GetSelectObj(obj) {\n      let message = this.selectValidate(obj);\n      if (message) {\n        if (\n          this.title == this.$t(\"chat_select_chat_0002\") &&\n          this.from == \"discussion\" &&\n          this.authStatus == \"1\"\n        ) {\n          this.removeSelect(obj.id);\n          this.openConfirmMessage(message);\n          return;\n        } else {\n          this.removeSelect(obj.id);\n          this.openMessage(message);\n          return;\n        }\n      }\n      let inSelect = this.SelectObj.filter((item) => item.id == obj.id);\n      if (inSelect.length == 0) {\n        this.SelectObj.push(obj);\n        this.selectedIds.push(obj.id);\n      } else {\n        if (!obj.checked) {\n          this.SelectObj = this.SelectObj.filter((item) => item.id != obj.id);\n          this.selectedIds = this.selectedIds.filter((item) => item != obj.id);\n        }\n      }\n      this.dataup = false;\n      // let selected = obj.filter(item => item.checked == true);\n      // if (selected.length > 9) {\n      //   this.$message.warning('联系人不能超过9个')\n      // } else {\n      //   this.SelectObj = selected;\n      // }\n      this.$nextTick(() => {\n        this.dataup = true;\n      });\n      this.$refs.com.init(this.selectedIds, this.searchInput, this.members);\n    },\n    selectValidate(obj) {\n      console.log(\n        this.authStatus,\n        \"authsataus\",\n        this.selectedIds,\n        this.members,\n        this.groupInfo\n      );\n      if (!this.members.length) {\n        return \"\";\n      }\n      if (this.selectedIds.length == 9) {\n        if (\n          this.selectedIds.indexOf(obj.id) == -1 &&\n          this.title == this.$t(\"Universal_0202\")\n        ) {\n          return this.$t(\"Universal_0232\");\n        }\n      }\n      if (\n        this.title == this.$t(\"chat_select_chat_0002\") &&\n        this.from == \"single\"\n      ) {\n        if (\n          this.selectedIds.indexOf(obj.id) == -1 &&\n          this.selectedIds.length + this.members.length >= 19\n        ) {\n          return this.$t(\"book_group_0006\");\n        }\n      }\n      if (\n        this.title == this.$t(\"chat_select_chat_0002\") &&\n        this.from == \"discussion\"\n      ) {\n        if (\n          this.selectedIds.indexOf(obj.id) == -1 &&\n          this.selectedIds.length +\n            this.members.filter((m) => m.is_show == \"true\").length >=\n            20\n        ) {\n          return this.$t(\"book_group_0006\");\n        }\n      }\n\n      if (\n        this.from == \"group\" &&\n        this.selectedIds.indexOf(obj.id) == -1 &&\n        this.selectedIds.length + this.members.length >=\n          this.groupInfo.maxPeople\n      ) {\n        if (this.authStatus == \"3\") {\n          return this.$t(\"chat_comm_member_0007\", {\n            max: this.groupInfo.maxPeople,\n          });\n        } else {\n          return this.$t(\"chat_comm_member_0007\", {\n            max: this.groupInfo.maxPeople,\n          });\n          // return this.$t('chat_comm_member_0006');\n        }\n      }\n      return \"\";\n    },\n    onFilter() {\n      if (this.searchInput) {\n        //显示搜索面板内容\n        this.Tocomponent(\"SearchInfo\");\n        this.$nextTick(() => {\n          this.$refs.searchinfo.search(this.selectedIds, this.members);\n        });\n      } else {\n        if (\n          this.title == this.$t(\"chat_comm_invite_0001\") ||\n          this.title == this.$t(\"chat_select_chat_0002\")\n        ) {\n          this.Tocomponent(\"RelationList\");\n          this.$nextTick(() => {\n            this.$refs.com.init(\n              this.selectedIds,\n              this.searchInput,\n              this.members\n            );\n          });\n        } else {\n          this.Tocomponent(\"FriendList\");\n          this.$nextTick(() => {\n            this.$refs.com.init(\n              this.selectedIds,\n              this.searchInput,\n              this.members\n            );\n          });\n        }\n      }\n      this.loading = false;\n    },\n    removeSelect(id) {\n      this.SelectObj = this.SelectObj.filter((item) => item.id != id);\n      this.selectedIds = this.selectedIds.filter((item) => item != id);\n      if (this.searchInput) {\n        this.$refs?.searchinfo?.removeSelectedItem(id);\n      } else {\n        this.$refs?.com?.removeSelectedItem(id);\n      }\n    },\n    openMessage(msg) {\n      this.$alert(msg, \"\", {\n        confirmButtonText: this.$t(\"book_group_0019\"),\n        center: true,\n        showClose: true,\n        customClass: \"message-box-class\",\n      });\n    },\n    openConfirmMessage(msg) {\n      this.$confirm(msg, \"\", {\n        confirmButtonText: this.$t(\"Universal_0045\"),\n        cancelButtonText: this.$t(\"Universal_0063\"),\n        center: true,\n        showClose: true,\n      })\n        .then(() => {\n          this.$emit(\"upgradeGroup\");\n        })\n        .catch(() => {});\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style>\n.general-setting-wrap .upload-avatar-wrap .el-upload-list {\n  display: none;\n}\n</style>\n<style lang=\"less\" scoped>\n.lists {\n  height: 295px;\n  overflow-y: scroll;\n}\n.invite-mem-dialog-left,\n.invite-mem-dialog-right {\n  // padding: 0 15px;\n\n  .invite-mem-list-item {\n    margin-top: 20px;\n  }\n}\n.invite-mem-dialog-left {\n  min-height: 340px;\n  height: 370px;\n  overflow: hidden;\n\n  /deep/ .el-input__inner,\n  .el-textarea__inner {\n    font-size: 12px;\n    color: #999;\n    background: #e6e6e6;\n    font-weight: 400;\n  }\n\n  /dee/ .el-input__prefix {\n    font-size: 16px;\n    color: #999;\n  }\n\n  /deep/ .el-input__prefix,\n  .el-input__suffix {\n    top: 1px;\n  }\n\n  .inputIcon {\n    width: 90%;\n    margin: 0 5%;\n\n    /deep/ .el-input__inner {\n      background: #f7f7fa;\n    }\n    /deep/ .el-input__prefix {\n      color: #999;\n    }\n  }\n  .widthDt {\n    width: 88%;\n    margin: 14px 6%;\n    padding: 0;\n  }\n}\n.invite-mem-dialog-right {\n  min-height: 340px;\n  height: 370px;\n  overflow-y: auto;\n  .check-number {\n    color: #333333;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 40px;\n  }\n  .remove-mem-icon {\n    display: none;\n    font-size: 18px;\n    color: #333333;\n    font-weight: 600;\n    margin-top: 2px;\n  }\n  .hover-icon:hover {\n    .remove-mem-icon {\n      display: block;\n    }\n  }\n}\n// .header-title {\n//   margin-top: -5px;\n// }\n</style>\n<style lang=\"less\">\n.invite-mem-dialog-con {\n  .el-dialog__header {\n    font-weight: 500;\n    text-align: center;\n    padding: 10px 20px 20px;\n  }\n  .header-title {\n    height: 20px;\n    line-height: 20px;\n    font-size: 14px;\n    font-weight: 600;\n    color: #333;\n  }\n  .el-dialog__headerbtn {\n    top: 12px;\n  }\n  .el-dialog__body {\n    height: 410px;\n    overflow-y: scroll;\n    padding: 0;\n  }\n  .el-dialog__footer {\n    padding-bottom: 10px;\n  }\n}\n\n.menu {\n  display: flex;\n  margin: 14px 0;\n  justify-content: space-between;\n  padding: 0 5px;\n  li {\n    font-size: 13px;\n    font-weight: 500;\n    color: #999;\n\n    &.active {\n      color: #333;\n      font-weight: 600;\n    }\n  }\n}\n.message-box-class {\n  width: 280px;\n}\n.invite-mem-dialog-border {\n  border-right: 1px solid #d8d8d8;\n  height: 100%;\n}\n// .active {\n//   font-weight: 700;\n// }\n.searchInfoClass {\n  position: absolute;\n  top: 42px;\n  // width: 270px;\n  width: 50%;\n  height: 340px !important;\n}\n</style>\n",
    "cssJson": [
      {
        ".general-setting-wrap .upload-avatar-wrap .el-upload-list": {
          "display": "none"
        }
      },
      {
        ".lists": {
          "height": "295px",
          "overflow-y": "scroll"
        },
        ".invite-mem-dialog-left,.invite-mem-dialog-right": {
          ".invite-mem-list-item": {
            "margin-top": "20px"
          }
        },
        ".invite-mem-dialog-left": {
          "min-height": "340px",
          "height": "370px",
          "overflow": "hidden",
          "/deep/ .el-input__inner,  .el-textarea__inner": {
            "font-size": "12px",
            "color": "#999",
            "background": "#e6e6e6",
            "font-weight": "400"
          },
          "/dee/ .el-input__prefix": {
            "font-size": "16px",
            "color": "#999"
          },
          "/deep/ .el-input__prefix,  .el-input__suffix": {
            "top": "1px"
          },
          ".inputIcon": {
            "width": "90%",
            "margin": "0 5%",
            "/deep/ .el-input__inner": {
              "background": "#f7f7fa"
            },
            "/deep/ .el-input__prefix": {
              "color": "#999"
            }
          },
          ".widthDt": {
            "width": "88%",
            "margin": "14px 6%",
            "padding": "0"
          }
        },
        ".invite-mem-dialog-right": {
          "min-height": "340px",
          "height": "370px",
          "overflow-y": "auto",
          ".check-number": {
            "color": "#333333",
            "font-size": "14px",
            "font-weight": "600",
            "line-height": "40px"
          },
          ".remove-mem-icon": {
            "display": "none",
            "font-size": "18px",
            "color": "#333333",
            "font-weight": "600",
            "margin-top": "2px"
          },
          ".hover-icon:hover": {
            ".remove-mem-icon": {
              "display": "block"
            }
          }
        }
      },
      {
        ".invite-mem-dialog-con": {
          ".el-dialog__header": {
            "font-weight": "500",
            "text-align": "center",
            "padding": "10px 20px 20px"
          },
          ".header-title": {
            "height": "20px",
            "line-height": "20px",
            "font-size": "14px",
            "font-weight": "600",
            "color": "#333"
          },
          ".el-dialog__headerbtn": {
            "top": "12px"
          },
          ".el-dialog__body": {
            "height": "410px",
            "overflow-y": "scroll",
            "padding": "0"
          },
          ".el-dialog__footer": {
            "padding-bottom": "10px"
          }
        },
        ".menu": {
          "display": "flex",
          "margin": "14px 0",
          "justify-content": "space-between",
          "padding": "0 5px",
          "li": {
            "font-size": "13px",
            "font-weight": "500",
            "color": "#999",
            "&.active": {
              "color": "#333",
              "font-weight": "600"
            }
          }
        },
        ".message-box-class": {
          "width": "280px"
        },
        ".invite-mem-dialog-border": {
          "border-right": "1px solid #d8d8d8",
          "height": "100%"
        },
        ".searchInfoClass": {
          "position": "absolute",
          "top": "42px",
          "width": "50%",
          "height": "340px !important"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/message/MessageNotice.vue",
    "tagInfo": {
      "0": "<style scoped lang=\"less\">"
    },
    "importInfo": {},
    "keepContent": "/* eslint-disable vue/no-dupe-v-else-if */\n<template>\n  <span v-if=\"item.msgType == '14'\">{{ $t('chat_0087') }}</span>\n  <span v-else-if=\"item.msgType == '44'\">{{ $t('chat_0088') }}</span>\n  <span v-else-if=\"item.msgType == '7' && item.fromType != '388'\">{{ $t('chat_0090') }}</span>\n  <span v-else-if=\"item.msgType == '8'\" class=\"notify\">{{ $t('chat_0091') }}</span>\n  <span v-else-if=\"item.msgType == '31'\" class=\"notify\">{{ $t('chat_0092') }}</span>\n  <span v-else-if=\"item.fromType == '203'\">{{ $t('chat_0090') }}</span>\n  <span v-else-if=\"item.fromType == '204'\">你设置了消息 {{ senderer }} 秒后消失</span>\n  <span v-else-if=\"item.fromType == '205'\">{{ senderer }} 设置了消息 {{ receiver }} 秒后消失</span>\n  <span v-else-if=\"item.fromType == '206'\">你取消了阅后即焚</span>\n  <span v-else-if=\"item.fromType == '207'\">{{ senderer }} 取消了阅后即焚</span>\n  <span v-else-if=\"(item.fromType == '0' || item.msgType == '26') && !item.widthDrawFlag\">\n    <span v-if=\"!item.fromName2\">{{ $t('chat_notice_0025', {value: senderer}) }}\n    </span>\n    <span v-else>\n      {{ $t('chat_notice_0028', {fromName: item.fromName2}) }}\n      <!--’你‘撤回了XXX的消息-->\n    </span>\n    <span \n      v-show=\"item.msgBody.text && myUserId == item.fromId  && !item.fromName2\" \n      class=\"reEdit\" @click=\"reEdit(item)\">{{ $t('Universal_0389') }}<!--!item.fromName2确保不是你撤回的别人的消息-->\n    </span>\n  </span>\n  <span v-else-if=\"(item.fromType == '0' || item.msgType == '26') && item.widthDrawFlag\"><!--管理员撤回的消息-->\n    <span v-if=\"myUserId == item.msgBody.userId\">{{ $t('chat_notice_0026') }}</span>\n    <span v-else>{{ $t('chat_notice_0027', {fromName: item.nickName || item.fromName}) }}</span>\n  </span>\n  <!-- <span v-else-if=\"item.fromType == '209'\">你撤回了一条消息</span> -->\n  <span v-else-if=\"item.fromType == '301'\">{{ $t('chat_notice_0019', {value: nickNameIsMe}) }}</span\n  ><!-- {{item.refMsgBody.tName}}{{senderer}}-->\n  <span v-else-if=\"item.fromType == '380'\">{{ $t('chat_notice_0020', {value: nickNameIsMe}) }}</span>\n  <span v-else-if=\"item.fromType == '302'\">\n    {{ $t('book_notice_0005', {value:$t('Universal_0036'),senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '303'\">\n    <span v-if=\"senderer != receiver\">\n      {{ $t('book_notice_0005', {value: nickNameIsMe,senderer: receiver}) }}\n    </span>\n    <span v-else>{{ $t('chat_notice_0015', {value: senderer}) }}</span>\n  </span>\n  <span v-else-if=\"[386,387].includes(item.fromType*1)\">\n    {{getNoticeFor386_387}}\n  </span>\n  <span v-else-if=\"item.fromType == '381'\">\n    <span v-if=\"senderer != receiver\">\n      {{ $t('chat_notice_0050', {value: nickNameIsMe, receiver}) }}\n    </span>\n    <span v-else>{{ $t('chat_notice_0016', {value: senderer}) }}</span>\n  </span>\n  <!-- <span v-else-if=\"item.fromType == '303'\">{{ receiver }} 加入了群组</span> -->\n  <span v-else-if=\"item.fromType == '304'\">\n    {{ $t('book_notice_0005', {value: senderer, senderer: $t('Universal_0036')}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '305'\">{{ $t('chat_notice_0015', {value: nickNameIsMe}) }}</span>\n  <span v-else-if=\"item.fromType == '306'\">{{ senderer }} {{ $t('chat_joincommunity_0006') }}</span>\n  <span v-else-if=\"item.fromType == '307'\">\n    {{ $t('chat_notice_0049', {value: senderer, receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '308'\">{{ $t('chat_notice_0021', {value: senderer}) }}</span>\n  <span v-else-if=\"item.fromType == '309'\">{{ $t('chat_notice_0021', {value: senderer}) }}</span>\n  <span v-else-if=\"item.fromType == '382'\">{{ $t('chat_notice_0022', {value: senderer}) }}</span>\n  <span v-else-if=\"item.fromType == '310'\">\n    {{ $t('chat_notice_0047', {value: senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '311'\">\n    {{ $t('chat_notice_0023', {value1: $t('Universal_0036'), value2: senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '312'\">\n    {{ $t('chat_notice_0023', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '384'\">\n    {{ $t('chat_notice_0024', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '313'\">\n    {{ $t('chat_notice_0017', {value: senderer, groupName: item.groupName}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '383'\">\n    {{ $t('chat_notice_0018', {value: senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '315'\">你修改社区名为 {{ senderer }}</span>\n  <span v-else-if=\"item.fromType == '316'\">{{ senderer }} 修改社区名为 {{ receiver }}</span>\n  <span v-else-if=\"item.fromType == '317'\">你修改社区通行证为 {{ senderer }}</span>\n  <span v-else-if=\"item.fromType == '318'\">{{ senderer }} 修改社区通行证为 {{ receiver }}</span>\n  <span v-else-if=\"item.fromType == '320'\">{{ senderer }} 关闭了截屏提醒</span>\n  <span v-else-if=\"item.fromType == '322'\">{{ senderer }} 关闭了截屏提醒</span>\n  <span v-else-if=\"item.fromType == '324'\">{{ senderer }} 截取了当前屏幕</span>\n  <span v-else-if=\"item.fromType == '325'\">你 开启了 全员禁言</span>\n  <span v-else-if=\"item.fromType == '328'\">{{ $t('chat_notice_0001', {value: nickNameIsMe}) }}</span>\n  <span v-else-if=\"item.fromType == '326'\">{{ $t('chat_notice_0002', {value: nickNameIsMe}) }}</span>\n  <span v-else-if=\"item.fromType == '327'\">你关闭了全员禁言</span>\n  <span v-else-if=\"item.fromType == '330'\">\n    {{ $t('chat_notice_0044', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '331'\">\n   {{ $t('chat_notice_0044', {value1: nickNameIsMe, value2: $t('Universal_0036') }) }}\n  </span>\n  <span v-else-if=\"item.fromType == '332'\">\n    <!--    对 {senderer} 关闭了禁言     改成  解除了禁言-->\n    {{ $t('chat_notice_0045', {value1: $t('Universal_0036'), value2: senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '333'\">\n    {{ $t('chat_notice_0045', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '334'\">\n    {{ $t('chat_notice_0045', {value1: nickNameIsMe, value2: $t('Universal_0036') }) }}\n  </span>\n  <span v-else-if=\"item.fromType == '336'\">\n    {{ $t('chat_notice_0004', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '338'\">\n    {{ $t('chat_notice_0003', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '341'\">{{ senderer }} 设置 你 为禁止单聊例外</span>\n  <span v-else-if=\"item.fromType == '343'\">{{ senderer }} 设置 你 为禁止单聊例外</span>\n  <span v-else-if=\"item.fromType == '345'\">\n    {{ $t('chat_notice_0006', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '347'\">\n    {{ nickNameIsMe }} {{ $t('chat_comm_manage_0026') }}\n  </span>\n  <span v-else-if=\"item.fromType == '349'\">\n    {{ $t('chat_notice_0008', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '351'\">\n    {{ nickNameIsMe }} {{ $t('chat_comm_manage_0027') }}\n  </span>\n  <span v-else-if=\"item.fromType == '355'\">\n    {{ $t('chat_notice_0009', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '353'\">\n    {{ $t('chat_notice_0010', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '357'\">{{ senderer }} 设置 你 为例外</span>\n  <span v-else-if=\"item.fromType == '359'\">{{ senderer }} 设置 你 为例外</span>\n  <span v-else-if=\"item.fromType == '361'\">\n    {{ $t('chat_notice_0013', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '363'\">\n    {{ $t('chat_notice_0014', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '365'\">{{ senderer }} 接收到了一个红包</span>\n  <span v-else-if=\"item.fromType == '367'\">{{ senderer }} 领取了 你 红包</span>\n  <span v-else-if=\"item.fromType == '368'\">\n    {{ $t('book_notice_0002', {value: senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '405'\">\n    {{ nickNameIsMe }} {{ $t('chat_comm_manage_0029') }}\n  </span>\n  <span v-else-if=\"item.fromType == '406'\">\n    {{ $t('chat_notice_0012', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '373'\">\n    {{ $t('book_group_0013', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"(item.fromType == '999') && (item.msgType == '61')\">\n    {{ $t('chat_0127') }}\n  </span>\n  <span v-else-if=\"item.fromType == '372'\">{{getNoticeFor372}}</span>\n</template>\n\n<script>\nimport UserInfoUtils from \"@/utils/UserInfoUtils\";\nimport { parseUniqueCode } from '@/utils/const';\nexport default {\n  name: 'message-notice',\n  data() {\n    return {\n      myUserId: localStorage.userId,\n      senderer: ''\n    };\n  },\n  inject: ['saveTimeArr372'],\n  props: {\n    item: { require: true },\n    isCurrent: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    sender: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    receiver: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  computed:{\n    nickNameIsMe(){\n      if(this.item?.fromId==localStorage.userId){\n        return this.$t('Universal_0036')\n      }else{\n        return this.senderer\n      }\n    },\n    refMsgBody(){\n      if(typeof this.item.refMsgBody === \"string\"){\n        return JSON.parse(this.item.refMsgBody)\n      }\n      return this.item.refMsgBody\n    },\n    getNoticeFor372(){\n      let unit = 60 * 60 * 1000;\n      let saveTimeArr372Lang=this.saveTimeArr372();\n      let obj=Object.fromEntries(saveTimeArr372Lang.map(o=>[o['value']*unit,o.label]))\n      let who=''\n      if(this.item?.fromId==localStorage.userId){\n        who = this.$t('Universal_0036')//this.$i18n.locale.includes('zh')?'你':'You'\n      }else{\n        // console.info(this.item)\n        // 公用组件 会话列表/右侧消息记录\n        if(this.item.targetType==1){\n          who =this.item?.friendFriendNotes||this.item?.friendNickName||this.item?.fromName||this.item?.nickName||''\n        }else{\n          who= this.item?.fromName||this.item?.nickName||''\n        }\n      }\n      let time = obj[this.refMsgBody?.time || this.item?.msgHeader?.effectiveTime];\n      if(this.$i18n.locale.includes('zh')){\n        time=time.replace(/\\s/g,'')\n      }\n      return  this.$t('chat_notice_0057', {value: who, time});\n    }\n  },\n  asyncComputed: {\n    // http://project.vonechain.com:7880/zentao/story-view-3779.html\n    async getNoticeFor386_387() {\n      let { fromType, fromName = \"\", refMsgBody, nickName, fromId,uniqueCode,targetType } = this.item;\n      let inviteName = '';\n      if (fromId === UserInfoUtils.getCurrentUserId()) {\n        // 是本人\n        // inviteName = UserInfoUtils.getCurrentUserNickName()\n        inviteName = this.$t('Universal_0036')\n      } else {\n        inviteName = await this.getMemberFromSql(\n          fromId,\n          parseUniqueCode(uniqueCode, targetType)\n        );\n      }\n      let name = (refMsgBody?.users || [])\n        .map((o) => o[\"nickName\"])\n        .slice(0, 3);\n      let count=refMsgBody?.users?.length||0;\n      if (fromType == 386) {\n        if(count<=3){\n          return this.$t(\"book_notice_0005\", {\n            value: inviteName || nickName || fromName,\n            senderer: name.join(\",\"),\n          }); \n        }\n        return this.$t(\"chat_notice_0058\", {\n          inviter: inviteName || nickName || fromName,\n          invited: name.join(\",\"),\n          count\n        });\n      }\n      if (fromType == 387) {\n        if(count<=3){\n          return this.$t(\"chat_notice_0050\", {\n            value: inviteName || nickName || fromName,\n            receiver: name.join(\",\"),\n          });\n        }\n        return this.$t(\"chat_notice_0059\", {\n          inviter: inviteName || nickName || fromName,\n          invited: name.join(\",\"),\n          count\n        });\n      }\n      return \"\";\n    },\n  },\n  watch: {\n    sender: {\n      deep: true,\n      immediate: true,\n      handler: async function  (v) {\n        if (v === '' || !v) {\n          let name = await this.getMemberFromSql(this.item.fromId, this.item.id || this.item.targetId);\n          this.senderer = name || this.item.nickName || this.item.refMsgBody.fromName;       \n        } else {\n          this.senderer = v;\n        }\n      }\n    }\n  },\n  methods: {\n    keepSilent() {\n      this.$emit('keepSilentSet', this.item);\n      // this.$parent.keepSilentSet(this.item);\n    },\n    reEdit(item) {\n      this.$emit('reEditMsg', item);\n    },\n    // ```\n    //   单聊：你/You > 好友备注 > 昵称\n    //   非单聊：你/You > 昵称\n    // ```\n    async getMemberFromSql(id, group_id) {\n      let targetType=this.item.targetType;\n      if(targetType==1){\n        let contactsArr = await window.vm.$knex(\"t_contacts\").where({\n          friend_id: id,\n        });\n        return Promise.resolve(contactsArr?.[0]?.friend_friendNotes||contactsArr?.[0]?.nick_name||'');\n      }else{\n        const memberInGroup = await window.vm.$knex('t_groups_member').where({\n          id,\n          group_id\n        })\n        // return Promise.resolve(memberInGroup?.[0]?.member_notes||memberInGroup?.[0]?.nick_name||'');\n        return Promise.resolve(memberInGroup?.[0]?.nick_name||'');\n      }\n    },\n  }\n};\n</script>",
    "originData": "/* eslint-disable vue/no-dupe-v-else-if */\n<template>\n  <span v-if=\"item.msgType == '14'\">{{ $t('chat_0087') }}</span>\n  <span v-else-if=\"item.msgType == '44'\">{{ $t('chat_0088') }}</span>\n  <span v-else-if=\"item.msgType == '7' && item.fromType != '388'\">{{ $t('chat_0090') }}</span>\n  <span v-else-if=\"item.msgType == '8'\" class=\"notify\">{{ $t('chat_0091') }}</span>\n  <span v-else-if=\"item.msgType == '31'\" class=\"notify\">{{ $t('chat_0092') }}</span>\n  <span v-else-if=\"item.fromType == '203'\">{{ $t('chat_0090') }}</span>\n  <span v-else-if=\"item.fromType == '204'\">你设置了消息 {{ senderer }} 秒后消失</span>\n  <span v-else-if=\"item.fromType == '205'\">{{ senderer }} 设置了消息 {{ receiver }} 秒后消失</span>\n  <span v-else-if=\"item.fromType == '206'\">你取消了阅后即焚</span>\n  <span v-else-if=\"item.fromType == '207'\">{{ senderer }} 取消了阅后即焚</span>\n  <span v-else-if=\"(item.fromType == '0' || item.msgType == '26') && !item.widthDrawFlag\">\n    <span v-if=\"!item.fromName2\">{{ $t('chat_notice_0025', {value: senderer}) }}\n    </span>\n    <span v-else>\n      {{ $t('chat_notice_0028', {fromName: item.fromName2}) }}\n      <!--’你‘撤回了XXX的消息-->\n    </span>\n    <span \n      v-show=\"item.msgBody.text && myUserId == item.fromId  && !item.fromName2\" \n      class=\"reEdit\" @click=\"reEdit(item)\">{{ $t('Universal_0389') }}<!--!item.fromName2确保不是你撤回的别人的消息-->\n    </span>\n  </span>\n  <span v-else-if=\"(item.fromType == '0' || item.msgType == '26') && item.widthDrawFlag\"><!--管理员撤回的消息-->\n    <span v-if=\"myUserId == item.msgBody.userId\">{{ $t('chat_notice_0026') }}</span>\n    <span v-else>{{ $t('chat_notice_0027', {fromName: item.nickName || item.fromName}) }}</span>\n  </span>\n  <!-- <span v-else-if=\"item.fromType == '209'\">你撤回了一条消息</span> -->\n  <span v-else-if=\"item.fromType == '301'\">{{ $t('chat_notice_0019', {value: nickNameIsMe}) }}</span\n  ><!-- {{item.refMsgBody.tName}}{{senderer}}-->\n  <span v-else-if=\"item.fromType == '380'\">{{ $t('chat_notice_0020', {value: nickNameIsMe}) }}</span>\n  <span v-else-if=\"item.fromType == '302'\">\n    {{ $t('book_notice_0005', {value:$t('Universal_0036'),senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '303'\">\n    <span v-if=\"senderer != receiver\">\n      {{ $t('book_notice_0005', {value: nickNameIsMe,senderer: receiver}) }}\n    </span>\n    <span v-else>{{ $t('chat_notice_0015', {value: senderer}) }}</span>\n  </span>\n  <span v-else-if=\"[386,387].includes(item.fromType*1)\">\n    {{getNoticeFor386_387}}\n  </span>\n  <span v-else-if=\"item.fromType == '381'\">\n    <span v-if=\"senderer != receiver\">\n      {{ $t('chat_notice_0050', {value: nickNameIsMe, receiver}) }}\n    </span>\n    <span v-else>{{ $t('chat_notice_0016', {value: senderer}) }}</span>\n  </span>\n  <!-- <span v-else-if=\"item.fromType == '303'\">{{ receiver }} 加入了群组</span> -->\n  <span v-else-if=\"item.fromType == '304'\">\n    {{ $t('book_notice_0005', {value: senderer, senderer: $t('Universal_0036')}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '305'\">{{ $t('chat_notice_0015', {value: nickNameIsMe}) }}</span>\n  <span v-else-if=\"item.fromType == '306'\">{{ senderer }} {{ $t('chat_joincommunity_0006') }}</span>\n  <span v-else-if=\"item.fromType == '307'\">\n    {{ $t('chat_notice_0049', {value: senderer, receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '308'\">{{ $t('chat_notice_0021', {value: senderer}) }}</span>\n  <span v-else-if=\"item.fromType == '309'\">{{ $t('chat_notice_0021', {value: senderer}) }}</span>\n  <span v-else-if=\"item.fromType == '382'\">{{ $t('chat_notice_0022', {value: senderer}) }}</span>\n  <span v-else-if=\"item.fromType == '310'\">\n    {{ $t('chat_notice_0047', {value: senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '311'\">\n    {{ $t('chat_notice_0023', {value1: $t('Universal_0036'), value2: senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '312'\">\n    {{ $t('chat_notice_0023', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '384'\">\n    {{ $t('chat_notice_0024', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '313'\">\n    {{ $t('chat_notice_0017', {value: senderer, groupName: item.groupName}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '383'\">\n    {{ $t('chat_notice_0018', {value: senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '315'\">你修改社区名为 {{ senderer }}</span>\n  <span v-else-if=\"item.fromType == '316'\">{{ senderer }} 修改社区名为 {{ receiver }}</span>\n  <span v-else-if=\"item.fromType == '317'\">你修改社区通行证为 {{ senderer }}</span>\n  <span v-else-if=\"item.fromType == '318'\">{{ senderer }} 修改社区通行证为 {{ receiver }}</span>\n  <span v-else-if=\"item.fromType == '320'\">{{ senderer }} 关闭了截屏提醒</span>\n  <span v-else-if=\"item.fromType == '322'\">{{ senderer }} 关闭了截屏提醒</span>\n  <span v-else-if=\"item.fromType == '324'\">{{ senderer }} 截取了当前屏幕</span>\n  <span v-else-if=\"item.fromType == '325'\">你 开启了 全员禁言</span>\n  <span v-else-if=\"item.fromType == '328'\">{{ $t('chat_notice_0001', {value: nickNameIsMe}) }}</span>\n  <span v-else-if=\"item.fromType == '326'\">{{ $t('chat_notice_0002', {value: nickNameIsMe}) }}</span>\n  <span v-else-if=\"item.fromType == '327'\">你关闭了全员禁言</span>\n  <span v-else-if=\"item.fromType == '330'\">\n    {{ $t('chat_notice_0044', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '331'\">\n   {{ $t('chat_notice_0044', {value1: nickNameIsMe, value2: $t('Universal_0036') }) }}\n  </span>\n  <span v-else-if=\"item.fromType == '332'\">\n    <!--    对 {senderer} 关闭了禁言     改成  解除了禁言-->\n    {{ $t('chat_notice_0045', {value1: $t('Universal_0036'), value2: senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '333'\">\n    {{ $t('chat_notice_0045', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '334'\">\n    {{ $t('chat_notice_0045', {value1: nickNameIsMe, value2: $t('Universal_0036') }) }}\n  </span>\n  <span v-else-if=\"item.fromType == '336'\">\n    {{ $t('chat_notice_0004', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '338'\">\n    {{ $t('chat_notice_0003', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '341'\">{{ senderer }} 设置 你 为禁止单聊例外</span>\n  <span v-else-if=\"item.fromType == '343'\">{{ senderer }} 设置 你 为禁止单聊例外</span>\n  <span v-else-if=\"item.fromType == '345'\">\n    {{ $t('chat_notice_0006', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '347'\">\n    {{ nickNameIsMe }} {{ $t('chat_comm_manage_0026') }}\n  </span>\n  <span v-else-if=\"item.fromType == '349'\">\n    {{ $t('chat_notice_0008', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '351'\">\n    {{ nickNameIsMe }} {{ $t('chat_comm_manage_0027') }}\n  </span>\n  <span v-else-if=\"item.fromType == '355'\">\n    {{ $t('chat_notice_0009', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '353'\">\n    {{ $t('chat_notice_0010', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '357'\">{{ senderer }} 设置 你 为例外</span>\n  <span v-else-if=\"item.fromType == '359'\">{{ senderer }} 设置 你 为例外</span>\n  <span v-else-if=\"item.fromType == '361'\">\n    {{ $t('chat_notice_0013', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '363'\">\n    {{ $t('chat_notice_0014', {value1: nickNameIsMe, value2: receiver}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '365'\">{{ senderer }} 接收到了一个红包</span>\n  <span v-else-if=\"item.fromType == '367'\">{{ senderer }} 领取了 你 红包</span>\n  <span v-else-if=\"item.fromType == '368'\">\n    {{ $t('book_notice_0002', {value: senderer}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '405'\">\n    {{ nickNameIsMe }} {{ $t('chat_comm_manage_0029') }}\n  </span>\n  <span v-else-if=\"item.fromType == '406'\">\n    {{ $t('chat_notice_0012', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"item.fromType == '373'\">\n    {{ $t('book_group_0013', {value: nickNameIsMe}) }}\n  </span>\n  <span v-else-if=\"(item.fromType == '999') && (item.msgType == '61')\">\n    {{ $t('chat_0127') }}\n  </span>\n  <span v-else-if=\"item.fromType == '372'\">{{getNoticeFor372}}</span>\n</template>\n\n<script>\nimport UserInfoUtils from \"@/utils/UserInfoUtils\";\nimport { parseUniqueCode } from '@/utils/const';\nexport default {\n  name: 'message-notice',\n  data() {\n    return {\n      myUserId: localStorage.userId,\n      senderer: ''\n    };\n  },\n  inject: ['saveTimeArr372'],\n  props: {\n    item: { require: true },\n    isCurrent: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    },\n    sender: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    receiver: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  computed:{\n    nickNameIsMe(){\n      if(this.item?.fromId==localStorage.userId){\n        return this.$t('Universal_0036')\n      }else{\n        return this.senderer\n      }\n    },\n    refMsgBody(){\n      if(typeof this.item.refMsgBody === \"string\"){\n        return JSON.parse(this.item.refMsgBody)\n      }\n      return this.item.refMsgBody\n    },\n    getNoticeFor372(){\n      let unit = 60 * 60 * 1000;\n      let saveTimeArr372Lang=this.saveTimeArr372();\n      let obj=Object.fromEntries(saveTimeArr372Lang.map(o=>[o['value']*unit,o.label]))\n      let who=''\n      if(this.item?.fromId==localStorage.userId){\n        who = this.$t('Universal_0036')//this.$i18n.locale.includes('zh')?'你':'You'\n      }else{\n        // console.info(this.item)\n        // 公用组件 会话列表/右侧消息记录\n        if(this.item.targetType==1){\n          who =this.item?.friendFriendNotes||this.item?.friendNickName||this.item?.fromName||this.item?.nickName||''\n        }else{\n          who= this.item?.fromName||this.item?.nickName||''\n        }\n      }\n      let time = obj[this.refMsgBody?.time || this.item?.msgHeader?.effectiveTime];\n      if(this.$i18n.locale.includes('zh')){\n        time=time.replace(/\\s/g,'')\n      }\n      return  this.$t('chat_notice_0057', {value: who, time});\n    }\n  },\n  asyncComputed: {\n    // http://project.vonechain.com:7880/zentao/story-view-3779.html\n    async getNoticeFor386_387() {\n      let { fromType, fromName = \"\", refMsgBody, nickName, fromId,uniqueCode,targetType } = this.item;\n      let inviteName = '';\n      if (fromId === UserInfoUtils.getCurrentUserId()) {\n        // 是本人\n        // inviteName = UserInfoUtils.getCurrentUserNickName()\n        inviteName = this.$t('Universal_0036')\n      } else {\n        inviteName = await this.getMemberFromSql(\n          fromId,\n          parseUniqueCode(uniqueCode, targetType)\n        );\n      }\n      let name = (refMsgBody?.users || [])\n        .map((o) => o[\"nickName\"])\n        .slice(0, 3);\n      let count=refMsgBody?.users?.length||0;\n      if (fromType == 386) {\n        if(count<=3){\n          return this.$t(\"book_notice_0005\", {\n            value: inviteName || nickName || fromName,\n            senderer: name.join(\",\"),\n          }); \n        }\n        return this.$t(\"chat_notice_0058\", {\n          inviter: inviteName || nickName || fromName,\n          invited: name.join(\",\"),\n          count\n        });\n      }\n      if (fromType == 387) {\n        if(count<=3){\n          return this.$t(\"chat_notice_0050\", {\n            value: inviteName || nickName || fromName,\n            receiver: name.join(\",\"),\n          });\n        }\n        return this.$t(\"chat_notice_0059\", {\n          inviter: inviteName || nickName || fromName,\n          invited: name.join(\",\"),\n          count\n        });\n      }\n      return \"\";\n    },\n  },\n  watch: {\n    sender: {\n      deep: true,\n      immediate: true,\n      handler: async function  (v) {\n        if (v === '' || !v) {\n          let name = await this.getMemberFromSql(this.item.fromId, this.item.id || this.item.targetId);\n          this.senderer = name || this.item.nickName || this.item.refMsgBody.fromName;       \n        } else {\n          this.senderer = v;\n        }\n      }\n    }\n  },\n  methods: {\n    keepSilent() {\n      this.$emit('keepSilentSet', this.item);\n      // this.$parent.keepSilentSet(this.item);\n    },\n    reEdit(item) {\n      this.$emit('reEditMsg', item);\n    },\n    // ```\n    //   单聊：你/You > 好友备注 > 昵称\n    //   非单聊：你/You > 昵称\n    // ```\n    async getMemberFromSql(id, group_id) {\n      let targetType=this.item.targetType;\n      if(targetType==1){\n        let contactsArr = await window.vm.$knex(\"t_contacts\").where({\n          friend_id: id,\n        });\n        return Promise.resolve(contactsArr?.[0]?.friend_friendNotes||contactsArr?.[0]?.nick_name||'');\n      }else{\n        const memberInGroup = await window.vm.$knex('t_groups_member').where({\n          id,\n          group_id\n        })\n        // return Promise.resolve(memberInGroup?.[0]?.member_notes||memberInGroup?.[0]?.nick_name||'');\n        return Promise.resolve(memberInGroup?.[0]?.nick_name||'');\n      }\n    },\n  }\n};\n</script>\n\n<style scoped lang=\"less\">\nspan {\n  white-space: pre-wrap;\n}\n</style>\n",
    "cssJson": [
      {
        "span": {
          "white-space": "pre-wrap"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/components/common/MessageFormatText.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <span\n    id=\"text\"\n    ref=\"text\"\n    v-html=\"replaceEmoji(text)\"\n    v-if=\"!draftFlag\"\n    :class=\"wordBreakClass\"\n    @dblclick.stop.prevent=\"rangesSelect\"\n    :style=\"isCanSelect?{'-webkit-user-select':'text',display: 'inline-block'}:{'-webkit-user-select':'none'}\"\n  >\n  </span>\n  <span ref=\"text\" :style=\"isCanSelect?{'-webkit-user-select':'text',display: 'inline-block'}:{'-webkit-user-select':'none'}\" v-else v-html=\"replaceEmoji(text)\"></span>\n</template>\n<script>\nimport emojiList from \"@/utils/emoji.js\";\nimport { html2Escape } from \"@/utils/domainSuffix.js\";\nimport { mapGetters } from \"vuex\"\nexport default {\n  name: \"message-text-format\",\n  data() {\n    return {\n      emojiList: emojiList,\n      patt: /\\[([^\\\\[])+?\\]/g,\n      isDecryptText: \"1\",\n    };\n  },\n  props: {\n    draftFlag: {\n      require: true,\n      default: false,\n    },\n    text: { require: true },\n    isDecrypt: { require: false, default: \"\" },\n    item: {\n      require: false,\n      default() {\n        return {};\n      },\n    },\n    linkFlag: {\n      type: Boolean,\n      default: false,\n    }\n  },\n  computed: {\n    ...mapGetters(['gettersCurrentMsgId']),\n    wordBreakClass() {\n      let reg = /[a-z]/gi;\n      return reg.test(this.text) ? \"break-word\" : \"break-all\";\n    },\n    isCanSelect(){\n      return this.item?.msgId==this.gettersCurrentMsgId\n    }\n  },\n  mounted() {\n    this.replaceEmoji(this.text);\n  },\n  methods: {\n    rangesSelect(){\n      setTimeout(()=>{\n        let selection = window.getSelection();\n        selection.removeAllRanges();\n        let range = document.createRange();\n        range.selectNode(this.$refs.text)\n        selection.addRange(range)\n        // let c=document.execCommand('copy')\n        // console.log(window.getSelection().toString(),c)\n      },100)\n    },\n    replaceEmoji(newVal) {\n      if(!newVal){\n        return ;\n      }\n\n      let originText;\n      let arr;\n      newVal = html2Escape(newVal, this.draftFlag);\n      /*eslint max-len: [\"error\", { \"code\": 260 }]*/\n      let urlReg = /((((https?|http?):(\\/\\/)?(?:[-;:&=+$]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?(?:[-?+=&;:%!/@.\\w_]*)#?(?:[-+=&;%!?/@.\\w_]*))?)|(((https?|http?):(\\/\\/))?([\\da-z.-]+)\\.(?:[\\da-z.]{2,6})(?:\\/\\w\\.-]*)*\\/?))/gi;\n\n      if (newVal) {\n        originText = newVal;\n        if (!this.linkFlag) {\n          originText = originText.replace(urlReg, (r) => {\n            // let s = !r.startsWith(\"http\") ? \"http://\" + r : r;\n            // return `<a href=\"${s}\">${r}</a>`;\n            if (!r.startsWith(\"http\")) {\n              return r;\n            } else {\n              let httpn = r.indexOf(\"//\");\n              if (httpn == -1) {\n                return r;\n              } else {\n                return `<a href=\"${r}\">${r}</a>`;\n              }\n            }\n          });\n        }\n        arr = originText.match(this.patt);\n      }\n\n      if (arr && arr.length && originText) {\n        const arrSet = new Set([...arr]);\n        const arrL = Array.from(arrSet);\n        arrL.forEach((item) => {\n          let ret = this.emojiList.find((x) => x.tag == item);\n          if (ret && ret.tag) {\n            let img = `<img src=\"/resources/emoji/${ret.file}\" width=22px style=\"vertical-align: middle;\" alt=\"${ret.tag}\"/>`;\n            let ite = item.slice(0, -1);\n            let str = `\\\\${ite}\\\\]`;\n            originText = originText.replace(new RegExp(str, \"g\"), img);\n          }\n          let reg = /(\\[图片]|\\[Picture])/g;\n          originText = originText.replace(reg, this.$t('chat_0013'));\n        });\n      }\n      return originText;\n    },\n  },\n};\n</script>",
    "originData": "<template>\n  <span\n    id=\"text\"\n    ref=\"text\"\n    v-html=\"replaceEmoji(text)\"\n    v-if=\"!draftFlag\"\n    :class=\"wordBreakClass\"\n    @dblclick.stop.prevent=\"rangesSelect\"\n    :style=\"isCanSelect?{'-webkit-user-select':'text',display: 'inline-block'}:{'-webkit-user-select':'none'}\"\n  >\n  </span>\n  <span ref=\"text\" :style=\"isCanSelect?{'-webkit-user-select':'text',display: 'inline-block'}:{'-webkit-user-select':'none'}\" v-else v-html=\"replaceEmoji(text)\"></span>\n</template>\n<script>\nimport emojiList from \"@/utils/emoji.js\";\nimport { html2Escape } from \"@/utils/domainSuffix.js\";\nimport { mapGetters } from \"vuex\"\nexport default {\n  name: \"message-text-format\",\n  data() {\n    return {\n      emojiList: emojiList,\n      patt: /\\[([^\\\\[])+?\\]/g,\n      isDecryptText: \"1\",\n    };\n  },\n  props: {\n    draftFlag: {\n      require: true,\n      default: false,\n    },\n    text: { require: true },\n    isDecrypt: { require: false, default: \"\" },\n    item: {\n      require: false,\n      default() {\n        return {};\n      },\n    },\n    linkFlag: {\n      type: Boolean,\n      default: false,\n    }\n  },\n  computed: {\n    ...mapGetters(['gettersCurrentMsgId']),\n    wordBreakClass() {\n      let reg = /[a-z]/gi;\n      return reg.test(this.text) ? \"break-word\" : \"break-all\";\n    },\n    isCanSelect(){\n      return this.item?.msgId==this.gettersCurrentMsgId\n    }\n  },\n  mounted() {\n    this.replaceEmoji(this.text);\n  },\n  methods: {\n    rangesSelect(){\n      setTimeout(()=>{\n        let selection = window.getSelection();\n        selection.removeAllRanges();\n        let range = document.createRange();\n        range.selectNode(this.$refs.text)\n        selection.addRange(range)\n        // let c=document.execCommand('copy')\n        // console.log(window.getSelection().toString(),c)\n      },100)\n    },\n    replaceEmoji(newVal) {\n      if(!newVal){\n        return ;\n      }\n\n      let originText;\n      let arr;\n      newVal = html2Escape(newVal, this.draftFlag);\n      /*eslint max-len: [\"error\", { \"code\": 260 }]*/\n      let urlReg = /((((https?|http?):(\\/\\/)?(?:[-;:&=+$]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?(?:[-?+=&;:%!/@.\\w_]*)#?(?:[-+=&;%!?/@.\\w_]*))?)|(((https?|http?):(\\/\\/))?([\\da-z.-]+)\\.(?:[\\da-z.]{2,6})(?:\\/\\w\\.-]*)*\\/?))/gi;\n\n      if (newVal) {\n        originText = newVal;\n        if (!this.linkFlag) {\n          originText = originText.replace(urlReg, (r) => {\n            // let s = !r.startsWith(\"http\") ? \"http://\" + r : r;\n            // return `<a href=\"${s}\">${r}</a>`;\n            if (!r.startsWith(\"http\")) {\n              return r;\n            } else {\n              let httpn = r.indexOf(\"//\");\n              if (httpn == -1) {\n                return r;\n              } else {\n                return `<a href=\"${r}\">${r}</a>`;\n              }\n            }\n          });\n        }\n        arr = originText.match(this.patt);\n      }\n\n      if (arr && arr.length && originText) {\n        const arrSet = new Set([...arr]);\n        const arrL = Array.from(arrSet);\n        arrL.forEach((item) => {\n          let ret = this.emojiList.find((x) => x.tag == item);\n          if (ret && ret.tag) {\n            let img = `<img src=\"/resources/emoji/${ret.file}\" width=22px style=\"vertical-align: middle;\" alt=\"${ret.tag}\"/>`;\n            let ite = item.slice(0, -1);\n            let str = `\\\\${ite}\\\\]`;\n            originText = originText.replace(new RegExp(str, \"g\"), img);\n          }\n          let reg = /(\\[图片]|\\[Picture])/g;\n          originText = originText.replace(reg, this.$t('chat_0013'));\n        });\n      }\n      return originText;\n    },\n  },\n};\n</script>\n<style lang=\"less\" scoped>\n#text {\n  word-wrap: break-word; // 只对英文起作用，以单词作为换行依据。\n  white-space: pre-wrap; // 只对中文起作用，强制换行。\n  /deep/ a {\n    color: #447df0;\n    word-break: break-all;\n    &:hover {\n      color: #2F54EB;\n      text-decoration: none;\n    }\n  }\n  /deep/ img {\n    margin: -5px 2px 0 2px;\n  }\n  &.break-word {\n    // word-break: break-word;\n  }\n  &.break-all {\n    word-break: break-all;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        "#text": {
          "word-wrap": "break-word",
          "white-space": "pre-wrap",
          "/deep/ a": {
            "color": "#447df0",
            "word-break": "break-all",
            "&:hover": {
              "color": "#2F54EB",
              "text-decoration": "none"
            }
          },
          "/deep/ img": {
            "margin": "-5px 2px 0 2px"
          },
          "&.break-word": {},
          "&.break-all": {
            "word-break": "break-all"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/group/components/GroupShare.vue",
    "tagInfo": {
      "0": "<style scoped lang=\"less\">",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <el-dialog\n      class=\"shareChat\"\n      :title=\"$t('chat_comm_manage_0032')\"\n      :visible.sync=\"shareDialogVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"onClose\"\n      @open=\"onGroupShareOpen\"\n      width=\"270px\"\n      center\n    >\n      <div class=\"content\">\n        <div class=\"type-list\">\n          <div class=\"type-item\">\n            <div class=\"didi-friend\">\n              <img src=\"../../../../assets/images/share_didifriend.png\" @click=\"shareFriend\" alt />\n            </div>\n            <span>{{ $t('Universal_0268') }}</span>\n          </div>\n          <div class=\"type-item\">\n            <div class=\"copy-link\" v-clipboard:copy=\"linkUrl\" v-clipboard:success=\"onCopy\">\n              <img src=\"../../../../assets/images/share_copylink.png\" alt />\n            </div>\n            <span>{{ $t('opinions_0035') }}</span>\n          </div>\n        </div>\n        <el-divider class=\"group-el-divider\" />\n        <div class=\"qr-code\">\n          <div class=\"group-id\">\n            <span>{{ $t('book_community_0007') }}: </span>\n            <div>{{ groupInfo.groupCode }}</div>\n          </div>\n          <div class=\"add-group\">{{ $t('chat_comm_set_0032') }}</div>\n        </div>\n      </div>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"title\"\n      :postcard=\"true\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n    />\n  </div>\n</template>\n\n<script>\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\nimport { get_friend_user_info } from '@/server.js';\nimport { getSelfUserId } from '@/utils/const';\nimport bus from '@/utils/eventbus';\n\nexport default {\n  name: 'GroupShare',\n  components: {\n    GroupAndInviteChat\n  },\n  props: {\n    groupInfo: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    showAppealClosureNotice: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n  },\n  data() {\n    return {\n      shareDialogVisible: false,\n      GroupInviteVisible: false,\n      title: this.$t('Universal_0202'),\n      linkUrl: ''\n    };\n  },\n  mounted() {\n    bus.$on('groupShareClose', this._groupShareClose);\n  },\n  methods: {\n    _groupShareClose(msg){\n      this.shareDialogVisible = msg;\n    },\n    onPop() {\n      //判断是否存在被限制社交及群封停状态\n      if(this.$store.state.common.personalAppealInfo.endTime){\n        let time = `${this.$store.state.common.personalAppealInfo.createTime}\n        --${this.$store.state.common.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}),\n          this.$t('Universal_0059'),{\n            confirmButtonText: this.$t('appeal_0017'),\n            cancelButtonText: this.$t('book_group_0019'),\n            center: true,\n            showClose: false,\n          }).then(() => {\n          this.$emit('toAppeal');\n        }).catch(() => {\n        });\n        return;\n      }\n      if(this.showAppealClosureNotice) return this.$message.error(this.$t('appeal_0013'));\n      this.shareDialogVisible = true;\n    },\n    onClose() {\n      this.shareDialogVisible = false;\n      this.$emit('groupInfoClose');\n    },\n    async shareFriend() {\n      this.GroupInviteVisible = true;\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.getCardItem()]);\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    async onGroupShareOpen() {\n      // let language = this.$i18n.locale;\n      let res = await get_friend_user_info({ id: this.currentUserId() });\n      let userInfo = res.data;\n      let baseUrl = process.env.VUE_APP_SHARE;\n      // this.linkUrl = `${baseUrl}/#/invite/groups?userId=${userInfo.id}\n      //   &inviteCode=${userInfo.inviteCode}&groupCode=${this.groupInfo.groupCode}\n      //   &groupId=${this.groupInfo.id}&language=${language}&nickName=${userInfo.userNickName}&category=fgg`;\n      this.linkUrl = `${baseUrl}/#/invite/groups?i=${userInfo.inviteCode}&g=${this.groupInfo.groupCode}`;\n      this.linkUrl = encodeURI(this.linkUrl);\n    },\n    onCopy() {\n      this.$message.success(this.$t('chat_0026'));\n    },\n    async transferCard() {\n      this.GroupInviteVisible = true;\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.getCardItem()]);\n    },\n    getCardItem() {\n      return {\n        code: this.groupInfo.groupCode,\n        name: this.groupInfo.groupName,\n        msgUrl: this.groupInfo.groupAvatar,\n        id: this.groupInfo.id,\n        type: '2',\n        originTypePsw: true\n      };\n    },\n    confirmDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    cancelDialogHand() {\n      this.GroupInviteVisible = false;\n    }\n  },\n  beforeDestroy(){\n    bus.$off('groupShareClose', this._groupShareClose);\n  }\n};\n</script>",
    "originData": "<template>\n  <div>\n    <el-dialog\n      class=\"shareChat\"\n      :title=\"$t('chat_comm_manage_0032')\"\n      :visible.sync=\"shareDialogVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      @close=\"onClose\"\n      @open=\"onGroupShareOpen\"\n      width=\"270px\"\n      center\n    >\n      <div class=\"content\">\n        <div class=\"type-list\">\n          <div class=\"type-item\">\n            <div class=\"didi-friend\">\n              <img src=\"../../../../assets/images/share_didifriend.png\" @click=\"shareFriend\" alt />\n            </div>\n            <span>{{ $t('Universal_0268') }}</span>\n          </div>\n          <div class=\"type-item\">\n            <div class=\"copy-link\" v-clipboard:copy=\"linkUrl\" v-clipboard:success=\"onCopy\">\n              <img src=\"../../../../assets/images/share_copylink.png\" alt />\n            </div>\n            <span>{{ $t('opinions_0035') }}</span>\n          </div>\n        </div>\n        <el-divider class=\"group-el-divider\" />\n        <div class=\"qr-code\">\n          <div class=\"group-id\">\n            <span>{{ $t('book_community_0007') }}: </span>\n            <div>{{ groupInfo.groupCode }}</div>\n          </div>\n          <div class=\"add-group\">{{ $t('chat_comm_set_0032') }}</div>\n        </div>\n      </div>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"title\"\n      :postcard=\"true\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n    />\n  </div>\n</template>\n\n<script>\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\nimport { get_friend_user_info } from '@/server.js';\nimport { getSelfUserId } from '@/utils/const';\nimport bus from '@/utils/eventbus';\n\nexport default {\n  name: 'GroupShare',\n  components: {\n    GroupAndInviteChat\n  },\n  props: {\n    groupInfo: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    showAppealClosureNotice: {\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n  },\n  data() {\n    return {\n      shareDialogVisible: false,\n      GroupInviteVisible: false,\n      title: this.$t('Universal_0202'),\n      linkUrl: ''\n    };\n  },\n  mounted() {\n    bus.$on('groupShareClose', this._groupShareClose);\n  },\n  methods: {\n    _groupShareClose(msg){\n      this.shareDialogVisible = msg;\n    },\n    onPop() {\n      //判断是否存在被限制社交及群封停状态\n      if(this.$store.state.common.personalAppealInfo.endTime){\n        let time = `${this.$store.state.common.personalAppealInfo.createTime}\n        --${this.$store.state.common.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}),\n          this.$t('Universal_0059'),{\n            confirmButtonText: this.$t('appeal_0017'),\n            cancelButtonText: this.$t('book_group_0019'),\n            center: true,\n            showClose: false,\n          }).then(() => {\n          this.$emit('toAppeal');\n        }).catch(() => {\n        });\n        return;\n      }\n      if(this.showAppealClosureNotice) return this.$message.error(this.$t('appeal_0013'));\n      this.shareDialogVisible = true;\n    },\n    onClose() {\n      this.shareDialogVisible = false;\n      this.$emit('groupInfoClose');\n    },\n    async shareFriend() {\n      this.GroupInviteVisible = true;\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.getCardItem()]);\n    },\n    currentUserId() {\n      return getSelfUserId();\n    },\n    async onGroupShareOpen() {\n      // let language = this.$i18n.locale;\n      let res = await get_friend_user_info({ id: this.currentUserId() });\n      let userInfo = res.data;\n      let baseUrl = process.env.VUE_APP_SHARE;\n      // this.linkUrl = `${baseUrl}/#/invite/groups?userId=${userInfo.id}\n      //   &inviteCode=${userInfo.inviteCode}&groupCode=${this.groupInfo.groupCode}\n      //   &groupId=${this.groupInfo.id}&language=${language}&nickName=${userInfo.userNickName}&category=fgg`;\n      this.linkUrl = `${baseUrl}/#/invite/groups?i=${userInfo.inviteCode}&g=${this.groupInfo.groupCode}`;\n      this.linkUrl = encodeURI(this.linkUrl);\n    },\n    onCopy() {\n      this.$message.success(this.$t('chat_0026'));\n    },\n    async transferCard() {\n      this.GroupInviteVisible = true;\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.getCardItem()]);\n    },\n    getCardItem() {\n      return {\n        code: this.groupInfo.groupCode,\n        name: this.groupInfo.groupName,\n        msgUrl: this.groupInfo.groupAvatar,\n        id: this.groupInfo.id,\n        type: '2',\n        originTypePsw: true\n      };\n    },\n    confirmDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    cancelDialogHand() {\n      this.GroupInviteVisible = false;\n    }\n  },\n  beforeDestroy(){\n    bus.$off('groupShareClose', this._groupShareClose);\n  }\n};\n</script>\n\n<style scoped lang=\"less\">\n.content {\n  color: #333333;\n  .type-list {\n    display: flex;\n    align-items: flex-start;\n    .type-item {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      span {\n        text-align: center;\n      }\n    }\n  }\n}\n.content img {\n  margin-bottom: 3px;\n}\n.content span {\n  font-size: 12px;\n  padding-left: 5px;\n}\n.group-el-divider {\n  margin: 15px 0;\n}\n.qr-code {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #333333;\n}\n.qr-code img {\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n}\n.group-id {\n  width: 190px;\n  margin: 10px auto;\n  padding: 15px 0;\n  background: #F7F7F7;\n  text-align: center;\n  border-radius: 8px;\n}\n.group-id div {\n  font-size: 18px;\n  user-select: text;\n  font-weight: 600;\n  line-height: 36px;\n}\n.add-group {\n  width: 190px;\n  text-align: center;\n  font-size: 12px;\n  color: #666666;\n}\n</style>\n\n<style lang=\"less\" scoped>\n.shareChat {\n  /deep/ .el-dialog__header {\n    padding: 10px 20px;\n  }\n  /deep/ .el-dialog__title {\n    font-size: 14px;\n\n    font-weight: 600;\n    color: #333;\n  }\n\n  /deep/ .el-dialog__headerbtn {\n    top: 13px;\n  }\n\n  /deep/ .el-dialog__headerbtn .el-dialog__close {\n    color: #000;\n  }\n\n  /deep/ .el-dialog__body {\n    padding: 20px 20px 30px;\n  }\n\n  /deep/ .el-divider {\n    background: #d8d8d8;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".content": {
          "color": "#333333",
          ".type-list": {
            "display": "flex",
            "align-items": "flex-start",
            ".type-item": {
              "flex": "1",
              "display": "flex",
              "flex-direction": "column",
              "align-items": "center",
              "justify-content": "center",
              "cursor": "pointer",
              "span": {
                "text-align": "center"
              }
            }
          }
        },
        ".content img": {
          "margin-bottom": "3px"
        },
        ".content span": {
          "font-size": "12px",
          "padding-left": "5px"
        },
        ".group-el-divider": {
          "margin": "15px 0"
        },
        ".qr-code": {
          "display": "flex",
          "flex-direction": "column",
          "justify-content": "center",
          "align-items": "center",
          "color": "#333333"
        },
        ".qr-code img": {
          "width": "100px",
          "height": "100px",
          "border-radius": "50%"
        },
        ".group-id": {
          "width": "190px",
          "margin": "10px auto",
          "padding": "15px 0",
          "background": "#F7F7F7",
          "text-align": "center",
          "border-radius": "8px"
        },
        ".group-id div": {
          "font-size": "18px",
          "user-select": "text",
          "font-weight": "600",
          "line-height": "36px"
        },
        ".add-group": {
          "width": "190px",
          "text-align": "center",
          "font-size": "12px",
          "color": "#666666"
        }
      },
      {
        ".shareChat": {
          "/deep/ .el-dialog__header": {
            "padding": "10px 20px"
          },
          "/deep/ .el-dialog__title": {
            "font-size": "14px",
            "font-weight": "600",
            "color": "#333"
          },
          "/deep/ .el-dialog__headerbtn": {
            "top": "13px"
          },
          "/deep/ .el-dialog__headerbtn .el-dialog__close": {
            "color": "#000"
          },
          "/deep/ .el-dialog__body": {
            "padding": "20px 20px 30px"
          },
          "/deep/ .el-divider": {
            "background": "#d8d8d8"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/components/common/MessageSendStatus.vue",
    "tagInfo": {
      "0": "<style>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <span v-if=\"item.msgType != 11\">\n    <!-- 1：发送中 2：发送完成 -1 发送失败  3已读-->\n    <div class=\"msgStatus\" v-if=\"item.sendStatus == 1\">\n      <i class=\"el-icon-loading\"></i>\n    </div>\n    <div class=\"msgStatus\" v-if=\"item.sendStatus == 2 && item.targetType == '1'\">\n      <img class=\"img_12\" src=\"../../../../assets/images/msg_status_send.png\" />\n    </div>\n    <div class=\"msgStatus\" v-if=\"item.sendStatus == 3 && item.targetType == '1'\">\n      <img class=\"img_12\" src=\"../../../../assets/images/msg_status_read.png\" />\n    </div>\n    <div class=\"msgStatus\" v-if=\"item.sendStatus == -1\">\n      <img  class=\"img_12\" src=\"../../../../assets/images/msg_status_fail.png\" style=\"cursor: pointer\" @click=\"resendMsg(item)\" />\n    </div>\n  </span>\n</template>\n<script>\nimport SQLUtils from '@/components/db/sqlite.js';\n\nexport default {\n  name: 'message-send-status',\n  data() {\n    return {};\n  },\n  props: {\n    item: { required: true }\n  },\n  mounted() {},\n  computed: {},\n  watch: {},\n  methods: {\n    async resendMsg(item) {\n      item.sendStatus = 1;\n      item.fromResend = true;\n      await SQLUtils.sendMessageStatusSending(item.targetId, item.reqId);\n      if (item.msgType == 2) {\n        item.path = item.msgBody.path;\n        item.reqId = item.msgBody.reqId;\n        item.size = item.msgBody.fsize;\n        item.fileType = item.msgBody.format\n        item.fromId = item.msgBody.fromId;\n        item.friendId = item.msgBody.friendId;\n        this.$emit('handSendImg', item);\n      }\n      if (item.msgType == 6) {\n        this.$emit('reHandSendFile', item.msgBody);\n      }\n      if (item.msgType == 10) {\n        this.$emit('reHandSendVideo', item.msgBody);\n      } else if (item.msgType == 1 || item.msgType == 25 || item.msgType == 15 || item.msgType == 40) {\n        await this.$store.dispatch('CHAT_REST_SEND', { ...item });\n      }\n      // fix 38563 查询chatList\n      // this.$parent?.getGroupHistory?.();//群组历史消息\n      // this.$parent?.getlist?.();//单聊历史消息\n    }\n  }\n};\n</script>",
    "originData": "\n<template>\n  <span v-if=\"item.msgType != 11\">\n    <!-- 1：发送中 2：发送完成 -1 发送失败  3已读-->\n    <div class=\"msgStatus\" v-if=\"item.sendStatus == 1\">\n      <i class=\"el-icon-loading\"></i>\n    </div>\n    <div class=\"msgStatus\" v-if=\"item.sendStatus == 2 && item.targetType == '1'\">\n      <img class=\"img_12\" src=\"../../../../assets/images/msg_status_send.png\" />\n    </div>\n    <div class=\"msgStatus\" v-if=\"item.sendStatus == 3 && item.targetType == '1'\">\n      <img class=\"img_12\" src=\"../../../../assets/images/msg_status_read.png\" />\n    </div>\n    <div class=\"msgStatus\" v-if=\"item.sendStatus == -1\">\n      <img  class=\"img_12\" src=\"../../../../assets/images/msg_status_fail.png\" style=\"cursor: pointer\" @click=\"resendMsg(item)\" />\n    </div>\n  </span>\n</template>\n<script>\nimport SQLUtils from '@/components/db/sqlite.js';\n\nexport default {\n  name: 'message-send-status',\n  data() {\n    return {};\n  },\n  props: {\n    item: { required: true }\n  },\n  mounted() {},\n  computed: {},\n  watch: {},\n  methods: {\n    async resendMsg(item) {\n      item.sendStatus = 1;\n      item.fromResend = true;\n      await SQLUtils.sendMessageStatusSending(item.targetId, item.reqId);\n      if (item.msgType == 2) {\n        item.path = item.msgBody.path;\n        item.reqId = item.msgBody.reqId;\n        item.size = item.msgBody.fsize;\n        item.fileType = item.msgBody.format\n        item.fromId = item.msgBody.fromId;\n        item.friendId = item.msgBody.friendId;\n        this.$emit('handSendImg', item);\n      }\n      if (item.msgType == 6) {\n        this.$emit('reHandSendFile', item.msgBody);\n      }\n      if (item.msgType == 10) {\n        this.$emit('reHandSendVideo', item.msgBody);\n      } else if (item.msgType == 1 || item.msgType == 25 || item.msgType == 15 || item.msgType == 40) {\n        await this.$store.dispatch('CHAT_REST_SEND', { ...item });\n      }\n      // fix 38563 查询chatList\n      // this.$parent?.getGroupHistory?.();//群组历史消息\n      // this.$parent?.getlist?.();//单聊历史消息\n    }\n  }\n};\n</script>\n<style>\n.msgStatus {\n  margin-right: 5px;\n  /* position: absolute;\n  top: 35%;\n  left: -18px; */\n}\n</style>\n",
    "cssJson": [
      {
        ".msgStatus": {
          "margin-right": "5px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/components/common/QuotFormate.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"\">\n    <div v-if=\"item.quotemsgObj\">\n      <!-- {{item.quotemsgObj.text}}{{quote_originText}} -->\n      <div v-if=\"item.quotemsgObj.msgType == '26'\" class=\"quoteBubble\">\n        {{ $t('chat_0065') }}\n      </div>\n      <div v-else class=\"quoteBubble\" :class=\"item.quotemsgObj.msgType == '15' ? 'cardBubble' : ''\">\n        <label class=\"quotName\">{{\n          this.item.msgBody instanceof Object ? item.msgBody.quoteFromName : JSON.parse(item.msgBody).quoteFromName\n        }}</label\n        ><span v-if=\"item.msgBody.quoteFromName\">:</span>\n        <span v-if=\"item.quotemsgObj && (item.quotemsgObj.msgType == 1 || item.quotemsgObj.msgType == 25)\" class=\"text\">\n          <el-popover placement=\"left-end\" title=\"\" width=\"200\" height=\"200\" trigger=\"click\" popper-class=\"quote-popover\">\n            <div v-if=\"!emojiFlag\">{{item.quotemsgObj.text}}</div> <!--纯文本的引用-->\n            <div v-else v-html=\"item.quotemsgObj.text\">引用的内容</div><!--带表情的引用-->\n            <span\n              v-if=\"emojiFlag\"\n              slot=\"reference\"\n              ref=\"quoText\"\n              v-html=\"item.quotemsgObj.text\"\n              class=\"quotext\"\n              style=\"white-space: initial; width: 290px\"\n              >{{ item.quotemsgObj.text }}</span>\n            <span v-else slot=\"reference\" ref=\"quoText\"  class=\"quotext\">\n              {{ item.quotemsgObj.text }}\n            </span>\n          </el-popover>\n        </span>\n        <span v-else-if=\"item.quotemsgObj.msgType == 2\">\n          <!-- <viewer class=\"quotImg\" :image=\"imglsit\"> -->\n          <!-- <img v-show=\"item.quotemsgObj.msgBody.format === 'tiff'\"\n               :src=\"item.quotemsgObj.msgBody.tiffPath\"\n               alt\n               @click=\"viewerShowChild(item.quotemsgObj)\"\n\n          />\n          <img\n              v-show=\"item.quotemsgObj.msgBody.format !== 'tiff'\"\n              :src=\"findImage(item.quotemsgObj.msgBody.mediaId)\" @click=\"viewerShowChild(item.quotemsgObj)\" /> -->\n\n          <img\n             :src=\"findImage(item.quotemsgObj.msgBody.mediaId)\" @click=\"viewerShowChild(item.quotemsgObj)\" />   \n          <!-- </viewer> -->\n        </span>\n        <!--视频文件-->\n        <span  v-else-if=\"item.quotemsgObj.msgType == '10'\" class=\"video-wrap\">\n          <span @click=\"handleQuoteVideoShow\" v-if=\"!itemData.quotemsgObj.showfile\">\n            {{ $t('chat_0015') }}\n          </span>\n          <span v-if=\"itemData.quotemsgObj.showfile\" @click=\"viewerShowChild(item.quotemsgObj)\">\n            <video\n                :style=\"{\n          background: item.quotemsgObj.msgBody.noFirstFrame || item.quotemsgObj.msgBody.isH265 ? '#cfe1ff': ''}\"\n                v-if=\"item.quotemsgObj.showfile\"\n                :src=\"item.quotemsgObj.msgBody.fileId\"\n                class=\"show-video\"\n                :height=\"item.quotemsgObj.msgBody.firstFrame.height\"\n                :width=\"item.quotemsgObj.msgBody.firstFrame.width\"\n            >\n            {{ $t('Universal_0373') }}\n          </video>\n            <i class=\"el-icon-video-play videoStart\"\n               @click=\"viewerShowChild(item.quotemsgObj)\"\n               v-show=\"(item.quotemsgObj.msgBody.downloadFinished||\n               videoDownloadPercent[item.quotemsgObj.msgId]==100)&&\n               !fileBeCleared[item.quotemsgObj.msgId]\" />\n            <span class=\"progress-mask\"\n                  v-show=\"item.quotemsgObj.msgBody.downloadLoading&&\n                  videoDownloadPercent[item.quotemsgObj.msgId]!==100&&\n                  !fileBeCleared[item.quotemsgObj.msgId]\"></span>\n            <el-progress type=\"circle\"\n                         :percentage=\"videoDownloadPercent[item.quotemsgObj.msgId]||0\"\n                         class=\"videoStart downloadProcess\"\n                         :show-text=\"false\"\n                         :width=\"40\"\n                         v-show=\"videoDownloadPercent[item.quotemsgObj.msgId]<100&&!fileBeCleared[item.quotemsgObj.msgId]\"\n                         color=\"#2f54eb\"\n                         :stroke-width=\"3\"\n            ></el-progress>\n<!--            {{'a: '+videoNotInCurrentPC[item.quotemsgObj.msgId]}}\n            {{'b: '+fileBeCleared[item.quotemsgObj.msgId]}}-->\n            <i class=\"el-icon-warning videoStart\"\n               v-show=\"\n               videoNotInCurrentPC[item.quotemsgObj.msgId]||\n               fileBeCleared[item.quotemsgObj.msgId]\"></i>\n          </span>\n        </span>\n        <!--文件-->\n        <span v-else-if=\"item.quotemsgObj.msgType == '6'\">\n          {{ $t('chat_0017') }}{{ item.quotemsgObj.msgBody&&(item.quotemsgObj.msgBody.fileName || item.quotemsgObj.msgBody.fname) }}\n        </span>\n        <!--明信片-->\n        <span v-else-if=\"item.quotemsgObj.msgType == '15'\" class=\"carte\" @click=\"lookQuoteCard(item.quotemsgObj)\">\n          <div class=\"cardinfo\" v-if=\"item.quotemsgObj.msgBody.type == '2'\">\n            <img :src=\"item.quotemsgObj.msgBody.msgUrl\" />\n            <span style=\"margin-left:5px\">\n              <label class=\"cardName\">{{ item.quotemsgObj.msgBody.name }}</label>\n              <br />ID:\n              {{ item.quotemsgObj.msgBody.code }}\n            </span>\n          </div>\n\n          <div class=\"cardinfo\" v-else>\n            <MemberIcon\n              :vipType=\"item.quotemsgObj.msgBody.vipType\"\n              :image=\"item.quotemsgObj.msgBody.msgUrl\"\n              iconType=\"mini\"\n              :userRank=\"item.quotemsgObj.userRank\"\n            />\n            <div class=\"topitem\">\n              <span class=\"cardName\" style=\"display:flex;align-items:center;margin-bottom:5px;\">\n                <label class=\"name\">{{ item.quotemsgObj.msgBody.name }}</label>\n                <LevelIcon\n                  :inviteCode=\"item.quotemsgObj.msgBody.code\"\n                  :userRank=\"item.quotemsgObj.msgBody.userRank\"\n                  iconType=\"small\"\n                  :vipType=\"item.msgBody.vipType\"\n                  :inviteCodeType=\"item.quotemsgObj.msgBody.inviteCodeType\"\n                  :listFlag=\"true\"\n                  style=\"padding-left: 2px;\"\n                />\n              </span>\n              <!-- {{ item.msgBody.code }} -->\n              <LuckIdIcon\n                :inviteCode=\"item.quotemsgObj.msgBody.code\"\n                :userRank=\"item.quotemsgObj.msgBody.userRank\"\n                iconType=\"medium\"\n                :vipType=\"item.quotemsgObj.msgBody.vipType\"\n                :inviteCodeType=\"item.quotemsgObj.msgBody.inviteCodeType\"\n                :listFlag=\"false\"\n              />\n            </div>\n          </div>\n          <p v-if=\"item.quotemsgObj.msgBody.type == 1\">{{ $t('chat_0021') }}</p>\n          <p v-else>{{ $t('chat_0023') }}</p>\n        </span>\n        <span v-else-if=\"item.quotemsgObj.msgType == '14'\">{{ $t('chat_0087') }}</span>\n        <span v-else-if=\"item.quotemsgObj.msgType == '44'\">{{ $t('chat_0088') }}</span>\n        <div v-else-if=\"item.quotemsgObj.msgType == '56'\" class=\"acitivity\" @click=\"goActivityPage(item.quotemsgObj)\">\n          <img :src=\"item.quotemsgObj.msgBody.imgUrl\" alt=\"\">\n          <p class=\"title\">{{item.quotemsgObj.msgBody.title}}</p>\n          <!-- <p class=\"content\">{{messageItem.msgBody.text}}</p> -->\n          <div class=\"bottom\">\n            <img src=\"../../../../assets/images/didi_activity_icon.png\" alt=\"\"><p>{{$t('chat_0125')}}</p>\n          </div>\n        </div>\n        <span v-else>{{ $t('chat_0089') }}</span>\n      </div>\n    </div>\n    <div\n      class=\"quoteBubble\"\n      v-else-if=\"!item['quotemsgObj'] && item.msgType == 25\"\n    >\n      {{ $t(\"chat_0126\") }}\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport fileOperational from '@/services/fileOperational';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport { checkVideoIsExists } from '@/utils/file';\nimport {goOfficialPage} from '../../../../utils'\nimport { mapGetters } from 'vuex';\nimport emojiList from \"@/utils/emoji.js\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  inject: [\"scrollToBottom\"],\n  data() {\n    //这里存放数据\n    return {\n      imglsit: [],\n      quote_originText: '',\n      emojiFlag: false,\n      itemData: this.item\n    };\n  },\n  props: {\n    item: { required: true },\n    // emojiList: { required: true }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters(['videoDownloadPercent', 'fileBeCleared', 'videoNotInCurrentPC','chatList']),\n\n  },\n  //监控data中的数据变化\n  watch: {\n    item:{\n      deep:true,\n      immediate: true,\n      handler(val){\n        this.itemData = val;\n        this._handleEmojiShow();\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    async handleQuoteVideoShow(){\n      this.itemData.quotemsgObj.showfile = true;\n      await this.$nextTick()\n      if(this.chatList?.[this.chatList?.length-1]?.msgId==this.itemData?.msgId){\n        // 最后一条引用视频消息显示 视频滚动\n        console.log('最后一条引用视频消息显示，滚动到底部')\n        this?.scrollToBottom?.()\n      }\n    },\n    async viewerShowChild(item) {\n      console.log('viewerShowChild-- ',item)\n      if (item.msgType == '10' && !this.itemData.quotemsgObj.showfile) {\n        this.itemData.quotemsgObj.showfile = true;\n        return;\n      }\n      if (item.msgType == '10' && this.videoDownloadPercent[item.msgId]<100) {\n        return;\n      }\n      if (item.msgType != '10') {\n        //TODO 组件通用化 禁止直接使用$parent\n        this.$parent.viewerShow(item);\n        return;\n      }\n      try {\n        let flag = await checkVideoIsExists(item.msgBody.downloadPath);\n        if (flag) {\n          console.log('存在')\n          //TODO 组件通用化 禁止直接使用$parent\n          this.$parent.viewerShow(item);\n        } else {\n          console.log('不存在')\n          this.$message.error(this.$t('chat_0124'));\n          this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: true});\n        }\n      } catch (e) {\n        console.error('catch',e)\n      }\n    },\n    lookQuoteCard(item) {\n      this.$emit('lookQuoteCard', item);\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    _handleEmojiShow(){\n      if (this.item.msgType == 25) {\n        console.log(this.item, '引用的item');\n        if (this.item.quotemsgObj && this.item.quotemsgObj.text) {\n          let patt = /\\[([^\\\\[])+?\\]/g;\n          let originText;\n          let arr;\n          // let new_text = this.item.quotemsgObj.text;\n          let new_text = this.item.quotemsgObj.msgBody.text;\n          if (new_text) {\n            originText = new_text;\n            arr = originText.match(patt);\n          }\n          if (arr && originText) {\n            if (arr.length > 0) {\n              this.emojiFlag = true;\n              for (let index = 0; index < arr.length; index++) {\n                let item = arr[index];\n                let ret = emojiList.find(x => x.tag == item);\n                if (ret) {\n                  let img = `<img src=\"/resources/emoji/${ret.file}\" width=22px  class=\"quoteEmoji\"/>`;\n                  originText = originText.replace(item, img);\n                }\n              }\n            }\n            console.log(this.$refs.quoText);\n          // this.$refs.quoText.innerHTML = originText;\n          }\n          //console.log(originText,'引用的originText')\n\n        this.item.quotemsgObj.text = originText; // eslint-disable-line\n        }\n      }\n    },\n    goActivityPage(msgInfo){\n      console.log(msgInfo)\n      goOfficialPage();\n      // msgInfo.msgBody?.url && eShell.openExternal(msgInfo.msgBody.url);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this._handleEmojiShow();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<template>\n  <div class=\"\">\n    <div v-if=\"item.quotemsgObj\">\n      <!-- {{item.quotemsgObj.text}}{{quote_originText}} -->\n      <div v-if=\"item.quotemsgObj.msgType == '26'\" class=\"quoteBubble\">\n        {{ $t('chat_0065') }}\n      </div>\n      <div v-else class=\"quoteBubble\" :class=\"item.quotemsgObj.msgType == '15' ? 'cardBubble' : ''\">\n        <label class=\"quotName\">{{\n          this.item.msgBody instanceof Object ? item.msgBody.quoteFromName : JSON.parse(item.msgBody).quoteFromName\n        }}</label\n        ><span v-if=\"item.msgBody.quoteFromName\">:</span>\n        <span v-if=\"item.quotemsgObj && (item.quotemsgObj.msgType == 1 || item.quotemsgObj.msgType == 25)\" class=\"text\">\n          <el-popover placement=\"left-end\" title=\"\" width=\"200\" height=\"200\" trigger=\"click\" popper-class=\"quote-popover\">\n            <div v-if=\"!emojiFlag\">{{item.quotemsgObj.text}}</div> <!--纯文本的引用-->\n            <div v-else v-html=\"item.quotemsgObj.text\">引用的内容</div><!--带表情的引用-->\n            <span\n              v-if=\"emojiFlag\"\n              slot=\"reference\"\n              ref=\"quoText\"\n              v-html=\"item.quotemsgObj.text\"\n              class=\"quotext\"\n              style=\"white-space: initial; width: 290px\"\n              >{{ item.quotemsgObj.text }}</span>\n            <span v-else slot=\"reference\" ref=\"quoText\"  class=\"quotext\">\n              {{ item.quotemsgObj.text }}\n            </span>\n          </el-popover>\n        </span>\n        <span v-else-if=\"item.quotemsgObj.msgType == 2\">\n          <!-- <viewer class=\"quotImg\" :image=\"imglsit\"> -->\n          <!-- <img v-show=\"item.quotemsgObj.msgBody.format === 'tiff'\"\n               :src=\"item.quotemsgObj.msgBody.tiffPath\"\n               alt\n               @click=\"viewerShowChild(item.quotemsgObj)\"\n\n          />\n          <img\n              v-show=\"item.quotemsgObj.msgBody.format !== 'tiff'\"\n              :src=\"findImage(item.quotemsgObj.msgBody.mediaId)\" @click=\"viewerShowChild(item.quotemsgObj)\" /> -->\n\n          <img\n             :src=\"findImage(item.quotemsgObj.msgBody.mediaId)\" @click=\"viewerShowChild(item.quotemsgObj)\" />   \n          <!-- </viewer> -->\n        </span>\n        <!--视频文件-->\n        <span  v-else-if=\"item.quotemsgObj.msgType == '10'\" class=\"video-wrap\">\n          <span @click=\"handleQuoteVideoShow\" v-if=\"!itemData.quotemsgObj.showfile\">\n            {{ $t('chat_0015') }}\n          </span>\n          <span v-if=\"itemData.quotemsgObj.showfile\" @click=\"viewerShowChild(item.quotemsgObj)\">\n            <video\n                :style=\"{\n          background: item.quotemsgObj.msgBody.noFirstFrame || item.quotemsgObj.msgBody.isH265 ? '#cfe1ff': ''}\"\n                v-if=\"item.quotemsgObj.showfile\"\n                :src=\"item.quotemsgObj.msgBody.fileId\"\n                class=\"show-video\"\n                :height=\"item.quotemsgObj.msgBody.firstFrame.height\"\n                :width=\"item.quotemsgObj.msgBody.firstFrame.width\"\n            >\n            {{ $t('Universal_0373') }}\n          </video>\n            <i class=\"el-icon-video-play videoStart\"\n               @click=\"viewerShowChild(item.quotemsgObj)\"\n               v-show=\"(item.quotemsgObj.msgBody.downloadFinished||\n               videoDownloadPercent[item.quotemsgObj.msgId]==100)&&\n               !fileBeCleared[item.quotemsgObj.msgId]\" />\n            <span class=\"progress-mask\"\n                  v-show=\"item.quotemsgObj.msgBody.downloadLoading&&\n                  videoDownloadPercent[item.quotemsgObj.msgId]!==100&&\n                  !fileBeCleared[item.quotemsgObj.msgId]\"></span>\n            <el-progress type=\"circle\"\n                         :percentage=\"videoDownloadPercent[item.quotemsgObj.msgId]||0\"\n                         class=\"videoStart downloadProcess\"\n                         :show-text=\"false\"\n                         :width=\"40\"\n                         v-show=\"videoDownloadPercent[item.quotemsgObj.msgId]<100&&!fileBeCleared[item.quotemsgObj.msgId]\"\n                         color=\"#2f54eb\"\n                         :stroke-width=\"3\"\n            ></el-progress>\n<!--            {{'a: '+videoNotInCurrentPC[item.quotemsgObj.msgId]}}\n            {{'b: '+fileBeCleared[item.quotemsgObj.msgId]}}-->\n            <i class=\"el-icon-warning videoStart\"\n               v-show=\"\n               videoNotInCurrentPC[item.quotemsgObj.msgId]||\n               fileBeCleared[item.quotemsgObj.msgId]\"></i>\n          </span>\n        </span>\n        <!--文件-->\n        <span v-else-if=\"item.quotemsgObj.msgType == '6'\">\n          {{ $t('chat_0017') }}{{ item.quotemsgObj.msgBody&&(item.quotemsgObj.msgBody.fileName || item.quotemsgObj.msgBody.fname) }}\n        </span>\n        <!--明信片-->\n        <span v-else-if=\"item.quotemsgObj.msgType == '15'\" class=\"carte\" @click=\"lookQuoteCard(item.quotemsgObj)\">\n          <div class=\"cardinfo\" v-if=\"item.quotemsgObj.msgBody.type == '2'\">\n            <img :src=\"item.quotemsgObj.msgBody.msgUrl\" />\n            <span style=\"margin-left:5px\">\n              <label class=\"cardName\">{{ item.quotemsgObj.msgBody.name }}</label>\n              <br />ID:\n              {{ item.quotemsgObj.msgBody.code }}\n            </span>\n          </div>\n\n          <div class=\"cardinfo\" v-else>\n            <MemberIcon\n              :vipType=\"item.quotemsgObj.msgBody.vipType\"\n              :image=\"item.quotemsgObj.msgBody.msgUrl\"\n              iconType=\"mini\"\n              :userRank=\"item.quotemsgObj.userRank\"\n            />\n            <div class=\"topitem\">\n              <span class=\"cardName\" style=\"display:flex;align-items:center;margin-bottom:5px;\">\n                <label class=\"name\">{{ item.quotemsgObj.msgBody.name }}</label>\n                <LevelIcon\n                  :inviteCode=\"item.quotemsgObj.msgBody.code\"\n                  :userRank=\"item.quotemsgObj.msgBody.userRank\"\n                  iconType=\"small\"\n                  :vipType=\"item.msgBody.vipType\"\n                  :inviteCodeType=\"item.quotemsgObj.msgBody.inviteCodeType\"\n                  :listFlag=\"true\"\n                  style=\"padding-left: 2px;\"\n                />\n              </span>\n              <!-- {{ item.msgBody.code }} -->\n              <LuckIdIcon\n                :inviteCode=\"item.quotemsgObj.msgBody.code\"\n                :userRank=\"item.quotemsgObj.msgBody.userRank\"\n                iconType=\"medium\"\n                :vipType=\"item.quotemsgObj.msgBody.vipType\"\n                :inviteCodeType=\"item.quotemsgObj.msgBody.inviteCodeType\"\n                :listFlag=\"false\"\n              />\n            </div>\n          </div>\n          <p v-if=\"item.quotemsgObj.msgBody.type == 1\">{{ $t('chat_0021') }}</p>\n          <p v-else>{{ $t('chat_0023') }}</p>\n        </span>\n        <span v-else-if=\"item.quotemsgObj.msgType == '14'\">{{ $t('chat_0087') }}</span>\n        <span v-else-if=\"item.quotemsgObj.msgType == '44'\">{{ $t('chat_0088') }}</span>\n        <div v-else-if=\"item.quotemsgObj.msgType == '56'\" class=\"acitivity\" @click=\"goActivityPage(item.quotemsgObj)\">\n          <img :src=\"item.quotemsgObj.msgBody.imgUrl\" alt=\"\">\n          <p class=\"title\">{{item.quotemsgObj.msgBody.title}}</p>\n          <!-- <p class=\"content\">{{messageItem.msgBody.text}}</p> -->\n          <div class=\"bottom\">\n            <img src=\"../../../../assets/images/didi_activity_icon.png\" alt=\"\"><p>{{$t('chat_0125')}}</p>\n          </div>\n        </div>\n        <span v-else>{{ $t('chat_0089') }}</span>\n      </div>\n    </div>\n    <div\n      class=\"quoteBubble\"\n      v-else-if=\"!item['quotemsgObj'] && item.msgType == 25\"\n    >\n      {{ $t(\"chat_0126\") }}\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport fileOperational from '@/services/fileOperational';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport { checkVideoIsExists } from '@/utils/file';\nimport {goOfficialPage} from '../../../../utils'\nimport { mapGetters } from 'vuex';\nimport emojiList from \"@/utils/emoji.js\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  inject: [\"scrollToBottom\"],\n  data() {\n    //这里存放数据\n    return {\n      imglsit: [],\n      quote_originText: '',\n      emojiFlag: false,\n      itemData: this.item\n    };\n  },\n  props: {\n    item: { required: true },\n    // emojiList: { required: true }\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters(['videoDownloadPercent', 'fileBeCleared', 'videoNotInCurrentPC','chatList']),\n\n  },\n  //监控data中的数据变化\n  watch: {\n    item:{\n      deep:true,\n      immediate: true,\n      handler(val){\n        this.itemData = val;\n        this._handleEmojiShow();\n      }\n    }\n  },\n  //方法集合\n  methods: {\n    async handleQuoteVideoShow(){\n      this.itemData.quotemsgObj.showfile = true;\n      await this.$nextTick()\n      if(this.chatList?.[this.chatList?.length-1]?.msgId==this.itemData?.msgId){\n        // 最后一条引用视频消息显示 视频滚动\n        console.log('最后一条引用视频消息显示，滚动到底部')\n        this?.scrollToBottom?.()\n      }\n    },\n    async viewerShowChild(item) {\n      console.log('viewerShowChild-- ',item)\n      if (item.msgType == '10' && !this.itemData.quotemsgObj.showfile) {\n        this.itemData.quotemsgObj.showfile = true;\n        return;\n      }\n      if (item.msgType == '10' && this.videoDownloadPercent[item.msgId]<100) {\n        return;\n      }\n      if (item.msgType != '10') {\n        //TODO 组件通用化 禁止直接使用$parent\n        this.$parent.viewerShow(item);\n        return;\n      }\n      try {\n        let flag = await checkVideoIsExists(item.msgBody.downloadPath);\n        if (flag) {\n          console.log('存在')\n          //TODO 组件通用化 禁止直接使用$parent\n          this.$parent.viewerShow(item);\n        } else {\n          console.log('不存在')\n          this.$message.error(this.$t('chat_0124'));\n          this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: true});\n        }\n      } catch (e) {\n        console.error('catch',e)\n      }\n    },\n    lookQuoteCard(item) {\n      this.$emit('lookQuoteCard', item);\n    },\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    _handleEmojiShow(){\n      if (this.item.msgType == 25) {\n        console.log(this.item, '引用的item');\n        if (this.item.quotemsgObj && this.item.quotemsgObj.text) {\n          let patt = /\\[([^\\\\[])+?\\]/g;\n          let originText;\n          let arr;\n          // let new_text = this.item.quotemsgObj.text;\n          let new_text = this.item.quotemsgObj.msgBody.text;\n          if (new_text) {\n            originText = new_text;\n            arr = originText.match(patt);\n          }\n          if (arr && originText) {\n            if (arr.length > 0) {\n              this.emojiFlag = true;\n              for (let index = 0; index < arr.length; index++) {\n                let item = arr[index];\n                let ret = emojiList.find(x => x.tag == item);\n                if (ret) {\n                  let img = `<img src=\"/resources/emoji/${ret.file}\" width=22px  class=\"quoteEmoji\"/>`;\n                  originText = originText.replace(item, img);\n                }\n              }\n            }\n            console.log(this.$refs.quoText);\n          // this.$refs.quoText.innerHTML = originText;\n          }\n          //console.log(originText,'引用的originText')\n\n        this.item.quotemsgObj.text = originText; // eslint-disable-line\n        }\n      }\n    },\n    goActivityPage(msgInfo){\n      console.log(msgInfo)\n      goOfficialPage();\n      // msgInfo.msgBody?.url && eShell.openExternal(msgInfo.msgBody.url);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this._handleEmojiShow();\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.quoteEmoji {\n  width: 15px !important;\n}\n\n.quotName {\n  display: inline-block;\n  max-width: 72px;\n  overflow: hidden;\n  white-space: pre;\n  text-overflow: ellipsis;\n  word-break: keep-all;\n}\n\n.quoteBubble {\n  cursor: pointer;\n  max-width: 350px;\n  word-break: break-all;\n  word-wrap: break-word;\n}\n\n.cardBubble {\n  max-width: 210px !important;\n}\n\n.carte {\n  display: block;\n  background: #fff;\n  border-radius: 5px;\n  padding: 5px;\n\n  .cardName {\n    color: #333;\n    display: inline-block;\n    width: 140px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    .name {\n      color: #333;\n      max-width: 75%;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  }\n\n  p {\n    border-top: #eee solid 1px;\n    margin-top: 5px;\n    line-height: 20px;\n    padding-top: 5px;\n  }\n  .topitem {\n    padding-left: 20px;\n  }\n  .cardinfo {\n    display: flex;\n    width: 200px;\n\n    img,\n    span {\n      vertical-align: top;\n    }\n\n    img {\n      border: #ddd solid 1px;\n      width: 40px;\n      height: 40px;\n      border-radius: 20px;\n      display: inline-block;\n    }\n\n    span {\n      // padding-left: 20px;\n      line-height: 20px;\n    }\n  }\n}\n.video-wrap {\n  display: inline-block;\n  position: relative;\n  .videoStart {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -webkit-transform: translate(-50%, -50%);\n    font-size: 40px;\n    color: whitesmoke;\n  }\n  .progress-mask {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, .5);\n  }\n}\n\n.show-video {\n  max-height: 240px;\n  &:focus{\n    outline: none;\n  }\n}\n.acitivity{\n  max-width: 200px;\n  padding: 7px 10px;\n  background:#fff;\n  border-radius: 10px;\n  font-family: PingFangSC, PingFangSC-Regular;\n  font-weight: 400;\n  img{\n    max-width: 100%;\n    display: block;\n  }\n  .title{\n    margin-top: 5px;\n    font-size: 14px; \n    color: #333333;\n    line-height: 20px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n  .content{\n    font-size: 12px;\n    text-align: left;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    color: #999999;\n    line-height: 17px;\n  }\n  .bottom{\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    margin-top: 5px;\n    img{\n      width: 16px;\n    }\n    p{\n      margin-left: 5px;\n      font-size: 11px;\n      text-align: left;\n      color: #999999;\n      line-height: 16px;\n    }\n  }\n}\n  .quotext {\n    white-space: pre-wrap;\n  }\n</style>\n",
    "cssJson": [
      {
        ".quoteEmoji": {
          "width": "15px !important"
        },
        ".quotName": {
          "display": "inline-block",
          "max-width": "72px",
          "overflow": "hidden",
          "white-space": "pre",
          "text-overflow": "ellipsis",
          "word-break": "keep-all"
        },
        ".quoteBubble": {
          "cursor": "pointer",
          "max-width": "350px",
          "word-break": "break-all",
          "word-wrap": "break-word"
        },
        ".cardBubble": {
          "max-width": "210px !important"
        },
        ".carte": {
          "display": "block",
          "background": "#fff",
          "border-radius": "5px",
          "padding": "5px",
          ".cardName": {
            "color": "#333",
            "display": "inline-block",
            "width": "140px",
            "overflow": "hidden",
            "text-overflow": "ellipsis",
            "white-space": "nowrap",
            ".name": {
              "color": "#333",
              "max-width": "75%",
              "overflow": "hidden",
              "text-overflow": "ellipsis",
              "white-space": "nowrap"
            }
          },
          "p": {
            "border-top": "#eee solid 1px",
            "margin-top": "5px",
            "line-height": "20px",
            "padding-top": "5px"
          },
          ".topitem": {
            "padding-left": "20px"
          },
          ".cardinfo": {
            "display": "flex",
            "width": "200px",
            "img,    span": {
              "vertical-align": "top"
            },
            "img": {
              "border": "#ddd solid 1px",
              "width": "40px",
              "height": "40px",
              "border-radius": "20px",
              "display": "inline-block"
            },
            "span": {
              "line-height": "20px"
            }
          }
        },
        ".video-wrap": {
          "display": "inline-block",
          "position": "relative",
          ".videoStart": {
            "position": "absolute",
            "top": "50%",
            "left": "50%",
            "transform": "translate(-50%, -50%)",
            "-webkit-transform": "translate(-50%, -50%)",
            "font-size": "40px",
            "color": "whitesmoke"
          },
          ".progress-mask": {
            "position": "absolute",
            "left": "0",
            "top": "0",
            "width": "100%",
            "height": "100%",
            "background": "rgba(0, 0, 0, .5)"
          }
        },
        ".show-video": {
          "max-height": "240px",
          "&:focus": {
            "outline": "none"
          }
        },
        ".acitivity": {
          "max-width": "200px",
          "padding": "7px 10px",
          "background": "#fff",
          "border-radius": "10px",
          "font-family": "PingFangSC, PingFangSC-Regular",
          "font-weight": "400",
          "img": {
            "max-width": "100%",
            "display": "block"
          },
          ".title": {
            "margin-top": "5px",
            "font-size": "14px",
            "color": "#333333",
            "line-height": "20px",
            "overflow": "hidden",
            "text-overflow": "ellipsis",
            "display": "-webkit-box",
            "-webkit-line-clamp": "2",
            "line-clamp": "2",
            "-webkit-box-orient": "vertical"
          },
          ".content": {
            "font-size": "12px",
            "text-align": "left",
            "overflow": "hidden",
            "white-space": "nowrap",
            "text-overflow": "ellipsis",
            "color": "#999999",
            "line-height": "17px"
          },
          ".bottom": {
            "display": "flex",
            "align-items": "center",
            "justify-content": "flex-start",
            "margin-top": "5px",
            "img": {
              "width": "16px"
            },
            "p": {
              "margin-left": "5px",
              "font-size": "11px",
              "text-align": "left",
              "color": "#999999",
              "line-height": "16px"
            }
          }
        },
        ".quotext": {
          "white-space": "pre-wrap"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/add-friends-group/add/friends.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--成员列表-加好友  -->\n<template>\n  <div class=\"friends\">\n    <div class=\"flex top\">\n      <el-input\n        size=\"small\"\n        :placeholder=\"$t('Universal_0360')\"\n        prefix-icon=\"el-icon-search\"\n        style=\"flex: 1; margin-right: 10px\"\n        v-model=\"value\"\n        clearable\n        @keydown.enter.native=\"search\"\n        id=\"addFriSearch\"\n        :code=\"addFriVisible\"\n        @click=\"document.getElementById('addFriSearch').focus()\"\n      ></el-input>\n      <el-button size=\"small\" type=\"primary\" @click=\"search\">{{ $t('Universal_0058') }}</el-button>\n    </div>\n    <div class=\"link\" >\n      <div @click=\"Toshare\" class=\"invite-link\" style=\"position: relative\">\n        <div\n          style=\"\n            display: inline-block;\n            position: absolute;\n            left: -15px;\n            top: 2px;\n          \"\n        >\n          <img src=\"../../../assets/images/link_share.png\" />\n        </div>\n        <span>{{ $t('chat_addfriend_0006') }}</span>\n      </div>\n      <div class=\"invite-tip\">{{ $t('chat_addfriend_0007') }}</div>\n    </div>\n\n    <div class=\"list\"  >\n      <div  v-if=\"hasData && addFriVisible\" id=\"linkF2\"  contenteditable=\"true\"  @keydown.enter=\"keyMoveF\">\n        <ul class=\"list-box\" contenteditable=\"false\">\n          <li class=\"li-card\" v-for=\"(item, index) in dataList\" \n          :key=\"index\"\n          :class=\"{activeFri:indexAt == item.indexAt}\" \n          :id=\"item.inviteCode\">\n            <div class=\"card flex align-center\">\n              <div class=\"left\">\n                <MemberIcon :image=\"item.userHeadImg\" iconType=\"mini\" :userRank=\"item.userRank\" :vipType=\"item.vipType\" />\n                <div class=\"name-code-class \">\n                  <p class=\"name flex\">\n                    <span class=\"user-nick-name\" :title=\"item.userNickName\"> {{ item.userNickName }}</span>\n                    <LevelIcon\n                      :inviteCode=\"item.inviteCode\"\n                      :userRank=\"item.userRank\"\n                      iconType=\"medium\"\n                      :vipType=\"item.vipType\"\n                      :inviteCodeType=\"item.inviteCodeType\"\n                    />\n                  </p>\n                  <p class=\"pass\">\n                    <!-- 个人ID：{{item.inviteCode}} -->\n                    <LuckIdIcon\n                      :inviteCode=\"item.inviteCode\"\n                      :userRank=\"item.userRank\"\n                      iconType=\"medium\"\n                      :vipType=\"item.vipType\"\n                      :inviteCodeType=\"item.inviteCodeType\"\n                      :listFlag=\"false\"\n                    />\n                  </p>\n                </div>\n              </div>\n              <!-- <div class=\"right\">\n                <button class=\"btn\" v-if=\"item.isFriend\" @click=\"goChat(item)\">\n                  开始聊天\n                </button>\n                <el-button v-else-if=\"item.id == id\" disabled=\"disabled\" size=\"small\" style=\"font-size: 14px\">加为好友</el-button>\n                <el-button v-else-if=\"item.friendApplyStatus == 0\" disabled=\"disabled\" size=\"small\" type=\"info\" style=\"font-size: 14px;\"\n                  ><i class=\"iconfont icon-jinzhi1 no-use-btn\"></i>加为好友</el-button\n                >\n                <button class=\"btn\" v-else @click=\"addFriends(item.id)\">\n                  加为好友\n                </button>\n              </div>\n            </div> -->\n            <div class=\"right\">\n              <button class=\"btn\" v-if=\"item.isFriend\" @click=\"goChat(item)\">\n                {{ $t('Universal_0354') }}\n              </button>\n              <el-button v-else-if=\"item.id == id\" disabled=\"disabled\" size=\"small\" style=\"font-size: 14px\">\n                {{ $t('book_friend_0012') }}\n              </el-button>\n              <el-button v-else-if=\"item.friendApplyStatus == 0\" disabled=\"disabled\" size=\"small\" type=\"info\" style=\"font-size: 14px;\"\n                ><i class=\"iconfont icon-jinzhi1 no-use-btn\"></i>{{ $t('book_friend_0012') }}</el-button\n              >\n              <button class=\"btn\" v-else @click=\"addFriends(item.id)\">\n                {{ $t('book_friend_0012') }}\n              </button>\n            </div>\n          </div>\n          </li>\n        </ul>\n      </div>\n      <ul v-else class=\"ser-nocontent\">\n        <div class=\"no-box\">\n          <img src=\"../../../assets/images/web.png\" alt=\"error\" />\n          <p>{{ $t('Universal_0174') }}</p>\n        </div>\n      </ul>\n    </div>\n    <DialogAddFriendVisible\n      ref=\"myordernum\"\n      :dialogAddFriendsVisible=\"dialogAddFriendsVisible\"\n      @handCancelFriDialog=\"handCancelFriDialog\"\n      @handConfirmFriDialog=\"handConfirmFriDialog\"\n      :friendData=\"friendData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <DialogShareVisible\n      ref=\"myordernum\"\n      :dialogShareVisible=\"dialogShareVisible\"\n      @dialog-share-close=\"dialogShareClose\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DialogAddFriendVisible from \"../dialog/add-friends\";\nimport DialogShareVisible from \"../dialog/share-friends\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport { get_query_code } from \"../../../server\";\nimport { get_the_info } from \"../add/server\";\nimport { contFriSize } from \"@/utils\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport { mapState,mapMutations } from \"vuex\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nimport AppealsDialog from \"@/view/chat/appeals\";\nimport ImpeachDialog from \"@/view/chat/impeach\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DialogAddFriendVisible,\n    DialogShareVisible,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n    AppealsDialog,\n    ImpeachDialog,\n  },\n  props: {\n    addFriVisible:{\n      type:Boolean,\n      default:false\n    },\n    inviteCode: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      addFlag: true,\n      id: '',\n      value: '',\n      dialogAddFriendsVisible: false,\n      dialogShareVisible: false,\n      AppealsVisible: false,\n      ImpeachVisible: false,\n      impeachFromtype: '',//来源类型\n      dataList: [],\n      hasData: true,\n      friendData: {},\n      indexAt:0,\n      currentItem:{},//上下键选中的item\n      alldataNum:0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n  },\n  //监控data中的数据变化\n  watch: {\n  //   'isCon':function(){\n  //     if(this.isCon == 1){\n  //       this.value = ''\n  //     }\n  //   }\n    // addFriVisible(val){\n    //   if(!val){\n    //     document.getElementById('linkF2').removeEventListener('keydown', this.keyMoveF)\n    //   }\n    // }\n  },\n  //方法集合\n  filters: {\n    substringName(val) {\n      return val && val.length > 10 ? val.substring(0, 10) + '...' : val;\n    }\n  },\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    goChat(a) {\n      const userId = UserInfoUtils.getCurrentUserId();\n      const current = {\n        id: a.id,\n        fromId: a.id,\n        targetId: userId,\n        fromType: '999',\n        targetType: 1,\n        msgType: 1,\n        timer: new Date().getTime(),\n        uniqueCode: contFriSize(userId, a.id),\n        friendName: a.friendNickName\n      };\n      this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/single/message',\n        query: current\n      });\n      this.$emit('handleColseFri', false);\n    },\n    dialogShareClose() {\n      this.dialogShareVisible = false;\n    },\n    async search() {\n      if (!this.value.trim()) {\n        this.$message.error(this.$t('Universal_0240'));\n        return;\n      }\n      let params = {\n        code: this.value\n      };\n      await this.searchFriend(params);\n      document.getElementById('addFriSearch').blur()\n      this.chooseSearch()\n      \n    },\n    async searchFriend(param) {\n      try {\n        let res = await get_query_code(param);\n        this.dataList = res.data;\n        console.log(param, this.id, this.dataList);\n        this.dataList.forEach((item,index)=>{\n          item.indexAt = index;\n        })\n        if (this.dataList.length == 0) {\n          this.hasData = false;\n        } else {\n          this.hasData = true;\n          this.alldataNum = this.dataList.length\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getFrInfo(a) {\n      let res = await get_the_info({ id: a });\n      if (res.code == 200) {\n        this.friendData = res.data;\n        this.$refs.myordernum.setkeynull();\n      }\n    },\n    addFriends(a) {\n      if(this.personalAppealInfo.createTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('book_group_0019'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.toAppeal('single');\n        }).catch(() => {\n        });\n      }else{\n        this.getFrInfo(a);\n\n        this.dialogAddFriendsVisible = true;\n      }\n      \n    },\n    Toshare() {\n      this.dialogShareVisible = true;\n    },\n    handCancelFriDialog(param) {\n      this.dialogAddFriendsVisible = param;\n    },\n    handConfirmFriDialog(param) {\n      this.dialogAddFriendsVisible = param;\n    },\n    cancelAppealsDialogHand(param) {\n      this.AppealsVisible = param;\n    },\n    cancelImpeachDialogHand(param) {\n      this.ImpeachVisible = param;\n    },\n    //去申诉\n    toAppeal(impeachFromtype) {\n      this.impeachFromtype = impeachFromtype;\n      this.AppealsVisible = true;\n      this.$refs.appeal.init();\n    },\n    toImpeachDialog(){\n      this.AppealsVisible = false;\n      this.ImpeachVisible = true;\n      this.$refs.impeach.init()\n    },\n    move(target){\n      if( document.getElementsByClassName('serlist')[0]){\n        if(target == 'up'){\n          document.getElementsByClassName('serlist')[0].scrollTop = document.getElementsByClassName('activeFri')[0].offsetTop-150\n        }else{\n          document.getElementsByClassName('serlist')[0].scrollTop = document.getElementsByClassName('activeFri')[0].offsetTop-100\n        }\n      }\n      console.log(document.getElementsByClassName('activeFri')[0].offsetTop,'位移')\n    },\n    keyMoveF(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n        }else{\n          this.indexAt = 0;\n        }\n        this.move('up')\n      }else if(e.keyCode == 40){ //下键\n        if(this.indexAt < this.alldataNum-1){\n          this.indexAt++;\n        }else if(this.indexAt == this.alldataNum){\n          this.indexAt = this.indexAt-1 ;\n        }\n        this.move('down')\n      }\n      else if(e.keyCode == 13 && this.addFlag){\n        let currentId='';\n        if(document.getElementsByClassName('activeFri')[0]){\n          currentId = document.getElementsByClassName('activeFri')[0].getAttribute(\"id\")\n          console.log(currentId,'currentId')\n        }\n        this.currentItem = this.dataList.filter((item) => {\n          return item.inviteCode == currentId\n        })\n\n        if(this.currentItem[0].isFriend){\n          this.goChat(this.currentItem[0]) //聊天\n        }else{\n          this.addFriends(this.currentItem[0].id) //加为好友\n        }\n        this.addFlag = false;\n      }\n      \n    },\n    chooseSearch(){\n      if(this.hasData){\n        this.indexAt = 0;\n        document.getElementById('linkF2').focus()\n      }\n      // document.getElementById('linkF').removeEventListener('keydown', this.keyMoveF)\n      // if(this.hasData){ // && document.getElementById('searchAll') == document.activeFriElement\n      //   document.getElementById('linkF').addEventListener('keydown',this.keyMoveF)\n      // }\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.id = UserInfoUtils.getCurrentUserId();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    if (this.inviteCode) {\n      this.value = this.inviteCode;\n      this.search();\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    // if(document.getElementById('linkF')){\n    //   document.getElementById('linkF').removeEventListener('keydown', this.keyMoveF)\n    // }\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--成员列表-加好友  -->\n<template>\n  <div class=\"friends\">\n    <div class=\"flex top\">\n      <el-input\n        size=\"small\"\n        :placeholder=\"$t('Universal_0360')\"\n        prefix-icon=\"el-icon-search\"\n        style=\"flex: 1; margin-right: 10px\"\n        v-model=\"value\"\n        clearable\n        @keydown.enter.native=\"search\"\n        id=\"addFriSearch\"\n        :code=\"addFriVisible\"\n        @click=\"document.getElementById('addFriSearch').focus()\"\n      ></el-input>\n      <el-button size=\"small\" type=\"primary\" @click=\"search\">{{ $t('Universal_0058') }}</el-button>\n    </div>\n    <div class=\"link\" >\n      <div @click=\"Toshare\" class=\"invite-link\" style=\"position: relative\">\n        <div\n          style=\"\n            display: inline-block;\n            position: absolute;\n            left: -15px;\n            top: 2px;\n          \"\n        >\n          <img src=\"../../../assets/images/link_share.png\" />\n        </div>\n        <span>{{ $t('chat_addfriend_0006') }}</span>\n      </div>\n      <div class=\"invite-tip\">{{ $t('chat_addfriend_0007') }}</div>\n    </div>\n\n    <div class=\"list\"  >\n      <div  v-if=\"hasData && addFriVisible\" id=\"linkF2\"  contenteditable=\"true\"  @keydown.enter=\"keyMoveF\">\n        <ul class=\"list-box\" contenteditable=\"false\">\n          <li class=\"li-card\" v-for=\"(item, index) in dataList\" \n          :key=\"index\"\n          :class=\"{activeFri:indexAt == item.indexAt}\" \n          :id=\"item.inviteCode\">\n            <div class=\"card flex align-center\">\n              <div class=\"left\">\n                <MemberIcon :image=\"item.userHeadImg\" iconType=\"mini\" :userRank=\"item.userRank\" :vipType=\"item.vipType\" />\n                <div class=\"name-code-class \">\n                  <p class=\"name flex\">\n                    <span class=\"user-nick-name\" :title=\"item.userNickName\"> {{ item.userNickName }}</span>\n                    <LevelIcon\n                      :inviteCode=\"item.inviteCode\"\n                      :userRank=\"item.userRank\"\n                      iconType=\"medium\"\n                      :vipType=\"item.vipType\"\n                      :inviteCodeType=\"item.inviteCodeType\"\n                    />\n                  </p>\n                  <p class=\"pass\">\n                    <!-- 个人ID：{{item.inviteCode}} -->\n                    <LuckIdIcon\n                      :inviteCode=\"item.inviteCode\"\n                      :userRank=\"item.userRank\"\n                      iconType=\"medium\"\n                      :vipType=\"item.vipType\"\n                      :inviteCodeType=\"item.inviteCodeType\"\n                      :listFlag=\"false\"\n                    />\n                  </p>\n                </div>\n              </div>\n              <!-- <div class=\"right\">\n                <button class=\"btn\" v-if=\"item.isFriend\" @click=\"goChat(item)\">\n                  开始聊天\n                </button>\n                <el-button v-else-if=\"item.id == id\" disabled=\"disabled\" size=\"small\" style=\"font-size: 14px\">加为好友</el-button>\n                <el-button v-else-if=\"item.friendApplyStatus == 0\" disabled=\"disabled\" size=\"small\" type=\"info\" style=\"font-size: 14px;\"\n                  ><i class=\"iconfont icon-jinzhi1 no-use-btn\"></i>加为好友</el-button\n                >\n                <button class=\"btn\" v-else @click=\"addFriends(item.id)\">\n                  加为好友\n                </button>\n              </div>\n            </div> -->\n            <div class=\"right\">\n              <button class=\"btn\" v-if=\"item.isFriend\" @click=\"goChat(item)\">\n                {{ $t('Universal_0354') }}\n              </button>\n              <el-button v-else-if=\"item.id == id\" disabled=\"disabled\" size=\"small\" style=\"font-size: 14px\">\n                {{ $t('book_friend_0012') }}\n              </el-button>\n              <el-button v-else-if=\"item.friendApplyStatus == 0\" disabled=\"disabled\" size=\"small\" type=\"info\" style=\"font-size: 14px;\"\n                ><i class=\"iconfont icon-jinzhi1 no-use-btn\"></i>{{ $t('book_friend_0012') }}</el-button\n              >\n              <button class=\"btn\" v-else @click=\"addFriends(item.id)\">\n                {{ $t('book_friend_0012') }}\n              </button>\n            </div>\n          </div>\n          </li>\n        </ul>\n      </div>\n      <ul v-else class=\"ser-nocontent\">\n        <div class=\"no-box\">\n          <img src=\"../../../assets/images/web.png\" alt=\"error\" />\n          <p>{{ $t('Universal_0174') }}</p>\n        </div>\n      </ul>\n    </div>\n    <DialogAddFriendVisible\n      ref=\"myordernum\"\n      :dialogAddFriendsVisible=\"dialogAddFriendsVisible\"\n      @handCancelFriDialog=\"handCancelFriDialog\"\n      @handConfirmFriDialog=\"handConfirmFriDialog\"\n      :friendData=\"friendData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <DialogShareVisible\n      ref=\"myordernum\"\n      :dialogShareVisible=\"dialogShareVisible\"\n      @dialog-share-close=\"dialogShareClose\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DialogAddFriendVisible from \"../dialog/add-friends\";\nimport DialogShareVisible from \"../dialog/share-friends\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport { get_query_code } from \"../../../server\";\nimport { get_the_info } from \"../add/server\";\nimport { contFriSize } from \"@/utils\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport { mapState,mapMutations } from \"vuex\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nimport AppealsDialog from \"@/view/chat/appeals\";\nimport ImpeachDialog from \"@/view/chat/impeach\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DialogAddFriendVisible,\n    DialogShareVisible,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n    AppealsDialog,\n    ImpeachDialog,\n  },\n  props: {\n    addFriVisible:{\n      type:Boolean,\n      default:false\n    },\n    inviteCode: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      addFlag: true,\n      id: '',\n      value: '',\n      dialogAddFriendsVisible: false,\n      dialogShareVisible: false,\n      AppealsVisible: false,\n      ImpeachVisible: false,\n      impeachFromtype: '',//来源类型\n      dataList: [],\n      hasData: true,\n      friendData: {},\n      indexAt:0,\n      currentItem:{},//上下键选中的item\n      alldataNum:0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n  },\n  //监控data中的数据变化\n  watch: {\n  //   'isCon':function(){\n  //     if(this.isCon == 1){\n  //       this.value = ''\n  //     }\n  //   }\n    // addFriVisible(val){\n    //   if(!val){\n    //     document.getElementById('linkF2').removeEventListener('keydown', this.keyMoveF)\n    //   }\n    // }\n  },\n  //方法集合\n  filters: {\n    substringName(val) {\n      return val && val.length > 10 ? val.substring(0, 10) + '...' : val;\n    }\n  },\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    goChat(a) {\n      const userId = UserInfoUtils.getCurrentUserId();\n      const current = {\n        id: a.id,\n        fromId: a.id,\n        targetId: userId,\n        fromType: '999',\n        targetType: 1,\n        msgType: 1,\n        timer: new Date().getTime(),\n        uniqueCode: contFriSize(userId, a.id),\n        friendName: a.friendNickName\n      };\n      this.$store.dispatch('ADD_LAST_MSG_LIST', { ...current, isJump: true });\n      this.$store.dispatch('SET_CURRENT_CHAT', current);\n      this.$router.push({\n        path: '/app/chat/single/message',\n        query: current\n      });\n      this.$emit('handleColseFri', false);\n    },\n    dialogShareClose() {\n      this.dialogShareVisible = false;\n    },\n    async search() {\n      if (!this.value.trim()) {\n        this.$message.error(this.$t('Universal_0240'));\n        return;\n      }\n      let params = {\n        code: this.value\n      };\n      await this.searchFriend(params);\n      document.getElementById('addFriSearch').blur()\n      this.chooseSearch()\n      \n    },\n    async searchFriend(param) {\n      try {\n        let res = await get_query_code(param);\n        this.dataList = res.data;\n        console.log(param, this.id, this.dataList);\n        this.dataList.forEach((item,index)=>{\n          item.indexAt = index;\n        })\n        if (this.dataList.length == 0) {\n          this.hasData = false;\n        } else {\n          this.hasData = true;\n          this.alldataNum = this.dataList.length\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getFrInfo(a) {\n      let res = await get_the_info({ id: a });\n      if (res.code == 200) {\n        this.friendData = res.data;\n        this.$refs.myordernum.setkeynull();\n      }\n    },\n    addFriends(a) {\n      if(this.personalAppealInfo.createTime){\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(this.$t('appeal_0003', {time}), this.$t('Universal_0059'),{\n          confirmButtonText: this.$t('appeal_0017'),\n          cancelButtonText: this.$t('book_group_0019'),\n          center: true,\n          showClose: false,\n        }).then(() => {\n          this.toAppeal('single');\n        }).catch(() => {\n        });\n      }else{\n        this.getFrInfo(a);\n\n        this.dialogAddFriendsVisible = true;\n      }\n      \n    },\n    Toshare() {\n      this.dialogShareVisible = true;\n    },\n    handCancelFriDialog(param) {\n      this.dialogAddFriendsVisible = param;\n    },\n    handConfirmFriDialog(param) {\n      this.dialogAddFriendsVisible = param;\n    },\n    cancelAppealsDialogHand(param) {\n      this.AppealsVisible = param;\n    },\n    cancelImpeachDialogHand(param) {\n      this.ImpeachVisible = param;\n    },\n    //去申诉\n    toAppeal(impeachFromtype) {\n      this.impeachFromtype = impeachFromtype;\n      this.AppealsVisible = true;\n      this.$refs.appeal.init();\n    },\n    toImpeachDialog(){\n      this.AppealsVisible = false;\n      this.ImpeachVisible = true;\n      this.$refs.impeach.init()\n    },\n    move(target){\n      if( document.getElementsByClassName('serlist')[0]){\n        if(target == 'up'){\n          document.getElementsByClassName('serlist')[0].scrollTop = document.getElementsByClassName('activeFri')[0].offsetTop-150\n        }else{\n          document.getElementsByClassName('serlist')[0].scrollTop = document.getElementsByClassName('activeFri')[0].offsetTop-100\n        }\n      }\n      console.log(document.getElementsByClassName('activeFri')[0].offsetTop,'位移')\n    },\n    keyMoveF(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n        }else{\n          this.indexAt = 0;\n        }\n        this.move('up')\n      }else if(e.keyCode == 40){ //下键\n        if(this.indexAt < this.alldataNum-1){\n          this.indexAt++;\n        }else if(this.indexAt == this.alldataNum){\n          this.indexAt = this.indexAt-1 ;\n        }\n        this.move('down')\n      }\n      else if(e.keyCode == 13 && this.addFlag){\n        let currentId='';\n        if(document.getElementsByClassName('activeFri')[0]){\n          currentId = document.getElementsByClassName('activeFri')[0].getAttribute(\"id\")\n          console.log(currentId,'currentId')\n        }\n        this.currentItem = this.dataList.filter((item) => {\n          return item.inviteCode == currentId\n        })\n\n        if(this.currentItem[0].isFriend){\n          this.goChat(this.currentItem[0]) //聊天\n        }else{\n          this.addFriends(this.currentItem[0].id) //加为好友\n        }\n        this.addFlag = false;\n      }\n      \n    },\n    chooseSearch(){\n      if(this.hasData){\n        this.indexAt = 0;\n        document.getElementById('linkF2').focus()\n      }\n      // document.getElementById('linkF').removeEventListener('keydown', this.keyMoveF)\n      // if(this.hasData){ // && document.getElementById('searchAll') == document.activeFriElement\n      //   document.getElementById('linkF').addEventListener('keydown',this.keyMoveF)\n      // }\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.id = UserInfoUtils.getCurrentUserId();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    if (this.inviteCode) {\n      this.value = this.inviteCode;\n      this.search();\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    // if(document.getElementById('linkF')){\n    //   document.getElementById('linkF').removeEventListener('keydown', this.keyMoveF)\n    // }\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.activeFri .card{\n  background:#eaeaea !important;\n}\n.friends {\n  .top {\n    width: 90%;\n    margin: 10px auto 0px;\n\n    /dee/ .el-button--small {\n      // height: 18px;\n      // line-height: 18px;\n      font-size: 13px;\n      font-weight: 400;\n      color: rgba(255, 255, 255, 1);\n    }\n  }\n\n  .link {\n    text-align: center;\n    margin: 30px auto 0px;\n    font-size: 12px;\n    font-weight: 400;\n\n    .invite-link {\n      display: inline-block;\n      color: #2f54eb;\n      cursor: pointer;\n\n      img {\n        width: 12px;\n        height: 12px;\n        margin-right: 5px;\n      }\n    }\n\n    .invite-tip {\n      display: inline-block;\n      margin-left: 10px;\n      color: rgba(153, 153, 153, 1);\n    }\n  }\n\n  .list {\n    max-height: 390px;\n    overflow: scroll;\n    .list-box {\n      .li-card {\n        display: inline-block;\n        margin-left: 24px;\n        margin-top: 20px;\n        .card {\n          display: flex;\n          justify-content: flex-end;\n          padding: 10px 20px;\n          width: 310px;\n          background: rgba(255, 255, 255, 1);\n          box-shadow: 0px 0px 4px 0px rgba(47, 83, 234, 0.2);\n          border-radius: 10px;\n          margin-bottom: 2px;\n          .left {\n            display: flex;\n            justify-content: flex-start;\n            align-items: center;\n            flex: 1;\n            .name-code-class {\n              padding-left: 15px;\n              height: 40px;\n              display: flex;\n              flex-direction: column;\n              justify-content: space-around;\n              width: 183px;\n            }\n            .name {\n              align-items: center;\n              font-size: 12px;\n              font-weight: 500;\n              color: rgba(51, 51, 51, 1);\n              line-height: 20px;\n              padding-left: 2px;\n              overflow: hidden;\n              text-overflow: ellipsis;\n              white-space: nowrap;\n              .user-nick-name {\n                padding-right:5px;\n                white-space: pre;\n                max-width: 110px;\n                overflow: hidden;\n                text-overflow: ellipsis;\n              }\n            }\n            .pass {\n              font-size: 12px;\n              font-weight: 500;\n              color: rgba(153, 153, 153, 1);\n              line-height: 17px;\n            }\n          }\n          .right {\n            .btn {\n              cursor: pointer;\n              border: none;\n              min-width: 90px;\n              max-width: 110px;\n              padding: 7px 10px;\n              background: rgba(47, 84, 235, 1);\n              border-radius: 6px;\n              font-size: 14px;\n              font-weight: 500;\n              color: rgba(255, 255, 255, 1);\n              word-break: break-word;\n            }\n          }\n        }\n      }\n    }\n    .ser-nocontent {\n      text-align: center;\n      .no-box {\n        margin-top: 20px;\n      }\n    }\n  }\n\n  .no-use-btn {\n    font-size: 14px;\n  }\n  /deep/ .el-button--small {\n    padding: 9px 10px;\n    white-space: pre-line;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".activeFri .card": {
          "background": "#eaeaea !important"
        },
        ".friends": {
          ".top": {
            "width": "90%",
            "margin": "10px auto 0px",
            "/dee/ .el-button--small": {
              "font-size": "13px",
              "font-weight": "400",
              "color": "rgba(255, 255, 255, 1)"
            }
          },
          ".link": {
            "text-align": "center",
            "margin": "30px auto 0px",
            "font-size": "12px",
            "font-weight": "400",
            ".invite-link": {
              "display": "inline-block",
              "color": "#2f54eb",
              "cursor": "pointer",
              "img": {
                "width": "12px",
                "height": "12px",
                "margin-right": "5px"
              }
            },
            ".invite-tip": {
              "display": "inline-block",
              "margin-left": "10px",
              "color": "rgba(153, 153, 153, 1)"
            }
          },
          ".list": {
            "max-height": "390px",
            "overflow": "scroll",
            ".list-box": {
              ".li-card": {
                "display": "inline-block",
                "margin-left": "24px",
                "margin-top": "20px",
                ".card": {
                  "display": "flex",
                  "justify-content": "flex-end",
                  "padding": "10px 20px",
                  "width": "310px",
                  "background": "rgba(255, 255, 255, 1)",
                  "box-shadow": "0px 0px 4px 0px rgba(47, 83, 234, 0.2)",
                  "border-radius": "10px",
                  "margin-bottom": "2px",
                  ".left": {
                    "display": "flex",
                    "justify-content": "flex-start",
                    "align-items": "center",
                    "flex": "1",
                    ".name-code-class": {
                      "padding-left": "15px",
                      "height": "40px",
                      "display": "flex",
                      "flex-direction": "column",
                      "justify-content": "space-around",
                      "width": "183px"
                    },
                    ".name": {
                      "align-items": "center",
                      "font-size": "12px",
                      "font-weight": "500",
                      "color": "rgba(51, 51, 51, 1)",
                      "line-height": "20px",
                      "padding-left": "2px",
                      "overflow": "hidden",
                      "text-overflow": "ellipsis",
                      "white-space": "nowrap",
                      ".user-nick-name": {
                        "padding-right": "5px",
                        "white-space": "pre",
                        "max-width": "110px",
                        "overflow": "hidden",
                        "text-overflow": "ellipsis"
                      }
                    },
                    ".pass": {
                      "font-size": "12px",
                      "font-weight": "500",
                      "color": "rgba(153, 153, 153, 1)",
                      "line-height": "17px"
                    }
                  },
                  ".right": {
                    ".btn": {
                      "cursor": "pointer",
                      "border": "none",
                      "min-width": "90px",
                      "max-width": "110px",
                      "padding": "7px 10px",
                      "background": "rgba(47, 84, 235, 1)",
                      "border-radius": "6px",
                      "font-size": "14px",
                      "font-weight": "500",
                      "color": "rgba(255, 255, 255, 1)",
                      "word-break": "break-word"
                    }
                  }
                }
              }
            },
            ".ser-nocontent": {
              "text-align": "center",
              ".no-box": {
                "margin-top": "20px"
              }
            }
          },
          ".no-use-btn": {
            "font-size": "14px"
          },
          "/deep/ .el-button--small": {
            "padding": "9px 10px",
            "white-space": "pre-line"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/add-friends-group/add/group.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 成员列表-加入群 -->\n<template>\n  <div class=\"group\">\n    <div class=\"flex top\">\n      <el-input\n        size=\"small\"\n        :placeholder=\"$t('chat_search_0008')\"\n        prefix-icon=\"el-icon-search\"\n        style=\"flex: 1; margin-right: 10px\"\n        v-model=\"value\"\n        clearable\n        @keydown.enter.native=\"searchEnter\"\n        id=\"addGroupSearch\"\n        :code=\"addGroupVisible\"\n      ></el-input>\n      <el-button size=\"small\" type=\"primary\" @click=\"search\">{{ $t('Universal_0058') }}</el-button>\n    </div>\n    <div class=\"list serlist\" >\n      <div v-if=\"hasData && addGroupVisible\" id=\"linkG2\" contenteditable=\"true\"  @keydown=\"keyMove\">\n        <ul class=\"list-box\" contenteditable=\"false\">\n          <li class=\"li-card\" \n            v-for=\"(item, index) in dataList\" \n            :key=\"index\"\n            :class=\"{activebg:indexAt == (item.indexAt?item.indexAt:'')}\" \n            :id=\"item.id\">\n            <div class=\"card flex align-center\">\n              <div class=\"left\">\n                <img\n                  width=\"40px\"\n                  height=\"40px\"\n                  style=\"margin-right: 10px; border-radius: 50%\"\n                  :src=\"item.groupAvatar\"\n                  v-if=\"item.groupAvatar\"\n                  alt\n                />\n                <img\n                  width=\"40px\"\n                  height=\"40px\"\n                  style=\"margin-right: 10px; border-radius: 50%\"\n                  v-else\n                  src=\"../../../assets/images/group.png\"\n                  alt\n                />\n                <p class=\"name\">{{ item.groupName }}</p>\n                <p class=\"pass\" style=\"margin-top: 6px\">\n                  {{ $t('chat_comm_member_0003') }}：{{ item.people }}/{{ item.maxPeople }}\n                </p>\n                <p class=\"pass\">{{ $t('book_community_0007') }}：{{ item.groupCode }}</p>\n              </div>\n              <div class=\"right\">\n                <button\n                  class=\"btn\"\n                  v-if=\"item.inGroup == 1\"\n                  @click=\"goGroupchat(item)\"\n                >\n                  {{ $t('book_community_0011') }}\n                </button>\n                <button class=\"btn\" v-else @click=\"addGroups(item)\">\n                  {{ $t('chat_joincommunity_0001') }}\n                </button>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    <!-- <div class=\"list serlist\" >\n      <div  v-if=\"hasData && addGroupVisible\" id=\"linkG2\" contenteditable=\"true\"  @keydown=\"keyMove\">\n        <ul class=\"list-box\"   contenteditable=\"false\">\n          <li class=\"li-card\" \n          v-for=\"(item, index) in dataList\" \n          :key=\"index\"\n          :class=\"{activebg:indexAt == (item.indexAt?item.indexAt:'')}\" \n          :id=\"item.id\">\n            <div class=\"card flex align-center\">\n              <div class=\"left\">\n                <img\n                  width=\"40px\"\n                  height=\"40px\"\n                  style=\"margin-right: 10px; border-radius: 50%\"\n                  :src=\"item.groupAvatar\"\n                  v-if=\"item.groupAvatar\"\n                  alt\n                />\n                <img\n                  width=\"40px\"\n                  height=\"40px\"\n                  style=\"margin-right: 10px; border-radius: 50%\"\n                  v-else\n                  src=\"../../../assets/images/group.png\"\n                  alt\n                />\n                <p class=\"name\">{{ item.groupName }}</p>\n                <p class=\"pass\" style=\"margin-top: 6px\">\n                  社区成员：{{ item.people }}/{{ item.maxPeople }}\n                </p>\n                <p class=\"pass\">社区ID：{{ item.groupCode }}</p>\n              </div>\n              <div class=\"right\">\n                <button\n                  class=\"btn\"\n                  v-if=\"item.inGroup == 1\"\n                  @click=\"goGroupchat(item)\"\n                >\n                  进入社区\n                </button>\n                <button class=\"btn\" v-else @click=\"addGroups(item)\">\n                  加入社区\n                </button>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div> -->\n      <ul v-else class=\"ser-nocontent\">\n        <div class=\"no-box\">\n          <img src=\"../../../assets/images/web.png\" alt=\"error\" />\n          <p>{{ $t(\"Universal_0174\") }}</p>\n        </div>\n      </ul>\n    </div>\n    <DialogAddGroupVisible\n      :dialogAddGroupsVisible=\"dialogAddGroupsVisible\"\n      @handCloseAddGroups=\"handCloseAddGroups\"\n      @handCancelGroupDialog=\"handCancelGroupDialog\"\n      @handConfirmGroupDialog=\"handConfirmGroupDialog\"\n      :groupData=\"groupData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DialogAddGroupVisible from \"../dialog/add-groups\";\nimport { get_groupquery_code } from \"../../../server\";\nimport { add_the_group, add_group_by_qr } from \"./server\";\nimport { contGrpSize } from \"@/utils\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport { mapState, mapMutations } from \"vuex\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport SQLUtils from \"@/components/db/sqlite.js\";\nimport AppealsDialog from \"@/view/chat/appeals\";\nimport ImpeachDialog from \"@/view/chat/impeach\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DialogAddGroupVisible,\n    AppealsDialog,\n    ImpeachDialog,\n  },\n  props: {\n    addGroupVisible:{\n      type:Boolean,\n      default:false\n    },\n    inviteCode: {\n      type: String,\n      default: \"\",\n    },\n  },\n  data() {\n    //这里存放数据\n    return {\n      addFlag: true,\n      value: \"\",\n      dataList: [],\n      hasData: true,\n      groupData: {},\n      dialogAddGroupsVisible: false,\n      AppealsVisible: false,\n      ImpeachVisible: false,\n      impeachFromtype: \"\", //来源类型\n      indexAt:0,\n      currentItem:{},//上下键选中的item\n      alldataNum:0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n  },\n  //监控data中的数据变化\n  watch: {\n    // addGroupVisible(val){\n    //   if(!val){\n    //     document.removeEventListener('keydown', this.keyMove)\n    //   }\n    // }\n  },\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    goGroupchat(a) {\n      this.CLEAR_CHAT();\n      let current = {\n        targetId: a.id,\n        id: a.id,\n        uniqueCode: contGrpSize(a.id),\n        sessionName: a.groupName,\n        sessionIcon: a.groupAvatar,\n        fromName: this.$store.state.common.userInfo.nickName,\n        targetType: 2,\n        msgType: 1,\n      };\n      this.$store.dispatch(\"ADD_LAST_MSG_LIST\", { ...current, isJump: true });\n      this.$store.dispatch(\"SET_CURRENT_CHAT\", current);\n\n      this.$router.push({\n        path: \"/app/chat/group/message\",\n        query: current,\n      });\n      this.$emit(\"handleClose\", false);\n    },\n    searchEnter(){\n      this.search()\n      document.getElementById('addGroupSearch').blur();\n    },\n    async search() {\n      if (!this.value.trim()) {\n        this.$message.error(this.$t('Universal_0240'));\n        return;\n      }\n      let params = {\n        param: this.value,\n      };\n      await this.searchGroup(params);\n      document.getElementById('addGroupSearch').blur();\n      this.chooseSearch()\n    },\n    async searchGroup(param) {\n      try {\n        let res = await get_groupquery_code(param);\n        this.dataList = res.data;\n        if(this.dataList.length>0){\n          this.dataList.forEach((item,index)=>{\n            item['indexAt'] = index;\n          })\n        }\n        if (this.dataList.length == 0) {\n          this.hasData = false;\n        } else {\n          this.hasData = true;\n          this.alldataNum = this.dataList.length\n        }\n        //\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    // groupInfo(param) {\n    //   this.groupData = param\n    //   this.dialogAddGroupsVisible = true\n    // },\n    async addGroups(groupInfo) {\n      if (this.personalAppealInfo.createTime) {\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(\n          this.$t('appeal_0003', {time}),\n          this.$t('Universal_0059'),\n          {\n            confirmButtonText: this.$t('appeal_0017'),\n            cancelButtonText: this.$t('book_group_0019'),\n            center: true,\n            showClose: false,\n          }\n        )\n          .then(() => {\n            this.toAppeal(\"single\");\n          })\n          .catch(() => {});\n      } else {\n        if (groupInfo.people == groupInfo.maxPeople) {\n          return this.$message.error(this.$t('chat_comm_manage_0021'));\n        }\n        let userid = UserInfoUtils.getCurrentUserId();\n        let param = {\n          userId: userid,\n          groupId: groupInfo.id,\n        };\n        switch (groupInfo.addCheck) {\n        case 0:\n          await add_group_by_qr(param).then((res) => {\n            if (res.code == 200) {\n              this.$message.success(this.$t('Universal_0119'));\n              this.$emit(\"handleClose\", false);\n            } else {\n              this.$message.error(res.data.msg || res.msg);\n            }\n          });\n          break;\n        case 1:\n          this.groupData = groupInfo;\n          this.dialogAddGroupsVisible = true;\n          break;\n        case 2:\n          this.$message.warning(this.$t('chat_joincommunity_0011'));\n          break;\n        }\n        // this.goGroup(param, a);\n      }\n    },\n    async goGroup(param, a) {\n      let res = await add_the_group(param);\n      console.log(res);\n      if (res.code == 200) {\n        this.$message({\n          message: res.msg,\n          type: \"success\",\n          customClass: \"mzindex\",\n        });\n        let targetId = a.id;\n        await SQLUtils.addGroupsById(targetId);\n        await SQLUtils.addGroupsMemberByGroupId(targetId);\n        this.text = \"\";\n\n        this.CLEAR_CHAT();\n        let current = {\n          targetId,\n          id: a.id,\n          uniqueCode: contGrpSize(a.id),\n          sessionName: a.groupName,\n          sessionIcon: a.groupAvatar,\n          fromName: this.$store.state.common.userInfo.nickName,\n          targetType: 2,\n          msgType: 1,\n        };\n        this.$store.dispatch(\"ADD_LAST_MSG_LIST\", { ...current, isJump: true });\n        this.$store.dispatch(\"SET_CURRENT_CHAT\", current);\n\n        this.$router.push({\n          path: \"/app/chat/group/message\",\n          query: current,\n        });\n        this.$emit(\"handleColse\", false);\n      } else {\n        this.$message({\n          message: res.data.msg,\n          type: \"error\",\n          customClass: \"mzindex\",\n        });\n        return;\n      }\n    },\n    handCloseAddGroups(param) {\n      this.dialogAddGroupsVisible = param;\n    },\n    handCancelGroupDialog(param) {\n      this.dialogAddGroupsVisible = param;\n    },\n    handConfirmGroupDialog(param) {\n      this.dialogAddGroupsVisible = param;\n      this.$emit(\"handleClose\", false);\n    },\n    cancelAppealsDialogHand(param) {\n      this.AppealsVisible = param;\n    },\n    cancelImpeachDialogHand(param) {\n      this.ImpeachVisible = param;\n    },\n    //去申诉\n    toAppeal(impeachFromtype) {\n      this.impeachFromtype = impeachFromtype;\n      this.AppealsVisible = true;\n      this.$refs.appeal.init();\n    },\n    toImpeachDialog() {\n      this.AppealsVisible = false;\n      this.ImpeachVisible = true;\n      this.$refs.impeach.init();\n    },\n    move(target){\n      if( document.getElementsByClassName('serlist')[0]){\n        if(target == 'up'){\n          document.getElementsByClassName('serlist')[0].scrollTop = document.getElementsByClassName('activebg')[0].offsetTop-250\n        }else{\n          document.getElementsByClassName('serlist')[0].scrollTop = document.getElementsByClassName('activebg')[0].offsetTop-180\n        }\n      }\n      console.log(document.getElementsByClassName('activebg')[0].offsetTop,'位移')\n    },\n    keyMove(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n        }else{\n          this.indexAt = 0;\n        }\n        this.move('up')\n      }else if(e.keyCode == 40){ //下键\n        if(this.indexAt < this.alldataNum-1){\n          this.indexAt++;\n        }else if(this.indexAt == this.alldataNum){\n          this.indexAt = this.indexAt-1 ;\n        }\n        this.move('down')\n      }\n      else if(e.keyCode == 13 && this.addFlag){\n        let currentId='';\n        if(document.getElementsByClassName('activebg')[0]){\n          currentId = document.getElementsByClassName('activebg')[0].getAttribute(\"id\")\n          console.log(currentId,'currentId')\n        }\n        if(this.dataList.length>0){\n          this.currentItem = this.dataList.filter((item) => { \n            return item.id == currentId\n          })\n          console.log(this.currentItem,'!!!!')\n          if(this.currentItem[0].inGroup == 1){\n            this.goGroupchat(this.currentItem[0]) //进入社区\n          }else{\n            this.addGroups(this.currentItem[0]) //加入社区\n          }\n          this.addFlag = false;\n        }\n        \n      }\n      \n    },\n    chooseSearch(){\n      if(this.hasData){\n        this.indexAt = 0;\n        document.getElementById('linkG2').focus()\n      }\n      // document.removeEventListener('keydown', this.keyMove)\n      // if(this.hasData){ // && document.getElementById('searchAll') == document.activebgElement\n      //   document.addEventListener('keydown',this.keyMove)\n      // }\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    if (this.inviteCode) {\n      this.value = this.inviteCode;\n      this.search();\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    // document.removeEventListener('keydown', this.keyMove)\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 成员列表-加入群 -->\n<template>\n  <div class=\"group\">\n    <div class=\"flex top\">\n      <el-input\n        size=\"small\"\n        :placeholder=\"$t('chat_search_0008')\"\n        prefix-icon=\"el-icon-search\"\n        style=\"flex: 1; margin-right: 10px\"\n        v-model=\"value\"\n        clearable\n        @keydown.enter.native=\"searchEnter\"\n        id=\"addGroupSearch\"\n        :code=\"addGroupVisible\"\n      ></el-input>\n      <el-button size=\"small\" type=\"primary\" @click=\"search\">{{ $t('Universal_0058') }}</el-button>\n    </div>\n    <div class=\"list serlist\" >\n      <div v-if=\"hasData && addGroupVisible\" id=\"linkG2\" contenteditable=\"true\"  @keydown=\"keyMove\">\n        <ul class=\"list-box\" contenteditable=\"false\">\n          <li class=\"li-card\" \n            v-for=\"(item, index) in dataList\" \n            :key=\"index\"\n            :class=\"{activebg:indexAt == (item.indexAt?item.indexAt:'')}\" \n            :id=\"item.id\">\n            <div class=\"card flex align-center\">\n              <div class=\"left\">\n                <img\n                  width=\"40px\"\n                  height=\"40px\"\n                  style=\"margin-right: 10px; border-radius: 50%\"\n                  :src=\"item.groupAvatar\"\n                  v-if=\"item.groupAvatar\"\n                  alt\n                />\n                <img\n                  width=\"40px\"\n                  height=\"40px\"\n                  style=\"margin-right: 10px; border-radius: 50%\"\n                  v-else\n                  src=\"../../../assets/images/group.png\"\n                  alt\n                />\n                <p class=\"name\">{{ item.groupName }}</p>\n                <p class=\"pass\" style=\"margin-top: 6px\">\n                  {{ $t('chat_comm_member_0003') }}：{{ item.people }}/{{ item.maxPeople }}\n                </p>\n                <p class=\"pass\">{{ $t('book_community_0007') }}：{{ item.groupCode }}</p>\n              </div>\n              <div class=\"right\">\n                <button\n                  class=\"btn\"\n                  v-if=\"item.inGroup == 1\"\n                  @click=\"goGroupchat(item)\"\n                >\n                  {{ $t('book_community_0011') }}\n                </button>\n                <button class=\"btn\" v-else @click=\"addGroups(item)\">\n                  {{ $t('chat_joincommunity_0001') }}\n                </button>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    <!-- <div class=\"list serlist\" >\n      <div  v-if=\"hasData && addGroupVisible\" id=\"linkG2\" contenteditable=\"true\"  @keydown=\"keyMove\">\n        <ul class=\"list-box\"   contenteditable=\"false\">\n          <li class=\"li-card\" \n          v-for=\"(item, index) in dataList\" \n          :key=\"index\"\n          :class=\"{activebg:indexAt == (item.indexAt?item.indexAt:'')}\" \n          :id=\"item.id\">\n            <div class=\"card flex align-center\">\n              <div class=\"left\">\n                <img\n                  width=\"40px\"\n                  height=\"40px\"\n                  style=\"margin-right: 10px; border-radius: 50%\"\n                  :src=\"item.groupAvatar\"\n                  v-if=\"item.groupAvatar\"\n                  alt\n                />\n                <img\n                  width=\"40px\"\n                  height=\"40px\"\n                  style=\"margin-right: 10px; border-radius: 50%\"\n                  v-else\n                  src=\"../../../assets/images/group.png\"\n                  alt\n                />\n                <p class=\"name\">{{ item.groupName }}</p>\n                <p class=\"pass\" style=\"margin-top: 6px\">\n                  社区成员：{{ item.people }}/{{ item.maxPeople }}\n                </p>\n                <p class=\"pass\">社区ID：{{ item.groupCode }}</p>\n              </div>\n              <div class=\"right\">\n                <button\n                  class=\"btn\"\n                  v-if=\"item.inGroup == 1\"\n                  @click=\"goGroupchat(item)\"\n                >\n                  进入社区\n                </button>\n                <button class=\"btn\" v-else @click=\"addGroups(item)\">\n                  加入社区\n                </button>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div> -->\n      <ul v-else class=\"ser-nocontent\">\n        <div class=\"no-box\">\n          <img src=\"../../../assets/images/web.png\" alt=\"error\" />\n          <p>{{ $t(\"Universal_0174\") }}</p>\n        </div>\n      </ul>\n    </div>\n    <DialogAddGroupVisible\n      :dialogAddGroupsVisible=\"dialogAddGroupsVisible\"\n      @handCloseAddGroups=\"handCloseAddGroups\"\n      @handCancelGroupDialog=\"handCancelGroupDialog\"\n      @handConfirmGroupDialog=\"handConfirmGroupDialog\"\n      :groupData=\"groupData\"\n      @toAppeal=\"toAppeal('single')\"\n    />\n    <AppealsDialog\n      ref=\"appeal\"\n      :AppealsVisible.sync=\"AppealsVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelAppealsDialogHand\"\n      @toImpeach=\"toImpeachDialog\"\n    />\n    <ImpeachDialog\n      ref=\"impeach\"\n      :ImpeachVisible.sync=\"ImpeachVisible\"\n      :impeachFromtype=\"impeachFromtype\"\n      @cancelDialogHand=\"cancelImpeachDialogHand\"\n    />\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport DialogAddGroupVisible from \"../dialog/add-groups\";\nimport { get_groupquery_code } from \"../../../server\";\nimport { add_the_group, add_group_by_qr } from \"./server\";\nimport { contGrpSize } from \"@/utils\";\nimport { CLEAR_CHAT } from \"@/store/types\";\nimport { mapState, mapMutations } from \"vuex\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport SQLUtils from \"@/components/db/sqlite.js\";\nimport AppealsDialog from \"@/view/chat/appeals\";\nimport ImpeachDialog from \"@/view/chat/impeach\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DialogAddGroupVisible,\n    AppealsDialog,\n    ImpeachDialog,\n  },\n  props: {\n    addGroupVisible:{\n      type:Boolean,\n      default:false\n    },\n    inviteCode: {\n      type: String,\n      default: \"\",\n    },\n  },\n  data() {\n    //这里存放数据\n    return {\n      addFlag: true,\n      value: \"\",\n      dataList: [],\n      hasData: true,\n      groupData: {},\n      dialogAddGroupsVisible: false,\n      AppealsVisible: false,\n      ImpeachVisible: false,\n      impeachFromtype: \"\", //来源类型\n      indexAt:0,\n      currentItem:{},//上下键选中的item\n      alldataNum:0\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapState({\n      personalAppealInfo: (state) => {\n        return state.common.personalAppealInfo;\n      },\n    }),\n  },\n  //监控data中的数据变化\n  watch: {\n    // addGroupVisible(val){\n    //   if(!val){\n    //     document.removeEventListener('keydown', this.keyMove)\n    //   }\n    // }\n  },\n  //方法集合\n  methods: {\n    ...mapMutations([CLEAR_CHAT]),\n    goGroupchat(a) {\n      this.CLEAR_CHAT();\n      let current = {\n        targetId: a.id,\n        id: a.id,\n        uniqueCode: contGrpSize(a.id),\n        sessionName: a.groupName,\n        sessionIcon: a.groupAvatar,\n        fromName: this.$store.state.common.userInfo.nickName,\n        targetType: 2,\n        msgType: 1,\n      };\n      this.$store.dispatch(\"ADD_LAST_MSG_LIST\", { ...current, isJump: true });\n      this.$store.dispatch(\"SET_CURRENT_CHAT\", current);\n\n      this.$router.push({\n        path: \"/app/chat/group/message\",\n        query: current,\n      });\n      this.$emit(\"handleClose\", false);\n    },\n    searchEnter(){\n      this.search()\n      document.getElementById('addGroupSearch').blur();\n    },\n    async search() {\n      if (!this.value.trim()) {\n        this.$message.error(this.$t('Universal_0240'));\n        return;\n      }\n      let params = {\n        param: this.value,\n      };\n      await this.searchGroup(params);\n      document.getElementById('addGroupSearch').blur();\n      this.chooseSearch()\n    },\n    async searchGroup(param) {\n      try {\n        let res = await get_groupquery_code(param);\n        this.dataList = res.data;\n        if(this.dataList.length>0){\n          this.dataList.forEach((item,index)=>{\n            item['indexAt'] = index;\n          })\n        }\n        if (this.dataList.length == 0) {\n          this.hasData = false;\n        } else {\n          this.hasData = true;\n          this.alldataNum = this.dataList.length\n        }\n        //\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    // groupInfo(param) {\n    //   this.groupData = param\n    //   this.dialogAddGroupsVisible = true\n    // },\n    async addGroups(groupInfo) {\n      if (this.personalAppealInfo.createTime) {\n        let time = `${this.personalAppealInfo.createTime}--${this.personalAppealInfo.endTime}`;\n        this.$confirm(\n          this.$t('appeal_0003', {time}),\n          this.$t('Universal_0059'),\n          {\n            confirmButtonText: this.$t('appeal_0017'),\n            cancelButtonText: this.$t('book_group_0019'),\n            center: true,\n            showClose: false,\n          }\n        )\n          .then(() => {\n            this.toAppeal(\"single\");\n          })\n          .catch(() => {});\n      } else {\n        if (groupInfo.people == groupInfo.maxPeople) {\n          return this.$message.error(this.$t('chat_comm_manage_0021'));\n        }\n        let userid = UserInfoUtils.getCurrentUserId();\n        let param = {\n          userId: userid,\n          groupId: groupInfo.id,\n        };\n        switch (groupInfo.addCheck) {\n        case 0:\n          await add_group_by_qr(param).then((res) => {\n            if (res.code == 200) {\n              this.$message.success(this.$t('Universal_0119'));\n              this.$emit(\"handleClose\", false);\n            } else {\n              this.$message.error(res.data.msg || res.msg);\n            }\n          });\n          break;\n        case 1:\n          this.groupData = groupInfo;\n          this.dialogAddGroupsVisible = true;\n          break;\n        case 2:\n          this.$message.warning(this.$t('chat_joincommunity_0011'));\n          break;\n        }\n        // this.goGroup(param, a);\n      }\n    },\n    async goGroup(param, a) {\n      let res = await add_the_group(param);\n      console.log(res);\n      if (res.code == 200) {\n        this.$message({\n          message: res.msg,\n          type: \"success\",\n          customClass: \"mzindex\",\n        });\n        let targetId = a.id;\n        await SQLUtils.addGroupsById(targetId);\n        await SQLUtils.addGroupsMemberByGroupId(targetId);\n        this.text = \"\";\n\n        this.CLEAR_CHAT();\n        let current = {\n          targetId,\n          id: a.id,\n          uniqueCode: contGrpSize(a.id),\n          sessionName: a.groupName,\n          sessionIcon: a.groupAvatar,\n          fromName: this.$store.state.common.userInfo.nickName,\n          targetType: 2,\n          msgType: 1,\n        };\n        this.$store.dispatch(\"ADD_LAST_MSG_LIST\", { ...current, isJump: true });\n        this.$store.dispatch(\"SET_CURRENT_CHAT\", current);\n\n        this.$router.push({\n          path: \"/app/chat/group/message\",\n          query: current,\n        });\n        this.$emit(\"handleColse\", false);\n      } else {\n        this.$message({\n          message: res.data.msg,\n          type: \"error\",\n          customClass: \"mzindex\",\n        });\n        return;\n      }\n    },\n    handCloseAddGroups(param) {\n      this.dialogAddGroupsVisible = param;\n    },\n    handCancelGroupDialog(param) {\n      this.dialogAddGroupsVisible = param;\n    },\n    handConfirmGroupDialog(param) {\n      this.dialogAddGroupsVisible = param;\n      this.$emit(\"handleClose\", false);\n    },\n    cancelAppealsDialogHand(param) {\n      this.AppealsVisible = param;\n    },\n    cancelImpeachDialogHand(param) {\n      this.ImpeachVisible = param;\n    },\n    //去申诉\n    toAppeal(impeachFromtype) {\n      this.impeachFromtype = impeachFromtype;\n      this.AppealsVisible = true;\n      this.$refs.appeal.init();\n    },\n    toImpeachDialog() {\n      this.AppealsVisible = false;\n      this.ImpeachVisible = true;\n      this.$refs.impeach.init();\n    },\n    move(target){\n      if( document.getElementsByClassName('serlist')[0]){\n        if(target == 'up'){\n          document.getElementsByClassName('serlist')[0].scrollTop = document.getElementsByClassName('activebg')[0].offsetTop-250\n        }else{\n          document.getElementsByClassName('serlist')[0].scrollTop = document.getElementsByClassName('activebg')[0].offsetTop-180\n        }\n      }\n      console.log(document.getElementsByClassName('activebg')[0].offsetTop,'位移')\n    },\n    keyMove(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n        }else{\n          this.indexAt = 0;\n        }\n        this.move('up')\n      }else if(e.keyCode == 40){ //下键\n        if(this.indexAt < this.alldataNum-1){\n          this.indexAt++;\n        }else if(this.indexAt == this.alldataNum){\n          this.indexAt = this.indexAt-1 ;\n        }\n        this.move('down')\n      }\n      else if(e.keyCode == 13 && this.addFlag){\n        let currentId='';\n        if(document.getElementsByClassName('activebg')[0]){\n          currentId = document.getElementsByClassName('activebg')[0].getAttribute(\"id\")\n          console.log(currentId,'currentId')\n        }\n        if(this.dataList.length>0){\n          this.currentItem = this.dataList.filter((item) => { \n            return item.id == currentId\n          })\n          console.log(this.currentItem,'!!!!')\n          if(this.currentItem[0].inGroup == 1){\n            this.goGroupchat(this.currentItem[0]) //进入社区\n          }else{\n            this.addGroups(this.currentItem[0]) //加入社区\n          }\n          this.addFlag = false;\n        }\n        \n      }\n      \n    },\n    chooseSearch(){\n      if(this.hasData){\n        this.indexAt = 0;\n        document.getElementById('linkG2').focus()\n      }\n      // document.removeEventListener('keydown', this.keyMove)\n      // if(this.hasData){ // && document.getElementById('searchAll') == document.activebgElement\n      //   document.addEventListener('keydown',this.keyMove)\n      // }\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    if (this.inviteCode) {\n      this.value = this.inviteCode;\n      this.search();\n    }\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {\n    // document.removeEventListener('keydown', this.keyMove)\n  }, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.activebg .card{\n  background:#eaeaea !important;\n}\n.group {\n  .top {\n    width: 90%;\n    margin: 10px auto 0px;\n\n    /deep/ .el-button--small {\n      // height: 18px;\n      // line-height: 18px;\n      font-size: 12px;\n      font-weight: 400;\n      color: rgba(255, 255, 255, 1);\n      padding: 9px 10px;\n    }\n  }\n  .list {\n    max-height: 390px;\n    overflow: scroll;\n    .list-box {\n      .li-card {\n        display: inline-block;\n        margin-left: 24px;\n        margin-top: 20px;\n        .card {\n          padding: 10px 20px;\n          width: 310px;\n          height: 110px;\n          background: rgba(255, 255, 255, 1);\n          box-shadow: 0px 0px 4px 0px rgba(47, 83, 234, 0.2);\n          border-radius: 10px;\n          margin-bottom: 1px;\n          .left {\n            flex: 1;\n            .name {\n              margin-top: 5px;\n              font-size: 14px;\n              font-weight: 500;\n              color: rgba(51, 51, 51, 1);\n              line-height: 20px;\n              width: 200px;\n              overflow: hidden;\n              text-overflow: ellipsis;\n              white-space: pre;\n            }\n            .pass {\n              font-size: 12px;\n              font-weight: 500;\n              color: rgba(153, 153, 153, 1);\n              line-height: 17px;\n            }\n          }\n          .right {\n            .btn {\n              cursor: pointer;\n              border: none;\n              min-width: 90px;\n              max-width: 110px;\n              padding: 7px 10px;\n              background: rgba(47, 84, 235, 1);\n              border-radius: 6px;\n              font-size: 14px;\n              font-weight: 500;\n              color: rgba(255, 255, 255, 1);\n              word-break: break-word;\n            }\n          }\n        }\n      }\n    }\n    .ser-nocontent {\n      text-align: center;\n      .no-box {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".activebg .card": {
          "background": "#eaeaea !important"
        },
        ".group": {
          ".top": {
            "width": "90%",
            "margin": "10px auto 0px",
            "/deep/ .el-button--small": {
              "font-size": "12px",
              "font-weight": "400",
              "color": "rgba(255, 255, 255, 1)",
              "padding": "9px 10px"
            }
          },
          ".list": {
            "max-height": "390px",
            "overflow": "scroll",
            ".list-box": {
              ".li-card": {
                "display": "inline-block",
                "margin-left": "24px",
                "margin-top": "20px",
                ".card": {
                  "padding": "10px 20px",
                  "width": "310px",
                  "height": "110px",
                  "background": "rgba(255, 255, 255, 1)",
                  "box-shadow": "0px 0px 4px 0px rgba(47, 83, 234, 0.2)",
                  "border-radius": "10px",
                  "margin-bottom": "1px",
                  ".left": {
                    "flex": "1",
                    ".name": {
                      "margin-top": "5px",
                      "font-size": "14px",
                      "font-weight": "500",
                      "color": "rgba(51, 51, 51, 1)",
                      "line-height": "20px",
                      "width": "200px",
                      "overflow": "hidden",
                      "text-overflow": "ellipsis",
                      "white-space": "pre"
                    },
                    ".pass": {
                      "font-size": "12px",
                      "font-weight": "500",
                      "color": "rgba(153, 153, 153, 1)",
                      "line-height": "17px"
                    }
                  },
                  ".right": {
                    ".btn": {
                      "cursor": "pointer",
                      "border": "none",
                      "min-width": "90px",
                      "max-width": "110px",
                      "padding": "7px 10px",
                      "background": "rgba(47, 84, 235, 1)",
                      "border-radius": "6px",
                      "font-size": "14px",
                      "font-weight": "500",
                      "color": "rgba(255, 255, 255, 1)",
                      "word-break": "break-word"
                    }
                  }
                }
              }
            },
            ".ser-nocontent": {
              "text-align": "center",
              ".no-box": {
                "margin-top": "20px"
              }
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/friendList.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--\n* 消息转发-最近列表\n-->\n<template>\n  <div class=\"chat-list\">\n    <ul v-if=\"items.length > 0 \">\n      <li\n        v-for=\"(item, index) in items\"\n        :key=\"item._id\"\n        class=\"invite-mem-list-item flex align-center\"\n        @click.stop.prevent=\"addInviteHand(item)\"\n        :style=\"{\n          cursor: item.forbiddenWordsStatus2Boolean ? 'not-allowed' : '',\n        }\"\n      >\n        <div class=\"icon-class\">\n          <MemberIcon\n            :vipType=\"item.vipType\"\n            :image=\"item.sessionIcon\"\n            iconType=\"mini\"\n            :userRank=\"item.userRank\"\n            v-if=\"item.groupType === null\"\n          />\n          <img\n            :src=\"findImage(item.sessionIcon) | hand_group_avatar\"\n            alt\n            v-else-if=\"item.groupType === 1\"\n            @error=\"replaceImg\"\n          />\n          <DiscussionIcon :name=\"item.sessionName\" iconType=\"mini\" v-else />\n        </div>\n        <div class=\"select-info-class\">\n          <span class=\"select-name\">\n            <span class=\"user-name\">{{ item.sessionName }}</span>\n            <LevelIcon\n              :inviteCode=\"item.code\"\n              :userRank=\"item.userRank\"\n              iconType=\"small\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              v-if=\"item.targetType == 1\"\n              :listFlag=\"true\"\n              style=\"padding-left: 2px;\"\n            />\n          </span>\n          <!-- <span class=\"user-sign\" v-if=\"item.groupType != 0\">ID:{{item.code}}</span> -->\n          <div>\n            <LuckIdIcon\n              v-if=\"item.targetType == 1 || item.groupType == 1\"\n              :inviteCode=\"item.code\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :listFlag=\"false\"\n            />\n          </div>\n        </div>\n        <el-checkbox\n          class=\"checkbox-mul\"\n          v-model=\"item.checked\"\n          @change=\"addInviteHand(item, index)\"\n          :checked=\"item.checked\"\n          :disabled=\"item.forbiddenWordsStatus2Boolean || item.disabled\"\n        ></el-checkbox>\n      </li>\n    </ul>\n    <div v-if=\"items.length == 0 && !loading\" class=\"no-results\">\n      <img src=\"../../assets/images/web.png\" class=\"img_search\" />\n      <p>{{ $t('Universal_0173') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { diffTime } from \"@/utils/index\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nimport fileOperational from \"@/services/fileOperational\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\n// import { viewLimitGroupByUserId } from \"../chat/server\";\nimport { cloneDeep } from \"lodash\"\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n  },\n  data() {\n    //这里存放数据\n    return {\n      friendsList: [],\n      items: [],\n    };\n  },\n  props:{\n    limitGroupIdArr:{\n      type:Array,\n      default: () => {\n        return [];\n      },\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  filters: {\n    diffTimeHand(val) {\n      return diffTime(val);\n    },\n  },\n  //方法集合\n  methods: {\n    addInviteHand(item) {\n      // console.log('最近----',item);\n      //  :disabled=\"item.forbiddenWordsStatus2Boolean || item.disabled\"\n      if (!item.forbiddenWordsStatus2Boolean&&!item.disabled) {\n        this.$forceUpdate();\n        item.checked = item.checked ? false : true;\n        this.$emit(\"GetSelectObj\", item);\n      }\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    async init(ids, keyword) {\n      const lastMsgList = this.$store.state.chat.lastMsgList;\n      if (lastMsgList) {\n        this.friendsList = cloneDeep(lastMsgList.filter(\n          (item) =>\n            item.id != \"1008455862495526912\" &&\n            item.id != \"1032384035881537536\" &&\n            item.id != \"1188285824566878208\" &&\n            item.id != this.$paymentId &&\n            item.id != UserInfoUtils.getCurrentUserId()\n        ));\n        this.friendsList.forEach((item) => {\n          console.log(item.sessionName, item.id)\n          if (item.checked) {\n            item.checked = false;\n            this.$set(item,'checked',false)\n          }\n          /* forbiddenWordsStatus:0禁言，1不禁言； memberForbiddenWordsStatus：0不禁言，1禁言 */\n          let isForbiddenWordsStatus =\n            item.authStatus != 3\n              ? false\n              : item.forbiddenWordsStatus == 0 ||\n                item.memberForbiddenWordsStatus == 1;\n          item.forbiddenWordsStatus2Boolean = Boolean(isForbiddenWordsStatus);\n          this.$set(item,'forbiddenWordsStatus2Boolean',Boolean(isForbiddenWordsStatus))\n        });\n\n        this.items = cloneDeep(this.friendsList);\n        // viewLimitGroupByUserId({\n        //   userId: UserInfoUtils.getCurrentUserId()\n        // }).then(async (res) => {\n        //   if(res.code === \"200\"){\n        this.items.forEach((item) => {\n          // if(res.data.limitGroupId.length !== 0&&res.data.limitGroupId.indexOf(item.id) > -1){\n          if(this.limitGroupIdArr.includes(item.id)){\n            item.disabled = true;\n          } else {\n            item.disabled = false;\n          }\n        });\n        //     this.$forceUpdate();\n        //   }\n        // });\n      }\n      //this.initCheckedItems(ids);\n      //this.onFilter(keyword);\n      this.initCheckedItems(ids);\n      if (keyword) {\n        this.onFilter(keyword);\n      }\n      this.$emit('refreshLoading')\n    },\n    initCheckedItems(ids) {\n      this.items.forEach((item) => {\n        if (ids.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n      });\n    },\n    onFilter(keyword) {\n      if (keyword) {\n        keyword = keyword.toLowerCase();\n      } else {\n        keyword = \"\";\n      }\n      this.items = cloneDeep(this.friendsList.filter((item) => {\n        return (\n          item.sessionName.toLowerCase().indexOf(keyword) > -1 ||\n          item.code.indexOf(keyword) > -1 ||\n          item.pinyin.indexOf(keyword) > -1 ||\n          item.friendNickName.indexOf(keyword) > -1\n        );\n      }));\n    },\n    removeSelectedItem(id) {\n      this.items.forEach((item) => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.$forceUpdate();\n    },\n    checkItems(id) {\n      this.items.forEach((item) => {\n        if (item.id == id) {\n          item.checked = true;\n        }\n      });\n      this.$forceUpdate();\n    },\n    // 处理图片404问题\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, \"group\");\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--\n* 消息转发-最近列表\n-->\n<template>\n  <div class=\"chat-list\">\n    <ul v-if=\"items.length > 0 \">\n      <li\n        v-for=\"(item, index) in items\"\n        :key=\"item._id\"\n        class=\"invite-mem-list-item flex align-center\"\n        @click.stop.prevent=\"addInviteHand(item)\"\n        :style=\"{\n          cursor: item.forbiddenWordsStatus2Boolean ? 'not-allowed' : '',\n        }\"\n      >\n        <div class=\"icon-class\">\n          <MemberIcon\n            :vipType=\"item.vipType\"\n            :image=\"item.sessionIcon\"\n            iconType=\"mini\"\n            :userRank=\"item.userRank\"\n            v-if=\"item.groupType === null\"\n          />\n          <img\n            :src=\"findImage(item.sessionIcon) | hand_group_avatar\"\n            alt\n            v-else-if=\"item.groupType === 1\"\n            @error=\"replaceImg\"\n          />\n          <DiscussionIcon :name=\"item.sessionName\" iconType=\"mini\" v-else />\n        </div>\n        <div class=\"select-info-class\">\n          <span class=\"select-name\">\n            <span class=\"user-name\">{{ item.sessionName }}</span>\n            <LevelIcon\n              :inviteCode=\"item.code\"\n              :userRank=\"item.userRank\"\n              iconType=\"small\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              v-if=\"item.targetType == 1\"\n              :listFlag=\"true\"\n              style=\"padding-left: 2px;\"\n            />\n          </span>\n          <!-- <span class=\"user-sign\" v-if=\"item.groupType != 0\">ID:{{item.code}}</span> -->\n          <div>\n            <LuckIdIcon\n              v-if=\"item.targetType == 1 || item.groupType == 1\"\n              :inviteCode=\"item.code\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :listFlag=\"false\"\n            />\n          </div>\n        </div>\n        <el-checkbox\n          class=\"checkbox-mul\"\n          v-model=\"item.checked\"\n          @change=\"addInviteHand(item, index)\"\n          :checked=\"item.checked\"\n          :disabled=\"item.forbiddenWordsStatus2Boolean || item.disabled\"\n        ></el-checkbox>\n      </li>\n    </ul>\n    <div v-if=\"items.length == 0 && !loading\" class=\"no-results\">\n      <img src=\"../../assets/images/web.png\" class=\"img_search\" />\n      <p>{{ $t('Universal_0173') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { diffTime } from \"@/utils/index\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nimport fileOperational from \"@/services/fileOperational\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\n// import { viewLimitGroupByUserId } from \"../chat/server\";\nimport { cloneDeep } from \"lodash\"\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n  },\n  data() {\n    //这里存放数据\n    return {\n      friendsList: [],\n      items: [],\n    };\n  },\n  props:{\n    limitGroupIdArr:{\n      type:Array,\n      default: () => {\n        return [];\n      },\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  filters: {\n    diffTimeHand(val) {\n      return diffTime(val);\n    },\n  },\n  //方法集合\n  methods: {\n    addInviteHand(item) {\n      // console.log('最近----',item);\n      //  :disabled=\"item.forbiddenWordsStatus2Boolean || item.disabled\"\n      if (!item.forbiddenWordsStatus2Boolean&&!item.disabled) {\n        this.$forceUpdate();\n        item.checked = item.checked ? false : true;\n        this.$emit(\"GetSelectObj\", item);\n      }\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    async init(ids, keyword) {\n      const lastMsgList = this.$store.state.chat.lastMsgList;\n      if (lastMsgList) {\n        this.friendsList = cloneDeep(lastMsgList.filter(\n          (item) =>\n            item.id != \"1008455862495526912\" &&\n            item.id != \"1032384035881537536\" &&\n            item.id != \"1188285824566878208\" &&\n            item.id != this.$paymentId &&\n            item.id != UserInfoUtils.getCurrentUserId()\n        ));\n        this.friendsList.forEach((item) => {\n          console.log(item.sessionName, item.id)\n          if (item.checked) {\n            item.checked = false;\n            this.$set(item,'checked',false)\n          }\n          /* forbiddenWordsStatus:0禁言，1不禁言； memberForbiddenWordsStatus：0不禁言，1禁言 */\n          let isForbiddenWordsStatus =\n            item.authStatus != 3\n              ? false\n              : item.forbiddenWordsStatus == 0 ||\n                item.memberForbiddenWordsStatus == 1;\n          item.forbiddenWordsStatus2Boolean = Boolean(isForbiddenWordsStatus);\n          this.$set(item,'forbiddenWordsStatus2Boolean',Boolean(isForbiddenWordsStatus))\n        });\n\n        this.items = cloneDeep(this.friendsList);\n        // viewLimitGroupByUserId({\n        //   userId: UserInfoUtils.getCurrentUserId()\n        // }).then(async (res) => {\n        //   if(res.code === \"200\"){\n        this.items.forEach((item) => {\n          // if(res.data.limitGroupId.length !== 0&&res.data.limitGroupId.indexOf(item.id) > -1){\n          if(this.limitGroupIdArr.includes(item.id)){\n            item.disabled = true;\n          } else {\n            item.disabled = false;\n          }\n        });\n        //     this.$forceUpdate();\n        //   }\n        // });\n      }\n      //this.initCheckedItems(ids);\n      //this.onFilter(keyword);\n      this.initCheckedItems(ids);\n      if (keyword) {\n        this.onFilter(keyword);\n      }\n      this.$emit('refreshLoading')\n    },\n    initCheckedItems(ids) {\n      this.items.forEach((item) => {\n        if (ids.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n      });\n    },\n    onFilter(keyword) {\n      if (keyword) {\n        keyword = keyword.toLowerCase();\n      } else {\n        keyword = \"\";\n      }\n      this.items = cloneDeep(this.friendsList.filter((item) => {\n        return (\n          item.sessionName.toLowerCase().indexOf(keyword) > -1 ||\n          item.code.indexOf(keyword) > -1 ||\n          item.pinyin.indexOf(keyword) > -1 ||\n          item.friendNickName.indexOf(keyword) > -1\n        );\n      }));\n    },\n    removeSelectedItem(id) {\n      this.items.forEach((item) => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.$forceUpdate();\n    },\n    checkItems(id) {\n      this.items.forEach((item) => {\n        if (item.id == id) {\n          item.checked = true;\n        }\n      });\n      this.$forceUpdate();\n    },\n    // 处理图片404问题\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, \"group\");\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.icon-class {\n  border-radius: 50%;\n  width: 38px;\n  height: 38px;\n  vertical-align: middle;\n  margin-right: 12px;\n  img {\n    border-radius: 50%;\n    width: 38px;\n    height: 38px;\n    vertical-align: middle;\n    margin-right: 12px;\n  }\n}\n.select-info-class {\n  display: flex;\n  flex-direction: column;\n}\n.select-name {\n  display: flex;\n  align-items: center;\n  width: 180px;\n  margin-bottom: 5px;\n}\n.user-name {\n  font-size: 12px;\n  font-weight: 600;\n  color: #191f25;\n  max-width: 110px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: pre;\n}\n// .user-sign {\n//   word-break: break-all;\n//   font-size: 10px;\n\n//   font-weight: 500;\n//   color: #999;\n//   line-height: 20px;\n//   overflow: hidden;\n//   text-overflow: ellipsis;\n//   display: -webkit-box;\n//   -webkit-line-clamp: 1;\n//   -webkit-box-orient: vertical;\n//   -webkit-box-flex: 1;\n//   flex: 1;\n// }\n.chat-list {\n  position: relative;\n  li {\n    //  padding: 5px;\n    padding: 5px 5px 5px 5%;\n  }\n  li:hover {\n    background: #f4f4f4;\n  }\n  .invite-mem-avatar {\n    // margin-right: 5px;\n    margin-bottom: 5px;\n    overflow: hidden;\n    img {\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n    }\n  }\n  .no-results {\n    text-align: center;\n  }\n}\n.checkbox-mul&::v-deep .el-checkbox__inner {\n  border: 1px solid #aeaeae;\n}\n</style>\n",
    "cssJson": [
      {
        ".icon-class": {
          "border-radius": "50%",
          "width": "38px",
          "height": "38px",
          "vertical-align": "middle",
          "margin-right": "12px",
          "img": {
            "border-radius": "50%",
            "width": "38px",
            "height": "38px",
            "vertical-align": "middle",
            "margin-right": "12px"
          }
        },
        ".select-info-class": {
          "display": "flex",
          "flex-direction": "column"
        },
        ".select-name": {
          "display": "flex",
          "align-items": "center",
          "width": "180px",
          "margin-bottom": "5px"
        },
        ".user-name": {
          "font-size": "12px",
          "font-weight": "600",
          "color": "#191f25",
          "max-width": "110px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "pre"
        },
        ".chat-list": {
          "position": "relative",
          "li": {
            "padding": "5px 5px 5px 5%"
          },
          "li:hover": {
            "background": "#f4f4f4"
          },
          ".invite-mem-avatar": {
            "margin-bottom": "5px",
            "overflow": "hidden",
            "img": {
              "width": "32px",
              "height": "32px",
              "border-radius": "50%"
            }
          },
          ".no-results": {
            "text-align": "center"
          }
        },
        ".checkbox-mul&::v-deep .el-checkbox__inner": {
          "border": "1px solid #aeaeae"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/groupList.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--\n* 消息转发-社区列表\n-->\n<template>\n  <div class=\"chat-list\">\n    <ul v-if=\"items.length > 0\">\n      <li\n        v-for=\"(item, index) in items\"\n        :key=\"item._id\"\n        class=\"invite-mem-list-item flex align-center\"\n        @click.stop.prevent=\"addInviteHand(item)\"\n        :style=\"{\n          cursor: item.forbiddenWordsStatus2Boolean ? 'not-allowed' : '',\n        }\"\n      >\n        <div class=\"invite-mem-avatar\">\n          <img\n            :src=\"findImage(item.friendHeadImg) | hand_group_avatar\"\n            @error=\"replaceImg\"\n            alt\n          />\n        </div>\n        <div class=\"user-words flex flex-direction\">\n          <div class=\"flex justify-between align-center\">\n            <span class=\"user-name\">{{ item.friendNickName }}</span>\n            <el-checkbox\n              class=\"checkbox-mul\"\n              v-model=\"item.checked\"\n              @change=\"addInviteHand(item, index)\"\n              :checked=\"item.checked\"\n              :disabled=\"item.forbiddenWordsStatus2Boolean || item.disabled\"\n            ></el-checkbox>\n          </div>\n          <div class=\"flex justify-between align-center\">\n            <span class=\"user-sign\">ID:{{ item.code }}</span>\n          </div>\n        </div>\n      </li>\n    </ul>\n    <div v-if=\"items.length == 0 && !loading\" class=\"no-results\">\n      <img src=\"../../assets/images/web.png\" class=\"img_search\" />\n      <p>{{ $t('Universal_0173') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { diffTime } from \"@/utils/index\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport fileOperational from \"@/services/fileOperational\";\n// import { viewLimitGroupByUserId } from \"../chat/server\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      friendsList: [],\n      items: [],\n    };\n  },\n  props:{\n    limitGroupIdArr:{\n      type:Array,\n      default: () => {\n        return [];\n      },\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  filters: {\n    diffTimeHand(val) {\n      return diffTime(val);\n    },\n  },\n  //方法集合\n  methods: {\n    async init(ids, keyword) {\n      await this.getAllGroupListHand(ids, keyword);\n      // viewLimitGroupByUserId({\n      //   userId: UserInfoUtils.getCurrentUserId()\n      // }).then(async (res) => {\n      //   if(res.code === \"200\"){\n      this.items.map((item) => {\n        // if(res.data.limitGroupId.length !== 0&&res.data.limitGroupId.indexOf(item.id) > -1){\n        if(this.limitGroupIdArr.includes(item.id)){\n          item.disabled = true;\n        } else {\n          item.disabled = false;\n        }\n      });\n      //     this.$forceUpdate();\n      //   }\n      // });\n      this.$emit('refreshLoading')\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    addInviteHand(item) {\n      // :disabled=\"item.forbiddenWordsStatus2Boolean || item.disabled\"\n      if (!item.forbiddenWordsStatus2Boolean&&!item.disabled) {\n        this.$forceUpdate();\n        item.checked = item.checked ? false : true;\n        this.$emit(\"GetSelectObj\", item);\n      }\n    },\n    collectSelectedGroups(selectedGroups, list) {\n      for (let item of list) {\n        if (item.checked) {\n          selectedGroups.push({\n            checked: item.checked,\n            friendHeadImg: item.groupAvatar,\n            friendNickName: item.groupName,\n            id: item.groupId,\n            targetType: \"2\",\n          });\n        }\n      }\n    },\n    async getAllGroupListHand(ids, keyword) {\n      let userId = UserInfoUtils.getCurrentUserId();\n      let res = await window.vm.$knex.raw(`\n        select\n        g.people as people,\n        g.group_name as friendNickName,\n        g.group_avatar as friendHeadImg,\n        g.group_id as id,\n        g.group_name_pinyin as pinyin,\n        g.group_type as groupType,\n        g.group_code as code,\n        g.forbiddenWordsStatus as forbiddenWordsStatus, \n        g.create_time as createdOn,\n        tgm.forbiddenWordsStatus as memberForbiddenWordsStatus,\n        tgm.auth_status as authStatus,\n        tgm.id as memberId\n        from t_groups g\n        left join t_groups_member gm on gm.group_id = g.group_id\n        left join t_groups_member tgm on tgm.group_id = g.group_id and tgm.id = '${userId}' and tgm.is_show='true'\n        where g.is_show='true' and g.group_type='1'\n        group by g.group_id\n        order by g.group_name\n      `);\n      this.friendsList = res;\n      this.items = this.friendsList.sort(this.compare());\n      this.initCheckedItems(ids);\n      if (keyword) {\n        this.onFilter(keyword);\n      }\n    },\n    compare() {\n      return (obj1, obj2) => {\n        let value1 = Number(obj1[\"people\"]);\n        let value2 = Number(obj2[\"people\"]);\n        if (value1 === value2) {\n          return (\n            new Date(obj2[\"createdOn\"]).getTime() -\n            new Date(obj1[\"createdOn\"]).getTime()\n          );\n        }\n        return value2 - value1;\n      };\n    },\n    onFilter(keyword) {\n      if (keyword) {\n        keyword = keyword.toLowerCase();\n      } else {\n        keyword = \"\";\n      }\n      this.items = this.friendsList.filter((item) => {\n        return (\n          item.friendNickName.toLowerCase().indexOf(keyword) > -1 ||\n          item.code.indexOf(keyword) > -1 ||\n          item.pinyin.indexOf(keyword) > -1\n        );\n      });\n    },\n    initCheckedItems(ids) {\n      this.items.map((item) => {\n        /* forbiddenWordsStatus:0禁言，1不禁言； memberForbiddenWordsStatus：0不禁言，1禁言。authStatus=3普通成员 */\n        let isForbiddenWordsStatus =\n          item.authStatus != 3\n            ? false\n            : item.forbiddenWordsStatus == 0 ||\n              item.memberForbiddenWordsStatus == 1;\n        item.forbiddenWordsStatus2Boolean = Boolean(isForbiddenWordsStatus);\n        if (ids.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n        item.targetType = 2;\n      })\n    },\n    removeSelectedItem(id) {\n      this.items.map((item) => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.$forceUpdate();\n    },\n    checkItems(id) {\n      this.items.map((item) => {\n        if (item.id == id) {\n          item.checked = true;\n        }\n      });\n      this.$forceUpdate();\n    },\n    // 处理图片404问题\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, \"group\");\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--\n* 消息转发-社区列表\n-->\n<template>\n  <div class=\"chat-list\">\n    <ul v-if=\"items.length > 0\">\n      <li\n        v-for=\"(item, index) in items\"\n        :key=\"item._id\"\n        class=\"invite-mem-list-item flex align-center\"\n        @click.stop.prevent=\"addInviteHand(item)\"\n        :style=\"{\n          cursor: item.forbiddenWordsStatus2Boolean ? 'not-allowed' : '',\n        }\"\n      >\n        <div class=\"invite-mem-avatar\">\n          <img\n            :src=\"findImage(item.friendHeadImg) | hand_group_avatar\"\n            @error=\"replaceImg\"\n            alt\n          />\n        </div>\n        <div class=\"user-words flex flex-direction\">\n          <div class=\"flex justify-between align-center\">\n            <span class=\"user-name\">{{ item.friendNickName }}</span>\n            <el-checkbox\n              class=\"checkbox-mul\"\n              v-model=\"item.checked\"\n              @change=\"addInviteHand(item, index)\"\n              :checked=\"item.checked\"\n              :disabled=\"item.forbiddenWordsStatus2Boolean || item.disabled\"\n            ></el-checkbox>\n          </div>\n          <div class=\"flex justify-between align-center\">\n            <span class=\"user-sign\">ID:{{ item.code }}</span>\n          </div>\n        </div>\n      </li>\n    </ul>\n    <div v-if=\"items.length == 0 && !loading\" class=\"no-results\">\n      <img src=\"../../assets/images/web.png\" class=\"img_search\" />\n      <p>{{ $t('Universal_0173') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { diffTime } from \"@/utils/index\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport fileOperational from \"@/services/fileOperational\";\n// import { viewLimitGroupByUserId } from \"../chat/server\";\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data() {\n    //这里存放数据\n    return {\n      friendsList: [],\n      items: [],\n    };\n  },\n  props:{\n    limitGroupIdArr:{\n      type:Array,\n      default: () => {\n        return [];\n      },\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  filters: {\n    diffTimeHand(val) {\n      return diffTime(val);\n    },\n  },\n  //方法集合\n  methods: {\n    async init(ids, keyword) {\n      await this.getAllGroupListHand(ids, keyword);\n      // viewLimitGroupByUserId({\n      //   userId: UserInfoUtils.getCurrentUserId()\n      // }).then(async (res) => {\n      //   if(res.code === \"200\"){\n      this.items.map((item) => {\n        // if(res.data.limitGroupId.length !== 0&&res.data.limitGroupId.indexOf(item.id) > -1){\n        if(this.limitGroupIdArr.includes(item.id)){\n          item.disabled = true;\n        } else {\n          item.disabled = false;\n        }\n      });\n      //     this.$forceUpdate();\n      //   }\n      // });\n      this.$emit('refreshLoading')\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    addInviteHand(item) {\n      // :disabled=\"item.forbiddenWordsStatus2Boolean || item.disabled\"\n      if (!item.forbiddenWordsStatus2Boolean&&!item.disabled) {\n        this.$forceUpdate();\n        item.checked = item.checked ? false : true;\n        this.$emit(\"GetSelectObj\", item);\n      }\n    },\n    collectSelectedGroups(selectedGroups, list) {\n      for (let item of list) {\n        if (item.checked) {\n          selectedGroups.push({\n            checked: item.checked,\n            friendHeadImg: item.groupAvatar,\n            friendNickName: item.groupName,\n            id: item.groupId,\n            targetType: \"2\",\n          });\n        }\n      }\n    },\n    async getAllGroupListHand(ids, keyword) {\n      let userId = UserInfoUtils.getCurrentUserId();\n      let res = await window.vm.$knex.raw(`\n        select\n        g.people as people,\n        g.group_name as friendNickName,\n        g.group_avatar as friendHeadImg,\n        g.group_id as id,\n        g.group_name_pinyin as pinyin,\n        g.group_type as groupType,\n        g.group_code as code,\n        g.forbiddenWordsStatus as forbiddenWordsStatus, \n        g.create_time as createdOn,\n        tgm.forbiddenWordsStatus as memberForbiddenWordsStatus,\n        tgm.auth_status as authStatus,\n        tgm.id as memberId\n        from t_groups g\n        left join t_groups_member gm on gm.group_id = g.group_id\n        left join t_groups_member tgm on tgm.group_id = g.group_id and tgm.id = '${userId}' and tgm.is_show='true'\n        where g.is_show='true' and g.group_type='1'\n        group by g.group_id\n        order by g.group_name\n      `);\n      this.friendsList = res;\n      this.items = this.friendsList.sort(this.compare());\n      this.initCheckedItems(ids);\n      if (keyword) {\n        this.onFilter(keyword);\n      }\n    },\n    compare() {\n      return (obj1, obj2) => {\n        let value1 = Number(obj1[\"people\"]);\n        let value2 = Number(obj2[\"people\"]);\n        if (value1 === value2) {\n          return (\n            new Date(obj2[\"createdOn\"]).getTime() -\n            new Date(obj1[\"createdOn\"]).getTime()\n          );\n        }\n        return value2 - value1;\n      };\n    },\n    onFilter(keyword) {\n      if (keyword) {\n        keyword = keyword.toLowerCase();\n      } else {\n        keyword = \"\";\n      }\n      this.items = this.friendsList.filter((item) => {\n        return (\n          item.friendNickName.toLowerCase().indexOf(keyword) > -1 ||\n          item.code.indexOf(keyword) > -1 ||\n          item.pinyin.indexOf(keyword) > -1\n        );\n      });\n    },\n    initCheckedItems(ids) {\n      this.items.map((item) => {\n        /* forbiddenWordsStatus:0禁言，1不禁言； memberForbiddenWordsStatus：0不禁言，1禁言。authStatus=3普通成员 */\n        let isForbiddenWordsStatus =\n          item.authStatus != 3\n            ? false\n            : item.forbiddenWordsStatus == 0 ||\n              item.memberForbiddenWordsStatus == 1;\n        item.forbiddenWordsStatus2Boolean = Boolean(isForbiddenWordsStatus);\n        if (ids.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n        item.targetType = 2;\n      })\n    },\n    removeSelectedItem(id) {\n      this.items.map((item) => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.$forceUpdate();\n    },\n    checkItems(id) {\n      this.items.map((item) => {\n        if (item.id == id) {\n          item.checked = true;\n        }\n      });\n      this.$forceUpdate();\n    },\n    // 处理图片404问题\n    replaceImg(e) {\n      UserInfoUtils.replaceDefaultImg(e, \"group\");\n    },\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.user-words {\n  width: 180px;\n  flex: auto;\n  padding: 0 10px 0 0;\n  margin-left: 10px;\n}\n\n.user-name {\n  font-size: 12px;\n  font-weight: 600;\n  color: #191f25;\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  flex: 1;\n  white-space: pre;\n}\n.user-sign {\n  word-break: break-all;\n  font-size: 10px;\n\n  font-weight: 500;\n  color: #999;\n  line-height: 20px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  -webkit-box-flex: 1;\n  flex: 1;\n}\n.chat-list {\n  position: relative;\n  li {\n    // padding: 5px;\n    padding: 5px 5px 5px 5%;\n  }\n  li:hover {\n    background: #f4f4f4;\n  }\n  .invite-mem-avatar {\n    // margin-right: 5px;\n    overflow: hidden;\n    img {\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n    }\n  }\n  .no-results {\n    text-align: center;\n  }\n}\n.checkbox-mul&::v-deep .el-checkbox__inner {\n  border: 1px solid #aeaeae;\n}\n</style>\n",
    "cssJson": [
      {
        ".user-words": {
          "width": "180px",
          "flex": "auto",
          "padding": "0 10px 0 0",
          "margin-left": "10px"
        },
        ".user-name": {
          "font-size": "12px",
          "font-weight": "600",
          "color": "#191f25",
          "display": "-webkit-box",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "-webkit-line-clamp": "1",
          "-webkit-box-orient": "vertical",
          "flex": "1",
          "white-space": "pre"
        },
        ".user-sign": {
          "word-break": "break-all",
          "font-size": "10px",
          "font-weight": "500",
          "color": "#999",
          "line-height": "20px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "display": "-webkit-box",
          "-webkit-line-clamp": "1",
          "-webkit-box-orient": "vertical",
          "-webkit-box-flex": "1",
          "flex": "1"
        },
        ".chat-list": {
          "position": "relative",
          "li": {
            "padding": "5px 5px 5px 5%"
          },
          "li:hover": {
            "background": "#f4f4f4"
          },
          ".invite-mem-avatar": {
            "overflow": "hidden",
            "img": {
              "width": "32px",
              "height": "32px",
              "border-radius": "50%"
            }
          },
          ".no-results": {
            "text-align": "center"
          }
        },
        ".checkbox-mul&::v-deep .el-checkbox__inner": {
          "border": "1px solid #aeaeae"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/relationList.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--\n* 消息转发-联系人列表\n-->\n<template>\n  <div class=\"chat-list\" ><!--v-loading=\"loading\"-->\n    <ul v-if=\"items.length > 0 \" >\n      <li \n        v-for=\"(item, index) in items\" \n        :key=\"item._id\"\n        class=\"invite-mem-list-item flex align-center\" \n        @click.stop.prevent=\"addInviteHand(item)\"\n      >\n        <div class=\"member-icon-class\">\n          <MemberIcon :vipType=\"item.vipType\" :image=\"item.friendHeadImg\" iconType=\"mini\" :userRank=\"item.userRank\" />\n        </div>\n        <div class=\"select-info-class\">\n          <span class=\"select-name\">\n            <span class=\"user-name\">{{ item.friendName }}</span>\n            <LevelIcon\n              :inviteCode=\"item.code\"\n              :userRank=\"item.userRank\"\n              iconType=\"small\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              v-if=\"item.targetType == 1\"\n              :listFlag=\"true\"\n              style=\"padding-left: 2px;\"\n            />\n          </span>\n          <!-- <span class=\"user-sign\">ID:{{item.code}}</span> -->\n          <div class=\"mar-t-5\">\n            <LuckIdIcon\n              :inviteCode=\"item.inviteCode\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :listFlag=\"false\"\n            />\n          </div>\n        </div>\n        <el-checkbox\n          class=\"checkbox-mul\"\n          v-model=\"item.checked\"\n          @change=\"addInviteHand(item, index)\"\n          :checked=\"item.checked\"\n          :disabled=\"item.disabled\"\n        ></el-checkbox>\n      </li>\n    </ul>\n    <div v-if=\"items.length == 0 && !loading\" class=\"no-results\">\n      <img src=\"../../assets/images/web.png\" class=\"img_search\" />\n      <p>{{ $t('Universal_0173') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { diffTime } from '@/utils/index';\nimport { convertToPinyin } from '@/utils/pinyin';\nimport fileOperational from '@/services/fileOperational';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  data() {\n    //这里存放数据\n    return {\n      // loading:false,\n      friendsList: [],\n      items: []\n    };\n  },\n\n  props:{\n    loading: {\n      type: Boolean\n    }\n  },\n  filters: {\n    diffTimeHand(val) {\n      return diffTime(val);\n    }\n  },\n  //方法集合\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    async init(ids, keyword, members,showAppealClosureNotice) {\n      await this.getFriendsListHand(ids, keyword);\n      if (keyword) {\n        this.onFilter(keyword);\n      }\n      if (members && members.length > 0) {\n        this.items.map(item => {\n          if (members.filter(m => m.id == item.id && m.is_show == 'true').length > 0) {\n            item.disabled = true;\n            item.checked = true;\n          }\n        });\n        this.$forceUpdate();\n      }\n      //当群聊讨论组处于被封禁状态时 所有人员均不可被邀请进入\n      if(showAppealClosureNotice){\n        this.items.map(item => {\n          item.disabled = true;\n        });\n      }\n      this.$emit('refreshLoading')\n    },\n    addInviteHand(item) {\n      //判断当群被禁止社交时不允许邀请入群\n      if(item.disabled) return;\n      this.$forceUpdate();\n      item.checked = item.checked ? false : true;\n      this.$emit('GetSelectObj', item);\n    },\n    async getFriendsListHand(ids) {\n      // this.loading = true\n      let res = await window.vm.$knex.raw(\n        'select ' +\n          'friend_id,friend_head_img,friend_friendNotes, friend_nick_name, invite_code, friend_nick_name_pinyin, ' +\n          'friend_friendNotes_pinyin, vipType, inviteCodeType, userRank ' +\n          \"from t_contacts where is_show = 'true' or is_show is null ORDER BY friend_nick_name \"\n      );\n      // this.loading = false\n      this.friendsList = this.changeName(res); //联系人列表赋值\n      this.friendsList = this.friendsList.filter(f => f.id != UserInfoUtils.getCurrentUserId());\n      this.items = this.friendsList.sort(this.compare());\n      console.log('this.items', this.items);\n      this.initCheckedItems(ids);\n      //this.onFilter(keyword);\n    },\n    compare() {\n      return (obj1, obj2) => {\n        let value1 = obj1['fristName'][0];\n        let value2 = obj2['fristName'][0];\n        if (!value1 || !value2) {\n          return 1;\n        }\n        let isString1 = /^[a-zA-Z]+$/.test(value1);\n        let isString2 = /^[a-zA-Z]+$/.test(value2);\n        let isNumber1 = !isNaN(Number(value1));\n        let isNumber2 = !isNaN(Number(value2));\n        if (isString1) {\n          if (isString2) {\n            // 这里处理一下异常情况 \n            if(value1 === undefined || value2 === undefined) {\n              return 1;\n            }\n            return value1.toLowerCase() > value2.toLowerCase() ? 1 : -1;\n          } else if (isNumber2) {\n            return -1;\n          } else {\n            return -1;\n          }\n        } else if (isNumber1) {\n          if (isString2) {\n            return 1;\n          } else if (isNumber2) {\n            return Number(value1) > Number(value2) ? 1 : -1;\n          } else {\n            return -1;\n          }\n        } else {\n          return 1;\n        }\n      };\n    },\n    initCheckedItems(ids) {\n      this.items.map(item => {\n        if (ids.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n      });\n    },\n    changeName(arr) {\n      return arr.map(a => {\n        a = {\n          friendName: a.friend_friendNotes || a.friend_nick_name,\n          fristName: convertToPinyin(a.friend_friendNotes || a.friend_nick_name),\n          friendAreaCityCode: a.friend_areaCountryCode,\n          friendAreaCountryCode: a.friend_areaCountryCode,\n          friendAttrs: a.friend_attrs,\n          friendFriendNotes: a.friend_friendNotes || '',\n          friendGender: a.friend_gender,\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name,\n          friendPersonalSign: a.friend_personalSign,\n          friendType: a.friend_type,\n          friendUpdatedOn: a.friend_updatedOn,\n          inviteCode: a.invite_code,\n          isShow: a.is_show,\n          level: a.level,\n          id: a.friend_id,\n          code: a.invite_code,\n          pinyin: a.friend_nick_name_pinyin,\n          note_pinyin: a.friend_friendNotes_pinyin,\n          targetType: '1',\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank,\n          groupType: null\n        };\n        return a;\n      });\n      // console.log(this.lists)\n    },\n    onFilter(keyword) {\n      if (keyword) {\n        keyword = keyword.toLowerCase();\n      } else {\n        keyword = '';\n      }\n      this.items = this.friendsList.filter(item => {\n        return (\n          item.friendNickName.toLowerCase().indexOf(keyword) > -1 ||\n          item.code.indexOf(keyword) > -1 ||\n          item.pinyin.indexOf(keyword) > -1 ||\n          item.note_pinyin.indexOf(keyword) > -1 ||\n          item.friendFriendNotes.toLowerCase().indexOf(keyword) > -1\n        );\n      });\n    },\n    removeSelectedItem(id) {\n      this.items.map(item => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.$forceUpdate();\n    },\n    checkItems(id) {\n      this.items.map(item => {\n        if (item.id == id) {\n          item.checked = true;\n        }\n      });\n      this.$forceUpdate();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!--\n* 消息转发-联系人列表\n-->\n<template>\n  <div class=\"chat-list\" ><!--v-loading=\"loading\"-->\n    <ul v-if=\"items.length > 0 \" >\n      <li \n        v-for=\"(item, index) in items\" \n        :key=\"item._id\"\n        class=\"invite-mem-list-item flex align-center\" \n        @click.stop.prevent=\"addInviteHand(item)\"\n      >\n        <div class=\"member-icon-class\">\n          <MemberIcon :vipType=\"item.vipType\" :image=\"item.friendHeadImg\" iconType=\"mini\" :userRank=\"item.userRank\" />\n        </div>\n        <div class=\"select-info-class\">\n          <span class=\"select-name\">\n            <span class=\"user-name\">{{ item.friendName }}</span>\n            <LevelIcon\n              :inviteCode=\"item.code\"\n              :userRank=\"item.userRank\"\n              iconType=\"small\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              v-if=\"item.targetType == 1\"\n              :listFlag=\"true\"\n              style=\"padding-left: 2px;\"\n            />\n          </span>\n          <!-- <span class=\"user-sign\">ID:{{item.code}}</span> -->\n          <div class=\"mar-t-5\">\n            <LuckIdIcon\n              :inviteCode=\"item.inviteCode\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :listFlag=\"false\"\n            />\n          </div>\n        </div>\n        <el-checkbox\n          class=\"checkbox-mul\"\n          v-model=\"item.checked\"\n          @change=\"addInviteHand(item, index)\"\n          :checked=\"item.checked\"\n          :disabled=\"item.disabled\"\n        ></el-checkbox>\n      </li>\n    </ul>\n    <div v-if=\"items.length == 0 && !loading\" class=\"no-results\">\n      <img src=\"../../assets/images/web.png\" class=\"img_search\" />\n      <p>{{ $t('Universal_0173') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { diffTime } from '@/utils/index';\nimport { convertToPinyin } from '@/utils/pinyin';\nimport fileOperational from '@/services/fileOperational';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  data() {\n    //这里存放数据\n    return {\n      // loading:false,\n      friendsList: [],\n      items: []\n    };\n  },\n\n  props:{\n    loading: {\n      type: Boolean\n    }\n  },\n  filters: {\n    diffTimeHand(val) {\n      return diffTime(val);\n    }\n  },\n  //方法集合\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n    async init(ids, keyword, members,showAppealClosureNotice) {\n      await this.getFriendsListHand(ids, keyword);\n      if (keyword) {\n        this.onFilter(keyword);\n      }\n      if (members && members.length > 0) {\n        this.items.map(item => {\n          if (members.filter(m => m.id == item.id && m.is_show == 'true').length > 0) {\n            item.disabled = true;\n            item.checked = true;\n          }\n        });\n        this.$forceUpdate();\n      }\n      //当群聊讨论组处于被封禁状态时 所有人员均不可被邀请进入\n      if(showAppealClosureNotice){\n        this.items.map(item => {\n          item.disabled = true;\n        });\n      }\n      this.$emit('refreshLoading')\n    },\n    addInviteHand(item) {\n      //判断当群被禁止社交时不允许邀请入群\n      if(item.disabled) return;\n      this.$forceUpdate();\n      item.checked = item.checked ? false : true;\n      this.$emit('GetSelectObj', item);\n    },\n    async getFriendsListHand(ids) {\n      // this.loading = true\n      let res = await window.vm.$knex.raw(\n        'select ' +\n          'friend_id,friend_head_img,friend_friendNotes, friend_nick_name, invite_code, friend_nick_name_pinyin, ' +\n          'friend_friendNotes_pinyin, vipType, inviteCodeType, userRank ' +\n          \"from t_contacts where is_show = 'true' or is_show is null ORDER BY friend_nick_name \"\n      );\n      // this.loading = false\n      this.friendsList = this.changeName(res); //联系人列表赋值\n      this.friendsList = this.friendsList.filter(f => f.id != UserInfoUtils.getCurrentUserId());\n      this.items = this.friendsList.sort(this.compare());\n      console.log('this.items', this.items);\n      this.initCheckedItems(ids);\n      //this.onFilter(keyword);\n    },\n    compare() {\n      return (obj1, obj2) => {\n        let value1 = obj1['fristName'][0];\n        let value2 = obj2['fristName'][0];\n        if (!value1 || !value2) {\n          return 1;\n        }\n        let isString1 = /^[a-zA-Z]+$/.test(value1);\n        let isString2 = /^[a-zA-Z]+$/.test(value2);\n        let isNumber1 = !isNaN(Number(value1));\n        let isNumber2 = !isNaN(Number(value2));\n        if (isString1) {\n          if (isString2) {\n            // 这里处理一下异常情况 \n            if(value1 === undefined || value2 === undefined) {\n              return 1;\n            }\n            return value1.toLowerCase() > value2.toLowerCase() ? 1 : -1;\n          } else if (isNumber2) {\n            return -1;\n          } else {\n            return -1;\n          }\n        } else if (isNumber1) {\n          if (isString2) {\n            return 1;\n          } else if (isNumber2) {\n            return Number(value1) > Number(value2) ? 1 : -1;\n          } else {\n            return -1;\n          }\n        } else {\n          return 1;\n        }\n      };\n    },\n    initCheckedItems(ids) {\n      this.items.map(item => {\n        if (ids.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n      });\n    },\n    changeName(arr) {\n      return arr.map(a => {\n        a = {\n          friendName: a.friend_friendNotes || a.friend_nick_name,\n          fristName: convertToPinyin(a.friend_friendNotes || a.friend_nick_name),\n          friendAreaCityCode: a.friend_areaCountryCode,\n          friendAreaCountryCode: a.friend_areaCountryCode,\n          friendAttrs: a.friend_attrs,\n          friendFriendNotes: a.friend_friendNotes || '',\n          friendGender: a.friend_gender,\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name,\n          friendPersonalSign: a.friend_personalSign,\n          friendType: a.friend_type,\n          friendUpdatedOn: a.friend_updatedOn,\n          inviteCode: a.invite_code,\n          isShow: a.is_show,\n          level: a.level,\n          id: a.friend_id,\n          code: a.invite_code,\n          pinyin: a.friend_nick_name_pinyin,\n          note_pinyin: a.friend_friendNotes_pinyin,\n          targetType: '1',\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank,\n          groupType: null\n        };\n        return a;\n      });\n      // console.log(this.lists)\n    },\n    onFilter(keyword) {\n      if (keyword) {\n        keyword = keyword.toLowerCase();\n      } else {\n        keyword = '';\n      }\n      this.items = this.friendsList.filter(item => {\n        return (\n          item.friendNickName.toLowerCase().indexOf(keyword) > -1 ||\n          item.code.indexOf(keyword) > -1 ||\n          item.pinyin.indexOf(keyword) > -1 ||\n          item.note_pinyin.indexOf(keyword) > -1 ||\n          item.friendFriendNotes.toLowerCase().indexOf(keyword) > -1\n        );\n      });\n    },\n    removeSelectedItem(id) {\n      this.items.map(item => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.$forceUpdate();\n    },\n    checkItems(id) {\n      this.items.map(item => {\n        if (item.id == id) {\n          item.checked = true;\n        }\n      });\n      this.$forceUpdate();\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n.member-icon-class {\n  margin-right: 16px;\n}\n.select-info-class {\n  display: flex;\n  flex-direction: column;\n  margin-top: 8px;\n}\n.select-name {\n  display: flex;\n  align-items: center;\n  width: 180px;\n}\n.user-name {\n  font-size: 12px;\n  font-weight: 600;\n  color: #191f25;\n  max-width: 110px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: pre;\n}\n// .user-sign {\n//   word-break: break-all;\n//   font-size: 10px;\n\n//   font-weight: 500;\n//   color: #999;\n//   line-height: 20px;\n//   overflow: hidden;\n//   text-overflow: ellipsis;\n//   display: -webkit-box;\n//   -webkit-line-clamp: 1;\n//   -webkit-box-orient: vertical;\n//   -webkit-box-flex: 1;\n//   flex: 1;\n// }\n.chat-list {\n  position: relative;\n  li {\n    // padding: 3px 5px;\n    padding: 3px 5px 3px 5%;\n  }\n  li:hover {\n    background: #f4f4f4;\n  }\n  .invite-mem-avatar {\n    // margin-right: 5px;\n    overflow: hidden;\n    img {\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n    }\n  }\n  .no-results {\n    text-align: center;\n  }\n}\n\n.mar-t-5 {\n  margin-top: 5px;\n}\n.checkbox-mul&::v-deep .el-checkbox__inner {\n  border: 1px solid #aeaeae;\n}\n</style>\n",
    "cssJson": [
      {
        ".member-icon-class": {
          "margin-right": "16px"
        },
        ".select-info-class": {
          "display": "flex",
          "flex-direction": "column",
          "margin-top": "8px"
        },
        ".select-name": {
          "display": "flex",
          "align-items": "center",
          "width": "180px"
        },
        ".user-name": {
          "font-size": "12px",
          "font-weight": "600",
          "color": "#191f25",
          "max-width": "110px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "pre"
        },
        ".chat-list": {
          "position": "relative",
          "li": {
            "padding": "3px 5px 3px 5%"
          },
          "li:hover": {
            "background": "#f4f4f4"
          },
          ".invite-mem-avatar": {
            "overflow": "hidden",
            "img": {
              "width": "32px",
              "height": "32px",
              "border-radius": "50%"
            }
          },
          ".no-results": {
            "text-align": "center"
          }
        },
        ".mar-t-5": {
          "margin-top": "5px"
        },
        ".checkbox-mul&::v-deep .el-checkbox__inner": {
          "border": "1px solid #aeaeae"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/checkSelect.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"select-con\">\n    <div class=\"title\">{{ $t('chat_select_chat_0010', {length: mapSelect.length}) }}</div>\n    <ul>\n      <li v-for=\"item in mapSelect\" :key=\"item._id\">\n        <div class=\"icon-class\">\n          <MemberIcon\n            :image=\"item.friendHeadImg || item.sessionIcon\"\n            iconType=\"mini\"\n            :vipType=\"item.vipType\"\n            :userRank=\"item.userRank\"\n            v-if=\"item.groupType === null\"\n            style=\"display: inline-block; margin-right: 12px\"\n            :class=\"item.targetType == '1' ? 'desClass' : ''\"\n          />\n          <img :src=\"findImage(item.friendHeadImg || item.sessionIcon) | hand_group_avatar\" alt v-else-if=\"item.groupType === 1\" />\n          <DiscussionIcon class=\"select-discussion-icon\" :name=\"item.friendNickName || item.sessionName\" iconType=\"mini\" v-else />\n        </div>\n        <div class=\"select-info-class\">\n          <span class=\"select-name\">\n            <span class=\"namebox\">{{ item.friendFriendNotes || item.friendNickName || item.sessionName }}</span>\n            <LevelIcon\n              :inviteCode=\"item.code\"\n              :userRank=\"item.userRank\"\n              iconType=\"small\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :listFlag=\"false\"\n              v-if=\"item.groupType === null\"\n              style=\"padding-left: 2px\"\n            />\n          </span>\n          <span style=\"margin-top:5px;\" class=\"user-sign\" v-if=\"item.groupType != 0\">\n            <LuckIdIcon\n              v-if=\"item.groupType === null\"\n              :listFlag=\"false\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :inviteCode=\"item.code\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n            />\n          </span>\n          <span v-if=\"item.targetType == 2 && item.groupType == 1\" class=\"grouIdstyle\">ID:{{ item.code }}</span>\n        </div>\n\n        <i @click=\"removeSelect(item.id)\" class=\"el-icon-error\" style=\"cursor: pointer\"></i>\n      </li>\n    </ul>\n    <div class=\"flex btn-wrap\" v-show=\"mapSelect.length > 0\">\n      <div class=\"flex-sub\">\n        <button class=\"submit-btn\" type=\"info\" @click=\"cancelDialogHand\">\n          {{ $t('Universal_0063') }}\n        </button>\n      </div>\n      <div class=\"flex-sub\">\n        <button class=\"submit-btn\" @click=\"confirmDialogHand\" :disabled=\"mapSelect.length == 0\">\n          {{ $t('Universal_0062') }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport bus from '@/utils/eventbus';\nimport fileOperational from '@/services/fileOperational';\nimport DiscussionIcon from '@/components/memberIcon/DiscussionIcon';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  props: {\n    SelectObj: Array\n  },\n  filters: {},\n\n  data() {\n    //这里存放数据\n    return {\n      mapSelect: this.SelectObj\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    //   mapSelect(){\n    //         let a =[]\n    //         this.SelectObj.forEach(v => {\n    //         if(v.checked){\n    //             a.push(v)\n    //         }\n    //         return a\n    //     });\n    //   }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    handCloseRealy() {\n      this.$emit('update:visible', false);\n    },\n    cancelDialogHand() {\n      this.$emit('cancelDialogHand', false);\n    },\n    confirmDialogHand() {\n      let arrList = [];\n      for (let item of this.mapSelect) {\n        arrList.push({\n          friendId: item.id,\n          targetType: item.targetType,\n          friendNickName: item.friendNickName\n        });\n      }\n      this.mapSelect = [];\n      if (arrList.length < 1) {\n        this.$message.warning(this.$t('chat_0086'));\n      } else {\n        bus.$emit('groupShareClose', false);\n        this.$emit('confirmDialogHand', arrList);\n      }\n      // this.$emit(\"confirmDialogHand\",false);\n    },\n    removeSelect(id) {\n      this.mapSelect = this.mapSelect.filter(item => item.id != id);\n      this.$emit('removeSelect', id);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    console.log(this.mapSelect);\n    let a = [];\n    this.mapSelect.forEach(v => {\n      if (v.checked) {\n        a.push(v);\n      }\n      // if(v.joinList.length>0&&v.manageList.length>0&&v.ownerList.length>0){\n\n      // }\n    });\n    this.mapSelect = a;\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {} //生命周期 - 销毁完成\n};\n</script>",
    "originData": "<template>\n  <div class=\"select-con\">\n    <div class=\"title\">{{ $t('chat_select_chat_0010', {length: mapSelect.length}) }}</div>\n    <ul>\n      <li v-for=\"item in mapSelect\" :key=\"item._id\">\n        <div class=\"icon-class\">\n          <MemberIcon\n            :image=\"item.friendHeadImg || item.sessionIcon\"\n            iconType=\"mini\"\n            :vipType=\"item.vipType\"\n            :userRank=\"item.userRank\"\n            v-if=\"item.groupType === null\"\n            style=\"display: inline-block; margin-right: 12px\"\n            :class=\"item.targetType == '1' ? 'desClass' : ''\"\n          />\n          <img :src=\"findImage(item.friendHeadImg || item.sessionIcon) | hand_group_avatar\" alt v-else-if=\"item.groupType === 1\" />\n          <DiscussionIcon class=\"select-discussion-icon\" :name=\"item.friendNickName || item.sessionName\" iconType=\"mini\" v-else />\n        </div>\n        <div class=\"select-info-class\">\n          <span class=\"select-name\">\n            <span class=\"namebox\">{{ item.friendFriendNotes || item.friendNickName || item.sessionName }}</span>\n            <LevelIcon\n              :inviteCode=\"item.code\"\n              :userRank=\"item.userRank\"\n              iconType=\"small\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :listFlag=\"false\"\n              v-if=\"item.groupType === null\"\n              style=\"padding-left: 2px\"\n            />\n          </span>\n          <span style=\"margin-top:5px;\" class=\"user-sign\" v-if=\"item.groupType != 0\">\n            <LuckIdIcon\n              v-if=\"item.groupType === null\"\n              :listFlag=\"false\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :inviteCode=\"item.code\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n            />\n          </span>\n          <span v-if=\"item.targetType == 2 && item.groupType == 1\" class=\"grouIdstyle\">ID:{{ item.code }}</span>\n        </div>\n\n        <i @click=\"removeSelect(item.id)\" class=\"el-icon-error\" style=\"cursor: pointer\"></i>\n      </li>\n    </ul>\n    <div class=\"flex btn-wrap\" v-show=\"mapSelect.length > 0\">\n      <div class=\"flex-sub\">\n        <button class=\"submit-btn\" type=\"info\" @click=\"cancelDialogHand\">\n          {{ $t('Universal_0063') }}\n        </button>\n      </div>\n      <div class=\"flex-sub\">\n        <button class=\"submit-btn\" @click=\"confirmDialogHand\" :disabled=\"mapSelect.length == 0\">\n          {{ $t('Universal_0062') }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport bus from '@/utils/eventbus';\nimport fileOperational from '@/services/fileOperational';\nimport DiscussionIcon from '@/components/memberIcon/DiscussionIcon';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  props: {\n    SelectObj: Array\n  },\n  filters: {},\n\n  data() {\n    //这里存放数据\n    return {\n      mapSelect: this.SelectObj\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    //   mapSelect(){\n    //         let a =[]\n    //         this.SelectObj.forEach(v => {\n    //         if(v.checked){\n    //             a.push(v)\n    //         }\n    //         return a\n    //     });\n    //   }\n  },\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    handCloseRealy() {\n      this.$emit('update:visible', false);\n    },\n    cancelDialogHand() {\n      this.$emit('cancelDialogHand', false);\n    },\n    confirmDialogHand() {\n      let arrList = [];\n      for (let item of this.mapSelect) {\n        arrList.push({\n          friendId: item.id,\n          targetType: item.targetType,\n          friendNickName: item.friendNickName\n        });\n      }\n      this.mapSelect = [];\n      if (arrList.length < 1) {\n        this.$message.warning(this.$t('chat_0086'));\n      } else {\n        bus.$emit('groupShareClose', false);\n        this.$emit('confirmDialogHand', arrList);\n      }\n      // this.$emit(\"confirmDialogHand\",false);\n    },\n    removeSelect(id) {\n      this.mapSelect = this.mapSelect.filter(item => item.id != id);\n      this.$emit('removeSelect', id);\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    console.log(this.mapSelect);\n    let a = [];\n    this.mapSelect.forEach(v => {\n      if (v.checked) {\n        a.push(v);\n      }\n      // if(v.joinList.length>0&&v.manageList.length>0&&v.ownerList.length>0){\n\n      // }\n    });\n    this.mapSelect = a;\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {} //生命周期 - 销毁完成\n};\n</script>\n<style lang=\"less\" scoped>\n.grouIdstyle {\n  font-size: 10px;\n  font-weight: 400;\n  color: #999;\n}\n.select-info-class {\n  display: flex;\n  flex-direction: column;\n  margin-top: 9px;\n}\n.desClass {\n  margin-right: 16px !important;\n}\n.user-sign {\n  word-break: break-all;\n  font-size: 10px;\n  font-weight: 500;\n  color: #999;\n  line-height: 20px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  -webkit-box-flex: 1;\n  flex: 1;\n}\n.relay-wrap {\n  width: 50%;\n}\n.select-discussion-icon {\n  margin-right: 12px;\n  display: inline-block;\n}\n.icon-class {\n  display: flex;\n  justify-content: center;\n  .user-high-level-border,\n  .user-low-level-border {\n    margin-left: -3px;\n  }\n}\n.select-con {\n  padding-left: 10px;\n  height: 100%;\n  position: relative;\n\n  img {\n    border-radius: 50%;\n    width: 38px;\n    height: 38px;\n    vertical-align: middle;\n    margin-right: 12px;\n  }\n\n  ul {\n    height: 310px;\n    overflow-y: auto;\n  }\n\n  li {\n    font-size: 12px;\n    font-weight: 600;\n    padding: 3px 5px;\n    color: rgba(51, 51, 51, 1);\n    display: flex;\n    align-items: center;\n    i {\n      font-size: 16px;\n      color: #d7d7d7;\n    }\n    i:hover{\n      color: #aeaeae;\n    }\n  }\n  // li:hover {\n  //   background: #f4f4f4;\n  // }\n  .submit-btn {\n    height: 30px;\n    background: #2f54eb;\n    box-shadow: 0px 0px 1px 0px rgba(153, 153, 153, 0.3);\n    border-radius: 4px;\n    color: #fff;\n    font-size: 13px;\n    border: none;\n    user-select: none;\n    width: 90px;\n    outline: none;\n    cursor: pointer;\n  }\n\n  .btn-wrap {\n    position: absolute;\n    right: 20px;\n\n    .flex-sub:nth-child(1) {\n      .submit-btn {\n        background: #d8d8d8;\n        color: #333;\n      }\n    }\n\n    .flex-sub {\n      margin-left: 20px;\n    }\n  }\n\n  .title {\n    display: block;\n    margin-left: 155px;\n    color: #bbb;\n    font-size: 12px;\n    margin-bottom: 15px;\n    font-weight: 400;\n  }\n\n  .select-name {\n    display: flex;\n    align-items: center;\n    width: 180px;\n    .namebox {\n      display: inline-block;\n      max-width: 110px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: pre;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".grouIdstyle": {
          "font-size": "10px",
          "font-weight": "400",
          "color": "#999"
        },
        ".select-info-class": {
          "display": "flex",
          "flex-direction": "column",
          "margin-top": "9px"
        },
        ".desClass": {
          "margin-right": "16px !important"
        },
        ".user-sign": {
          "word-break": "break-all",
          "font-size": "10px",
          "font-weight": "500",
          "color": "#999",
          "line-height": "20px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "display": "-webkit-box",
          "-webkit-line-clamp": "1",
          "-webkit-box-orient": "vertical",
          "-webkit-box-flex": "1",
          "flex": "1"
        },
        ".relay-wrap": {
          "width": "50%"
        },
        ".select-discussion-icon": {
          "margin-right": "12px",
          "display": "inline-block"
        },
        ".icon-class": {
          "display": "flex",
          "justify-content": "center",
          ".user-high-level-border,  .user-low-level-border": {
            "margin-left": "-3px"
          }
        },
        ".select-con": {
          "padding-left": "10px",
          "height": "100%",
          "position": "relative",
          "img": {
            "border-radius": "50%",
            "width": "38px",
            "height": "38px",
            "vertical-align": "middle",
            "margin-right": "12px"
          },
          "ul": {
            "height": "310px",
            "overflow-y": "auto"
          },
          "li": {
            "font-size": "12px",
            "font-weight": "600",
            "padding": "3px 5px",
            "color": "rgba(51, 51, 51, 1)",
            "display": "flex",
            "align-items": "center",
            "i": {
              "font-size": "16px",
              "color": "#d7d7d7"
            },
            "i:hover": {
              "color": "#aeaeae"
            }
          },
          ".submit-btn": {
            "height": "30px",
            "background": "#2f54eb",
            "box-shadow": "0px 0px 1px 0px rgba(153, 153, 153, 0.3)",
            "border-radius": "4px",
            "color": "#fff",
            "font-size": "13px",
            "border": "none",
            "user-select": "none",
            "width": "90px",
            "outline": "none",
            "cursor": "pointer"
          },
          ".btn-wrap": {
            "position": "absolute",
            "right": "20px",
            ".flex-sub:nth-child(1)": {
              ".submit-btn": {
                "background": "#d8d8d8",
                "color": "#333"
              }
            },
            ".flex-sub": {
              "margin-left": "20px"
            }
          },
          ".title": {
            "display": "block",
            "margin-left": "155px",
            "color": "#bbb",
            "font-size": "12px",
            "margin-bottom": "15px",
            "font-weight": "400"
          },
          ".select-name": {
            "display": "flex",
            "align-items": "center",
            "width": "180px",
            ".namebox": {
              "display": "inline-block",
              "max-width": "110px",
              "overflow": "hidden",
              "text-overflow": "ellipsis",
              "white-space": "pre"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/DiscussionInfo.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!--\n* 消息转发-讨论组列表\n-->\n<template>\n  <div class=\"chat-list\">\n    <ul v-if=\"items.length > 0\">\n      <li \n        v-for=\"(item, index) in items\" \n        :key=\"item._id\"\n        class=\"invite-mem-list-item flex align-center\"\n        @click.stop.prevent=\"addInviteHand(item)\"\n      >\n        <div class=\"invite-mem-avatar\">\n          <DiscussionIcon iconType=\"mini\" :name=\"item.friendNickName\" />\n        </div>\n        <div class=\"user-words flex flex-direction\">\n          <div class=\"flex justify-between align-center\">\n            <span class=\"user-name\">{{item.friendNickName }}</span>\n            <el-checkbox class=\"checkbox-mul\" v-model=\"item.checked\" @change=\"addInviteHand(item, index)\" \n            :checked=\"item.checked\" \n            :disabled='item.disabled'>\n            </el-checkbox>\n          </div>\n        </div>\n      </li>\n    </ul>\n      <div v-if=\"items.length == 0 && !loading\" class=\"no-results\">\n      <img src=\"../../assets/images/web.png\" class=\"img_search\" />\n      <p>{{ $t('Universal_0173') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\n// import { viewLimitGroupByUserId } from \"../chat/server\";\nexport default {\n  name: 'DiscussionInfo',\n  components: {\n    DiscussionIcon\n  },\n  data() {\n    return {\n      items: []\n    };\n  },\n  props:{\n    limitGroupIdArr:{\n      type:Array,\n      default: () => {\n        return [];\n      },\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  methods: {\n    async init(ids, keyword) {\n      await this.getAllGroupListHand(ids, keyword);\n      // viewLimitGroupByUserId({\n      //   userId: UserInfoUtils.getCurrentUserId()\n      // }).then(async (res) => {\n      //   if(res.code === \"200\"){\n      this.items.map((item) => {\n        // if(res.data.limitGroupId.length !== 0&&res.data.limitGroupId.indexOf(item.id) > -1){\n        if(this.limitGroupIdArr.includes(item.id)){\n          item.disabled = true;\n        } else {\n          item.disabled = false;\n        }\n      });\n      this.$forceUpdate();\n      //   }\n      // });\n      this.$emit('refreshLoading')\n    },\n    addInviteHand(item) {\n      //判断当群被禁止社交时不允许邀请入群\n      if(item.disabled) return;\n      this.$forceUpdate();\n      item.checked = item.checked ? false : true;\n      this.$emit('GetSelectObj', item);\n    },\n    collectSelectedGroups(selectedGroups, list) {\n      for (let item of list) {\n        if (item.checked) {\n          selectedGroups.push({\n            checked: item.checked,\n            friendHeadImg: item.groupAvatar,\n            friendNickName: item.groupName,\n            id: item.groupId,\n            targetType: '2',\n            groupType: 0\n          });\n        }\n      }\n    },\n    async getAllGroupListHand(ids, keyword) {\n      let userId = UserInfoUtils.getCurrentUserId();\n      let res = await window.vm\n        .$knex('t_groups')\n        .innerJoin('t_groups_member', function() {\n          this.on('t_groups_member.group_id', '=', 't_groups.group_id');\n        })\n        .select('t_groups.group_name as friendNickName')\n        .select('t_groups.group_avatar as friendHeadImg')\n        .select('t_groups.group_id as id')\n        .select('t_groups.group_name_pinyin as pinyin')\n        .select('t_groups.group_code as code')\n        .select('t_groups.create_time as createdOn')\n        .select('t_groups.group_type as groupType')\n        .whereRaw(\"t_groups.is_show='true'\")\n        .whereRaw(\"t_groups.group_type='0'\")\n        .count('t_groups_member.id', { as: 'people' })\n        .whereRaw(\n          \"t_groups_member.group_id in (SELECT m1.group_id from t_groups_member m1 where m1.id='\" +\n            userId +\n            \"') and t_groups_member.is_show='true'\"\n        )\n        .groupBy('t_groups.group_id')\n        .havingRaw('count(t_groups_member.id)>0')\n        .orderBy('t_groups.group_name');\n      this.items = res.sort(this.compare());\n      this.initCheckedItems(ids);\n      if (keyword) {\n        this.onFilter(keyword);\n      }\n    },\n    compare() {\n      return (obj1, obj2) => {\n        let value1 = Number(obj1['people']);\n        let value2 = Number(obj2['people']);\n        if (value1 === value2) {\n          return new Date(obj2['createdOn']).getTime() - new Date(obj1['createdOn']).getTime();\n        }\n        return value2 - value1;\n      };\n    },\n    onFilter(keyword) {\n      if (keyword) {\n        keyword = keyword.toLowerCase();\n      } else {\n        keyword = '';\n      }\n      this.items = this.items.filter(item => {\n        return (\n          item.friendNickName.toLowerCase().indexOf(keyword) > -1 || item.code.indexOf(keyword) > -1 || item.pinyin.indexOf(keyword) > -1\n        );\n      });\n    },\n    initCheckedItems(ids) {\n      this.items.map(item => {\n        if (ids.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n        item.targetType = 2;\n        item.groupType = 0;\n      });\n    },\n    removeSelectedItem(id) {\n      this.items.map(item => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.$forceUpdate();\n    },\n    checkItems(id) {\n      this.items.map(item => {\n        if (item.id == id) {\n          item.checked = true;\n        }\n      });\n      this.$forceUpdate();\n    }\n  }\n};\n</script>",
    "originData": "<!--\n* 消息转发-讨论组列表\n-->\n<template>\n  <div class=\"chat-list\">\n    <ul v-if=\"items.length > 0\">\n      <li \n        v-for=\"(item, index) in items\" \n        :key=\"item._id\"\n        class=\"invite-mem-list-item flex align-center\"\n        @click.stop.prevent=\"addInviteHand(item)\"\n      >\n        <div class=\"invite-mem-avatar\">\n          <DiscussionIcon iconType=\"mini\" :name=\"item.friendNickName\" />\n        </div>\n        <div class=\"user-words flex flex-direction\">\n          <div class=\"flex justify-between align-center\">\n            <span class=\"user-name\">{{item.friendNickName }}</span>\n            <el-checkbox class=\"checkbox-mul\" v-model=\"item.checked\" @change=\"addInviteHand(item, index)\" \n            :checked=\"item.checked\" \n            :disabled='item.disabled'>\n            </el-checkbox>\n          </div>\n        </div>\n      </li>\n    </ul>\n      <div v-if=\"items.length == 0 && !loading\" class=\"no-results\">\n      <img src=\"../../assets/images/web.png\" class=\"img_search\" />\n      <p>{{ $t('Universal_0173') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\n// import { viewLimitGroupByUserId } from \"../chat/server\";\nexport default {\n  name: 'DiscussionInfo',\n  components: {\n    DiscussionIcon\n  },\n  data() {\n    return {\n      items: []\n    };\n  },\n  props:{\n    limitGroupIdArr:{\n      type:Array,\n      default: () => {\n        return [];\n      },\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  methods: {\n    async init(ids, keyword) {\n      await this.getAllGroupListHand(ids, keyword);\n      // viewLimitGroupByUserId({\n      //   userId: UserInfoUtils.getCurrentUserId()\n      // }).then(async (res) => {\n      //   if(res.code === \"200\"){\n      this.items.map((item) => {\n        // if(res.data.limitGroupId.length !== 0&&res.data.limitGroupId.indexOf(item.id) > -1){\n        if(this.limitGroupIdArr.includes(item.id)){\n          item.disabled = true;\n        } else {\n          item.disabled = false;\n        }\n      });\n      this.$forceUpdate();\n      //   }\n      // });\n      this.$emit('refreshLoading')\n    },\n    addInviteHand(item) {\n      //判断当群被禁止社交时不允许邀请入群\n      if(item.disabled) return;\n      this.$forceUpdate();\n      item.checked = item.checked ? false : true;\n      this.$emit('GetSelectObj', item);\n    },\n    collectSelectedGroups(selectedGroups, list) {\n      for (let item of list) {\n        if (item.checked) {\n          selectedGroups.push({\n            checked: item.checked,\n            friendHeadImg: item.groupAvatar,\n            friendNickName: item.groupName,\n            id: item.groupId,\n            targetType: '2',\n            groupType: 0\n          });\n        }\n      }\n    },\n    async getAllGroupListHand(ids, keyword) {\n      let userId = UserInfoUtils.getCurrentUserId();\n      let res = await window.vm\n        .$knex('t_groups')\n        .innerJoin('t_groups_member', function() {\n          this.on('t_groups_member.group_id', '=', 't_groups.group_id');\n        })\n        .select('t_groups.group_name as friendNickName')\n        .select('t_groups.group_avatar as friendHeadImg')\n        .select('t_groups.group_id as id')\n        .select('t_groups.group_name_pinyin as pinyin')\n        .select('t_groups.group_code as code')\n        .select('t_groups.create_time as createdOn')\n        .select('t_groups.group_type as groupType')\n        .whereRaw(\"t_groups.is_show='true'\")\n        .whereRaw(\"t_groups.group_type='0'\")\n        .count('t_groups_member.id', { as: 'people' })\n        .whereRaw(\n          \"t_groups_member.group_id in (SELECT m1.group_id from t_groups_member m1 where m1.id='\" +\n            userId +\n            \"') and t_groups_member.is_show='true'\"\n        )\n        .groupBy('t_groups.group_id')\n        .havingRaw('count(t_groups_member.id)>0')\n        .orderBy('t_groups.group_name');\n      this.items = res.sort(this.compare());\n      this.initCheckedItems(ids);\n      if (keyword) {\n        this.onFilter(keyword);\n      }\n    },\n    compare() {\n      return (obj1, obj2) => {\n        let value1 = Number(obj1['people']);\n        let value2 = Number(obj2['people']);\n        if (value1 === value2) {\n          return new Date(obj2['createdOn']).getTime() - new Date(obj1['createdOn']).getTime();\n        }\n        return value2 - value1;\n      };\n    },\n    onFilter(keyword) {\n      if (keyword) {\n        keyword = keyword.toLowerCase();\n      } else {\n        keyword = '';\n      }\n      this.items = this.items.filter(item => {\n        return (\n          item.friendNickName.toLowerCase().indexOf(keyword) > -1 || item.code.indexOf(keyword) > -1 || item.pinyin.indexOf(keyword) > -1\n        );\n      });\n    },\n    initCheckedItems(ids) {\n      this.items.map(item => {\n        if (ids.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n        item.targetType = 2;\n        item.groupType = 0;\n      });\n    },\n    removeSelectedItem(id) {\n      this.items.map(item => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.$forceUpdate();\n    },\n    checkItems(id) {\n      this.items.map(item => {\n        if (item.id == id) {\n          item.checked = true;\n        }\n      });\n      this.$forceUpdate();\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n\n\n.user-words {\n  width: 180px;\n  flex: auto;\n  padding: 0 10px 0 0;\n  margin-left: 10px;\n}\n.user-name {\n  font-size: 12px;\n  font-weight: 600;\n  color: #191f25;\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  flex: 1;\n  white-space: pre;\n}\n.chat-list {\n  position: relative;\n\n  li {\n    // padding: 5px;\n    padding: 5px 5px 5px 5%;\n  }\n  li:hover {\n    background: #f4f4f4;\n  }\n  .invite-mem-avatar {\n    // margin-right: 5px;\n    overflow: hidden;\n    img {\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n    }\n  }\n  .no-results {\n    text-align: center;\n  }\n}\n.checkbox-mul&::v-deep .el-checkbox__inner {\n  border: 1px solid #aeaeae;\n}\n</style>\n",
    "cssJson": [
      {
        ".user-words": {
          "width": "180px",
          "flex": "auto",
          "padding": "0 10px 0 0",
          "margin-left": "10px"
        },
        ".user-name": {
          "font-size": "12px",
          "font-weight": "600",
          "color": "#191f25",
          "display": "-webkit-box",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "-webkit-line-clamp": "1",
          "-webkit-box-orient": "vertical",
          "flex": "1",
          "white-space": "pre"
        },
        ".chat-list": {
          "position": "relative",
          "li": {
            "padding": "5px 5px 5px 5%"
          },
          "li:hover": {
            "background": "#f4f4f4"
          },
          ".invite-mem-avatar": {
            "overflow": "hidden",
            "img": {
              "width": "32px",
              "height": "32px",
              "border-radius": "50%"
            }
          },
          ".no-results": {
            "text-align": "center"
          }
        },
        ".checkbox-mul&::v-deep .el-checkbox__inner": {
          "border": "1px solid #aeaeae"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/components/common/MessageFormatOnline.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div @contextmenu.prevent=\"rightClick($event)\">\n    <div class=\"words\"  @mousedown=\"handleUserSelectText\" v-if=\"messageItem.msgType == '1' || messageItem.msgType == '25'\" >\n      <MessageFormatText v-bind:text=\"messageItem.text || messageItem.msgBody.text\" :item=\"item\" />\n    </div>\n\n    <div\n        v-else-if=\"messageItem.msgType == '6'\"\n        class=\"fileBox\"\n        v-loading=\"downloadLoading\"\n        element-loading-spinner=\"el-icon-loading\"\n    >\n      <div class=\"flex align-center\" @click=\"onOpenFile(messageItem)\">\n        <div class=\"flex-sub flex-direction\" style=\"width: 80%\">\n          <!-- <p class=\"text-cut\">{{item.msgBody && (item.msgBody.fileName || item.msgBody.fname)}}</p> -->\n          <!-- <p>{{item.msgBody.fsize | formatFileSize}}    </p> -->\n          <span class=\"file-title\">{{ messageItem.msgBody && (messageItem.msgBody.fileName || messageItem.msgBody.fname) }}</span>\n          <p class=\"file-size\">\n            {{ messageItem.msgBody.fsize | formatFileSize }}\n          </p>\n        </div>\n        <img :src=\"require(`../../../../assets/images/${getFileType(messageItem.msgBody.format)}.png`)\" width=\"40\" height=\"40\" alt />\n      </div>\n      <div class=\"load-border text-right\">\n        <span v-if=\"!messageItem.msgBody.downloadFinished && messageItem.msgBody.downloadPercent\">\n          {{ $t('personal_0026') }}{{ messageItem.msgBody.downloadPercent }}\n        </span>\n        <span\n            v-if=\"!messageItem.msgBody.downloadPercent && isShowRight && messageItem.sendStatus != 1 && messageItem.sendStatus != -1\"\n            ref=\"downloadbutton\"\n            @click=\"downFile(messageItem.msgBody)\"\n        >{{ $t('Universal_0358') }}</span\n        >\n        <span v-if=\"messageItem.msgBody.downloadFinished && isShowRight\" @click=\"openFile(messageItem)\">\n          {{ $t('Universal_0356') }}\n        </span>\n        <span v-if=\"messageItem.msgBody.downloadFinished && isShowRight\" @click=\"saveFileAs(messageItem.msgBody)\">\n          {{ $t('Universal_0357') }}\n        </span>\n        <!--        <span v-if=\"isShowRight\" @click=\"delFileListHand(item, 'list')\">删除</span>-->\n      </div>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '2'\" class=\"imgMsg\" >\n       <el-progress type=\"circle\"\n              style=\"left:50%;transform:translate(-50%,-50%)\"\n              :percentage=\"downloadTaskInfoPer\"\n              class=\"downloadProcess\"\n              :show-text=\"false\"\n              :width=\"40\"\n              v-if=\"downloadTaskInfoPer<100\"\n              color=\"#2f54eb\"\n              :stroke-width=\"3\"\n              :key=\"messageItem['reqId']\"\n      ></el-progress>\n      <img \n           :src=\"findImage(messageItem)\"\n           alt\n           @click=\"viewerShowChild(messageItem)\"\n           @load=\"loadImg\"\n           :class=\"rate\"\n           @error=\"handlerImgErr\"\n           :style=\"viewpicStyle\"\n           :width=\"messageItem.msgBody.width\"\n           :height=\"messageItem.msgBody.height\"\n      />\n    </div>\n    <div v-else-if=\"messageItem.msgType == '10'\" class=\"videoMsg\" @click=\"viewerShowChild(messageItem)\">\n       <!-- v-if=\"messageItem.msgBody.firstFrame.height === 0 || messageItem.msgBody.firstFrame.width === 0\" -->\n      <video\n          v-if=\"!messageItem.msgBody.fileNo && !messageItem.msgBody.downloadFinished && !messageItem.msgBody.firstFrame.mediaId\"\n          :src=\"messageItem.msgBody.fileId\"\n          class=\"videoShow\"\n          :height=\"messageItem.msgBody.firstFrame.height\"\n          :width=\"messageItem.msgBody.firstFrame.width\"\n      ></video>\n      <img\n          v-else\n          :src=\"messageItem.msgBody.firstFrame.mediaId\"\n          alt=\"\"\n          class=\"videoShow\"\n          :height=\"messageItem.msgBody.firstFrame.height\"\n          :width=\"messageItem.msgBody.firstFrame.width\"\n      />\n      <i class=\"el-icon-video-play videoStart\"\n         v-show=\"(messageItem.msgBody.downloadFinished||videoDownloadPercent[messageItem.msgId]===100||\n         videoDownloadPercent[messageItem.msgId]===undefined)&&\n         messageItem.msgBody.downloadPath&&\n         !fileBeCleared[messageItem.msgId]\" />\n      <span class=\"progress-mask\"\n            v-show=\"messageItem.msgBody.downloadLoading&&\n            videoDownloadPercent[messageItem.msgId]!==100&&videoDownloadPercent[messageItem.msgId]!==undefined&&\n            !fileBeCleared[messageItem.msgId]\"></span>\n      <el-progress type=\"circle\"\n                   ref=\"progress\"\n                   :percentage=\"videoDownloadPercent[messageItem.msgId]||0\"\n                   class=\"downloadProcess\"\n                   :show-text=\"false\"\n                   :width=\"40\"\n                   v-show=\"videoDownloadPercent[messageItem.msgId]<100&&!fileBeCleared[messageItem.msgId]\"\n                   color=\"#2f54eb\"\n                   :stroke-width=\"3\"\n                   :key=\"messageItem.msgId\"\n      ></el-progress>\n      <i class=\"el-icon-warning videoStart\"\n         v-show=\"fileBeCleared[messageItem.msgId]||videoNotInCurrentPC[messageItem.msgId]\"></i>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '9'\" class=\"audio-wrap\" @click=\"handArm(messageItem.msgBody.fileId)\">\n      <span>\n        <img :src=\"soundUrl\" alt />\n        {{ messageItem.msgBody.dur }}\"\n      </span>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '15'\" class=\"carte\">\n      <div class=\"cardinfo\" v-if=\"messageItem.msgBody.type == '2'\">\n        <img :src=\"messageItem.msgBody.msgUrl\" />\n        <span class=\"cardName\" style=\"margin-left:5px;\">\n          <label class=\"\" style=\"color: #333\">{{ messageItem.msgBody.name }}</label>\n          <br />\n          <label style=\"font-size:10px;color:#999\">ID:{{ messageItem.msgBody.code }}</label>\n        </span>\n      </div>\n      <div class=\"cardinfo\" v-else>\n        <MemberIcon\n            :vipType=\"Number(messageItem.msgBody.vipType)\"\n            :image=\"messageItem.msgBody.msgUrl\"\n            iconType=\"mini\"\n            :userRank=\"+messageItem.msgBody.userRank\"\n        />\n        <div class=\"topitem\">\n          <span style=\"display:flex;align-items:center;margin-bottom:5px;\">\n            <label class=\"cardName\" style=\"color: #333\">{{ messageItem.msgBody.name }}</label>\n            <LevelIcon\n                :inviteCode=\"messageItem.msgBody.code\"\n                :userRank=\"+messageItem.msgBody.userRank\"\n                iconType=\"small\"\n                :vipType=\"+messageItem.msgBody.vipType\"\n                :inviteCodeType=\"+messageItem.msgBody.inviteCodeType\"\n                :listFlag=\"true\"\n                style=\"padding-left: 2px;\"\n            />\n          </span>\n          <!-- {{ item.msgBody.code }} -->\n          <LuckIdIcon\n              :inviteCode=\"messageItem.msgBody.code\"\n              :userRank=\"+messageItem.msgBody.userRank\"\n              iconType=\"medium\"\n              :vipType=\"+messageItem.msgBody.vipType\"\n              :inviteCodeType=\"+messageItem.msgBody.inviteCodeType\"\n              :listFlag=\"false\"\n          />\n        </div>\n      </div>\n      <p v-if=\"messageItem.msgBody.type == 1\">{{ $t('chat_0021') }}</p>\n      <p v-else>{{ $t('chat_0023') }}</p>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '40'\" class=\"mergeTransferClass\" @click=\"showMergeTransferMessageDialog\">\n      <div class=\"flex flex-direction\">\n        <!--        <span class=\"title\">{{ messageItem.msgBody.title || '多人' }}的聊天记录</span>-->\n        <span class=\"title\" v-if=\"messageItem.msgBody.title\">{{ $t('chat_0045',{value: messageItem.msgBody.title}) }}</span>\n        <span class=\"title\" v-else>{{ $t('chat_0043') }}</span>\n        <span class=\"content\">\n          <ul>\n            <li\n                v-for=\"(message, index) in messageItem.msgBody.msgs\"\n                v-if=\"index < 4\"\n                :key=\"index\"\n                class=\"flex  align-center justify-between\"\n            >\n              <span v-if=\"message.msgType == '1' || message.msgType == '25'\" class=\"user-sign\">\n                <span>{{ `${message.fromName || ''}: ` }}</span>\n                <MessageFormatText linkFlag v-bind:text=\"message.msgBody.text\" />\n              </span>\n              <span class=\"text\" v-else>{{ messageDetail(message) }}</span>\n            </li>\n          </ul>\n        </span>\n        <el-divider class=\"mergeDivider\"></el-divider>\n        <span class=\"blue\">{{ $t('chat_0042') }}</span>\n      </div>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '11'\" @click=\"resendCallAudio\" class=\"audio-call-class\">\n      <div v-if=\"messageItem.fromType == 700\"><img :src=\"telephoneUrl\" class=\"telephone-class\" alt />\n        {{ $t('Universal_0088') }}\n      </div>\n      <div v-if=\"messageItem.fromType == 703\"><img :src=\"telephoneUrl\" class=\"telephone-class\" alt />\n        {{ $t('chat_voice_0040') }}\n      </div>\n      <div v-if=\"messageItem.fromType == 704\">\n        <img :src=\"telephoneUrl\" class=\"telephone-class\" alt />{{ $t('chat_voice_0047') }}\n        {{ chatTime }}\n      </div>\n      <div v-if=\"messageItem.fromType == 705\">\n        <img :src=\"telephoneUrl\" class=\"telephone-class\" alt />\n        <span v-if=\"isCaller\">{{ $t('chat_voice_0035') }}</span>\n        <span v-else>{{ $t('chat_voice_0036') }}</span>\n      </div>\n      <div v-if=\"messageItem.fromType == 706\"><img :src=\"telephoneUrl\" class=\"telephone-class\" alt />\n        {{ $t('chat_voice_0041') }}\n      </div>\n      <div v-if=\"messageItem.fromType == 707\"><img :src=\"telephoneUrl\" class=\"telephone-class\" alt />\n        {{ $t('chat_voice_0037') }}\n      </div>\n      <div v-if=\"messageItem.fromType == 712\">\n        <img :src=\"telephoneUrl\" class=\"telephone-class\" alt />{{ $t('chat_voice_0043') }}\n        {{ chatTime }}\n      </div>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '56'\" class=\"acitivity\" @click=\"goActivityPage(messageItem)\">\n      <img :src=\"messageItem.msgBody.imgUrl\" alt=\"\">\n      <p class=\"title\">{{messageItem.msgBody.title}}</p>\n      <!-- <p class=\"content\">{{messageItem.msgBody.text}}</p> -->\n      <div class=\"bottom\">\n        <img src=\"../../../../assets/images/didi_activity_icon.png\" alt=\"\"><p>{{$t('chat_0125')}}</p>\n      </div>\n    </div>\n    <!-- <div v-else>不支持的消息， 请到APP查看</div> -->\n    <MergeTransferMessage :title=\"messageItem.msgBody.title\" :msgItem=\"messageItem\" ref=\"mergeTransferMessageDialog\" />\n  </div>\n</template>\n\n<script>\nimport { remote, shell as eShell } from 'electron';\nimport { checkIsExists, checkVideoIsExists, mkdir } from '@/utils/file';\nimport MessageFormatText from '@/view/chat/components/common/MessageFormatText';\nimport MergeTransferMessage from '@/view/chat/components/common/MergeTransferMessage';\nimport fileOperational from '@/services/fileOperational';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport request from 'request';\nimport fs from 'fs';\nimport path from 'path';\nimport store from '@/store';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nimport emojiList from '@/utils/emoji.js';\nimport { mapActions, mapGetters } from \"vuex\";\nimport { otherVideoTypeArr } from '@/utils/const';\nimport {checkFileIsExists, checkUrl } from \"@/utils/file\";\nimport { parseUniqueCode } from '@/utils/const';\nimport { goOfficialPage } from '@/utils';\nlet configDir = path.join(remote.app.getPath('appData'), `${process.env.VUE_APP_ID}`);\nlet baseDir = path.join(configDir, 'files');\nconst { FileUpload } = require('@/utils/fileUpload');\nimport { videoCode} from \"@/utils/const\";\n\nexport default {\n  name: 'MessageFormatOnline',\n  inject: [\"scrollToBottom\"],\n  components: {\n    MessageFormatText,\n    MergeTransferMessage,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  computed: {\n    ...mapGetters(['videoDownloadPercent', 'fileBeCleared', 'videoNotInCurrentPC','chatList','gettersDownloadTaskInfoByID']),\n    getCurDownloadTaskInfo() {\n      return this.gettersDownloadTaskInfoByID(this.item?.msgBody?.mediaId)||100;\n    },\n    messageDetail() {\n      return message => {\n        let msgTypeObject = {\n          6: this.$t('chat_0017'),\n          2: this.$t('chat_0013'),\n          10: this.$t('chat_0015'),\n          15: this.$t('chat_0024'),\n          40: '['+this.$t('chat_0042')+']',\n          14: '['+this.$t('opinions_0006')+']',\n          44: '[Dapp]',\n          56: this.$t('Universal_0454'),\n          61: this.$t('chat_0127'),\n        };\n        let result = '';\n        if (message.msgType != 15) {\n          result = `${message.fromName || ''}: ${msgTypeObject[message.msgType]}`;\n        } else {\n          if (message.msgBody.type == '1') {\n            result = `${message.fromName || ''}: [${this.$t('chat_0021')}]`;\n          } else {\n            result = `${message.fromName || ''}: [${this.$t('chat_0023')}]`;\n          }\n        }\n        return result;\n      };\n    },\n    viewpicStyle() {\n      if (this.rate === 'Hcale3Midwidth') {\n        return {\n          width: `${this.item.msgBody.width}px`,\n          height: `${(this.item.msgBody.width * 1) / 3}px`\n        };\n      }\n      if (this.rate === 'Wcale3MidHight') {\n        return {\n          width: `${(this.item.msgBody.height * 1) / 3}px`,\n          height: this.item.msgBody.height\n        };\n      }\n      this.$nextTick(() => {\n        if(document.getElementById(this.messageItem.reqId) && this.messageItem.msgBody.format == 'gif'){\n          console.log(this.$refs[this.messageItem.reqId].naturalWidth,'wswww',\n            document.getElementById(this.messageItem.reqId).naturalHeight)\n          return{\n            width: `${this.$refs[this.messageItem.reqId].naturalWidth}px`,\n            height: `${this.$refs[this.messageItem.reqId].naturalHeight}px`\n          }\n        }\n      })\n      return{}\n    },\n    downloadFileInfo() {\n      return store.state.common.downloadFile;\n    },\n    loadDownloadPercent() {\n      let downloadFile = this.$store.state.common.downloadFile;\n      if (downloadFile && downloadFile[this.messageItem.msgBody.reqId]) {\n        return downloadFile[this.messageItem.msgBody.reqId].downloadPercent;\n      } else {\n        return '';\n      }\n    },\n    loadDownloadPath() {\n      let downloadFile = this.$store.state.common.downloadFile;\n      if (downloadFile && downloadFile[this.messageItem.msgBody.reqId]) {\n        return downloadFile[this.messageItem.msgBody.reqId].downloadPath;\n      } else {\n        return '';\n      }\n    },\n    chatTime() {\n      if (!this.item.msgBody || !this.item.msgBody.time) {\n        return '';\n      }\n      let time = this.item.msgBody.time;\n      if (time == 0) {\n        return '';\n      }\n      let hour = Math.floor(time / 3600);\n      let minute = Math.floor((time - 3600 * hour) / 60);\n      let seconds = time - 3600 * hour - 60 * minute;\n      if (hour > 0) {\n        return `${this.prefixInteger(hour)}:${this.prefixInteger(minute)}:${this.prefixInteger(seconds)}`;\n      } else {\n        return `${this.prefixInteger(minute)}:${this.prefixInteger(seconds)}`;\n      }\n    },\n    isCaller() {\n      return this.item.fromId == UserInfoUtils.getCurrentUserId();\n    },\n    // 语音消息\n    isAudioMsgType() {\n      return this.item['msgType'] == 9;\n    },\n    getMyInfo() {\n      return this.$store.state.common?.userInfo || {}; //自己的信息\n    },\n    getSoundPng() {\n      let that = this;\n      // eslint-disable-next-line no-unused-vars\n      let { vipType, userRank, fromId } = that.messageItem || {},\n        imgSrc;\n      // console.log('%c～before、online png～','font-size:30px',vipType)\n      if (that.getMyInfo['id'] == fromId) {\n        //单聊->自己的语音\n        vipType = that.getMyInfo['vipType'] || vipType;\n        // userRank = that.getMyInfo['userRank'] || userRank;\n      } else {\n        vipType = vipType || that.userInfo?.vipType || 0;\n        // userRank = userRank || that.userInfo?.userRank;\n      }\n      // console.log('%c～after、online png～','font-size:30px',vipType)\n      // imgSrc = userRank >= 31 ?\n      //   require(\"../../../../assets/images/audio_master.png\")\n      //   :\n      imgSrc = vipType == 1 ? require('../../../../assets/images/audio_vip.png') : require('../../../../assets/images/audio.png');\n      return imgSrc;\n    },\n    getSoundGif() {\n      let that = this;\n      // eslint-disable-next-line no-unused-vars\n      let { vipType, userRank, fromId } = that.messageItem || {},\n        imgSrc;\n      if (that.getMyInfo['id'] == fromId) {\n        //单聊->自己的语音\n        vipType = that.getMyInfo['vipType'] || vipType;\n        // userRank = that.getMyInfo['userRank'] || userRank;\n      } else {\n        vipType = vipType || that.userInfo?.vipType || 0;\n        // userRank = userRank || that.userInfo?.userRank;\n      }\n      // imgSrc = userRank >= 31 ?\n      //   require(\"../../../../assets/images/audio_play_vip.gif\")\n      //   :\n      imgSrc = vipType == 1 ? require('../../../../assets/images/audio_play_vip.gif') : require('../../../../assets/images/audio_play.gif');\n      return imgSrc;\n    }\n  },\n  data() {\n    return {\n      downloadTaskInfoPer:100,\n      isPlayViedo: false,\n      amr: '',\n      soundUrl: require('../../../../assets/images/audio.png'),\n      messageItem: this.item,\n      rate: 'origin', //图片宽高比描述\n      mergeTransferMessageVisible: false,\n      telephoneUrl: require('../../../../assets/images/telephone.png'),\n      emojiList: emojiList,\n      patt: /\\[([^\\\\[])+?\\]/g,\n      downloadLoading: false,\n      tiffKey: '',\n      showText: Boolean(false),\n      progressWidth: 40,\n      downloadKey: ''\n    };\n  },\n  props: {\n    item: { require: true },\n    userInfo: { type: Object, default: () => {} }, //单聊绑定userInfo(对方);群聊、讨论存在 vipType, userRank,用不着该props\n    imglsit: { require: true },\n    isShowRight: { default: true },\n    showAppealClosureNotice: { default: false },//群聊是否封停标识\n    fromGroupType: { default: \"\" },//来源类型是群还是讨论组\n    groupAuthByUser: { default: \"\" },\n    soundUrlObj: {\n      type: Object,\n      default: () => ({\n        image: require('../../../../assets/images/audio.png'),\n        id: ''\n      })\n    },\n    friendId: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  watch: {\n    getCurDownloadTaskInfo(v){\n      this.downloadTaskInfoPer=v;\n    },\n    item: {\n      immediate: true,\n      deep: true,\n      handler: async function(val) {\n        if(val.msgBody && val.msgBody.firstFrame) {\n          const rate = val.msgBody.firstFrame.width / val.msgBody.firstFrame.height;\n          if (rate > 1) {\n            // 比例基 300px\n            val.msgBody.firstFrame.width = 250\n            val.msgBody.firstFrame.height = 140\n          }else {\n            val.msgBody.firstFrame.width = 140\n            val.msgBody.firstFrame.height = 250\n          }\n        }\n        // if (val.msgBody.format && val.msgBody.format === 'tiff' && !val.msgBody.tiffPath) {\n        //   await this.showTiff(val, val.msgBody.localId);\n        // }\n        if (val.msgType === '10') {\n          // 视频，自动下载\n          // 如果有downloadPath,判断是否是在本机\n          let inCurrentPC = true;\n          if (val.msgBody.downloadPath) {\n            let paths = val.msgBody.downloadPath.split('\\\\files\\\\')[0];\n            inCurrentPC = configDir.includes(paths);\n          }\n\n          if (val.msgId && (!val.msgBody.downloadPath || !inCurrentPC)) {\n            if(!this.isDownloading){\n              console.log('视频，自动下载')\n              this.isDownloading = true;\n              await this.downloadVideo(val);\n              this.isDownloading = false;\n              this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: val.msgId, beCleared: false});\n            }\n          }\n          // 针对手机端发送过来的视频\n          // if (!val.msgBody.noFirstFrame && !val.msgBody.isH265) {\n          //   await videoImg(val, async (flag) => {\n          //     val.msgBody.noFirstFrame = flag;\n          //     if (val.msgId) {\n          //       await this.updateMessageByMsgId(val);\n          //     }\n          //   });\n          // }\n          // if (!val.msgBody.isSupportVideo) {\n          //   // 需要判断是否\n          //   // const files = new FileUpload(val.msgBody.downloadPath,val.reqId);\n          //   // const isSupportVideo = await this.isSupportVideoPlay(files)\n          //   // console.log('isSupportVideo ====>', isSupportVideo);\n          //   await videoImg(val, async (flag) => {\n          //     val.msgBody.isSupportVideo = flag;\n          //     if (val.msgId) {\n          //       await this.updateMessageByMsgId(val);\n          //     }\n          //   });\n          // }\n        }\n        this.messageItem = val;\n      }\n    },\n    soundUrlObj: {\n      deep: true,\n      immediate: true,\n      handler: function() {\n        if (this.messageItem.msgId !== this.soundUrlObj.id) {\n          this.soundUrl = this.getSoundPng;\n        }\n        if (this.messageItem.msgId === this.soundUrlObj.id) {\n          this.soundUrl = this.soundUrlObj.image;\n        }\n      }\n    },\n    getMyInfo: {\n      deep: true,\n      handler: function({ vipType, id }) {\n        let { fromId, msgType } = this.item;\n        if (msgType == 9 && fromId == id) {\n          //更新会员信息 语音图标\n          this.$set(this.messageItem, 'vipType', vipType);\n          this.soundUrl = this.getSoundPng;\n        }\n      }\n    },\n    // 单聊绑定userInfo(对方);\n    userInfo: {\n      deep: true,\n      handler(v) {\n        if (v) {\n          // console.log(v,v.vipType)\n          this.soundUrl = this.getSoundPng;\n        }\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['actionCurrentMsgId']),\n    replaceEmoji(newVal) {\n      let originText;\n      let arr;\n      if (newVal) {\n        originText = newVal;\n        arr = originText.match(this.patt);\n      }\n      if (arr && originText) {\n        for (let index = 0; index < arr.length; index++) {\n          let item = arr[index];\n          let ret = this.emojiList.find(x => x.tag == item);\n          if (ret) {\n            /*eslint max-len: [\"error\", { \"code\": 140 }]*/\n            let img = `<img src=\"/resources/emoji/${ret.file}\" width=22px style=\"vertical-align: middle;margin: -5px 2px 0 2px\" />`;\n            originText = originText.replace(item, img);\n          }\n        }\n      }\n      return originText;\n    },\n    showMergeTransferMessageDialog() {\n      console.log('showMergeTransferMessageDialog- ',this.messageItem)\n      this.messageItem.msgBody.msgs.forEach(item => {\n        item.uniqueCode = this.messageItem.uniqueCode;\n        item.targetType = this.messageItem.targetType;\n      });\n      this.$nextTick(() => {\n        this.$refs.mergeTransferMessageDialog.onPop();\n      });\n    },\n    prefixInteger(num) {\n      return (Array(2).join('0') + num).slice(-2);\n    },\n    loadImg() {\n      // console.log(\"11111111111111111111111111\")\n      //加载图片完成后，scroll到最下面，防止图片加载过慢时，屏幕在中间的情况\n      // 加判断条件：第一屏消息，否则加载更多时，总是滚动到最底部\n      if(this.chatList?.[this.chatList.length-1]?.reqId==this.messageItem.reqId && this.chatList.length < 31){\n        this.scrollToBottom()\n      }\n      // this.$emit('scrollBottom');\n    },\n    refreshDownloadPercentInStore() {\n      this.messageItem.msgBody.timer = setInterval(() => {\n        if (this.downloadFileInfo && this.downloadFileInfo[this.messageItem.msgBody.reqId]) {\n          this.messageItem.msgBody.downloadFinished = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished;\n          this.messageItem.msgBody.downloadPercent = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadPercent;\n          this.messageItem.msgBody.downloadPath = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadPath;\n        } else {\n          this.stopLoadDownloadPercent();\n        }\n        if (this.messageItem.msgBody.downloadFinished) {\n          this.stopLoadDownloadPercent();\n        }\n      }, 1000);\n    },\n    stopLoadDownloadPercent() {\n      clearInterval(this.messageItem.msgBody.timer);\n      this.messageItem.msgBody.timer = null;\n    },\n    viewerShowChild(item) {\n      // 没有下载完成的视频点击无效\n      if (item.msgType == '10' && this.videoDownloadPercent[item.msgId]<100) return;\n      //TODO 组件通用化 禁止直接使用$parent\n      if (item.sendStatus != 1 && item.sendStatus != -1) {\n        this.$parent.viewerShow(item);\n      }\n    },\n    async handArm(val) {\n      await this.$nextTick();\n      let obj = JSON.parse(JSON.stringify(this.messageItem)),timer;\n      this.$emit('handArm', val, this.messageItem.msgId, obj);\n      timer = setTimeout(()=>{\n        this.$emit('acceptMessage',this.messageItem);\n        clearTimeout(timer);\n        timer = null;\n      },1000)\n\n    },\n    async downloadFile(fileItem) {\n      const fullPath = await fileOperational.downloadFile(fileItem.fileId, fileItem.fname);\n      let fileState = { key: fileItem.reqId, value: {} };\n      fileState.value.downloadPercent = '100%';\n      fileState.value.downloadPath = fullPath;\n      fileState.value.downloadFinished = true;\n      this.messageItem.msgBody.downloadPercent = '100%';\n      this.messageItem.msgBody.downloadPath = fullPath;\n      this.messageItem.msgBody.downloadFinished = true;\n      this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n    },\n    async saveFileAs(fileItem) {\n      if (!fileItem.downloadPath) return;\n      let filePath = fileItem.downloadPath.replace('\\\\', '/');\n      console.log('file-path', filePath);\n      fs.exists(filePath, exists => {\n        if (!exists) {\n          this.$message.error(this.$t('chat_0097'));\n        } else {\n          const ipc = require('electron').ipcRenderer;\n          ipc.send('saveAsFile', fileItem);\n        }\n      });\n    },\n    debounce(fn, delay) {\n      delay = delay || 200;\n      let timer;\n      return function() {\n        let th = this;\n        let args = arguments;\n        if (timer) {\n          clearTimeout(timer);\n        }\n        timer = setTimeout(function() {\n          timer = null;\n          fn.apply(th, args);\n        }, delay);\n      };\n    },\n    startDownloadFile(fileItem) {\n      this.$refs.downloadbutton.style.visibility = 'hidden';\n      this.$nextTick(() => {\n        this.downFile(fileItem);\n      });\n    },\n    async downFile(fileItem) {\n      console.log('downFile--fileItem--', fileItem);\n      this.downloadLoading = true;\n      if (fileItem.downloadPercent == undefined) {\n        this.messageItem.msgBody.reqId = this.messageItem.reqId;\n        this.messageItem.msgBody.downloadPercent = '';\n        this.messageItem.msgBody.downloadFinished = false;\n        this.messageItem.msgBody.downloadPath = '';\n        fileItem.reqId = this.messageItem.reqId;\n        fileItem.downloadPercent = '';\n        fileItem.downloadFinished = false;\n        fileItem.downloadPath = '';\n      }\n      const percentFloat = fileItem.downloadPercent.slice(0, -1) / 100;\n      if (0 < percentFloat && percentFloat < 1) return;\n      let configDir = path.join(remote.app.getPath('appData'), `${process.env.VUE_APP_ID}`);\n      let baseDir = path.join(configDir, 'files');\n      mkdir(baseDir);\n      let receivedBytes = 0;\n      let totalBytes = 0;\n      let fileName = fileItem.fname;\n      let fullPath = '';\n      if (checkIsExists(baseDir, fileName)) {\n        let i = 1;\n        let suffixIndex = fileName.lastIndexOf('.');\n        let fileNamePrefix = fileName.substr(0, suffixIndex);\n        let fileNameSuffix = fileName.substr(suffixIndex);\n        let isExistsFileName = fileNamePrefix\n          .concat('(')\n          .concat('' + i)\n          .concat(')')\n          .concat(fileNameSuffix);\n        while (checkIsExists(baseDir, isExistsFileName)) {\n          ++i;\n          isExistsFileName = fileNamePrefix\n            .concat('(')\n            .concat('' + i)\n            .concat(')')\n            .concat(fileNameSuffix);\n        }\n        fileName = isExistsFileName;\n      }\n      fullPath = path.join(baseDir, fileName);\n      let fileState = { key: fileItem.reqId, value: {} };\n      console.log('fileState', fileState);\n      fileState.value.downloadPercent = '';\n      fileState.value.downloadFinished = false;\n      fileState.value.downloadPath = '';\n      this.messageItem.msgBody.downloadPercent = '';\n      this.messageItem.msgBody.downloadFinished = false;\n      this.messageItem.msgBody.downloadPath = '';\n      this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n      this.refreshDownloadPercentInStore();\n\n      const req = request({\n        method: 'GET',\n        uri: fileItem.fileId,\n        strictSSL: false\n      });\n\n      req.pipe(fs.createWriteStream(fullPath));\n\n      req.on('response', data => {\n        console.log('response-data', data);\n        // 更新总文件字节大小\n        totalBytes = parseInt(data.headers['content-length'], 10);\n        console.log('response-totalBytes', totalBytes);\n      });\n\n      req.on('data', chunk => {\n        // 更新下载的文件块字节大小\n        receivedBytes += chunk.length;\n        fileState.value.downloadPercent = ((receivedBytes / totalBytes) * 100).toFixed(0) + '%';\n        this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n        this.downloadLoading = false;\n      });\n      req.on('error', async () => {\n        fileState.value.downloadPercent = '';\n        fileState.value.downloadFinished = false;\n        fileState.value.downloadPath = '';\n        this.downloadLoading = false;\n        this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n        await SQLUtils.updateDownloadFileMsgBody(fileState, this.friendId);\n      });\n      req.on('end', async () => {\n        fileState.value.downloadPath = fullPath;\n        fileState.value.downloadFinished = true;\n        this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n        await SQLUtils.updateDownloadFileMsgBody(fileState, this.friendId);\n      });\n    },\n    onOpenFile(item) {\n      if (!item.msgBody.downloadPercent && !item.msgBody.downloadFinished) {\n        this.downFile(item.msgBody);\n      }\n      if (item.msgBody.downloadFinished && this.isShowRight) {\n        if(process.platform==='darwin'){\n          this.$remote.getCurrentWindow().previewFile(item.msgBody.downloadPath.replace(\"file:///\",\"\"))\n        }else{\n          this.openFile(item);\n        }\n      }\n    },\n    openFile(item) {\n      if (!item.msgBody.downloadPath) return;\n      let filePath = item.msgBody.downloadPath.replace('\\\\', '/');\n      fs.exists(filePath, exists => {\n        if (!exists) {\n          this.$message.error(this.$t('chat_0097'));\n        } else {\n          let path = item.msgBody.downloadPath.replace(/\\\\/g, '\\\\\\\\');\n          if (otherVideoTypeArr.includes(item.msgBody.format)) {\n            // 不支持的视频格式\n            this.$confirm(\n              this.$t('chat_0122'),\n              this.$t('Universal_0059'),\n              {\n                confirmButtonText: this.$t('Universal_0356'),\n                cancelButtonText: this.$t('Universal_0063'),\n                type: \"info\",\n              }\n            ).then(() => {\n              eShell.showItemInFolder(item.msgBody.downloadPath);\n            }).catch(e => {\n              console.error(e);\n            });\n            return;\n          } else {\n            eShell.openPath(path);\n          }\n        }\n      });\n    },\n    delFileListHand(item) {\n      this.$emit('delMsg', 2, item);\n    },\n    rightClick(e) {\n      console.log('rightClick=====>');\n      //判断群聊是否封停\n      if(this.showAppealClosureNotice){\n        let message = this.fromGroupType === 'group' ? this.$t('appeal_0013') : this.$t('appeal_0014');\n        this.$message.error(message);\n        return;\n      }\n      if (\n        this.messageItem.msgType == 11 ||\n          (this.messageItem.msgType != '14' &&\n              this.messageItem.msgType != '16' &&\n              this.messageItem.sendStatus != 1 &&\n              this.messageItem.sendStatus != -1 &&\n              this.messageItem.isDecrypt != 0)\n      ) {\n        e.preventDefault();\n        this.addClick();\n      }else if(\n        this.messageItem.msgType == 11 ||\n          (this.messageItem.msgType != '14' &&\n              this.messageItem.msgType != '16' &&\n              this.messageItem.sendStatus == -1 &&\n              this.messageItem.isDecrypt != 0)\n      ){\n        e.preventDefault();\n        this.addClickFailMsg();\n      }\n    },\n    delFileChatListHand(item) {\n      this.$emit('delMsg', 2, item);\n    },\n    addClick() {\n      console.log('右击item  ', this.messageItem);\n      let infocard;\n      let fileName;\n      if (this.messageItem.msgBody && this.messageItem.msgType == 15 && !(this.messageItem.msgBody instanceof Object)) {\n        let msgBody = JSON.parse(this.messageItem.msgBody);\n        infocard = msgBody.type == 1 ? `[${this.$t('chat_0021')}]${msgBody.name}` : `[${this.$t('chat_0023')}]${msgBody.name}`;\n      } else {\n        let card = this.messageItem.msgBody.type == 1 ? '['+this.$t('chat_0021')+']' : '['+this.$t('chat_0023')+']';\n        infocard = `${card}${this.messageItem.msgBody.name}`;\n      }\n      if (this.messageItem.msgBody && this.messageItem.msgType == 6 && !(this.messageItem.msgBody instanceof Object)) {\n        let msgBody = JSON.parse(this.messageItem.msgBody);\n        fileName = msgBody.fname ? `${this.$t('chat_0017')}${msgBody.fname}` : `${this.$t('chat_0017')}${msgBody.fileName}`;\n      } else {\n        fileName = this.messageItem.msgBody.fname\n          ? `${this.$t('chat_0017')}${this.messageItem.msgBody.fname}`\n          : `${this.$t('chat_0017')}${this.messageItem.msgBody.fileName}`;\n      }\n      const quoteMsg = {\n        1: this.messageItem.msgBody.text,\n        2: this.$t('chat_0013'),\n        15: infocard,\n        10: this.$t('chat_0015'),\n        6: fileName,\n        25: this.messageItem.msgBody.text,\n        56: this.$t('Universal_0454')+' '+this.messageItem.msgBody.text\n      }[this.messageItem.msgType];\n      const quotTypes = ['1', '2', '6', '10', '15', '25', '40', '56'];\n      const isAudioMessage = this.messageItem.msgType == 11;\n      const rightClickOptions = [\n        //   {\n        //   name: \"复制\",\n        //   fun: () => {\n        //     const buffer = Buffer.from(this.messageItem.text, 'utf8')\n        //     clipboard.writeBuffer('public.utf8-plain-text', buffer)\n        //   }\n        // },\n      ];\n      if (this.messageItem.msgType == '1' || this.messageItem.msgType == '25' || this.messageItem.msgType == '2') {\n        if (this.messageItem.msgType == '2') {\n          const fileName = fileOperational.getFileName(this.messageItem.msgBody.mediaId);\n          if (fileName.split('.')[1] != 'gif') {\n            rightClickOptions.push({\n              name: this.$t('chat_0026'),\n              fun: () => {\n                this.$parent.copyText(this.messageItem);\n              }\n            });\n          }\n        } else {\n          rightClickOptions.push({\n            name: this.$t('chat_0026'),\n            fun: () => {\n              this.$parent.copyText(this.messageItem);\n            }\n          });\n        }\n      }\n      this.messageItem.msgType = this.messageItem.msgType + '';\n      // 转发\n      if (this.messageItem.msgType != '9' && !isAudioMessage) {\n        rightClickOptions.push({\n          name: this.$t('chat_0027'),\n          fun: () => {\n            // store.commit(SET_TRANSFER_ITEM, [this.messageItem]);\n            this.$parent.showDialogRelay([this.messageItem]);\n          }\n        });\n      }\n      if (this.messageItem.msgType != '40' && quotTypes.indexOf(this.messageItem.msgType) > -1) {\n        rightClickOptions.push({\n          name: this.$t('chat_0028'),\n          fun: () => {\n            this.$parent.transferQuote(this.messageItem, quoteMsg);\n          }\n        });\n      }\n\n      // 文件另存为\n      if (this.messageItem.msgType == '6' && this.messageItem.msgBody.downloadFinished) {\n        rightClickOptions.push({\n          name: this.$t('Universal_0357'),\n          fun: () => {\n            this.saveFileAs(this.messageItem.msgBody);\n          }\n        });\n      }\n      // 自己发的消息任何时候都可以撤回\n      if (\n        !isAudioMessage &&\n          (this.messageItem.fromId == localStorage.getItem('userId') ||\n              (this.messageItem.targetType == 2 && [1, 2].includes(this.groupAuthByUser)))\n      ) {\n        rightClickOptions.push({\n          name: this.$t('chat_0031'),\n          fun: () => {\n            console.log('撤回');\n            this.$emit('withdrawMessage', this.messageItem);\n          }\n        });\n      }\n      rightClickOptions.push({\n        name: this.$t('chat_0032'),\n        fun: () => {\n          this.$emit('delMsg', 2, this.messageItem);\n        }\n      });\n      if (quotTypes.indexOf(this.messageItem.msgType) > -1) {\n        rightClickOptions.push({\n          name: this.$t('Universal_0044'),\n          fun: () => {\n            this.$emit('mutiChoose', this.messageItem.msgId);\n          }\n        });\n      }\n      if (!this.isShowRight) {\n        return;\n      } else {\n        return this.$RightClick(rightClickOptions).popup({\n          window: remote.getCurrentWindow()\n        });\n      }\n\n    },\n    addClickFailMsg(){\n      const rightClickOptions = [];\n      // 重发\n      rightClickOptions.push({\n        name: this.$t('Universal_0048'),\n        fun: async () => {\n          this.messageItem.sendStatus = 1;\n          this.messageItem.fromResend = true;\n          await SQLUtils.sendMessageStatusSending(this.messageItem.targetId, this.messageItem.reqId);\n          if (this.messageItem.msgType == 2) {\n            this.messageItem.path = this.messageItem.msgBody.path;\n            this.messageItem.reqId = this.messageItem.msgBody.reqId;\n            this.messageItem.size = this.messageItem.msgBody.fsize;\n            this.messageItem.fileType = this.messageItem.msgBody.format\n            this.messageItem.fromId = this.messageItem.msgBody.fromId;\n            this.messageItem.friendId = this.messageItem.msgBody.friendId;\n            console.log('messageItem ====>',this.messageItem);\n            this.$emit('handSendImg', this.messageItem);\n          }\n          if (this.messageItem.msgType == 6) {\n            this.$emit('reHandSendFile', this.messageItem.msgBody);\n          }\n          if (this.messageItem.msgType == 10) {\n            this.$emit('reHandSendVideo', this.messageItem.msgBody);\n          } else if (this.messageItem.msgType == 1 || this.messageItem.msgType == 25 \n          || this.messageItem.msgType == 15 || this.messageItem.msgType == 40) {\n            await this.$store.dispatch('CHAT_REST_SEND', { ...this.messageItem });\n          }\n        }\n      });\n      // // 复制 \n      // rightClickOptions.push({\n      //   name: this.$t('chat_0026'),\n      //   fun: () => {\n      //     this.$parent.copyText(this.messageItem);\n      //   }\n      // });\n      // 删除\n      rightClickOptions.push({\n        name: this.$t('chat_0032'),\n        fun: () => {\n          this.$emit('delMsg', 2, this.messageItem);\n        }\n      });\n      if (!this.isShowRight) {\n        return;\n      } else {\n        return this.$RightClick(rightClickOptions).popup({\n          window: remote.getCurrentWindow()\n        });\n      }\n    },\n    findImage(item) {\n      // const { localPath } = item.msgBody;\n      const { localId } = item.msgBody;\n\n      // console.log('path ===>', localPath);\n      item.msgBody.localId = fileOperational.getImage(item.msgBody.mediaId);\n      let W = item.msgBody.width;\n      let H = item.msgBody.height;\n      let R = W / H;\n      if (R > 3) {\n        if (W >= 120) {\n          this.rate = 'Hcale40Midwidth';\n        } else {\n          this.rate = 'Hcale3Midwidth';\n        }\n      }\n      if (1 <= R && R <= 3) {\n        if (W >= 120) {\n          this.rate = 'midwidth';\n        } else {\n          this.rate = 'origin';\n        }\n      }\n      if (1 / 3 <= R && R < 1) {\n        if (H >= 100) {\n          this.rate = 'midhight';\n        } else {\n          this.rate = 'origin';\n        }\n      }\n      if (R < 1 / 3) {\n        if (H >= 100) {\n          this.rate = 'Wcale30MidHight';\n        } else {\n          this.rate = 'Wcale3MidHight';\n        }\n      }\n      // if (localPath && checkIsExists(localPath)) {\n      //   return `file://${localPath}`;\n      // }\n      if (localId && checkIsExists(localId)) {\n        return item.msgBody.localId\n      }\n      return fileOperational.getImage(item.msgBody.mediaCondenseId);\n      // return fileOperational.getImage(item.msgBody.mediaId || item.msgBody.mediaCondenseId);\n    },\n    getFileType(format) {\n      if (format == 'zip' || format == 'rar' || format == 'pdf') {\n        return format;\n      } else if (format == 'doc' || format == 'docx') {\n        return 'word';\n      } else if (format == 'ppt' || format == 'pptx') {\n        return 'ppt';\n      } else if (format == 'xls' || format == 'xlsx' || format == 'csv') {\n        return 'excel';\n      } else if (format == 'txt') {\n        return 'txt';\n      } else {\n        return 'icon_un';\n      }\n    },\n    initFile() {\n      if (this.messageItem.msgBody.downloadPercent == '100%' && this.messageItem.msgBody.downloadFinished) {\n        return;\n      }\n      let downloadFileInfo = store.state.common.downloadFile;\n      if (downloadFileInfo && downloadFileInfo[this.messageItem.msgBody.reqId]) {\n        this.messageItem.msgBody.downloadFinished = downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished;\n        this.messageItem.msgBody.downloadPercent = downloadFileInfo[this.messageItem.msgBody.reqId].downloadPercent;\n        this.messageItem.msgBody.downloadPath = downloadFileInfo[this.messageItem.msgBody.reqId].downloadPath;\n        this.refreshDownloadPercentInStore();\n        if (downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished) {\n          clearInterval(this.messageItem.msgBody.timer);\n          this.messageItem.msgBody.timer = null;\n        }\n      }\n    },\n    resendCallAudio() {\n      this.$parent.callAudio();\n    },\n    handleUserSelectText(){\n      this.actionCurrentMsgId(this.item?.msgId)\n    },\n\n    // 不处理tiff\n    // async showTiff(item, url) {\n    //   let xhr = new XMLHttpRequest();\n    //   xhr.responseType = 'arraybuffer';\n    //   xhr.open('GET', url);\n    //   let _this = this;\n    //   xhr.onload = async function () {\n    //     let tiff = new Tiff({buffer: xhr.response});\n    //     const imgData = await tiff.toDataURL();\n    //     _this.messageItem.msgBody.tiffPath = imgData;\n    //     _this.tiffKey = Math.random(); // 保存每次都能渲染成功\n    //     await _this.updateMessageByMsgId(_this.messageItem);\n    //   };\n    //   await xhr.send();\n    // },\n    \n    // 自动下载视频\n    async downloadVideo(file) {\n      console.log('online自动下载视频')\n      let url = file.msgBody.fileId;\n      let fileName = '';\n      let arr = file.msgBody.fileId.split('.');\n      let format = arr[arr.length - 1];\n      fileName = file.reqId+'.'+format;\n      let localPath = path.join(baseDir, fileName);\n      if (checkUrl(url)) {\n        mkdir(baseDir);\n        const exists = await checkVideoIsExists(baseDir, fileName);\n        if (exists) {\n          file.msgBody.downloadPath = localPath;\n        }\n        if (!exists) {\n          console.log('不存在，下啊')\n          await this.download(file, url, localPath);\n        }\n      }\n    },\n    // 自动下载\n    async download(fileItem, url, path) {\n      // 下载\n      const bakPath = path + '-bak';\n      // 下载之前先清除历史数据\n      if (checkFileIsExists(bakPath)) {\n        fs.unlinkSync(bakPath);\n      }\n      let receivedBytes = 0;\n      let totalBytes = 0;\n      fileItem.msgBody.downloadLoading = true;\n      fileItem.msgBody.downloadPath = path;\n      fileItem.msgBody.downloadPercent = 0;\n      fileItem.msgBody.downloadFinished = false;\n      await this.updateMessageByMsgId(fileItem);\n      const req = await request({\n        method: 'GET',\n        url,\n        strictSSL: false\n      });\n      req.pipe(fs.createWriteStream(path));\n      req.on('response', data => {\n        // 更新总文件字节大小\n        totalBytes = parseInt(data.headers['content-length'], 10);\n        console.log('response-totalBytes', totalBytes);\n      });\n      req.on('data', chunk => {\n        // 更新下载的文件块字节大小\n        receivedBytes += chunk.length;\n        let percent = Number(((receivedBytes / totalBytes) * 100).toFixed(0));\n        if (fileItem.msgBody.downloadPercent < percent) {\n          fileItem.msgBody.downloadPercent = percent;\n          this.$store.commit('CHAT_VIDEO_DOWNLOAD_PERCENT', {\n            msId: fileItem.msgId,\n            percent: fileItem.msgBody.downloadPercent\n          });\n          this.messageItem.msgBody = fileItem.msgBody; // 保证中途发送别的消息时，进度条能正常进行\n        }\n      });\n      req.on('error', async () => {\n        fileItem.msgBody.downloadPercent = 0;\n        fileItem.msgBody.downloadFinished = false;\n        fileItem.msgBody.downloadPath = '';\n        fileItem.msgBody.downloadLoading = false;\n        this.messageItem.msgBody = fileItem.msgBody;\n        this.$store.commit('CHAT_VIDEO_DOWNLOAD_PERCENT', {msId: fileItem.msgId, percent: 0});\n        await this.updateMessageByMsgId(this.messageItem);\n      });\n      req.on('end', async () => {\n        fileItem.msgBody.downloadPercent = 100;\n        fileItem.msgBody.downloadFinished = true;\n        fileItem.msgBody.downloadPath = path;\n        fileItem.msgBody.downloadLoading = false;\n        const files = new FileUpload(fileItem.msgBody.downloadPath,fileItem.reqId);\n        const isSupportVideo = await this.isSupportVideoPlay(files)\n        fileItem.msgBody.isSupportVideo = isSupportVideo\n        console.log('isSupportVideo ====>', isSupportVideo);\n        this.messageItem.msgBody = fileItem.msgBody;\n        this.$store.commit('CHAT_VIDEO_DOWNLOAD_PERCENT', {msId: fileItem.msgId, percent: 100});\n        await this.updateMessageByMsgId(fileItem);\n        console.log('end-- ',fileItem.msgBody)\n      });\n    },\n\n    // 判断是否支持播放\n    async isSupportVideoPlay(files) {\n      let isSupportVideo = false\n      const res = await files.getVideoCodeC();\n      // video 标签 支持 Mp4格式 H264编码  WebM格式 VP8编码  Ogg格式 Theora编码\n      if (videoCode.indexOf(res.metadata?.video?.codec) > -1 ) {\n        isSupportVideo = true\n      }\n      console.log('isSupportVideo ===>', isSupportVideo);\n      return isSupportVideo\n    },\n\n    /** 根据MSG ID 更新消息 */\n    async updateMessageByMsgId(msgInfo) {\n      let msgBody = msgInfo.msgBody;\n      if (!msgInfo.msgId) {\n        throw new Error('msgId不存在');\n      }\n      let id;\n      if (msgInfo.uniqueCode) {\n        id = parseUniqueCode(msgInfo.uniqueCode, msgInfo.targetType);\n      } else {\n        throw new Error('uniqueCode不存在');\n      }\n      let tableName = `m_${id}`;\n      await window.vm\n        .$knex(tableName)\n        .where({\n          msg_id: msgInfo.msgId\n        })\n        .update({\n          msg_body: JSON.stringify(msgBody)\n        });\n    },\n    goActivityPage(msgInfo){\n      console.log(msgInfo)\n      goOfficialPage()\n      // msgInfo.msgBody?.url && eShell.openExternal(msgInfo.msgBody.url);\n    },\n    handlerImgErr(e){\n      // console.log(e.target.style)\n      e.target.style.width=\"50px\"\n      e.target.style.height=\"80px\"\n      e.target.style.opacity=0;\n    }\n  },\n  mounted() {\n    if (this.messageItem.msgType == '6') {\n      this.initFile();\n    }\n  },\n  beforeUpdate() {\n    if (this.messageItem.msgType == '6') {\n      this.initFile();\n    }\n  },\n  beforeDestroy() {\n    if (this.amr) {\n      this.shopVideo();\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div @contextmenu.prevent=\"rightClick($event)\">\n    <div class=\"words\"  @mousedown=\"handleUserSelectText\" v-if=\"messageItem.msgType == '1' || messageItem.msgType == '25'\" >\n      <MessageFormatText v-bind:text=\"messageItem.text || messageItem.msgBody.text\" :item=\"item\" />\n    </div>\n\n    <div\n        v-else-if=\"messageItem.msgType == '6'\"\n        class=\"fileBox\"\n        v-loading=\"downloadLoading\"\n        element-loading-spinner=\"el-icon-loading\"\n    >\n      <div class=\"flex align-center\" @click=\"onOpenFile(messageItem)\">\n        <div class=\"flex-sub flex-direction\" style=\"width: 80%\">\n          <!-- <p class=\"text-cut\">{{item.msgBody && (item.msgBody.fileName || item.msgBody.fname)}}</p> -->\n          <!-- <p>{{item.msgBody.fsize | formatFileSize}}    </p> -->\n          <span class=\"file-title\">{{ messageItem.msgBody && (messageItem.msgBody.fileName || messageItem.msgBody.fname) }}</span>\n          <p class=\"file-size\">\n            {{ messageItem.msgBody.fsize | formatFileSize }}\n          </p>\n        </div>\n        <img :src=\"require(`../../../../assets/images/${getFileType(messageItem.msgBody.format)}.png`)\" width=\"40\" height=\"40\" alt />\n      </div>\n      <div class=\"load-border text-right\">\n        <span v-if=\"!messageItem.msgBody.downloadFinished && messageItem.msgBody.downloadPercent\">\n          {{ $t('personal_0026') }}{{ messageItem.msgBody.downloadPercent }}\n        </span>\n        <span\n            v-if=\"!messageItem.msgBody.downloadPercent && isShowRight && messageItem.sendStatus != 1 && messageItem.sendStatus != -1\"\n            ref=\"downloadbutton\"\n            @click=\"downFile(messageItem.msgBody)\"\n        >{{ $t('Universal_0358') }}</span\n        >\n        <span v-if=\"messageItem.msgBody.downloadFinished && isShowRight\" @click=\"openFile(messageItem)\">\n          {{ $t('Universal_0356') }}\n        </span>\n        <span v-if=\"messageItem.msgBody.downloadFinished && isShowRight\" @click=\"saveFileAs(messageItem.msgBody)\">\n          {{ $t('Universal_0357') }}\n        </span>\n        <!--        <span v-if=\"isShowRight\" @click=\"delFileListHand(item, 'list')\">删除</span>-->\n      </div>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '2'\" class=\"imgMsg\" >\n       <el-progress type=\"circle\"\n              style=\"left:50%;transform:translate(-50%,-50%)\"\n              :percentage=\"downloadTaskInfoPer\"\n              class=\"downloadProcess\"\n              :show-text=\"false\"\n              :width=\"40\"\n              v-if=\"downloadTaskInfoPer<100\"\n              color=\"#2f54eb\"\n              :stroke-width=\"3\"\n              :key=\"messageItem['reqId']\"\n      ></el-progress>\n      <img \n           :src=\"findImage(messageItem)\"\n           alt\n           @click=\"viewerShowChild(messageItem)\"\n           @load=\"loadImg\"\n           :class=\"rate\"\n           @error=\"handlerImgErr\"\n           :style=\"viewpicStyle\"\n           :width=\"messageItem.msgBody.width\"\n           :height=\"messageItem.msgBody.height\"\n      />\n    </div>\n    <div v-else-if=\"messageItem.msgType == '10'\" class=\"videoMsg\" @click=\"viewerShowChild(messageItem)\">\n       <!-- v-if=\"messageItem.msgBody.firstFrame.height === 0 || messageItem.msgBody.firstFrame.width === 0\" -->\n      <video\n          v-if=\"!messageItem.msgBody.fileNo && !messageItem.msgBody.downloadFinished && !messageItem.msgBody.firstFrame.mediaId\"\n          :src=\"messageItem.msgBody.fileId\"\n          class=\"videoShow\"\n          :height=\"messageItem.msgBody.firstFrame.height\"\n          :width=\"messageItem.msgBody.firstFrame.width\"\n      ></video>\n      <img\n          v-else\n          :src=\"messageItem.msgBody.firstFrame.mediaId\"\n          alt=\"\"\n          class=\"videoShow\"\n          :height=\"messageItem.msgBody.firstFrame.height\"\n          :width=\"messageItem.msgBody.firstFrame.width\"\n      />\n      <i class=\"el-icon-video-play videoStart\"\n         v-show=\"(messageItem.msgBody.downloadFinished||videoDownloadPercent[messageItem.msgId]===100||\n         videoDownloadPercent[messageItem.msgId]===undefined)&&\n         messageItem.msgBody.downloadPath&&\n         !fileBeCleared[messageItem.msgId]\" />\n      <span class=\"progress-mask\"\n            v-show=\"messageItem.msgBody.downloadLoading&&\n            videoDownloadPercent[messageItem.msgId]!==100&&videoDownloadPercent[messageItem.msgId]!==undefined&&\n            !fileBeCleared[messageItem.msgId]\"></span>\n      <el-progress type=\"circle\"\n                   ref=\"progress\"\n                   :percentage=\"videoDownloadPercent[messageItem.msgId]||0\"\n                   class=\"downloadProcess\"\n                   :show-text=\"false\"\n                   :width=\"40\"\n                   v-show=\"videoDownloadPercent[messageItem.msgId]<100&&!fileBeCleared[messageItem.msgId]\"\n                   color=\"#2f54eb\"\n                   :stroke-width=\"3\"\n                   :key=\"messageItem.msgId\"\n      ></el-progress>\n      <i class=\"el-icon-warning videoStart\"\n         v-show=\"fileBeCleared[messageItem.msgId]||videoNotInCurrentPC[messageItem.msgId]\"></i>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '9'\" class=\"audio-wrap\" @click=\"handArm(messageItem.msgBody.fileId)\">\n      <span>\n        <img :src=\"soundUrl\" alt />\n        {{ messageItem.msgBody.dur }}\"\n      </span>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '15'\" class=\"carte\">\n      <div class=\"cardinfo\" v-if=\"messageItem.msgBody.type == '2'\">\n        <img :src=\"messageItem.msgBody.msgUrl\" />\n        <span class=\"cardName\" style=\"margin-left:5px;\">\n          <label class=\"\" style=\"color: #333\">{{ messageItem.msgBody.name }}</label>\n          <br />\n          <label style=\"font-size:10px;color:#999\">ID:{{ messageItem.msgBody.code }}</label>\n        </span>\n      </div>\n      <div class=\"cardinfo\" v-else>\n        <MemberIcon\n            :vipType=\"Number(messageItem.msgBody.vipType)\"\n            :image=\"messageItem.msgBody.msgUrl\"\n            iconType=\"mini\"\n            :userRank=\"+messageItem.msgBody.userRank\"\n        />\n        <div class=\"topitem\">\n          <span style=\"display:flex;align-items:center;margin-bottom:5px;\">\n            <label class=\"cardName\" style=\"color: #333\">{{ messageItem.msgBody.name }}</label>\n            <LevelIcon\n                :inviteCode=\"messageItem.msgBody.code\"\n                :userRank=\"+messageItem.msgBody.userRank\"\n                iconType=\"small\"\n                :vipType=\"+messageItem.msgBody.vipType\"\n                :inviteCodeType=\"+messageItem.msgBody.inviteCodeType\"\n                :listFlag=\"true\"\n                style=\"padding-left: 2px;\"\n            />\n          </span>\n          <!-- {{ item.msgBody.code }} -->\n          <LuckIdIcon\n              :inviteCode=\"messageItem.msgBody.code\"\n              :userRank=\"+messageItem.msgBody.userRank\"\n              iconType=\"medium\"\n              :vipType=\"+messageItem.msgBody.vipType\"\n              :inviteCodeType=\"+messageItem.msgBody.inviteCodeType\"\n              :listFlag=\"false\"\n          />\n        </div>\n      </div>\n      <p v-if=\"messageItem.msgBody.type == 1\">{{ $t('chat_0021') }}</p>\n      <p v-else>{{ $t('chat_0023') }}</p>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '40'\" class=\"mergeTransferClass\" @click=\"showMergeTransferMessageDialog\">\n      <div class=\"flex flex-direction\">\n        <!--        <span class=\"title\">{{ messageItem.msgBody.title || '多人' }}的聊天记录</span>-->\n        <span class=\"title\" v-if=\"messageItem.msgBody.title\">{{ $t('chat_0045',{value: messageItem.msgBody.title}) }}</span>\n        <span class=\"title\" v-else>{{ $t('chat_0043') }}</span>\n        <span class=\"content\">\n          <ul>\n            <li\n                v-for=\"(message, index) in messageItem.msgBody.msgs\"\n                v-if=\"index < 4\"\n                :key=\"index\"\n                class=\"flex  align-center justify-between\"\n            >\n              <span v-if=\"message.msgType == '1' || message.msgType == '25'\" class=\"user-sign\">\n                <span>{{ `${message.fromName || ''}: ` }}</span>\n                <MessageFormatText linkFlag v-bind:text=\"message.msgBody.text\" />\n              </span>\n              <span class=\"text\" v-else>{{ messageDetail(message) }}</span>\n            </li>\n          </ul>\n        </span>\n        <el-divider class=\"mergeDivider\"></el-divider>\n        <span class=\"blue\">{{ $t('chat_0042') }}</span>\n      </div>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '11'\" @click=\"resendCallAudio\" class=\"audio-call-class\">\n      <div v-if=\"messageItem.fromType == 700\"><img :src=\"telephoneUrl\" class=\"telephone-class\" alt />\n        {{ $t('Universal_0088') }}\n      </div>\n      <div v-if=\"messageItem.fromType == 703\"><img :src=\"telephoneUrl\" class=\"telephone-class\" alt />\n        {{ $t('chat_voice_0040') }}\n      </div>\n      <div v-if=\"messageItem.fromType == 704\">\n        <img :src=\"telephoneUrl\" class=\"telephone-class\" alt />{{ $t('chat_voice_0047') }}\n        {{ chatTime }}\n      </div>\n      <div v-if=\"messageItem.fromType == 705\">\n        <img :src=\"telephoneUrl\" class=\"telephone-class\" alt />\n        <span v-if=\"isCaller\">{{ $t('chat_voice_0035') }}</span>\n        <span v-else>{{ $t('chat_voice_0036') }}</span>\n      </div>\n      <div v-if=\"messageItem.fromType == 706\"><img :src=\"telephoneUrl\" class=\"telephone-class\" alt />\n        {{ $t('chat_voice_0041') }}\n      </div>\n      <div v-if=\"messageItem.fromType == 707\"><img :src=\"telephoneUrl\" class=\"telephone-class\" alt />\n        {{ $t('chat_voice_0037') }}\n      </div>\n      <div v-if=\"messageItem.fromType == 712\">\n        <img :src=\"telephoneUrl\" class=\"telephone-class\" alt />{{ $t('chat_voice_0043') }}\n        {{ chatTime }}\n      </div>\n    </div>\n    <div v-else-if=\"messageItem.msgType == '56'\" class=\"acitivity\" @click=\"goActivityPage(messageItem)\">\n      <img :src=\"messageItem.msgBody.imgUrl\" alt=\"\">\n      <p class=\"title\">{{messageItem.msgBody.title}}</p>\n      <!-- <p class=\"content\">{{messageItem.msgBody.text}}</p> -->\n      <div class=\"bottom\">\n        <img src=\"../../../../assets/images/didi_activity_icon.png\" alt=\"\"><p>{{$t('chat_0125')}}</p>\n      </div>\n    </div>\n    <!-- <div v-else>不支持的消息， 请到APP查看</div> -->\n    <MergeTransferMessage :title=\"messageItem.msgBody.title\" :msgItem=\"messageItem\" ref=\"mergeTransferMessageDialog\" />\n  </div>\n</template>\n\n<script>\nimport { remote, shell as eShell } from 'electron';\nimport { checkIsExists, checkVideoIsExists, mkdir } from '@/utils/file';\nimport MessageFormatText from '@/view/chat/components/common/MessageFormatText';\nimport MergeTransferMessage from '@/view/chat/components/common/MergeTransferMessage';\nimport fileOperational from '@/services/fileOperational';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport request from 'request';\nimport fs from 'fs';\nimport path from 'path';\nimport store from '@/store';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nimport emojiList from '@/utils/emoji.js';\nimport { mapActions, mapGetters } from \"vuex\";\nimport { otherVideoTypeArr } from '@/utils/const';\nimport {checkFileIsExists, checkUrl } from \"@/utils/file\";\nimport { parseUniqueCode } from '@/utils/const';\nimport { goOfficialPage } from '@/utils';\nlet configDir = path.join(remote.app.getPath('appData'), `${process.env.VUE_APP_ID}`);\nlet baseDir = path.join(configDir, 'files');\nconst { FileUpload } = require('@/utils/fileUpload');\nimport { videoCode} from \"@/utils/const\";\n\nexport default {\n  name: 'MessageFormatOnline',\n  inject: [\"scrollToBottom\"],\n  components: {\n    MessageFormatText,\n    MergeTransferMessage,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  computed: {\n    ...mapGetters(['videoDownloadPercent', 'fileBeCleared', 'videoNotInCurrentPC','chatList','gettersDownloadTaskInfoByID']),\n    getCurDownloadTaskInfo() {\n      return this.gettersDownloadTaskInfoByID(this.item?.msgBody?.mediaId)||100;\n    },\n    messageDetail() {\n      return message => {\n        let msgTypeObject = {\n          6: this.$t('chat_0017'),\n          2: this.$t('chat_0013'),\n          10: this.$t('chat_0015'),\n          15: this.$t('chat_0024'),\n          40: '['+this.$t('chat_0042')+']',\n          14: '['+this.$t('opinions_0006')+']',\n          44: '[Dapp]',\n          56: this.$t('Universal_0454'),\n          61: this.$t('chat_0127'),\n        };\n        let result = '';\n        if (message.msgType != 15) {\n          result = `${message.fromName || ''}: ${msgTypeObject[message.msgType]}`;\n        } else {\n          if (message.msgBody.type == '1') {\n            result = `${message.fromName || ''}: [${this.$t('chat_0021')}]`;\n          } else {\n            result = `${message.fromName || ''}: [${this.$t('chat_0023')}]`;\n          }\n        }\n        return result;\n      };\n    },\n    viewpicStyle() {\n      if (this.rate === 'Hcale3Midwidth') {\n        return {\n          width: `${this.item.msgBody.width}px`,\n          height: `${(this.item.msgBody.width * 1) / 3}px`\n        };\n      }\n      if (this.rate === 'Wcale3MidHight') {\n        return {\n          width: `${(this.item.msgBody.height * 1) / 3}px`,\n          height: this.item.msgBody.height\n        };\n      }\n      this.$nextTick(() => {\n        if(document.getElementById(this.messageItem.reqId) && this.messageItem.msgBody.format == 'gif'){\n          console.log(this.$refs[this.messageItem.reqId].naturalWidth,'wswww',\n            document.getElementById(this.messageItem.reqId).naturalHeight)\n          return{\n            width: `${this.$refs[this.messageItem.reqId].naturalWidth}px`,\n            height: `${this.$refs[this.messageItem.reqId].naturalHeight}px`\n          }\n        }\n      })\n      return{}\n    },\n    downloadFileInfo() {\n      return store.state.common.downloadFile;\n    },\n    loadDownloadPercent() {\n      let downloadFile = this.$store.state.common.downloadFile;\n      if (downloadFile && downloadFile[this.messageItem.msgBody.reqId]) {\n        return downloadFile[this.messageItem.msgBody.reqId].downloadPercent;\n      } else {\n        return '';\n      }\n    },\n    loadDownloadPath() {\n      let downloadFile = this.$store.state.common.downloadFile;\n      if (downloadFile && downloadFile[this.messageItem.msgBody.reqId]) {\n        return downloadFile[this.messageItem.msgBody.reqId].downloadPath;\n      } else {\n        return '';\n      }\n    },\n    chatTime() {\n      if (!this.item.msgBody || !this.item.msgBody.time) {\n        return '';\n      }\n      let time = this.item.msgBody.time;\n      if (time == 0) {\n        return '';\n      }\n      let hour = Math.floor(time / 3600);\n      let minute = Math.floor((time - 3600 * hour) / 60);\n      let seconds = time - 3600 * hour - 60 * minute;\n      if (hour > 0) {\n        return `${this.prefixInteger(hour)}:${this.prefixInteger(minute)}:${this.prefixInteger(seconds)}`;\n      } else {\n        return `${this.prefixInteger(minute)}:${this.prefixInteger(seconds)}`;\n      }\n    },\n    isCaller() {\n      return this.item.fromId == UserInfoUtils.getCurrentUserId();\n    },\n    // 语音消息\n    isAudioMsgType() {\n      return this.item['msgType'] == 9;\n    },\n    getMyInfo() {\n      return this.$store.state.common?.userInfo || {}; //自己的信息\n    },\n    getSoundPng() {\n      let that = this;\n      // eslint-disable-next-line no-unused-vars\n      let { vipType, userRank, fromId } = that.messageItem || {},\n        imgSrc;\n      // console.log('%c～before、online png～','font-size:30px',vipType)\n      if (that.getMyInfo['id'] == fromId) {\n        //单聊->自己的语音\n        vipType = that.getMyInfo['vipType'] || vipType;\n        // userRank = that.getMyInfo['userRank'] || userRank;\n      } else {\n        vipType = vipType || that.userInfo?.vipType || 0;\n        // userRank = userRank || that.userInfo?.userRank;\n      }\n      // console.log('%c～after、online png～','font-size:30px',vipType)\n      // imgSrc = userRank >= 31 ?\n      //   require(\"../../../../assets/images/audio_master.png\")\n      //   :\n      imgSrc = vipType == 1 ? require('../../../../assets/images/audio_vip.png') : require('../../../../assets/images/audio.png');\n      return imgSrc;\n    },\n    getSoundGif() {\n      let that = this;\n      // eslint-disable-next-line no-unused-vars\n      let { vipType, userRank, fromId } = that.messageItem || {},\n        imgSrc;\n      if (that.getMyInfo['id'] == fromId) {\n        //单聊->自己的语音\n        vipType = that.getMyInfo['vipType'] || vipType;\n        // userRank = that.getMyInfo['userRank'] || userRank;\n      } else {\n        vipType = vipType || that.userInfo?.vipType || 0;\n        // userRank = userRank || that.userInfo?.userRank;\n      }\n      // imgSrc = userRank >= 31 ?\n      //   require(\"../../../../assets/images/audio_play_vip.gif\")\n      //   :\n      imgSrc = vipType == 1 ? require('../../../../assets/images/audio_play_vip.gif') : require('../../../../assets/images/audio_play.gif');\n      return imgSrc;\n    }\n  },\n  data() {\n    return {\n      downloadTaskInfoPer:100,\n      isPlayViedo: false,\n      amr: '',\n      soundUrl: require('../../../../assets/images/audio.png'),\n      messageItem: this.item,\n      rate: 'origin', //图片宽高比描述\n      mergeTransferMessageVisible: false,\n      telephoneUrl: require('../../../../assets/images/telephone.png'),\n      emojiList: emojiList,\n      patt: /\\[([^\\\\[])+?\\]/g,\n      downloadLoading: false,\n      tiffKey: '',\n      showText: Boolean(false),\n      progressWidth: 40,\n      downloadKey: ''\n    };\n  },\n  props: {\n    item: { require: true },\n    userInfo: { type: Object, default: () => {} }, //单聊绑定userInfo(对方);群聊、讨论存在 vipType, userRank,用不着该props\n    imglsit: { require: true },\n    isShowRight: { default: true },\n    showAppealClosureNotice: { default: false },//群聊是否封停标识\n    fromGroupType: { default: \"\" },//来源类型是群还是讨论组\n    groupAuthByUser: { default: \"\" },\n    soundUrlObj: {\n      type: Object,\n      default: () => ({\n        image: require('../../../../assets/images/audio.png'),\n        id: ''\n      })\n    },\n    friendId: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  watch: {\n    getCurDownloadTaskInfo(v){\n      this.downloadTaskInfoPer=v;\n    },\n    item: {\n      immediate: true,\n      deep: true,\n      handler: async function(val) {\n        if(val.msgBody && val.msgBody.firstFrame) {\n          const rate = val.msgBody.firstFrame.width / val.msgBody.firstFrame.height;\n          if (rate > 1) {\n            // 比例基 300px\n            val.msgBody.firstFrame.width = 250\n            val.msgBody.firstFrame.height = 140\n          }else {\n            val.msgBody.firstFrame.width = 140\n            val.msgBody.firstFrame.height = 250\n          }\n        }\n        // if (val.msgBody.format && val.msgBody.format === 'tiff' && !val.msgBody.tiffPath) {\n        //   await this.showTiff(val, val.msgBody.localId);\n        // }\n        if (val.msgType === '10') {\n          // 视频，自动下载\n          // 如果有downloadPath,判断是否是在本机\n          let inCurrentPC = true;\n          if (val.msgBody.downloadPath) {\n            let paths = val.msgBody.downloadPath.split('\\\\files\\\\')[0];\n            inCurrentPC = configDir.includes(paths);\n          }\n\n          if (val.msgId && (!val.msgBody.downloadPath || !inCurrentPC)) {\n            if(!this.isDownloading){\n              console.log('视频，自动下载')\n              this.isDownloading = true;\n              await this.downloadVideo(val);\n              this.isDownloading = false;\n              this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: val.msgId, beCleared: false});\n            }\n          }\n          // 针对手机端发送过来的视频\n          // if (!val.msgBody.noFirstFrame && !val.msgBody.isH265) {\n          //   await videoImg(val, async (flag) => {\n          //     val.msgBody.noFirstFrame = flag;\n          //     if (val.msgId) {\n          //       await this.updateMessageByMsgId(val);\n          //     }\n          //   });\n          // }\n          // if (!val.msgBody.isSupportVideo) {\n          //   // 需要判断是否\n          //   // const files = new FileUpload(val.msgBody.downloadPath,val.reqId);\n          //   // const isSupportVideo = await this.isSupportVideoPlay(files)\n          //   // console.log('isSupportVideo ====>', isSupportVideo);\n          //   await videoImg(val, async (flag) => {\n          //     val.msgBody.isSupportVideo = flag;\n          //     if (val.msgId) {\n          //       await this.updateMessageByMsgId(val);\n          //     }\n          //   });\n          // }\n        }\n        this.messageItem = val;\n      }\n    },\n    soundUrlObj: {\n      deep: true,\n      immediate: true,\n      handler: function() {\n        if (this.messageItem.msgId !== this.soundUrlObj.id) {\n          this.soundUrl = this.getSoundPng;\n        }\n        if (this.messageItem.msgId === this.soundUrlObj.id) {\n          this.soundUrl = this.soundUrlObj.image;\n        }\n      }\n    },\n    getMyInfo: {\n      deep: true,\n      handler: function({ vipType, id }) {\n        let { fromId, msgType } = this.item;\n        if (msgType == 9 && fromId == id) {\n          //更新会员信息 语音图标\n          this.$set(this.messageItem, 'vipType', vipType);\n          this.soundUrl = this.getSoundPng;\n        }\n      }\n    },\n    // 单聊绑定userInfo(对方);\n    userInfo: {\n      deep: true,\n      handler(v) {\n        if (v) {\n          // console.log(v,v.vipType)\n          this.soundUrl = this.getSoundPng;\n        }\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['actionCurrentMsgId']),\n    replaceEmoji(newVal) {\n      let originText;\n      let arr;\n      if (newVal) {\n        originText = newVal;\n        arr = originText.match(this.patt);\n      }\n      if (arr && originText) {\n        for (let index = 0; index < arr.length; index++) {\n          let item = arr[index];\n          let ret = this.emojiList.find(x => x.tag == item);\n          if (ret) {\n            /*eslint max-len: [\"error\", { \"code\": 140 }]*/\n            let img = `<img src=\"/resources/emoji/${ret.file}\" width=22px style=\"vertical-align: middle;margin: -5px 2px 0 2px\" />`;\n            originText = originText.replace(item, img);\n          }\n        }\n      }\n      return originText;\n    },\n    showMergeTransferMessageDialog() {\n      console.log('showMergeTransferMessageDialog- ',this.messageItem)\n      this.messageItem.msgBody.msgs.forEach(item => {\n        item.uniqueCode = this.messageItem.uniqueCode;\n        item.targetType = this.messageItem.targetType;\n      });\n      this.$nextTick(() => {\n        this.$refs.mergeTransferMessageDialog.onPop();\n      });\n    },\n    prefixInteger(num) {\n      return (Array(2).join('0') + num).slice(-2);\n    },\n    loadImg() {\n      // console.log(\"11111111111111111111111111\")\n      //加载图片完成后，scroll到最下面，防止图片加载过慢时，屏幕在中间的情况\n      // 加判断条件：第一屏消息，否则加载更多时，总是滚动到最底部\n      if(this.chatList?.[this.chatList.length-1]?.reqId==this.messageItem.reqId && this.chatList.length < 31){\n        this.scrollToBottom()\n      }\n      // this.$emit('scrollBottom');\n    },\n    refreshDownloadPercentInStore() {\n      this.messageItem.msgBody.timer = setInterval(() => {\n        if (this.downloadFileInfo && this.downloadFileInfo[this.messageItem.msgBody.reqId]) {\n          this.messageItem.msgBody.downloadFinished = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished;\n          this.messageItem.msgBody.downloadPercent = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadPercent;\n          this.messageItem.msgBody.downloadPath = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadPath;\n        } else {\n          this.stopLoadDownloadPercent();\n        }\n        if (this.messageItem.msgBody.downloadFinished) {\n          this.stopLoadDownloadPercent();\n        }\n      }, 1000);\n    },\n    stopLoadDownloadPercent() {\n      clearInterval(this.messageItem.msgBody.timer);\n      this.messageItem.msgBody.timer = null;\n    },\n    viewerShowChild(item) {\n      // 没有下载完成的视频点击无效\n      if (item.msgType == '10' && this.videoDownloadPercent[item.msgId]<100) return;\n      //TODO 组件通用化 禁止直接使用$parent\n      if (item.sendStatus != 1 && item.sendStatus != -1) {\n        this.$parent.viewerShow(item);\n      }\n    },\n    async handArm(val) {\n      await this.$nextTick();\n      let obj = JSON.parse(JSON.stringify(this.messageItem)),timer;\n      this.$emit('handArm', val, this.messageItem.msgId, obj);\n      timer = setTimeout(()=>{\n        this.$emit('acceptMessage',this.messageItem);\n        clearTimeout(timer);\n        timer = null;\n      },1000)\n\n    },\n    async downloadFile(fileItem) {\n      const fullPath = await fileOperational.downloadFile(fileItem.fileId, fileItem.fname);\n      let fileState = { key: fileItem.reqId, value: {} };\n      fileState.value.downloadPercent = '100%';\n      fileState.value.downloadPath = fullPath;\n      fileState.value.downloadFinished = true;\n      this.messageItem.msgBody.downloadPercent = '100%';\n      this.messageItem.msgBody.downloadPath = fullPath;\n      this.messageItem.msgBody.downloadFinished = true;\n      this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n    },\n    async saveFileAs(fileItem) {\n      if (!fileItem.downloadPath) return;\n      let filePath = fileItem.downloadPath.replace('\\\\', '/');\n      console.log('file-path', filePath);\n      fs.exists(filePath, exists => {\n        if (!exists) {\n          this.$message.error(this.$t('chat_0097'));\n        } else {\n          const ipc = require('electron').ipcRenderer;\n          ipc.send('saveAsFile', fileItem);\n        }\n      });\n    },\n    debounce(fn, delay) {\n      delay = delay || 200;\n      let timer;\n      return function() {\n        let th = this;\n        let args = arguments;\n        if (timer) {\n          clearTimeout(timer);\n        }\n        timer = setTimeout(function() {\n          timer = null;\n          fn.apply(th, args);\n        }, delay);\n      };\n    },\n    startDownloadFile(fileItem) {\n      this.$refs.downloadbutton.style.visibility = 'hidden';\n      this.$nextTick(() => {\n        this.downFile(fileItem);\n      });\n    },\n    async downFile(fileItem) {\n      console.log('downFile--fileItem--', fileItem);\n      this.downloadLoading = true;\n      if (fileItem.downloadPercent == undefined) {\n        this.messageItem.msgBody.reqId = this.messageItem.reqId;\n        this.messageItem.msgBody.downloadPercent = '';\n        this.messageItem.msgBody.downloadFinished = false;\n        this.messageItem.msgBody.downloadPath = '';\n        fileItem.reqId = this.messageItem.reqId;\n        fileItem.downloadPercent = '';\n        fileItem.downloadFinished = false;\n        fileItem.downloadPath = '';\n      }\n      const percentFloat = fileItem.downloadPercent.slice(0, -1) / 100;\n      if (0 < percentFloat && percentFloat < 1) return;\n      let configDir = path.join(remote.app.getPath('appData'), `${process.env.VUE_APP_ID}`);\n      let baseDir = path.join(configDir, 'files');\n      mkdir(baseDir);\n      let receivedBytes = 0;\n      let totalBytes = 0;\n      let fileName = fileItem.fname;\n      let fullPath = '';\n      if (checkIsExists(baseDir, fileName)) {\n        let i = 1;\n        let suffixIndex = fileName.lastIndexOf('.');\n        let fileNamePrefix = fileName.substr(0, suffixIndex);\n        let fileNameSuffix = fileName.substr(suffixIndex);\n        let isExistsFileName = fileNamePrefix\n          .concat('(')\n          .concat('' + i)\n          .concat(')')\n          .concat(fileNameSuffix);\n        while (checkIsExists(baseDir, isExistsFileName)) {\n          ++i;\n          isExistsFileName = fileNamePrefix\n            .concat('(')\n            .concat('' + i)\n            .concat(')')\n            .concat(fileNameSuffix);\n        }\n        fileName = isExistsFileName;\n      }\n      fullPath = path.join(baseDir, fileName);\n      let fileState = { key: fileItem.reqId, value: {} };\n      console.log('fileState', fileState);\n      fileState.value.downloadPercent = '';\n      fileState.value.downloadFinished = false;\n      fileState.value.downloadPath = '';\n      this.messageItem.msgBody.downloadPercent = '';\n      this.messageItem.msgBody.downloadFinished = false;\n      this.messageItem.msgBody.downloadPath = '';\n      this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n      this.refreshDownloadPercentInStore();\n\n      const req = request({\n        method: 'GET',\n        uri: fileItem.fileId,\n        strictSSL: false\n      });\n\n      req.pipe(fs.createWriteStream(fullPath));\n\n      req.on('response', data => {\n        console.log('response-data', data);\n        // 更新总文件字节大小\n        totalBytes = parseInt(data.headers['content-length'], 10);\n        console.log('response-totalBytes', totalBytes);\n      });\n\n      req.on('data', chunk => {\n        // 更新下载的文件块字节大小\n        receivedBytes += chunk.length;\n        fileState.value.downloadPercent = ((receivedBytes / totalBytes) * 100).toFixed(0) + '%';\n        this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n        this.downloadLoading = false;\n      });\n      req.on('error', async () => {\n        fileState.value.downloadPercent = '';\n        fileState.value.downloadFinished = false;\n        fileState.value.downloadPath = '';\n        this.downloadLoading = false;\n        this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n        await SQLUtils.updateDownloadFileMsgBody(fileState, this.friendId);\n      });\n      req.on('end', async () => {\n        fileState.value.downloadPath = fullPath;\n        fileState.value.downloadFinished = true;\n        this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n        await SQLUtils.updateDownloadFileMsgBody(fileState, this.friendId);\n      });\n    },\n    onOpenFile(item) {\n      if (!item.msgBody.downloadPercent && !item.msgBody.downloadFinished) {\n        this.downFile(item.msgBody);\n      }\n      if (item.msgBody.downloadFinished && this.isShowRight) {\n        if(process.platform==='darwin'){\n          this.$remote.getCurrentWindow().previewFile(item.msgBody.downloadPath.replace(\"file:///\",\"\"))\n        }else{\n          this.openFile(item);\n        }\n      }\n    },\n    openFile(item) {\n      if (!item.msgBody.downloadPath) return;\n      let filePath = item.msgBody.downloadPath.replace('\\\\', '/');\n      fs.exists(filePath, exists => {\n        if (!exists) {\n          this.$message.error(this.$t('chat_0097'));\n        } else {\n          let path = item.msgBody.downloadPath.replace(/\\\\/g, '\\\\\\\\');\n          if (otherVideoTypeArr.includes(item.msgBody.format)) {\n            // 不支持的视频格式\n            this.$confirm(\n              this.$t('chat_0122'),\n              this.$t('Universal_0059'),\n              {\n                confirmButtonText: this.$t('Universal_0356'),\n                cancelButtonText: this.$t('Universal_0063'),\n                type: \"info\",\n              }\n            ).then(() => {\n              eShell.showItemInFolder(item.msgBody.downloadPath);\n            }).catch(e => {\n              console.error(e);\n            });\n            return;\n          } else {\n            eShell.openPath(path);\n          }\n        }\n      });\n    },\n    delFileListHand(item) {\n      this.$emit('delMsg', 2, item);\n    },\n    rightClick(e) {\n      console.log('rightClick=====>');\n      //判断群聊是否封停\n      if(this.showAppealClosureNotice){\n        let message = this.fromGroupType === 'group' ? this.$t('appeal_0013') : this.$t('appeal_0014');\n        this.$message.error(message);\n        return;\n      }\n      if (\n        this.messageItem.msgType == 11 ||\n          (this.messageItem.msgType != '14' &&\n              this.messageItem.msgType != '16' &&\n              this.messageItem.sendStatus != 1 &&\n              this.messageItem.sendStatus != -1 &&\n              this.messageItem.isDecrypt != 0)\n      ) {\n        e.preventDefault();\n        this.addClick();\n      }else if(\n        this.messageItem.msgType == 11 ||\n          (this.messageItem.msgType != '14' &&\n              this.messageItem.msgType != '16' &&\n              this.messageItem.sendStatus == -1 &&\n              this.messageItem.isDecrypt != 0)\n      ){\n        e.preventDefault();\n        this.addClickFailMsg();\n      }\n    },\n    delFileChatListHand(item) {\n      this.$emit('delMsg', 2, item);\n    },\n    addClick() {\n      console.log('右击item  ', this.messageItem);\n      let infocard;\n      let fileName;\n      if (this.messageItem.msgBody && this.messageItem.msgType == 15 && !(this.messageItem.msgBody instanceof Object)) {\n        let msgBody = JSON.parse(this.messageItem.msgBody);\n        infocard = msgBody.type == 1 ? `[${this.$t('chat_0021')}]${msgBody.name}` : `[${this.$t('chat_0023')}]${msgBody.name}`;\n      } else {\n        let card = this.messageItem.msgBody.type == 1 ? '['+this.$t('chat_0021')+']' : '['+this.$t('chat_0023')+']';\n        infocard = `${card}${this.messageItem.msgBody.name}`;\n      }\n      if (this.messageItem.msgBody && this.messageItem.msgType == 6 && !(this.messageItem.msgBody instanceof Object)) {\n        let msgBody = JSON.parse(this.messageItem.msgBody);\n        fileName = msgBody.fname ? `${this.$t('chat_0017')}${msgBody.fname}` : `${this.$t('chat_0017')}${msgBody.fileName}`;\n      } else {\n        fileName = this.messageItem.msgBody.fname\n          ? `${this.$t('chat_0017')}${this.messageItem.msgBody.fname}`\n          : `${this.$t('chat_0017')}${this.messageItem.msgBody.fileName}`;\n      }\n      const quoteMsg = {\n        1: this.messageItem.msgBody.text,\n        2: this.$t('chat_0013'),\n        15: infocard,\n        10: this.$t('chat_0015'),\n        6: fileName,\n        25: this.messageItem.msgBody.text,\n        56: this.$t('Universal_0454')+' '+this.messageItem.msgBody.text\n      }[this.messageItem.msgType];\n      const quotTypes = ['1', '2', '6', '10', '15', '25', '40', '56'];\n      const isAudioMessage = this.messageItem.msgType == 11;\n      const rightClickOptions = [\n        //   {\n        //   name: \"复制\",\n        //   fun: () => {\n        //     const buffer = Buffer.from(this.messageItem.text, 'utf8')\n        //     clipboard.writeBuffer('public.utf8-plain-text', buffer)\n        //   }\n        // },\n      ];\n      if (this.messageItem.msgType == '1' || this.messageItem.msgType == '25' || this.messageItem.msgType == '2') {\n        if (this.messageItem.msgType == '2') {\n          const fileName = fileOperational.getFileName(this.messageItem.msgBody.mediaId);\n          if (fileName.split('.')[1] != 'gif') {\n            rightClickOptions.push({\n              name: this.$t('chat_0026'),\n              fun: () => {\n                this.$parent.copyText(this.messageItem);\n              }\n            });\n          }\n        } else {\n          rightClickOptions.push({\n            name: this.$t('chat_0026'),\n            fun: () => {\n              this.$parent.copyText(this.messageItem);\n            }\n          });\n        }\n      }\n      this.messageItem.msgType = this.messageItem.msgType + '';\n      // 转发\n      if (this.messageItem.msgType != '9' && !isAudioMessage) {\n        rightClickOptions.push({\n          name: this.$t('chat_0027'),\n          fun: () => {\n            // store.commit(SET_TRANSFER_ITEM, [this.messageItem]);\n            this.$parent.showDialogRelay([this.messageItem]);\n          }\n        });\n      }\n      if (this.messageItem.msgType != '40' && quotTypes.indexOf(this.messageItem.msgType) > -1) {\n        rightClickOptions.push({\n          name: this.$t('chat_0028'),\n          fun: () => {\n            this.$parent.transferQuote(this.messageItem, quoteMsg);\n          }\n        });\n      }\n\n      // 文件另存为\n      if (this.messageItem.msgType == '6' && this.messageItem.msgBody.downloadFinished) {\n        rightClickOptions.push({\n          name: this.$t('Universal_0357'),\n          fun: () => {\n            this.saveFileAs(this.messageItem.msgBody);\n          }\n        });\n      }\n      // 自己发的消息任何时候都可以撤回\n      if (\n        !isAudioMessage &&\n          (this.messageItem.fromId == localStorage.getItem('userId') ||\n              (this.messageItem.targetType == 2 && [1, 2].includes(this.groupAuthByUser)))\n      ) {\n        rightClickOptions.push({\n          name: this.$t('chat_0031'),\n          fun: () => {\n            console.log('撤回');\n            this.$emit('withdrawMessage', this.messageItem);\n          }\n        });\n      }\n      rightClickOptions.push({\n        name: this.$t('chat_0032'),\n        fun: () => {\n          this.$emit('delMsg', 2, this.messageItem);\n        }\n      });\n      if (quotTypes.indexOf(this.messageItem.msgType) > -1) {\n        rightClickOptions.push({\n          name: this.$t('Universal_0044'),\n          fun: () => {\n            this.$emit('mutiChoose', this.messageItem.msgId);\n          }\n        });\n      }\n      if (!this.isShowRight) {\n        return;\n      } else {\n        return this.$RightClick(rightClickOptions).popup({\n          window: remote.getCurrentWindow()\n        });\n      }\n\n    },\n    addClickFailMsg(){\n      const rightClickOptions = [];\n      // 重发\n      rightClickOptions.push({\n        name: this.$t('Universal_0048'),\n        fun: async () => {\n          this.messageItem.sendStatus = 1;\n          this.messageItem.fromResend = true;\n          await SQLUtils.sendMessageStatusSending(this.messageItem.targetId, this.messageItem.reqId);\n          if (this.messageItem.msgType == 2) {\n            this.messageItem.path = this.messageItem.msgBody.path;\n            this.messageItem.reqId = this.messageItem.msgBody.reqId;\n            this.messageItem.size = this.messageItem.msgBody.fsize;\n            this.messageItem.fileType = this.messageItem.msgBody.format\n            this.messageItem.fromId = this.messageItem.msgBody.fromId;\n            this.messageItem.friendId = this.messageItem.msgBody.friendId;\n            console.log('messageItem ====>',this.messageItem);\n            this.$emit('handSendImg', this.messageItem);\n          }\n          if (this.messageItem.msgType == 6) {\n            this.$emit('reHandSendFile', this.messageItem.msgBody);\n          }\n          if (this.messageItem.msgType == 10) {\n            this.$emit('reHandSendVideo', this.messageItem.msgBody);\n          } else if (this.messageItem.msgType == 1 || this.messageItem.msgType == 25 \n          || this.messageItem.msgType == 15 || this.messageItem.msgType == 40) {\n            await this.$store.dispatch('CHAT_REST_SEND', { ...this.messageItem });\n          }\n        }\n      });\n      // // 复制 \n      // rightClickOptions.push({\n      //   name: this.$t('chat_0026'),\n      //   fun: () => {\n      //     this.$parent.copyText(this.messageItem);\n      //   }\n      // });\n      // 删除\n      rightClickOptions.push({\n        name: this.$t('chat_0032'),\n        fun: () => {\n          this.$emit('delMsg', 2, this.messageItem);\n        }\n      });\n      if (!this.isShowRight) {\n        return;\n      } else {\n        return this.$RightClick(rightClickOptions).popup({\n          window: remote.getCurrentWindow()\n        });\n      }\n    },\n    findImage(item) {\n      // const { localPath } = item.msgBody;\n      const { localId } = item.msgBody;\n\n      // console.log('path ===>', localPath);\n      item.msgBody.localId = fileOperational.getImage(item.msgBody.mediaId);\n      let W = item.msgBody.width;\n      let H = item.msgBody.height;\n      let R = W / H;\n      if (R > 3) {\n        if (W >= 120) {\n          this.rate = 'Hcale40Midwidth';\n        } else {\n          this.rate = 'Hcale3Midwidth';\n        }\n      }\n      if (1 <= R && R <= 3) {\n        if (W >= 120) {\n          this.rate = 'midwidth';\n        } else {\n          this.rate = 'origin';\n        }\n      }\n      if (1 / 3 <= R && R < 1) {\n        if (H >= 100) {\n          this.rate = 'midhight';\n        } else {\n          this.rate = 'origin';\n        }\n      }\n      if (R < 1 / 3) {\n        if (H >= 100) {\n          this.rate = 'Wcale30MidHight';\n        } else {\n          this.rate = 'Wcale3MidHight';\n        }\n      }\n      // if (localPath && checkIsExists(localPath)) {\n      //   return `file://${localPath}`;\n      // }\n      if (localId && checkIsExists(localId)) {\n        return item.msgBody.localId\n      }\n      return fileOperational.getImage(item.msgBody.mediaCondenseId);\n      // return fileOperational.getImage(item.msgBody.mediaId || item.msgBody.mediaCondenseId);\n    },\n    getFileType(format) {\n      if (format == 'zip' || format == 'rar' || format == 'pdf') {\n        return format;\n      } else if (format == 'doc' || format == 'docx') {\n        return 'word';\n      } else if (format == 'ppt' || format == 'pptx') {\n        return 'ppt';\n      } else if (format == 'xls' || format == 'xlsx' || format == 'csv') {\n        return 'excel';\n      } else if (format == 'txt') {\n        return 'txt';\n      } else {\n        return 'icon_un';\n      }\n    },\n    initFile() {\n      if (this.messageItem.msgBody.downloadPercent == '100%' && this.messageItem.msgBody.downloadFinished) {\n        return;\n      }\n      let downloadFileInfo = store.state.common.downloadFile;\n      if (downloadFileInfo && downloadFileInfo[this.messageItem.msgBody.reqId]) {\n        this.messageItem.msgBody.downloadFinished = downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished;\n        this.messageItem.msgBody.downloadPercent = downloadFileInfo[this.messageItem.msgBody.reqId].downloadPercent;\n        this.messageItem.msgBody.downloadPath = downloadFileInfo[this.messageItem.msgBody.reqId].downloadPath;\n        this.refreshDownloadPercentInStore();\n        if (downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished) {\n          clearInterval(this.messageItem.msgBody.timer);\n          this.messageItem.msgBody.timer = null;\n        }\n      }\n    },\n    resendCallAudio() {\n      this.$parent.callAudio();\n    },\n    handleUserSelectText(){\n      this.actionCurrentMsgId(this.item?.msgId)\n    },\n\n    // 不处理tiff\n    // async showTiff(item, url) {\n    //   let xhr = new XMLHttpRequest();\n    //   xhr.responseType = 'arraybuffer';\n    //   xhr.open('GET', url);\n    //   let _this = this;\n    //   xhr.onload = async function () {\n    //     let tiff = new Tiff({buffer: xhr.response});\n    //     const imgData = await tiff.toDataURL();\n    //     _this.messageItem.msgBody.tiffPath = imgData;\n    //     _this.tiffKey = Math.random(); // 保存每次都能渲染成功\n    //     await _this.updateMessageByMsgId(_this.messageItem);\n    //   };\n    //   await xhr.send();\n    // },\n    \n    // 自动下载视频\n    async downloadVideo(file) {\n      console.log('online自动下载视频')\n      let url = file.msgBody.fileId;\n      let fileName = '';\n      let arr = file.msgBody.fileId.split('.');\n      let format = arr[arr.length - 1];\n      fileName = file.reqId+'.'+format;\n      let localPath = path.join(baseDir, fileName);\n      if (checkUrl(url)) {\n        mkdir(baseDir);\n        const exists = await checkVideoIsExists(baseDir, fileName);\n        if (exists) {\n          file.msgBody.downloadPath = localPath;\n        }\n        if (!exists) {\n          console.log('不存在，下啊')\n          await this.download(file, url, localPath);\n        }\n      }\n    },\n    // 自动下载\n    async download(fileItem, url, path) {\n      // 下载\n      const bakPath = path + '-bak';\n      // 下载之前先清除历史数据\n      if (checkFileIsExists(bakPath)) {\n        fs.unlinkSync(bakPath);\n      }\n      let receivedBytes = 0;\n      let totalBytes = 0;\n      fileItem.msgBody.downloadLoading = true;\n      fileItem.msgBody.downloadPath = path;\n      fileItem.msgBody.downloadPercent = 0;\n      fileItem.msgBody.downloadFinished = false;\n      await this.updateMessageByMsgId(fileItem);\n      const req = await request({\n        method: 'GET',\n        url,\n        strictSSL: false\n      });\n      req.pipe(fs.createWriteStream(path));\n      req.on('response', data => {\n        // 更新总文件字节大小\n        totalBytes = parseInt(data.headers['content-length'], 10);\n        console.log('response-totalBytes', totalBytes);\n      });\n      req.on('data', chunk => {\n        // 更新下载的文件块字节大小\n        receivedBytes += chunk.length;\n        let percent = Number(((receivedBytes / totalBytes) * 100).toFixed(0));\n        if (fileItem.msgBody.downloadPercent < percent) {\n          fileItem.msgBody.downloadPercent = percent;\n          this.$store.commit('CHAT_VIDEO_DOWNLOAD_PERCENT', {\n            msId: fileItem.msgId,\n            percent: fileItem.msgBody.downloadPercent\n          });\n          this.messageItem.msgBody = fileItem.msgBody; // 保证中途发送别的消息时，进度条能正常进行\n        }\n      });\n      req.on('error', async () => {\n        fileItem.msgBody.downloadPercent = 0;\n        fileItem.msgBody.downloadFinished = false;\n        fileItem.msgBody.downloadPath = '';\n        fileItem.msgBody.downloadLoading = false;\n        this.messageItem.msgBody = fileItem.msgBody;\n        this.$store.commit('CHAT_VIDEO_DOWNLOAD_PERCENT', {msId: fileItem.msgId, percent: 0});\n        await this.updateMessageByMsgId(this.messageItem);\n      });\n      req.on('end', async () => {\n        fileItem.msgBody.downloadPercent = 100;\n        fileItem.msgBody.downloadFinished = true;\n        fileItem.msgBody.downloadPath = path;\n        fileItem.msgBody.downloadLoading = false;\n        const files = new FileUpload(fileItem.msgBody.downloadPath,fileItem.reqId);\n        const isSupportVideo = await this.isSupportVideoPlay(files)\n        fileItem.msgBody.isSupportVideo = isSupportVideo\n        console.log('isSupportVideo ====>', isSupportVideo);\n        this.messageItem.msgBody = fileItem.msgBody;\n        this.$store.commit('CHAT_VIDEO_DOWNLOAD_PERCENT', {msId: fileItem.msgId, percent: 100});\n        await this.updateMessageByMsgId(fileItem);\n        console.log('end-- ',fileItem.msgBody)\n      });\n    },\n\n    // 判断是否支持播放\n    async isSupportVideoPlay(files) {\n      let isSupportVideo = false\n      const res = await files.getVideoCodeC();\n      // video 标签 支持 Mp4格式 H264编码  WebM格式 VP8编码  Ogg格式 Theora编码\n      if (videoCode.indexOf(res.metadata?.video?.codec) > -1 ) {\n        isSupportVideo = true\n      }\n      console.log('isSupportVideo ===>', isSupportVideo);\n      return isSupportVideo\n    },\n\n    /** 根据MSG ID 更新消息 */\n    async updateMessageByMsgId(msgInfo) {\n      let msgBody = msgInfo.msgBody;\n      if (!msgInfo.msgId) {\n        throw new Error('msgId不存在');\n      }\n      let id;\n      if (msgInfo.uniqueCode) {\n        id = parseUniqueCode(msgInfo.uniqueCode, msgInfo.targetType);\n      } else {\n        throw new Error('uniqueCode不存在');\n      }\n      let tableName = `m_${id}`;\n      await window.vm\n        .$knex(tableName)\n        .where({\n          msg_id: msgInfo.msgId\n        })\n        .update({\n          msg_body: JSON.stringify(msgBody)\n        });\n    },\n    goActivityPage(msgInfo){\n      console.log(msgInfo)\n      goOfficialPage()\n      // msgInfo.msgBody?.url && eShell.openExternal(msgInfo.msgBody.url);\n    },\n    handlerImgErr(e){\n      // console.log(e.target.style)\n      e.target.style.width=\"50px\"\n      e.target.style.height=\"80px\"\n      e.target.style.opacity=0;\n    }\n  },\n  mounted() {\n    if (this.messageItem.msgType == '6') {\n      this.initFile();\n    }\n  },\n  beforeUpdate() {\n    if (this.messageItem.msgType == '6') {\n      this.initFile();\n    }\n  },\n  beforeDestroy() {\n    if (this.amr) {\n      this.shopVideo();\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.midwidth {\n  width: 120px;\n  object-fit: cover;\n  object-position: center;\n  height: auto;\n}\n.midhight {\n  height: 100px;\n  width: auto;\n  object-fit: cover;\n  object-position: center;\n}\n.Hcale40Midwidth {\n  height: 40px;\n  width: 120px;\n  object-fit: cover;\n  object-position: center;\n}\n.Wcale30MidHight {\n  width: 30px;\n  height: 100px;\n  object-fit: cover;\n  object-position: center;\n}\n\n.Hcale3Midwidth,\n.Wcale3MidHight {\n  object-fit: cover;\n  object-position: center;\n}\n.carte {\n  p {\n    border-top: #eee solid 1px;\n    margin-top: 5px;\n    line-height: 20px;\n    padding-top: 5px;\n  }\n  .topitem {\n    padding-left: 20px;\n  }\n  .cardinfo {\n    display: flex;\n    width: 200px;\n\n    .cardName {\n      color: #333;\n      display: inline-block;\n      max-width: 110px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: pre;\n      .name {\n        color: #333;\n        max-width: 75%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n    }\n\n    img,\n    span {\n      vertical-align: middle;\n    }\n\n    img {\n      border: #ddd solid 1px;\n      width: 40px;\n      height: 40px;\n      border-radius: 20px;\n      display: inline-block;\n    }\n\n    span {\n      // padding-left: 20px;\n      line-height: 20px;\n    }\n  }\n}\n\n.file-title {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  display: -webkit-box;\n  line-clamp: 2;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  // font-size: 14px;\n  color: #000;\n  // line-height: 17px;\n}\n\n.file-size {\n  font-size: 12px !important;\n  color: #999 !important;\n}\n.videoShow {\n  max-width: 100%;\n  min-height: 100%;\n  &.height140 {\n    max-height: 140px;\n  }\n  &.height170 {\n    max-height: 170px;\n  }\n}\n.videoStart {\n  position: absolute;\n  // left: 44%;\n  // top: 44%;\n  top: 50%;\n  transform: translateY(-50%);\n  -webkit-transform: translateY(-50%);\n  font-size: 40px;\n  color: whitesmoke;\n}\n.progress-mask {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, .5);\n}\n.downloadProcess {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  -webkit-transform: translateY(-50%);\n}\n.mergeTransferClass {\n  font-size: 12px;\n  width: 220px;\n  cursor: pointer;\n  .title {\n    font-weight: 500;\n    font-size: 13px;\n  }\n  .content {\n    color: #999999;\n    li {\n      span {\n        width: 220px;\n      }\n      .text {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        line-height: 20px;\n      }\n      .user-sign {\n        word-break: break-all;\n        font-size: 12px;\n        font-weight: 500;\n        color: rgba(153, 153, 153, 1);\n        line-height: 20px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: -webkit-box;\n        -webkit-line-clamp: 1;\n        -webkit-box-orient: vertical;\n        -webkit-box-flex: 1;\n      }\n    }\n  }\n  .mergeDivider {\n    margin: 1px 0;\n    background-color: #b7b7b7;\n  }\n}\n.videoMsg {\n  position: relative;\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.telephone-class {\n  width: 14px;\n  height: 16px;\n  padding-right: 10px;\n  margin-bottom: -4px;\n}\n.audio-call-class {\n  cursor: pointer;\n}\n.imgMsg {\n  position: relative;\n  width: fit-content;\n  .el-icon-loading {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n.acitivity{\n  max-width: 200px;\n  padding: 0;\n  font-family: PingFangSC, PingFangSC-Regular;\n  font-weight: 400;\n  img{\n    max-width: 100%;\n    display: block;\n  }\n  .title{\n    margin-top: 5px;\n    font-size: 14px; \n    color: #333333;\n    line-height: 20px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n  .content{\n    font-size: 12px;\n    text-align: left;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    color: #999999;\n    line-height: 17px;\n  }\n  .bottom{\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    margin-top: 5px;\n    img{\n      width: 16px;\n    }\n    p{\n      margin-left: 5px;\n      font-size: 11px;\n      text-align: left;\n      color: #999999;\n      line-height: 16px;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".midwidth": {
          "width": "120px",
          "object-fit": "cover",
          "object-position": "center",
          "height": "auto"
        },
        ".midhight": {
          "height": "100px",
          "width": "auto",
          "object-fit": "cover",
          "object-position": "center"
        },
        ".Hcale40Midwidth": {
          "height": "40px",
          "width": "120px",
          "object-fit": "cover",
          "object-position": "center"
        },
        ".Wcale30MidHight": {
          "width": "30px",
          "height": "100px",
          "object-fit": "cover",
          "object-position": "center"
        },
        ".Hcale3Midwidth,.Wcale3MidHight": {
          "object-fit": "cover",
          "object-position": "center"
        },
        ".carte": {
          "p": {
            "border-top": "#eee solid 1px",
            "margin-top": "5px",
            "line-height": "20px",
            "padding-top": "5px"
          },
          ".topitem": {
            "padding-left": "20px"
          },
          ".cardinfo": {
            "display": "flex",
            "width": "200px",
            ".cardName": {
              "color": "#333",
              "display": "inline-block",
              "max-width": "110px",
              "overflow": "hidden",
              "text-overflow": "ellipsis",
              "white-space": "pre",
              ".name": {
                "color": "#333",
                "max-width": "75%",
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "white-space": "nowrap"
              }
            },
            "img,    span": {
              "vertical-align": "middle"
            },
            "img": {
              "border": "#ddd solid 1px",
              "width": "40px",
              "height": "40px",
              "border-radius": "20px",
              "display": "inline-block"
            },
            "span": {
              "line-height": "20px"
            }
          }
        },
        ".file-title": {
          "text-overflow": "ellipsis",
          "overflow": "hidden",
          "display": "-webkit-box",
          "line-clamp": "2",
          "-webkit-line-clamp": "2",
          "-webkit-box-orient": "vertical",
          "color": "#000"
        },
        ".file-size": {
          "font-size": "12px !important",
          "color": "#999 !important"
        },
        ".videoShow": {
          "max-width": "100%",
          "min-height": "100%",
          "&.height140": {
            "max-height": "140px"
          },
          "&.height170": {
            "max-height": "170px"
          }
        },
        ".videoStart": {
          "position": "absolute",
          "top": "50%",
          "transform": "translateY(-50%)",
          "-webkit-transform": "translateY(-50%)",
          "font-size": "40px",
          "color": "whitesmoke"
        },
        ".progress-mask": {
          "position": "absolute",
          "left": "0",
          "top": "0",
          "width": "100%",
          "height": "100%",
          "background": "rgba(0, 0, 0, .5)"
        },
        ".downloadProcess": {
          "position": "absolute",
          "top": "50%",
          "transform": "translateY(-50%)",
          "-webkit-transform": "translateY(-50%)"
        },
        ".mergeTransferClass": {
          "font-size": "12px",
          "width": "220px",
          "cursor": "pointer",
          ".title": {
            "font-weight": "500",
            "font-size": "13px"
          },
          ".content": {
            "color": "#999999",
            "li": {
              "span": {
                "width": "220px"
              },
              ".text": {
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "white-space": "nowrap",
                "line-height": "20px"
              },
              ".user-sign": {
                "word-break": "break-all",
                "font-size": "12px",
                "font-weight": "500",
                "color": "rgba(153, 153, 153, 1)",
                "line-height": "20px",
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "display": "-webkit-box",
                "-webkit-line-clamp": "1",
                "-webkit-box-orient": "vertical",
                "-webkit-box-flex": "1"
              }
            }
          },
          ".mergeDivider": {
            "margin": "1px 0",
            "background-color": "#b7b7b7"
          }
        },
        ".videoMsg": {
          "position": "relative",
          "width": "fit-content",
          "display": "flex",
          "align-items": "center",
          "justify-content": "center"
        },
        ".telephone-class": {
          "width": "14px",
          "height": "16px",
          "padding-right": "10px",
          "margin-bottom": "-4px"
        },
        ".audio-call-class": {
          "cursor": "pointer"
        },
        ".imgMsg": {
          "position": "relative",
          "width": "fit-content",
          ".el-icon-loading": {
            "position": "absolute",
            "left": "50%",
            "top": "50%",
            "transform": "translate(-50%, -50%)"
          }
        },
        ".acitivity": {
          "max-width": "200px",
          "padding": "0",
          "font-family": "PingFangSC, PingFangSC-Regular",
          "font-weight": "400",
          "img": {
            "max-width": "100%",
            "display": "block"
          },
          ".title": {
            "margin-top": "5px",
            "font-size": "14px",
            "color": "#333333",
            "line-height": "20px",
            "overflow": "hidden",
            "text-overflow": "ellipsis",
            "display": "-webkit-box",
            "-webkit-line-clamp": "2",
            "line-clamp": "2",
            "-webkit-box-orient": "vertical"
          },
          ".content": {
            "font-size": "12px",
            "text-align": "left",
            "overflow": "hidden",
            "white-space": "nowrap",
            "text-overflow": "ellipsis",
            "color": "#999999",
            "line-height": "17px"
          },
          ".bottom": {
            "display": "flex",
            "align-items": "center",
            "justify-content": "flex-start",
            "margin-top": "5px",
            "img": {
              "width": "16px"
            },
            "p": {
              "margin-left": "5px",
              "font-size": "11px",
              "text-align": "left",
              "color": "#999999",
              "line-height": "16px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/components/chat/SearchInfo.vue",
    "tagInfo": {
      "0": "<style scoped>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- (群/讨论组，群分享，单聊发起讨论组-右侧成员-添加)-搜索结果列表 -->\n<template>\n  <div ref=\"searchContent\" v-loading=\"loading\" >\n    <div\n      v-show=\"\n        friendsDataMin.length == 0 &&\n          groupsData.length == 0 &&\n          discussionsData.length == 0\n      \"\n      class=\"no-data\"\n    >\n      <img src=\"../../assets/images/web.png\" class=\"img_search\" />\n      <p>{{ $t('Universal_0173') }}</p>\n    </div>\n    <div class=\"list contacts\" v-show=\"friendsDataMin.length > 0\">\n      <p>\n        {{ $t('chat_search_0003') }}\n        <span @click=\"showAll\" v-show=\"isShowAll\">{{ $t('Universal_0271') }}</span>\n      </p>\n      <ul>\n        <li\n          v-for=\"(item, index) in friendsDataMin\"\n          :key=\"'friend' + index\"\n          :class=\"{active3:indexAt == item.indexAt}\" \n          :id=\"item.inviteCode\" \n          disName=\"1\"\n          @click.stop.prevent=\"addInviteHand(item)\"\n        >\n          <MemberIcon\n            :image=\"item.friendHeadImg\"\n            iconType=\"mini\"\n            :vipType=\"item.vipType\"\n            :userRank=\"item.userRank\"\n            class=\"search-member-icon\"\n          />\n          <div class=\"flex flex-direction name-notes-id\">\n            <div class=\"nick-name\">\n              <span v-html=\"item.nickName\"></span>\n\n              <LevelIcon\n                :inviteCode=\"item.inviteCode\"\n                :userRank=\"item.userRank\"\n                iconType=\"small\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n              />\n            </div>\n            <LuckIdIcon\n              :inviteCode=\"item.inviteCode\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :listFlag=\"false\"\n            />\n            <div class=\"friend-notes\" v-show=\"item.showNotes\">\n              <span>{{ $t('book_friend_0002') }}</span><span v-html=\"item.friendNotes\"></span>\n            </div>\n            <!-- <div class=\"invite-code\" v-show=\"item.showCode && item.inviteCodeType == 0\">\n              <span> IDs：</span><span v-html=\"item.colorInviteCode\"> </span>\n            </div> -->\n          </div>\n          <el-checkbox\n            class=\"search-select\"\n            v-model=\"item.checked\"\n            @change=\"addInviteHand(item, index)\"\n            :checked=\"item.checked\"\n            :disabled=\"item.disabled\"\n          >\n          </el-checkbox>\n        </li>\n      </ul>\n    </div>\n    <div class=\"list groups\" v-show=\"groupsData.length > 0 && !showFriendflag\">\n      <p>{{ $t('chat_search_0005') }}</p>\n      <ul>\n        <li\n          v-for=\"(item, index) in groupsData\"\n          :key=\"'group' + index\"\n          :class=\"{active3:indexAt == item.indexAt}\" \n          :id=\"item.groupId\" \n          disName=\"2\"\n          @click=\"addInviteHand(item)\"\n          :style=\"{\n            cursor: item.forbiddenWordsStatus2Boolean ? 'not-allowed' : '',\n          }\"\n        >\n          <img\n            class=\"avatar\"\n            :src=\"findImage(item.groupAvatar)\"\n            v-if=\"item.groupAvatar\"\n            :alt=\"$t('Universal_0184')\"\n          />\n          <img\n            class=\"avatar\"\n            src=\"../../assets/images/group.png\"\n            v-else\n            :alt=\"$t('Universal_0184')\"\n          />\n          <div class=\"flex flex-direction justify-center name-notes-id\">\n            <div class=\"nick-name\"><span v-html=\"item.groupName\"></span></div>\n            <div class=\"group-code\" v-show=\"item.showCode\">\n              <span>{{ $t('book_community_0007') }}: </span><span v-html=\"item.groupCode\"></span>\n            </div>\n          </div>\n          <el-checkbox\n            class=\"search-select\"\n            v-model=\"item.checked\"\n            @change=\"addInviteHand(item, index)\"\n            :checked=\"item.checked\"\n            :disabled=\"availableCheck(item)\"\n            :style=\"{\n              cursor: item.forbiddenWordsStatus2Boolean ? 'not-allowed' : '',\n            }\"\n          ></el-checkbox>\n        </li>\n      </ul>\n    </div>\n    <div class=\"list groups\" v-show=\"discussionsData.length > 0 && !showFriendflag\">\n      <p>{{ $t('chat_search_0007') }}</p>\n      <ul>\n        <li\n          v-for=\"(item, index) in discussionsData\"\n          :key=\"'discussion' + index\"\n          :class=\"{active3:indexAt == item.indexAt}\" :id=\"item.groupId\" disName=\"3\"\n          @click=\"addInviteHand(item)\"\n        >\n          <div class=\"discussion-icon\">\n            <DiscussionIcon iconType=\"mini\" :name=\"item.groupNameOrigin\" />\n          </div>\n          <div class=\"flex flex-direction justify-center name-notes-id\">\n            <div class=\"nick-name\"><span v-html=\"item.groupName\"></span></div>\n          </div>\n          <el-checkbox\n            class=\"search-select\"\n            v-model=\"item.checked\"\n            @change=\"addInviteHand(item, index)\"\n            :checked=\"item.checked\"\n            :disabled=\"item['disabled']\"\n          ></el-checkbox>\n        </li>\n      </ul>\n    </div>\n    <br />\n  </div>\n</template>\n\n<script>\nimport fileOperational from \"@/services/fileOperational\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nexport default {\n  name: \"SearchInfo\",\n  components: {\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n  },\n  data() {\n    return {\n      loading:false,\n      groupVisible: false,\n      addOrderVisible: false,\n      friendsData: [],\n      groupsData: [],\n      discussionsData: [],\n      isShowAll: false,\n      friendsDataMin: [],\n      groupMembersInfo: [],\n      selectedIds: [],\n      indexAt:0,//被选中item的下标\n      alldataNum:0,//搜索到的所有列表之和\n      currentItem:{},//上下键选中的item\n    };\n  },\n  props: {\n    showFriendflag:{\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    keyword: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    limitGroupIdArr:{\n      type:Array,\n      default: () => {\n        return [];\n      },\n    }\n  },\n  watch: {},\n  computed:{\n    availableCheck(){\n      return (item)=>{\n        let isForbiddenWordsStatus =\n          item.authStatus != 3\n            ? false\n            : item.forbiddenWordsStatus == 0 ||\n              item.memberForbiddenWordsStatus == 1;\n        return Boolean(isForbiddenWordsStatus)||this.limitGroupIdArr.includes(item['id']);\n      }\n    }\n  },\n  methods: {\n    chooseSearch(){\n      this.indexAt = 0;\n      document.removeEventListener('keydown', this.keyMove)\n      if(this.keyword){ // && document.getElementById('searchAll') == document.activeElement\n        document.addEventListener('keydown',this.keyMove)\n      }\n    },\n    move(){\n      if( document.getElementsByClassName('searchInfoClass')[0]){\n        document.getElementsByClassName('searchInfoClass')[0].scrollTop = document.getElementsByClassName('active3')[0].offsetTop-70\n      }\n    },\n    keyMove(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,this.alldataNum,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n          console.log(this.indexAt,'--')\n        }else{\n          this.indexAt = 0;\n        }\n        this.move()\n      }else if(e.keyCode == 40){ //下键\n        console.log(this.indexAt,this.alldataNum,'down2222')\n        if(this.indexAt < this.alldataNum-1){\n          this.indexAt++;\n          console.log(this.indexAt,'++')\n        }else if(this.indexAt == this.alldataNum){\n          this.indexAt = this.indexAt-1 ;\n          console.log(this.indexAt,'-1后')\n        }\n        this.move()\n      }\n      else if(e.keyCode == 13){\n        console.log(document.getElementsByClassName('active3')[0],'wswwwww')\n        let currentId='',disName=''\n        if(document.getElementsByClassName('active3')[0]){\n          currentId = document.getElementsByClassName('active3')[0].getAttribute(\"id\")\n          disName = document.getElementsByClassName('active3')[0].getAttribute(\"disName\")\n          console.log(currentId,'currentId')\n        }\n        console.log(disName,this.friendsDataMin)\n        if(disName == 1){ //好友\n          this.currentItem = this.friendsDataMin.filter((item) => {\n            return item.inviteCode == currentId\n          })\n        }else if(disName == 2){ //社区\n          this.currentItem = this.groupsData.filter((item) => {\n            return item.groupId == currentId\n          })\n        }else if(disName == 3){ //讨论组\n          this.currentItem = this.discussionsData.filter((item) => {\n            return item.groupId == currentId\n          })\n        }\n        console.log(this.currentItem)\n        this.addInviteHand(this.currentItem[0])\n      }\n      \n    },\n    addInviteHand(item) {\n      console.log(\"搜索--item\", item);\n      if(item.forbiddenWordsStatus2Boolean||this.limitGroupIdArr.includes(item['id'])){\n        return;\n      }\n      if(item.disabled && item.checked){\n        item.checked=true;\n        return;\n      }\n      this.$forceUpdate();\n      item.checked = item.checked ? false : true;\n      this.$emit(\"GetSelectObj\", item);\n\n    },\n    //将 friendList 中字段下划线转换成驼峰\n    changeFriendName(arr) {\n      return arr.map((a) => {\n        a = {\n          friendFriendNotes: a.friend_friendNotes,\n          friendNotes: a.friend_friendNotes,\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name,\n          nickName: a.friend_nick_name,\n          inviteCode: a.invite_code,\n          code: a.invite_code,\n          colorInviteCode: a.invite_code,\n          level: a.level,\n          id: a.friend_id,\n          targetType: 1,\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank,\n          groupType: null,\n        };\n        return a;\n      });\n    },\n    //将 groupList 中字段下划线转换成驼峰\n    changeGroupName(arr) {\n      return arr.map((a) => {\n        a = {\n          groupId: a.group_id,\n          id: a.group_id,\n          groupName: a.group_name,\n          groupNameOrigin: a.group_name,\n          groupNamePinyin: a.group_name_pinyin,\n          groupStatus: a.group_status,\n          groupAvatar: a.group_avatar,\n          code: a.group_code,\n          groupCode: a.group_code,\n          friendNickName: a.group_name,\n          friendHeadImg: a.group_avatar,\n          targetType: 2,\n          groupType: a.group_type,\n          forbiddenWordsStatus: a.forbiddenWordsStatus,\n          memberForbiddenWordsStatus: a.memberForbiddenWordsStatus,\n          forbiddenWordsStatus2Boolean: a.forbiddenWordsStatus2Boolean,\n          authStatus: a.authStatus,\n          memberId: a.memberId,\n        };\n        return a;\n      });\n    },\n    //讨论组\n    async getSearchDiscussion(key) {\n      let res = await window.vm\n        .$knex(\"t_groups\")\n        .where(function() {\n          this.where(\"group_name\", \"like\", \"%\" + key + \"%\").orWhere(\n            \"group_name_pinyin\",\n            \"like\",\n            \"%\" + key + \"%\"\n          );\n          // .orWhere(\"group_code\", \"like\", \"%\" + key + \"%\");\n        })\n        .where(\"group_type\", \"=\", 0)\n        .orderBy(\"group_name_pinyin\")\n        .select();\n      let data= this.changeGroupName(res)||[];\n      data.forEach((item)=>{\n        item['disabled']=this.limitGroupIdArr.includes(item['id'])?true:false;\n      });\n      this.discussionsData =data;\n    },\n    //群\n    async getSearchGroup(key) {\n      let res = await window.vm.$knex.raw(`\n        select g.*,\n        tgm.forbiddenWordsStatus as memberForbiddenWordsStatus,\n        tgm.auth_status as authStatus,\n        tgm.id as memberId\n        from t_groups g\n        left join t_groups_member gm on gm.group_id = g.group_id\n        left join t_groups_member tgm on tgm.group_id = g.group_id and tgm.id = '${UserInfoUtils.getCurrentUserId()}' and tgm.is_show='true'\n        where  (g.group_name like '%${key}%' and g.is_show='true' or \n          g.group_name_pinyin like '%${key}%' or g.group_code like '%${key}%') and g.group_type='1'\n        group by g.group_id\n        order by g.group_name_pinyin\n      `);\n      console.log(\"res\", res);\n      this.groupsData = this.changeGroupName(res);\n    },\n    //个人\n    async getSearchFriends(key) {\n      let res = await window.vm\n        .$knex(\"t_contacts\")\n        .where(function() {\n          this.where(\"is_show\", \"=\", \"true\")\n            .orWhere(\"friend_nick_name\", \"like\", \"%\" + key + \"%\")\n            .orWhere(\"friend_nick_name_pinyin\", \"like\", \"%\" + key + \"%\")\n            .orWhere(\"invite_code\", \"like\", \"%\" + key + \"%\")\n            .orWhere(\"friend_friendNotes_pinyin\", \"like\", \"%\" + key + \"%\")\n            .orWhere(\"friend_friendNotes\", \"like\", \"%\" + key + \"%\");\n        })\n        .where(function() {\n          this.whereNull(\"is_show\").orWhere(\"is_show\", \"!=\", \"false\");\n        })\n        .where(\"friend_id\", \"!=\", UserInfoUtils.getCurrentUserId())\n        .orderBy(\"friend_nick_name_pinyin\")\n        .select();\n      this.friendsData = this.changeFriendName(res);\n    },\n    init(ids) {\n      this.search(ids);\n    },\n    async search(ids, members) {\n      if (!this.keyword) {\n        // this.$message.error(\"请输入搜索内容\");\n        document.removeEventListener('keydown', this.keyMove)\n        this.indexAt = 0\n        return;\n      }\n      if (this.keyword.trim() == \"\") {\n        document.removeEventListener('keydown', this.keyMove)\n        this.indexAt = 0\n        return;\n      }\n      // this.resetData();\n      this.loading = true\n      this.selectedIds = ids;\n      await this.getSearchFriends(this.keyword);\n      this.loading = false\n      if (members && members.length > 0) {\n        this.groupMembersInfo = members;\n        this.groupsData = [];\n      } else {\n        this.groupMembersInfo = [];\n        await this.getSearchGroup(this.keyword);\n        await this.getSearchDiscussion(this.keyword);\n      }\n      this.isShowAll = this.friendsData.length > 5;\n      if (this.isShowAll) {\n        this.friendsDataMin = this.friendsData.slice(0, 5);\n        if (this.friendsDataMin.length >= 5) {\n          this.isShowGroup = false;\n        }\n      } else {\n        this.friendsDataMin = this.friendsData;\n      }\n      this.changeColor();\n      this.initCheckedItems();\n      this.initDisabledItems();\n      this.$refs.searchContent.scrollIntoView();\n      this.chooseSearch()\n    },\n    initDisabledItems() {\n      if (this.groupMembersInfo && this.groupMembersInfo.length > 0) {\n        this.friendsDataMin.map((item) => {\n          if (\n            this.groupMembersInfo.filter(\n              (m) => m.id == item.id && m.is_show == \"true\"\n            ).length > 0\n          ) {\n            \n            item.forbiddenWordsStatus = 0;\n            item.checked = true;\n            item.disabled = item.checked;\n          }\n        });\n        this.$forceUpdate();\n      }\n    },\n    initCheckedItems() {\n      this.friendsDataMin.map((item) => {\n        if (this.selectedIds.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n      });\n      this.groupsData.map((item) => {\n        /* forbiddenWordsStatus:0禁言，1不禁言； memberForbiddenWordsStatus：0不禁言，1禁言。authStatus=3普通成员 */\n        let isForbiddenWordsStatus =\n          item.authStatus != 3\n            ? false\n            : item.forbiddenWordsStatus == 0 ||\n              item.memberForbiddenWordsStatus == 1;\n        item.forbiddenWordsStatus2Boolean = Boolean(isForbiddenWordsStatus);\n        if (this.selectedIds.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n      });\n      this.discussionsData.map((item) => {\n        if (this.selectedIds.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n      });\n    },\n    removeSelectedItem(id) {\n      this.friendsDataMin.map((item) => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.groupsData.map((item) => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.discussionsData.map((item) => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.$forceUpdate();\n    },\n    changeColor() {\n      if (this.keyword) {\n        let key = this.keyword.toLowerCase();\n        let replaceReg = new RegExp(key, \"g\");\n        let replaceString = '<span class=\"high-light\">' + key + \"</span>\";\n        let keyUp = this.keyword.toUpperCase();\n        let replaceRegUp = new RegExp(keyUp, \"g\");\n        let replaceStringUp = '<span class=\"high-light\">' + keyUp + \"</span>\";\n        this.friendsDataMin.map((item,index) => {\n          item.indexAt = index;\n          if (item.nickName.toLowerCase().indexOf(key) != -1) {\n            item.nickName = item.nickName\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n          }\n          if (\n            item.friendNotes &&\n            item.friendNotes.toLowerCase().indexOf(key) != -1\n          ) {\n            item.friendNotes = item.friendNotes\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n            item.showNotes = true;\n          }\n          if (item.colorInviteCode.toLowerCase().indexOf(key) != -1) {\n            item.colorInviteCode = item.colorInviteCode\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n            item.showCode = true;\n          }\n        });\n        this.groupsData.map((item,index) => {\n          item.indexAt = Number(this.friendsDataMin.length) + index;\n          if (item.groupName.toLowerCase().indexOf(key) != -1) {\n            item.groupName = item.groupName\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n          }\n          if (item.groupCode.toLowerCase().indexOf(key) != -1) {\n            item.groupCode = item.groupCode\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n            item.showCode = true;\n          }\n        });\n        this.discussionsData.map((item,index) => {\n          item.indexAt = Number(this.friendsDataMin.length)+ Number(this.groupsData.length) +index;\n          if (item.groupName.toLowerCase().indexOf(key) != -1) {\n            item.groupName = item.groupName\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n          }\n        });\n      }\n      this.alldataNum = Number(this.friendsDataMin.length)+Number(this.groupsData.length)+Number(this.discussionsData.length)\n      this.$forceUpdate();\n    },\n    async showAll() {\n      this.resetData();\n      await this.getSearchFriends(this.keyword);\n      if (this.groupMembersInfo && this.groupMembersInfo.length > 0) {\n        this.groupsData = [];\n      } else {\n        await this.getSearchGroup(this.keyword);\n        await this.getSearchDiscussion(this.keyword);\n      }\n      this.friendsDataMin = this.friendsData;\n      this.changeColor();\n      this.initCheckedItems();\n      this.initDisabledItems();\n    },\n    resetData() {\n      this.friendsData = [];\n      this.groupsData = [];\n      this.isShowAll = false;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n  },\n  mounted() {\n    console.log(\"mounted\");\n  },\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.keyMove)\n  }, \n};\n</script>",
    "originData": "<!-- (群/讨论组，群分享，单聊发起讨论组-右侧成员-添加)-搜索结果列表 -->\n<template>\n  <div ref=\"searchContent\" v-loading=\"loading\" >\n    <div\n      v-show=\"\n        friendsDataMin.length == 0 &&\n          groupsData.length == 0 &&\n          discussionsData.length == 0\n      \"\n      class=\"no-data\"\n    >\n      <img src=\"../../assets/images/web.png\" class=\"img_search\" />\n      <p>{{ $t('Universal_0173') }}</p>\n    </div>\n    <div class=\"list contacts\" v-show=\"friendsDataMin.length > 0\">\n      <p>\n        {{ $t('chat_search_0003') }}\n        <span @click=\"showAll\" v-show=\"isShowAll\">{{ $t('Universal_0271') }}</span>\n      </p>\n      <ul>\n        <li\n          v-for=\"(item, index) in friendsDataMin\"\n          :key=\"'friend' + index\"\n          :class=\"{active3:indexAt == item.indexAt}\" \n          :id=\"item.inviteCode\" \n          disName=\"1\"\n          @click.stop.prevent=\"addInviteHand(item)\"\n        >\n          <MemberIcon\n            :image=\"item.friendHeadImg\"\n            iconType=\"mini\"\n            :vipType=\"item.vipType\"\n            :userRank=\"item.userRank\"\n            class=\"search-member-icon\"\n          />\n          <div class=\"flex flex-direction name-notes-id\">\n            <div class=\"nick-name\">\n              <span v-html=\"item.nickName\"></span>\n\n              <LevelIcon\n                :inviteCode=\"item.inviteCode\"\n                :userRank=\"item.userRank\"\n                iconType=\"small\"\n                :vipType=\"item.vipType\"\n                :inviteCodeType=\"item.inviteCodeType\"\n              />\n            </div>\n            <LuckIdIcon\n              :inviteCode=\"item.inviteCode\"\n              :userRank=\"item.userRank\"\n              iconType=\"medium\"\n              :vipType=\"item.vipType\"\n              :inviteCodeType=\"item.inviteCodeType\"\n              :listFlag=\"false\"\n            />\n            <div class=\"friend-notes\" v-show=\"item.showNotes\">\n              <span>{{ $t('book_friend_0002') }}</span><span v-html=\"item.friendNotes\"></span>\n            </div>\n            <!-- <div class=\"invite-code\" v-show=\"item.showCode && item.inviteCodeType == 0\">\n              <span> IDs：</span><span v-html=\"item.colorInviteCode\"> </span>\n            </div> -->\n          </div>\n          <el-checkbox\n            class=\"search-select\"\n            v-model=\"item.checked\"\n            @change=\"addInviteHand(item, index)\"\n            :checked=\"item.checked\"\n            :disabled=\"item.disabled\"\n          >\n          </el-checkbox>\n        </li>\n      </ul>\n    </div>\n    <div class=\"list groups\" v-show=\"groupsData.length > 0 && !showFriendflag\">\n      <p>{{ $t('chat_search_0005') }}</p>\n      <ul>\n        <li\n          v-for=\"(item, index) in groupsData\"\n          :key=\"'group' + index\"\n          :class=\"{active3:indexAt == item.indexAt}\" \n          :id=\"item.groupId\" \n          disName=\"2\"\n          @click=\"addInviteHand(item)\"\n          :style=\"{\n            cursor: item.forbiddenWordsStatus2Boolean ? 'not-allowed' : '',\n          }\"\n        >\n          <img\n            class=\"avatar\"\n            :src=\"findImage(item.groupAvatar)\"\n            v-if=\"item.groupAvatar\"\n            :alt=\"$t('Universal_0184')\"\n          />\n          <img\n            class=\"avatar\"\n            src=\"../../assets/images/group.png\"\n            v-else\n            :alt=\"$t('Universal_0184')\"\n          />\n          <div class=\"flex flex-direction justify-center name-notes-id\">\n            <div class=\"nick-name\"><span v-html=\"item.groupName\"></span></div>\n            <div class=\"group-code\" v-show=\"item.showCode\">\n              <span>{{ $t('book_community_0007') }}: </span><span v-html=\"item.groupCode\"></span>\n            </div>\n          </div>\n          <el-checkbox\n            class=\"search-select\"\n            v-model=\"item.checked\"\n            @change=\"addInviteHand(item, index)\"\n            :checked=\"item.checked\"\n            :disabled=\"availableCheck(item)\"\n            :style=\"{\n              cursor: item.forbiddenWordsStatus2Boolean ? 'not-allowed' : '',\n            }\"\n          ></el-checkbox>\n        </li>\n      </ul>\n    </div>\n    <div class=\"list groups\" v-show=\"discussionsData.length > 0 && !showFriendflag\">\n      <p>{{ $t('chat_search_0007') }}</p>\n      <ul>\n        <li\n          v-for=\"(item, index) in discussionsData\"\n          :key=\"'discussion' + index\"\n          :class=\"{active3:indexAt == item.indexAt}\" :id=\"item.groupId\" disName=\"3\"\n          @click=\"addInviteHand(item)\"\n        >\n          <div class=\"discussion-icon\">\n            <DiscussionIcon iconType=\"mini\" :name=\"item.groupNameOrigin\" />\n          </div>\n          <div class=\"flex flex-direction justify-center name-notes-id\">\n            <div class=\"nick-name\"><span v-html=\"item.groupName\"></span></div>\n          </div>\n          <el-checkbox\n            class=\"search-select\"\n            v-model=\"item.checked\"\n            @change=\"addInviteHand(item, index)\"\n            :checked=\"item.checked\"\n            :disabled=\"item['disabled']\"\n          ></el-checkbox>\n        </li>\n      </ul>\n    </div>\n    <br />\n  </div>\n</template>\n\n<script>\nimport fileOperational from \"@/services/fileOperational\";\nimport DiscussionIcon from \"@/components/memberIcon/DiscussionIcon\";\nimport MemberIcon from \"@/components/memberIcon/MemberIcon\";\nimport LevelIcon from \"@/components/memberIcon/LevelIcon\";\nimport LuckIdIcon from \"@/components/memberIcon/luckIdIcon\";\nimport UserInfoUtils from \"@/utils/UserInfoUtils.js\";\nexport default {\n  name: \"SearchInfo\",\n  components: {\n    DiscussionIcon,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n  },\n  data() {\n    return {\n      loading:false,\n      groupVisible: false,\n      addOrderVisible: false,\n      friendsData: [],\n      groupsData: [],\n      discussionsData: [],\n      isShowAll: false,\n      friendsDataMin: [],\n      groupMembersInfo: [],\n      selectedIds: [],\n      indexAt:0,//被选中item的下标\n      alldataNum:0,//搜索到的所有列表之和\n      currentItem:{},//上下键选中的item\n    };\n  },\n  props: {\n    showFriendflag:{\n      type: Boolean,\n      default: () => {\n        return false;\n      },\n    },\n    keyword: {\n      type: String,\n      default: () => {\n        return \"\";\n      },\n    },\n    limitGroupIdArr:{\n      type:Array,\n      default: () => {\n        return [];\n      },\n    }\n  },\n  watch: {},\n  computed:{\n    availableCheck(){\n      return (item)=>{\n        let isForbiddenWordsStatus =\n          item.authStatus != 3\n            ? false\n            : item.forbiddenWordsStatus == 0 ||\n              item.memberForbiddenWordsStatus == 1;\n        return Boolean(isForbiddenWordsStatus)||this.limitGroupIdArr.includes(item['id']);\n      }\n    }\n  },\n  methods: {\n    chooseSearch(){\n      this.indexAt = 0;\n      document.removeEventListener('keydown', this.keyMove)\n      if(this.keyword){ // && document.getElementById('searchAll') == document.activeElement\n        document.addEventListener('keydown',this.keyMove)\n      }\n    },\n    move(){\n      if( document.getElementsByClassName('searchInfoClass')[0]){\n        document.getElementsByClassName('searchInfoClass')[0].scrollTop = document.getElementsByClassName('active3')[0].offsetTop-70\n      }\n    },\n    keyMove(e){\n      if(e.keyCode == 38){ //上键\n        console.log(this.indexAt,this.alldataNum,'up111')\n        if(this.indexAt>0){\n          this.indexAt--;\n          console.log(this.indexAt,'--')\n        }else{\n          this.indexAt = 0;\n        }\n        this.move()\n      }else if(e.keyCode == 40){ //下键\n        console.log(this.indexAt,this.alldataNum,'down2222')\n        if(this.indexAt < this.alldataNum-1){\n          this.indexAt++;\n          console.log(this.indexAt,'++')\n        }else if(this.indexAt == this.alldataNum){\n          this.indexAt = this.indexAt-1 ;\n          console.log(this.indexAt,'-1后')\n        }\n        this.move()\n      }\n      else if(e.keyCode == 13){\n        console.log(document.getElementsByClassName('active3')[0],'wswwwww')\n        let currentId='',disName=''\n        if(document.getElementsByClassName('active3')[0]){\n          currentId = document.getElementsByClassName('active3')[0].getAttribute(\"id\")\n          disName = document.getElementsByClassName('active3')[0].getAttribute(\"disName\")\n          console.log(currentId,'currentId')\n        }\n        console.log(disName,this.friendsDataMin)\n        if(disName == 1){ //好友\n          this.currentItem = this.friendsDataMin.filter((item) => {\n            return item.inviteCode == currentId\n          })\n        }else if(disName == 2){ //社区\n          this.currentItem = this.groupsData.filter((item) => {\n            return item.groupId == currentId\n          })\n        }else if(disName == 3){ //讨论组\n          this.currentItem = this.discussionsData.filter((item) => {\n            return item.groupId == currentId\n          })\n        }\n        console.log(this.currentItem)\n        this.addInviteHand(this.currentItem[0])\n      }\n      \n    },\n    addInviteHand(item) {\n      console.log(\"搜索--item\", item);\n      if(item.forbiddenWordsStatus2Boolean||this.limitGroupIdArr.includes(item['id'])){\n        return;\n      }\n      if(item.disabled && item.checked){\n        item.checked=true;\n        return;\n      }\n      this.$forceUpdate();\n      item.checked = item.checked ? false : true;\n      this.$emit(\"GetSelectObj\", item);\n\n    },\n    //将 friendList 中字段下划线转换成驼峰\n    changeFriendName(arr) {\n      return arr.map((a) => {\n        a = {\n          friendFriendNotes: a.friend_friendNotes,\n          friendNotes: a.friend_friendNotes,\n          friendHeadImg: a.friend_head_img,\n          friendId: a.friend_id,\n          friendNickName: a.friend_nick_name,\n          nickName: a.friend_nick_name,\n          inviteCode: a.invite_code,\n          code: a.invite_code,\n          colorInviteCode: a.invite_code,\n          level: a.level,\n          id: a.friend_id,\n          targetType: 1,\n          vipType: a.vipType,\n          inviteCodeType: a.inviteCodeType,\n          userRank: a.userRank,\n          groupType: null,\n        };\n        return a;\n      });\n    },\n    //将 groupList 中字段下划线转换成驼峰\n    changeGroupName(arr) {\n      return arr.map((a) => {\n        a = {\n          groupId: a.group_id,\n          id: a.group_id,\n          groupName: a.group_name,\n          groupNameOrigin: a.group_name,\n          groupNamePinyin: a.group_name_pinyin,\n          groupStatus: a.group_status,\n          groupAvatar: a.group_avatar,\n          code: a.group_code,\n          groupCode: a.group_code,\n          friendNickName: a.group_name,\n          friendHeadImg: a.group_avatar,\n          targetType: 2,\n          groupType: a.group_type,\n          forbiddenWordsStatus: a.forbiddenWordsStatus,\n          memberForbiddenWordsStatus: a.memberForbiddenWordsStatus,\n          forbiddenWordsStatus2Boolean: a.forbiddenWordsStatus2Boolean,\n          authStatus: a.authStatus,\n          memberId: a.memberId,\n        };\n        return a;\n      });\n    },\n    //讨论组\n    async getSearchDiscussion(key) {\n      let res = await window.vm\n        .$knex(\"t_groups\")\n        .where(function() {\n          this.where(\"group_name\", \"like\", \"%\" + key + \"%\").orWhere(\n            \"group_name_pinyin\",\n            \"like\",\n            \"%\" + key + \"%\"\n          );\n          // .orWhere(\"group_code\", \"like\", \"%\" + key + \"%\");\n        })\n        .where(\"group_type\", \"=\", 0)\n        .orderBy(\"group_name_pinyin\")\n        .select();\n      let data= this.changeGroupName(res)||[];\n      data.forEach((item)=>{\n        item['disabled']=this.limitGroupIdArr.includes(item['id'])?true:false;\n      });\n      this.discussionsData =data;\n    },\n    //群\n    async getSearchGroup(key) {\n      let res = await window.vm.$knex.raw(`\n        select g.*,\n        tgm.forbiddenWordsStatus as memberForbiddenWordsStatus,\n        tgm.auth_status as authStatus,\n        tgm.id as memberId\n        from t_groups g\n        left join t_groups_member gm on gm.group_id = g.group_id\n        left join t_groups_member tgm on tgm.group_id = g.group_id and tgm.id = '${UserInfoUtils.getCurrentUserId()}' and tgm.is_show='true'\n        where  (g.group_name like '%${key}%' and g.is_show='true' or \n          g.group_name_pinyin like '%${key}%' or g.group_code like '%${key}%') and g.group_type='1'\n        group by g.group_id\n        order by g.group_name_pinyin\n      `);\n      console.log(\"res\", res);\n      this.groupsData = this.changeGroupName(res);\n    },\n    //个人\n    async getSearchFriends(key) {\n      let res = await window.vm\n        .$knex(\"t_contacts\")\n        .where(function() {\n          this.where(\"is_show\", \"=\", \"true\")\n            .orWhere(\"friend_nick_name\", \"like\", \"%\" + key + \"%\")\n            .orWhere(\"friend_nick_name_pinyin\", \"like\", \"%\" + key + \"%\")\n            .orWhere(\"invite_code\", \"like\", \"%\" + key + \"%\")\n            .orWhere(\"friend_friendNotes_pinyin\", \"like\", \"%\" + key + \"%\")\n            .orWhere(\"friend_friendNotes\", \"like\", \"%\" + key + \"%\");\n        })\n        .where(function() {\n          this.whereNull(\"is_show\").orWhere(\"is_show\", \"!=\", \"false\");\n        })\n        .where(\"friend_id\", \"!=\", UserInfoUtils.getCurrentUserId())\n        .orderBy(\"friend_nick_name_pinyin\")\n        .select();\n      this.friendsData = this.changeFriendName(res);\n    },\n    init(ids) {\n      this.search(ids);\n    },\n    async search(ids, members) {\n      if (!this.keyword) {\n        // this.$message.error(\"请输入搜索内容\");\n        document.removeEventListener('keydown', this.keyMove)\n        this.indexAt = 0\n        return;\n      }\n      if (this.keyword.trim() == \"\") {\n        document.removeEventListener('keydown', this.keyMove)\n        this.indexAt = 0\n        return;\n      }\n      // this.resetData();\n      this.loading = true\n      this.selectedIds = ids;\n      await this.getSearchFriends(this.keyword);\n      this.loading = false\n      if (members && members.length > 0) {\n        this.groupMembersInfo = members;\n        this.groupsData = [];\n      } else {\n        this.groupMembersInfo = [];\n        await this.getSearchGroup(this.keyword);\n        await this.getSearchDiscussion(this.keyword);\n      }\n      this.isShowAll = this.friendsData.length > 5;\n      if (this.isShowAll) {\n        this.friendsDataMin = this.friendsData.slice(0, 5);\n        if (this.friendsDataMin.length >= 5) {\n          this.isShowGroup = false;\n        }\n      } else {\n        this.friendsDataMin = this.friendsData;\n      }\n      this.changeColor();\n      this.initCheckedItems();\n      this.initDisabledItems();\n      this.$refs.searchContent.scrollIntoView();\n      this.chooseSearch()\n    },\n    initDisabledItems() {\n      if (this.groupMembersInfo && this.groupMembersInfo.length > 0) {\n        this.friendsDataMin.map((item) => {\n          if (\n            this.groupMembersInfo.filter(\n              (m) => m.id == item.id && m.is_show == \"true\"\n            ).length > 0\n          ) {\n            \n            item.forbiddenWordsStatus = 0;\n            item.checked = true;\n            item.disabled = item.checked;\n          }\n        });\n        this.$forceUpdate();\n      }\n    },\n    initCheckedItems() {\n      this.friendsDataMin.map((item) => {\n        if (this.selectedIds.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n      });\n      this.groupsData.map((item) => {\n        /* forbiddenWordsStatus:0禁言，1不禁言； memberForbiddenWordsStatus：0不禁言，1禁言。authStatus=3普通成员 */\n        let isForbiddenWordsStatus =\n          item.authStatus != 3\n            ? false\n            : item.forbiddenWordsStatus == 0 ||\n              item.memberForbiddenWordsStatus == 1;\n        item.forbiddenWordsStatus2Boolean = Boolean(isForbiddenWordsStatus);\n        if (this.selectedIds.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n      });\n      this.discussionsData.map((item) => {\n        if (this.selectedIds.indexOf(item.id) > -1) {\n          item.checked = true;\n        } else {\n          item.checked = false;\n        }\n      });\n    },\n    removeSelectedItem(id) {\n      this.friendsDataMin.map((item) => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.groupsData.map((item) => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.discussionsData.map((item) => {\n        if (item.id == id) {\n          item.checked = false;\n        }\n      });\n      this.$forceUpdate();\n    },\n    changeColor() {\n      if (this.keyword) {\n        let key = this.keyword.toLowerCase();\n        let replaceReg = new RegExp(key, \"g\");\n        let replaceString = '<span class=\"high-light\">' + key + \"</span>\";\n        let keyUp = this.keyword.toUpperCase();\n        let replaceRegUp = new RegExp(keyUp, \"g\");\n        let replaceStringUp = '<span class=\"high-light\">' + keyUp + \"</span>\";\n        this.friendsDataMin.map((item,index) => {\n          item.indexAt = index;\n          if (item.nickName.toLowerCase().indexOf(key) != -1) {\n            item.nickName = item.nickName\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n          }\n          if (\n            item.friendNotes &&\n            item.friendNotes.toLowerCase().indexOf(key) != -1\n          ) {\n            item.friendNotes = item.friendNotes\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n            item.showNotes = true;\n          }\n          if (item.colorInviteCode.toLowerCase().indexOf(key) != -1) {\n            item.colorInviteCode = item.colorInviteCode\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n            item.showCode = true;\n          }\n        });\n        this.groupsData.map((item,index) => {\n          item.indexAt = Number(this.friendsDataMin.length) + index;\n          if (item.groupName.toLowerCase().indexOf(key) != -1) {\n            item.groupName = item.groupName\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n          }\n          if (item.groupCode.toLowerCase().indexOf(key) != -1) {\n            item.groupCode = item.groupCode\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n            item.showCode = true;\n          }\n        });\n        this.discussionsData.map((item,index) => {\n          item.indexAt = Number(this.friendsDataMin.length)+ Number(this.groupsData.length) +index;\n          if (item.groupName.toLowerCase().indexOf(key) != -1) {\n            item.groupName = item.groupName\n              .replace(replaceReg, replaceString)\n              .replace(replaceRegUp, replaceStringUp);\n          }\n        });\n      }\n      this.alldataNum = Number(this.friendsDataMin.length)+Number(this.groupsData.length)+Number(this.discussionsData.length)\n      this.$forceUpdate();\n    },\n    async showAll() {\n      this.resetData();\n      await this.getSearchFriends(this.keyword);\n      if (this.groupMembersInfo && this.groupMembersInfo.length > 0) {\n        this.groupsData = [];\n      } else {\n        await this.getSearchGroup(this.keyword);\n        await this.getSearchDiscussion(this.keyword);\n      }\n      this.friendsDataMin = this.friendsData;\n      this.changeColor();\n      this.initCheckedItems();\n      this.initDisabledItems();\n    },\n    resetData() {\n      this.friendsData = [];\n      this.groupsData = [];\n      this.isShowAll = false;\n    },\n    findImage(image) {\n      return fileOperational.getImage(image, true);\n    },\n  },\n  mounted() {\n    console.log(\"mounted\");\n  },\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.keyMove)\n  }, \n};\n</script>\n\n<style scoped>\n.active3 {\n  background-color: #f7f7fa;\n}\n.no-data {\n  text-align: center;\n}\n\n.nick-name {\n  font-size: 12px;\n  font-weight: 600;\n  color: #333;\n  width: 170px;\n  display: flex;\n  align-items: center;\n}\n.nick-name span {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 60%;\n}\n\n.friend-notes,\n.invite-code,\n.group-code {\n  font-size: 10px;\n  color: #999999;\n  width: 160px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: 13px;\n  display: flex;\n  align-items: center;\n}\n\n.name-notes-id {\n  height: 50px;\n  justify-content: space-around;\n}\n\n.search-select {\n  padding: 6px 8px;\n}\n.search-select /deep/ .el-checkbox__inner {\n  border: 1px solid #aeaeae;\n}\n\n.search-member-icon {\n  display: inline-block;\n  margin-right: 12px;\n  margin-top: 10px;\n}\n</style>\n<style lang=\"less\" scoped>\n.discussion-icon {\n  margin-right: 10px;\n  margin-top: 10px;\n}\n.searchInfoClass {\n  width: 260px !important;\n  height: 70% !important;\n  overflow-y: scroll !important;\n  padding: 0;\n  .list {\n    width: 100%;\n    & > p {\n      padding: 3px 0px 3px 6%;\n      font-size: 13px;\n      font-weight: 600;\n      color: #333;\n      display: flex;\n      justify-content: space-between;\n      span {\n        margin-right: 6%;\n        cursor: pointer;\n        color: #02a7f0;\n      }\n    }\n    & > ul li {\n      display: flex;\n      justify-content: flex-start;\n      padding: 6px 0 0 5%;\n      img {\n        border-radius: 50%;\n        width: 32px;\n        height: 32px;\n        margin-right: 10px;\n        margin-top: 10px;\n      }\n    }\n    & > ul li:hover {\n      background: #f4f4f4;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".active3": {
          "background-color": "#f7f7fa"
        },
        ".no-data": {
          "text-align": "center"
        },
        ".nick-name": {
          "font-size": "12px",
          "font-weight": "600",
          "color": "#333",
          "width": "170px",
          "display": "flex",
          "align-items": "center"
        },
        ".nick-name span": {
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "nowrap",
          "max-width": "60%"
        },
        ".friend-notes,.invite-code,.group-code": {
          "font-size": "10px",
          "color": "#999999",
          "width": "160px",
          "overflow": "hidden",
          "text-overflow": "ellipsis",
          "white-space": "nowrap",
          "height": "13px",
          "display": "flex",
          "align-items": "center"
        },
        ".name-notes-id": {
          "height": "50px",
          "justify-content": "space-around"
        },
        ".search-select": {
          "padding": "6px 8px"
        },
        ".search-select /deep/ .el-checkbox__inner": {
          "border": "1px solid #aeaeae"
        },
        ".search-member-icon": {
          "display": "inline-block",
          "margin-right": "12px",
          "margin-top": "10px"
        }
      },
      {
        ".discussion-icon": {
          "margin-right": "10px",
          "margin-top": "10px"
        },
        ".searchInfoClass": {
          "width": "260px !important",
          "height": "70% !important",
          "overflow-y": "scroll !important",
          "padding": "0",
          ".list": {
            "width": "100%",
            "& > p": {
              "padding": "3px 0px 3px 6%",
              "font-size": "13px",
              "font-weight": "600",
              "color": "#333",
              "display": "flex",
              "justify-content": "space-between",
              "span": {
                "margin-right": "6%",
                "cursor": "pointer",
                "color": "#02a7f0"
              }
            },
            "& > ul li": {
              "display": "flex",
              "justify-content": "flex-start",
              "padding": "6px 0 0 5%",
              "img": {
                "border-radius": "50%",
                "width": "32px",
                "height": "32px",
                "margin-right": "10px",
                "margin-top": "10px"
              }
            },
            "& > ul li:hover": {
              "background": "#f4f4f4"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/add-friends-group/dialog/share-friends.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<!-- 添加好友 -->\n<template>\n  <div class=\"addFriend\">\n    <el-dialog\n      class=\"invite-friend\"\n      :title=\"$t('chat_home_0007')\"\n      :append-to-body=\"true\"\n      width=\"380px\"\n      :before-close=\"gotoChat\"\n      :visible=\"dialogShareVisible\"\n    >\n      <div class=\"share-link\">{{ $t('chat_addfriend_0016') }}</div>\n      <div class=\"add-friend-dialog-con text-center\">\n        <el-input v-model=\"linkurl\" readonly style=\"width: 300px\" id=\"link\"></el-input>\n        <span v-clipboard:copy=\"linkurl\" v-clipboard:success=\"onCopy\" class=\"copy\">{{ $t('chat_0026') }}</span>\n      </div>\n      <div class=\"finish-btn\">\n        <el-button size=\"small\" type=\"primary\" @click=\"gotoChat()\">{{ $t('Universal_0060') }}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { add_the_friends } from '../add/server';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    dialogShareVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      text: '',\n      userInfoName: '',\n      linkurl: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    async setkeynull() {\n      this.text = this.$t('book_friend_0022') + UserInfoUtils.getCurrentUserNickName();\n      this.userInfoName = UserInfoUtils.getCurrentUserNickName();\n    },\n    async addFriends(param) {\n      let res = await add_the_friends(param);\n      if (res.code == 200) {\n        this.$message.success(this.$t('Universal_0138'));\n        this.text = '';\n      } else {\n        this.$message({\n          message: res.msg,\n          type: 'error',\n          customClass: 'mzindex'\n        });\n        return;\n      }\n    },\n    onCopy() {\n      this.$message.success(this.$t('Universal_0118'));\n    },\n    gotoChat() {\n      // this.dialogShareVisible = false;\n      this.$emit('dialog-share-close');\n    },\n    queryGroupByGroupId() {\n      let language = this.$i18n.locale;\n      let Baseurl = process.env.VUE_APP_SHARE;\n      let obj = JSON.parse(localStorage.getItem('userInfo'));\n      console.log('-----', obj.inviteCode);\n      this.linkurl = `${Baseurl}/#/invite/personal?userId=${UserInfoUtils.getCurrentUserId()}&inviteCode=${\n        obj.inviteCode\n      }&language=${language}&nickName=${obj.nickName}&category=fgg`;\n      this.linkurl = encodeURI(this.linkurl);\n    },\n    handCloseAddFriends() {\n      this.$emit('handCloseAddFriends', false);\n    },\n    handConfirmDialog(a) {\n      let userid = UserInfoUtils.getCurrentUserId();\n      let param = {\n        userId: userid,\n        friendId: a,\n        source: '1',\n        applyStatus: -1,\n        content: this.text\n      };\n\n      this.addFriends(param);\n      this.$emit('handConfirmFriDialog', false);\n    },\n    handCancelDialog() {\n      // this.text = ''\n      this.$emit('handCancelFriDialog', false);\n      // this.text=`我是${this.friendData.userNickName}`\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.setkeynull();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.queryGroupByGroupId();\n    //  this.text=`我是${this.friendData.userNickName}`\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>",
    "originData": "<!-- 添加好友 -->\n<template>\n  <div class=\"addFriend\">\n    <el-dialog\n      class=\"invite-friend\"\n      :title=\"$t('chat_home_0007')\"\n      :append-to-body=\"true\"\n      width=\"380px\"\n      :before-close=\"gotoChat\"\n      :visible=\"dialogShareVisible\"\n    >\n      <div class=\"share-link\">{{ $t('chat_addfriend_0016') }}</div>\n      <div class=\"add-friend-dialog-con text-center\">\n        <el-input v-model=\"linkurl\" readonly style=\"width: 300px\" id=\"link\"></el-input>\n        <span v-clipboard:copy=\"linkurl\" v-clipboard:success=\"onCopy\" class=\"copy\">{{ $t('chat_0026') }}</span>\n      </div>\n      <div class=\"finish-btn\">\n        <el-button size=\"small\" type=\"primary\" @click=\"gotoChat()\">{{ $t('Universal_0060') }}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nimport { add_the_friends } from '../add/server';\nimport UserInfoUtils from '@/utils/UserInfoUtils.js';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    dialogShareVisible: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  data() {\n    //这里存放数据\n    return {\n      text: '',\n      userInfoName: '',\n      linkurl: ''\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    async setkeynull() {\n      this.text = this.$t('book_friend_0022') + UserInfoUtils.getCurrentUserNickName();\n      this.userInfoName = UserInfoUtils.getCurrentUserNickName();\n    },\n    async addFriends(param) {\n      let res = await add_the_friends(param);\n      if (res.code == 200) {\n        this.$message.success(this.$t('Universal_0138'));\n        this.text = '';\n      } else {\n        this.$message({\n          message: res.msg,\n          type: 'error',\n          customClass: 'mzindex'\n        });\n        return;\n      }\n    },\n    onCopy() {\n      this.$message.success(this.$t('Universal_0118'));\n    },\n    gotoChat() {\n      // this.dialogShareVisible = false;\n      this.$emit('dialog-share-close');\n    },\n    queryGroupByGroupId() {\n      let language = this.$i18n.locale;\n      let Baseurl = process.env.VUE_APP_SHARE;\n      let obj = JSON.parse(localStorage.getItem('userInfo'));\n      console.log('-----', obj.inviteCode);\n      this.linkurl = `${Baseurl}/#/invite/personal?userId=${UserInfoUtils.getCurrentUserId()}&inviteCode=${\n        obj.inviteCode\n      }&language=${language}&nickName=${obj.nickName}&category=fgg`;\n      this.linkurl = encodeURI(this.linkurl);\n    },\n    handCloseAddFriends() {\n      this.$emit('handCloseAddFriends', false);\n    },\n    handConfirmDialog(a) {\n      let userid = UserInfoUtils.getCurrentUserId();\n      let param = {\n        userId: userid,\n        friendId: a,\n        source: '1',\n        applyStatus: -1,\n        content: this.text\n      };\n\n      this.addFriends(param);\n      this.$emit('handConfirmFriDialog', false);\n    },\n    handCancelDialog() {\n      // this.text = ''\n      this.$emit('handCancelFriDialog', false);\n      // this.text=`我是${this.friendData.userNickName}`\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.setkeynull();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.queryGroupByGroupId();\n    //  this.text=`我是${this.friendData.userNickName}`\n  },\n  beforeCreate() {}, //生命周期 - 创建之前\n  beforeMount() {}, //生命周期 - 挂载之前\n  beforeUpdate() {}, //生命周期 - 更新之前\n  updated() {}, //生命周期 - 更新之后\n  beforeDestroy() {}, //生命周期 - 销毁之前\n  destroyed() {}, //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang=\"less\" scoped>\n//@import url(); 引入公共css类\n\n.invite-friend {\n  /deep/ .el-dialog__header {\n    text-align: center;\n    padding-top: 10px;\n  }\n\n  /deep/ .el-dialog__title {\n    height: 20px;\n    line-height: 20px;\n    font-size: 14px;\n    font-weight: 500;\n    color: #333;\n  }\n  /deep/ .el-dialog__headerbtn {\n    top: 12px;\n    color: #000;\n    font-size: 14px;\n  }\n\n  /deep/ .el-dialog__body {\n    padding-top: 0;\n    color: #333;\n  }\n\n  .share-link {\n    text-align: center;\n    height: 20px;\n    font-size: 14px;\n\n    font-weight: 400;\n    color: #333;\n    line-height: 20px;\n    margin: 40px auto 15px;\n  }\n  .add-friend-dialog-con {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  /deep/ .el-input__inner,\n  .el-textarea__inner {\n    height: 33px;\n    background: #fbfbfb;\n    border: 1px solid #d7d7d7;\n\n    font-size: 12px;\n\n    font-weight: 400;\n    color: #333;\n  }\n\n  /deep/ .copy {\n    font-size: 12px;\n    font-weight: 400;\n    color: #2f54eb;\n    line-height: 17px;\n  }\n}\n\n.finish-btn {\n  margin-top: 30px;\n  text-align: center;\n\n  /deep/ .el-button--primary {\n    margin: 50px auto 0px;\n\n    width: 202px;\n    height: 28px;\n    background: #2f54eb;\n    border-radius: 3px;\n  }\n  /deep/ .el-button--mini,\n  .el-button--small {\n    font-size: 13px;\n\n    font-weight: 400;\n    padding-top: 7px;\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".invite-friend": {
          "/deep/ .el-dialog__header": {
            "text-align": "center",
            "padding-top": "10px"
          },
          "/deep/ .el-dialog__title": {
            "height": "20px",
            "line-height": "20px",
            "font-size": "14px",
            "font-weight": "500",
            "color": "#333"
          },
          "/deep/ .el-dialog__headerbtn": {
            "top": "12px",
            "color": "#000",
            "font-size": "14px"
          },
          "/deep/ .el-dialog__body": {
            "padding-top": "0",
            "color": "#333"
          },
          ".share-link": {
            "text-align": "center",
            "height": "20px",
            "font-size": "14px",
            "font-weight": "400",
            "color": "#333",
            "line-height": "20px",
            "margin": "40px auto 15px"
          },
          ".add-friend-dialog-con": {
            "display": "flex",
            "justify-content": "space-between",
            "align-items": "center"
          },
          "/deep/ .el-input__inner,  .el-textarea__inner": {
            "height": "33px",
            "background": "#fbfbfb",
            "border": "1px solid #d7d7d7",
            "font-size": "12px",
            "font-weight": "400",
            "color": "#333"
          },
          "/deep/ .copy": {
            "font-size": "12px",
            "font-weight": "400",
            "color": "#2f54eb",
            "line-height": "17px"
          }
        },
        ".finish-btn": {
          "margin-top": "30px",
          "text-align": "center",
          "/deep/ .el-button--primary": {
            "margin": "50px auto 0px",
            "width": "202px",
            "height": "28px",
            "background": "#2f54eb",
            "border-radius": "3px"
          },
          "/deep/ .el-button--mini,  .el-button--small": {
            "font-size": "13px",
            "font-weight": "400",
            "padding-top": "7px"
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/components/common/MergeTransferMessage.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <el-dialog\n      v-dialogDrag\n      :title=\"title ? $t('chat_0042', {user: title}) : $t('chat_0043')\"\n      @open=\"onOpen\"\n      :visible.sync=\"mergeTransferMessageVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      width=\"640px\"\n      custom-class=\"merge-transfer-el-dialog\"\n      center\n    >\n      <div class=\"share\">\n        <img src=\"../../../../assets/images/chat_record_share.png\" @click=\"shareToFriend\" />\n      </div>\n\n      <div class=\"flex flex-direction\">\n        <span class=\"content\">\n          <ul>\n            <li v-for=\"item in msgItem.msgBody.msgs\" :key=\"item.timestamp\">\n              <div class=\"itemClass\">\n                <DiDiServiceIcon v-if=\"isDiDiService(item.fromId)\" :id=\"item.fromId\" />\n                <!-- <MemberIcon\n                  v-else\n                  :image=\"item.fromIcon || require('../../../../assets/images/default.png')\"\n                  :userRank=\"+item.userRank\"\n                  :vipType=\"+item.vipType\"\n                  type=\"medium\"\n                /> -->\n                <MemberIcon\n                  v-else\n                  :image=\"item.fromIcon || require('../../../../assets/images/default.png')\"\n                  :userRank=\"+item.userRank\"\n                  :vipType=\"+item.vipType\"\n                  type=\"medium\"\n                />\n                <div class=\"itemDetail\">\n                  <div class=\"name-time\">\n                    <span class=\"name\">\n                      <span class=\"fromName blank pre\">{{ item.fromName || '' }}</span>\n\n                      <LuckIdIcon\n                        v-if=\"item.inviteCodeType == 1 && +item.userRank > 0\"\n                        :inviteCode=\"item.inviteCode\"\n                        :userRank=\"+item.userRank\"\n                        iconType=\"large\"\n                        :vipType=\"+item.vipType\"\n                        :inviteCodeType=\"+item.inviteCodeType\"\n                        :listFlag=\"false\"\n                        class=\"blank\"\n                      />\n                      <LevelIcon\n                        v-if=\"!isDiDiService(item.fromId) && +item.userRank > 0\"\n                        :inviteCode=\"item.inviteCode\"\n                        :userRank=\"+item.userRank\"\n                        iconType=\"large\"\n                        :vipType=\"+item.vipType\"\n                        :inviteCodeType=\"+item.inviteCodeType\"\n                      />\n                    </span>\n                    <span class=\"time\">{{ massageTime(item.timestamp) }}</span>\n                  </div>\n                  <div @click=\"clickItem(item)\">\n                    <MessageFormat v-bind:item=\"item\" :parentMsgId='msgItem.msgId' />\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </span>\n      </div>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"$t('Universal_0202')\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n  </div>\n</template>\n\n<script>\nimport path from 'path';\nimport fileOperational from '@/services/fileOperational';\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\nimport MessageFormat from '@/view/chat/components/common/MessageFormat';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport DiDiServiceIcon from '@/view/chat/components/common/DiDiServiceIcon';\nimport moment from 'moment';\nimport { downloadVideo } from \"@/utils/autoDownloadVideo\";\nimport { checkVideoIsExists } from \"@/utils/file\";\nimport { mapGetters } from 'vuex';\nimport {remote} from \"electron\";\nimport {updateMessageByMsgId} from \"@/utils/autoDownloadVideo\";\nlet configDir = path.join(remote.app.getPath('appData'), `${process.env.VUE_APP_ID}`);\nconst { FileUpload } = require('@/utils/fileUpload');\n// import { videoCode} from \"@/utils/const\";\nimport { isSupportVideoPlay } from \"@/utils/index\";\nimport { checkkArrProps } from \"@/utils\";\n\nexport default {\n  name: 'MergeTransferMessage',\n  components: {\n    GroupAndInviteChat,\n    MessageFormat,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n    DiDiServiceIcon\n  },\n  props: {\n    title: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    msgItem: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  watch: {\n    msgItem: {\n      deep: true,\n      immediate: true,\n      handler: function (v) {\n        if (v.uniqueCode && v.msgType == '40' && v.msgBody.msgs.length) {\n          v.msgBody.msgs.forEach(i => {\n            if (i.msgType == '10') {\n              i.uniqueCode = v.uniqueCode;\n            }\n          });\n        }\n      }\n    }\n  },\n  data() {\n    return {\n      mergeTransferMessageVisible: false,\n      GroupInviteVisible: false\n    };\n  },\n  computed: {\n    ...mapGetters(['videoDownloadPercent']),\n    massageTime() {\n      return timestamp => {\n        return moment(timestamp).format('MM-DD HH:mm');\n      };\n    },\n    isDiDiService() {\n      return id => {\n        return id == '1032384035881537536' || id == '1008455862495526912' || id == this.$paymentId;\n      };\n    }\n  },\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    getFileType(format) {\n      this.$parent.getFileType(format);\n    },\n    onPop() {\n      this.mergeTransferMessageVisible = true;\n    },\n    onClose() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onCancel() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onSubmit() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onOpen() {},\n    async shareToFriend() {\n      this.GroupInviteVisible = true;\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.msgItem]);\n    },\n    getCardItem() {\n      return {};\n    },\n    confirmDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    cancelDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    transferSuccess() {\n      this.GroupInviteVisible = false;\n      this.cardDialogVisible = false;\n    },\n    async clickItem(item) {\n      console.log('clickItem- ',item)\n      if (item.msgType == '2') { // 图片\n        this.viewerImgShow(item)\n      }else if (item.msgType == '10') { // 视频\n        // 如果有downloadPath,判断是否是在本机\n        let inCurrentPC = true;\n        if (item.msgBody.downloadPath) {\n          let paths = item.msgBody.downloadPath.split('\\\\files\\\\')[0];\n          inCurrentPC = configDir.includes(paths);\n        }\n        if (!item.msgBody.downloadPath || !inCurrentPC) {\n          await downloadVideo(item, this, true);\n          this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: false});\n        }\n        // await this.viewerShow(item);\n        try {\n          let flag = await checkVideoIsExists(item.msgBody.downloadPath);\n          let paths = item.msgBody.downloadPath.split('\\\\files\\\\')[0];\n          console.log('paths-- ',paths, configDir)\n          let inCurrentPC = configDir.includes(paths);\n          console.log('inCurrentPC-- ',inCurrentPC)\n          if (!inCurrentPC) {\n            this.$store.commit('SET_VIDEO_EXIST', {msId: item.msgId, notInCurrentPC: true});\n            await downloadVideo(item, this);\n            this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: false});\n            return;\n          }\n          if (flag) {\n            console.log('存在')\n            if (!this.videoDownloadPercent[item.msgId]) {\n              await downloadVideo(item, this);\n              this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: false});\n              return;\n            }\n            if (this.videoDownloadPercent[item.msgId] < 100) return;\n            // await this.viewerShow(item);\n            const files = new FileUpload(item.msgBody.downloadPath,item.reqId);\n            const isSupportVideo = await isSupportVideoPlay(files)\n            item.msgBody.isSupportVideo = isSupportVideo\n            await updateMessageByMsgId(item);\n            await this.viewerVideoShow(item);\n\n          } else {\n            console.log('不存在')\n            this.$message.error(this.$t('chat_0124'));\n            this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: true});\n          }\n        } catch (e) {\n          console.log('出错了')\n          await downloadVideo(item, this);\n          this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: false});\n        }\n      }\n    },\n\n    // 图片展示\n    viewerImgShow(item) {\n      // 获取当前聊天中所以的图片\n      let imglsitTmp = []\n      imglsitTmp = this.msgItem.msgBody.msgs.filter(item => {\n        if (item.msgType == '2') {\n          return true;\n        }\n      });\n      // 包装成图片展示对象\n      imglsitTmp = imglsitTmp.map(item => {\n        let img = {};\n        img.url = item.msgBody.localId || item.msgBody.mediaId;\n        img.reqId = item.reqId;\n        img.msgBody = item.msgBody;\n        img.msgId = item.msgId;\n        img.fromId = item.fromId;\n        img.targetId = item.targetId;\n        return img;\n      });\n      let index = imglsitTmp.findIndex(img => {\n        return item.reqId == img.reqId;\n      });\n      this.$nextTick(() => {\n        this.openMediaViewer(item.msgType, imglsitTmp, index);\n      });\n    },\n\n    async viewerVideoShow(item) {\n      let flag = await checkVideoIsExists(item.msgBody.downloadPath);\n      if (flag) {\n        console.log('存在')\n        this.$nextTick(() => {\n          const { ipcRenderer } = require('electron');\n          ipcRenderer.send('media-viewer', {\n            msgType: item.msgType,\n            item\n          });\n        });\n      } else {\n        console.log('不存在')\n        await downloadVideo(item, this);\n        this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: false});\n      }\n    },\n\n    openMediaViewer(msgType, imgList, index) {\n      const { ipcRenderer } = require('electron');\n      const flag = checkkArrProps(imgList, 'msgBody')\n      console.log('flag ====> imgList 存在undefind ', flag);\n      if (flag) {\n        ipcRenderer.send('media-viewer', { msgType, imgList, index });\n      }\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div>\n    <el-dialog\n      v-dialogDrag\n      :title=\"title ? $t('chat_0042', {user: title}) : $t('chat_0043')\"\n      @open=\"onOpen\"\n      :visible.sync=\"mergeTransferMessageVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      width=\"640px\"\n      custom-class=\"merge-transfer-el-dialog\"\n      center\n    >\n      <div class=\"share\">\n        <img src=\"../../../../assets/images/chat_record_share.png\" @click=\"shareToFriend\" />\n      </div>\n\n      <div class=\"flex flex-direction\">\n        <span class=\"content\">\n          <ul>\n            <li v-for=\"item in msgItem.msgBody.msgs\" :key=\"item.timestamp\">\n              <div class=\"itemClass\">\n                <DiDiServiceIcon v-if=\"isDiDiService(item.fromId)\" :id=\"item.fromId\" />\n                <!-- <MemberIcon\n                  v-else\n                  :image=\"item.fromIcon || require('../../../../assets/images/default.png')\"\n                  :userRank=\"+item.userRank\"\n                  :vipType=\"+item.vipType\"\n                  type=\"medium\"\n                /> -->\n                <MemberIcon\n                  v-else\n                  :image=\"item.fromIcon || require('../../../../assets/images/default.png')\"\n                  :userRank=\"+item.userRank\"\n                  :vipType=\"+item.vipType\"\n                  type=\"medium\"\n                />\n                <div class=\"itemDetail\">\n                  <div class=\"name-time\">\n                    <span class=\"name\">\n                      <span class=\"fromName blank pre\">{{ item.fromName || '' }}</span>\n\n                      <LuckIdIcon\n                        v-if=\"item.inviteCodeType == 1 && +item.userRank > 0\"\n                        :inviteCode=\"item.inviteCode\"\n                        :userRank=\"+item.userRank\"\n                        iconType=\"large\"\n                        :vipType=\"+item.vipType\"\n                        :inviteCodeType=\"+item.inviteCodeType\"\n                        :listFlag=\"false\"\n                        class=\"blank\"\n                      />\n                      <LevelIcon\n                        v-if=\"!isDiDiService(item.fromId) && +item.userRank > 0\"\n                        :inviteCode=\"item.inviteCode\"\n                        :userRank=\"+item.userRank\"\n                        iconType=\"large\"\n                        :vipType=\"+item.vipType\"\n                        :inviteCodeType=\"+item.inviteCodeType\"\n                      />\n                    </span>\n                    <span class=\"time\">{{ massageTime(item.timestamp) }}</span>\n                  </div>\n                  <div @click=\"clickItem(item)\">\n                    <MessageFormat v-bind:item=\"item\" :parentMsgId='msgItem.msgId' />\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </span>\n      </div>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"$t('Universal_0202')\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n  </div>\n</template>\n\n<script>\nimport path from 'path';\nimport fileOperational from '@/services/fileOperational';\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\nimport MessageFormat from '@/view/chat/components/common/MessageFormat';\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport DiDiServiceIcon from '@/view/chat/components/common/DiDiServiceIcon';\nimport moment from 'moment';\nimport { downloadVideo } from \"@/utils/autoDownloadVideo\";\nimport { checkVideoIsExists } from \"@/utils/file\";\nimport { mapGetters } from 'vuex';\nimport {remote} from \"electron\";\nimport {updateMessageByMsgId} from \"@/utils/autoDownloadVideo\";\nlet configDir = path.join(remote.app.getPath('appData'), `${process.env.VUE_APP_ID}`);\nconst { FileUpload } = require('@/utils/fileUpload');\n// import { videoCode} from \"@/utils/const\";\nimport { isSupportVideoPlay } from \"@/utils/index\";\nimport { checkkArrProps } from \"@/utils\";\n\nexport default {\n  name: 'MergeTransferMessage',\n  components: {\n    GroupAndInviteChat,\n    MessageFormat,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n    DiDiServiceIcon\n  },\n  props: {\n    title: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    msgItem: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  watch: {\n    msgItem: {\n      deep: true,\n      immediate: true,\n      handler: function (v) {\n        if (v.uniqueCode && v.msgType == '40' && v.msgBody.msgs.length) {\n          v.msgBody.msgs.forEach(i => {\n            if (i.msgType == '10') {\n              i.uniqueCode = v.uniqueCode;\n            }\n          });\n        }\n      }\n    }\n  },\n  data() {\n    return {\n      mergeTransferMessageVisible: false,\n      GroupInviteVisible: false\n    };\n  },\n  computed: {\n    ...mapGetters(['videoDownloadPercent']),\n    massageTime() {\n      return timestamp => {\n        return moment(timestamp).format('MM-DD HH:mm');\n      };\n    },\n    isDiDiService() {\n      return id => {\n        return id == '1032384035881537536' || id == '1008455862495526912' || id == this.$paymentId;\n      };\n    }\n  },\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    getFileType(format) {\n      this.$parent.getFileType(format);\n    },\n    onPop() {\n      this.mergeTransferMessageVisible = true;\n    },\n    onClose() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onCancel() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onSubmit() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onOpen() {},\n    async shareToFriend() {\n      this.GroupInviteVisible = true;\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.msgItem]);\n    },\n    getCardItem() {\n      return {};\n    },\n    confirmDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    cancelDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    transferSuccess() {\n      this.GroupInviteVisible = false;\n      this.cardDialogVisible = false;\n    },\n    async clickItem(item) {\n      console.log('clickItem- ',item)\n      if (item.msgType == '2') { // 图片\n        this.viewerImgShow(item)\n      }else if (item.msgType == '10') { // 视频\n        // 如果有downloadPath,判断是否是在本机\n        let inCurrentPC = true;\n        if (item.msgBody.downloadPath) {\n          let paths = item.msgBody.downloadPath.split('\\\\files\\\\')[0];\n          inCurrentPC = configDir.includes(paths);\n        }\n        if (!item.msgBody.downloadPath || !inCurrentPC) {\n          await downloadVideo(item, this, true);\n          this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: false});\n        }\n        // await this.viewerShow(item);\n        try {\n          let flag = await checkVideoIsExists(item.msgBody.downloadPath);\n          let paths = item.msgBody.downloadPath.split('\\\\files\\\\')[0];\n          console.log('paths-- ',paths, configDir)\n          let inCurrentPC = configDir.includes(paths);\n          console.log('inCurrentPC-- ',inCurrentPC)\n          if (!inCurrentPC) {\n            this.$store.commit('SET_VIDEO_EXIST', {msId: item.msgId, notInCurrentPC: true});\n            await downloadVideo(item, this);\n            this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: false});\n            return;\n          }\n          if (flag) {\n            console.log('存在')\n            if (!this.videoDownloadPercent[item.msgId]) {\n              await downloadVideo(item, this);\n              this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: false});\n              return;\n            }\n            if (this.videoDownloadPercent[item.msgId] < 100) return;\n            // await this.viewerShow(item);\n            const files = new FileUpload(item.msgBody.downloadPath,item.reqId);\n            const isSupportVideo = await isSupportVideoPlay(files)\n            item.msgBody.isSupportVideo = isSupportVideo\n            await updateMessageByMsgId(item);\n            await this.viewerVideoShow(item);\n\n          } else {\n            console.log('不存在')\n            this.$message.error(this.$t('chat_0124'));\n            this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: true});\n          }\n        } catch (e) {\n          console.log('出错了')\n          await downloadVideo(item, this);\n          this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: false});\n        }\n      }\n    },\n\n    // 图片展示\n    viewerImgShow(item) {\n      // 获取当前聊天中所以的图片\n      let imglsitTmp = []\n      imglsitTmp = this.msgItem.msgBody.msgs.filter(item => {\n        if (item.msgType == '2') {\n          return true;\n        }\n      });\n      // 包装成图片展示对象\n      imglsitTmp = imglsitTmp.map(item => {\n        let img = {};\n        img.url = item.msgBody.localId || item.msgBody.mediaId;\n        img.reqId = item.reqId;\n        img.msgBody = item.msgBody;\n        img.msgId = item.msgId;\n        img.fromId = item.fromId;\n        img.targetId = item.targetId;\n        return img;\n      });\n      let index = imglsitTmp.findIndex(img => {\n        return item.reqId == img.reqId;\n      });\n      this.$nextTick(() => {\n        this.openMediaViewer(item.msgType, imglsitTmp, index);\n      });\n    },\n\n    async viewerVideoShow(item) {\n      let flag = await checkVideoIsExists(item.msgBody.downloadPath);\n      if (flag) {\n        console.log('存在')\n        this.$nextTick(() => {\n          const { ipcRenderer } = require('electron');\n          ipcRenderer.send('media-viewer', {\n            msgType: item.msgType,\n            item\n          });\n        });\n      } else {\n        console.log('不存在')\n        await downloadVideo(item, this);\n        this.$store.commit('CLEAR_FILE_DOWNLOAD', {msId: item.msgId, beCleared: false});\n      }\n    },\n\n    openMediaViewer(msgType, imgList, index) {\n      const { ipcRenderer } = require('electron');\n      const flag = checkkArrProps(imgList, 'msgBody')\n      console.log('flag ====> imgList 存在undefind ', flag);\n      if (flag) {\n        ipcRenderer.send('media-viewer', { msgType, imgList, index });\n      }\n    }\n  }\n};\n</script>\n<style>\n.merge-transfer-el-dialog .el-dialog__header {\n  padding: 15px 0;\n}\n.merge-transfer-el-dialog {\n  border-radius: 10px;\n  background: #f8f8f8;\n  -webkit-app-region: no-drag;\n}\n.merge-transfer-el-dialog .el-dialog__header span {\n  font-size: 14px;\n  font-weight: 500;\n  color: #333333;\n  /*max-width: 500px;*/\n  /*display: inline-block;*/\n  /*overflow: hidden;*/\n  /*text-overflow: ellipsis;*/\n  /*white-space: nowrap;*/\n}\n.merge-transfer-el-dialog .el-dialog__body {\n  padding: 5px 20px;\n}\n</style>\n<style lang=\"less\" scoped>\n.merge-transfer-el-dialog {\n  position: relative;\n  .share {\n    position: absolute;\n    top: 20px;\n    left: 575px;\n    img {\n      width: 16px;\n      height: 16px;\n      cursor: pointer;\n    }\n  }\n  .content {\n    max-height: 400px;\n    overflow-y: scroll;\n    .fromIcon {\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n    }\n    .itemClass {\n      display: flex;\n      flex-direction: row;\n      padding: 10px 0;\n      .itemDetail {\n        display: flex;\n        flex-direction: column;\n        margin-left: 20px;\n        // width: 100%;\n        width: calc( 100% - 62px );\n        justify-content: space-evenly;\n        justify-content: space-evenly;\n        padding-bottom: 25px;\n        border-bottom: 1px solid #d8d8d8;\n        /deep/ .imgMsg>img{\n          max-width: 100%;\n        }\n        .name-time {\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n          padding-bottom: 5px;\n          // margin-right: 7px;\n          .name {\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            .fromName {\n              font-size: 14px;\n              color: #999999;\n            }\n            .blank {\n              padding-right: 5px;\n            }\n          }\n          .time {\n            font-size: 12px;\n            color: #999999;\n          }\n        }\n        .message-text {\n          color: #333333;\n        }\n      }\n\n      /deep/ .miniVip{\n        bottom: 0;top: 26px;\n      }\n    }\n  }\n}\n.pre {\n  white-space: pre;\n}\n</style>\n",
    "cssJson": [
      {
        ".merge-transfer-el-dialog .el-dialog__header": {
          "padding": "15px 0"
        },
        ".merge-transfer-el-dialog": {
          "border-radius": "10px",
          "background": "#f8f8f8",
          "-webkit-app-region": "no-drag"
        },
        ".merge-transfer-el-dialog .el-dialog__header span": {
          "font-size": "14px",
          "font-weight": "500",
          "color": "#333333"
        },
        ".merge-transfer-el-dialog .el-dialog__body": {
          "padding": "5px 20px"
        }
      },
      {
        ".merge-transfer-el-dialog": {
          "position": "relative",
          ".share": {
            "position": "absolute",
            "top": "20px",
            "left": "575px",
            "img": {
              "width": "16px",
              "height": "16px",
              "cursor": "pointer"
            }
          },
          ".content": {
            "max-height": "400px",
            "overflow-y": "scroll",
            ".fromIcon": {
              "width": "48px",
              "height": "48px",
              "border-radius": "50%"
            },
            ".itemClass": {
              "display": "flex",
              "flex-direction": "row",
              "padding": "10px 0",
              ".itemDetail": {
                "display": "flex",
                "flex-direction": "column",
                "margin-left": "20px",
                "width": "calc( 100% - 62px )",
                "justify-content": "space-evenly",
                "padding-bottom": "25px",
                "border-bottom": "1px solid #d8d8d8",
                "/deep/ .imgMsg>img": {
                  "max-width": "100%"
                },
                ".name-time": {
                  "display": "flex",
                  "flex-direction": "row",
                  "justify-content": "space-between",
                  "padding-bottom": "5px",
                  ".name": {
                    "display": "flex",
                    "flex-direction": "row",
                    "align-items": "center",
                    ".fromName": {
                      "font-size": "14px",
                      "color": "#999999"
                    },
                    ".blank": {
                      "padding-right": "5px"
                    }
                  },
                  ".time": {
                    "font-size": "12px",
                    "color": "#999999"
                  }
                },
                ".message-text": {
                  "color": "#333333"
                }
              },
              "/deep/ .miniVip": {
                "bottom": "0",
                "top": "26px"
              }
            }
          }
        },
        ".pre": {
          "white-space": "pre"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/components/common/DiDiServiceIcon.vue",
    "tagInfo": {
      "0": "<style scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div class=\"didi-service-icon\">\n    <img class=\"serviceIconClass\" :src=\"findImage\" alt />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nexport default {\n  name: 'DiDiServiceIcon',\n  props: {\n    id: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  computed: {\n    findImage() {\n      let result = this.$store.state.common.didiServiceIcons.find(item => item.id == this.id);\n      if (result) {\n        return fileOperational.getImage(result.icon);\n      }\n      return fileOperational.getImage('https://oss.didimessage.com/images/permanent/logo/logo_v1.png');\n    }\n  },\n  methods: {}\n};\n</script>",
    "originData": "<template>\n  <div class=\"didi-service-icon\">\n    <img class=\"serviceIconClass\" :src=\"findImage\" alt />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nexport default {\n  name: 'DiDiServiceIcon',\n  props: {\n    id: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  computed: {\n    findImage() {\n      let result = this.$store.state.common.didiServiceIcons.find(item => item.id == this.id);\n      if (result) {\n        return fileOperational.getImage(result.icon);\n      }\n      return fileOperational.getImage('https://oss.didimessage.com/images/permanent/logo/logo_v1.png');\n    }\n  },\n  methods: {}\n};\n</script>\n\n<style scoped>\n.serviceIconClass {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n}\n.didi-service-icon {\n  margin-right: -8px;\n}\n</style>\n",
    "cssJson": [
      {
        ".serviceIconClass": {
          "width": "40px",
          "height": "40px",
          "border-radius": "50%"
        },
        ".didi-service-icon": {
          "margin-right": "-8px"
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/components/common/MessageFormat.vue",
    "tagInfo": {
      "0": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <div class=\"words\" v-if=\"item.msgType == '1' || item.msgType == '25'\">\n      <MessageFormatText v-bind:text=\"item.text || item.msgBody.text\" />\n    </div>\n\n    <div v-else-if=\"item.msgType == '6'\" class=\"fileBox\" v-loading=\"downloadLoading\" element-loading-spinner=\"el-icon-loading\">\n      <div class=\"flex align-center\" @click=\"onOpenFile(item)\">\n        <div class=\"flex-sub flex-direction\" style=\"width: 80%\">\n          <span class=\"file-title\">{{ item.msgBody && (item.msgBody.fileName || item.msgBody.fname) }}</span>\n          <p class=\"file-size\">{{ item.msgBody.fsize | formatFileSize }}</p>\n        </div>\n        <img :src=\"require(`../../../../assets/images/${getFileType(item.msgBody.format)}.png`)\" width=\"40\" height=\"40\" alt />\n      </div>\n      <!--      <el-progress :percentage=\"percentageProgress(item.msgBody.downloadPercent)\" ></el-progress>-->\n      <div class=\"load-border text-right\">\n        <span v-if=\"getCurFileStatus==0\">\n          {{ $t('personal_0026') }} {{ item.msgBody.downloadPercent }}\n        </span>\n        <span v-if=\"getCurFileStatus==-1\" ref=\"downloadbutton\" @click=\"downFile(item.msgBody)\"\n          >{{ $t('Universal_0358') }}</span\n        >\n        <template v-if=\"getCurFileStatus==1\">\n          <span @click=\"openFile(item)\">\n            {{ $t('Universal_0356') }}\n          </span>\n          <span @click=\"saveFileAs(item.msgBody)\">\n            {{ $t('Universal_0357') }}\n          </span>\n        </template>\n      </div>\n    </div>\n    <div v-else-if=\"item.msgType == '2'\" class=\"imgMsg\">\n      <img :src=\"findImage(item)\" alt />\n    </div>\n    <div v-else-if=\"item.msgType == '10'\" class=\"videoMsg r\"\n      :style=\"{background: item.msgBody.noFirstFrame || item.msgBody.isH265 ? '#cfe1ff': ''}\">\n      <img\n          :src=\"messageItem.msgBody.firstFrame.mediaId\"\n          alt=\"\"\n          class=\"videoShow\"\n          :height=\"messageItem.msgBody.firstFrame.height || messageItem.msgBody.height\"\n          :width=\"messageItem.msgBody.firstFrame.width || messageItem.msgBody.width\"\n      />\n<!--      {{'finished: '+item.msgBody.downloadFinished}}<br>\n      {{'percent: '+videoDownloadPercent[item.msgId]}}<br>\n      {{'clear: '+!fileBeCleared[item.msgId]}}<br>\n      {{'path: '+item.msgBody.downloadPath}}-->\n      <i class=\"el-icon-video-play videoStart\"\n         v-show=\"(item.msgBody.downloadFinished||videoDownloadPercent[item.msgId]==100||!item.msgBody.downloadLoading)&&\n         !fileBeCleared[item.msgId]\" />\n      <span class=\"progress-mask\"\n            v-show=\"item.msgBody.downloadLoading&&\n            videoDownloadPercent[item.msgId]!==100&&\n            !fileBeCleared[item.msgId]\"></span>\n      <el-progress type=\"circle\"\n                   ref=\"progress\"\n                   :percentage=\"videoDownloadPercent[item.msgId]||0\"\n                   class=\"videoStart downloadProcess\"\n                   :show-text=\"false\"\n                   :width=\"40\"\n                   v-show=\"videoDownloadPercent[item.msgId]<100\"\n                   color=\"#2f54eb\"\n                   :stroke-width=\"3\"\n      ></el-progress>\n      <i class=\"el-icon-warning videoStart\"\n         v-show=\"\n\n         fileBeCleared[item.msgId]\"></i>\n    </div>\n    <div v-else-if=\"item.msgType == '14'\">\n      <span>{{ $t('chat_0087') }}</span>\n    </div>\n    <div v-else-if=\"item.msgType == '44'\">\n      <span>{{ $t('chat_0088') }}</span>\n    </div>\n    <div v-else-if=\"item.msgType == '61' && item.fromType == '999'\">\n      <span>{{ $t('chat_0127') }}</span>\n    </div>\n    <div v-else-if=\"item.msgType == '15'\"\n         class=\"card\"\n         @click=\"lookcard(item)\">\n      <div class=\"cardinfo\" v-if=\"item.msgBody.type == '2'\"><!--群名片 -->\n        <img :src=\"item.msgBody.msgUrl\" />\n        <span class=\"cardName\" style=\"margin-left:5px;\">\n          <label class=\"\" style=\"color: #333\">{{ item.msgBody.name }}</label>\n          <br />\n          <label style=\"font-size:10px;color:#999\">ID:{{ item.msgBody.code }}</label>\n        </span>\n      </div>\n      <div class=\"cardinfo\" v-else>\n        <MemberIcon\n          :vipType=\"Number(item.msgBody.vipType)\"\n          :image=\"item.msgBody.msgUrl\"\n          iconType=\"mini\"\n          :userRank=\"+item.msgBody.userRank\"\n        />\n        <div class=\"topitem\">\n          <span style=\"display:flex;align-items:center;margin-bottom:5px;\">\n            <label class=\"cardName\" style=\"color: #333\">{{ item.msgBody.name }}</label>\n            <LevelIcon\n              :inviteCode=\"item.msgBody.code\"\n              :userRank=\"+item.msgBody.userRank\"\n              iconType=\"small\"\n              :vipType=\"+item.msgBody.vipType\"\n              :inviteCodeType=\"+item.msgBody.inviteCodeType\"\n              :listFlag=\"true\"\n              style=\"padding-left: 2px;\"\n            />\n          </span>\n          <!-- {{ item.msgBody.code }} -->\n          <LuckIdIcon\n            :inviteCode=\"item.msgBody.code\"\n            :userRank=\"+item.msgBody.userRank\"\n            iconType=\"medium\"\n            :vipType=\"+item.msgBody.vipType\"\n            :inviteCodeType=\"+item.msgBody.inviteCodeType\"\n            :listFlag=\"false\"\n          />\n        </div>\n      </div>\n      <p v-if=\"item.msgBody.type == 1\">{{ $t('chat_0021') }}</p>\n      <p v-else>{{ $t('chat_0023') }}</p>\n    </div>\n    <div v-else-if=\"item.msgType == '40'\" class=\"mergeTransferClass\" @click=\"showMergeTransferDialog\">\n      <div class=\"flex flex-direction\">\n<!--        <span class=\"title\">{{ item.msgBody.title || '社区' }}的聊天记录</span>-->\n        <span class=\"title\" v-if=\"item.msgBody.title\">{{ item.msgBody.title }}{{ $t('chat_0044') }}</span>\n        <span class=\"title\" v-else>{{ $t('chat_0043') }}</span>\n        <span class=\"content\">\n          <ul>\n            <li\n              v-for=\"(message, index) in item.msgBody.msgs\"\n              v-if=\"index < 4\"\n              :key=\"index\"\n              class=\"flex  align-center justify-between\"\n            >\n              <span v-if=\"message.msgType == '1' || message.msgType == '25'\" class=\"user-sign\">\n                <span>{{ `${message.fromName || ''}: ` }}</span>\n                <MessageFormatText v-bind:text=\"message.msgBody.text\" />\n              </span>\n              <span class=\"text\" v-else>{{ messageDetail(message) }}</span>\n            </li>\n          </ul>\n        </span>\n        <el-divider class=\"mergeDivider\"></el-divider>\n        <span class=\"blue\">{{ $t('chat_0042') }}</span>\n      </div>\n    </div>\n    <div v-else-if=\"item.msgType == '56'\" class=\"acitivity\" @click=\"goActivityPage(item)\">\n      <img :src=\"item.msgBody.imgUrl\" alt=\"\">\n      <p class=\"title\">{{item.msgBody.title}}</p>\n      <!-- <p class=\"content\">{{messageItem.msgBody.text}}</p> -->\n      <div class=\"bottom\">\n        <img src=\"../../../../assets/images/didi_activity_icon.png\" alt=\"\"><p>{{$t('chat_0125')}}</p>\n      </div>\n    </div>\n    <MergeTransferDialog :title=\"item.msgBody.title\" :msgItem=\"item\" :parentMsgId=\"parentMsgId\" ref=\"mergeTransferDialog\" />\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardUserId\"\n      ref=\"memberCard\"\n      @handleclosecard=\"handleclosecard\"\n    ></member-card-other>\n    <GroupCard :groupInfo=\"groupCardInfo\" ref=\"groupCard\"></GroupCard>\n  </div>\n</template>\n\n<script>\nimport { remote, shell as eShell } from 'electron';\nimport { checkIsExists, mkdir } from '@/utils/file';\nimport MessageFormatText from '@/view/chat/components/common/MessageFormatText';\nimport MemberCardOther from '@/components/memberCard/MemberCardOther';\nimport GroupCard from '../../group/components/GroupCard';\nimport fileOperational from '@/services/fileOperational';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport request from 'request';\nimport fs from 'fs';\nimport path from 'path';\nimport store from '@/store';\nimport { queryGroupByGroupId } from '../../group/message/server';\nimport {goOfficialPage} from '../../../../utils'\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport emojiList from '@/utils/emoji.js';\nimport { mapGetters } from 'vuex';\nconst configDir = path.join(remote.app.getPath('appData'), `${process.env.VUE_APP_ID}`);\nexport default {\n  name: 'MessageFormat',\n  components: {\n    MessageFormatText,\n    MergeTransferDialog: () => import('./MergeTransferDialog'),\n    MemberCardOther,\n    GroupCard,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  computed: {\n    ...mapGetters(['videoDownloadPercent', 'fileBeCleared', 'videoNotInCurrentPC']),\n    messageDetail() {\n      return message => {\n        let msgTypeObject = {\n          6: this.$t('chat_0017'),\n          2: this.$t('chat_0013'),\n          10: this.$t('chat_0015'),\n          15: this.$t('chat_0024'),\n          40: '['+this.$t('chat_0042')+']',\n          14: this.$t('chat_0025'),\n          44: '[Dapp]',\n          56: this.$t('Universal_0454'),\n          61: this.$t('chat_0127'),\n        };\n        let result = '';\n        if (message.msgType != 15) {\n          result = `${message.fromName || ''}: ${msgTypeObject[message.msgType]}`;\n        } else {\n          if (message.msgBody.type == '1') {\n            result = `${message.fromName || ''}: ${this.$t('chat_0020')}`;\n          } else {\n            result = `${message.fromName || ''}: ${this.$t('chat_0022')}`;\n          }\n        }\n        return result;\n      };\n    },\n    percentageProgress() {\n      return downloadPercent => {\n        if (!downloadPercent) {\n          return 0;\n        } else {\n          return +downloadPercent.slice(0, downloadPercent.length - 1);\n        }\n      };\n    },\n    viewpicStyle() {\n      if (this.rate === 'Hcale3Midwidth') {\n        return {\n          width: `${this.item.msgBody.width}px`,\n          height: `${(this.item.msgBody.width * 1) / 3}px`\n        };\n      }\n      if (this.rate === 'Wcale3MidHight') {\n        return {\n          width: `${(this.item.msgBody.height * 1) / 3}px`,\n          height: this.item.msgBody.height\n        };\n      }\n      return {};\n    },\n    downloadFileInfo() {\n      return store.state.common.downloadFile;\n    },\n    loadDownloadPercent() {\n      let downloadFile = this.$store.state.common.downloadFile;\n      if (downloadFile && downloadFile[this.messageItem.msgBody.reqId]) {\n        return downloadFile[this.messageItem.msgBody.reqId].downloadPercent;\n      } else {\n        return '';\n      }\n    },\n    loadDownloadPath() {\n      let downloadFile = this.$store.state.common.downloadFile;\n      if (downloadFile && downloadFile[this.messageItem.msgBody.reqId]) {\n        return downloadFile[this.messageItem.msgBody.reqId].downloadPath;\n      } else {\n        return '';\n      }\n    },\n    getCurFileStatus(){\n      let {downloadFinished=false,downloadPercent='',downloadPath}=this.item.msgBody;\n      if(downloadFinished&&downloadPath&&downloadPercent=='100%'){\n        return 1;//已下载完成\n      }else if(downloadPercent&&downloadPercent!='100%'){\n        return 0;//下载中\n      }else{\n        return -1//待下载\n      }\n    }\n  },\n  data() {\n    return {\n      isPlayViedo: false,\n      amr: '',\n      soundUrl: require('../../../../assets/images/audio.png'),\n      messageItem: this.item,\n      rate: 'origin', //图片宽高比描述\n      mergeTransferMessageVisible: false,\n      cardUserId: '',\n      cardDialogVisible: false,\n      groupCardInfo: {},\n      emojiList: emojiList,\n      patt: /\\[([^\\\\[])+?\\]/g,\n      downloadLoading: false\n    };\n  },\n  props: {\n    parentMsgId:{type:String},\n    item: { require: true },\n    imglsit: { require: true },\n    isShowRight: { default: true },\n    groupAuthByUser: { default: '' },\n    soundUrlObj: {\n      type: Object,\n      default: () => ({\n        image: require('../../../../assets/images/audio.png'),\n        id: ''\n      })\n    },\n    friendId: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  watch: {\n    item: {\n      deep: true,\n      immediate: true,\n      handler: function (val) {\n        console.log('302val- ',val)\n\n        if (val.msgType == '10') {\n          let width = val.msgBody.firstFrame.width || val.msgBody.width;\n          let height = val.msgBody.firstFrame.height || val.msgBody.height;\n          const rate = width / height;\n          if (rate > 1) {\n            // 比例基 300px\n            val.msgBody.firstFrame.width = 250;\n            val.msgBody.firstFrame.height = 140;\n          } else {\n            val.msgBody.firstFrame.width = 140;\n            val.msgBody.firstFrame.height = 250;\n          }\n        }\n        this.messageItem = val;\n      }\n    },\n    soundUrlObj() {\n      if (this.messageItem.msgId !== this.soundUrlObj.id) {\n        this.soundUrl = require('../../../../assets/images/audio.png');\n      }\n      if (this.messageItem.msgId === this.soundUrlObj.id) {\n        this.soundUrl = this.soundUrlObj.image;\n      }\n    }\n  },\n  methods: {\n    replaceEmoji(newVal) {\n      let originText;\n      let arr;\n      if (newVal) {\n        originText = newVal;\n        arr = originText.match(this.patt);\n      }\n      if (arr && originText) {\n        for (let index = 0; index < arr.length; index++) {\n          let item = arr[index];\n          let ret = this.emojiList.find(x => x.tag == item);\n          if (ret) {\n            /*eslint max-len: [\"error\", { \"code\": 140 }]*/\n            let img = `<img src=\"/resources/emoji/${ret.file}\" width=22px style=\"vertical-align: middle;margin: -5px 2px 0 2px\" />`;\n            originText = originText.replace(item, img);\n          }\n        }\n      }\n      return originText;\n    },\n    showMergeTransferDialog() {\n      this.$nextTick(() => {\n        console.log('this.$refs.mergeTransfer ====== ', this.$refs.mergeTransferDialog);\n        this.$refs.mergeTransferDialog.onMergeTransferDisplay();\n      });\n    },\n    async lookcard(item) {\n      let msgBody;\n      if (item.msgBody instanceof Object) {\n        msgBody = item.msgBody;\n      } else {\n        msgBody = JSON.parse(item.msgBody);\n      }\n      if (msgBody.type == 1) {\n        //个人名片\n        this.cardDialogVisible = true;\n        this.cardUserId = msgBody.id;\n        this.$nextTick(() => {\n          this.$refs.memberCard.onCardShow();\n        });\n      } else {\n        this.groupCardInfo = await this.findGroupInfoInServer(msgBody.id);\n        if (this.groupCardInfo && this.groupCardInfo.id) {\n          this.$refs.groupCard.onPop();\n        } else {\n          const msg = this.$t('chat_0076');\n          this.openMessage(msg);\n        }\n      }\n    },\n    async findGroupInfoInServer(groupId) {\n      let groupInfo = {};\n      let res = await queryGroupByGroupId({ groupId });\n      if (res.code == 200) {\n        groupInfo = res.data;\n        if (groupInfo && groupInfo.country && groupInfo.city) {\n          groupInfo.countryName = await SQLUtils.getTAreaCountryOrCityName(groupInfo.country);\n          groupInfo.cityName = await SQLUtils.getTAreaCountryOrCityName(groupInfo.city);\n          groupInfo.region = groupInfo.countryName + '-' + groupInfo.cityName;\n        } else {\n          groupInfo.region = '';\n          groupInfo.country = '';\n          groupInfo.city = '';\n        }\n      }\n      return groupInfo;\n    },\n    handleclosecard() {\n      this.cardDialogVisible = false;\n    },\n    transferSuccess() {\n      this.cardDialogVisible = false;\n    },\n    // refreshDownloadPercentInStore() {\n    //   this.messageItem.msgBody.timer = setInterval(() => {\n    //     if (this.downloadFileInfo && this.downloadFileInfo[this.messageItem.msgBody.reqId]) {\n    //       this.messageItem.msgBody.downloadFinished = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished;\n    //       this.messageItem.msgBody.downloadPercent = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadPercent;\n    //       this.messageItem.msgBody.downloadPath = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadPath;\n    //     } else {\n    //       this.stopLoadDownloadPercent();\n    //     }\n    //     if (this.messageItem.msgBody.downloadFinished) {\n    //       this.stopLoadDownloadPercent();\n    //     }\n    //   }, 1000);\n    // },\n    // stopLoadDownloadPercent() {\n    //   clearInterval(this.messageItem.msgBody.timer);\n    //   this.messageItem.msgBody.timer = null;\n    // },\n    async downloadFile(fileItem) {\n      const fullPath = await fileOperational.downloadFile(fileItem.fileId, fileItem.fname);\n      let fileState = { key: fileItem.reqId, value: {} };\n      fileState.value.downloadPercent = '100%';\n      fileState.value.downloadPath = fullPath;\n      fileState.value.downloadFinished = true;\n      this.messageItem.msgBody.downloadPercent = '100%';\n      this.messageItem.msgBody.downloadPath = fullPath;\n      this.messageItem.msgBody.downloadFinished = true;\n      this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n    },\n    async saveFileAs(fileItem) {\n      if (!fileItem.downloadPath) return;\n      let filePath = fileItem.downloadPath.replace('\\\\', '/');\n      console.log('file-path', filePath);\n      fs.exists(filePath, exists => {\n        if (!exists) {\n          this.$message.error(this.$t('chat_0097'));\n        } else {\n          const ipc = require('electron').ipcRenderer;\n          ipc.send('saveAsFile', fileItem);\n        }\n      });\n    },\n    debounce(fn, delay) {\n      delay = delay || 200;\n      let timer;\n      return function() {\n        let th = this;\n        let args = arguments;\n        if (timer) {\n          clearTimeout(timer);\n        }\n        timer = setTimeout(function() {\n          timer = null;\n          fn.apply(th, args);\n        }, delay);\n      };\n    },\n    startDownloadFile(fileItem) {\n      this.$refs.downloadbutton.style.visibility = 'hidden';\n      this.$nextTick(() => {\n        this.downFile(fileItem);\n      });\n    },\n    async downFile(fileItem) {\n      console.log('downFile--fileItem--', fileItem);\n      this.downloadLoading = true;\n      if (fileItem.downloadPercent == undefined || fileItem.downloadPercent == '') {\n        this.messageItem.msgBody.reqId = this.messageItem.reqId;\n        this.messageItem.msgBody.downloadPercent = '';\n        this.messageItem.msgBody.downloadFinished = false;\n        this.messageItem.msgBody.downloadPath = '';\n        fileItem.reqId = this.messageItem.reqId;\n        fileItem.downloadPercent = '';\n        fileItem.downloadFinished = false;\n        fileItem.downloadPath = '';\n      }\n      const percentFloat = fileItem.downloadPercent.slice(0, -1) / 100;\n      if (0 < percentFloat && percentFloat < 1) return;\n\n      let baseDir = path.join(configDir, 'files');\n      mkdir(baseDir);\n      let receivedBytes = 0;\n      let totalBytes = 0;\n      let fileName = fileItem.fname;\n      console.log('fileName', fileName);\n      let fullPath = '';\n      if (checkIsExists(baseDir, fileName)) {\n        let i = 1;\n        let suffixIndex = fileName.lastIndexOf('.');\n        console.log('suffixIndex', suffixIndex);\n        let fileNamePrefix = fileName.substr(0, suffixIndex);\n        console.log('fileNamePrefix', fileNamePrefix);\n        let fileNameSuffix = fileName.substr(suffixIndex);\n        console.log('fileNameSuffix', fileNameSuffix);\n        let isExistsFileName = fileNamePrefix\n          .concat('(')\n          .concat('' + i)\n          .concat(')')\n          .concat(fileNameSuffix);\n        console.log('isExistsFileName', isExistsFileName);\n        while (checkIsExists(baseDir, isExistsFileName)) {\n          ++i;\n          isExistsFileName = fileNamePrefix\n            .concat('(')\n            .concat('' + i)\n            .concat(')')\n            .concat(fileNameSuffix);\n          console.log('while-isExistsFileName', isExistsFileName);\n        }\n        fileName = isExistsFileName;\n      }\n\n      fullPath = path.join(baseDir, fileName);\n      console.log('fullPath', fullPath);\n\n      // let fileState = { key: fileItem.reqId, value: {} };\n      // console.log('fileState',fileState);\n      // fileState.value.downloadPercent = \"\";\n      // fileState.value.downloadFinished = false;\n      // fileState.value.downloadPath = \"\";\n      this.messageItem.msgBody.downloadPercent = '';\n      this.messageItem.msgBody.downloadFinished = false;\n      this.messageItem.msgBody.downloadPath = '';\n      // this.$store.commit(\"SET_DOWNLOAD_FILE_INFO\", fileState);\n      // this.refreshDownloadPercentInStore();\n\n      const req = request({\n        method: 'GET',\n        uri: fileItem.fileId,\n        strictSSL: false\n      });\n\n      req.pipe(fs.createWriteStream(fullPath));\n\n      req.on('response', data => {\n        console.log('response-data', data);\n        // 更新总文件字节大小\n        totalBytes = parseInt(data.headers['content-length'], 10);\n        console.log('response-totalBytes', totalBytes);\n        this.downloadLoading = false;\n      });\n\n      req.on('data', chunk => {\n        // 更新下载的文件块字节大小\n        receivedBytes += chunk.length;\n        fileItem.downloadPercent = ((receivedBytes / totalBytes) * 100).toFixed(0) + '%';\n        // this.$store.commit(\"SET_DOWNLOAD_FILE_INFO\", fileState);\n        this.downloadLoading = false;\n        this.$forceUpdate();\n      });\n      req.on('error', async () => {\n        // fileState.value.downloadPercent = \"\";\n        // fileState.value.downloadFinished = false;\n        // fileState.value.downloadPath = \"\";\n        fileItem.downloadPercent = '';\n        fileItem.downloadFinished = false;\n        fileItem.downloadPath = '';\n        this.downloadLoading = false;\n        // this.$store.commit(\"SET_DOWNLOAD_FILE_INFO\", fileState);\n        // await SQLUtils.updateDownloadFileMsgBody(fileState, this.friendId);\n      });\n      req.on('end', async () => {\n        // fileState.value.downloadPath = fullPath;\n        // fileState.value.downloadFinished = true;\n        this.$set(fileItem,'downloadPercent','100%')\n        this.$set(fileItem,'downloadFinished',true)\n        this.$set(fileItem,'downloadPath',fullPath)\n        fileItem.downloadPercent = '100%';\n        fileItem.downloadFinished = true;\n        fileItem.downloadPath = fullPath;\n        // this.$store.commit(\"SET_DOWNLOAD_FILE_INFO\", fileState);\n        // await SQLUtils.updateDownloadFileMsgBody(fileState, this.friendId);\n        this.updateMessageByMsgId(this.item,this.parentMsgId)\n        // const {isEqual} =require('lodash')\n        // console.info('原始入库消息id',this.parentMsgId)\n        // console.info(isEqual(this.item,this.messageItem))\n        // console.info(this.item,this.messageItem)\n        this.$forceUpdate();\n      });\n    },\n    /** 根据MSG ID 更新消息 */\n    async updateMessageByMsgId(msgInfo,parentMsgId) {\n      let tableName = `m_${this.$route.query.id}`;\n      let msg=await window.vm\n        .$knex(tableName)\n        .where({\n          msg_id: parentMsgId\n        })\n      let parentMsgBody=JSON.parse(msg[0].msg_body)\n      let obj=this.setMsgBody(parentMsgBody,msgInfo.reqId,msgInfo.msgBody)\n      await window.vm\n        .$knex(tableName)\n        .where({\n          msg_id: parentMsgId\n        })\n        .update({\n          msg_body: JSON.stringify(obj)\n        });\n      // console.info('已经更新:')\n      // let dd=await window.vm\n      // .$knex(tableName)\n      // .where({\n      //   msg_id: parentMsgId\n      // })\n      // console.info(JSON.parse(dd?.[0]?.msg_body))\n    },\n    setMsgBody(msgBody,reqId,msgInfoMsgBody){\n      if(msgBody?.msgs){\n        msgBody.msgs.forEach(a=>{\n          if(a?.reqId==reqId){\n            a.msgBody=msgInfoMsgBody\n          }else{\n            this.setMsgBody(a.msgBody,reqId,msgInfoMsgBody)\n          }\n        })\n      }\n      return msgBody\n    },\n    onOpenFile(item) {\n      if (!item.msgBody.downloadPercent && !item.msgBody.downloadFinished) {\n        this.downFile(item.msgBody);\n      }\n      if (item.msgBody.downloadFinished && this.isShowRight) {\n        this.openFile(item);\n      }\n    },\n    openFile(item) {\n      if (!item.msgBody.downloadPath) return;\n      let filePath = item.msgBody.downloadPath.replace('\\\\', '/');\n      fs.exists(filePath, exists => {\n        if (!exists) {\n          this.$message.error(this.$t('chat_0097'));\n        } else {\n          let path = item.msgBody.downloadPath.replace(/\\\\/g, '\\\\\\\\');\n          eShell.openPath(path);\n        }\n      });\n    },\n    findImage(item) {\n      const { localId } = item.msgBody;\n      item.msgBody.localId = fileOperational.getImage(item.msgBody.mediaId);\n      let W = item.msgBody.width;\n      let H = item.msgBody.height;\n      let R = W / H;\n      if (R > 3) {\n        if (W >= 120) {\n          this.rate = 'Hcale40Midwidth';\n        } else {\n          this.rate = 'Hcale3Midwidth';\n        }\n      }\n      if (1 <= R && R <= 3) {\n        if (W >= 120) {\n          this.rate = 'midwidth';\n        } else {\n          this.rate = 'origin';\n        }\n      }\n      if (1 / 3 <= R && R < 1) {\n        if (H >= 100) {\n          this.rate = 'midhight';\n        } else {\n          this.rate = 'origin';\n        }\n      }\n      if (R < 1 / 3) {\n        if (H >= 100) {\n          this.rate = 'Wcale30MidHight';\n        } else {\n          this.rate = 'Wcale3MidHight';\n        }\n      }\n      if (localId && checkIsExists(localId)) {\n        return item.msgBody.localId\n      }\n      return fileOperational.getImage(item.msgBody.mediaCondenseId);\n      // return fileOperational.getImage(item.msgBody.mediaId || item.msgBody.mediaCondenseId);\n    },\n    getFileType(format) {\n      if (format == 'zip' || format == 'rar' || format == 'pdf') {\n        return format;\n      } else if (format == 'doc' || format == 'docx') {\n        return 'word';\n      } else if (format == 'ppt' || format == 'pptx') {\n        return 'ppt';\n      } else if (format == 'xls' || format == 'xlsx' || format == 'csv') {\n        return 'excel';\n      } else if (format == 'txt') {\n        return 'txt';\n      } else {\n        return 'icon_un';\n      }\n    },\n    viewerShowChild(item) {\n      console.log('33333333')\n      this.$parent.viewerShow(item);\n    },\n    goActivityPage(msgInfo){\n      console.log(msgInfo)\n      goOfficialPage()\n      // msgInfo.msgBody?.url && eShell.openExternal(msgInfo.msgBody.url);\n    }\n    // initFile() {\n    //   if (this.messageItem.msgBody.downloadPercent == '100%' && this.messageItem.msgBody.downloadFinished) {\n    //     return;\n    //   }\n    //   let downloadFileInfo = store.state.common.downloadFile;\n    //   if (downloadFileInfo && downloadFileInfo[this.messageItem.msgBody.reqId]) {\n    //     this.messageItem.msgBody.downloadFinished = downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished;\n    //     this.messageItem.msgBody.downloadPercent = downloadFileInfo[this.messageItem.msgBody.reqId].downloadPercent;\n    //     this.messageItem.msgBody.downloadPath = downloadFileInfo[this.messageItem.msgBody.reqId].downloadPath;\n    //     this.refreshDownloadPercentInStore();\n    //     if (downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished) {\n    //       clearInterval(this.messageItem.msgBody.timer);\n    //       this.messageItem.msgBody.timer = null;\n    //     }\n    //   }\n    // }\n  }\n};\n</script>",
    "originData": "<template>\n  <div>\n    <div class=\"words\" v-if=\"item.msgType == '1' || item.msgType == '25'\">\n      <MessageFormatText v-bind:text=\"item.text || item.msgBody.text\" />\n    </div>\n\n    <div v-else-if=\"item.msgType == '6'\" class=\"fileBox\" v-loading=\"downloadLoading\" element-loading-spinner=\"el-icon-loading\">\n      <div class=\"flex align-center\" @click=\"onOpenFile(item)\">\n        <div class=\"flex-sub flex-direction\" style=\"width: 80%\">\n          <span class=\"file-title\">{{ item.msgBody && (item.msgBody.fileName || item.msgBody.fname) }}</span>\n          <p class=\"file-size\">{{ item.msgBody.fsize | formatFileSize }}</p>\n        </div>\n        <img :src=\"require(`../../../../assets/images/${getFileType(item.msgBody.format)}.png`)\" width=\"40\" height=\"40\" alt />\n      </div>\n      <!--      <el-progress :percentage=\"percentageProgress(item.msgBody.downloadPercent)\" ></el-progress>-->\n      <div class=\"load-border text-right\">\n        <span v-if=\"getCurFileStatus==0\">\n          {{ $t('personal_0026') }} {{ item.msgBody.downloadPercent }}\n        </span>\n        <span v-if=\"getCurFileStatus==-1\" ref=\"downloadbutton\" @click=\"downFile(item.msgBody)\"\n          >{{ $t('Universal_0358') }}</span\n        >\n        <template v-if=\"getCurFileStatus==1\">\n          <span @click=\"openFile(item)\">\n            {{ $t('Universal_0356') }}\n          </span>\n          <span @click=\"saveFileAs(item.msgBody)\">\n            {{ $t('Universal_0357') }}\n          </span>\n        </template>\n      </div>\n    </div>\n    <div v-else-if=\"item.msgType == '2'\" class=\"imgMsg\">\n      <img :src=\"findImage(item)\" alt />\n    </div>\n    <div v-else-if=\"item.msgType == '10'\" class=\"videoMsg r\"\n      :style=\"{background: item.msgBody.noFirstFrame || item.msgBody.isH265 ? '#cfe1ff': ''}\">\n      <img\n          :src=\"messageItem.msgBody.firstFrame.mediaId\"\n          alt=\"\"\n          class=\"videoShow\"\n          :height=\"messageItem.msgBody.firstFrame.height || messageItem.msgBody.height\"\n          :width=\"messageItem.msgBody.firstFrame.width || messageItem.msgBody.width\"\n      />\n<!--      {{'finished: '+item.msgBody.downloadFinished}}<br>\n      {{'percent: '+videoDownloadPercent[item.msgId]}}<br>\n      {{'clear: '+!fileBeCleared[item.msgId]}}<br>\n      {{'path: '+item.msgBody.downloadPath}}-->\n      <i class=\"el-icon-video-play videoStart\"\n         v-show=\"(item.msgBody.downloadFinished||videoDownloadPercent[item.msgId]==100||!item.msgBody.downloadLoading)&&\n         !fileBeCleared[item.msgId]\" />\n      <span class=\"progress-mask\"\n            v-show=\"item.msgBody.downloadLoading&&\n            videoDownloadPercent[item.msgId]!==100&&\n            !fileBeCleared[item.msgId]\"></span>\n      <el-progress type=\"circle\"\n                   ref=\"progress\"\n                   :percentage=\"videoDownloadPercent[item.msgId]||0\"\n                   class=\"videoStart downloadProcess\"\n                   :show-text=\"false\"\n                   :width=\"40\"\n                   v-show=\"videoDownloadPercent[item.msgId]<100\"\n                   color=\"#2f54eb\"\n                   :stroke-width=\"3\"\n      ></el-progress>\n      <i class=\"el-icon-warning videoStart\"\n         v-show=\"\n\n         fileBeCleared[item.msgId]\"></i>\n    </div>\n    <div v-else-if=\"item.msgType == '14'\">\n      <span>{{ $t('chat_0087') }}</span>\n    </div>\n    <div v-else-if=\"item.msgType == '44'\">\n      <span>{{ $t('chat_0088') }}</span>\n    </div>\n    <div v-else-if=\"item.msgType == '61' && item.fromType == '999'\">\n      <span>{{ $t('chat_0127') }}</span>\n    </div>\n    <div v-else-if=\"item.msgType == '15'\"\n         class=\"card\"\n         @click=\"lookcard(item)\">\n      <div class=\"cardinfo\" v-if=\"item.msgBody.type == '2'\"><!--群名片 -->\n        <img :src=\"item.msgBody.msgUrl\" />\n        <span class=\"cardName\" style=\"margin-left:5px;\">\n          <label class=\"\" style=\"color: #333\">{{ item.msgBody.name }}</label>\n          <br />\n          <label style=\"font-size:10px;color:#999\">ID:{{ item.msgBody.code }}</label>\n        </span>\n      </div>\n      <div class=\"cardinfo\" v-else>\n        <MemberIcon\n          :vipType=\"Number(item.msgBody.vipType)\"\n          :image=\"item.msgBody.msgUrl\"\n          iconType=\"mini\"\n          :userRank=\"+item.msgBody.userRank\"\n        />\n        <div class=\"topitem\">\n          <span style=\"display:flex;align-items:center;margin-bottom:5px;\">\n            <label class=\"cardName\" style=\"color: #333\">{{ item.msgBody.name }}</label>\n            <LevelIcon\n              :inviteCode=\"item.msgBody.code\"\n              :userRank=\"+item.msgBody.userRank\"\n              iconType=\"small\"\n              :vipType=\"+item.msgBody.vipType\"\n              :inviteCodeType=\"+item.msgBody.inviteCodeType\"\n              :listFlag=\"true\"\n              style=\"padding-left: 2px;\"\n            />\n          </span>\n          <!-- {{ item.msgBody.code }} -->\n          <LuckIdIcon\n            :inviteCode=\"item.msgBody.code\"\n            :userRank=\"+item.msgBody.userRank\"\n            iconType=\"medium\"\n            :vipType=\"+item.msgBody.vipType\"\n            :inviteCodeType=\"+item.msgBody.inviteCodeType\"\n            :listFlag=\"false\"\n          />\n        </div>\n      </div>\n      <p v-if=\"item.msgBody.type == 1\">{{ $t('chat_0021') }}</p>\n      <p v-else>{{ $t('chat_0023') }}</p>\n    </div>\n    <div v-else-if=\"item.msgType == '40'\" class=\"mergeTransferClass\" @click=\"showMergeTransferDialog\">\n      <div class=\"flex flex-direction\">\n<!--        <span class=\"title\">{{ item.msgBody.title || '社区' }}的聊天记录</span>-->\n        <span class=\"title\" v-if=\"item.msgBody.title\">{{ item.msgBody.title }}{{ $t('chat_0044') }}</span>\n        <span class=\"title\" v-else>{{ $t('chat_0043') }}</span>\n        <span class=\"content\">\n          <ul>\n            <li\n              v-for=\"(message, index) in item.msgBody.msgs\"\n              v-if=\"index < 4\"\n              :key=\"index\"\n              class=\"flex  align-center justify-between\"\n            >\n              <span v-if=\"message.msgType == '1' || message.msgType == '25'\" class=\"user-sign\">\n                <span>{{ `${message.fromName || ''}: ` }}</span>\n                <MessageFormatText v-bind:text=\"message.msgBody.text\" />\n              </span>\n              <span class=\"text\" v-else>{{ messageDetail(message) }}</span>\n            </li>\n          </ul>\n        </span>\n        <el-divider class=\"mergeDivider\"></el-divider>\n        <span class=\"blue\">{{ $t('chat_0042') }}</span>\n      </div>\n    </div>\n    <div v-else-if=\"item.msgType == '56'\" class=\"acitivity\" @click=\"goActivityPage(item)\">\n      <img :src=\"item.msgBody.imgUrl\" alt=\"\">\n      <p class=\"title\">{{item.msgBody.title}}</p>\n      <!-- <p class=\"content\">{{messageItem.msgBody.text}}</p> -->\n      <div class=\"bottom\">\n        <img src=\"../../../../assets/images/didi_activity_icon.png\" alt=\"\"><p>{{$t('chat_0125')}}</p>\n      </div>\n    </div>\n    <MergeTransferDialog :title=\"item.msgBody.title\" :msgItem=\"item\" :parentMsgId=\"parentMsgId\" ref=\"mergeTransferDialog\" />\n    <member-card-other\n      :cardDialogVisible=\"cardDialogVisible\"\n      :userId=\"cardUserId\"\n      ref=\"memberCard\"\n      @handleclosecard=\"handleclosecard\"\n    ></member-card-other>\n    <GroupCard :groupInfo=\"groupCardInfo\" ref=\"groupCard\"></GroupCard>\n  </div>\n</template>\n\n<script>\nimport { remote, shell as eShell } from 'electron';\nimport { checkIsExists, mkdir } from '@/utils/file';\nimport MessageFormatText from '@/view/chat/components/common/MessageFormatText';\nimport MemberCardOther from '@/components/memberCard/MemberCardOther';\nimport GroupCard from '../../group/components/GroupCard';\nimport fileOperational from '@/services/fileOperational';\nimport SQLUtils from '@/components/db/sqlite.js';\nimport request from 'request';\nimport fs from 'fs';\nimport path from 'path';\nimport store from '@/store';\nimport { queryGroupByGroupId } from '../../group/message/server';\nimport {goOfficialPage} from '../../../../utils'\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport emojiList from '@/utils/emoji.js';\nimport { mapGetters } from 'vuex';\nconst configDir = path.join(remote.app.getPath('appData'), `${process.env.VUE_APP_ID}`);\nexport default {\n  name: 'MessageFormat',\n  components: {\n    MessageFormatText,\n    MergeTransferDialog: () => import('./MergeTransferDialog'),\n    MemberCardOther,\n    GroupCard,\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon\n  },\n  computed: {\n    ...mapGetters(['videoDownloadPercent', 'fileBeCleared', 'videoNotInCurrentPC']),\n    messageDetail() {\n      return message => {\n        let msgTypeObject = {\n          6: this.$t('chat_0017'),\n          2: this.$t('chat_0013'),\n          10: this.$t('chat_0015'),\n          15: this.$t('chat_0024'),\n          40: '['+this.$t('chat_0042')+']',\n          14: this.$t('chat_0025'),\n          44: '[Dapp]',\n          56: this.$t('Universal_0454'),\n          61: this.$t('chat_0127'),\n        };\n        let result = '';\n        if (message.msgType != 15) {\n          result = `${message.fromName || ''}: ${msgTypeObject[message.msgType]}`;\n        } else {\n          if (message.msgBody.type == '1') {\n            result = `${message.fromName || ''}: ${this.$t('chat_0020')}`;\n          } else {\n            result = `${message.fromName || ''}: ${this.$t('chat_0022')}`;\n          }\n        }\n        return result;\n      };\n    },\n    percentageProgress() {\n      return downloadPercent => {\n        if (!downloadPercent) {\n          return 0;\n        } else {\n          return +downloadPercent.slice(0, downloadPercent.length - 1);\n        }\n      };\n    },\n    viewpicStyle() {\n      if (this.rate === 'Hcale3Midwidth') {\n        return {\n          width: `${this.item.msgBody.width}px`,\n          height: `${(this.item.msgBody.width * 1) / 3}px`\n        };\n      }\n      if (this.rate === 'Wcale3MidHight') {\n        return {\n          width: `${(this.item.msgBody.height * 1) / 3}px`,\n          height: this.item.msgBody.height\n        };\n      }\n      return {};\n    },\n    downloadFileInfo() {\n      return store.state.common.downloadFile;\n    },\n    loadDownloadPercent() {\n      let downloadFile = this.$store.state.common.downloadFile;\n      if (downloadFile && downloadFile[this.messageItem.msgBody.reqId]) {\n        return downloadFile[this.messageItem.msgBody.reqId].downloadPercent;\n      } else {\n        return '';\n      }\n    },\n    loadDownloadPath() {\n      let downloadFile = this.$store.state.common.downloadFile;\n      if (downloadFile && downloadFile[this.messageItem.msgBody.reqId]) {\n        return downloadFile[this.messageItem.msgBody.reqId].downloadPath;\n      } else {\n        return '';\n      }\n    },\n    getCurFileStatus(){\n      let {downloadFinished=false,downloadPercent='',downloadPath}=this.item.msgBody;\n      if(downloadFinished&&downloadPath&&downloadPercent=='100%'){\n        return 1;//已下载完成\n      }else if(downloadPercent&&downloadPercent!='100%'){\n        return 0;//下载中\n      }else{\n        return -1//待下载\n      }\n    }\n  },\n  data() {\n    return {\n      isPlayViedo: false,\n      amr: '',\n      soundUrl: require('../../../../assets/images/audio.png'),\n      messageItem: this.item,\n      rate: 'origin', //图片宽高比描述\n      mergeTransferMessageVisible: false,\n      cardUserId: '',\n      cardDialogVisible: false,\n      groupCardInfo: {},\n      emojiList: emojiList,\n      patt: /\\[([^\\\\[])+?\\]/g,\n      downloadLoading: false\n    };\n  },\n  props: {\n    parentMsgId:{type:String},\n    item: { require: true },\n    imglsit: { require: true },\n    isShowRight: { default: true },\n    groupAuthByUser: { default: '' },\n    soundUrlObj: {\n      type: Object,\n      default: () => ({\n        image: require('../../../../assets/images/audio.png'),\n        id: ''\n      })\n    },\n    friendId: {\n      type: String,\n      default() {\n        return '';\n      }\n    }\n  },\n  watch: {\n    item: {\n      deep: true,\n      immediate: true,\n      handler: function (val) {\n        console.log('302val- ',val)\n\n        if (val.msgType == '10') {\n          let width = val.msgBody.firstFrame.width || val.msgBody.width;\n          let height = val.msgBody.firstFrame.height || val.msgBody.height;\n          const rate = width / height;\n          if (rate > 1) {\n            // 比例基 300px\n            val.msgBody.firstFrame.width = 250;\n            val.msgBody.firstFrame.height = 140;\n          } else {\n            val.msgBody.firstFrame.width = 140;\n            val.msgBody.firstFrame.height = 250;\n          }\n        }\n        this.messageItem = val;\n      }\n    },\n    soundUrlObj() {\n      if (this.messageItem.msgId !== this.soundUrlObj.id) {\n        this.soundUrl = require('../../../../assets/images/audio.png');\n      }\n      if (this.messageItem.msgId === this.soundUrlObj.id) {\n        this.soundUrl = this.soundUrlObj.image;\n      }\n    }\n  },\n  methods: {\n    replaceEmoji(newVal) {\n      let originText;\n      let arr;\n      if (newVal) {\n        originText = newVal;\n        arr = originText.match(this.patt);\n      }\n      if (arr && originText) {\n        for (let index = 0; index < arr.length; index++) {\n          let item = arr[index];\n          let ret = this.emojiList.find(x => x.tag == item);\n          if (ret) {\n            /*eslint max-len: [\"error\", { \"code\": 140 }]*/\n            let img = `<img src=\"/resources/emoji/${ret.file}\" width=22px style=\"vertical-align: middle;margin: -5px 2px 0 2px\" />`;\n            originText = originText.replace(item, img);\n          }\n        }\n      }\n      return originText;\n    },\n    showMergeTransferDialog() {\n      this.$nextTick(() => {\n        console.log('this.$refs.mergeTransfer ====== ', this.$refs.mergeTransferDialog);\n        this.$refs.mergeTransferDialog.onMergeTransferDisplay();\n      });\n    },\n    async lookcard(item) {\n      let msgBody;\n      if (item.msgBody instanceof Object) {\n        msgBody = item.msgBody;\n      } else {\n        msgBody = JSON.parse(item.msgBody);\n      }\n      if (msgBody.type == 1) {\n        //个人名片\n        this.cardDialogVisible = true;\n        this.cardUserId = msgBody.id;\n        this.$nextTick(() => {\n          this.$refs.memberCard.onCardShow();\n        });\n      } else {\n        this.groupCardInfo = await this.findGroupInfoInServer(msgBody.id);\n        if (this.groupCardInfo && this.groupCardInfo.id) {\n          this.$refs.groupCard.onPop();\n        } else {\n          const msg = this.$t('chat_0076');\n          this.openMessage(msg);\n        }\n      }\n    },\n    async findGroupInfoInServer(groupId) {\n      let groupInfo = {};\n      let res = await queryGroupByGroupId({ groupId });\n      if (res.code == 200) {\n        groupInfo = res.data;\n        if (groupInfo && groupInfo.country && groupInfo.city) {\n          groupInfo.countryName = await SQLUtils.getTAreaCountryOrCityName(groupInfo.country);\n          groupInfo.cityName = await SQLUtils.getTAreaCountryOrCityName(groupInfo.city);\n          groupInfo.region = groupInfo.countryName + '-' + groupInfo.cityName;\n        } else {\n          groupInfo.region = '';\n          groupInfo.country = '';\n          groupInfo.city = '';\n        }\n      }\n      return groupInfo;\n    },\n    handleclosecard() {\n      this.cardDialogVisible = false;\n    },\n    transferSuccess() {\n      this.cardDialogVisible = false;\n    },\n    // refreshDownloadPercentInStore() {\n    //   this.messageItem.msgBody.timer = setInterval(() => {\n    //     if (this.downloadFileInfo && this.downloadFileInfo[this.messageItem.msgBody.reqId]) {\n    //       this.messageItem.msgBody.downloadFinished = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished;\n    //       this.messageItem.msgBody.downloadPercent = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadPercent;\n    //       this.messageItem.msgBody.downloadPath = this.downloadFileInfo[this.messageItem.msgBody.reqId].downloadPath;\n    //     } else {\n    //       this.stopLoadDownloadPercent();\n    //     }\n    //     if (this.messageItem.msgBody.downloadFinished) {\n    //       this.stopLoadDownloadPercent();\n    //     }\n    //   }, 1000);\n    // },\n    // stopLoadDownloadPercent() {\n    //   clearInterval(this.messageItem.msgBody.timer);\n    //   this.messageItem.msgBody.timer = null;\n    // },\n    async downloadFile(fileItem) {\n      const fullPath = await fileOperational.downloadFile(fileItem.fileId, fileItem.fname);\n      let fileState = { key: fileItem.reqId, value: {} };\n      fileState.value.downloadPercent = '100%';\n      fileState.value.downloadPath = fullPath;\n      fileState.value.downloadFinished = true;\n      this.messageItem.msgBody.downloadPercent = '100%';\n      this.messageItem.msgBody.downloadPath = fullPath;\n      this.messageItem.msgBody.downloadFinished = true;\n      this.$store.commit('SET_DOWNLOAD_FILE_INFO', fileState);\n    },\n    async saveFileAs(fileItem) {\n      if (!fileItem.downloadPath) return;\n      let filePath = fileItem.downloadPath.replace('\\\\', '/');\n      console.log('file-path', filePath);\n      fs.exists(filePath, exists => {\n        if (!exists) {\n          this.$message.error(this.$t('chat_0097'));\n        } else {\n          const ipc = require('electron').ipcRenderer;\n          ipc.send('saveAsFile', fileItem);\n        }\n      });\n    },\n    debounce(fn, delay) {\n      delay = delay || 200;\n      let timer;\n      return function() {\n        let th = this;\n        let args = arguments;\n        if (timer) {\n          clearTimeout(timer);\n        }\n        timer = setTimeout(function() {\n          timer = null;\n          fn.apply(th, args);\n        }, delay);\n      };\n    },\n    startDownloadFile(fileItem) {\n      this.$refs.downloadbutton.style.visibility = 'hidden';\n      this.$nextTick(() => {\n        this.downFile(fileItem);\n      });\n    },\n    async downFile(fileItem) {\n      console.log('downFile--fileItem--', fileItem);\n      this.downloadLoading = true;\n      if (fileItem.downloadPercent == undefined || fileItem.downloadPercent == '') {\n        this.messageItem.msgBody.reqId = this.messageItem.reqId;\n        this.messageItem.msgBody.downloadPercent = '';\n        this.messageItem.msgBody.downloadFinished = false;\n        this.messageItem.msgBody.downloadPath = '';\n        fileItem.reqId = this.messageItem.reqId;\n        fileItem.downloadPercent = '';\n        fileItem.downloadFinished = false;\n        fileItem.downloadPath = '';\n      }\n      const percentFloat = fileItem.downloadPercent.slice(0, -1) / 100;\n      if (0 < percentFloat && percentFloat < 1) return;\n\n      let baseDir = path.join(configDir, 'files');\n      mkdir(baseDir);\n      let receivedBytes = 0;\n      let totalBytes = 0;\n      let fileName = fileItem.fname;\n      console.log('fileName', fileName);\n      let fullPath = '';\n      if (checkIsExists(baseDir, fileName)) {\n        let i = 1;\n        let suffixIndex = fileName.lastIndexOf('.');\n        console.log('suffixIndex', suffixIndex);\n        let fileNamePrefix = fileName.substr(0, suffixIndex);\n        console.log('fileNamePrefix', fileNamePrefix);\n        let fileNameSuffix = fileName.substr(suffixIndex);\n        console.log('fileNameSuffix', fileNameSuffix);\n        let isExistsFileName = fileNamePrefix\n          .concat('(')\n          .concat('' + i)\n          .concat(')')\n          .concat(fileNameSuffix);\n        console.log('isExistsFileName', isExistsFileName);\n        while (checkIsExists(baseDir, isExistsFileName)) {\n          ++i;\n          isExistsFileName = fileNamePrefix\n            .concat('(')\n            .concat('' + i)\n            .concat(')')\n            .concat(fileNameSuffix);\n          console.log('while-isExistsFileName', isExistsFileName);\n        }\n        fileName = isExistsFileName;\n      }\n\n      fullPath = path.join(baseDir, fileName);\n      console.log('fullPath', fullPath);\n\n      // let fileState = { key: fileItem.reqId, value: {} };\n      // console.log('fileState',fileState);\n      // fileState.value.downloadPercent = \"\";\n      // fileState.value.downloadFinished = false;\n      // fileState.value.downloadPath = \"\";\n      this.messageItem.msgBody.downloadPercent = '';\n      this.messageItem.msgBody.downloadFinished = false;\n      this.messageItem.msgBody.downloadPath = '';\n      // this.$store.commit(\"SET_DOWNLOAD_FILE_INFO\", fileState);\n      // this.refreshDownloadPercentInStore();\n\n      const req = request({\n        method: 'GET',\n        uri: fileItem.fileId,\n        strictSSL: false\n      });\n\n      req.pipe(fs.createWriteStream(fullPath));\n\n      req.on('response', data => {\n        console.log('response-data', data);\n        // 更新总文件字节大小\n        totalBytes = parseInt(data.headers['content-length'], 10);\n        console.log('response-totalBytes', totalBytes);\n        this.downloadLoading = false;\n      });\n\n      req.on('data', chunk => {\n        // 更新下载的文件块字节大小\n        receivedBytes += chunk.length;\n        fileItem.downloadPercent = ((receivedBytes / totalBytes) * 100).toFixed(0) + '%';\n        // this.$store.commit(\"SET_DOWNLOAD_FILE_INFO\", fileState);\n        this.downloadLoading = false;\n        this.$forceUpdate();\n      });\n      req.on('error', async () => {\n        // fileState.value.downloadPercent = \"\";\n        // fileState.value.downloadFinished = false;\n        // fileState.value.downloadPath = \"\";\n        fileItem.downloadPercent = '';\n        fileItem.downloadFinished = false;\n        fileItem.downloadPath = '';\n        this.downloadLoading = false;\n        // this.$store.commit(\"SET_DOWNLOAD_FILE_INFO\", fileState);\n        // await SQLUtils.updateDownloadFileMsgBody(fileState, this.friendId);\n      });\n      req.on('end', async () => {\n        // fileState.value.downloadPath = fullPath;\n        // fileState.value.downloadFinished = true;\n        this.$set(fileItem,'downloadPercent','100%')\n        this.$set(fileItem,'downloadFinished',true)\n        this.$set(fileItem,'downloadPath',fullPath)\n        fileItem.downloadPercent = '100%';\n        fileItem.downloadFinished = true;\n        fileItem.downloadPath = fullPath;\n        // this.$store.commit(\"SET_DOWNLOAD_FILE_INFO\", fileState);\n        // await SQLUtils.updateDownloadFileMsgBody(fileState, this.friendId);\n        this.updateMessageByMsgId(this.item,this.parentMsgId)\n        // const {isEqual} =require('lodash')\n        // console.info('原始入库消息id',this.parentMsgId)\n        // console.info(isEqual(this.item,this.messageItem))\n        // console.info(this.item,this.messageItem)\n        this.$forceUpdate();\n      });\n    },\n    /** 根据MSG ID 更新消息 */\n    async updateMessageByMsgId(msgInfo,parentMsgId) {\n      let tableName = `m_${this.$route.query.id}`;\n      let msg=await window.vm\n        .$knex(tableName)\n        .where({\n          msg_id: parentMsgId\n        })\n      let parentMsgBody=JSON.parse(msg[0].msg_body)\n      let obj=this.setMsgBody(parentMsgBody,msgInfo.reqId,msgInfo.msgBody)\n      await window.vm\n        .$knex(tableName)\n        .where({\n          msg_id: parentMsgId\n        })\n        .update({\n          msg_body: JSON.stringify(obj)\n        });\n      // console.info('已经更新:')\n      // let dd=await window.vm\n      // .$knex(tableName)\n      // .where({\n      //   msg_id: parentMsgId\n      // })\n      // console.info(JSON.parse(dd?.[0]?.msg_body))\n    },\n    setMsgBody(msgBody,reqId,msgInfoMsgBody){\n      if(msgBody?.msgs){\n        msgBody.msgs.forEach(a=>{\n          if(a?.reqId==reqId){\n            a.msgBody=msgInfoMsgBody\n          }else{\n            this.setMsgBody(a.msgBody,reqId,msgInfoMsgBody)\n          }\n        })\n      }\n      return msgBody\n    },\n    onOpenFile(item) {\n      if (!item.msgBody.downloadPercent && !item.msgBody.downloadFinished) {\n        this.downFile(item.msgBody);\n      }\n      if (item.msgBody.downloadFinished && this.isShowRight) {\n        this.openFile(item);\n      }\n    },\n    openFile(item) {\n      if (!item.msgBody.downloadPath) return;\n      let filePath = item.msgBody.downloadPath.replace('\\\\', '/');\n      fs.exists(filePath, exists => {\n        if (!exists) {\n          this.$message.error(this.$t('chat_0097'));\n        } else {\n          let path = item.msgBody.downloadPath.replace(/\\\\/g, '\\\\\\\\');\n          eShell.openPath(path);\n        }\n      });\n    },\n    findImage(item) {\n      const { localId } = item.msgBody;\n      item.msgBody.localId = fileOperational.getImage(item.msgBody.mediaId);\n      let W = item.msgBody.width;\n      let H = item.msgBody.height;\n      let R = W / H;\n      if (R > 3) {\n        if (W >= 120) {\n          this.rate = 'Hcale40Midwidth';\n        } else {\n          this.rate = 'Hcale3Midwidth';\n        }\n      }\n      if (1 <= R && R <= 3) {\n        if (W >= 120) {\n          this.rate = 'midwidth';\n        } else {\n          this.rate = 'origin';\n        }\n      }\n      if (1 / 3 <= R && R < 1) {\n        if (H >= 100) {\n          this.rate = 'midhight';\n        } else {\n          this.rate = 'origin';\n        }\n      }\n      if (R < 1 / 3) {\n        if (H >= 100) {\n          this.rate = 'Wcale30MidHight';\n        } else {\n          this.rate = 'Wcale3MidHight';\n        }\n      }\n      if (localId && checkIsExists(localId)) {\n        return item.msgBody.localId\n      }\n      return fileOperational.getImage(item.msgBody.mediaCondenseId);\n      // return fileOperational.getImage(item.msgBody.mediaId || item.msgBody.mediaCondenseId);\n    },\n    getFileType(format) {\n      if (format == 'zip' || format == 'rar' || format == 'pdf') {\n        return format;\n      } else if (format == 'doc' || format == 'docx') {\n        return 'word';\n      } else if (format == 'ppt' || format == 'pptx') {\n        return 'ppt';\n      } else if (format == 'xls' || format == 'xlsx' || format == 'csv') {\n        return 'excel';\n      } else if (format == 'txt') {\n        return 'txt';\n      } else {\n        return 'icon_un';\n      }\n    },\n    viewerShowChild(item) {\n      console.log('33333333')\n      this.$parent.viewerShow(item);\n    },\n    goActivityPage(msgInfo){\n      console.log(msgInfo)\n      goOfficialPage()\n      // msgInfo.msgBody?.url && eShell.openExternal(msgInfo.msgBody.url);\n    }\n    // initFile() {\n    //   if (this.messageItem.msgBody.downloadPercent == '100%' && this.messageItem.msgBody.downloadFinished) {\n    //     return;\n    //   }\n    //   let downloadFileInfo = store.state.common.downloadFile;\n    //   if (downloadFileInfo && downloadFileInfo[this.messageItem.msgBody.reqId]) {\n    //     this.messageItem.msgBody.downloadFinished = downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished;\n    //     this.messageItem.msgBody.downloadPercent = downloadFileInfo[this.messageItem.msgBody.reqId].downloadPercent;\n    //     this.messageItem.msgBody.downloadPath = downloadFileInfo[this.messageItem.msgBody.reqId].downloadPath;\n    //     this.refreshDownloadPercentInStore();\n    //     if (downloadFileInfo[this.messageItem.msgBody.reqId].downloadFinished) {\n    //       clearInterval(this.messageItem.msgBody.timer);\n    //       this.messageItem.msgBody.timer = null;\n    //     }\n    //   }\n    // }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.midwidth {\n  width: 120px;\n  object-fit: cover;\n  object-position: center;\n  height: auto;\n}\n.midhight {\n  height: 100px;\n  width: auto;\n  object-fit: cover;\n  object-position: center;\n}\n.Hcale40Midwidth {\n  height: 40px;\n  width: 120px;\n  object-fit: cover;\n  object-position: center;\n}\n.Wcale30MidHight {\n  width: 30px;\n  height: 100px;\n  object-fit: cover;\n  object-position: center;\n}\n\n.Hcale3Midwidth,\n.Wcale3MidHight {\n  object-fit: cover;\n  object-position: center;\n}\n.card {\n  width: 230px;\n  background: white;\n  padding: 5px;\n  p {\n    border-top: #eee solid 1px;\n    margin-top: 5px;\n    line-height: 20px;\n    padding-top: 5px;\n  }\n  .topitem {\n    padding-left: 20px;\n  }\n  .cardinfo {\n    display: flex;\n    width: 200px;\n\n    .cardName {\n      color: #333;\n      display: inline-block;\n      max-width: 140px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    img,\n    span {\n      vertical-align: middle;\n    }\n\n    img {\n      border: #ddd solid 1px;\n      width: 40px;\n      height: 40px;\n      border-radius: 20px;\n      display: inline-block;\n    }\n\n    span {\n      // padding-left: 20px;\n      line-height: 20px;\n    }\n  }\n}\n\n.file-title {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  display: -webkit-box;\n  line-clamp: 2;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  // font-size: 14px;\n  color: #000;\n  // line-height: 17px;\n}\n\n.file-size {\n  font-size: 12px !important;\n  color: #999 !important;\n}\n\n.videoStart {\n  position: absolute;\n  font-size: 40px;\n  color: whitesmoke;\n}\n.progress-mask {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, .5);\n}\n.mergeTransferClass {\n  font-size: 12px;\n  width: 220px;\n  cursor: pointer;\n  background: white;\n  padding: 10px;\n  .title {\n    font-weight: 500;\n    font-size: 13px;\n  }\n  .content {\n    color: #999999;\n    li {\n      span {\n        width: 220px;\n      }\n      .text {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        line-height: 20px;\n      }\n      .user-sign {\n        word-break: break-all;\n        font-size: 12px;\n        font-weight: 500;\n        color: rgba(153, 153, 153, 1);\n        line-height: 20px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: -webkit-box;\n        -webkit-line-clamp: 1;\n        -webkit-box-orient: vertical;\n        -webkit-box-flex: 1;\n      }\n    }\n  }\n  .mergeDivider {\n    margin: 1px 0;\n    background-color: #b7b7b7;\n  }\n}\n.load-border {\n  border-top: 1px solid #b7b7b7;\n  margin-top: 5px;\n  padding: 5px 0 0;\n  font-size: 12px;\n  color: #000;\n}\n.load-border span {\n  display: inline-block;\n  margin-left: 14px;\n}\n.fileBox {\n  width: 250px;\n  background: white;\n  padding: 5px;\n}\n.videoMsg {\n  position: relative;\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.videoShow {\n  max-width: 100%;\n  min-height: 100%;\n  &.height140 {\n    max-height: 140px;\n  }\n  &.height170 {\n    max-height: 170px;\n  }\n}\n.acitivity{\n  max-width: 200px;\n  padding: 7px 10px;\n  background:#fff;\n  border-radius: 10px;\n  font-family: PingFangSC, PingFangSC-Regular;\n  font-weight: 400;\n  img{\n    max-width: 100%;\n    display: block;\n  }\n  .title{\n    margin-top: 5px;\n    font-size: 14px; \n    color: #333333;\n    line-height: 20px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n  .content{\n    font-size: 12px;\n    text-align: left;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    color: #999999;\n    line-height: 17px;\n  }\n  .bottom{\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    margin-top: 5px;\n    img{\n      width: 16px;\n    }\n    p{\n      margin-left: 5px;\n      font-size: 11px;\n      text-align: left;\n      color: #999999;\n      line-height: 16px;\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".midwidth": {
          "width": "120px",
          "object-fit": "cover",
          "object-position": "center",
          "height": "auto"
        },
        ".midhight": {
          "height": "100px",
          "width": "auto",
          "object-fit": "cover",
          "object-position": "center"
        },
        ".Hcale40Midwidth": {
          "height": "40px",
          "width": "120px",
          "object-fit": "cover",
          "object-position": "center"
        },
        ".Wcale30MidHight": {
          "width": "30px",
          "height": "100px",
          "object-fit": "cover",
          "object-position": "center"
        },
        ".Hcale3Midwidth,.Wcale3MidHight": {
          "object-fit": "cover",
          "object-position": "center"
        },
        ".card": {
          "width": "230px",
          "background": "white",
          "padding": "5px",
          "p": {
            "border-top": "#eee solid 1px",
            "margin-top": "5px",
            "line-height": "20px",
            "padding-top": "5px"
          },
          ".topitem": {
            "padding-left": "20px"
          },
          ".cardinfo": {
            "display": "flex",
            "width": "200px",
            ".cardName": {
              "color": "#333",
              "display": "inline-block",
              "max-width": "140px",
              "overflow": "hidden",
              "text-overflow": "ellipsis",
              "white-space": "nowrap"
            },
            "img,    span": {
              "vertical-align": "middle"
            },
            "img": {
              "border": "#ddd solid 1px",
              "width": "40px",
              "height": "40px",
              "border-radius": "20px",
              "display": "inline-block"
            },
            "span": {
              "line-height": "20px"
            }
          }
        },
        ".file-title": {
          "text-overflow": "ellipsis",
          "overflow": "hidden",
          "display": "-webkit-box",
          "line-clamp": "2",
          "-webkit-line-clamp": "2",
          "-webkit-box-orient": "vertical",
          "color": "#000"
        },
        ".file-size": {
          "font-size": "12px !important",
          "color": "#999 !important"
        },
        ".videoStart": {
          "position": "absolute",
          "font-size": "40px",
          "color": "whitesmoke"
        },
        ".progress-mask": {
          "position": "absolute",
          "left": "0",
          "top": "0",
          "width": "100%",
          "height": "100%",
          "background": "rgba(0, 0, 0, .5)"
        },
        ".mergeTransferClass": {
          "font-size": "12px",
          "width": "220px",
          "cursor": "pointer",
          "background": "white",
          "padding": "10px",
          ".title": {
            "font-weight": "500",
            "font-size": "13px"
          },
          ".content": {
            "color": "#999999",
            "li": {
              "span": {
                "width": "220px"
              },
              ".text": {
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "white-space": "nowrap",
                "line-height": "20px"
              },
              ".user-sign": {
                "word-break": "break-all",
                "font-size": "12px",
                "font-weight": "500",
                "color": "rgba(153, 153, 153, 1)",
                "line-height": "20px",
                "overflow": "hidden",
                "text-overflow": "ellipsis",
                "display": "-webkit-box",
                "-webkit-line-clamp": "1",
                "-webkit-box-orient": "vertical",
                "-webkit-box-flex": "1"
              }
            }
          },
          ".mergeDivider": {
            "margin": "1px 0",
            "background-color": "#b7b7b7"
          }
        },
        ".load-border": {
          "border-top": "1px solid #b7b7b7",
          "margin-top": "5px",
          "padding": "5px 0 0",
          "font-size": "12px",
          "color": "#000"
        },
        ".load-border span": {
          "display": "inline-block",
          "margin-left": "14px"
        },
        ".fileBox": {
          "width": "250px",
          "background": "white",
          "padding": "5px"
        },
        ".videoMsg": {
          "position": "relative",
          "width": "fit-content",
          "display": "flex",
          "align-items": "center",
          "justify-content": "center"
        },
        ".videoShow": {
          "max-width": "100%",
          "min-height": "100%",
          "&.height140": {
            "max-height": "140px"
          },
          "&.height170": {
            "max-height": "170px"
          }
        },
        ".acitivity": {
          "max-width": "200px",
          "padding": "7px 10px",
          "background": "#fff",
          "border-radius": "10px",
          "font-family": "PingFangSC, PingFangSC-Regular",
          "font-weight": "400",
          "img": {
            "max-width": "100%",
            "display": "block"
          },
          ".title": {
            "margin-top": "5px",
            "font-size": "14px",
            "color": "#333333",
            "line-height": "20px",
            "overflow": "hidden",
            "text-overflow": "ellipsis",
            "display": "-webkit-box",
            "-webkit-line-clamp": "2",
            "line-clamp": "2",
            "-webkit-box-orient": "vertical"
          },
          ".content": {
            "font-size": "12px",
            "text-align": "left",
            "overflow": "hidden",
            "white-space": "nowrap",
            "text-overflow": "ellipsis",
            "color": "#999999",
            "line-height": "17px"
          },
          ".bottom": {
            "display": "flex",
            "align-items": "center",
            "justify-content": "flex-start",
            "margin-top": "5px",
            "img": {
              "width": "16px"
            },
            "p": {
              "margin-left": "5px",
              "font-size": "11px",
              "text-align": "left",
              "color": "#999999",
              "line-height": "16px"
            }
          }
        }
      }
    ]
  },
  {
    "type": "vue",
    "path": "/Users/wangliang/f_disk/work/extract-css/src/view/chat/components/common/MergeTransferDialog.vue",
    "tagInfo": {
      "0": "<style>",
      "1": "<style lang=\"less\" scoped>"
    },
    "importInfo": {},
    "keepContent": "<template>\n  <div>\n    <el-dialog\n      v-dialogDrag\n      :title=\"title ? $t('chat_0042',{user:title}) : $t('chat_0043')\"\n      @open=\"onOpen\"\n      :visible.sync=\"mergeTransferMessageVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      width=\"640px\"\n      custom-class=\"merge-transfer-el-dialog\"\n      center\n    >\n      <div class=\"share\">\n        <img src=\"../../../../assets/images/chat_record_share.png\" @click=\"shareToFriend\" />\n      </div>\n\n      <div class=\"flex flex-direction\">\n        <span class=\"content\">\n          <ul>\n            <li v-for=\"item in msgItem.msgBody.msgs\" :key=\"item.timestamp\">\n              <div class=\"itemClass\">\n                <DiDiServiceIcon v-if=\"isDiDiService(item.fromId)\" :id=\"item.fromId\" />\n                <MemberIcon\n                  v-else\n                  :image=\"item.fromIcon || require('../../../../assets/images/default.png')\"\n                  :userRank=\"+item.userRank\"\n                  :vipType=\"+item.vipType\"\n                  type=\"medium\"\n                />\n                <div class=\"itemDetail\">\n                  <div class=\"name-time\">\n                    <span class=\"name\">\n                      <span class=\"fromName blank\">{{ item.fromName || '' }}</span>\n\n                      <LuckIdIcon\n                        v-if=\"item.inviteCodeType == 1 && +item.userRank > 0\"\n                        :inviteCode=\"item.inviteCode\"\n                        :userRank=\"+item.userRank\"\n                        iconType=\"large\"\n                        :vipType=\"+item.vipType\"\n                        :inviteCodeType=\"+item.inviteCodeType\"\n                        :listFlag=\"false\"\n                        class=\"blank\"\n                      />\n                      <LevelIcon\n                        v-if=\"!isDiDiService(item.fromId) && +item.userRank > 0\"\n                        :inviteCode=\"item.inviteCode\"\n                        :userRank=\"+item.userRank\"\n                        iconType=\"large\"\n                        :vipType=\"+item.vipType\"\n                        :inviteCodeType=\"+item.inviteCodeType\"\n                      />\n                    </span>\n                    <span class=\"time\">{{ massageTime(item.timestamp) }}</span>\n                  </div>\n                  <div @click=\"clickItem(item)\">\n                    <MessageFormat v-bind:item=\"item\" :parentMsgId=\"parentMsgId\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </span>\n      </div>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"$t('Universal_0202')\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\n// import MessageFormat from \"@/view/chat/components/common/MessageFormat\";\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport DiDiServiceIcon from '@/view/chat/components/common/DiDiServiceIcon';\nimport moment from 'moment';\nimport { checkkArrProps } from \"@/utils\";\nexport default {\n  name: 'MergeTransferDialog',\n  components: {\n    GroupAndInviteChat,\n    MessageFormat: () => import('./MessageFormat'),\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n    DiDiServiceIcon\n  },\n  props: {\n    parentMsgId:{type:String},\n    title: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    msgItem: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      mergeTransferMessageVisible: false,\n      GroupInviteVisible: false\n    };\n  },\n  computed: {\n    massageTime() {\n      return timestamp => {\n        return moment(timestamp).format('MM-DD HH:mm');\n      };\n    },\n    isDiDiService() {\n      return id => {\n        return id == '1032384035881537536' || id == '1008455862495526912' || id == this.$paymentId;\n      };\n    }\n  },\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    getFileType(format) {\n      this.$parent.getFileType(format);\n    },\n    onMergeTransferDisplay() {\n      this.mergeTransferMessageVisible = true;\n    },\n    onClose() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onCancel() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onSubmit() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onOpen() {},\n    async shareToFriend() {\n      this.GroupInviteVisible = true;\n      console.log('shareToFriend ======= ', this.msgItem);\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.msgItem]);\n    },\n    getCardItem() {\n      return {};\n    },\n    confirmDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    cancelDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    transferSuccess() {\n      this.GroupInviteVisible = false;\n      this.cardDialogVisible = false;\n    },\n    clickItem(item) {\n      if (item.msgType == '2' || item.msgType == '10') {\n        this.viewerShow(item);\n      }\n    },\n    viewerShow(item) {\n      if (item.msgType == '2') {\n        let imglsitTmp;\n        imglsitTmp = this.msgItem.msgBody.msgs.filter(item => {\n          if (item.msgType == '2') {\n            return true;\n          }\n        });\n        imglsitTmp = imglsitTmp.map(item => {\n          let img = {};\n          img.url = item.msgBody.localId || item.msgBody.mediaId;\n          img.reqId = item.reqId;\n          img.msgBody = item.msgBody;\n          img.msgId = item.msgId;\n          img.fromId = item.fromId;\n          img.targetId = item.targetId;\n          return img;\n        });\n        let index = imglsitTmp.findIndex(img => {\n          return item.reqId == img.reqId;\n        });\n        this.$nextTick(() => {\n          this.openMediaViewer(item.msgType, imglsitTmp, index);\n        });\n      } else if (item.msgType == '10') {\n        this.$nextTick(() => {\n          const { ipcRenderer } = require('electron');\n          ipcRenderer.send('media-viewer', {\n            msgType: item.msgType,\n            item\n          });\n        });\n      }\n    },\n    openMediaViewer(msgType, imgList, index) {\n      const { ipcRenderer } = require('electron');\n      const flag = checkkArrProps(imgList, 'msgBody')\n      console.log('flag ====> imgList 存在undefind ', flag);\n      if (flag) {\n        ipcRenderer.send('media-viewer', { msgType, imgList, index });\n      }\n    }\n  }\n};\n</script>",
    "originData": "<template>\n  <div>\n    <el-dialog\n      v-dialogDrag\n      :title=\"title ? $t('chat_0042',{user:title}) : $t('chat_0043')\"\n      @open=\"onOpen\"\n      :visible.sync=\"mergeTransferMessageVisible\"\n      append-to-body\n      :modal-append-to-body=\"false\"\n      :modal=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      width=\"640px\"\n      custom-class=\"merge-transfer-el-dialog\"\n      center\n    >\n      <div class=\"share\">\n        <img src=\"../../../../assets/images/chat_record_share.png\" @click=\"shareToFriend\" />\n      </div>\n\n      <div class=\"flex flex-direction\">\n        <span class=\"content\">\n          <ul>\n            <li v-for=\"item in msgItem.msgBody.msgs\" :key=\"item.timestamp\">\n              <div class=\"itemClass\">\n                <DiDiServiceIcon v-if=\"isDiDiService(item.fromId)\" :id=\"item.fromId\" />\n                <MemberIcon\n                  v-else\n                  :image=\"item.fromIcon || require('../../../../assets/images/default.png')\"\n                  :userRank=\"+item.userRank\"\n                  :vipType=\"+item.vipType\"\n                  type=\"medium\"\n                />\n                <div class=\"itemDetail\">\n                  <div class=\"name-time\">\n                    <span class=\"name\">\n                      <span class=\"fromName blank\">{{ item.fromName || '' }}</span>\n\n                      <LuckIdIcon\n                        v-if=\"item.inviteCodeType == 1 && +item.userRank > 0\"\n                        :inviteCode=\"item.inviteCode\"\n                        :userRank=\"+item.userRank\"\n                        iconType=\"large\"\n                        :vipType=\"+item.vipType\"\n                        :inviteCodeType=\"+item.inviteCodeType\"\n                        :listFlag=\"false\"\n                        class=\"blank\"\n                      />\n                      <LevelIcon\n                        v-if=\"!isDiDiService(item.fromId) && +item.userRank > 0\"\n                        :inviteCode=\"item.inviteCode\"\n                        :userRank=\"+item.userRank\"\n                        iconType=\"large\"\n                        :vipType=\"+item.vipType\"\n                        :inviteCodeType=\"+item.inviteCodeType\"\n                      />\n                    </span>\n                    <span class=\"time\">{{ massageTime(item.timestamp) }}</span>\n                  </div>\n                  <div @click=\"clickItem(item)\">\n                    <MessageFormat v-bind:item=\"item\" :parentMsgId=\"parentMsgId\" />\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </span>\n      </div>\n    </el-dialog>\n    <GroupAndInviteChat\n      ref=\"groupInvite\"\n      :title=\"$t('Universal_0202')\"\n      :GroupInviteVisible.sync=\"GroupInviteVisible\"\n      @confirmDialogHand=\"confirmDialogHand\"\n      @cancelDialogHand=\"cancelDialogHand\"\n      @transferSuccess=\"transferSuccess\"\n    />\n  </div>\n</template>\n\n<script>\nimport fileOperational from '@/services/fileOperational';\nimport GroupAndInviteChat from '@/components/chat/GroupAndInviteChat';\n// import MessageFormat from \"@/view/chat/components/common/MessageFormat\";\nimport MemberIcon from '@/components/memberIcon/MemberIcon';\nimport LevelIcon from '@/components/memberIcon/LevelIcon';\nimport LuckIdIcon from '@/components/memberIcon/luckIdIcon';\nimport DiDiServiceIcon from '@/view/chat/components/common/DiDiServiceIcon';\nimport moment from 'moment';\nimport { checkkArrProps } from \"@/utils\";\nexport default {\n  name: 'MergeTransferDialog',\n  components: {\n    GroupAndInviteChat,\n    MessageFormat: () => import('./MessageFormat'),\n    MemberIcon,\n    LevelIcon,\n    LuckIdIcon,\n    DiDiServiceIcon\n  },\n  props: {\n    parentMsgId:{type:String},\n    title: {\n      type: String,\n      default() {\n        return '';\n      }\n    },\n    msgItem: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      mergeTransferMessageVisible: false,\n      GroupInviteVisible: false\n    };\n  },\n  computed: {\n    massageTime() {\n      return timestamp => {\n        return moment(timestamp).format('MM-DD HH:mm');\n      };\n    },\n    isDiDiService() {\n      return id => {\n        return id == '1032384035881537536' || id == '1008455862495526912' || id == this.$paymentId;\n      };\n    }\n  },\n  methods: {\n    findImage(image) {\n      return fileOperational.getImage(image);\n    },\n    getFileType(format) {\n      this.$parent.getFileType(format);\n    },\n    onMergeTransferDisplay() {\n      this.mergeTransferMessageVisible = true;\n    },\n    onClose() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onCancel() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onSubmit() {\n      this.mergeTransferMessageVisible = false;\n    },\n    onOpen() {},\n    async shareToFriend() {\n      this.GroupInviteVisible = true;\n      console.log('shareToFriend ======= ', this.msgItem);\n      await this.$store.commit('SET_TRANSFER_ITEM', [this.msgItem]);\n    },\n    getCardItem() {\n      return {};\n    },\n    confirmDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    cancelDialogHand() {\n      this.GroupInviteVisible = false;\n    },\n    transferSuccess() {\n      this.GroupInviteVisible = false;\n      this.cardDialogVisible = false;\n    },\n    clickItem(item) {\n      if (item.msgType == '2' || item.msgType == '10') {\n        this.viewerShow(item);\n      }\n    },\n    viewerShow(item) {\n      if (item.msgType == '2') {\n        let imglsitTmp;\n        imglsitTmp = this.msgItem.msgBody.msgs.filter(item => {\n          if (item.msgType == '2') {\n            return true;\n          }\n        });\n        imglsitTmp = imglsitTmp.map(item => {\n          let img = {};\n          img.url = item.msgBody.localId || item.msgBody.mediaId;\n          img.reqId = item.reqId;\n          img.msgBody = item.msgBody;\n          img.msgId = item.msgId;\n          img.fromId = item.fromId;\n          img.targetId = item.targetId;\n          return img;\n        });\n        let index = imglsitTmp.findIndex(img => {\n          return item.reqId == img.reqId;\n        });\n        this.$nextTick(() => {\n          this.openMediaViewer(item.msgType, imglsitTmp, index);\n        });\n      } else if (item.msgType == '10') {\n        this.$nextTick(() => {\n          const { ipcRenderer } = require('electron');\n          ipcRenderer.send('media-viewer', {\n            msgType: item.msgType,\n            item\n          });\n        });\n      }\n    },\n    openMediaViewer(msgType, imgList, index) {\n      const { ipcRenderer } = require('electron');\n      const flag = checkkArrProps(imgList, 'msgBody')\n      console.log('flag ====> imgList 存在undefind ', flag);\n      if (flag) {\n        ipcRenderer.send('media-viewer', { msgType, imgList, index });\n      }\n    }\n  }\n};\n</script>\n<style>\n.merge-transfer-el-dialog .el-dialog__header {\n  padding: 15px 0;\n}\n.merge-transfer-el-dialog {\n  border-radius: 10px;\n  background: #f8f8f8;\n  -webkit-app-region: no-drag;\n}\n.merge-transfer-el-dialog .el-dialog__header span {\n  font-size: 14px;\n  font-weight: 500;\n  color: #333333;\n  /*max-width: 450px;*/\n  /*display: inline-block;*/\n  /*overflow: hidden;*/\n  /*text-overflow: ellipsis;*/\n  /*white-space: nowrap;*/\n}\n.merge-transfer-el-dialog .el-dialog__body {\n  padding: 5px 20px;\n}\n</style>\n<style lang=\"less\" scoped>\n.merge-transfer-el-dialog {\n  position: relative;\n  .share {\n    position: absolute;\n    top: 20px;\n    left: 575px;\n    img {\n      width: 16px;\n      height: 16px;\n      cursor: pointer;\n    }\n  }\n  .content {\n    max-height: 400px;\n    overflow-y: scroll;\n    .fromIcon {\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n    }\n    .itemClass {\n      display: flex;\n      flex-direction: row;\n      padding: 10px 0;\n      .itemDetail {\n        display: flex;\n        flex-direction: column;\n        margin-left: 20px;\n        // width: 100%;\n        width: calc( 100% - 62px );\n        justify-content: space-evenly;\n        justify-content: space-evenly;\n        padding-bottom: 25px;\n        border-bottom: 1px solid #d8d8d8;\n        /deep/ .imgMsg>img{\n          max-width: 100%;\n        }\n        .name-time {\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n          padding-bottom: 5px;\n          // margin-right: 7px;\n          .name {\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            .fromName {\n              font-size: 14px;\n              color: #999999;\n            }\n            .blank {\n              padding-right: 5px;\n            }\n          }\n          .time {\n            font-size: 12px;\n            color: #999999;\n          }\n        }\n        .message-text {\n          color: #333333;\n        }\n      }\n\n      /deep/ .miniVip{\n        bottom: 0;\n        top: 26px;\n      }\n    }\n  }\n}\n</style>\n",
    "cssJson": [
      {
        ".merge-transfer-el-dialog .el-dialog__header": {
          "padding": "15px 0"
        },
        ".merge-transfer-el-dialog": {
          "border-radius": "10px",
          "background": "#f8f8f8",
          "-webkit-app-region": "no-drag"
        },
        ".merge-transfer-el-dialog .el-dialog__header span": {
          "font-size": "14px",
          "font-weight": "500",
          "color": "#333333"
        },
        ".merge-transfer-el-dialog .el-dialog__body": {
          "padding": "5px 20px"
        }
      },
      {
        ".merge-transfer-el-dialog": {
          "position": "relative",
          ".share": {
            "position": "absolute",
            "top": "20px",
            "left": "575px",
            "img": {
              "width": "16px",
              "height": "16px",
              "cursor": "pointer"
            }
          },
          ".content": {
            "max-height": "400px",
            "overflow-y": "scroll",
            ".fromIcon": {
              "width": "48px",
              "height": "48px",
              "border-radius": "50%"
            },
            ".itemClass": {
              "display": "flex",
              "flex-direction": "row",
              "padding": "10px 0",
              ".itemDetail": {
                "display": "flex",
                "flex-direction": "column",
                "margin-left": "20px",
                "width": "calc( 100% - 62px )",
                "justify-content": "space-evenly",
                "padding-bottom": "25px",
                "border-bottom": "1px solid #d8d8d8",
                "/deep/ .imgMsg>img": {
                  "max-width": "100%"
                },
                ".name-time": {
                  "display": "flex",
                  "flex-direction": "row",
                  "justify-content": "space-between",
                  "padding-bottom": "5px",
                  ".name": {
                    "display": "flex",
                    "flex-direction": "row",
                    "align-items": "center",
                    ".fromName": {
                      "font-size": "14px",
                      "color": "#999999"
                    },
                    ".blank": {
                      "padding-right": "5px"
                    }
                  },
                  ".time": {
                    "font-size": "12px",
                    "color": "#999999"
                  }
                },
                ".message-text": {
                  "color": "#333333"
                }
              },
              "/deep/ .miniVip": {
                "bottom": "0",
                "top": "26px"
              }
            }
          }
        }
      }
    ]
  }
]
